2025-01-14T13:07:26.4923958Z Requested labels: ubuntu-latest
2025-01-14T13:07:26.4924354Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2932/merge
2025-01-14T13:07:26.4924493Z Waiting for a runner to pick up this job...
2025-01-14T13:07:26.7263464Z Job is waiting for a hosted runner to come online.
2025-01-14T13:07:30.0158451Z Job is about to start running on the hosted runner: GitHub Actions 27 (hosted)
2025-01-14T13:07:31.7399560Z Current runner version: '2.321.0'
2025-01-14T13:07:31.7447784Z ##[group]Operating System
2025-01-14T13:07:31.7449034Z Ubuntu
2025-01-14T13:07:31.7449796Z 24.04.1
2025-01-14T13:07:31.7450522Z LTS
2025-01-14T13:07:31.7451368Z ##[endgroup]
2025-01-14T13:07:31.7452526Z ##[group]Runner Image
2025-01-14T13:07:31.7453369Z Image: ubuntu-24.04
2025-01-14T13:07:31.7454343Z Version: 20250105.1.0
2025-01-14T13:07:31.7456016Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-14T13:07:31.7458226Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-14T13:07:31.7459751Z ##[endgroup]
2025-01-14T13:07:31.7460574Z ##[group]Runner Image Provisioner
2025-01-14T13:07:31.7461478Z 2.0.414.1
2025-01-14T13:07:31.7462605Z ##[endgroup]
2025-01-14T13:07:31.7466154Z ##[group]GITHUB_TOKEN Permissions
2025-01-14T13:07:31.7468914Z Actions: read
2025-01-14T13:07:31.7470087Z Attestations: read
2025-01-14T13:07:31.7471044Z Checks: read
2025-01-14T13:07:31.7471525Z Contents: read
2025-01-14T13:07:31.7472332Z Deployments: read
2025-01-14T13:07:31.7472816Z Discussions: read
2025-01-14T13:07:31.7473317Z Issues: read
2025-01-14T13:07:31.7473863Z Metadata: read
2025-01-14T13:07:31.7474323Z Packages: read
2025-01-14T13:07:31.7474818Z Pages: read
2025-01-14T13:07:31.7475385Z PullRequests: read
2025-01-14T13:07:31.7475890Z RepositoryProjects: read
2025-01-14T13:07:31.7476447Z SecurityEvents: read
2025-01-14T13:07:31.7477032Z Statuses: read
2025-01-14T13:07:31.7477501Z ##[endgroup]
2025-01-14T13:07:31.7480854Z Secret source: None
2025-01-14T13:07:31.7482041Z Prepare workflow directory
2025-01-14T13:07:31.8127375Z Prepare all required actions
2025-01-14T13:07:31.8164221Z Getting action download info
2025-01-14T13:07:31.9873145Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-14T13:07:32.0746119Z Download action repository 'actions/upload-artifact@v4' (SHA:65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08)
2025-01-14T13:07:32.5668593Z Complete job name: not continuum ubuntu-latest 
2025-01-14T13:07:32.6333444Z ##[group]Run actions/checkout@v4
2025-01-14T13:07:32.6334285Z with:
2025-01-14T13:07:32.6334676Z   repository: tardis-sn/tardis
2025-01-14T13:07:32.6335374Z   token: ***
2025-01-14T13:07:32.6335755Z   ssh-strict: true
2025-01-14T13:07:32.6336145Z   ssh-user: git
2025-01-14T13:07:32.6336545Z   persist-credentials: true
2025-01-14T13:07:32.6336989Z   clean: true
2025-01-14T13:07:32.6337382Z   sparse-checkout-cone-mode: true
2025-01-14T13:07:32.6337887Z   fetch-depth: 1
2025-01-14T13:07:32.6338263Z   fetch-tags: false
2025-01-14T13:07:32.6338664Z   show-progress: true
2025-01-14T13:07:32.6339080Z   lfs: false
2025-01-14T13:07:32.6339451Z   submodules: false
2025-01-14T13:07:32.6339841Z   set-safe-directory: true
2025-01-14T13:07:32.6340477Z env:
2025-01-14T13:07:32.6340831Z   CACHE_NUMBER: 0
2025-01-14T13:07:32.6342154Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:32.6343484Z   CODECOV_TOKEN: 
2025-01-14T13:07:32.6343859Z ##[endgroup]
2025-01-14T13:07:32.8265591Z Syncing repository: tardis-sn/tardis
2025-01-14T13:07:32.8267584Z ##[group]Getting Git version info
2025-01-14T13:07:32.8268259Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-14T13:07:32.8269190Z [command]/usr/bin/git version
2025-01-14T13:07:32.8318215Z git version 2.47.1
2025-01-14T13:07:32.8346874Z ##[endgroup]
2025-01-14T13:07:32.8362676Z Temporarily overriding HOME='/home/runner/work/_temp/364fc42c-b992-49d2-98ed-7b7a48c8f14f' before making global git config changes
2025-01-14T13:07:32.8364165Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:07:32.8368253Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-14T13:07:32.8413762Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-14T13:07:32.8418456Z ##[group]Initializing the repository
2025-01-14T13:07:32.8423260Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-14T13:07:32.8493475Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-14T13:07:32.8495033Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-14T13:07:32.8496147Z hint: of your new repositories, which will suppress this warning, call:
2025-01-14T13:07:32.8497008Z hint:
2025-01-14T13:07:32.8497742Z hint: 	git config --global init.defaultBranch <name>
2025-01-14T13:07:32.8498718Z hint:
2025-01-14T13:07:32.8499285Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-14T13:07:32.8500183Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-14T13:07:32.8500925Z hint:
2025-01-14T13:07:32.8501309Z hint: 	git branch -m <name>
2025-01-14T13:07:32.8502243Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-14T13:07:32.8510199Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-14T13:07:32.8548103Z ##[endgroup]
2025-01-14T13:07:32.8549250Z ##[group]Disabling automatic garbage collection
2025-01-14T13:07:32.8552592Z [command]/usr/bin/git config --local gc.auto 0
2025-01-14T13:07:32.8584562Z ##[endgroup]
2025-01-14T13:07:32.8585611Z ##[group]Setting up auth
2025-01-14T13:07:32.8591933Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:07:32.8624539Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:07:32.8927146Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:07:32.9069312Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:07:32.9215499Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-14T13:07:32.9256544Z ##[endgroup]
2025-01-14T13:07:32.9257367Z ##[group]Fetching the repository
2025-01-14T13:07:32.9266267Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +5e624b97b9dba72acfc4d10a106406c6b2c83673:refs/remotes/pull/2932/merge
2025-01-14T13:07:34.0467178Z From https://github.com/tardis-sn/tardis
2025-01-14T13:07:34.0468441Z  * [new ref]         5e624b97b9dba72acfc4d10a106406c6b2c83673 -> pull/2932/merge
2025-01-14T13:07:34.0501193Z ##[endgroup]
2025-01-14T13:07:34.0502861Z ##[group]Determining the checkout info
2025-01-14T13:07:34.0504451Z ##[endgroup]
2025-01-14T13:07:34.0509516Z [command]/usr/bin/git sparse-checkout disable
2025-01-14T13:07:34.0555725Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-14T13:07:34.0590378Z ##[group]Checking out the ref
2025-01-14T13:07:34.0595531Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2932/merge
2025-01-14T13:07:34.2609895Z Note: switching to 'refs/remotes/pull/2932/merge'.
2025-01-14T13:07:34.2610742Z 
2025-01-14T13:07:34.2611264Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-14T13:07:34.2612647Z changes and commit them, and you can discard any commits you make in this
2025-01-14T13:07:34.2613874Z state without impacting any branches by switching back to a branch.
2025-01-14T13:07:34.2614578Z 
2025-01-14T13:07:34.2615094Z If you want to create a new branch to retain commits you create, you may
2025-01-14T13:07:34.2616196Z do so (now or later) by using -c with the switch command. Example:
2025-01-14T13:07:34.2616836Z 
2025-01-14T13:07:34.2617157Z   git switch -c <new-branch-name>
2025-01-14T13:07:34.2617691Z 
2025-01-14T13:07:34.2618007Z Or undo this operation with:
2025-01-14T13:07:34.2618478Z 
2025-01-14T13:07:34.2619162Z   git switch -
2025-01-14T13:07:34.2619564Z 
2025-01-14T13:07:34.2620172Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-14T13:07:34.2621036Z 
2025-01-14T13:07:34.2622090Z HEAD is now at 5e624b9 Merge 2b3dfd792246943c49c6c5deba46c01e3ba90810 into 2a06fdfb60190bbd9b49ff572d78772607138660
2025-01-14T13:07:34.2671447Z ##[endgroup]
2025-01-14T13:07:34.2675120Z [command]/usr/bin/git log -1 --format=%H
2025-01-14T13:07:34.2699406Z 5e624b97b9dba72acfc4d10a106406c6b2c83673
2025-01-14T13:07:34.3055920Z Prepare all required actions
2025-01-14T13:07:34.3057355Z Getting action download info
2025-01-14T13:07:34.4583016Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-14T13:07:34.5877783Z ##[group]Run ./.github/actions/setup_lfs
2025-01-14T13:07:34.5878127Z with:
2025-01-14T13:07:34.5878421Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-14T13:07:34.5878772Z env:
2025-01-14T13:07:34.5879018Z   CACHE_NUMBER: 0
2025-01-14T13:07:34.5879688Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:34.5880373Z   CODECOV_TOKEN: 
2025-01-14T13:07:34.5880593Z ##[endgroup]
2025-01-14T13:07:34.6010882Z ##[group]Run actions/checkout@v4
2025-01-14T13:07:34.6011185Z with:
2025-01-14T13:07:34.6011443Z   repository: tardis-sn/tardis-regression-data
2025-01-14T13:07:34.6011938Z   path: tardis-regression-data
2025-01-14T13:07:34.6012418Z   token: ***
2025-01-14T13:07:34.6012658Z   ssh-strict: true
2025-01-14T13:07:34.6012885Z   ssh-user: git
2025-01-14T13:07:34.6013126Z   persist-credentials: true
2025-01-14T13:07:34.6013378Z   clean: true
2025-01-14T13:07:34.6013623Z   sparse-checkout-cone-mode: true
2025-01-14T13:07:34.6013903Z   fetch-depth: 1
2025-01-14T13:07:34.6014129Z   fetch-tags: false
2025-01-14T13:07:34.6014363Z   show-progress: true
2025-01-14T13:07:34.6014599Z   lfs: false
2025-01-14T13:07:34.6014827Z   submodules: false
2025-01-14T13:07:34.6015076Z   set-safe-directory: true
2025-01-14T13:07:34.6015327Z env:
2025-01-14T13:07:34.6015527Z   CACHE_NUMBER: 0
2025-01-14T13:07:34.6016184Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:34.6016885Z   CODECOV_TOKEN: 
2025-01-14T13:07:34.6017116Z ##[endgroup]
2025-01-14T13:07:34.6961781Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-14T13:07:34.6969025Z ##[group]Getting Git version info
2025-01-14T13:07:34.6969972Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-14T13:07:34.7022203Z [command]/usr/bin/git version
2025-01-14T13:07:34.7060039Z git version 2.47.1
2025-01-14T13:07:34.7086686Z ##[endgroup]
2025-01-14T13:07:34.7101143Z Temporarily overriding HOME='/home/runner/work/_temp/4c187380-b04d-4e29-927c-a7f1063908c2' before making global git config changes
2025-01-14T13:07:34.7102865Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:07:34.7108018Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:07:34.7141022Z ##[group]Initializing the repository
2025-01-14T13:07:34.7146821Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:07:34.7183377Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-14T13:07:34.7184517Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-14T13:07:34.7185531Z hint: of your new repositories, which will suppress this warning, call:
2025-01-14T13:07:34.7186268Z hint:
2025-01-14T13:07:34.7186802Z hint: 	git config --global init.defaultBranch <name>
2025-01-14T13:07:34.7187433Z hint:
2025-01-14T13:07:34.7188050Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-14T13:07:34.7189024Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-14T13:07:34.7190148Z hint:
2025-01-14T13:07:34.7190585Z hint: 	git branch -m <name>
2025-01-14T13:07:34.7191769Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-14T13:07:34.7197652Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-14T13:07:34.7229088Z ##[endgroup]
2025-01-14T13:07:34.7229636Z ##[group]Disabling automatic garbage collection
2025-01-14T13:07:34.7234393Z [command]/usr/bin/git config --local gc.auto 0
2025-01-14T13:07:34.7262295Z ##[endgroup]
2025-01-14T13:07:34.7262727Z ##[group]Setting up auth
2025-01-14T13:07:34.7269886Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:07:34.7299781Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:07:34.7526663Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:07:34.7559923Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:07:34.7819317Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-14T13:07:34.7865458Z ##[endgroup]
2025-01-14T13:07:34.7871330Z ##[group]Determining the default branch
2025-01-14T13:07:34.7872046Z Retrieving the default branch name
2025-01-14T13:07:35.0315583Z Default branch 'main'
2025-01-14T13:07:35.0316989Z ##[endgroup]
2025-01-14T13:07:35.0317730Z ##[group]Fetching the repository
2025-01-14T13:07:35.0323908Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-14T13:07:35.4438942Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-14T13:07:35.4440265Z  * [new branch]      main       -> origin/main
2025-01-14T13:07:35.4465858Z ##[endgroup]
2025-01-14T13:07:35.4466499Z ##[group]Determining the checkout info
2025-01-14T13:07:35.4467502Z ##[endgroup]
2025-01-14T13:07:35.4473999Z [command]/usr/bin/git sparse-checkout disable
2025-01-14T13:07:35.4516635Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-14T13:07:35.4549566Z ##[group]Checking out the ref
2025-01-14T13:07:35.4555483Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-14T13:07:35.5887553Z Switched to a new branch 'main'
2025-01-14T13:07:35.5889789Z branch 'main' set up to track 'origin/main'.
2025-01-14T13:07:35.6173949Z ##[endgroup]
2025-01-14T13:07:35.6222399Z [command]/usr/bin/git log -1 --format=%H
2025-01-14T13:07:35.6248154Z fa7729bc9c30e14b69acd641af8b692b56fcd416
2025-01-14T13:07:35.6430408Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-14T13:07:35.6431008Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-14T13:07:35.6464429Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:07:35.6464763Z env:
2025-01-14T13:07:35.6464936Z   CACHE_NUMBER: 0
2025-01-14T13:07:35.6465537Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:35.6466203Z   CODECOV_TOKEN: 
2025-01-14T13:07:35.6466413Z ##[endgroup]
2025-01-14T13:07:35.7988356Z ##[group]Run actions/cache/restore@v4
2025-01-14T13:07:35.7988652Z with:
2025-01-14T13:07:35.7988860Z   path: tardis-regression-data/.git/lfs
2025-01-14T13:07:35.7989313Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-14T13:07:35.7989770Z   enableCrossOsArchive: false
2025-01-14T13:07:35.7990030Z   fail-on-cache-miss: false
2025-01-14T13:07:35.7990558Z   lookup-only: false
2025-01-14T13:07:35.8017952Z env:
2025-01-14T13:07:35.8018270Z   CACHE_NUMBER: 0
2025-01-14T13:07:35.8019209Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:35.8020178Z   CODECOV_TOKEN: 
2025-01-14T13:07:35.8020487Z ##[endgroup]
2025-01-14T13:07:37.1788034Z Received 192937984 of 1708418946 (11.3%), 183.8 MBs/sec
2025-01-14T13:07:38.1803159Z Received 448790528 of 1708418946 (26.3%), 213.7 MBs/sec
2025-01-14T13:07:39.1811241Z Received 696254464 of 1708418946 (40.8%), 221.1 MBs/sec
2025-01-14T13:07:40.1809216Z Received 973078528 of 1708418946 (57.0%), 231.8 MBs/sec
2025-01-14T13:07:41.1807537Z Received 1220542464 of 1708418946 (71.4%), 232.7 MBs/sec
2025-01-14T13:07:42.1811223Z Received 1459617792 of 1708418946 (85.4%), 231.9 MBs/sec
2025-01-14T13:07:43.1819123Z Received 1690304512 of 1708418946 (98.9%), 230.2 MBs/sec
2025-01-14T13:07:43.3963001Z Cache Size: ~1629 MB (1708418946 B)
2025-01-14T13:07:43.4005116Z [command]/usr/bin/tar -xf /home/runner/work/_temp/16cb76a3-154b-40d1-81ac-910574be8aac/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-14T13:07:44.1818000Z Received 1708418946 of 1708418946 (100.0%), 203.6 MBs/sec
2025-01-14T13:07:49.7704901Z Cache restored successfully
2025-01-14T13:07:50.0934076Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-14T13:07:50.1109323Z ##[group]Run git lfs checkout
2025-01-14T13:07:50.1109590Z [36;1mgit lfs checkout[0m
2025-01-14T13:07:50.1136441Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:07:50.1136762Z env:
2025-01-14T13:07:50.1136933Z   CACHE_NUMBER: 0
2025-01-14T13:07:50.1137524Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:50.1138140Z   CODECOV_TOKEN: 
2025-01-14T13:07:50.1138330Z ##[endgroup]
2025-01-14T13:08:00.1802961Z Checking out LFS objects: 100% (204/204), 3.5 GB | 352 MB/s, done.
2025-01-14T13:08:03.9013566Z Prepare all required actions
2025-01-14T13:08:03.9013920Z Getting action download info
2025-01-14T13:08:04.0190105Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-14T13:08:04.3712950Z ##[group]Run ./.github/actions/setup_env
2025-01-14T13:08:04.3713208Z with:
2025-01-14T13:08:04.3713386Z   os-label: linux-64
2025-01-14T13:08:04.3713571Z env:
2025-01-14T13:08:04.3713723Z   CACHE_NUMBER: 0
2025-01-14T13:08:04.3714314Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:04.3714940Z   CODECOV_TOKEN: 
2025-01-14T13:08:04.3715120Z ##[endgroup]
2025-01-14T13:08:04.3737596Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-14T13:08:04.3738146Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-14T13:08:04.3738616Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-14T13:08:04.3765593Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:08:04.3765924Z env:
2025-01-14T13:08:04.3766089Z   CACHE_NUMBER: 0
2025-01-14T13:08:04.3766747Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:04.3767470Z   CODECOV_TOKEN: 
2025-01-14T13:08:04.3767657Z ##[endgroup]
2025-01-14T13:08:04.4727896Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-14T13:08:04.4728159Z with:
2025-01-14T13:08:04.4728347Z   environment-file: conda-linux-64.lock
2025-01-14T13:08:04.4728755Z   cache-environment-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-14T13:08:04.4729319Z   cache-downloads-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-14T13:08:04.4729916Z   environment-name: tardis
2025-01-14T13:08:04.4730134Z   cache-environment: true
2025-01-14T13:08:04.4730355Z   cache-downloads: true
2025-01-14T13:08:04.4730551Z env:
2025-01-14T13:08:04.4730711Z   CACHE_NUMBER: 0
2025-01-14T13:08:04.4731297Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:04.4732149Z   CODECOV_TOKEN: 
2025-01-14T13:08:04.4732328Z ##[endgroup]
2025-01-14T13:08:04.6138137Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:04.6148653Z ##[group]Install micromamba
2025-01-14T13:08:04.9919248Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:04.9920160Z ##[endgroup]
2025-01-14T13:08:04.9920918Z Adding conda-forge to condarc channels ...
2025-01-14T13:08:04.9933325Z ##[group]Initialize micromamba for bash.
2025-01-14T13:08:04.9960294Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:05.0083919Z Modifying RC file "/home/runner/.bashrc"
2025-01-14T13:08:05.0085221Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-14T13:08:05.0086742Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-14T13:08:05.0087475Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-14T13:08:05.0087902Z 
2025-01-14T13:08:05.0088032Z # >>> mamba initialize >>>
2025-01-14T13:08:05.0088489Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-14T13:08:05.0089172Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-14T13:08:05.0089725Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-14T13:08:05.0090442Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-14T13:08:05.0091142Z if [ $? -eq 0 ]; then
2025-01-14T13:08:05.0091470Z     eval "$__mamba_setup"
2025-01-14T13:08:05.0092019Z else
2025-01-14T13:08:05.0092819Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-14T13:08:05.0093337Z fi
2025-01-14T13:08:05.0093575Z unset __mamba_setup
2025-01-14T13:08:05.0093769Z # <<< mamba initialize <<<
2025-01-14T13:08:05.0093898Z 
2025-01-14T13:08:05.0111296Z Moving mamba initialize block to .bash_profile
2025-01-14T13:08:05.0128193Z ##[endgroup]
2025-01-14T13:08:05.0129705Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-14T13:08:06.2378213Z Received 201326592 of 356800233 (56.4%), 191.8 MBs/sec
2025-01-14T13:08:06.8919295Z Cache Size: ~340 MB (356800233 B)
2025-01-14T13:08:06.8996156Z [command]/usr/bin/tar -xf /home/runner/work/_temp/63452e10-db21-491f-8282-5f0d3a866849/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-14T13:08:07.2390970Z Received 356800233 of 356800233 (100.0%), 170.0 MBs/sec
2025-01-14T13:08:07.3848046Z Cache restored successfully
2025-01-14T13:08:07.4580991Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64`
2025-01-14T13:08:07.4583386Z ##[endgroup]
2025-01-14T13:08:07.4594465Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-14T13:08:08.5828066Z Received 230686720 of 444592193 (51.9%), 219.3 MBs/sec
2025-01-14T13:08:09.3827011Z Cache Size: ~424 MB (444592193 B)
2025-01-14T13:08:09.3931265Z [command]/usr/bin/tar -xf /home/runner/work/_temp/bf434ed4-ef0c-41bb-af9e-a7c414edc40d/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-14T13:08:09.5838267Z Received 444592193 of 444592193 (100.0%), 211.6 MBs/sec
2025-01-14T13:08:14.8069165Z Cache restored successfully
2025-01-14T13:08:14.8817836Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-01-14T13:08:14.8819988Z ##[endgroup]
2025-01-14T13:08:14.8820333Z Adding environment tardis to auto-activate bash ...
2025-01-14T13:08:14.8829203Z Generating micromamba run shell.
2025-01-14T13:08:14.8846274Z ##[endgroup]
2025-01-14T13:08:14.8851143Z Set environment variables.
2025-01-14T13:08:14.8854800Z ##[group]micromamba info
2025-01-14T13:08:14.8859422Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-14T13:08:14.9088278Z 
2025-01-14T13:08:14.9088855Z        libmamba version : 1.5.10
2025-01-14T13:08:14.9089344Z      micromamba version : 1.5.10
2025-01-14T13:08:14.9090034Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-14T13:08:14.9090606Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-14T13:08:14.9091039Z        envs directories : /home/runner/micromamba/envs
2025-01-14T13:08:14.9091407Z           package cache : /home/runner/micromamba/pkgs
2025-01-14T13:08:14.9091976Z                           /home/runner/.mamba/pkgs
2025-01-14T13:08:14.9092263Z             environment : tardis
2025-01-14T13:08:14.9092556Z            env location : /home/runner/micromamba/envs/tardis
2025-01-14T13:08:14.9092880Z       user config files : /home/runner/.mambarc
2025-01-14T13:08:14.9093280Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:14.9093669Z        virtual packages : __unix=0=0
2025-01-14T13:08:14.9093933Z                           __linux=6.8.0=0
2025-01-14T13:08:14.9094190Z                           __glibc=2.39=0
2025-01-14T13:08:14.9094600Z                           __archspec=1=x86_64_v3
2025-01-14T13:08:14.9094987Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-14T13:08:14.9095381Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-14T13:08:14.9095714Z        base environment : /home/runner/micromamba
2025-01-14T13:08:14.9096015Z                platform : linux-64
2025-01-14T13:08:14.9105541Z ##[endgroup]
2025-01-14T13:08:14.9106900Z ##[group]micromamba list
2025-01-14T13:08:14.9108279Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-14T13:08:15.3015102Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-14T13:08:15.3015773Z 
2025-01-14T13:08:15.3016313Z   Name                           Version              Build                    Channel    
2025-01-14T13:08:15.3017418Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-14T13:08:15.3018309Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-14T13:08:15.3019047Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-14T13:08:15.3020131Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3046626Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3047492Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3048296Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-01-14T13:08:15.3048976Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3049573Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-01-14T13:08:15.3050265Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3051015Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3051894Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3052543Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3053522Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-14T13:08:15.3054094Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-14T13:08:15.3054652Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3055272Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-14T13:08:15.3055943Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3056568Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-01-14T13:08:15.3057159Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3057740Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3058380Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-01-14T13:08:15.3058959Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-01-14T13:08:15.3059492Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-14T13:08:15.3060065Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-01-14T13:08:15.3060742Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-01-14T13:08:15.3061448Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-14T13:08:15.3062349Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-14T13:08:15.3063019Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-14T13:08:15.3063645Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3064502Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-14T13:08:15.3065140Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3065747Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-14T13:08:15.3066305Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3066887Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3067450Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3068064Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-14T13:08:15.3068748Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-14T13:08:15.3069458Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-14T13:08:15.3077307Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3078005Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-14T13:08:15.3078579Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-14T13:08:15.3079177Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3079731Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3080269Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-14T13:08:15.3080835Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3102020Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3102879Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-14T13:08:15.3103307Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3103654Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-14T13:08:15.3104028Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-14T13:08:15.3104447Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-14T13:08:15.3104870Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-14T13:08:15.3105271Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-14T13:08:15.3105628Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-14T13:08:15.3106008Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-14T13:08:15.3106398Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-14T13:08:15.3106755Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-14T13:08:15.3107080Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3107399Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-14T13:08:15.3107722Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-14T13:08:15.3108042Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3108374Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-14T13:08:15.3108820Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-14T13:08:15.3109345Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-01-14T13:08:15.3109661Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-01-14T13:08:15.3109971Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-01-14T13:08:15.3110316Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-14T13:08:15.3110673Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-14T13:08:15.3111012Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-14T13:08:15.3111316Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-14T13:08:15.3111805Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3112125Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3112439Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-01-14T13:08:15.3112765Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-14T13:08:15.3113086Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-14T13:08:15.3113401Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-14T13:08:15.3113738Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3114090Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3114433Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3114757Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-14T13:08:15.3115253Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3115577Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3115961Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-14T13:08:15.3116371Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-14T13:08:15.3116771Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3117154Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3117515Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-14T13:08:15.3117854Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-14T13:08:15.3118214Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3118589Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3118947Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3119296Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3119619Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3119941Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3120282Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-01-14T13:08:15.3120639Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3121051Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3121834Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3122312Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3122686Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3123056Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-01-14T13:08:15.3123426Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3123796Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3124257Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3124666Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3125055Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3125479Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3125874Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3126240Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-14T13:08:15.3126582Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-01-14T13:08:15.3126912Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-14T13:08:15.3127243Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-14T13:08:15.3127576Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-14T13:08:15.3127909Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-14T13:08:15.3128365Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-14T13:08:15.3128681Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-14T13:08:15.3129013Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-01-14T13:08:15.3129386Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3129757Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3130113Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3130472Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-01-14T13:08:15.3130809Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-14T13:08:15.3131142Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-14T13:08:15.3131498Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-14T13:08:15.3132058Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-14T13:08:15.3132392Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-14T13:08:15.3132720Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-14T13:08:15.3133048Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-01-14T13:08:15.3133388Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-14T13:08:15.3133733Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-01-14T13:08:15.3134100Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-01-14T13:08:15.3134455Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-14T13:08:15.3134901Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-01-14T13:08:15.3135255Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-14T13:08:15.3135618Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-14T13:08:15.3135990Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-01-14T13:08:15.3136344Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-14T13:08:15.3136691Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-14T13:08:15.3137029Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-14T13:08:15.3137388Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-01-14T13:08:15.3137756Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-14T13:08:15.3138088Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-14T13:08:15.3138426Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-14T13:08:15.3138779Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-14T13:08:15.3139114Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-14T13:08:15.3139457Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-01-14T13:08:15.3139812Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-14T13:08:15.3140161Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-14T13:08:15.3140644Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-14T13:08:15.3140989Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-14T13:08:15.3141327Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-14T13:08:15.3141859Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-14T13:08:15.3142202Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-01-14T13:08:15.3142531Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-14T13:08:15.3142852Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-01-14T13:08:15.3143189Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-01-14T13:08:15.3143546Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-14T13:08:15.3143878Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-14T13:08:15.3144184Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-14T13:08:15.3144509Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-01-14T13:08:15.3144879Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-14T13:08:15.3145282Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3145653Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3145971Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-01-14T13:08:15.3146286Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-01-14T13:08:15.3146607Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3147056Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-14T13:08:15.3147433Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-14T13:08:15.3147794Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3148140Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3148484Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-14T13:08:15.3148844Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3149246Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-14T13:08:15.3149626Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3149980Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3150322Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-01-14T13:08:15.3150665Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3151016Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3151342Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-14T13:08:15.3151852Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3152209Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3152553Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-01-14T13:08:15.3153028Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-14T13:08:15.3153361Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-01-14T13:08:15.3153690Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3154027Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-14T13:08:15.3154361Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-01-14T13:08:15.3154699Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3155050Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3155387Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-14T13:08:15.3155734Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-01-14T13:08:15.3156091Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3156436Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-14T13:08:15.3156756Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3157088Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3157424Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3157743Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-01-14T13:08:15.3158076Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3158419Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-14T13:08:15.3158768Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-14T13:08:15.3159204Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3159525Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-14T13:08:15.3159905Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3160300Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3160646Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3160974Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3161332Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3161891Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-14T13:08:15.3162272Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-14T13:08:15.3162613Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-01-14T13:08:15.3162970Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-14T13:08:15.3163319Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3163658Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3163997Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-14T13:08:15.3164354Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-01-14T13:08:15.3164723Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3165063Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-01-14T13:08:15.3165552Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3165901Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-14T13:08:15.3166250Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3166596Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-14T13:08:15.3166937Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-01-14T13:08:15.3167270Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3167609Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3167995Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3168388Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3168758Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3169116Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-14T13:08:15.3169478Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3170329Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3171054Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3171907Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3172445Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-14T13:08:15.3172785Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3173276Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-14T13:08:15.3173618Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-14T13:08:15.3173943Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-14T13:08:15.3174301Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3174674Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-14T13:08:15.3175026Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3175390Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3175744Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3176119Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3176513Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-14T13:08:15.3176873Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-14T13:08:15.3177194Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-14T13:08:15.3177512Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-14T13:08:15.3177850Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-01-14T13:08:15.3178204Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3178568Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3178945Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-14T13:08:15.3179409Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-14T13:08:15.3179733Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3180069Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-14T13:08:15.3180398Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3180760Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3181125Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3181464Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3182326Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3182805Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-14T13:08:15.3183214Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3183606Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3184019Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3184415Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-14T13:08:15.3184810Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-14T13:08:15.3185251Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3185683Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3186113Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3186710Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3187147Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3187563Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3187986Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3188440Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3188862Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3189197Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-14T13:08:15.3189528Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3189876Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3190224Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-14T13:08:15.3190569Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3190907Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-14T13:08:15.3191221Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3191537Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3192198Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-01-14T13:08:15.3192537Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3192874Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3193378Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-14T13:08:15.3193778Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3194215Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-14T13:08:15.3194613Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-14T13:08:15.3194996Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3195343Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-14T13:08:15.3195696Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3196051Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3196390Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3196783Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3197142Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-14T13:08:15.3197528Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3197884Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-14T13:08:15.3198256Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3198642Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-01-14T13:08:15.3198997Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-01-14T13:08:15.3199340Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-01-14T13:08:15.3199804Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-14T13:08:15.3200165Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-01-14T13:08:15.3200525Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-01-14T13:08:15.3200893Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-14T13:08:15.3201267Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-14T13:08:15.3201802Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-01-14T13:08:15.3202190Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-01-14T13:08:15.3202550Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-01-14T13:08:15.3202888Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-14T13:08:15.3203200Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-14T13:08:15.3203520Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-14T13:08:15.3203841Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:08:15.3204152Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-01-14T13:08:15.3204466Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-01-14T13:08:15.3204782Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-14T13:08:15.3205318Z ##[endgroup]
2025-01-14T13:08:15.3238475Z ##[group]Run pip install -e . --user
2025-01-14T13:08:15.3238799Z [36;1mpip install -e . --user[0m
2025-01-14T13:08:15.3267718Z shell: /usr/bin/bash -l {0}
2025-01-14T13:08:15.3268091Z env:
2025-01-14T13:08:15.3268262Z   CACHE_NUMBER: 0
2025-01-14T13:08:15.3268874Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:15.3269527Z   CODECOV_TOKEN: 
2025-01-14T13:08:15.3269740Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-14T13:08:15.3270034Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:15.3270372Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:15.3270665Z ##[endgroup]
2025-01-14T13:08:15.9650290Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-14T13:08:15.9679430Z   Installing build dependencies: started
2025-01-14T13:08:19.0589116Z   Installing build dependencies: finished with status 'done'
2025-01-14T13:08:19.0594923Z   Checking if build backend supports build_editable: started
2025-01-14T13:08:19.1907700Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-14T13:08:19.1915117Z   Getting requirements to build editable: started
2025-01-14T13:08:19.6729455Z   Getting requirements to build editable: finished with status 'done'
2025-01-14T13:08:19.6738162Z   Preparing editable metadata (pyproject.toml): started
2025-01-14T13:08:20.1370740Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-14T13:08:20.2077762Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-14T13:08:20.2720233Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-14T13:08:20.2726480Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-14T13:08:20.2742756Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-14T13:08:20.2752366Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-14T13:08:20.2765978Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-14T13:08:20.2900296Z Building wheels for collected packages: tardis
2025-01-14T13:08:20.2913411Z   Building editable for tardis (pyproject.toml): started
2025-01-14T13:08:21.1348583Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-14T13:08:21.1357088Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8876 sha256=0f2be4c390874e5aeaee7e6e57b224e52d7a41c50325fc595a61a53d9061708c
2025-01-14T13:08:21.1358997Z   Stored in directory: /tmp/pip-ephem-wheel-cache-zd5_xrzu/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-14T13:08:21.1388914Z Successfully built tardis
2025-01-14T13:08:22.0198665Z Installing collected packages: tardis
2025-01-14T13:08:22.4077986Z Successfully installed tardis-0.0.0
2025-01-14T13:08:22.6807337Z ##[group]Run pip install qgridnext
2025-01-14T13:08:22.6807840Z [36;1mpip install qgridnext[0m
2025-01-14T13:08:22.6843068Z shell: /usr/bin/bash -l {0}
2025-01-14T13:08:22.6843422Z env:
2025-01-14T13:08:22.6843710Z   CACHE_NUMBER: 0
2025-01-14T13:08:22.6844748Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:22.6845857Z   CODECOV_TOKEN: 
2025-01-14T13:08:22.6846223Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-14T13:08:22.6846741Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:22.6847319Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:22.6848227Z ##[endgroup]
2025-01-14T13:08:23.3581339Z Collecting qgridnext
2025-01-14T13:08:23.4265896Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-14T13:08:23.4355597Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-14T13:08:23.4364385Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-14T13:08:23.4372744Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-14T13:08:23.4382426Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-14T13:08:23.4471216Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-14T13:08:23.4479522Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-14T13:08:23.4492268Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-14T13:08:23.4510806Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-14T13:08:23.4525591Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-14T13:08:23.4981423Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-14T13:08:23.4994779Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-14T13:08:23.5002631Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-14T13:08:23.5327709Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-14T13:08:23.5345347Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-14T13:08:23.5354168Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-14T13:08:23.5365986Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-14T13:08:23.5375235Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-14T13:08:23.5384541Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-14T13:08:23.5404263Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-14T13:08:23.5456888Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-14T13:08:23.5516349Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-14T13:08:23.5711137Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-14T13:08:23.5864946Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-14T13:08:23.5878365Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-14T13:08:23.5893640Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-14T13:08:23.5903797Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-14T13:08:23.5911976Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-14T13:08:23.5943431Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-14T13:08:23.5972768Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-14T13:08:23.6116512Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-14T13:08:23.6126219Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-14T13:08:23.6133652Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-14T13:08:23.6589088Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-14T13:08:23.6599288Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-14T13:08:23.6608639Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-14T13:08:23.6620626Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-14T13:08:23.6632771Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-14T13:08:23.6645160Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-14T13:08:23.6659467Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-14T13:08:23.6673506Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-14T13:08:23.6683986Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-14T13:08:23.6693218Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-14T13:08:23.6703022Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-14T13:08:23.6711427Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-14T13:08:23.6722068Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-14T13:08:23.6730903Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-14T13:08:23.6742563Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-14T13:08:23.6759436Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-14T13:08:23.7052763Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-14T13:08:23.7064112Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-14T13:08:23.7075969Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-14T13:08:23.7089688Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-14T13:08:23.7115828Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-14T13:08:23.7310155Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-14T13:08:23.7337276Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-14T13:08:23.7348099Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-14T13:08:23.7366543Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-14T13:08:23.7728892Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-14T13:08:23.7737676Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-14T13:08:23.7838468Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-14T13:08:23.8016481Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-14T13:08:23.8031472Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-14T13:08:23.8114473Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-14T13:08:23.8307948Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-14T13:08:23.8328888Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-14T13:08:23.8343525Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-14T13:08:23.8408919Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-14T13:08:23.8605329Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-14T13:08:23.8615671Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-14T13:08:23.8624302Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-14T13:08:23.8633125Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-14T13:08:23.8914644Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-14T13:08:23.9074907Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-14T13:08:23.9083876Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-14T13:08:23.9094993Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-14T13:08:23.9104432Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-14T13:08:23.9539154Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-14T13:08:23.9558854Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-14T13:08:23.9573988Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-14T13:08:23.9589244Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-14T13:08:23.9602253Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-14T13:08:23.9615323Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-14T13:08:23.9633676Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-14T13:08:23.9644463Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:08:23.9768473Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-14T13:08:24.0089454Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-14T13:08:24.0104935Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-14T13:08:24.0915491Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-14T13:08:24.1502653Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-14T13:08:24.1519230Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-14T13:08:24.1532573Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-14T13:08:24.1548313Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:08:24.1562002Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-14T13:08:24.2608324Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-14T13:08:24.2710532Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-14T13:08:24.3244321Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-14T13:08:24.3771202Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:08:24.4090550Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-14T13:08:24.4508224Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-14T13:08:24.5475148Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 13.4 MB/s eta 0:00:00
2025-01-14T13:08:25.3645891Z Installing collected packages: qgridnext
2025-01-14T13:08:25.4556898Z Successfully installed qgridnext-2.0.4
2025-01-14T13:08:25.6993405Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-14T13:08:25.6995648Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-14T13:08:25.7033050Z shell: /usr/bin/bash -l {0}
2025-01-14T13:08:25.7033298Z env:
2025-01-14T13:08:25.7033472Z   CACHE_NUMBER: 0
2025-01-14T13:08:25.7034093Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:25.7034737Z   CODECOV_TOKEN: 
2025-01-14T13:08:25.7034955Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-14T13:08:25.7035254Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-14T13:08:25.7035662Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:25.7035965Z ##[endgroup]
2025-01-14T13:08:34.5221124Z ============================= test session starts ==============================
2025-01-14T13:08:34.5222038Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-14T13:08:34.5222584Z rootdir: /home/runner/work/tardis/tardis
2025-01-14T13:08:34.5222985Z configfile: pyproject.toml
2025-01-14T13:08:34.5223489Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-14T13:08:34.5224089Z collected 1796 items / 2 deselected / 1794 selected
2025-01-14T13:08:34.5224394Z 
2025-01-14T13:08:39.7614162Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-14T13:08:42.8644570Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-14T13:08:44.5552482Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-14T13:08:46.3973298Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-14T13:08:46.4065941Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-14T13:08:47.7380539Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-14T13:08:48.0832184Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-14T13:08:48.0848516Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-14T13:08:51.6870260Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-14T13:08:51.7001193Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-14T13:08:51.7276687Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-14T13:09:31.7366854Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-14T13:09:31.7514715Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-14T13:09:31.7630724Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-14T13:09:31.7953902Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-14T13:09:31.8181193Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-14T13:09:32.1396492Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-14T13:09:32.4686221Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-14T13:09:32.4879404Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-14T13:09:32.6846897Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-14T13:09:32.6916815Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-14T13:09:46.5898968Z tardis/model/tests/test_base.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 10%]
2025-01-14T13:09:48.8272642Z EEEEEEEEEEEE                                                             [ 10%]
2025-01-14T13:09:51.9757920Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-14T13:09:52.4001072Z tardis/model/tests/test_density.py EE                                    [ 11%]
2025-01-14T13:09:53.9376558Z tardis/opacities/tests/test_opacity_solver.py EEEEE                      [ 11%]
2025-01-14T13:09:55.2696142Z tardis/opacities/tests/test_opacity_state_numba.py EEEEE                 [ 11%]
2025-01-14T13:09:56.5056893Z tardis/opacities/tests/test_tau_sobolev.py EE                            [ 12%]
2025-01-14T13:09:59.3231161Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-14T13:10:45.4254449Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-14T13:10:57.0253185Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-14T13:10:58.5198608Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-14T13:11:01.5623790Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-14T13:11:03.4091297Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-14T13:11:06.4479179Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-14T13:11:09.4867841Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-14T13:11:10.2864172Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-14T13:11:13.3317795Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-14T13:11:16.3414977Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-14T13:11:19.5354028Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-14T13:11:21.4376205Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-14T13:11:24.9272693Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-14T13:11:28.2417630Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-14T13:11:28.5900081Z ...................s.....s....ssss.......                                [ 60%]
2025-01-14T13:11:37.7038962Z tardis/plasma/tests/test_hdf_plasma.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 62%]
2025-01-14T13:11:39.6713310Z EEEEEE                                                                   [ 62%]
2025-01-14T13:11:39.8085772Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-14T13:14:09.0463585Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-14T13:14:09.0491455Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-14T13:14:33.1257394Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-14T13:14:46.5272599Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-14T13:14:47.2916627Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-14T13:14:53.4168452Z tardis/simulation/tests/test_simulation.py EEEEEEEEEE...                 [ 65%]
2025-01-14T13:14:53.4361048Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-14T13:14:53.9443773Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-14T13:14:53.9520165Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-14T13:14:55.6205278Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-14T13:14:55.6442980Z ..........                                                               [ 69%]
2025-01-14T13:14:55.8234021Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-14T13:14:55.8590981Z .........                                                                [ 72%]
2025-01-14T13:14:59.0133507Z tardis/spectrum/tests/test_spectrum_solver.py EEEE                       [ 72%]
2025-01-14T13:15:05.8925734Z tardis/tests/test_tardis_full.py FEEE                                    [ 72%]
2025-01-14T13:15:18.0494785Z tardis/tests/test_tardis_full_formal_integral.py EEEEEEEEEEEEEEEE        [ 73%]
2025-01-14T13:15:18.1247549Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-14T13:15:22.5361809Z tardis/transport/montecarlo/tests/test_base.py xEEEEEEEEEEEEEEEEEEEEE    [ 77%]
2025-01-14T13:15:25.0179082Z tardis/transport/montecarlo/tests/test_interaction.py EEEEEEE            [ 77%]
2025-01-14T13:15:25.2542222Z tardis/transport/montecarlo/tests/test_macro_atom.py EEEE                [ 77%]
2025-01-14T13:15:25.2723017Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-14T13:15:25.3142455Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-14T13:15:30.2120466Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-14T13:15:30.2190073Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-14T13:15:30.6873254Z tardis/transport/montecarlo/tests/test_numba_interface.py EEEEExE        [ 82%]
2025-01-14T13:15:31.1771161Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-14T13:15:34.8050208Z tardis/transport/montecarlo/tests/test_packet.py .................xxxxxX [ 84%]
2025-01-14T13:15:35.9191069Z XXEEEEEEEEE                                                              [ 84%]
2025-01-14T13:15:35.9479767Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-14T13:15:36.3166245Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-14T13:16:12.4462501Z .FFFF                                                                    [ 85%]
2025-01-14T13:16:19.9623438Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py .FFFEE         [ 85%]
2025-01-14T13:16:20.1322959Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-14T13:16:22.2482859Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-14T13:16:22.9501923Z tardis/transport/montecarlo/tests/test_vpacket.py EExE                   [ 86%]
2025-01-14T13:16:22.9680047Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-14T13:16:25.3853821Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-14T13:16:25.3856158Z                                                                          [ 86%]
2025-01-14T13:16:26.3357500Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-14T13:16:27.7159172Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-14T13:16:30.4476942Z ......                                                                   [ 88%]
2025-01-14T13:16:33.8363185Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-14T13:16:36.0597661Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-14T13:16:37.7585151Z tardis/visualization/tools/tests/test_rpacket_plot.py EEEEEEEEEEEEEEEEEE [ 92%]
2025-01-14T13:16:38.2787910Z EEEE                                                                     [ 92%]
2025-01-14T13:16:42.0563034Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-14T13:16:44.3435750Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-14T13:16:44.7904608Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-14T13:16:44.8644505Z ....                                                                     [ 96%]
2025-01-14T13:16:51.9777509Z tardis/visualization/widgets/tests/test_line_info.py EEEEEEEEEEEEEEEEEEE [ 97%]
2025-01-14T13:17:00.1912887Z EEEEEEEEEEEEEEEEEE                                                       [ 98%]
2025-01-14T13:17:09.0913474Z tardis/visualization/widgets/tests/test_shell_info.py EEEEEEEEEEEEEEEEEE [ 99%]
2025-01-14T13:17:20.8219021Z EEEEEE                                                                   [100%]
2025-01-14T13:17:20.8220932Z 
2025-01-14T13:17:20.8221385Z ==================================== ERRORS ====================================
2025-01-14T13:17:20.8222339Z _________ ERROR at setup of TestModelFromPaper1Config.test_abundances __________
2025-01-14T13:17:20.8222857Z 
2025-01-14T13:17:20.8224123Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8226191Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8226984Z 
2025-01-14T13:17:20.8227218Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8227837Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8228447Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8229105Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8229737Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8230154Z >       sim.run_final()
2025-01-14T13:17:20.8230365Z 
2025-01-14T13:17:20.8230515Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8231167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8232064Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8232862Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8233623Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8234499Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8235397Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8235787Z 
2025-01-14T13:17:20.8236494Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8237698Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8238818Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8240030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8241250Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8242369Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8242885Z 
2025-01-14T13:17:20.8243085Z     def initialize_transport_state(
2025-01-14T13:17:20.8243736Z         self,
2025-01-14T13:17:20.8264588Z         simulation_state,
2025-01-14T13:17:20.8265006Z         opacity_state,
2025-01-14T13:17:20.8265385Z         macro_atom_state,
2025-01-14T13:17:20.8265749Z         plasma,
2025-01-14T13:17:20.8266075Z         no_of_packets,
2025-01-14T13:17:20.8266434Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8266817Z         iteration=0,
2025-01-14T13:17:20.8267468Z     ):
2025-01-14T13:17:20.8267856Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8268404Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8268833Z         else:
2025-01-14T13:17:20.8269152Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8269525Z     
2025-01-14T13:17:20.8269922Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8270493Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8270938Z         )
2025-01-14T13:17:20.8271226Z     
2025-01-14T13:17:20.8271817Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8272417Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8273308Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8273884Z         else:
2025-01-14T13:17:20.8274205Z             continuum_state = None
2025-01-14T13:17:20.8274657Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8275188Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8275688Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8276180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8276681Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8277180Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8277662Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8278093Z         ).to_numba(
2025-01-14T13:17:20.8278433Z             macro_atom_state,
2025-01-14T13:17:20.8278834Z             self.line_interaction_type,
2025-01-14T13:17:20.8279244Z         )
2025-01-14T13:17:20.8279596Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8280422Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8281182Z         ]
2025-01-14T13:17:20.8282111Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8282829Z 
2025-01-14T13:17:20.8283109Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8283829Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.8284899Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.8286217Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.8287274Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.8288916Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.8290329Z _________ ERROR at setup of TestModelFromPaper1Config.test_velocities __________
2025-01-14T13:17:20.8290833Z 
2025-01-14T13:17:20.8292174Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8294142Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8294943Z 
2025-01-14T13:17:20.8295110Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8295685Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8296289Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8296909Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8297537Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8297952Z >       sim.run_final()
2025-01-14T13:17:20.8298174Z 
2025-01-14T13:17:20.8298318Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8298975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8299508Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8300086Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8300661Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8301248Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8302111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8302467Z 
2025-01-14T13:17:20.8302951Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8304145Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8305071Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8306131Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8307084Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8307783Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8308182Z 
2025-01-14T13:17:20.8308333Z     def initialize_transport_state(
2025-01-14T13:17:20.8308734Z         self,
2025-01-14T13:17:20.8309055Z         simulation_state,
2025-01-14T13:17:20.8309415Z         opacity_state,
2025-01-14T13:17:20.8309759Z         macro_atom_state,
2025-01-14T13:17:20.8310100Z         plasma,
2025-01-14T13:17:20.8310407Z         no_of_packets,
2025-01-14T13:17:20.8310753Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8311140Z         iteration=0,
2025-01-14T13:17:20.8311466Z     ):
2025-01-14T13:17:20.8312128Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8312676Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8313129Z         else:
2025-01-14T13:17:20.8313444Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8313826Z     
2025-01-14T13:17:20.8314228Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8314782Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8315212Z         )
2025-01-14T13:17:20.8315484Z     
2025-01-14T13:17:20.8315861Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8316431Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8317044Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8317590Z         else:
2025-01-14T13:17:20.8317911Z             continuum_state = None
2025-01-14T13:17:20.8318366Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8318898Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8319398Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8319884Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8320385Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8320868Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8321328Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8321923Z         ).to_numba(
2025-01-14T13:17:20.8322246Z             macro_atom_state,
2025-01-14T13:17:20.8322649Z             self.line_interaction_type,
2025-01-14T13:17:20.8323066Z         )
2025-01-14T13:17:20.8323424Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8324247Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8325014Z         ]
2025-01-14T13:17:20.8325739Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8326447Z 
2025-01-14T13:17:20.8326720Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8327461Z __________ ERROR at setup of TestModelFromPaper1Config.test_densities __________
2025-01-14T13:17:20.8328161Z 
2025-01-14T13:17:20.8329314Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8331276Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8332239Z 
2025-01-14T13:17:20.8332401Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8332968Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8333746Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8334371Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8335039Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8335462Z >       sim.run_final()
2025-01-14T13:17:20.8335695Z 
2025-01-14T13:17:20.8335838Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8336265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8336791Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8337361Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8337922Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8338497Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8339518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8339889Z 
2025-01-14T13:17:20.8340364Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8341364Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8342451Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8343533Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8344480Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8345173Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8345572Z 
2025-01-14T13:17:20.8345731Z     def initialize_transport_state(
2025-01-14T13:17:20.8346131Z         self,
2025-01-14T13:17:20.8346442Z         simulation_state,
2025-01-14T13:17:20.8346808Z         opacity_state,
2025-01-14T13:17:20.8347152Z         macro_atom_state,
2025-01-14T13:17:20.8347499Z         plasma,
2025-01-14T13:17:20.8347806Z         no_of_packets,
2025-01-14T13:17:20.8348157Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8348562Z         iteration=0,
2025-01-14T13:17:20.8348884Z     ):
2025-01-14T13:17:20.8349271Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8349782Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8350217Z         else:
2025-01-14T13:17:20.8350519Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8350880Z     
2025-01-14T13:17:20.8351264Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8351968Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8352403Z         )
2025-01-14T13:17:20.8352678Z     
2025-01-14T13:17:20.8353068Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8353654Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8354266Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8354817Z         else:
2025-01-14T13:17:20.8355143Z             continuum_state = None
2025-01-14T13:17:20.8355593Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8356097Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8356595Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8357075Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8357793Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8358278Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8358749Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8359176Z         ).to_numba(
2025-01-14T13:17:20.8359506Z             macro_atom_state,
2025-01-14T13:17:20.8359904Z             self.line_interaction_type,
2025-01-14T13:17:20.8360316Z         )
2025-01-14T13:17:20.8360653Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8361466Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8362403Z         ]
2025-01-14T13:17:20.8363299Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8364014Z 
2025-01-14T13:17:20.8364275Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8365041Z _______ ERROR at setup of TestModelFromPaper1Config.test_time_explosion ________
2025-01-14T13:17:20.8365544Z 
2025-01-14T13:17:20.8366712Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8368676Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8369483Z 
2025-01-14T13:17:20.8369648Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8370214Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8370818Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8371442Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8372253Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8372697Z >       sim.run_final()
2025-01-14T13:17:20.8372913Z 
2025-01-14T13:17:20.8373065Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8373490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8374021Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8374583Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8375145Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8375722Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8376338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8376700Z 
2025-01-14T13:17:20.8377186Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8378191Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8379099Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8380153Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8381094Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8381918Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8382317Z 
2025-01-14T13:17:20.8382476Z     def initialize_transport_state(
2025-01-14T13:17:20.8382880Z         self,
2025-01-14T13:17:20.8383196Z         simulation_state,
2025-01-14T13:17:20.8383564Z         opacity_state,
2025-01-14T13:17:20.8383913Z         macro_atom_state,
2025-01-14T13:17:20.8384262Z         plasma,
2025-01-14T13:17:20.8384573Z         no_of_packets,
2025-01-14T13:17:20.8384932Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8385310Z         iteration=0,
2025-01-14T13:17:20.8385628Z     ):
2025-01-14T13:17:20.8386002Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8386538Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8387167Z         else:
2025-01-14T13:17:20.8387478Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8387842Z     
2025-01-14T13:17:20.8388233Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8389120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8389563Z         )
2025-01-14T13:17:20.8389841Z     
2025-01-14T13:17:20.8390229Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8390808Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8391419Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8392120Z         else:
2025-01-14T13:17:20.8392659Z             continuum_state = None
2025-01-14T13:17:20.8393117Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8393628Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8394126Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8394633Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8395141Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8395628Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8396101Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8396524Z         ).to_numba(
2025-01-14T13:17:20.8396839Z             macro_atom_state,
2025-01-14T13:17:20.8397227Z             self.line_interaction_type,
2025-01-14T13:17:20.8397631Z         )
2025-01-14T13:17:20.8397965Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8398789Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8399558Z         ]
2025-01-14T13:17:20.8400273Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8400988Z 
2025-01-14T13:17:20.8401254Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8402183Z _________ ERROR at setup of TestModelFromASCIIDensity.test_velocities __________
2025-01-14T13:17:20.8402684Z 
2025-01-14T13:17:20.8403850Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8405856Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8406661Z 
2025-01-14T13:17:20.8406826Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8407401Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8407997Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8408609Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8409228Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8409642Z >       sim.run_final()
2025-01-14T13:17:20.8409858Z 
2025-01-14T13:17:20.8410005Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8410430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8410946Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8411514Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8412240Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8412830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8413460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8413829Z 
2025-01-14T13:17:20.8414321Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8415315Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8416453Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8417496Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8418450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8419142Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8419541Z 
2025-01-14T13:17:20.8419703Z     def initialize_transport_state(
2025-01-14T13:17:20.8420107Z         self,
2025-01-14T13:17:20.8420402Z         simulation_state,
2025-01-14T13:17:20.8420756Z         opacity_state,
2025-01-14T13:17:20.8421097Z         macro_atom_state,
2025-01-14T13:17:20.8421445Z         plasma,
2025-01-14T13:17:20.8422099Z         no_of_packets,
2025-01-14T13:17:20.8422465Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8422853Z         iteration=0,
2025-01-14T13:17:20.8423178Z     ):
2025-01-14T13:17:20.8423560Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8424104Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8424528Z         else:
2025-01-14T13:17:20.8424837Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8425207Z     
2025-01-14T13:17:20.8425601Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8426153Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8426578Z         )
2025-01-14T13:17:20.8426847Z     
2025-01-14T13:17:20.8427221Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8427794Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8428410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8428960Z         else:
2025-01-14T13:17:20.8429279Z             continuum_state = None
2025-01-14T13:17:20.8429729Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8430239Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8430741Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8431243Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8431908Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8432386Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8432847Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8433280Z         ).to_numba(
2025-01-14T13:17:20.8433602Z             macro_atom_state,
2025-01-14T13:17:20.8433993Z             self.line_interaction_type,
2025-01-14T13:17:20.8434392Z         )
2025-01-14T13:17:20.8434771Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8435600Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8436366Z         ]
2025-01-14T13:17:20.8437079Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8437802Z 
2025-01-14T13:17:20.8438055Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8438793Z _________ ERROR at setup of TestModelFromASCIIDensity.test_abundances __________
2025-01-14T13:17:20.8439285Z 
2025-01-14T13:17:20.8440430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8442586Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8443398Z 
2025-01-14T13:17:20.8443580Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8444147Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8444740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8445359Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8446191Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8446610Z >       sim.run_final()
2025-01-14T13:17:20.8446828Z 
2025-01-14T13:17:20.8446977Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8447407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8447927Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8448495Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8449059Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8449634Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8450420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8450785Z 
2025-01-14T13:17:20.8451261Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8452422Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8453363Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8454428Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8455377Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8456049Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8456445Z 
2025-01-14T13:17:20.8456601Z     def initialize_transport_state(
2025-01-14T13:17:20.8456999Z         self,
2025-01-14T13:17:20.8457304Z         simulation_state,
2025-01-14T13:17:20.8457656Z         opacity_state,
2025-01-14T13:17:20.8458014Z         macro_atom_state,
2025-01-14T13:17:20.8458370Z         plasma,
2025-01-14T13:17:20.8458681Z         no_of_packets,
2025-01-14T13:17:20.8459031Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8459413Z         iteration=0,
2025-01-14T13:17:20.8459727Z     ):
2025-01-14T13:17:20.8460116Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8460655Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8461081Z         else:
2025-01-14T13:17:20.8461389Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8461895Z     
2025-01-14T13:17:20.8462291Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8462849Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8463274Z         )
2025-01-14T13:17:20.8463544Z     
2025-01-14T13:17:20.8463916Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8464495Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8465125Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8465669Z         else:
2025-01-14T13:17:20.8465990Z             continuum_state = None
2025-01-14T13:17:20.8466442Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8466969Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8467459Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8467945Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8468449Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8468925Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8469382Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8469803Z         ).to_numba(
2025-01-14T13:17:20.8470129Z             macro_atom_state,
2025-01-14T13:17:20.8470525Z             self.line_interaction_type,
2025-01-14T13:17:20.8470930Z         )
2025-01-14T13:17:20.8471267Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8472240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8473007Z         ]
2025-01-14T13:17:20.8473716Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8474666Z 
2025-01-14T13:17:20.8474930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8475661Z _________ ERROR at setup of TestModelFromArtisDensity.test_velocities __________
2025-01-14T13:17:20.8476159Z 
2025-01-14T13:17:20.8477323Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8479287Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8480356Z 
2025-01-14T13:17:20.8480529Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8481090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8481864Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8482510Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8483127Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8483554Z >       sim.run_final()
2025-01-14T13:17:20.8483774Z 
2025-01-14T13:17:20.8483923Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8484354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8484876Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8485429Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8485990Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8486566Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8487185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8487544Z 
2025-01-14T13:17:20.8488031Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8489118Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8490041Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8491079Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8492223Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8492902Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8493289Z 
2025-01-14T13:17:20.8493463Z     def initialize_transport_state(
2025-01-14T13:17:20.8493865Z         self,
2025-01-14T13:17:20.8494176Z         simulation_state,
2025-01-14T13:17:20.8494548Z         opacity_state,
2025-01-14T13:17:20.8494892Z         macro_atom_state,
2025-01-14T13:17:20.8495241Z         plasma,
2025-01-14T13:17:20.8495553Z         no_of_packets,
2025-01-14T13:17:20.8495907Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8496305Z         iteration=0,
2025-01-14T13:17:20.8496624Z     ):
2025-01-14T13:17:20.8496984Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8497523Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8497997Z         else:
2025-01-14T13:17:20.8498303Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8498664Z     
2025-01-14T13:17:20.8499049Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8499611Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8500045Z         )
2025-01-14T13:17:20.8500330Z     
2025-01-14T13:17:20.8500768Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8501362Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8502143Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8502689Z         else:
2025-01-14T13:17:20.8502989Z             continuum_state = None
2025-01-14T13:17:20.8503429Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8504235Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8504738Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8505216Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8505720Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8506203Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8506672Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8507103Z         ).to_numba(
2025-01-14T13:17:20.8507436Z             macro_atom_state,
2025-01-14T13:17:20.8507832Z             self.line_interaction_type,
2025-01-14T13:17:20.8508243Z         )
2025-01-14T13:17:20.8508771Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8509602Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8510376Z         ]
2025-01-14T13:17:20.8511079Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8511954Z 
2025-01-14T13:17:20.8512224Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8512965Z _________ ERROR at setup of TestModelFromArtisDensity.test_abundances __________
2025-01-14T13:17:20.8513463Z 
2025-01-14T13:17:20.8514617Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8516571Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8517357Z 
2025-01-14T13:17:20.8517525Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8518158Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8518762Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8519394Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8520019Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8520437Z >       sim.run_final()
2025-01-14T13:17:20.8520650Z 
2025-01-14T13:17:20.8520793Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8521219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8521907Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8522473Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8523034Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8523619Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8524230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8524589Z 
2025-01-14T13:17:20.8525066Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8526072Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8526982Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8528034Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8528963Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8529659Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8530054Z 
2025-01-14T13:17:20.8530216Z     def initialize_transport_state(
2025-01-14T13:17:20.8530635Z         self,
2025-01-14T13:17:20.8530960Z         simulation_state,
2025-01-14T13:17:20.8531321Z         opacity_state,
2025-01-14T13:17:20.8531850Z         macro_atom_state,
2025-01-14T13:17:20.8532182Z         plasma,
2025-01-14T13:17:20.8532369Z         no_of_packets,
2025-01-14T13:17:20.8532567Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8532956Z         iteration=0,
2025-01-14T13:17:20.8533136Z     ):
2025-01-14T13:17:20.8533359Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8533677Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8533918Z         else:
2025-01-14T13:17:20.8534100Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8534306Z     
2025-01-14T13:17:20.8534533Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8534891Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8535134Z         )
2025-01-14T13:17:20.8535294Z     
2025-01-14T13:17:20.8535522Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8535964Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8536321Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8536629Z         else:
2025-01-14T13:17:20.8536814Z             continuum_state = None
2025-01-14T13:17:20.8537083Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8537378Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8537663Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8537943Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8538231Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8538503Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8538766Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8539006Z         ).to_numba(
2025-01-14T13:17:20.8539195Z             macro_atom_state,
2025-01-14T13:17:20.8539422Z             self.line_interaction_type,
2025-01-14T13:17:20.8539661Z         )
2025-01-14T13:17:20.8539857Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8540308Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8540739Z         ]
2025-01-14T13:17:20.8541135Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8541516Z 
2025-01-14T13:17:20.8541870Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8542314Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_velocities _____
2025-01-14T13:17:20.8542607Z 
2025-01-14T13:17:20.8543241Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8544307Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8544738Z 
2025-01-14T13:17:20.8544829Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8545152Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8545488Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8545831Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8546178Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8546411Z >       sim.run_final()
2025-01-14T13:17:20.8546534Z 
2025-01-14T13:17:20.8546621Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8546863Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8547164Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8547482Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8547799Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8548134Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8548474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8548668Z 
2025-01-14T13:17:20.8549058Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8549620Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8550119Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8550695Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8551205Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8551778Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8552010Z 
2025-01-14T13:17:20.8552105Z     def initialize_transport_state(
2025-01-14T13:17:20.8552460Z         self,
2025-01-14T13:17:20.8552650Z         simulation_state,
2025-01-14T13:17:20.8552855Z         opacity_state,
2025-01-14T13:17:20.8553050Z         macro_atom_state,
2025-01-14T13:17:20.8553255Z         plasma,
2025-01-14T13:17:20.8553450Z         no_of_packets,
2025-01-14T13:17:20.8553655Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8553873Z         iteration=0,
2025-01-14T13:17:20.8554055Z     ):
2025-01-14T13:17:20.8554269Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8554575Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8554815Z         else:
2025-01-14T13:17:20.8554991Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8555198Z     
2025-01-14T13:17:20.8555419Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8555727Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8555966Z         )
2025-01-14T13:17:20.8556125Z     
2025-01-14T13:17:20.8556350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8556672Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8557011Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8557316Z         else:
2025-01-14T13:17:20.8557497Z             continuum_state = None
2025-01-14T13:17:20.8557752Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8558035Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8558309Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8558581Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8558862Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8559134Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8559393Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8559626Z         ).to_numba(
2025-01-14T13:17:20.8559814Z             macro_atom_state,
2025-01-14T13:17:20.8560042Z             self.line_interaction_type,
2025-01-14T13:17:20.8560270Z         )
2025-01-14T13:17:20.8560468Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8560914Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8561341Z         ]
2025-01-14T13:17:20.8562015Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8562708Z 
2025-01-14T13:17:20.8562960Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8563691Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_abundances _____
2025-01-14T13:17:20.8564169Z 
2025-01-14T13:17:20.8564807Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8565864Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8566292Z 
2025-01-14T13:17:20.8566382Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8566853Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8567188Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8567534Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8567877Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8568111Z >       sim.run_final()
2025-01-14T13:17:20.8568231Z 
2025-01-14T13:17:20.8568318Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8568559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8568850Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8569162Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8569584Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8570148Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8570734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8570973Z 
2025-01-14T13:17:20.8571236Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8571976Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8572484Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8573060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8573572Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8573954Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8574172Z 
2025-01-14T13:17:20.8574273Z     def initialize_transport_state(
2025-01-14T13:17:20.8574502Z         self,
2025-01-14T13:17:20.8574679Z         simulation_state,
2025-01-14T13:17:20.8574882Z         opacity_state,
2025-01-14T13:17:20.8575077Z         macro_atom_state,
2025-01-14T13:17:20.8575278Z         plasma,
2025-01-14T13:17:20.8575460Z         no_of_packets,
2025-01-14T13:17:20.8575663Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8575881Z         iteration=0,
2025-01-14T13:17:20.8576063Z     ):
2025-01-14T13:17:20.8576289Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8576590Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8576837Z         else:
2025-01-14T13:17:20.8577018Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8577224Z     
2025-01-14T13:17:20.8577445Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8577755Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8577996Z         )
2025-01-14T13:17:20.8578160Z     
2025-01-14T13:17:20.8578378Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8578755Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8579338Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8579858Z         else:
2025-01-14T13:17:20.8580156Z             continuum_state = None
2025-01-14T13:17:20.8580486Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8580776Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8581049Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8581323Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8581779Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8582064Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8582331Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8582568Z         ).to_numba(
2025-01-14T13:17:20.8582761Z             macro_atom_state,
2025-01-14T13:17:20.8582984Z             self.line_interaction_type,
2025-01-14T13:17:20.8583224Z         )
2025-01-14T13:17:20.8583421Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8583879Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8584466Z         ]
2025-01-14T13:17:20.8584870Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8585251Z 
2025-01-14T13:17:20.8585405Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8585848Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_velocities __
2025-01-14T13:17:20.8586152Z 
2025-01-14T13:17:20.8586900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8588228Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8588940Z 
2025-01-14T13:17:20.8589034Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8589355Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8589694Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8590037Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8590379Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8590613Z >       sim.run_final()
2025-01-14T13:17:20.8590734Z 
2025-01-14T13:17:20.8590820Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8591062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8591354Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8591859Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8592181Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8592507Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8592845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8593050Z 
2025-01-14T13:17:20.8593313Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8593864Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8594371Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8594952Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8595465Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8595846Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8596068Z 
2025-01-14T13:17:20.8596163Z     def initialize_transport_state(
2025-01-14T13:17:20.8596395Z         self,
2025-01-14T13:17:20.8596628Z         simulation_state,
2025-01-14T13:17:20.8623695Z         opacity_state,
2025-01-14T13:17:20.8624065Z         macro_atom_state,
2025-01-14T13:17:20.8624416Z         plasma,
2025-01-14T13:17:20.8624710Z         no_of_packets,
2025-01-14T13:17:20.8625049Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8625287Z         iteration=0,
2025-01-14T13:17:20.8625466Z     ):
2025-01-14T13:17:20.8625681Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8625986Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8626343Z         else:
2025-01-14T13:17:20.8626640Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8626986Z     
2025-01-14T13:17:20.8627323Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8627646Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8627889Z         )
2025-01-14T13:17:20.8628043Z     
2025-01-14T13:17:20.8628256Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8628575Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8629075Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8629374Z         else:
2025-01-14T13:17:20.8629551Z             continuum_state = None
2025-01-14T13:17:20.8629801Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8630083Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8630355Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8630621Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8630898Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8631163Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8631417Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8631991Z         ).to_numba(
2025-01-14T13:17:20.8632196Z             macro_atom_state,
2025-01-14T13:17:20.8632421Z             self.line_interaction_type,
2025-01-14T13:17:20.8632646Z         )
2025-01-14T13:17:20.8632840Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8633307Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8633727Z         ]
2025-01-14T13:17:20.8634122Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8634513Z 
2025-01-14T13:17:20.8634720Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8635499Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_abundances __
2025-01-14T13:17:20.8635953Z 
2025-01-14T13:17:20.8636605Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8637665Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8638106Z 
2025-01-14T13:17:20.8638202Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8638525Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8638861Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8639212Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8639565Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8639803Z >       sim.run_final()
2025-01-14T13:17:20.8639931Z 
2025-01-14T13:17:20.8640014Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8640260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8640565Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8640889Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8641207Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8641534Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8641992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8642187Z 
2025-01-14T13:17:20.8642462Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8643014Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8643521Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8644456Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8645163Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8645555Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8645778Z 
2025-01-14T13:17:20.8645868Z     def initialize_transport_state(
2025-01-14T13:17:20.8646101Z         self,
2025-01-14T13:17:20.8646283Z         simulation_state,
2025-01-14T13:17:20.8646624Z         opacity_state,
2025-01-14T13:17:20.8646819Z         macro_atom_state,
2025-01-14T13:17:20.8647013Z         plasma,
2025-01-14T13:17:20.8647197Z         no_of_packets,
2025-01-14T13:17:20.8647403Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8647622Z         iteration=0,
2025-01-14T13:17:20.8647808Z     ):
2025-01-14T13:17:20.8648030Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8648339Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8648586Z         else:
2025-01-14T13:17:20.8648768Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8648977Z     
2025-01-14T13:17:20.8649202Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8649631Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8649882Z         )
2025-01-14T13:17:20.8650045Z     
2025-01-14T13:17:20.8650263Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8650577Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8650930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8651238Z         else:
2025-01-14T13:17:20.8651422Z             continuum_state = None
2025-01-14T13:17:20.8651821Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8652323Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8652801Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8653158Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8653446Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8653728Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8653995Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8654235Z         ).to_numba(
2025-01-14T13:17:20.8654427Z             macro_atom_state,
2025-01-14T13:17:20.8654652Z             self.line_interaction_type,
2025-01-14T13:17:20.8654884Z         )
2025-01-14T13:17:20.8655084Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8655539Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8655969Z         ]
2025-01-14T13:17:20.8656370Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8656752Z 
2025-01-14T13:17:20.8656907Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8657327Z __________ ERROR at setup of TestModelFromUniformDensity.test_density __________
2025-01-14T13:17:20.8657596Z 
2025-01-14T13:17:20.8658237Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8659290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8659722Z 
2025-01-14T13:17:20.8659812Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8660128Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8660460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8660840Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8661415Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8661936Z >       sim.run_final()
2025-01-14T13:17:20.8662142Z 
2025-01-14T13:17:20.8662287Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8662547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8662841Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8663156Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8663469Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8663964Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8664305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8664501Z 
2025-01-14T13:17:20.8664764Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8665313Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8665964Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8666554Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8667176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8667577Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8667794Z 
2025-01-14T13:17:20.8667888Z     def initialize_transport_state(
2025-01-14T13:17:20.8668116Z         self,
2025-01-14T13:17:20.8668304Z         simulation_state,
2025-01-14T13:17:20.8668509Z         opacity_state,
2025-01-14T13:17:20.8668705Z         macro_atom_state,
2025-01-14T13:17:20.8668900Z         plasma,
2025-01-14T13:17:20.8669085Z         no_of_packets,
2025-01-14T13:17:20.8669359Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8669734Z         iteration=0,
2025-01-14T13:17:20.8670038Z     ):
2025-01-14T13:17:20.8670398Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8670705Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8670937Z         else:
2025-01-14T13:17:20.8671111Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8671322Z     
2025-01-14T13:17:20.8671697Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8672052Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8672297Z         )
2025-01-14T13:17:20.8672457Z     
2025-01-14T13:17:20.8672676Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8673006Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8673349Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8673650Z         else:
2025-01-14T13:17:20.8673835Z             continuum_state = None
2025-01-14T13:17:20.8674089Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8674376Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8674652Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8674928Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8675216Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8675502Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8675765Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8676007Z         ).to_numba(
2025-01-14T13:17:20.8676199Z             macro_atom_state,
2025-01-14T13:17:20.8676421Z             self.line_interaction_type,
2025-01-14T13:17:20.8676648Z         )
2025-01-14T13:17:20.8676835Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8677293Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8677712Z         ]
2025-01-14T13:17:20.8678108Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8678638Z 
2025-01-14T13:17:20.8678890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8679576Z ____ ERROR at setup of TestModelFromInitialTinner.test_initial_temperature _____
2025-01-14T13:17:20.8679862Z 
2025-01-14T13:17:20.8680502Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8681827Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8682260Z 
2025-01-14T13:17:20.8682361Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8682679Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8683009Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8683360Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8683705Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8683945Z >       sim.run_final()
2025-01-14T13:17:20.8684068Z 
2025-01-14T13:17:20.8684156Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8684523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8684826Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8685140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8685459Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8685780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8686120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8686315Z 
2025-01-14T13:17:20.8686578Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8687474Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8688158Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8688741Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8689259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8689637Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8689852Z 
2025-01-14T13:17:20.8689947Z     def initialize_transport_state(
2025-01-14T13:17:20.8690180Z         self,
2025-01-14T13:17:20.8690357Z         simulation_state,
2025-01-14T13:17:20.8690565Z         opacity_state,
2025-01-14T13:17:20.8690760Z         macro_atom_state,
2025-01-14T13:17:20.8690956Z         plasma,
2025-01-14T13:17:20.8691141Z         no_of_packets,
2025-01-14T13:17:20.8691339Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8691651Z         iteration=0,
2025-01-14T13:17:20.8691835Z     ):
2025-01-14T13:17:20.8692048Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8692347Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8692584Z         else:
2025-01-14T13:17:20.8692761Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8692974Z     
2025-01-14T13:17:20.8693203Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8693523Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8693763Z         )
2025-01-14T13:17:20.8693922Z     
2025-01-14T13:17:20.8694145Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8694465Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8694808Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8695109Z         else:
2025-01-14T13:17:20.8695288Z             continuum_state = None
2025-01-14T13:17:20.8695539Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8695991Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8696461Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8696883Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8697173Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8697462Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8697726Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8697968Z         ).to_numba(
2025-01-14T13:17:20.8698158Z             macro_atom_state,
2025-01-14T13:17:20.8698516Z             self.line_interaction_type,
2025-01-14T13:17:20.8698752Z         )
2025-01-14T13:17:20.8698945Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8699397Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8699814Z         ]
2025-01-14T13:17:20.8700206Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8700594Z 
2025-01-14T13:17:20.8700742Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8701191Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_velocities _
2025-01-14T13:17:20.8701714Z 
2025-01-14T13:17:20.8702367Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8703431Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8703857Z 
2025-01-14T13:17:20.8703953Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8704271Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8704853Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8705454Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8705806Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8706040Z >       sim.run_final()
2025-01-14T13:17:20.8706161Z 
2025-01-14T13:17:20.8706253Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8706492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8706781Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8707095Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8707431Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8707756Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8708093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8708287Z 
2025-01-14T13:17:20.8708548Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8709090Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8709596Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8710182Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8710697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8711076Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8711294Z 
2025-01-14T13:17:20.8711386Z     def initialize_transport_state(
2025-01-14T13:17:20.8711799Z         self,
2025-01-14T13:17:20.8711985Z         simulation_state,
2025-01-14T13:17:20.8712189Z         opacity_state,
2025-01-14T13:17:20.8712386Z         macro_atom_state,
2025-01-14T13:17:20.8712579Z         plasma,
2025-01-14T13:17:20.8712753Z         no_of_packets,
2025-01-14T13:17:20.8712947Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8713312Z         iteration=0,
2025-01-14T13:17:20.8713611Z     ):
2025-01-14T13:17:20.8713960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8714366Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8714609Z         else:
2025-01-14T13:17:20.8714790Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8714996Z     
2025-01-14T13:17:20.8715220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8715533Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8715930Z         )
2025-01-14T13:17:20.8716090Z     
2025-01-14T13:17:20.8716308Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8716627Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8716975Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8717274Z         else:
2025-01-14T13:17:20.8717455Z             continuum_state = None
2025-01-14T13:17:20.8717703Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8717989Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8718259Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8718529Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8718938Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8719211Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8719467Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8719701Z         ).to_numba(
2025-01-14T13:17:20.8719894Z             macro_atom_state,
2025-01-14T13:17:20.8720114Z             self.line_interaction_type,
2025-01-14T13:17:20.8720344Z         )
2025-01-14T13:17:20.8720539Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8720985Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8721466Z         ]
2025-01-14T13:17:20.8722269Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8722848Z 
2025-01-14T13:17:20.8723001Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8723460Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_abundances _
2025-01-14T13:17:20.8723773Z 
2025-01-14T13:17:20.8724413Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8725481Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8725905Z 
2025-01-14T13:17:20.8726000Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8726316Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8726644Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8726986Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8727325Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8727556Z >       sim.run_final()
2025-01-14T13:17:20.8727681Z 
2025-01-14T13:17:20.8727767Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8728010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8728297Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8728614Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8728927Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8729248Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8729582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8729772Z 
2025-01-14T13:17:20.8730033Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8730574Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8731323Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8732339Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8732861Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8733238Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8733597Z 
2025-01-14T13:17:20.8733690Z     def initialize_transport_state(
2025-01-14T13:17:20.8733917Z         self,
2025-01-14T13:17:20.8734096Z         simulation_state,
2025-01-14T13:17:20.8734298Z         opacity_state,
2025-01-14T13:17:20.8734495Z         macro_atom_state,
2025-01-14T13:17:20.8734690Z         plasma,
2025-01-14T13:17:20.8734868Z         no_of_packets,
2025-01-14T13:17:20.8735065Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8735289Z         iteration=0,
2025-01-14T13:17:20.8735472Z     ):
2025-01-14T13:17:20.8735687Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8735990Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8736342Z         else:
2025-01-14T13:17:20.8736526Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8736735Z     
2025-01-14T13:17:20.8736959Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8737270Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8737514Z         )
2025-01-14T13:17:20.8737674Z     
2025-01-14T13:17:20.8737887Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8738208Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8738550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8738851Z         else:
2025-01-14T13:17:20.8739035Z             continuum_state = None
2025-01-14T13:17:20.8739286Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8739800Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8740274Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8740656Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8740941Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8741208Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8741467Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8741890Z         ).to_numba(
2025-01-14T13:17:20.8742084Z             macro_atom_state,
2025-01-14T13:17:20.8742306Z             self.line_interaction_type,
2025-01-14T13:17:20.8742533Z         )
2025-01-14T13:17:20.8742725Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8743174Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8743590Z         ]
2025-01-14T13:17:20.8743989Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8744373Z 
2025-01-14T13:17:20.8744521Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8744975Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_densities _
2025-01-14T13:17:20.8745289Z 
2025-01-14T13:17:20.8745921Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8746986Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8747414Z 
2025-01-14T13:17:20.8747510Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8747829Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8748158Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8748499Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8748990Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8749391Z >       sim.run_final()
2025-01-14T13:17:20.8749594Z 
2025-01-14T13:17:20.8749737Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8750042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8750477Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8750793Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8751118Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8751440Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8751967Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8752164Z 
2025-01-14T13:17:20.8752428Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8752973Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8753598Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8754195Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8754712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8755100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8755317Z 
2025-01-14T13:17:20.8755409Z     def initialize_transport_state(
2025-01-14T13:17:20.8755638Z         self,
2025-01-14T13:17:20.8755817Z         simulation_state,
2025-01-14T13:17:20.8756022Z         opacity_state,
2025-01-14T13:17:20.8756096Z         macro_atom_state,
2025-01-14T13:17:20.8756178Z         plasma,
2025-01-14T13:17:20.8756253Z         no_of_packets,
2025-01-14T13:17:20.8756341Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8756413Z         iteration=0,
2025-01-14T13:17:20.8756485Z     ):
2025-01-14T13:17:20.8756609Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8756714Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8756788Z         else:
2025-01-14T13:17:20.8756865Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8756936Z     
2025-01-14T13:17:20.8757070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8757178Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8757244Z         )
2025-01-14T13:17:20.8757319Z     
2025-01-14T13:17:20.8757495Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8757694Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8757948Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8758067Z         else:
2025-01-14T13:17:20.8758203Z             continuum_state = None
2025-01-14T13:17:20.8758374Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8758550Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8758690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8758803Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8758904Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8758999Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8759093Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8759171Z         ).to_numba(
2025-01-14T13:17:20.8759249Z             macro_atom_state,
2025-01-14T13:17:20.8759335Z             self.line_interaction_type,
2025-01-14T13:17:20.8759399Z         )
2025-01-14T13:17:20.8759501Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8759769Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8759844Z         ]
2025-01-14T13:17:20.8760145Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8760154Z 
2025-01-14T13:17:20.8760302Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8760467Z ________________ ERROR at setup of test_ascii_reader_power_law _________________
2025-01-14T13:17:20.8760471Z 
2025-01-14T13:17:20.8761143Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8761720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8761726Z 
2025-01-14T13:17:20.8761817Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8761975Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8762076Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8762247Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8762445Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8762525Z >       sim.run_final()
2025-01-14T13:17:20.8762529Z 
2025-01-14T13:17:20.8762614Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8762721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8762832Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8762972Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8763071Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8763223Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8763333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8763337Z 
2025-01-14T13:17:20.8763607Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8763808Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8764039Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8764316Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8764483Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8764620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8764623Z 
2025-01-14T13:17:20.8764715Z     def initialize_transport_state(
2025-01-14T13:17:20.8764783Z         self,
2025-01-14T13:17:20.8764864Z         simulation_state,
2025-01-14T13:17:20.8764939Z         opacity_state,
2025-01-14T13:17:20.8765019Z         macro_atom_state,
2025-01-14T13:17:20.8765093Z         plasma,
2025-01-14T13:17:20.8765165Z         no_of_packets,
2025-01-14T13:17:20.8765251Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8765323Z         iteration=0,
2025-01-14T13:17:20.8765390Z     ):
2025-01-14T13:17:20.8765516Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8765612Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8765681Z         else:
2025-01-14T13:17:20.8765763Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8765829Z     
2025-01-14T13:17:20.8765972Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8766067Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8766138Z         )
2025-01-14T13:17:20.8766203Z     
2025-01-14T13:17:20.8766335Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8766446Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8766601Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8766674Z         else:
2025-01-14T13:17:20.8766756Z             continuum_state = None
2025-01-14T13:17:20.8766860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8766967Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8767066Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8767199Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8767373Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8767687Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8767844Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8767961Z         ).to_numba(
2025-01-14T13:17:20.8768095Z             macro_atom_state,
2025-01-14T13:17:20.8768239Z             self.line_interaction_type,
2025-01-14T13:17:20.8768366Z         )
2025-01-14T13:17:20.8768478Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8768751Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8768823Z         ]
2025-01-14T13:17:20.8769123Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8769236Z 
2025-01-14T13:17:20.8769393Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8769555Z _____________ ERROR at setup of test_ascii_reader_exponential_law ______________
2025-01-14T13:17:20.8769559Z 
2025-01-14T13:17:20.8770199Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8770556Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8770566Z 
2025-01-14T13:17:20.8770657Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8770813Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8770908Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8771089Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8771175Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8771254Z >       sim.run_final()
2025-01-14T13:17:20.8771258Z 
2025-01-14T13:17:20.8771339Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8771455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8771665Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8771816Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8771920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8772070Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8772179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8772183Z 
2025-01-14T13:17:20.8772447Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8772653Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8772872Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8773144Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8773305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8773443Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8773448Z 
2025-01-14T13:17:20.8773538Z     def initialize_transport_state(
2025-01-14T13:17:20.8773606Z         self,
2025-01-14T13:17:20.8773687Z         simulation_state,
2025-01-14T13:17:20.8773761Z         opacity_state,
2025-01-14T13:17:20.8773843Z         macro_atom_state,
2025-01-14T13:17:20.8773916Z         plasma,
2025-01-14T13:17:20.8773991Z         no_of_packets,
2025-01-14T13:17:20.8774070Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8774145Z         iteration=0,
2025-01-14T13:17:20.8774211Z     ):
2025-01-14T13:17:20.8774343Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8774437Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8774510Z         else:
2025-01-14T13:17:20.8774588Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8774788Z     
2025-01-14T13:17:20.8774921Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8775019Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8775145Z         )
2025-01-14T13:17:20.8775259Z     
2025-01-14T13:17:20.8775481Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8775665Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8775923Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8776042Z         else:
2025-01-14T13:17:20.8776185Z             continuum_state = None
2025-01-14T13:17:20.8776315Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8776554Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8776648Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8776758Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8776854Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8776964Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8777056Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8777134Z         ).to_numba(
2025-01-14T13:17:20.8777215Z             macro_atom_state,
2025-01-14T13:17:20.8777300Z             self.line_interaction_type,
2025-01-14T13:17:20.8777373Z         )
2025-01-14T13:17:20.8777472Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8777744Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8777811Z         ]
2025-01-14T13:17:20.8778118Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8778123Z 
2025-01-14T13:17:20.8778267Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8778450Z ______ ERROR at setup of test_radial_1D_geometry_volume[0-1.00977478e+45] ______
2025-01-14T13:17:20.8778460Z 
2025-01-14T13:17:20.8779092Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8779441Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8779445Z 
2025-01-14T13:17:20.8779536Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8779686Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8779782Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8779961Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8780049Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8780120Z >       sim.run_final()
2025-01-14T13:17:20.8780127Z 
2025-01-14T13:17:20.8780214Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8780330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8780429Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8780571Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8780664Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8780823Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8780932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8780936Z 
2025-01-14T13:17:20.8781207Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8781412Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8781751Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8782026Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8782308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8782448Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8782452Z 
2025-01-14T13:17:20.8782539Z     def initialize_transport_state(
2025-01-14T13:17:20.8782612Z         self,
2025-01-14T13:17:20.8782690Z         simulation_state,
2025-01-14T13:17:20.8782777Z         opacity_state,
2025-01-14T13:17:20.8782856Z         macro_atom_state,
2025-01-14T13:17:20.8782932Z         plasma,
2025-01-14T13:17:20.8783004Z         no_of_packets,
2025-01-14T13:17:20.8783090Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8783271Z         iteration=0,
2025-01-14T13:17:20.8783348Z     ):
2025-01-14T13:17:20.8783472Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8783571Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8783644Z         else:
2025-01-14T13:17:20.8783727Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8783799Z     
2025-01-14T13:17:20.8783930Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8784028Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8784094Z         )
2025-01-14T13:17:20.8784165Z     
2025-01-14T13:17:20.8784289Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8784404Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8784552Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8784630Z         else:
2025-01-14T13:17:20.8784712Z             continuum_state = None
2025-01-14T13:17:20.8784877Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8785058Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8785215Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8785392Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8785559Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8785718Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8785868Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8785999Z         ).to_numba(
2025-01-14T13:17:20.8786079Z             macro_atom_state,
2025-01-14T13:17:20.8786170Z             self.line_interaction_type,
2025-01-14T13:17:20.8786237Z         )
2025-01-14T13:17:20.8786342Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8786607Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8786678Z         ]
2025-01-14T13:17:20.8786985Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8786992Z 
2025-01-14T13:17:20.8787149Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8787327Z _____ ERROR at setup of test_radial_1D_geometry_volume[10-1.98154804e+45] ______
2025-01-14T13:17:20.8787331Z 
2025-01-14T13:17:20.8787961Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8788315Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8788319Z 
2025-01-14T13:17:20.8788407Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8788567Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8788666Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8788841Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8788938Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8789178Z >       sim.run_final()
2025-01-14T13:17:20.8789184Z 
2025-01-14T13:17:20.8789334Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8789522Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8789691Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8789925Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8790086Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8790297Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8790408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8790412Z 
2025-01-14T13:17:20.8790775Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8790978Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8791205Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8791490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8791844Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8791988Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8791993Z 
2025-01-14T13:17:20.8792087Z     def initialize_transport_state(
2025-01-14T13:17:20.8792157Z         self,
2025-01-14T13:17:20.8792240Z         simulation_state,
2025-01-14T13:17:20.8792313Z         opacity_state,
2025-01-14T13:17:20.8792395Z         macro_atom_state,
2025-01-14T13:17:20.8792464Z         plasma,
2025-01-14T13:17:20.8792540Z         no_of_packets,
2025-01-14T13:17:20.8792630Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8792700Z         iteration=0,
2025-01-14T13:17:20.8792773Z     ):
2025-01-14T13:17:20.8792897Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8792998Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8793071Z         else:
2025-01-14T13:17:20.8793154Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8793221Z     
2025-01-14T13:17:20.8793363Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8793460Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8793534Z         )
2025-01-14T13:17:20.8793599Z     
2025-01-14T13:17:20.8793735Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8793847Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8794006Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8794079Z         else:
2025-01-14T13:17:20.8794167Z             continuum_state = None
2025-01-14T13:17:20.8794272Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8794379Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8794476Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8794585Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8794686Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8794779Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8794877Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8794947Z         ).to_numba(
2025-01-14T13:17:20.8795030Z             macro_atom_state,
2025-01-14T13:17:20.8795118Z             self.line_interaction_type,
2025-01-14T13:17:20.8795189Z         )
2025-01-14T13:17:20.8795288Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8795563Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8795641Z         ]
2025-01-14T13:17:20.8795945Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8795949Z 
2025-01-14T13:17:20.8796100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8796417Z _____ ERROR at setup of test_radial_1D_geometry_volume[19-3.13361319e+45] ______
2025-01-14T13:17:20.8796421Z 
2025-01-14T13:17:20.8797060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8797412Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8797425Z 
2025-01-14T13:17:20.8797586Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8798001Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8798167Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8798475Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8798572Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8798652Z >       sim.run_final()
2025-01-14T13:17:20.8798656Z 
2025-01-14T13:17:20.8798739Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8798852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8798949Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8799095Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8799188Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8799346Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8799451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8799455Z 
2025-01-14T13:17:20.8801421Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8801808Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8802038Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8802325Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8802488Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8802632Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8802636Z 
2025-01-14T13:17:20.8802725Z     def initialize_transport_state(
2025-01-14T13:17:20.8802803Z         self,
2025-01-14T13:17:20.8802882Z         simulation_state,
2025-01-14T13:17:20.8802963Z         opacity_state,
2025-01-14T13:17:20.8803039Z         macro_atom_state,
2025-01-14T13:17:20.8803115Z         plasma,
2025-01-14T13:17:20.8803210Z         no_of_packets,
2025-01-14T13:17:20.8803357Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8803484Z         iteration=0,
2025-01-14T13:17:20.8803596Z     ):
2025-01-14T13:17:20.8803810Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8803975Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8804094Z         else:
2025-01-14T13:17:20.8804224Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8804341Z     
2025-01-14T13:17:20.8804521Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8804627Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8804695Z         )
2025-01-14T13:17:20.8804768Z     
2025-01-14T13:17:20.8804898Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8805017Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8805171Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8805246Z         else:
2025-01-14T13:17:20.8805332Z             continuum_state = None
2025-01-14T13:17:20.8805430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8805542Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8805778Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8805890Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8805988Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8806085Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8806175Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8806251Z         ).to_numba(
2025-01-14T13:17:20.8806329Z             macro_atom_state,
2025-01-14T13:17:20.8806421Z             self.line_interaction_type,
2025-01-14T13:17:20.8806488Z         )
2025-01-14T13:17:20.8806593Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8806968Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8807043Z         ]
2025-01-14T13:17:20.8807348Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8807358Z 
2025-01-14T13:17:20.8807507Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8807704Z _ ERROR at setup of test_composition_elemental_number_density[index0-539428198] _
2025-01-14T13:17:20.8807708Z 
2025-01-14T13:17:20.8808343Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8808700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8808704Z 
2025-01-14T13:17:20.8808806Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8808961Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8809063Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8809238Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8809334Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8809409Z >       sim.run_final()
2025-01-14T13:17:20.8809413Z 
2025-01-14T13:17:20.8809499Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8809607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8809710Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8809854Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8809953Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8810110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8810218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8810222Z 
2025-01-14T13:17:20.8810491Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8810690Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8810919Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8811319Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8811732Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8811966Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8811979Z 
2025-01-14T13:17:20.8812126Z     def initialize_transport_state(
2025-01-14T13:17:20.8812246Z         self,
2025-01-14T13:17:20.8812376Z         simulation_state,
2025-01-14T13:17:20.8812459Z         opacity_state,
2025-01-14T13:17:20.8812535Z         macro_atom_state,
2025-01-14T13:17:20.8812615Z         plasma,
2025-01-14T13:17:20.8812690Z         no_of_packets,
2025-01-14T13:17:20.8812776Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8812849Z         iteration=0,
2025-01-14T13:17:20.8812919Z     ):
2025-01-14T13:17:20.8813179Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8813279Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8813348Z         else:
2025-01-14T13:17:20.8813432Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8813499Z     
2025-01-14T13:17:20.8813636Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8813731Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8813805Z         )
2025-01-14T13:17:20.8813879Z     
2025-01-14T13:17:20.8814005Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8814125Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8814382Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8814459Z         else:
2025-01-14T13:17:20.8814543Z             continuum_state = None
2025-01-14T13:17:20.8814645Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8814752Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8814853Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8814959Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8815060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8815152Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8815245Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8815318Z         ).to_numba(
2025-01-14T13:17:20.8815400Z             macro_atom_state,
2025-01-14T13:17:20.8815491Z             self.line_interaction_type,
2025-01-14T13:17:20.8815557Z         )
2025-01-14T13:17:20.8815664Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8815935Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8816007Z         ]
2025-01-14T13:17:20.8816308Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8816318Z 
2025-01-14T13:17:20.8816469Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8816658Z _ ERROR at setup of test_composition_elemental_number_density[index1-409675383] _
2025-01-14T13:17:20.8816662Z 
2025-01-14T13:17:20.8817291Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8817644Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8817648Z 
2025-01-14T13:17:20.8817740Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8817897Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8817992Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8818173Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8818259Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8818338Z >       sim.run_final()
2025-01-14T13:17:20.8818342Z 
2025-01-14T13:17:20.8818422Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8818608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8818783Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8819017Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8819180Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8819437Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8819635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8819640Z 
2025-01-14T13:17:20.8819907Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8820205Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8820425Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8820700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8820862Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8820997Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8821001Z 
2025-01-14T13:17:20.8821092Z     def initialize_transport_state(
2025-01-14T13:17:20.8821161Z         self,
2025-01-14T13:17:20.8821242Z         simulation_state,
2025-01-14T13:17:20.8821316Z         opacity_state,
2025-01-14T13:17:20.8821473Z         macro_atom_state,
2025-01-14T13:17:20.8821693Z         plasma,
2025-01-14T13:17:20.8821811Z         no_of_packets,
2025-01-14T13:17:20.8821899Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8821978Z         iteration=0,
2025-01-14T13:17:20.8822054Z     ):
2025-01-14T13:17:20.8822187Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8822283Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8822356Z         else:
2025-01-14T13:17:20.8822439Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8822508Z     
2025-01-14T13:17:20.8822651Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8822748Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8822820Z         )
2025-01-14T13:17:20.8822886Z     
2025-01-14T13:17:20.8823017Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8823129Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8823291Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8823360Z         else:
2025-01-14T13:17:20.8823446Z             continuum_state = None
2025-01-14T13:17:20.8823546Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8823663Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8823753Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8823863Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8823966Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8824066Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8824161Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8824235Z         ).to_numba(
2025-01-14T13:17:20.8824318Z             macro_atom_state,
2025-01-14T13:17:20.8824403Z             self.line_interaction_type,
2025-01-14T13:17:20.8824475Z         )
2025-01-14T13:17:20.8824580Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8824853Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8824919Z         ]
2025-01-14T13:17:20.8825221Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8825230Z 
2025-01-14T13:17:20.8825386Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8825580Z _ ERROR at setup of test_composition_elemental_number_density[index2-314387928] _
2025-01-14T13:17:20.8825585Z 
2025-01-14T13:17:20.8826217Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8826634Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8826642Z 
2025-01-14T13:17:20.8826805Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8827065Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8827231Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8827720Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8827811Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8827891Z >       sim.run_final()
2025-01-14T13:17:20.8827895Z 
2025-01-14T13:17:20.8827977Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8828094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8828189Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8828333Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8828426Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8828695Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8828805Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8828810Z 
2025-01-14T13:17:20.8829080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8829291Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8829511Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8829786Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8829942Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8830080Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8830083Z 
2025-01-14T13:17:20.8830175Z     def initialize_transport_state(
2025-01-14T13:17:20.8830248Z         self,
2025-01-14T13:17:20.8830324Z         simulation_state,
2025-01-14T13:17:20.8830408Z         opacity_state,
2025-01-14T13:17:20.8830484Z         macro_atom_state,
2025-01-14T13:17:20.8830566Z         plasma,
2025-01-14T13:17:20.8830647Z         no_of_packets,
2025-01-14T13:17:20.8830730Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8830815Z         iteration=0,
2025-01-14T13:17:20.8830884Z     ):
2025-01-14T13:17:20.8831012Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8831109Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8831182Z         else:
2025-01-14T13:17:20.8831260Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8831337Z     
2025-01-14T13:17:20.8844817Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8845013Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8845151Z         )
2025-01-14T13:17:20.8845265Z     
2025-01-14T13:17:20.8845522Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8845733Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8846005Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8846122Z         else:
2025-01-14T13:17:20.8846268Z             continuum_state = None
2025-01-14T13:17:20.8846434Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8846557Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8846656Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8846770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8846878Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8846972Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8847065Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8847195Z         ).to_numba(
2025-01-14T13:17:20.8847336Z             macro_atom_state,
2025-01-14T13:17:20.8847481Z             self.line_interaction_type,
2025-01-14T13:17:20.8847600Z         )
2025-01-14T13:17:20.8847775Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8848265Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8848335Z         ]
2025-01-14T13:17:20.8848854Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8848860Z 
2025-01-14T13:17:20.8849027Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8849222Z _ ERROR at setup of test_composition_elemental_number_density[index3-56066111] _
2025-01-14T13:17:20.8849226Z 
2025-01-14T13:17:20.8849874Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8850333Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8850338Z 
2025-01-14T13:17:20.8850441Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8850605Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8850712Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8850896Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8850985Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8851069Z >       sim.run_final()
2025-01-14T13:17:20.8851073Z 
2025-01-14T13:17:20.8851157Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8851274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8851375Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8851526Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8851740Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8851910Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8852017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8852028Z 
2025-01-14T13:17:20.8852301Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8852520Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8852899Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8853339Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8853617Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8853857Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8853864Z 
2025-01-14T13:17:20.8854010Z     def initialize_transport_state(
2025-01-14T13:17:20.8854140Z         self,
2025-01-14T13:17:20.8854284Z         simulation_state,
2025-01-14T13:17:20.8854425Z         opacity_state,
2025-01-14T13:17:20.8854559Z         macro_atom_state,
2025-01-14T13:17:20.8854674Z         plasma,
2025-01-14T13:17:20.8854812Z         no_of_packets,
2025-01-14T13:17:20.8854971Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8855111Z         iteration=0,
2025-01-14T13:17:20.8855230Z     ):
2025-01-14T13:17:20.8855464Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8855636Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8855771Z         else:
2025-01-14T13:17:20.8855907Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8856032Z     
2025-01-14T13:17:20.8856277Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8856450Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8856573Z         )
2025-01-14T13:17:20.8856698Z     
2025-01-14T13:17:20.8856940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8857149Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8857423Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8857543Z         else:
2025-01-14T13:17:20.8857896Z             continuum_state = None
2025-01-14T13:17:20.8858068Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8858241Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8858380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8858548Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8858698Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8858859Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8859011Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8859128Z         ).to_numba(
2025-01-14T13:17:20.8859246Z             macro_atom_state,
2025-01-14T13:17:20.8859523Z             self.line_interaction_type,
2025-01-14T13:17:20.8859627Z         )
2025-01-14T13:17:20.8859783Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8860188Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8860295Z         ]
2025-01-14T13:17:20.8860796Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8860803Z 
2025-01-14T13:17:20.8861020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8861299Z _ ERROR at setup of test_composition_elemental_number_density[index4-42580098] _
2025-01-14T13:17:20.8861304Z 
2025-01-14T13:17:20.8862516Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8863155Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8863162Z 
2025-01-14T13:17:20.8863317Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8863582Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8863750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8864046Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8864199Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8864327Z >       sim.run_final()
2025-01-14T13:17:20.8864333Z 
2025-01-14T13:17:20.8864479Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8864653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8864822Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8865063Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8865224Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8865485Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8865663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8865676Z 
2025-01-14T13:17:20.8866140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8866472Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8866805Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8867207Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8867443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8867657Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8867663Z 
2025-01-14T13:17:20.8867813Z     def initialize_transport_state(
2025-01-14T13:17:20.8867942Z         self,
2025-01-14T13:17:20.8868071Z         simulation_state,
2025-01-14T13:17:20.8868205Z         opacity_state,
2025-01-14T13:17:20.8868330Z         macro_atom_state,
2025-01-14T13:17:20.8868623Z         plasma,
2025-01-14T13:17:20.8868730Z         no_of_packets,
2025-01-14T13:17:20.8868858Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8868964Z         iteration=0,
2025-01-14T13:17:20.8869069Z     ):
2025-01-14T13:17:20.8869254Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8869407Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8869506Z         else:
2025-01-14T13:17:20.8869627Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8869723Z     
2025-01-14T13:17:20.8869927Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8870070Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8870169Z         )
2025-01-14T13:17:20.8870275Z     
2025-01-14T13:17:20.8870631Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8870811Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8871042Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8871164Z         else:
2025-01-14T13:17:20.8871286Z             continuum_state = None
2025-01-14T13:17:20.8871442Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8871749Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8871896Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8872071Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8872237Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8872376Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8872519Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8872636Z         ).to_numba(
2025-01-14T13:17:20.8872759Z             macro_atom_state,
2025-01-14T13:17:20.8872904Z             self.line_interaction_type,
2025-01-14T13:17:20.8873010Z         )
2025-01-14T13:17:20.8873178Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8873605Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8873719Z         ]
2025-01-14T13:17:20.8874183Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8874189Z 
2025-01-14T13:17:20.8874412Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8874694Z _ ERROR at setup of test_composition_elemental_number_density[index5-32676283] _
2025-01-14T13:17:20.8874700Z 
2025-01-14T13:17:20.8875751Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8876318Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8876330Z 
2025-01-14T13:17:20.8876471Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8876702Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8876843Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8877113Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8877244Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8877381Z >       sim.run_final()
2025-01-14T13:17:20.8877386Z 
2025-01-14T13:17:20.8877512Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8877690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8877845Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8878082Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8878234Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8878472Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8878642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8878812Z 
2025-01-14T13:17:20.8879245Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8879572Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8879939Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8880350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8880595Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8880802Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8880953Z 
2025-01-14T13:17:20.8881096Z     def initialize_transport_state(
2025-01-14T13:17:20.8881204Z         self,
2025-01-14T13:17:20.8881330Z         simulation_state,
2025-01-14T13:17:20.8881452Z         opacity_state,
2025-01-14T13:17:20.8881723Z         macro_atom_state,
2025-01-14T13:17:20.8881840Z         plasma,
2025-01-14T13:17:20.8881963Z         no_of_packets,
2025-01-14T13:17:20.8882095Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8882214Z         iteration=0,
2025-01-14T13:17:20.8882323Z     ):
2025-01-14T13:17:20.8882515Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8882654Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8882767Z         else:
2025-01-14T13:17:20.8882891Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8883003Z     
2025-01-14T13:17:20.8883205Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8883350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8883466Z         )
2025-01-14T13:17:20.8883578Z     
2025-01-14T13:17:20.8883799Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8883986Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8884237Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8884340Z         else:
2025-01-14T13:17:20.8884473Z             continuum_state = None
2025-01-14T13:17:20.8884638Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8884818Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8884969Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8885148Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8885305Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8885460Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8885608Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8885738Z         ).to_numba(
2025-01-14T13:17:20.8885875Z             macro_atom_state,
2025-01-14T13:17:20.8886017Z             self.line_interaction_type,
2025-01-14T13:17:20.8886135Z         )
2025-01-14T13:17:20.8886303Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8886779Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8886893Z         ]
2025-01-14T13:17:20.8887426Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8887433Z 
2025-01-14T13:17:20.8887675Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8888009Z _ ERROR at setup of test_composition_elemental_number_density[index6-841032262] _
2025-01-14T13:17:20.8888015Z 
2025-01-14T13:17:20.8889149Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8889750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8889930Z 
2025-01-14T13:17:20.8890095Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8890357Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8890522Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8890819Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8890968Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8891091Z >       sim.run_final()
2025-01-14T13:17:20.8891098Z 
2025-01-14T13:17:20.8891236Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8891423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8891721Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8892136Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8892307Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8892571Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8892755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8892762Z 
2025-01-14T13:17:20.8893226Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8893533Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8893913Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8894396Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8894670Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8894911Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8894918Z 
2025-01-14T13:17:20.8895064Z     def initialize_transport_state(
2025-01-14T13:17:20.8895184Z         self,
2025-01-14T13:17:20.8895314Z         simulation_state,
2025-01-14T13:17:20.8895452Z         opacity_state,
2025-01-14T13:17:20.8895580Z         macro_atom_state,
2025-01-14T13:17:20.8895699Z         plasma,
2025-01-14T13:17:20.8895821Z         no_of_packets,
2025-01-14T13:17:20.8895962Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8896084Z         iteration=0,
2025-01-14T13:17:20.8896203Z     ):
2025-01-14T13:17:20.8896407Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8896567Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8896689Z         else:
2025-01-14T13:17:20.8896820Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8896936Z     
2025-01-14T13:17:20.8897160Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8897329Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8897443Z         )
2025-01-14T13:17:20.8897558Z     
2025-01-14T13:17:20.8897773Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8897964Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8898228Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8898351Z         else:
2025-01-14T13:17:20.8898490Z             continuum_state = None
2025-01-14T13:17:20.8898663Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8898842Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8898999Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8899179Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8899342Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8899504Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8899664Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8899786Z         ).to_numba(
2025-01-14T13:17:20.8899927Z             macro_atom_state,
2025-01-14T13:17:20.8900075Z             self.line_interaction_type,
2025-01-14T13:17:20.8900187Z         )
2025-01-14T13:17:20.8900513Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8900982Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8901108Z         ]
2025-01-14T13:17:20.8901783Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8901791Z 
2025-01-14T13:17:20.8902034Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8902355Z _ ERROR at setup of test_composition_elemental_number_density[index7-638732300] _
2025-01-14T13:17:20.8902362Z 
2025-01-14T13:17:20.8903623Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8904184Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8904198Z 
2025-01-14T13:17:20.8904336Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8904558Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8904702Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8904965Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8905110Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8905233Z >       sim.run_final()
2025-01-14T13:17:20.8905239Z 
2025-01-14T13:17:20.8905380Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8905552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8905712Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8905913Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8906067Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8906308Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8906482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8906488Z 
2025-01-14T13:17:20.8906923Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8907265Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8907646Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8908085Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8908351Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8908572Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8908584Z 
2025-01-14T13:17:20.8908721Z     def initialize_transport_state(
2025-01-14T13:17:20.8908826Z         self,
2025-01-14T13:17:20.8908944Z         simulation_state,
2025-01-14T13:17:20.8909058Z         opacity_state,
2025-01-14T13:17:20.8909167Z         macro_atom_state,
2025-01-14T13:17:20.8909274Z         plasma,
2025-01-14T13:17:20.8909384Z         no_of_packets,
2025-01-14T13:17:20.8909523Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8909639Z         iteration=0,
2025-01-14T13:17:20.8909759Z     ):
2025-01-14T13:17:20.8909958Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8910116Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8910230Z         else:
2025-01-14T13:17:20.8910366Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8910476Z     
2025-01-14T13:17:20.8910716Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8910872Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8910993Z         )
2025-01-14T13:17:20.8911108Z     
2025-01-14T13:17:20.8911321Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8911800Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8912030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8912139Z         else:
2025-01-14T13:17:20.8912262Z             continuum_state = None
2025-01-14T13:17:20.8912421Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8912586Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8912732Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8912896Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8913059Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8913211Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8913549Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8913675Z         ).to_numba(
2025-01-14T13:17:20.8913808Z             macro_atom_state,
2025-01-14T13:17:20.8913959Z             self.line_interaction_type,
2025-01-14T13:17:20.8914083Z         )
2025-01-14T13:17:20.8914259Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8914743Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8914862Z         ]
2025-01-14T13:17:20.8915389Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8915396Z 
2025-01-14T13:17:20.8915671Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8916011Z _ ERROR at setup of test_composition_elemental_number_density[index8-490167906] _
2025-01-14T13:17:20.8916018Z 
2025-01-14T13:17:20.8917131Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8917762Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8917769Z 
2025-01-14T13:17:20.8917916Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8918179Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8918338Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8918635Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8918780Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8918908Z >       sim.run_final()
2025-01-14T13:17:20.8918914Z 
2025-01-14T13:17:20.8919050Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8919244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8919413Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8919644Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8919803Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8920064Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8920251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8920257Z 
2025-01-14T13:17:20.8920712Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8921064Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8921437Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8922063Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8922345Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8922576Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8922582Z 
2025-01-14T13:17:20.8922736Z     def initialize_transport_state(
2025-01-14T13:17:20.8923044Z         self,
2025-01-14T13:17:20.8923182Z         simulation_state,
2025-01-14T13:17:20.8923307Z         opacity_state,
2025-01-14T13:17:20.8923438Z         macro_atom_state,
2025-01-14T13:17:20.8923556Z         plasma,
2025-01-14T13:17:20.8923683Z         no_of_packets,
2025-01-14T13:17:20.8923819Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8923947Z         iteration=0,
2025-01-14T13:17:20.8924060Z     ):
2025-01-14T13:17:20.8924274Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8924433Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8924552Z         else:
2025-01-14T13:17:20.8924690Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8924801Z     
2025-01-14T13:17:20.8925182Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8925345Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8925465Z         )
2025-01-14T13:17:20.8925577Z     
2025-01-14T13:17:20.8925804Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8925988Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8926246Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8926363Z         else:
2025-01-14T13:17:20.8926508Z             continuum_state = None
2025-01-14T13:17:20.8926674Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8926855Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8927005Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8927185Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8927351Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8927513Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8927670Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8927788Z         ).to_numba(
2025-01-14T13:17:20.8927923Z             macro_atom_state,
2025-01-14T13:17:20.8928076Z             self.line_interaction_type,
2025-01-14T13:17:20.8928194Z         )
2025-01-14T13:17:20.8928360Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8928835Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8928948Z         ]
2025-01-14T13:17:20.8929466Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8929472Z 
2025-01-14T13:17:20.8929715Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8930037Z _ ERROR at setup of test_composition_elemental_number_density[index9-269136275] _
2025-01-14T13:17:20.8930043Z 
2025-01-14T13:17:20.8931080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8931832Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8931839Z 
2025-01-14T13:17:20.8931993Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8932237Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8932400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8932691Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8932831Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8932957Z >       sim.run_final()
2025-01-14T13:17:20.8932963Z 
2025-01-14T13:17:20.8933089Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8933281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8933446Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8933690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8934018Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8934277Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8934444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8934450Z 
2025-01-14T13:17:20.8934888Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8935241Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8935617Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8936232Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8936508Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8936742Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8936755Z 
2025-01-14T13:17:20.8936901Z     def initialize_transport_state(
2025-01-14T13:17:20.8937016Z         self,
2025-01-14T13:17:20.8937130Z         simulation_state,
2025-01-14T13:17:20.8937245Z         opacity_state,
2025-01-14T13:17:20.8937354Z         macro_atom_state,
2025-01-14T13:17:20.8937461Z         plasma,
2025-01-14T13:17:20.8937573Z         no_of_packets,
2025-01-14T13:17:20.8937694Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8937809Z         iteration=0,
2025-01-14T13:17:20.8937910Z     ):
2025-01-14T13:17:20.8938110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8938256Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8938365Z         else:
2025-01-14T13:17:20.8938502Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8938621Z     
2025-01-14T13:17:20.8938847Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8939008Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8939119Z         )
2025-01-14T13:17:20.8939242Z     
2025-01-14T13:17:20.8939453Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8939642Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8939894Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8940013Z         else:
2025-01-14T13:17:20.8940154Z             continuum_state = None
2025-01-14T13:17:20.8940317Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8940498Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8940647Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8940824Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8940989Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8941148Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8941297Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8941422Z         ).to_numba(
2025-01-14T13:17:20.8941739Z             macro_atom_state,
2025-01-14T13:17:20.8941897Z             self.line_interaction_type,
2025-01-14T13:17:20.8942009Z         )
2025-01-14T13:17:20.8942181Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8942648Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8942767Z         ]
2025-01-14T13:17:20.8943299Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8943306Z 
2025-01-14T13:17:20.8943552Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8943899Z _ ERROR at setup of test_composition_elemental_number_density[index10-204398856] _
2025-01-14T13:17:20.8943906Z 
2025-01-14T13:17:20.8945028Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8945827Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8945833Z 
2025-01-14T13:17:20.8945988Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8946239Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8946403Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8946693Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8946837Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8946961Z >       sim.run_final()
2025-01-14T13:17:20.8947112Z 
2025-01-14T13:17:20.8947253Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8947426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8947575Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8947809Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8947972Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8948234Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8948412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8948418Z 
2025-01-14T13:17:20.8948878Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8949226Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8949613Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8950095Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8950374Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8950603Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8950617Z 
2025-01-14T13:17:20.8950788Z     def initialize_transport_state(
2025-01-14T13:17:20.8950927Z         self,
2025-01-14T13:17:20.8951055Z         simulation_state,
2025-01-14T13:17:20.8951180Z         opacity_state,
2025-01-14T13:17:20.8951307Z         macro_atom_state,
2025-01-14T13:17:20.8951428Z         plasma,
2025-01-14T13:17:20.8951698Z         no_of_packets,
2025-01-14T13:17:20.8951843Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8951964Z         iteration=0,
2025-01-14T13:17:20.8952082Z     ):
2025-01-14T13:17:20.8952286Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8952445Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8952566Z         else:
2025-01-14T13:17:20.8952701Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8952814Z     
2025-01-14T13:17:20.8953046Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8953206Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8953333Z         )
2025-01-14T13:17:20.8953446Z     
2025-01-14T13:17:20.8953667Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8953860Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8954115Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8954236Z         else:
2025-01-14T13:17:20.8954371Z             continuum_state = None
2025-01-14T13:17:20.8954541Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8954719Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8954872Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8955053Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8955220Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8955372Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8955528Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8955834Z         ).to_numba(
2025-01-14T13:17:20.8955972Z             macro_atom_state,
2025-01-14T13:17:20.8956125Z             self.line_interaction_type,
2025-01-14T13:17:20.8956238Z         )
2025-01-14T13:17:20.8956415Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8956868Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8956985Z         ]
2025-01-14T13:17:20.8957510Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8957516Z 
2025-01-14T13:17:20.8957765Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8958237Z _ ERROR at setup of test_composition_elemental_number_density[index11-156857199] _
2025-01-14T13:17:20.8958244Z 
2025-01-14T13:17:20.8959324Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8959926Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8959932Z 
2025-01-14T13:17:20.8960077Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8960337Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8960491Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8960822Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8960967Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8961093Z >       sim.run_final()
2025-01-14T13:17:20.8961098Z 
2025-01-14T13:17:20.8961223Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8961402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8961710Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8961946Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8962110Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8962365Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8962532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8962538Z 
2025-01-14T13:17:20.8962983Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8963313Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8963670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8964147Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8964420Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8964656Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8964662Z 
2025-01-14T13:17:20.8964810Z     def initialize_transport_state(
2025-01-14T13:17:20.8964923Z         self,
2025-01-14T13:17:20.8965057Z         simulation_state,
2025-01-14T13:17:20.8965179Z         opacity_state,
2025-01-14T13:17:20.8965310Z         macro_atom_state,
2025-01-14T13:17:20.8965421Z         plasma,
2025-01-14T13:17:20.8965549Z         no_of_packets,
2025-01-14T13:17:20.8965684Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8965809Z         iteration=0,
2025-01-14T13:17:20.8965920Z     ):
2025-01-14T13:17:20.8966125Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8966282Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8966399Z         else:
2025-01-14T13:17:20.8966535Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8966645Z     
2025-01-14T13:17:20.8966879Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8967192Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8967308Z         )
2025-01-14T13:17:20.8967418Z     
2025-01-14T13:17:20.8967635Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8967812Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8968070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8968185Z         else:
2025-01-14T13:17:20.8968327Z             continuum_state = None
2025-01-14T13:17:20.8968492Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8968673Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8968969Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8969150Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8969317Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8969472Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8969636Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8969751Z         ).to_numba(
2025-01-14T13:17:20.8969881Z             macro_atom_state,
2025-01-14T13:17:20.8970022Z             self.line_interaction_type,
2025-01-14T13:17:20.8970189Z         )
2025-01-14T13:17:20.8970368Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8970844Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8970957Z         ]
2025-01-14T13:17:20.8971484Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8971491Z 
2025-01-14T13:17:20.8971880Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8972211Z _ ERROR at setup of test_composition_elemental_number_density[index12-45482957] _
2025-01-14T13:17:20.8972218Z 
2025-01-14T13:17:20.8973320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8973940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8973946Z 
2025-01-14T13:17:20.8974100Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8974346Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8974506Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8974798Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8974955Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8975085Z >       sim.run_final()
2025-01-14T13:17:20.8975091Z 
2025-01-14T13:17:20.8975229Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8975414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8975588Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8975830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8975985Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8976247Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8976424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8976430Z 
2025-01-14T13:17:20.8976896Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8977254Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8977644Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8978127Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8978397Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8978788Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8978795Z 
2025-01-14T13:17:20.8978945Z     def initialize_transport_state(
2025-01-14T13:17:20.8979065Z         self,
2025-01-14T13:17:20.8979194Z         simulation_state,
2025-01-14T13:17:20.8979324Z         opacity_state,
2025-01-14T13:17:20.8979452Z         macro_atom_state,
2025-01-14T13:17:20.8979574Z         plasma,
2025-01-14T13:17:20.8979695Z         no_of_packets,
2025-01-14T13:17:20.8979834Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8979960Z         iteration=0,
2025-01-14T13:17:20.8980074Z     ):
2025-01-14T13:17:20.8980425Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8980586Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8980705Z         else:
2025-01-14T13:17:20.8980835Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8980951Z     
2025-01-14T13:17:20.8981196Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8981360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8981474Z         )
2025-01-14T13:17:20.8981728Z     
2025-01-14T13:17:20.8981941Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8982124Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8982375Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8982492Z         else:
2025-01-14T13:17:20.8982627Z             continuum_state = None
2025-01-14T13:17:20.8982795Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8982977Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8983128Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8983306Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8983469Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8983635Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8983785Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8983909Z         ).to_numba(
2025-01-14T13:17:20.8984040Z             macro_atom_state,
2025-01-14T13:17:20.8984184Z             self.line_interaction_type,
2025-01-14T13:17:20.8984295Z         )
2025-01-14T13:17:20.8984467Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8984932Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8985052Z         ]
2025-01-14T13:17:20.8985574Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8985588Z 
2025-01-14T13:17:20.8985831Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8986150Z _ ERROR at setup of test_composition_elemental_number_density[index13-34542591] _
2025-01-14T13:17:20.8986156Z 
2025-01-14T13:17:20.8987234Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.8987805Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.8987811Z 
2025-01-14T13:17:20.8987946Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.8988183Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.8988330Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.8988619Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.8988761Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.8988882Z >       sim.run_final()
2025-01-14T13:17:20.8988888Z 
2025-01-14T13:17:20.8989027Z tardis/conftest.py:233: 
2025-01-14T13:17:20.8989363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8989526Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.8989752Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.8989917Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.8990162Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.8990344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.8990350Z 
2025-01-14T13:17:20.8990804Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.8991288Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.8991821Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.8992256Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.8992524Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.8992743Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.8992749Z 
2025-01-14T13:17:20.8992880Z     def initialize_transport_state(
2025-01-14T13:17:20.8992988Z         self,
2025-01-14T13:17:20.8993106Z         simulation_state,
2025-01-14T13:17:20.8993226Z         opacity_state,
2025-01-14T13:17:20.8993341Z         macro_atom_state,
2025-01-14T13:17:20.8993455Z         plasma,
2025-01-14T13:17:20.8993572Z         no_of_packets,
2025-01-14T13:17:20.8993712Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.8993824Z         iteration=0,
2025-01-14T13:17:20.8993930Z     ):
2025-01-14T13:17:20.8994125Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.8994275Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.8994379Z         else:
2025-01-14T13:17:20.8994499Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.8994609Z     
2025-01-14T13:17:20.8994826Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.8994973Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.8995078Z         )
2025-01-14T13:17:20.8995175Z     
2025-01-14T13:17:20.8995367Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.8995535Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.8995771Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.8995879Z         else:
2025-01-14T13:17:20.8995999Z             continuum_state = None
2025-01-14T13:17:20.8996164Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.8996344Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.8996485Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.8996640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.8996800Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.8996960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.8997118Z             continuum_state=continuum_state,
2025-01-14T13:17:20.8997230Z         ).to_numba(
2025-01-14T13:17:20.8997355Z             macro_atom_state,
2025-01-14T13:17:20.8997496Z             self.line_interaction_type,
2025-01-14T13:17:20.8997637Z         )
2025-01-14T13:17:20.8997832Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.8998286Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.8998393Z         ]
2025-01-14T13:17:20.8998869Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.8998875Z 
2025-01-14T13:17:20.8999121Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.8999440Z _ ERROR at setup of test_composition_elemental_number_density[index14-26508241] _
2025-01-14T13:17:20.8999640Z 
2025-01-14T13:17:20.9000652Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9001235Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9001242Z 
2025-01-14T13:17:20.9001385Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9001776Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9001933Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9002357Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9002498Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9002628Z >       sim.run_final()
2025-01-14T13:17:20.9002634Z 
2025-01-14T13:17:20.9002774Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9002960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9003125Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9003337Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9003493Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9003749Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9003930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9003936Z 
2025-01-14T13:17:20.9004368Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9004718Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9005086Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9005538Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9005811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9006018Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9006024Z 
2025-01-14T13:17:20.9006170Z     def initialize_transport_state(
2025-01-14T13:17:20.9006281Z         self,
2025-01-14T13:17:20.9006415Z         simulation_state,
2025-01-14T13:17:20.9006539Z         opacity_state,
2025-01-14T13:17:20.9006668Z         macro_atom_state,
2025-01-14T13:17:20.9006782Z         plasma,
2025-01-14T13:17:20.9006908Z         no_of_packets,
2025-01-14T13:17:20.9007040Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9007174Z         iteration=0,
2025-01-14T13:17:20.9007281Z     ):
2025-01-14T13:17:20.9007482Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9007630Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9007750Z         else:
2025-01-14T13:17:20.9007888Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9008004Z     
2025-01-14T13:17:20.9008225Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9008369Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9008488Z         )
2025-01-14T13:17:20.9008598Z     
2025-01-14T13:17:20.9008806Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9008977Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9009200Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9009308Z         else:
2025-01-14T13:17:20.9009444Z             continuum_state = None
2025-01-14T13:17:20.9009607Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9009788Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9009923Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9010084Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9010388Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9010539Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9010685Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9010796Z         ).to_numba(
2025-01-14T13:17:20.9010927Z             macro_atom_state,
2025-01-14T13:17:20.9011065Z             self.line_interaction_type,
2025-01-14T13:17:20.9011173Z         )
2025-01-14T13:17:20.9011324Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9011906Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9012019Z         ]
2025-01-14T13:17:20.9012650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9012658Z 
2025-01-14T13:17:20.9012890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9013201Z _ ERROR at setup of test_composition_elemental_number_density[index15-34001569] _
2025-01-14T13:17:20.9013213Z 
2025-01-14T13:17:20.9014188Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9014717Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9014723Z 
2025-01-14T13:17:20.9014861Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9015102Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9015253Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9015509Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9015642Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9015763Z >       sim.run_final()
2025-01-14T13:17:20.9015769Z 
2025-01-14T13:17:20.9015889Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9016050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9016198Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9016410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9016549Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9016788Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9016943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9016949Z 
2025-01-14T13:17:20.9017357Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9017660Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9018017Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9018451Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9018696Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9018897Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9018903Z 
2025-01-14T13:17:20.9019028Z     def initialize_transport_state(
2025-01-14T13:17:20.9019135Z         self,
2025-01-14T13:17:20.9019255Z         simulation_state,
2025-01-14T13:17:20.9019376Z         opacity_state,
2025-01-14T13:17:20.9019494Z         macro_atom_state,
2025-01-14T13:17:20.9019610Z         plasma,
2025-01-14T13:17:20.9019723Z         no_of_packets,
2025-01-14T13:17:20.9019858Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9019972Z         iteration=0,
2025-01-14T13:17:20.9020080Z     ):
2025-01-14T13:17:20.9020273Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9020417Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9020684Z         else:
2025-01-14T13:17:20.9020809Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9020918Z     
2025-01-14T13:17:20.9021125Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9021274Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9021381Z         )
2025-01-14T13:17:20.9021491Z     
2025-01-14T13:17:20.9021837Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9022016Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9022256Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9022369Z         else:
2025-01-14T13:17:20.9022640Z             continuum_state = None
2025-01-14T13:17:20.9022807Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9022980Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9023117Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9023287Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9023434Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9023582Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9023723Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9023837Z         ).to_numba(
2025-01-14T13:17:20.9023963Z             macro_atom_state,
2025-01-14T13:17:20.9024102Z             self.line_interaction_type,
2025-01-14T13:17:20.9024205Z         )
2025-01-14T13:17:20.9024362Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9024789Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9024905Z         ]
2025-01-14T13:17:20.9025369Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9025381Z 
2025-01-14T13:17:20.9025592Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9025881Z _ ERROR at setup of test_composition_elemental_number_density[index16-25822910] _
2025-01-14T13:17:20.9025887Z 
2025-01-14T13:17:20.9026825Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9027365Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9027372Z 
2025-01-14T13:17:20.9027516Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9027766Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9027917Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9028186Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9028324Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9028439Z >       sim.run_final()
2025-01-14T13:17:20.9028444Z 
2025-01-14T13:17:20.9028570Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9028739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9028888Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9029085Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9029243Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9029496Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9029679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9029685Z 
2025-01-14T13:17:20.9030130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9030452Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9030790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9031387Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9031779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9032003Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9032009Z 
2025-01-14T13:17:20.9032149Z     def initialize_transport_state(
2025-01-14T13:17:20.9032259Z         self,
2025-01-14T13:17:20.9032382Z         simulation_state,
2025-01-14T13:17:20.9032500Z         opacity_state,
2025-01-14T13:17:20.9032621Z         macro_atom_state,
2025-01-14T13:17:20.9032739Z         plasma,
2025-01-14T13:17:20.9033026Z         no_of_packets,
2025-01-14T13:17:20.9033162Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9033277Z         iteration=0,
2025-01-14T13:17:20.9033380Z     ):
2025-01-14T13:17:20.9033569Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9033717Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9033818Z         else:
2025-01-14T13:17:20.9033939Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9034037Z     
2025-01-14T13:17:20.9034243Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9034385Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9034490Z         )
2025-01-14T13:17:20.9034590Z     
2025-01-14T13:17:20.9034790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9034968Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9035215Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9035334Z         else:
2025-01-14T13:17:20.9035466Z             continuum_state = None
2025-01-14T13:17:20.9035617Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9035783Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9035939Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9036103Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9036253Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9036406Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9036557Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9036662Z         ).to_numba(
2025-01-14T13:17:20.9036781Z             macro_atom_state,
2025-01-14T13:17:20.9036916Z             self.line_interaction_type,
2025-01-14T13:17:20.9037035Z         )
2025-01-14T13:17:20.9037200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9037622Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9037744Z         ]
2025-01-14T13:17:20.9038232Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9038238Z 
2025-01-14T13:17:20.9038469Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9038759Z _ ERROR at setup of test_composition_elemental_number_density[index17-19816693] _
2025-01-14T13:17:20.9038764Z 
2025-01-14T13:17:20.9039766Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9040338Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9040343Z 
2025-01-14T13:17:20.9040475Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9040712Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9040851Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9041108Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9041393Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9041508Z >       sim.run_final()
2025-01-14T13:17:20.9041514Z 
2025-01-14T13:17:20.9041771Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9041939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9042080Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9042290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9042442Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9042683Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9042996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9043003Z 
2025-01-14T13:17:20.9043416Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9043735Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9044086Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9044509Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9044740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9044942Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9044948Z 
2025-01-14T13:17:20.9045078Z     def initialize_transport_state(
2025-01-14T13:17:20.9045181Z         self,
2025-01-14T13:17:20.9045301Z         simulation_state,
2025-01-14T13:17:20.9045410Z         opacity_state,
2025-01-14T13:17:20.9045524Z         macro_atom_state,
2025-01-14T13:17:20.9045630Z         plasma,
2025-01-14T13:17:20.9045743Z         no_of_packets,
2025-01-14T13:17:20.9045861Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9045973Z         iteration=0,
2025-01-14T13:17:20.9046069Z     ):
2025-01-14T13:17:20.9046256Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9046392Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9046498Z         else:
2025-01-14T13:17:20.9046613Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9046718Z     
2025-01-14T13:17:20.9046941Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9047096Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9047215Z         )
2025-01-14T13:17:20.9047326Z     
2025-01-14T13:17:20.9047544Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9047728Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9047993Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9048109Z         else:
2025-01-14T13:17:20.9048250Z             continuum_state = None
2025-01-14T13:17:20.9048417Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9048602Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9048757Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9048934Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9049097Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9049255Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9049413Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9049530Z         ).to_numba(
2025-01-14T13:17:20.9049664Z             macro_atom_state,
2025-01-14T13:17:20.9049807Z             self.line_interaction_type,
2025-01-14T13:17:20.9049925Z         )
2025-01-14T13:17:20.9050093Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9050574Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9050689Z         ]
2025-01-14T13:17:20.9051223Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9051373Z 
2025-01-14T13:17:20.9051754Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9052055Z ______ ERROR at setup of test_simulation_state_mass[index0-1.4471412e+31] ______
2025-01-14T13:17:20.9052061Z 
2025-01-14T13:17:20.9053170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9053785Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9053792Z 
2025-01-14T13:17:20.9054099Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9054366Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9054533Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9054833Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9054981Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9055111Z >       sim.run_final()
2025-01-14T13:17:20.9055116Z 
2025-01-14T13:17:20.9055251Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9055434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9055600Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9055839Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9055998Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9056259Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9056442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9056448Z 
2025-01-14T13:17:20.9056905Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9057227Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9057592Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9058050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9058311Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9058531Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9058536Z 
2025-01-14T13:17:20.9058674Z     def initialize_transport_state(
2025-01-14T13:17:20.9058789Z         self,
2025-01-14T13:17:20.9058904Z         simulation_state,
2025-01-14T13:17:20.9059028Z         opacity_state,
2025-01-14T13:17:20.9059150Z         macro_atom_state,
2025-01-14T13:17:20.9059269Z         plasma,
2025-01-14T13:17:20.9059381Z         no_of_packets,
2025-01-14T13:17:20.9059514Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9059623Z         iteration=0,
2025-01-14T13:17:20.9059730Z     ):
2025-01-14T13:17:20.9059923Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9060071Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9060183Z         else:
2025-01-14T13:17:20.9060299Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9060401Z     
2025-01-14T13:17:20.9060616Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9060767Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9060901Z         )
2025-01-14T13:17:20.9061008Z     
2025-01-14T13:17:20.9061193Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9061360Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9061720Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9061837Z         else:
2025-01-14T13:17:20.9061954Z             continuum_state = None
2025-01-14T13:17:20.9062106Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9062443Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9062577Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9062737Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9062877Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9063016Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9063145Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9063252Z         ).to_numba(
2025-01-14T13:17:20.9063364Z             macro_atom_state,
2025-01-14T13:17:20.9063492Z             self.line_interaction_type,
2025-01-14T13:17:20.9063588Z         )
2025-01-14T13:17:20.9063872Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9064273Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9064374Z         ]
2025-01-14T13:17:20.9064819Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9064836Z 
2025-01-14T13:17:20.9065048Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9065338Z ______ ERROR at setup of test_simulation_state_mass[index1-2.6820129e+30] ______
2025-01-14T13:17:20.9065344Z 
2025-01-14T13:17:20.9066293Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9066829Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9066835Z 
2025-01-14T13:17:20.9066963Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9067187Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9067327Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9067584Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9067715Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9067823Z >       sim.run_final()
2025-01-14T13:17:20.9067829Z 
2025-01-14T13:17:20.9067955Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9068119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9068274Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9068480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9068622Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9068845Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9069000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9069006Z 
2025-01-14T13:17:20.9069397Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9069695Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9070024Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9070426Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9070671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9070875Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9070882Z 
2025-01-14T13:17:20.9071027Z     def initialize_transport_state(
2025-01-14T13:17:20.9071132Z         self,
2025-01-14T13:17:20.9071257Z         simulation_state,
2025-01-14T13:17:20.9071377Z         opacity_state,
2025-01-14T13:17:20.9071496Z         macro_atom_state,
2025-01-14T13:17:20.9071742Z         plasma,
2025-01-14T13:17:20.9071856Z         no_of_packets,
2025-01-14T13:17:20.9071979Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9072255Z         iteration=0,
2025-01-14T13:17:20.9072366Z     ):
2025-01-14T13:17:20.9072561Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9072710Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9072810Z         else:
2025-01-14T13:17:20.9072929Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9073026Z     
2025-01-14T13:17:20.9073224Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9073365Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9073468Z         )
2025-01-14T13:17:20.9073570Z     
2025-01-14T13:17:20.9073776Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9074106Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9074350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9074458Z         else:
2025-01-14T13:17:20.9074590Z             continuum_state = None
2025-01-14T13:17:20.9074759Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9074929Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9075076Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9075243Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9075394Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9075530Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9075673Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9075789Z         ).to_numba(
2025-01-14T13:17:20.9075921Z             macro_atom_state,
2025-01-14T13:17:20.9076068Z             self.line_interaction_type,
2025-01-14T13:17:20.9076175Z         )
2025-01-14T13:17:20.9076333Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9076791Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9076899Z         ]
2025-01-14T13:17:20.9077348Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9077354Z 
2025-01-14T13:17:20.9077568Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9077816Z ______ ERROR at setup of test_simulation_state_mass[index2-1.3464444e+29] ______
2025-01-14T13:17:20.9077821Z 
2025-01-14T13:17:20.9078763Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9079302Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9079308Z 
2025-01-14T13:17:20.9079437Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9079662Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9079805Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9080059Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9080183Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9080294Z >       sim.run_final()
2025-01-14T13:17:20.9080300Z 
2025-01-14T13:17:20.9080417Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9080573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9080713Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9080920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9081060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9081286Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9081445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9081450Z 
2025-01-14T13:17:20.9081974Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9082429Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9082783Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9083192Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9083428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9083638Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9083644Z 
2025-01-14T13:17:20.9083781Z     def initialize_transport_state(
2025-01-14T13:17:20.9083885Z         self,
2025-01-14T13:17:20.9084144Z         simulation_state,
2025-01-14T13:17:20.9084262Z         opacity_state,
2025-01-14T13:17:20.9084388Z         macro_atom_state,
2025-01-14T13:17:20.9084498Z         plasma,
2025-01-14T13:17:20.9084608Z         no_of_packets,
2025-01-14T13:17:20.9084733Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9084848Z         iteration=0,
2025-01-14T13:17:20.9084946Z     ):
2025-01-14T13:17:20.9085135Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9085279Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9085389Z         else:
2025-01-14T13:17:20.9085515Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9085629Z     
2025-01-14T13:17:20.9085827Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9085971Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9086072Z         )
2025-01-14T13:17:20.9086168Z     
2025-01-14T13:17:20.9086366Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9086528Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9086753Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9086855Z         else:
2025-01-14T13:17:20.9087007Z             continuum_state = None
2025-01-14T13:17:20.9087162Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9087334Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9087467Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9087627Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9087768Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9087914Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9088046Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9088152Z         ).to_numba(
2025-01-14T13:17:20.9088279Z             macro_atom_state,
2025-01-14T13:17:20.9088427Z             self.line_interaction_type,
2025-01-14T13:17:20.9088538Z         )
2025-01-14T13:17:20.9088685Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9089127Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9089230Z         ]
2025-01-14T13:17:20.9089720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9089727Z 
2025-01-14T13:17:20.9089952Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9090234Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index0-1.67378172e-24] ___
2025-01-14T13:17:20.9090240Z 
2025-01-14T13:17:20.9091270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9091961Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9091969Z 
2025-01-14T13:17:20.9092118Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9092523Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9092670Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9092940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9093090Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9093211Z >       sim.run_final()
2025-01-14T13:17:20.9093224Z 
2025-01-14T13:17:20.9093351Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9093535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9093697Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9093932Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9094215Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9094463Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9094618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9094628Z 
2025-01-14T13:17:20.9095039Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9095365Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9095715Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9096153Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9096398Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9096611Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9096617Z 
2025-01-14T13:17:20.9096754Z     def initialize_transport_state(
2025-01-14T13:17:20.9096872Z         self,
2025-01-14T13:17:20.9096985Z         simulation_state,
2025-01-14T13:17:20.9097096Z         opacity_state,
2025-01-14T13:17:20.9097210Z         macro_atom_state,
2025-01-14T13:17:20.9097330Z         plasma,
2025-01-14T13:17:20.9097458Z         no_of_packets,
2025-01-14T13:17:20.9097597Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9097718Z         iteration=0,
2025-01-14T13:17:20.9097836Z     ):
2025-01-14T13:17:20.9098039Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9098201Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9098320Z         else:
2025-01-14T13:17:20.9098440Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9098556Z     
2025-01-14T13:17:20.9098781Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9098941Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9099053Z         )
2025-01-14T13:17:20.9099159Z     
2025-01-14T13:17:20.9099366Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9099545Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9099767Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9099880Z         else:
2025-01-14T13:17:20.9100000Z             continuum_state = None
2025-01-14T13:17:20.9100151Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9100315Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9100475Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9100655Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9100819Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9100969Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9101110Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9101228Z         ).to_numba(
2025-01-14T13:17:20.9101348Z             macro_atom_state,
2025-01-14T13:17:20.9101484Z             self.line_interaction_type,
2025-01-14T13:17:20.9101725Z         )
2025-01-14T13:17:20.9101887Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9102301Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9102567Z         ]
2025-01-14T13:17:20.9103034Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9103047Z 
2025-01-14T13:17:20.9103271Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9103540Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index1-9.51707707e-23] ___
2025-01-14T13:17:20.9103546Z 
2025-01-14T13:17:20.9104641Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9105188Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9105194Z 
2025-01-14T13:17:20.9105326Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9105554Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9105699Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9105951Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9106082Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9106209Z >       sim.run_final()
2025-01-14T13:17:20.9106215Z 
2025-01-14T13:17:20.9106343Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9106500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9106660Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9106889Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9107042Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9107277Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9107448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9107460Z 
2025-01-14T13:17:20.9107890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9108193Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9108566Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9108997Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9109276Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9109490Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9109505Z 
2025-01-14T13:17:20.9109657Z     def initialize_transport_state(
2025-01-14T13:17:20.9109767Z         self,
2025-01-14T13:17:20.9109902Z         simulation_state,
2025-01-14T13:17:20.9110022Z         opacity_state,
2025-01-14T13:17:20.9110162Z         macro_atom_state,
2025-01-14T13:17:20.9110291Z         plasma,
2025-01-14T13:17:20.9110418Z         no_of_packets,
2025-01-14T13:17:20.9110562Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9110670Z         iteration=0,
2025-01-14T13:17:20.9110792Z     ):
2025-01-14T13:17:20.9111010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9111182Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9111306Z         else:
2025-01-14T13:17:20.9111452Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9111732Z     
2025-01-14T13:17:20.9111974Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9112144Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9112279Z         )
2025-01-14T13:17:20.9112402Z     
2025-01-14T13:17:20.9112646Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9112847Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9113130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9167254Z         else:
2025-01-14T13:17:20.9167448Z             continuum_state = None
2025-01-14T13:17:20.9167634Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9167826Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9167999Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9168183Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9168363Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9168520Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9168680Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9168796Z         ).to_numba(
2025-01-14T13:17:20.9169175Z             macro_atom_state,
2025-01-14T13:17:20.9169331Z             self.line_interaction_type,
2025-01-14T13:17:20.9169449Z         )
2025-01-14T13:17:20.9169618Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9170070Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9170142Z         ]
2025-01-14T13:17:20.9170453Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9170459Z 
2025-01-14T13:17:20.9170619Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9170802Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index2-9.54725917e-23] ___
2025-01-14T13:17:20.9170807Z 
2025-01-14T13:17:20.9171456Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9171997Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9172008Z 
2025-01-14T13:17:20.9172104Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9172277Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9172379Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9172568Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9172654Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9172732Z >       sim.run_final()
2025-01-14T13:17:20.9172736Z 
2025-01-14T13:17:20.9172819Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9172937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9173042Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9173195Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9173301Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9173575Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9173769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9173776Z 
2025-01-14T13:17:20.9174232Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9174524Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9174758Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9175037Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9175199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9175345Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9175349Z 
2025-01-14T13:17:20.9175442Z     def initialize_transport_state(
2025-01-14T13:17:20.9175509Z         self,
2025-01-14T13:17:20.9175588Z         simulation_state,
2025-01-14T13:17:20.9176034Z         opacity_state,
2025-01-14T13:17:20.9176118Z         macro_atom_state,
2025-01-14T13:17:20.9176189Z         plasma,
2025-01-14T13:17:20.9176264Z         no_of_packets,
2025-01-14T13:17:20.9176343Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9176420Z         iteration=0,
2025-01-14T13:17:20.9176485Z     ):
2025-01-14T13:17:20.9176619Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9176715Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9176784Z         else:
2025-01-14T13:17:20.9176859Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9176926Z     
2025-01-14T13:17:20.9177061Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9177279Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9177352Z         )
2025-01-14T13:17:20.9177418Z     
2025-01-14T13:17:20.9177553Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9177666Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9177828Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9177895Z         else:
2025-01-14T13:17:20.9177979Z             continuum_state = None
2025-01-14T13:17:20.9178078Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9178185Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9178272Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9178380Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9178476Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9178573Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9178673Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9178742Z         ).to_numba(
2025-01-14T13:17:20.9178824Z             macro_atom_state,
2025-01-14T13:17:20.9178909Z             self.line_interaction_type,
2025-01-14T13:17:20.9178976Z         )
2025-01-14T13:17:20.9179078Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9179354Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9179418Z         ]
2025-01-14T13:17:20.9179720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9179724Z 
2025-01-14T13:17:20.9179873Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9180088Z __ ERROR at setup of TestModelStateFromNonUniformAbundances.test_atomic_mass ___
2025-01-14T13:17:20.9180092Z 
2025-01-14T13:17:20.9180742Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9181091Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9181099Z 
2025-01-14T13:17:20.9181192Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9181343Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9181442Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9181778Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9181868Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9181942Z >       sim.run_final()
2025-01-14T13:17:20.9181949Z 
2025-01-14T13:17:20.9182029Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9182140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9182241Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9182426Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9182591Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9182853Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9183197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9183203Z 
2025-01-14T13:17:20.9183593Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9183794Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9184013Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9184283Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9184439Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9184687Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9184692Z 
2025-01-14T13:17:20.9184783Z     def initialize_transport_state(
2025-01-14T13:17:20.9184854Z         self,
2025-01-14T13:17:20.9184936Z         simulation_state,
2025-01-14T13:17:20.9185012Z         opacity_state,
2025-01-14T13:17:20.9185085Z         macro_atom_state,
2025-01-14T13:17:20.9185158Z         plasma,
2025-01-14T13:17:20.9185229Z         no_of_packets,
2025-01-14T13:17:20.9185320Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9185393Z         iteration=0,
2025-01-14T13:17:20.9185460Z     ):
2025-01-14T13:17:20.9185585Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9185682Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9185751Z         else:
2025-01-14T13:17:20.9185829Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9185897Z     
2025-01-14T13:17:20.9186036Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9186133Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9186199Z         )
2025-01-14T13:17:20.9186278Z     
2025-01-14T13:17:20.9186410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9186528Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9186680Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9186749Z         else:
2025-01-14T13:17:20.9186830Z             continuum_state = None
2025-01-14T13:17:20.9186930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9187034Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9187128Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9187236Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9187331Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9187427Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9187519Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9187593Z         ).to_numba(
2025-01-14T13:17:20.9187669Z             macro_atom_state,
2025-01-14T13:17:20.9187768Z             self.line_interaction_type,
2025-01-14T13:17:20.9187840Z         )
2025-01-14T13:17:20.9187950Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9188222Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9188291Z         ]
2025-01-14T13:17:20.9188592Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9188600Z 
2025-01-14T13:17:20.9188752Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9189002Z _ ERROR at setup of TestModelStateFromNonUniformAbundances.test_elemental_number_density _
2025-01-14T13:17:20.9189006Z 
2025-01-14T13:17:20.9189636Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9190078Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9190083Z 
2025-01-14T13:17:20.9190176Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9190336Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9190439Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9190615Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9190704Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9190777Z >       sim.run_final()
2025-01-14T13:17:20.9190781Z 
2025-01-14T13:17:20.9190864Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9191078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9191191Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9191338Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9191477Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9191888Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9192079Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9192085Z 
2025-01-14T13:17:20.9192550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9192853Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9193081Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9193352Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9193520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9193658Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9193662Z 
2025-01-14T13:17:20.9193753Z     def initialize_transport_state(
2025-01-14T13:17:20.9193823Z         self,
2025-01-14T13:17:20.9193904Z         simulation_state,
2025-01-14T13:17:20.9193976Z         opacity_state,
2025-01-14T13:17:20.9194054Z         macro_atom_state,
2025-01-14T13:17:20.9194126Z         plasma,
2025-01-14T13:17:20.9194198Z         no_of_packets,
2025-01-14T13:17:20.9194281Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9194352Z         iteration=0,
2025-01-14T13:17:20.9194423Z     ):
2025-01-14T13:17:20.9194551Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9194649Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9194724Z         else:
2025-01-14T13:17:20.9194804Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9194869Z     
2025-01-14T13:17:20.9195009Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9195105Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9195175Z         )
2025-01-14T13:17:20.9195239Z     
2025-01-14T13:17:20.9195375Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9195488Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9195643Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9195716Z         else:
2025-01-14T13:17:20.9195797Z             continuum_state = None
2025-01-14T13:17:20.9195900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9196006Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9196099Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9196206Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9196311Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9196406Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9196499Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9196568Z         ).to_numba(
2025-01-14T13:17:20.9196648Z             macro_atom_state,
2025-01-14T13:17:20.9196881Z             self.line_interaction_type,
2025-01-14T13:17:20.9196952Z         )
2025-01-14T13:17:20.9197051Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9197323Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9197391Z         ]
2025-01-14T13:17:20.9197692Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9197697Z 
2025-01-14T13:17:20.9197845Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9198010Z _________ ERROR at setup of test_hdf_simulation_state_scalars[t_inner] _________
2025-01-14T13:17:20.9198015Z 
2025-01-14T13:17:20.9198752Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9199111Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9199119Z 
2025-01-14T13:17:20.9199207Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9199362Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9199457Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9199635Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9199721Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9199796Z >       sim.run_final()
2025-01-14T13:17:20.9199800Z 
2025-01-14T13:17:20.9199880Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9199999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9200094Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9200235Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9200399Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9200665Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9200848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9200855Z 
2025-01-14T13:17:20.9201311Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9201703Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9201937Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9202220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9202377Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9202517Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9202525Z 
2025-01-14T13:17:20.9202615Z     def initialize_transport_state(
2025-01-14T13:17:20.9202683Z         self,
2025-01-14T13:17:20.9202765Z         simulation_state,
2025-01-14T13:17:20.9202840Z         opacity_state,
2025-01-14T13:17:20.9202921Z         macro_atom_state,
2025-01-14T13:17:20.9202989Z         plasma,
2025-01-14T13:17:20.9203063Z         no_of_packets,
2025-01-14T13:17:20.9203149Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9203226Z         iteration=0,
2025-01-14T13:17:20.9203293Z     ):
2025-01-14T13:17:20.9203419Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9203513Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9203587Z         else:
2025-01-14T13:17:20.9203667Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9203735Z     
2025-01-14T13:17:20.9203869Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9203965Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9204036Z         )
2025-01-14T13:17:20.9204289Z     
2025-01-14T13:17:20.9204508Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9204686Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9204889Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9204959Z         else:
2025-01-14T13:17:20.9205045Z             continuum_state = None
2025-01-14T13:17:20.9205143Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9205253Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9205342Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9205448Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9205690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9205792Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9205882Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9205955Z         ).to_numba(
2025-01-14T13:17:20.9206043Z             macro_atom_state,
2025-01-14T13:17:20.9206130Z             self.line_interaction_type,
2025-01-14T13:17:20.9206201Z         )
2025-01-14T13:17:20.9206302Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9206574Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9206640Z         ]
2025-01-14T13:17:20.9206938Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9206942Z 
2025-01-14T13:17:20.9207086Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9207271Z _____ ERROR at setup of test_hdf_simulation_state_nparray[dilution_factor] _____
2025-01-14T13:17:20.9207275Z 
2025-01-14T13:17:20.9207906Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9208259Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9208263Z 
2025-01-14T13:17:20.9208357Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9208503Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9208602Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9208768Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9208856Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9208931Z >       sim.run_final()
2025-01-14T13:17:20.9208938Z 
2025-01-14T13:17:20.9209021Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9209133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9209229Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9209416Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9209575Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9209840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9210015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9210022Z 
2025-01-14T13:17:20.9210483Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9210684Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9210906Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9211182Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9211340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9211478Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9211737Z 
2025-01-14T13:17:20.9211839Z     def initialize_transport_state(
2025-01-14T13:17:20.9211913Z         self,
2025-01-14T13:17:20.9211990Z         simulation_state,
2025-01-14T13:17:20.9212066Z         opacity_state,
2025-01-14T13:17:20.9212141Z         macro_atom_state,
2025-01-14T13:17:20.9212211Z         plasma,
2025-01-14T13:17:20.9212283Z         no_of_packets,
2025-01-14T13:17:20.9212371Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9212441Z         iteration=0,
2025-01-14T13:17:20.9212511Z     ):
2025-01-14T13:17:20.9212643Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9212742Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9212938Z         else:
2025-01-14T13:17:20.9213027Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9213098Z     
2025-01-14T13:17:20.9213236Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9213337Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9213408Z         )
2025-01-14T13:17:20.9213474Z     
2025-01-14T13:17:20.9213601Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9213717Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9213871Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9213942Z         else:
2025-01-14T13:17:20.9214024Z             continuum_state = None
2025-01-14T13:17:20.9214130Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9214237Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9214334Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9214448Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9214545Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9214645Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9214733Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9214812Z         ).to_numba(
2025-01-14T13:17:20.9214890Z             macro_atom_state,
2025-01-14T13:17:20.9214983Z             self.line_interaction_type,
2025-01-14T13:17:20.9215051Z         )
2025-01-14T13:17:20.9215155Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9215423Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9215495Z         ]
2025-01-14T13:17:20.9215799Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9215803Z 
2025-01-14T13:17:20.9215957Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9216132Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_inner] _________
2025-01-14T13:17:20.9216136Z 
2025-01-14T13:17:20.9216767Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9217122Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9217126Z 
2025-01-14T13:17:20.9217215Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9217371Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9217468Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9217643Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9217734Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9217812Z >       sim.run_final()
2025-01-14T13:17:20.9217815Z 
2025-01-14T13:17:20.9217904Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9218012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9218322Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9218564Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9218727Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9218982Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9219162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9219169Z 
2025-01-14T13:17:20.9219491Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9219691Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9220021Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9220297Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9220461Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9220602Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9220606Z 
2025-01-14T13:17:20.9220697Z     def initialize_transport_state(
2025-01-14T13:17:20.9220766Z         self,
2025-01-14T13:17:20.9220846Z         simulation_state,
2025-01-14T13:17:20.9220919Z         opacity_state,
2025-01-14T13:17:20.9220999Z         macro_atom_state,
2025-01-14T13:17:20.9221068Z         plasma,
2025-01-14T13:17:20.9221145Z         no_of_packets,
2025-01-14T13:17:20.9221231Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9221302Z         iteration=0,
2025-01-14T13:17:20.9221376Z     ):
2025-01-14T13:17:20.9221500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9221765Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9221836Z         else:
2025-01-14T13:17:20.9221919Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9221987Z     
2025-01-14T13:17:20.9222129Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9222227Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9222299Z         )
2025-01-14T13:17:20.9222363Z     
2025-01-14T13:17:20.9222493Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9222604Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9222761Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9222834Z         else:
2025-01-14T13:17:20.9222919Z             continuum_state = None
2025-01-14T13:17:20.9223023Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9223129Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9223223Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9223333Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9223436Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9223528Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9223625Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9223695Z         ).to_numba(
2025-01-14T13:17:20.9223781Z             macro_atom_state,
2025-01-14T13:17:20.9223867Z             self.line_interaction_type,
2025-01-14T13:17:20.9223938Z         )
2025-01-14T13:17:20.9224038Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9224305Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9224374Z         ]
2025-01-14T13:17:20.9224670Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9224674Z 
2025-01-14T13:17:20.9224834Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9224997Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_outer] _________
2025-01-14T13:17:20.9225001Z 
2025-01-14T13:17:20.9225630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9226107Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9226116Z 
2025-01-14T13:17:20.9226204Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9226360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9226458Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9226631Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9226833Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9226977Z >       sim.run_final()
2025-01-14T13:17:20.9226984Z 
2025-01-14T13:17:20.9227122Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9227307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9227472Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9227712Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9227866Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9228064Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9228172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9228176Z 
2025-01-14T13:17:20.9228436Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9228639Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9228860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9229135Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9229289Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9229432Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9229435Z 
2025-01-14T13:17:20.9229524Z     def initialize_transport_state(
2025-01-14T13:17:20.9229593Z         self,
2025-01-14T13:17:20.9229674Z         simulation_state,
2025-01-14T13:17:20.9229747Z         opacity_state,
2025-01-14T13:17:20.9229826Z         macro_atom_state,
2025-01-14T13:17:20.9229896Z         plasma,
2025-01-14T13:17:20.9229974Z         no_of_packets,
2025-01-14T13:17:20.9230054Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9230132Z         iteration=0,
2025-01-14T13:17:20.9230198Z     ):
2025-01-14T13:17:20.9230327Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9230418Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9230491Z         else:
2025-01-14T13:17:20.9230568Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9230646Z     
2025-01-14T13:17:20.9230784Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9230885Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9230951Z         )
2025-01-14T13:17:20.9231021Z     
2025-01-14T13:17:20.9231149Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9231258Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9231410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9231477Z         else:
2025-01-14T13:17:20.9231710Z             continuum_state = None
2025-01-14T13:17:20.9231813Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9231923Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9232016Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9232124Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9232219Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9232449Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9232539Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9232613Z         ).to_numba(
2025-01-14T13:17:20.9232693Z             macro_atom_state,
2025-01-14T13:17:20.9232778Z             self.line_interaction_type,
2025-01-14T13:17:20.9232849Z         )
2025-01-14T13:17:20.9232948Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9233219Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9233285Z         ]
2025-01-14T13:17:20.9233586Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9233589Z 
2025-01-14T13:17:20.9233839Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9233997Z _____________________ ERROR at setup of test_hdf_density_0 _____________________
2025-01-14T13:17:20.9234001Z 
2025-01-14T13:17:20.9234634Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9234985Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9234989Z 
2025-01-14T13:17:20.9235079Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9235226Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9235325Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9235495Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9235585Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9235659Z >       sim.run_final()
2025-01-14T13:17:20.9235662Z 
2025-01-14T13:17:20.9235799Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9235993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9236155Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9236392Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9236547Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9236810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9236923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9236927Z 
2025-01-14T13:17:20.9237192Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9237393Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9237615Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9237885Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9238044Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9238185Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9238189Z 
2025-01-14T13:17:20.9238275Z     def initialize_transport_state(
2025-01-14T13:17:20.9238348Z         self,
2025-01-14T13:17:20.9238425Z         simulation_state,
2025-01-14T13:17:20.9238501Z         opacity_state,
2025-01-14T13:17:20.9238575Z         macro_atom_state,
2025-01-14T13:17:20.9238647Z         plasma,
2025-01-14T13:17:20.9238718Z         no_of_packets,
2025-01-14T13:17:20.9238801Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9238874Z         iteration=0,
2025-01-14T13:17:20.9238945Z     ):
2025-01-14T13:17:20.9239066Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9239167Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9239238Z         else:
2025-01-14T13:17:20.9239317Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9239490Z     
2025-01-14T13:17:20.9239635Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9239736Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9239803Z         )
2025-01-14T13:17:20.9239874Z     
2025-01-14T13:17:20.9240000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9240114Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9240263Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9240336Z         else:
2025-01-14T13:17:20.9240417Z             continuum_state = None
2025-01-14T13:17:20.9240521Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9240710Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9240813Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9240917Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9241018Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9241118Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9241209Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9241284Z         ).to_numba(
2025-01-14T13:17:20.9241371Z             macro_atom_state,
2025-01-14T13:17:20.9241465Z             self.line_interaction_type,
2025-01-14T13:17:20.9241533Z         )
2025-01-14T13:17:20.9241853Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9242126Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9242197Z         ]
2025-01-14T13:17:20.9242498Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9242503Z 
2025-01-14T13:17:20.9242654Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9242807Z ______________________ ERROR at setup of test_hdf_time_0 _______________________
2025-01-14T13:17:20.9242815Z 
2025-01-14T13:17:20.9243440Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9243786Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9243790Z 
2025-01-14T13:17:20.9243878Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9244034Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9244127Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9244430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9244581Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9244704Z >       sim.run_final()
2025-01-14T13:17:20.9244710Z 
2025-01-14T13:17:20.9244854Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9245033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9245200Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9245369Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9245469Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9245620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9245730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9245735Z 
2025-01-14T13:17:20.9245994Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9246200Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9246424Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9246691Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9247018Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9247153Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9247157Z 
2025-01-14T13:17:20.9247248Z     def initialize_transport_state(
2025-01-14T13:17:20.9247317Z         self,
2025-01-14T13:17:20.9247398Z         simulation_state,
2025-01-14T13:17:20.9247472Z         opacity_state,
2025-01-14T13:17:20.9247559Z         macro_atom_state,
2025-01-14T13:17:20.9247630Z         plasma,
2025-01-14T13:17:20.9247708Z         no_of_packets,
2025-01-14T13:17:20.9247793Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9247865Z         iteration=0,
2025-01-14T13:17:20.9248046Z     ):
2025-01-14T13:17:20.9248177Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9248282Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9248349Z         else:
2025-01-14T13:17:20.9248437Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9248502Z     
2025-01-14T13:17:20.9248638Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9248734Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9248804Z         )
2025-01-14T13:17:20.9248868Z     
2025-01-14T13:17:20.9249005Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9249117Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9249271Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9249339Z         else:
2025-01-14T13:17:20.9249426Z             continuum_state = None
2025-01-14T13:17:20.9249533Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9249638Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9249733Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9249835Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9249937Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9250028Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9250127Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9250195Z         ).to_numba(
2025-01-14T13:17:20.9250277Z             macro_atom_state,
2025-01-14T13:17:20.9250363Z             self.line_interaction_type,
2025-01-14T13:17:20.9250435Z         )
2025-01-14T13:17:20.9250541Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9250812Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9250879Z         ]
2025-01-14T13:17:20.9251189Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9251193Z 
2025-01-14T13:17:20.9251341Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9251511Z _____________ ERROR at setup of test_opacity_solver[scatter-False] _____________
2025-01-14T13:17:20.9251519Z 
2025-01-14T13:17:20.9252578Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9252928Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9252936Z 
2025-01-14T13:17:20.9253025Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9253265Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9253434Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9253736Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9253859Z >       sim.iterate(10)
2025-01-14T13:17:20.9253866Z 
2025-01-14T13:17:20.9254192Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9254304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9254406Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9254564Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9254671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9254675Z 
2025-01-14T13:17:20.9254940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9255139Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9255471Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9255746Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9255918Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9256057Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9256062Z 
2025-01-14T13:17:20.9256154Z     def initialize_transport_state(
2025-01-14T13:17:20.9256222Z         self,
2025-01-14T13:17:20.9256305Z         simulation_state,
2025-01-14T13:17:20.9256379Z         opacity_state,
2025-01-14T13:17:20.9256458Z         macro_atom_state,
2025-01-14T13:17:20.9256533Z         plasma,
2025-01-14T13:17:20.9256606Z         no_of_packets,
2025-01-14T13:17:20.9256692Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9256764Z         iteration=0,
2025-01-14T13:17:20.9256835Z     ):
2025-01-14T13:17:20.9256966Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9257075Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9257206Z         else:
2025-01-14T13:17:20.9257347Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9257457Z     
2025-01-14T13:17:20.9257694Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9257854Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9257970Z         )
2025-01-14T13:17:20.9258078Z     
2025-01-14T13:17:20.9258269Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9258385Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9258541Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9258612Z         else:
2025-01-14T13:17:20.9258699Z             continuum_state = None
2025-01-14T13:17:20.9258807Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9258913Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9259014Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9259120Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9259222Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9259314Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9259412Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9259481Z         ).to_numba(
2025-01-14T13:17:20.9259562Z             macro_atom_state,
2025-01-14T13:17:20.9259651Z             self.line_interaction_type,
2025-01-14T13:17:20.9259723Z         )
2025-01-14T13:17:20.9259823Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9260092Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9260165Z         ]
2025-01-14T13:17:20.9260466Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9260470Z 
2025-01-14T13:17:20.9260626Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9260781Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9261247Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9262067Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9262232Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9262735Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9262899Z ____________ ERROR at setup of test_opacity_solver[macroatom-False] ____________
2025-01-14T13:17:20.9262903Z 
2025-01-14T13:17:20.9263738Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9264371Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9264384Z 
2025-01-14T13:17:20.9264538Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9264801Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9264914Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9265094Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9265171Z >       sim.iterate(10)
2025-01-14T13:17:20.9265175Z 
2025-01-14T13:17:20.9265275Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9265382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9265482Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9265643Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9265751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9265756Z 
2025-01-14T13:17:20.9266021Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9266228Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9266450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9266722Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9266891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9267023Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9267027Z 
2025-01-14T13:17:20.9267118Z     def initialize_transport_state(
2025-01-14T13:17:20.9267190Z         self,
2025-01-14T13:17:20.9267274Z         simulation_state,
2025-01-14T13:17:20.9267350Z         opacity_state,
2025-01-14T13:17:20.9267429Z         macro_atom_state,
2025-01-14T13:17:20.9267499Z         plasma,
2025-01-14T13:17:20.9267578Z         no_of_packets,
2025-01-14T13:17:20.9267663Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9267741Z         iteration=0,
2025-01-14T13:17:20.9267813Z     ):
2025-01-14T13:17:20.9267940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9268040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9268109Z         else:
2025-01-14T13:17:20.9268190Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9268255Z     
2025-01-14T13:17:20.9268396Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9268492Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9268564Z         )
2025-01-14T13:17:20.9268632Z     
2025-01-14T13:17:20.9268770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9268882Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9269043Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9269111Z         else:
2025-01-14T13:17:20.9269327Z             continuum_state = None
2025-01-14T13:17:20.9269425Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9269535Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9269630Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9269735Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9269837Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9269930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9270024Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9270094Z         ).to_numba(
2025-01-14T13:17:20.9270178Z             macro_atom_state,
2025-01-14T13:17:20.9270341Z             self.line_interaction_type,
2025-01-14T13:17:20.9270415Z         )
2025-01-14T13:17:20.9270516Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9270789Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9270861Z         ]
2025-01-14T13:17:20.9271163Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9271167Z 
2025-01-14T13:17:20.9271319Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9271485Z ____________ ERROR at setup of test_opacity_solver[macroatom-True] _____________
2025-01-14T13:17:20.9271489Z 
2025-01-14T13:17:20.9272243Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9272725Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9272733Z 
2025-01-14T13:17:20.9272888Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9273164Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9273323Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9273628Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9273731Z >       sim.iterate(10)
2025-01-14T13:17:20.9273736Z 
2025-01-14T13:17:20.9273839Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9273944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9274046Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9274200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9274312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9274316Z 
2025-01-14T13:17:20.9274577Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9274781Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9275010Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9275283Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9275448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9275580Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9275584Z 
2025-01-14T13:17:20.9275675Z     def initialize_transport_state(
2025-01-14T13:17:20.9275743Z         self,
2025-01-14T13:17:20.9275826Z         simulation_state,
2025-01-14T13:17:20.9275900Z         opacity_state,
2025-01-14T13:17:20.9275983Z         macro_atom_state,
2025-01-14T13:17:20.9276052Z         plasma,
2025-01-14T13:17:20.9276129Z         no_of_packets,
2025-01-14T13:17:20.9276210Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9276286Z         iteration=0,
2025-01-14T13:17:20.9276527Z     ):
2025-01-14T13:17:20.9276656Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9276757Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9276824Z         else:
2025-01-14T13:17:20.9276906Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9276971Z     
2025-01-14T13:17:20.9277111Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9277205Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9277279Z         )
2025-01-14T13:17:20.9277345Z     
2025-01-14T13:17:20.9277479Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9277589Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9277853Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9277925Z         else:
2025-01-14T13:17:20.9278012Z             continuum_state = None
2025-01-14T13:17:20.9278116Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9278226Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9278323Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9278426Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9278528Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9278621Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9278715Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9278785Z         ).to_numba(
2025-01-14T13:17:20.9278867Z             macro_atom_state,
2025-01-14T13:17:20.9278952Z             self.line_interaction_type,
2025-01-14T13:17:20.9279024Z         )
2025-01-14T13:17:20.9279121Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9279392Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9279460Z         ]
2025-01-14T13:17:20.9279763Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9279771Z 
2025-01-14T13:17:20.9279921Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9280087Z ___________ ERROR at setup of test_opacity_solver[downbranch-False] ____________
2025-01-14T13:17:20.9280090Z 
2025-01-14T13:17:20.9280720Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9281064Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9281071Z 
2025-01-14T13:17:20.9281164Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9281448Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9281743Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9282055Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9282183Z >       sim.iterate(10)
2025-01-14T13:17:20.9282189Z 
2025-01-14T13:17:20.9282350Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9282533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9282637Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9282791Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9282898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9282903Z 
2025-01-14T13:17:20.9283171Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9283371Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9283592Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9284012Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9284179Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9284308Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9284312Z 
2025-01-14T13:17:20.9284406Z     def initialize_transport_state(
2025-01-14T13:17:20.9284474Z         self,
2025-01-14T13:17:20.9284561Z         simulation_state,
2025-01-14T13:17:20.9284634Z         opacity_state,
2025-01-14T13:17:20.9284717Z         macro_atom_state,
2025-01-14T13:17:20.9284794Z         plasma,
2025-01-14T13:17:20.9284876Z         no_of_packets,
2025-01-14T13:17:20.9285070Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9285145Z         iteration=0,
2025-01-14T13:17:20.9285217Z     ):
2025-01-14T13:17:20.9285349Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9285453Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9285526Z         else:
2025-01-14T13:17:20.9285610Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9285677Z     
2025-01-14T13:17:20.9285819Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9285915Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9286008Z         )
2025-01-14T13:17:20.9286089Z     
2025-01-14T13:17:20.9286225Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9286341Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9286500Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9286567Z         else:
2025-01-14T13:17:20.9286660Z             continuum_state = None
2025-01-14T13:17:20.9286765Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9286871Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9286974Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9287086Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9287190Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9287283Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9287381Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9287458Z         ).to_numba(
2025-01-14T13:17:20.9287544Z             macro_atom_state,
2025-01-14T13:17:20.9287632Z             self.line_interaction_type,
2025-01-14T13:17:20.9287705Z         )
2025-01-14T13:17:20.9287807Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9288090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9288165Z         ]
2025-01-14T13:17:20.9288468Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9288472Z 
2025-01-14T13:17:20.9288625Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9288798Z ____________ ERROR at setup of test_opacity_solver[downbranch-True] ____________
2025-01-14T13:17:20.9288802Z 
2025-01-14T13:17:20.9289439Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9289784Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9289793Z 
2025-01-14T13:17:20.9289890Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9290057Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9290156Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9290424Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9290552Z >       sim.iterate(10)
2025-01-14T13:17:20.9290675Z 
2025-01-14T13:17:20.9290843Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9291024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9291187Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9291461Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9291742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9291750Z 
2025-01-14T13:17:20.9292039Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37889b1670>
2025-01-14T13:17:20.9292244Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37afbf1e80>
2025-01-14T13:17:20.9292600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889b16d0>
2025-01-14T13:17:20.9292887Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889b0c80>
2025-01-14T13:17:20.9293123Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37afd9ef00>
2025-01-14T13:17:20.9293258Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9293262Z 
2025-01-14T13:17:20.9293360Z     def initialize_transport_state(
2025-01-14T13:17:20.9293429Z         self,
2025-01-14T13:17:20.9293514Z         simulation_state,
2025-01-14T13:17:20.9293595Z         opacity_state,
2025-01-14T13:17:20.9293678Z         macro_atom_state,
2025-01-14T13:17:20.9293753Z         plasma,
2025-01-14T13:17:20.9293826Z         no_of_packets,
2025-01-14T13:17:20.9293914Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9293987Z         iteration=0,
2025-01-14T13:17:20.9294060Z     ):
2025-01-14T13:17:20.9294190Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9294291Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9294358Z         else:
2025-01-14T13:17:20.9294443Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9294509Z     
2025-01-14T13:17:20.9294653Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9294755Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9294827Z         )
2025-01-14T13:17:20.9294894Z     
2025-01-14T13:17:20.9295029Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9295144Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9295304Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9295377Z         else:
2025-01-14T13:17:20.9295460Z             continuum_state = None
2025-01-14T13:17:20.9295569Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9295710Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9295830Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9295939Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9296042Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9296137Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9296232Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9296303Z         ).to_numba(
2025-01-14T13:17:20.9296392Z             macro_atom_state,
2025-01-14T13:17:20.9296481Z             self.line_interaction_type,
2025-01-14T13:17:20.9296553Z         )
2025-01-14T13:17:20.9296656Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9296931Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9297009Z         ]
2025-01-14T13:17:20.9297311Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9297318Z 
2025-01-14T13:17:20.9297505Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9297680Z _________ ERROR at setup of test_opacity_state_to_numba[scatter-False] _________
2025-01-14T13:17:20.9297811Z 
2025-01-14T13:17:20.9298450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9298799Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9298809Z 
2025-01-14T13:17:20.9298895Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9299058Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9299154Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9299426Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9299558Z >       sim.iterate(10)
2025-01-14T13:17:20.9299563Z 
2025-01-14T13:17:20.9299666Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9299790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9299979Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9300246Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9300431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9300437Z 
2025-01-14T13:17:20.9300897Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9301133Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9301358Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9301730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9301898Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9302030Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9302037Z 
2025-01-14T13:17:20.9302128Z     def initialize_transport_state(
2025-01-14T13:17:20.9302197Z         self,
2025-01-14T13:17:20.9302278Z         simulation_state,
2025-01-14T13:17:20.9302359Z         opacity_state,
2025-01-14T13:17:20.9302434Z         macro_atom_state,
2025-01-14T13:17:20.9302508Z         plasma,
2025-01-14T13:17:20.9302581Z         no_of_packets,
2025-01-14T13:17:20.9302668Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9302741Z         iteration=0,
2025-01-14T13:17:20.9302814Z     ):
2025-01-14T13:17:20.9302937Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9303037Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9303109Z         else:
2025-01-14T13:17:20.9303197Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9303266Z     
2025-01-14T13:17:20.9303409Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9303513Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9303590Z         )
2025-01-14T13:17:20.9303657Z     
2025-01-14T13:17:20.9303792Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9303918Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9304071Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9304143Z         else:
2025-01-14T13:17:20.9304226Z             continuum_state = None
2025-01-14T13:17:20.9304331Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9304438Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9304534Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9304641Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9304743Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9304835Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9304930Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9305148Z         ).to_numba(
2025-01-14T13:17:20.9305232Z             macro_atom_state,
2025-01-14T13:17:20.9305318Z             self.line_interaction_type,
2025-01-14T13:17:20.9305390Z         )
2025-01-14T13:17:20.9305493Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9305760Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9305832Z         ]
2025-01-14T13:17:20.9306128Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9306133Z 
2025-01-14T13:17:20.9306284Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9306539Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9306839Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9307277Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9307437Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9307934Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9308108Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-False] ________
2025-01-14T13:17:20.9308111Z 
2025-01-14T13:17:20.9308747Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9309204Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9309212Z 
2025-01-14T13:17:20.9309373Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9309648Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9309808Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9310109Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9310215Z >       sim.iterate(10)
2025-01-14T13:17:20.9310219Z 
2025-01-14T13:17:20.9310323Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9310430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9310537Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9310691Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9310801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9310805Z 
2025-01-14T13:17:20.9311065Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9311276Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9311502Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9311876Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9312042Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9312176Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9312181Z 
2025-01-14T13:17:20.9312271Z     def initialize_transport_state(
2025-01-14T13:17:20.9312340Z         self,
2025-01-14T13:17:20.9312426Z         simulation_state,
2025-01-14T13:17:20.9312504Z         opacity_state,
2025-01-14T13:17:20.9312585Z         macro_atom_state,
2025-01-14T13:17:20.9312655Z         plasma,
2025-01-14T13:17:20.9312733Z         no_of_packets,
2025-01-14T13:17:20.9312818Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9313040Z         iteration=0,
2025-01-14T13:17:20.9313113Z     ):
2025-01-14T13:17:20.9313238Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9313337Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9313406Z         else:
2025-01-14T13:17:20.9313493Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9313559Z     
2025-01-14T13:17:20.9313701Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9313795Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9313869Z         )
2025-01-14T13:17:20.9313935Z     
2025-01-14T13:17:20.9314068Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9314289Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9314450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9314519Z         else:
2025-01-14T13:17:20.9314608Z             continuum_state = None
2025-01-14T13:17:20.9314718Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9314828Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9314925Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9315028Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9315131Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9315225Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9315324Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9315398Z         ).to_numba(
2025-01-14T13:17:20.9315483Z             macro_atom_state,
2025-01-14T13:17:20.9315569Z             self.line_interaction_type,
2025-01-14T13:17:20.9315643Z         )
2025-01-14T13:17:20.9315745Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9316022Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9316089Z         ]
2025-01-14T13:17:20.9316400Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9316404Z 
2025-01-14T13:17:20.9316557Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9316781Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-True] _________
2025-01-14T13:17:20.9316785Z 
2025-01-14T13:17:20.9317593Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9318020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9318025Z 
2025-01-14T13:17:20.9318186Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9318375Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9318608Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9319048Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9319225Z >       sim.iterate(10)
2025-01-14T13:17:20.9319232Z 
2025-01-14T13:17:20.9319458Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9319747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9320027Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9320241Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9320416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9320421Z 
2025-01-14T13:17:20.9320741Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9321030Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9321337Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9321923Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9322160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9322326Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9322331Z 
2025-01-14T13:17:20.9322530Z     def initialize_transport_state(
2025-01-14T13:17:20.9322665Z         self,
2025-01-14T13:17:20.9322817Z         simulation_state,
2025-01-14T13:17:20.9322965Z         opacity_state,
2025-01-14T13:17:20.9323072Z         macro_atom_state,
2025-01-14T13:17:20.9323240Z         plasma,
2025-01-14T13:17:20.9323500Z         no_of_packets,
2025-01-14T13:17:20.9323660Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9323767Z         iteration=0,
2025-01-14T13:17:20.9323900Z     ):
2025-01-14T13:17:20.9324048Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9324297Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9324402Z         else:
2025-01-14T13:17:20.9324547Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9324647Z     
2025-01-14T13:17:20.9324853Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9325024Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9325177Z         )
2025-01-14T13:17:20.9325314Z     
2025-01-14T13:17:20.9325477Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9325692Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9325919Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9326076Z         else:
2025-01-14T13:17:20.9326194Z             continuum_state = None
2025-01-14T13:17:20.9326364Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9326519Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9326710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9326863Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9327032Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9327158Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9327334Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9327498Z         ).to_numba(
2025-01-14T13:17:20.9327626Z             macro_atom_state,
2025-01-14T13:17:20.9327779Z             self.line_interaction_type,
2025-01-14T13:17:20.9327879Z         )
2025-01-14T13:17:20.9328557Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9329076Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9329276Z         ]
2025-01-14T13:17:20.9329825Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9329832Z 
2025-01-14T13:17:20.9330220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9330491Z _______ ERROR at setup of test_opacity_state_to_numba[downbranch-False] ________
2025-01-14T13:17:20.9330496Z 
2025-01-14T13:17:20.9331157Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9331759Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9331769Z 
2025-01-14T13:17:20.9331900Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9332221Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9332371Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9332614Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9332920Z >       sim.iterate(10)
2025-01-14T13:17:20.9332925Z 
2025-01-14T13:17:20.9333041Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9333315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9333450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9333682Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9333820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9333825Z 
2025-01-14T13:17:20.9334145Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9334554Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9334877Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9335220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9335418Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9335619Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9335624Z 
2025-01-14T13:17:20.9335799Z     def initialize_transport_state(
2025-01-14T13:17:20.9335955Z         self,
2025-01-14T13:17:20.9336068Z         simulation_state,
2025-01-14T13:17:20.9336215Z         opacity_state,
2025-01-14T13:17:20.9336341Z         macro_atom_state,
2025-01-14T13:17:20.9336507Z         plasma,
2025-01-14T13:17:20.9336664Z         no_of_packets,
2025-01-14T13:17:20.9336780Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9336918Z         iteration=0,
2025-01-14T13:17:20.9337038Z     ):
2025-01-14T13:17:20.9337276Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9337421Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9337557Z         else:
2025-01-14T13:17:20.9337674Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9337839Z     
2025-01-14T13:17:20.9338028Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9338420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9338602Z         )
2025-01-14T13:17:20.9338894Z     
2025-01-14T13:17:20.9339184Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9339475Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9339733Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9339836Z         else:
2025-01-14T13:17:20.9340037Z             continuum_state = None
2025-01-14T13:17:20.9340189Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9340369Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9340494Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9340683Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9340805Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9341028Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9341152Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9341293Z         ).to_numba(
2025-01-14T13:17:20.9341402Z             macro_atom_state,
2025-01-14T13:17:20.9341704Z             self.line_interaction_type,
2025-01-14T13:17:20.9341914Z         )
2025-01-14T13:17:20.9342054Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9342394Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9342510Z         ]
2025-01-14T13:17:20.9342869Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9342874Z 
2025-01-14T13:17:20.9343101Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9343368Z ________ ERROR at setup of test_opacity_state_to_numba[downbranch-True] ________
2025-01-14T13:17:20.9343505Z 
2025-01-14T13:17:20.9344240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9344625Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9344630Z 
2025-01-14T13:17:20.9344772Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9345015Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9345323Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9345535Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9345680Z >       sim.iterate(10)
2025-01-14T13:17:20.9345685Z 
2025-01-14T13:17:20.9345831Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9346028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9346225Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9346413Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9346583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9346587Z 
2025-01-14T13:17:20.9346880Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3784d58a70>
2025-01-14T13:17:20.9347177Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37845901d0>
2025-01-14T13:17:20.9347462Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889808c0>
2025-01-14T13:17:20.9347804Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3788983a10>
2025-01-14T13:17:20.9348030Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3782292480>
2025-01-14T13:17:20.9348233Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9348241Z 
2025-01-14T13:17:20.9348564Z     def initialize_transport_state(
2025-01-14T13:17:20.9348762Z         self,
2025-01-14T13:17:20.9348961Z         simulation_state,
2025-01-14T13:17:20.9349183Z         opacity_state,
2025-01-14T13:17:20.9349417Z         macro_atom_state,
2025-01-14T13:17:20.9349584Z         plasma,
2025-01-14T13:17:20.9349771Z         no_of_packets,
2025-01-14T13:17:20.9349890Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9350065Z         iteration=0,
2025-01-14T13:17:20.9350216Z     ):
2025-01-14T13:17:20.9350381Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9350565Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9350666Z         else:
2025-01-14T13:17:20.9350841Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9350957Z     
2025-01-14T13:17:20.9351172Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9351322Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9351456Z         )
2025-01-14T13:17:20.9351541Z     
2025-01-14T13:17:20.9351924Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9352078Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9352318Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9352420Z         else:
2025-01-14T13:17:20.9352557Z             continuum_state = None
2025-01-14T13:17:20.9352783Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9352923Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9353097Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9353241Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9353390Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9353557Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9353890Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9353994Z         ).to_numba(
2025-01-14T13:17:20.9354139Z             macro_atom_state,
2025-01-14T13:17:20.9354261Z             self.line_interaction_type,
2025-01-14T13:17:20.9354428Z         )
2025-01-14T13:17:20.9354597Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9354941Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9355076Z         ]
2025-01-14T13:17:20.9355409Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9355413Z 
2025-01-14T13:17:20.9355787Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9356016Z ____________ ERROR at setup of test_calculate_sobolev_line_opacity _____________
2025-01-14T13:17:20.9356022Z 
2025-01-14T13:17:20.9356737Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9357155Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9357159Z 
2025-01-14T13:17:20.9357284Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9357650Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9357859Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9358228Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9358473Z >       sim.iterate(10)
2025-01-14T13:17:20.9358481Z 
2025-01-14T13:17:20.9358772Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9359015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9359154Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9359363Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9359548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9359552Z 
2025-01-14T13:17:20.9359916Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3783fc7440>
2025-01-14T13:17:20.9360146Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3784512690>
2025-01-14T13:17:20.9360433Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f377eb66cf0>
2025-01-14T13:17:20.9360736Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378897b0b0>
2025-01-14T13:17:20.9361028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378897ae10>
2025-01-14T13:17:20.9361264Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9361269Z 
2025-01-14T13:17:20.9361391Z     def initialize_transport_state(
2025-01-14T13:17:20.9361535Z         self,
2025-01-14T13:17:20.9361755Z         simulation_state,
2025-01-14T13:17:20.9361940Z         opacity_state,
2025-01-14T13:17:20.9362084Z         macro_atom_state,
2025-01-14T13:17:20.9362224Z         plasma,
2025-01-14T13:17:20.9362329Z         no_of_packets,
2025-01-14T13:17:20.9362483Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9362573Z         iteration=0,
2025-01-14T13:17:20.9362787Z     ):
2025-01-14T13:17:20.9362948Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9363114Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9363252Z         else:
2025-01-14T13:17:20.9363347Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9363562Z     
2025-01-14T13:17:20.9363738Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9363904Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9364187Z         )
2025-01-14T13:17:20.9364306Z     
2025-01-14T13:17:20.9364673Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9364877Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9365063Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9365198Z         else:
2025-01-14T13:17:20.9365331Z             continuum_state = None
2025-01-14T13:17:20.9365532Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9365724Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9365849Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9366037Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9366166Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9366466Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9366615Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9366756Z         ).to_numba(
2025-01-14T13:17:20.9366885Z             macro_atom_state,
2025-01-14T13:17:20.9367052Z             self.line_interaction_type,
2025-01-14T13:17:20.9367176Z         )
2025-01-14T13:17:20.9367532Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9368041Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9368317Z         ]
2025-01-14T13:17:20.9368841Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9368847Z 
2025-01-14T13:17:20.9369028Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9369249Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9369586Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9370157Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9370360Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9370923Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9371147Z ________________ ERROR at setup of test_calculate_beta_sobolevs ________________
2025-01-14T13:17:20.9371151Z 
2025-01-14T13:17:20.9372074Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9372540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9372547Z 
2025-01-14T13:17:20.9372688Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9372926Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9373098Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9373321Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9384265Z >       sim.iterate(10)
2025-01-14T13:17:20.9384278Z 
2025-01-14T13:17:20.9384454Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:17:20.9384659Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9384838Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9385111Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9385309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9385316Z 
2025-01-14T13:17:20.9385843Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3783fc7440>
2025-01-14T13:17:20.9386069Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3784512690>
2025-01-14T13:17:20.9386576Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f377eb66cf0>
2025-01-14T13:17:20.9387072Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378897b0b0>
2025-01-14T13:17:20.9387354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378897ae10>
2025-01-14T13:17:20.9387586Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9387595Z 
2025-01-14T13:17:20.9387700Z     def initialize_transport_state(
2025-01-14T13:17:20.9387770Z         self,
2025-01-14T13:17:20.9387855Z         simulation_state,
2025-01-14T13:17:20.9387929Z         opacity_state,
2025-01-14T13:17:20.9388010Z         macro_atom_state,
2025-01-14T13:17:20.9388207Z         plasma,
2025-01-14T13:17:20.9388292Z         no_of_packets,
2025-01-14T13:17:20.9388386Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9388458Z         iteration=0,
2025-01-14T13:17:20.9388529Z     ):
2025-01-14T13:17:20.9388666Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9388770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9388837Z         else:
2025-01-14T13:17:20.9388919Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9388984Z     
2025-01-14T13:17:20.9389129Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9389227Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9389297Z         )
2025-01-14T13:17:20.9389363Z     
2025-01-14T13:17:20.9389501Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9389615Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9389782Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9389851Z         else:
2025-01-14T13:17:20.9389938Z             continuum_state = None
2025-01-14T13:17:20.9390047Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9390155Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9390255Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9390361Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9390465Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9390558Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9390654Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9390725Z         ).to_numba(
2025-01-14T13:17:20.9390806Z             macro_atom_state,
2025-01-14T13:17:20.9390894Z             self.line_interaction_type,
2025-01-14T13:17:20.9390970Z         )
2025-01-14T13:17:20.9391070Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9391352Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9391425Z         ]
2025-01-14T13:17:20.9391854Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9391863Z 
2025-01-14T13:17:20.9392021Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9392188Z ______________ ERROR at setup of test_hdf_plasma[number_density] _______________
2025-01-14T13:17:20.9392192Z 
2025-01-14T13:17:20.9392840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9393187Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9393197Z 
2025-01-14T13:17:20.9393292Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9393456Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9393555Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9393859Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9393947Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9394025Z >       sim.run_final()
2025-01-14T13:17:20.9394029Z 
2025-01-14T13:17:20.9394112Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9394227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9394324Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9394473Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9394569Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9394728Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9394944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9394949Z 
2025-01-14T13:17:20.9395216Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9395424Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9395647Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9395925Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9396085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9396233Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9396237Z 
2025-01-14T13:17:20.9396326Z     def initialize_transport_state(
2025-01-14T13:17:20.9396436Z         self,
2025-01-14T13:17:20.9396582Z         simulation_state,
2025-01-14T13:17:20.9396707Z         opacity_state,
2025-01-14T13:17:20.9396847Z         macro_atom_state,
2025-01-14T13:17:20.9396964Z         plasma,
2025-01-14T13:17:20.9397089Z         no_of_packets,
2025-01-14T13:17:20.9397224Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9397349Z         iteration=0,
2025-01-14T13:17:20.9397465Z     ):
2025-01-14T13:17:20.9397652Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9397752Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9397825Z         else:
2025-01-14T13:17:20.9397936Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9398019Z     
2025-01-14T13:17:20.9398158Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9398260Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9398326Z         )
2025-01-14T13:17:20.9398395Z     
2025-01-14T13:17:20.9398529Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9398642Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9398803Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9398872Z         else:
2025-01-14T13:17:20.9398960Z             continuum_state = None
2025-01-14T13:17:20.9399060Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9399175Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9399267Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9399377Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9399474Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9399575Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9399665Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9399742Z         ).to_numba(
2025-01-14T13:17:20.9399820Z             macro_atom_state,
2025-01-14T13:17:20.9399913Z             self.line_interaction_type,
2025-01-14T13:17:20.9399985Z         )
2025-01-14T13:17:20.9400088Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9400364Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9400429Z         ]
2025-01-14T13:17:20.9400738Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9400837Z 
2025-01-14T13:17:20.9400990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9401155Z _________________ ERROR at setup of test_hdf_plasma[beta_rad] __________________
2025-01-14T13:17:20.9401158Z 
2025-01-14T13:17:20.9401901Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9402387Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9402393Z 
2025-01-14T13:17:20.9402498Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9402652Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9402757Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9402934Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9403026Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9403103Z >       sim.run_final()
2025-01-14T13:17:20.9403107Z 
2025-01-14T13:17:20.9403191Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9403296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9403393Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9403536Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9403629Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9403790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9403894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9403898Z 
2025-01-14T13:17:20.9404171Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9404377Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9404602Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9405036Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9405322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9405557Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9405563Z 
2025-01-14T13:17:20.9405709Z     def initialize_transport_state(
2025-01-14T13:17:20.9405838Z         self,
2025-01-14T13:17:20.9405928Z         simulation_state,
2025-01-14T13:17:20.9406017Z         opacity_state,
2025-01-14T13:17:20.9406093Z         macro_atom_state,
2025-01-14T13:17:20.9406169Z         plasma,
2025-01-14T13:17:20.9406243Z         no_of_packets,
2025-01-14T13:17:20.9406332Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9406408Z         iteration=0,
2025-01-14T13:17:20.9406479Z     ):
2025-01-14T13:17:20.9406610Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9406712Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9406780Z         else:
2025-01-14T13:17:20.9406863Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9406934Z     
2025-01-14T13:17:20.9407068Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9407167Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9407236Z         )
2025-01-14T13:17:20.9407307Z     
2025-01-14T13:17:20.9407432Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9407551Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9407707Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9407779Z         else:
2025-01-14T13:17:20.9407862Z             continuum_state = None
2025-01-14T13:17:20.9408107Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9408218Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9408316Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9408424Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9408528Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9408625Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9408714Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9408795Z         ).to_numba(
2025-01-14T13:17:20.9408880Z             macro_atom_state,
2025-01-14T13:17:20.9408973Z             self.line_interaction_type,
2025-01-14T13:17:20.9409038Z         )
2025-01-14T13:17:20.9409222Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9409494Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9409572Z         ]
2025-01-14T13:17:20.9409881Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9409886Z 
2025-01-14T13:17:20.9410039Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9410225Z ______ ERROR at setup of test_hdf_plasma[general_level_boltzmann_factor] _______
2025-01-14T13:17:20.9410229Z 
2025-01-14T13:17:20.9410862Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9411217Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9411222Z 
2025-01-14T13:17:20.9411313Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9411468Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9411910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9412101Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9412195Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9412270Z >       sim.run_final()
2025-01-14T13:17:20.9412275Z 
2025-01-14T13:17:20.9412360Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9412472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9412575Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9412711Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9412812Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9412971Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9413101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9413107Z 
2025-01-14T13:17:20.9413570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9413929Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9414295Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9414569Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9414731Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9414866Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9414870Z 
2025-01-14T13:17:20.9414962Z     def initialize_transport_state(
2025-01-14T13:17:20.9415031Z         self,
2025-01-14T13:17:20.9415116Z         simulation_state,
2025-01-14T13:17:20.9415190Z         opacity_state,
2025-01-14T13:17:20.9415270Z         macro_atom_state,
2025-01-14T13:17:20.9415340Z         plasma,
2025-01-14T13:17:20.9415417Z         no_of_packets,
2025-01-14T13:17:20.9415639Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9415719Z         iteration=0,
2025-01-14T13:17:20.9415790Z     ):
2025-01-14T13:17:20.9415916Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9416019Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9416087Z         else:
2025-01-14T13:17:20.9416168Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9416235Z     
2025-01-14T13:17:20.9416376Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9416472Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9416543Z         )
2025-01-14T13:17:20.9416608Z     
2025-01-14T13:17:20.9416843Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9416961Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9417120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9417188Z         else:
2025-01-14T13:17:20.9417280Z             continuum_state = None
2025-01-14T13:17:20.9417384Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9417491Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9417587Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9417693Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9417798Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9417894Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9417990Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9418061Z         ).to_numba(
2025-01-14T13:17:20.9418146Z             macro_atom_state,
2025-01-14T13:17:20.9418237Z             self.line_interaction_type,
2025-01-14T13:17:20.9418310Z         )
2025-01-14T13:17:20.9418410Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9418688Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9418757Z         ]
2025-01-14T13:17:20.9419065Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9419070Z 
2025-01-14T13:17:20.9419221Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9419387Z __________ ERROR at setup of test_hdf_plasma[level_boltzmann_factor] ___________
2025-01-14T13:17:20.9419391Z 
2025-01-14T13:17:20.9420035Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9420386Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9420390Z 
2025-01-14T13:17:20.9420484Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9420645Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9420740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9420919Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9421007Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9421084Z >       sim.run_final()
2025-01-14T13:17:20.9421088Z 
2025-01-14T13:17:20.9421168Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9421277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9421380Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9421763Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9421932Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9422199Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9422386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9422547Z 
2025-01-14T13:17:20.9422890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9423102Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9423323Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9423598Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9423759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9423896Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9423900Z 
2025-01-14T13:17:20.9424098Z     def initialize_transport_state(
2025-01-14T13:17:20.9424180Z         self,
2025-01-14T13:17:20.9424267Z         simulation_state,
2025-01-14T13:17:20.9424341Z         opacity_state,
2025-01-14T13:17:20.9424424Z         macro_atom_state,
2025-01-14T13:17:20.9424495Z         plasma,
2025-01-14T13:17:20.9424578Z         no_of_packets,
2025-01-14T13:17:20.9424659Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9424734Z         iteration=0,
2025-01-14T13:17:20.9424807Z     ):
2025-01-14T13:17:20.9424940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9425037Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9425113Z         else:
2025-01-14T13:17:20.9425191Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9425264Z     
2025-01-14T13:17:20.9425400Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9425496Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9425567Z         )
2025-01-14T13:17:20.9425629Z     
2025-01-14T13:17:20.9425768Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9425881Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9426042Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9426114Z         else:
2025-01-14T13:17:20.9426204Z             continuum_state = None
2025-01-14T13:17:20.9426304Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9426417Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9426507Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9426618Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9426717Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9426816Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9426905Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9426980Z         ).to_numba(
2025-01-14T13:17:20.9427061Z             macro_atom_state,
2025-01-14T13:17:20.9427149Z             self.line_interaction_type,
2025-01-14T13:17:20.9427220Z         )
2025-01-14T13:17:20.9427320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9427594Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9427670Z         ]
2025-01-14T13:17:20.9427975Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9427979Z 
2025-01-14T13:17:20.9428127Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9428300Z ________ ERROR at setup of test_hdf_plasma[stimulated_emission_factor] _________
2025-01-14T13:17:20.9428304Z 
2025-01-14T13:17:20.9428943Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9429289Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9429293Z 
2025-01-14T13:17:20.9429472Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9429623Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9429728Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9429897Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9429990Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9430081Z >       sim.run_final()
2025-01-14T13:17:20.9430099Z 
2025-01-14T13:17:20.9430241Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9430430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9430592Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9430970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9431130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9431342Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9431448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9431457Z 
2025-01-14T13:17:20.9431923Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9432129Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9432354Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9432635Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9432796Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9432939Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9432948Z 
2025-01-14T13:17:20.9433042Z     def initialize_transport_state(
2025-01-14T13:17:20.9433118Z         self,
2025-01-14T13:17:20.9433196Z         simulation_state,
2025-01-14T13:17:20.9433286Z         opacity_state,
2025-01-14T13:17:20.9433369Z         macro_atom_state,
2025-01-14T13:17:20.9433446Z         plasma,
2025-01-14T13:17:20.9433520Z         no_of_packets,
2025-01-14T13:17:20.9433606Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9433680Z         iteration=0,
2025-01-14T13:17:20.9433756Z     ):
2025-01-14T13:17:20.9433879Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9433982Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9434059Z         else:
2025-01-14T13:17:20.9434140Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9434214Z     
2025-01-14T13:17:20.9434346Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9434443Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9434512Z         )
2025-01-14T13:17:20.9434583Z     
2025-01-14T13:17:20.9434707Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9434819Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9434971Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9435048Z         else:
2025-01-14T13:17:20.9435130Z             continuum_state = None
2025-01-14T13:17:20.9435234Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9435340Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9435436Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9435546Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9435642Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9435740Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9435831Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9435909Z         ).to_numba(
2025-01-14T13:17:20.9435992Z             macro_atom_state,
2025-01-14T13:17:20.9436088Z             self.line_interaction_type,
2025-01-14T13:17:20.9436156Z         )
2025-01-14T13:17:20.9436262Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9436703Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9436781Z         ]
2025-01-14T13:17:20.9437080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9437090Z 
2025-01-14T13:17:20.9437235Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9437406Z ________________ ERROR at setup of test_hdf_plasma[t_electrons] ________________
2025-01-14T13:17:20.9437410Z 
2025-01-14T13:17:20.9438144Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9438509Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9438519Z 
2025-01-14T13:17:20.9438610Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9438789Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9438965Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9439271Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9439420Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9439543Z >       sim.run_final()
2025-01-14T13:17:20.9439549Z 
2025-01-14T13:17:20.9439691Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9439874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9440033Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9440182Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9440284Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9440438Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9440553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9440557Z 
2025-01-14T13:17:20.9440829Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9441030Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9441258Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9441529Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9441810Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9441953Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9441958Z 
2025-01-14T13:17:20.9442050Z     def initialize_transport_state(
2025-01-14T13:17:20.9442119Z         self,
2025-01-14T13:17:20.9442201Z         simulation_state,
2025-01-14T13:17:20.9442282Z         opacity_state,
2025-01-14T13:17:20.9442362Z         macro_atom_state,
2025-01-14T13:17:20.9442434Z         plasma,
2025-01-14T13:17:20.9442508Z         no_of_packets,
2025-01-14T13:17:20.9442592Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9442667Z         iteration=0,
2025-01-14T13:17:20.9442738Z     ):
2025-01-14T13:17:20.9442866Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9442971Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9443040Z         else:
2025-01-14T13:17:20.9443126Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9443192Z     
2025-01-14T13:17:20.9443335Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9443437Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9443509Z         )
2025-01-14T13:17:20.9443575Z     
2025-01-14T13:17:20.9443711Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9443825Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9444119Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9444194Z         else:
2025-01-14T13:17:20.9444278Z             continuum_state = None
2025-01-14T13:17:20.9444388Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9444496Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9444593Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9444700Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9444806Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9444903Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9445108Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9445182Z         ).to_numba(
2025-01-14T13:17:20.9445267Z             macro_atom_state,
2025-01-14T13:17:20.9445356Z             self.line_interaction_type,
2025-01-14T13:17:20.9445430Z         )
2025-01-14T13:17:20.9445536Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9445814Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9445887Z         ]
2025-01-14T13:17:20.9446190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9446194Z 
2025-01-14T13:17:20.9446346Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9446506Z _______________ ERROR at setup of test_hdf_plasma[wavelength_cm] _______________
2025-01-14T13:17:20.9446510Z 
2025-01-14T13:17:20.9447144Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9447679Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9447700Z 
2025-01-14T13:17:20.9447849Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9448112Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9448273Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9448534Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9448625Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9448707Z >       sim.run_final()
2025-01-14T13:17:20.9448711Z 
2025-01-14T13:17:20.9448795Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9448913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9449015Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9449165Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9449260Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9449419Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9449534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9449539Z 
2025-01-14T13:17:20.9449800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9450008Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9450226Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9450500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9450659Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9450806Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9450810Z 
2025-01-14T13:17:20.9450903Z     def initialize_transport_state(
2025-01-14T13:17:20.9450973Z         self,
2025-01-14T13:17:20.9451148Z         simulation_state,
2025-01-14T13:17:20.9451223Z         opacity_state,
2025-01-14T13:17:20.9451307Z         macro_atom_state,
2025-01-14T13:17:20.9451381Z         plasma,
2025-01-14T13:17:20.9451458Z         no_of_packets,
2025-01-14T13:17:20.9451538Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9452036Z         iteration=0,
2025-01-14T13:17:20.9452107Z     ):
2025-01-14T13:17:20.9452241Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9452339Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9452414Z         else:
2025-01-14T13:17:20.9452493Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9452565Z     
2025-01-14T13:17:20.9452821Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9452931Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9452999Z         )
2025-01-14T13:17:20.9453070Z     
2025-01-14T13:17:20.9453207Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9453324Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9453492Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9453561Z         else:
2025-01-14T13:17:20.9453650Z             continuum_state = None
2025-01-14T13:17:20.9453752Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9453865Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9453957Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9454068Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9454168Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9454267Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9454360Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9454436Z         ).to_numba(
2025-01-14T13:17:20.9454520Z             macro_atom_state,
2025-01-14T13:17:20.9454608Z             self.line_interaction_type,
2025-01-14T13:17:20.9454685Z         )
2025-01-14T13:17:20.9454785Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9455060Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9455128Z         ]
2025-01-14T13:17:20.9455433Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9455437Z 
2025-01-14T13:17:20.9455583Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9455755Z __________ ERROR at setup of test_hdf_plasma[lines_lower_level_index] __________
2025-01-14T13:17:20.9455759Z 
2025-01-14T13:17:20.9456806Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9457276Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9457285Z 
2025-01-14T13:17:20.9457389Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9457545Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9457654Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9457828Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9457924Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9458002Z >       sim.run_final()
2025-01-14T13:17:20.9458005Z 
2025-01-14T13:17:20.9458097Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9458217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9458321Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9458470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9458566Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9458892Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9459011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9459015Z 
2025-01-14T13:17:20.9459290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9459496Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9459733Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9460015Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9460264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9460420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9460424Z 
2025-01-14T13:17:20.9460518Z     def initialize_transport_state(
2025-01-14T13:17:20.9460601Z         self,
2025-01-14T13:17:20.9460684Z         simulation_state,
2025-01-14T13:17:20.9460768Z         opacity_state,
2025-01-14T13:17:20.9460846Z         macro_atom_state,
2025-01-14T13:17:20.9460971Z         plasma,
2025-01-14T13:17:20.9461050Z         no_of_packets,
2025-01-14T13:17:20.9461141Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9461216Z         iteration=0,
2025-01-14T13:17:20.9461289Z     ):
2025-01-14T13:17:20.9461419Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9461521Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9461775Z         else:
2025-01-14T13:17:20.9461865Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9461942Z     
2025-01-14T13:17:20.9462087Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9462192Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9462261Z         )
2025-01-14T13:17:20.9462332Z     
2025-01-14T13:17:20.9462465Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9462592Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9462749Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9462823Z         else:
2025-01-14T13:17:20.9462907Z             continuum_state = None
2025-01-14T13:17:20.9463013Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9463121Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9463218Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9463326Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9463431Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9463533Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9463625Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9463703Z         ).to_numba(
2025-01-14T13:17:20.9463782Z             macro_atom_state,
2025-01-14T13:17:20.9463885Z             self.line_interaction_type,
2025-01-14T13:17:20.9463955Z         )
2025-01-14T13:17:20.9464065Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9464339Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9464411Z         ]
2025-01-14T13:17:20.9464808Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9464816Z 
2025-01-14T13:17:20.9465082Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9465371Z ______________ ERROR at setup of test_hdf_plasma[ionization_data] ______________
2025-01-14T13:17:20.9465377Z 
2025-01-14T13:17:20.9466203Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9466703Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9466708Z 
2025-01-14T13:17:20.9466808Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9466969Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9467069Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9467252Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9467354Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9467432Z >       sim.run_final()
2025-01-14T13:17:20.9467435Z 
2025-01-14T13:17:20.9467524Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9467742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9467850Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9467993Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9468097Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9468252Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9468366Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9468370Z 
2025-01-14T13:17:20.9468634Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9468851Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9469088Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9469364Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9469530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9469669Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9469673Z 
2025-01-14T13:17:20.9469771Z     def initialize_transport_state(
2025-01-14T13:17:20.9469842Z         self,
2025-01-14T13:17:20.9469928Z         simulation_state,
2025-01-14T13:17:20.9470003Z         opacity_state,
2025-01-14T13:17:20.9470088Z         macro_atom_state,
2025-01-14T13:17:20.9470160Z         plasma,
2025-01-14T13:17:20.9470249Z         no_of_packets,
2025-01-14T13:17:20.9470339Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9470413Z         iteration=0,
2025-01-14T13:17:20.9470487Z     ):
2025-01-14T13:17:20.9470610Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9470721Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9470793Z         else:
2025-01-14T13:17:20.9470886Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9470958Z     
2025-01-14T13:17:20.9471104Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9471202Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9471286Z         )
2025-01-14T13:17:20.9471360Z     
2025-01-14T13:17:20.9471504Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9471734Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9471894Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9471966Z         else:
2025-01-14T13:17:20.9472056Z             continuum_state = None
2025-01-14T13:17:20.9472166Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9472276Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9472374Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9472480Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9472596Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9472693Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9472789Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9472863Z         ).to_numba(
2025-01-14T13:17:20.9473082Z             macro_atom_state,
2025-01-14T13:17:20.9473172Z             self.line_interaction_type,
2025-01-14T13:17:20.9473298Z         )
2025-01-14T13:17:20.9473475Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9473956Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9474076Z         ]
2025-01-14T13:17:20.9474512Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9474517Z 
2025-01-14T13:17:20.9474671Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9474950Z __________________ ERROR at setup of test_hdf_plasma[density] __________________
2025-01-14T13:17:20.9474955Z 
2025-01-14T13:17:20.9475595Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9475951Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9475960Z 
2025-01-14T13:17:20.9476051Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9476213Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9476311Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9476489Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9476577Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9476657Z >       sim.run_final()
2025-01-14T13:17:20.9476661Z 
2025-01-14T13:17:20.9476746Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9476860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9476960Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9477109Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9477203Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9477362Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9477472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9477475Z 
2025-01-14T13:17:20.9477741Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9477947Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9478166Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9478450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9478610Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9478754Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9478761Z 
2025-01-14T13:17:20.9478851Z     def initialize_transport_state(
2025-01-14T13:17:20.9478928Z         self,
2025-01-14T13:17:20.9479011Z         simulation_state,
2025-01-14T13:17:20.9479086Z         opacity_state,
2025-01-14T13:17:20.9479166Z         macro_atom_state,
2025-01-14T13:17:20.9479238Z         plasma,
2025-01-14T13:17:20.9479315Z         no_of_packets,
2025-01-14T13:17:20.9479399Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9479478Z         iteration=0,
2025-01-14T13:17:20.9479545Z     ):
2025-01-14T13:17:20.9479672Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9479767Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9479842Z         else:
2025-01-14T13:17:20.9479924Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9479995Z     
2025-01-14T13:17:20.9480129Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9480232Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9480389Z         )
2025-01-14T13:17:20.9480461Z     
2025-01-14T13:17:20.9480596Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9480710Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9480868Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9480937Z         else:
2025-01-14T13:17:20.9481025Z             continuum_state = None
2025-01-14T13:17:20.9481150Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9481342Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9481494Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9481951Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9482122Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9482283Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9482435Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9482521Z         ).to_numba(
2025-01-14T13:17:20.9482602Z             macro_atom_state,
2025-01-14T13:17:20.9482696Z             self.line_interaction_type,
2025-01-14T13:17:20.9482769Z         )
2025-01-14T13:17:20.9482869Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9483141Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9483208Z         ]
2025-01-14T13:17:20.9483512Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9483517Z 
2025-01-14T13:17:20.9483663Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9483829Z ________________ ERROR at setup of test_hdf_plasma[atomic_mass] ________________
2025-01-14T13:17:20.9483833Z 
2025-01-14T13:17:20.9484460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9484817Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9484821Z 
2025-01-14T13:17:20.9484915Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9485067Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9485168Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9485338Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9485433Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9485511Z >       sim.run_final()
2025-01-14T13:17:20.9485514Z 
2025-01-14T13:17:20.9485600Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9485706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9485807Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9485955Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9486050Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9486207Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9486310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9486313Z 
2025-01-14T13:17:20.9486583Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9486782Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9487009Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9487283Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9487447Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9487731Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9487736Z 
2025-01-14T13:17:20.9487824Z     def initialize_transport_state(
2025-01-14T13:17:20.9487898Z         self,
2025-01-14T13:17:20.9487975Z         simulation_state,
2025-01-14T13:17:20.9488053Z         opacity_state,
2025-01-14T13:17:20.9488129Z         macro_atom_state,
2025-01-14T13:17:20.9488203Z         plasma,
2025-01-14T13:17:20.9488276Z         no_of_packets,
2025-01-14T13:17:20.9488362Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9488435Z         iteration=0,
2025-01-14T13:17:20.9488507Z     ):
2025-01-14T13:17:20.9488633Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9488809Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9488881Z         else:
2025-01-14T13:17:20.9488964Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9489038Z     
2025-01-14T13:17:20.9489174Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9489281Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9489356Z         )
2025-01-14T13:17:20.9489490Z     
2025-01-14T13:17:20.9489713Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9489904Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9490158Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9490277Z         else:
2025-01-14T13:17:20.9490416Z             continuum_state = None
2025-01-14T13:17:20.9490577Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9490688Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9490783Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9490895Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9490998Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9491096Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9491192Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9491269Z         ).to_numba(
2025-01-14T13:17:20.9491347Z             macro_atom_state,
2025-01-14T13:17:20.9491439Z             self.line_interaction_type,
2025-01-14T13:17:20.9491506Z         )
2025-01-14T13:17:20.9491811Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9492090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9492164Z         ]
2025-01-14T13:17:20.9492467Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9492471Z 
2025-01-14T13:17:20.9492625Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9492794Z ___________ ERROR at setup of test_hdf_plasma[level_number_density] ____________
2025-01-14T13:17:20.9492799Z 
2025-01-14T13:17:20.9493430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9493788Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9493791Z 
2025-01-14T13:17:20.9493882Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9494038Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9494134Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9494318Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9494416Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9494491Z >       sim.run_final()
2025-01-14T13:17:20.9494495Z 
2025-01-14T13:17:20.9494580Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9494686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9494921Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9495061Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9495163Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9495315Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9495422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9495426Z 
2025-01-14T13:17:20.9495687Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9495899Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9496233Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9496509Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9496673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9496810Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9496814Z 
2025-01-14T13:17:20.9496906Z     def initialize_transport_state(
2025-01-14T13:17:20.9496975Z         self,
2025-01-14T13:17:20.9497057Z         simulation_state,
2025-01-14T13:17:20.9497132Z         opacity_state,
2025-01-14T13:17:20.9497214Z         macro_atom_state,
2025-01-14T13:17:20.9497283Z         plasma,
2025-01-14T13:17:20.9497363Z         no_of_packets,
2025-01-14T13:17:20.9497445Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9497527Z         iteration=0,
2025-01-14T13:17:20.9497598Z     ):
2025-01-14T13:17:20.9497767Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9497939Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9498054Z         else:
2025-01-14T13:17:20.9498190Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9498300Z     
2025-01-14T13:17:20.9498532Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9498694Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9498820Z         )
2025-01-14T13:17:20.9498902Z     
2025-01-14T13:17:20.9499039Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9499153Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9499308Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9499376Z         else:
2025-01-14T13:17:20.9499463Z             continuum_state = None
2025-01-14T13:17:20.9499566Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9499673Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9499772Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9499879Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9499982Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9500075Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9500172Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9500243Z         ).to_numba(
2025-01-14T13:17:20.9500326Z             macro_atom_state,
2025-01-14T13:17:20.9500413Z             self.line_interaction_type,
2025-01-14T13:17:20.9500485Z         )
2025-01-14T13:17:20.9500585Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9500858Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9500928Z         ]
2025-01-14T13:17:20.9501233Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9501237Z 
2025-01-14T13:17:20.9501387Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9501657Z __________ ERROR at setup of test_hdf_plasma[lines_upper_level_index] __________
2025-01-14T13:17:20.9501661Z 
2025-01-14T13:17:20.9502435Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9502780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9502784Z 
2025-01-14T13:17:20.9502879Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9503034Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9503130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9503416Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9503507Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9503587Z >       sim.run_final()
2025-01-14T13:17:20.9503591Z 
2025-01-14T13:17:20.9503671Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9503787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9503883Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9504033Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9504130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9504286Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9504395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9504399Z 
2025-01-14T13:17:20.9504660Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9504868Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9505086Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9505363Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9505525Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9505669Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9505672Z 
2025-01-14T13:17:20.9505761Z     def initialize_transport_state(
2025-01-14T13:17:20.9505834Z         self,
2025-01-14T13:17:20.9505917Z         simulation_state,
2025-01-14T13:17:20.9505992Z         opacity_state,
2025-01-14T13:17:20.9506075Z         macro_atom_state,
2025-01-14T13:17:20.9506147Z         plasma,
2025-01-14T13:17:20.9506226Z         no_of_packets,
2025-01-14T13:17:20.9506307Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9506397Z         iteration=0,
2025-01-14T13:17:20.9506523Z     ):
2025-01-14T13:17:20.9506750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9506904Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9507027Z         else:
2025-01-14T13:17:20.9507157Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9507278Z     
2025-01-14T13:17:20.9507502Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9507643Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9507712Z         )
2025-01-14T13:17:20.9507786Z     
2025-01-14T13:17:20.9507913Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9508029Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9508184Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9508253Z         else:
2025-01-14T13:17:20.9508343Z             continuum_state = None
2025-01-14T13:17:20.9508444Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9508559Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9508649Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9508759Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9508857Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9509056Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9509150Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9509227Z         ).to_numba(
2025-01-14T13:17:20.9509309Z             macro_atom_state,
2025-01-14T13:17:20.9509400Z             self.line_interaction_type,
2025-01-14T13:17:20.9509468Z         )
2025-01-14T13:17:20.9509580Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9509852Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9509921Z         ]
2025-01-14T13:17:20.9510329Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9510334Z 
2025-01-14T13:17:20.9510483Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9510636Z ____________________ ERROR at setup of test_hdf_plasma[nu] _____________________
2025-01-14T13:17:20.9510644Z 
2025-01-14T13:17:20.9511265Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9511720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9511724Z 
2025-01-14T13:17:20.9511822Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9511975Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9512077Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9512250Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9512342Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9512418Z >       sim.run_final()
2025-01-14T13:17:20.9512421Z 
2025-01-14T13:17:20.9512511Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9512617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9512718Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9512860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9512955Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9513111Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9513214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9513218Z 
2025-01-14T13:17:20.9513491Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9513693Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9513918Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9514187Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9514353Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9514491Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9514495Z 
2025-01-14T13:17:20.9514584Z     def initialize_transport_state(
2025-01-14T13:17:20.9514658Z         self,
2025-01-14T13:17:20.9514736Z         simulation_state,
2025-01-14T13:17:20.9514815Z         opacity_state,
2025-01-14T13:17:20.9514897Z         macro_atom_state,
2025-01-14T13:17:20.9514973Z         plasma,
2025-01-14T13:17:20.9515071Z         no_of_packets,
2025-01-14T13:17:20.9515222Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9515346Z         iteration=0,
2025-01-14T13:17:20.9515473Z     ):
2025-01-14T13:17:20.9515679Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9515839Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9515953Z         else:
2025-01-14T13:17:20.9516241Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9516313Z     
2025-01-14T13:17:20.9516458Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9516561Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9516628Z         )
2025-01-14T13:17:20.9516701Z     
2025-01-14T13:17:20.9516831Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9516947Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9517103Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9517177Z         else:
2025-01-14T13:17:20.9517260Z             continuum_state = None
2025-01-14T13:17:20.9517480Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9517592Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9517688Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9517795Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9517901Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9518000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9518094Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9518170Z         ).to_numba(
2025-01-14T13:17:20.9518248Z             macro_atom_state,
2025-01-14T13:17:20.9518341Z             self.line_interaction_type,
2025-01-14T13:17:20.9518408Z         )
2025-01-14T13:17:20.9518513Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9518780Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9518852Z         ]
2025-01-14T13:17:20.9519152Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9519157Z 
2025-01-14T13:17:20.9519306Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9519465Z _______________ ERROR at setup of test_hdf_plasma[beta_sobolev] ________________
2025-01-14T13:17:20.9519478Z 
2025-01-14T13:17:20.9520105Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9520455Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9520459Z 
2025-01-14T13:17:20.9520547Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9520702Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9520801Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9520977Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9521064Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9521148Z >       sim.run_final()
2025-01-14T13:17:20.9521155Z 
2025-01-14T13:17:20.9521242Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9521347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9521450Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9521707Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9521808Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9521960Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9522067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9522072Z 
2025-01-14T13:17:20.9522335Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9522538Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9522763Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9523157Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9523323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9523458Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9523462Z 
2025-01-14T13:17:20.9523606Z     def initialize_transport_state(
2025-01-14T13:17:20.9523721Z         self,
2025-01-14T13:17:20.9523858Z         simulation_state,
2025-01-14T13:17:20.9523984Z         opacity_state,
2025-01-14T13:17:20.9524118Z         macro_atom_state,
2025-01-14T13:17:20.9524234Z         plasma,
2025-01-14T13:17:20.9524361Z         no_of_packets,
2025-01-14T13:17:20.9524496Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9524772Z         iteration=0,
2025-01-14T13:17:20.9524848Z     ):
2025-01-14T13:17:20.9524985Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9525093Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9525166Z         else:
2025-01-14T13:17:20.9525249Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9525315Z     
2025-01-14T13:17:20.9525454Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9525549Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9525622Z         )
2025-01-14T13:17:20.9525690Z     
2025-01-14T13:17:20.9525819Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9525937Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9526096Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9526166Z         else:
2025-01-14T13:17:20.9526254Z             continuum_state = None
2025-01-14T13:17:20.9526360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9526472Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9526569Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9526678Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9526781Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9526874Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9526971Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9527042Z         ).to_numba(
2025-01-14T13:17:20.9527125Z             macro_atom_state,
2025-01-14T13:17:20.9527213Z             self.line_interaction_type,
2025-01-14T13:17:20.9527286Z         )
2025-01-14T13:17:20.9527387Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9527660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9527727Z         ]
2025-01-14T13:17:20.9528033Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9528038Z 
2025-01-14T13:17:20.9528191Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9528364Z _________ ERROR at setup of test_hdf_plasma[transition_probabilities] __________
2025-01-14T13:17:20.9528368Z 
2025-01-14T13:17:20.9529007Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9529352Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9529356Z 
2025-01-14T13:17:20.9529451Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9529605Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9529708Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9529883Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9529971Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9530158Z >       sim.run_final()
2025-01-14T13:17:20.9530162Z 
2025-01-14T13:17:20.9530244Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9530357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9530454Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9530597Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9530691Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9530848Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9530956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9530965Z 
2025-01-14T13:17:20.9531310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9531521Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9532050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9532553Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9532824Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9533023Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9533028Z 
2025-01-14T13:17:20.9533121Z     def initialize_transport_state(
2025-01-14T13:17:20.9533199Z         self,
2025-01-14T13:17:20.9533279Z         simulation_state,
2025-01-14T13:17:20.9533359Z         opacity_state,
2025-01-14T13:17:20.9533440Z         macro_atom_state,
2025-01-14T13:17:20.9533518Z         plasma,
2025-01-14T13:17:20.9533598Z         no_of_packets,
2025-01-14T13:17:20.9533685Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9533764Z         iteration=0,
2025-01-14T13:17:20.9533831Z     ):
2025-01-14T13:17:20.9533965Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9534067Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9534140Z         else:
2025-01-14T13:17:20.9534219Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9534290Z     
2025-01-14T13:17:20.9534429Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9534531Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9534600Z         )
2025-01-14T13:17:20.9534673Z     
2025-01-14T13:17:20.9534802Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9534921Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9535078Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9535154Z         else:
2025-01-14T13:17:20.9535249Z             continuum_state = None
2025-01-14T13:17:20.9535352Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9535467Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9535560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9535674Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9535773Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9535872Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9535963Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9536039Z         ).to_numba(
2025-01-14T13:17:20.9536117Z             macro_atom_state,
2025-01-14T13:17:20.9536209Z             self.line_interaction_type,
2025-01-14T13:17:20.9536276Z         )
2025-01-14T13:17:20.9536381Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9536655Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9536723Z         ]
2025-01-14T13:17:20.9537028Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9537032Z 
2025-01-14T13:17:20.9537330Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9537492Z ____________________ ERROR at setup of test_hdf_plasma[phi] ____________________
2025-01-14T13:17:20.9537496Z 
2025-01-14T13:17:20.9538125Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9538474Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9538479Z 
2025-01-14T13:17:20.9538572Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9538856Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9538963Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9539136Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9539232Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9539307Z >       sim.run_final()
2025-01-14T13:17:20.9539311Z 
2025-01-14T13:17:20.9539396Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9539503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9539606Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9539745Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9539844Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9540000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9540104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9540112Z 
2025-01-14T13:17:20.9540488Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9540839Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9541231Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9541760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9541933Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9542075Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9542080Z 
2025-01-14T13:17:20.9542170Z     def initialize_transport_state(
2025-01-14T13:17:20.9542244Z         self,
2025-01-14T13:17:20.9542321Z         simulation_state,
2025-01-14T13:17:20.9542401Z         opacity_state,
2025-01-14T13:17:20.9542477Z         macro_atom_state,
2025-01-14T13:17:20.9542556Z         plasma,
2025-01-14T13:17:20.9542630Z         no_of_packets,
2025-01-14T13:17:20.9542717Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9542793Z         iteration=0,
2025-01-14T13:17:20.9542865Z     ):
2025-01-14T13:17:20.9542990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9543094Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9543163Z         else:
2025-01-14T13:17:20.9543246Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9543313Z     
2025-01-14T13:17:20.9543458Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9543559Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9543627Z         )
2025-01-14T13:17:20.9543698Z     
2025-01-14T13:17:20.9543824Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9543941Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9544092Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9544170Z         else:
2025-01-14T13:17:20.9544253Z             continuum_state = None
2025-01-14T13:17:20.9544359Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9544466Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9544701Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9544807Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9544912Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9545005Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9545107Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9545186Z         ).to_numba(
2025-01-14T13:17:20.9545265Z             macro_atom_state,
2025-01-14T13:17:20.9545358Z             self.line_interaction_type,
2025-01-14T13:17:20.9545426Z         )
2025-01-14T13:17:20.9545535Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9545912Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9545988Z         ]
2025-01-14T13:17:20.9546289Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9546297Z 
2025-01-14T13:17:20.9546449Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9546614Z ____________ ERROR at setup of test_hdf_plasma[electron_densities] _____________
2025-01-14T13:17:20.9546618Z 
2025-01-14T13:17:20.9547247Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9547599Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9547603Z 
2025-01-14T13:17:20.9547695Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9547847Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9547945Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9548122Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9548212Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9548293Z >       sim.run_final()
2025-01-14T13:17:20.9548297Z 
2025-01-14T13:17:20.9548381Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9548485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9548594Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9548735Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9548837Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9549103Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9549294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9549301Z 
2025-01-14T13:17:20.9549757Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9550079Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9550307Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9550587Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9550751Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9550885Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9550889Z 
2025-01-14T13:17:20.9550981Z     def initialize_transport_state(
2025-01-14T13:17:20.9551049Z         self,
2025-01-14T13:17:20.9551130Z         simulation_state,
2025-01-14T13:17:20.9551204Z         opacity_state,
2025-01-14T13:17:20.9551287Z         macro_atom_state,
2025-01-14T13:17:20.9551359Z         plasma,
2025-01-14T13:17:20.9551437Z         no_of_packets,
2025-01-14T13:17:20.9551518Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9551762Z         iteration=0,
2025-01-14T13:17:20.9551988Z     ):
2025-01-14T13:17:20.9552124Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9552228Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9552298Z         else:
2025-01-14T13:17:20.9552380Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9552446Z     
2025-01-14T13:17:20.9552587Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9552685Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9552759Z         )
2025-01-14T13:17:20.9552825Z     
2025-01-14T13:17:20.9552959Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9553071Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9553336Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9553409Z         else:
2025-01-14T13:17:20.9553497Z             continuum_state = None
2025-01-14T13:17:20.9553599Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9553713Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9553805Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9553915Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9554018Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9554110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9554206Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9554277Z         ).to_numba(
2025-01-14T13:17:20.9554359Z             macro_atom_state,
2025-01-14T13:17:20.9554446Z             self.line_interaction_type,
2025-01-14T13:17:20.9554520Z         )
2025-01-14T13:17:20.9554622Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9554898Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9554967Z         ]
2025-01-14T13:17:20.9555271Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9555279Z 
2025-01-14T13:17:20.9555429Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9555580Z ___________________ ERROR at setup of test_hdf_plasma[t_rad] ___________________
2025-01-14T13:17:20.9555584Z 
2025-01-14T13:17:20.9556220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9556565Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9556572Z 
2025-01-14T13:17:20.9556666Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9556818Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9556961Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9557277Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9557420Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9557549Z >       sim.run_final()
2025-01-14T13:17:20.9557555Z 
2025-01-14T13:17:20.9557691Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9557874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9558042Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9558191Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9558293Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9558450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9558556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9558560Z 
2025-01-14T13:17:20.9558830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9559129Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9559351Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9559626Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9559782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9559922Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9559926Z 
2025-01-14T13:17:20.9560015Z     def initialize_transport_state(
2025-01-14T13:17:20.9560089Z         self,
2025-01-14T13:17:20.9560170Z         simulation_state,
2025-01-14T13:17:20.9560327Z         opacity_state,
2025-01-14T13:17:20.9560408Z         macro_atom_state,
2025-01-14T13:17:20.9560484Z         plasma,
2025-01-14T13:17:20.9560563Z         no_of_packets,
2025-01-14T13:17:20.9560645Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9560728Z         iteration=0,
2025-01-14T13:17:20.9560795Z     ):
2025-01-14T13:17:20.9560955Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9561052Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9561124Z         else:
2025-01-14T13:17:20.9561202Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9561273Z     
2025-01-14T13:17:20.9561406Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9561506Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9561675Z         )
2025-01-14T13:17:20.9561748Z     
2025-01-14T13:17:20.9561875Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9561994Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9562145Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9562219Z         else:
2025-01-14T13:17:20.9562306Z             continuum_state = None
2025-01-14T13:17:20.9562410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9562521Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9562611Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9562724Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9562824Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9563262Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9563444Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9563549Z         ).to_numba(
2025-01-14T13:17:20.9563698Z             macro_atom_state,
2025-01-14T13:17:20.9563818Z             self.line_interaction_type,
2025-01-14T13:17:20.9564011Z         )
2025-01-14T13:17:20.9564168Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9564513Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9564650Z         ]
2025-01-14T13:17:20.9565004Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9565008Z 
2025-01-14T13:17:20.9565415Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9565767Z ______________ ERROR at setup of test_hdf_plasma[selected_atoms] _______________
2025-01-14T13:17:20.9565774Z 
2025-01-14T13:17:20.9566985Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9567510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9567515Z 
2025-01-14T13:17:20.9567661Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9567884Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9568178Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9568407Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9568583Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9568762Z >       sim.run_final()
2025-01-14T13:17:20.9568767Z 
2025-01-14T13:17:20.9568882Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9569058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9569208Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9569429Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9569626Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9569933Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9570114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9570118Z 
2025-01-14T13:17:20.9570417Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9570748Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9571054Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9571362Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9571860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9572072Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9572077Z 
2025-01-14T13:17:20.9572287Z     def initialize_transport_state(
2025-01-14T13:17:20.9572412Z         self,
2025-01-14T13:17:20.9572580Z         simulation_state,
2025-01-14T13:17:20.9572703Z         opacity_state,
2025-01-14T13:17:20.9572870Z         macro_atom_state,
2025-01-14T13:17:20.9572961Z         plasma,
2025-01-14T13:17:20.9573176Z         no_of_packets,
2025-01-14T13:17:20.9573300Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9573446Z         iteration=0,
2025-01-14T13:17:20.9585669Z     ):
2025-01-14T13:17:20.9585892Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9586099Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9586227Z         else:
2025-01-14T13:17:20.9586375Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9586485Z     
2025-01-14T13:17:20.9586734Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9586894Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9587012Z         )
2025-01-14T13:17:20.9587122Z     
2025-01-14T13:17:20.9587350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9587518Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9587688Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9587762Z         else:
2025-01-14T13:17:20.9587854Z             continuum_state = None
2025-01-14T13:17:20.9587965Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9588076Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9588177Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9588285Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9588391Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9588485Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9588582Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9588655Z         ).to_numba(
2025-01-14T13:17:20.9588739Z             macro_atom_state,
2025-01-14T13:17:20.9588827Z             self.line_interaction_type,
2025-01-14T13:17:20.9588904Z         )
2025-01-14T13:17:20.9589006Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9589295Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9589588Z         ]
2025-01-14T13:17:20.9589906Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9589912Z 
2025-01-14T13:17:20.9590073Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9590246Z ____________ ERROR at setup of test_hdf_plasma[ion_number_density] _____________
2025-01-14T13:17:20.9590249Z 
2025-01-14T13:17:20.9590899Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9591375Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9591384Z 
2025-01-14T13:17:20.9591713Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9591997Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9592169Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9592470Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9592617Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9592750Z >       sim.run_final()
2025-01-14T13:17:20.9592755Z 
2025-01-14T13:17:20.9592841Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9592960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9593065Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9593214Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9593321Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9593475Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9593586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9593594Z 
2025-01-14T13:17:20.9593858Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9594067Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9594289Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9594565Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9594725Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9594871Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9594875Z 
2025-01-14T13:17:20.9594969Z     def initialize_transport_state(
2025-01-14T13:17:20.9595043Z         self,
2025-01-14T13:17:20.9595128Z         simulation_state,
2025-01-14T13:17:20.9595202Z         opacity_state,
2025-01-14T13:17:20.9595284Z         macro_atom_state,
2025-01-14T13:17:20.9595354Z         plasma,
2025-01-14T13:17:20.9595436Z         no_of_packets,
2025-01-14T13:17:20.9595518Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9595596Z         iteration=0,
2025-01-14T13:17:20.9595663Z     ):
2025-01-14T13:17:20.9595796Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9595893Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9595969Z         else:
2025-01-14T13:17:20.9596047Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9596119Z     
2025-01-14T13:17:20.9596258Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9596360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9596432Z         )
2025-01-14T13:17:20.9596497Z     
2025-01-14T13:17:20.9596637Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9596753Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9596917Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9597179Z         else:
2025-01-14T13:17:20.9597268Z             continuum_state = None
2025-01-14T13:17:20.9597370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9597486Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9597579Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9597692Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9597792Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9597891Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9597981Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9598058Z         ).to_numba(
2025-01-14T13:17:20.9598142Z             macro_atom_state,
2025-01-14T13:17:20.9598341Z             self.line_interaction_type,
2025-01-14T13:17:20.9598416Z         )
2025-01-14T13:17:20.9598518Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9598796Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9598867Z         ]
2025-01-14T13:17:20.9599173Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9599177Z 
2025-01-14T13:17:20.9599326Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9599496Z ____________ ERROR at setup of test_hdf_plasma[partition_function] _____________
2025-01-14T13:17:20.9599500Z 
2025-01-14T13:17:20.9600239Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9600859Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9600866Z 
2025-01-14T13:17:20.9601018Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9601268Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9601375Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9601698Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9601812Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9601889Z >       sim.run_final()
2025-01-14T13:17:20.9601899Z 
2025-01-14T13:17:20.9601981Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9602094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9602192Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9602340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9602437Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9602595Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9602696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9602704Z 
2025-01-14T13:17:20.9602974Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9603175Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9603400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9603678Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9603836Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9603984Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9603988Z 
2025-01-14T13:17:20.9604082Z     def initialize_transport_state(
2025-01-14T13:17:20.9604157Z         self,
2025-01-14T13:17:20.9604235Z         simulation_state,
2025-01-14T13:17:20.9604315Z         opacity_state,
2025-01-14T13:17:20.9604391Z         macro_atom_state,
2025-01-14T13:17:20.9604623Z         plasma,
2025-01-14T13:17:20.9604698Z         no_of_packets,
2025-01-14T13:17:20.9604786Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9604859Z         iteration=0,
2025-01-14T13:17:20.9604931Z     ):
2025-01-14T13:17:20.9605064Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9605167Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9605243Z         else:
2025-01-14T13:17:20.9605322Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9605392Z     
2025-01-14T13:17:20.9605527Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9605627Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9605696Z         )
2025-01-14T13:17:20.9605873Z     
2025-01-14T13:17:20.9606003Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9606120Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9606273Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9606352Z         else:
2025-01-14T13:17:20.9606435Z             continuum_state = None
2025-01-14T13:17:20.9606537Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9606644Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9606739Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9606848Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9606944Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9607045Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9607135Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9607211Z         ).to_numba(
2025-01-14T13:17:20.9607293Z             macro_atom_state,
2025-01-14T13:17:20.9607385Z             self.line_interaction_type,
2025-01-14T13:17:20.9607453Z         )
2025-01-14T13:17:20.9607558Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9607834Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9607906Z         ]
2025-01-14T13:17:20.9608204Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9608213Z 
2025-01-14T13:17:20.9608358Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9608558Z _________________ ERROR at setup of test_hdf_plasma[abundance] _________________
2025-01-14T13:17:20.9608564Z 
2025-01-14T13:17:20.9609695Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9610052Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9610062Z 
2025-01-14T13:17:20.9610154Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9610315Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9610421Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9610598Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9610693Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9610769Z >       sim.run_final()
2025-01-14T13:17:20.9610772Z 
2025-01-14T13:17:20.9610858Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9610968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9611073Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9611221Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9611322Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9611477Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9611945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9611951Z 
2025-01-14T13:17:20.9612230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9612436Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9612664Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9612943Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9613112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9613390Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9613396Z 
2025-01-14T13:17:20.9613496Z     def initialize_transport_state(
2025-01-14T13:17:20.9613566Z         self,
2025-01-14T13:17:20.9613651Z         simulation_state,
2025-01-14T13:17:20.9613726Z         opacity_state,
2025-01-14T13:17:20.9613815Z         macro_atom_state,
2025-01-14T13:17:20.9613895Z         plasma,
2025-01-14T13:17:20.9613968Z         no_of_packets,
2025-01-14T13:17:20.9614063Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9614138Z         iteration=0,
2025-01-14T13:17:20.9614211Z     ):
2025-01-14T13:17:20.9614342Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9614447Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9614516Z         else:
2025-01-14T13:17:20.9614607Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9614674Z     
2025-01-14T13:17:20.9614820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9614927Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9615002Z         )
2025-01-14T13:17:20.9615067Z     
2025-01-14T13:17:20.9615202Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9615318Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9615483Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9615556Z         else:
2025-01-14T13:17:20.9615640Z             continuum_state = None
2025-01-14T13:17:20.9615747Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9615855Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9615953Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9616059Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9616162Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9616254Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9616354Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9616430Z         ).to_numba(
2025-01-14T13:17:20.9616516Z             macro_atom_state,
2025-01-14T13:17:20.9616602Z             self.line_interaction_type,
2025-01-14T13:17:20.9616681Z         )
2025-01-14T13:17:20.9616786Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9617071Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9617139Z         ]
2025-01-14T13:17:20.9617572Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9617580Z 
2025-01-14T13:17:20.9617837Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9618110Z ________________ ERROR at setup of test_hdf_plasma[g_electron] _________________
2025-01-14T13:17:20.9618116Z 
2025-01-14T13:17:20.9618925Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9619280Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9619408Z 
2025-01-14T13:17:20.9619505Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9619663Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9619761Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9619938Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9620025Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9620106Z >       sim.run_final()
2025-01-14T13:17:20.9620110Z 
2025-01-14T13:17:20.9620192Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9620305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9620487Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9620635Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9620735Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9620888Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9621008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9621012Z 
2025-01-14T13:17:20.9621282Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9621482Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9621905Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9622184Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9622342Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9622487Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9622491Z 
2025-01-14T13:17:20.9622581Z     def initialize_transport_state(
2025-01-14T13:17:20.9622656Z         self,
2025-01-14T13:17:20.9622733Z         simulation_state,
2025-01-14T13:17:20.9622821Z         opacity_state,
2025-01-14T13:17:20.9622898Z         macro_atom_state,
2025-01-14T13:17:20.9622973Z         plasma,
2025-01-14T13:17:20.9623049Z         no_of_packets,
2025-01-14T13:17:20.9623136Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9623208Z         iteration=0,
2025-01-14T13:17:20.9623280Z     ):
2025-01-14T13:17:20.9623411Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9623505Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9623580Z         else:
2025-01-14T13:17:20.9623662Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9623732Z     
2025-01-14T13:17:20.9623867Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9623976Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9624044Z         )
2025-01-14T13:17:20.9624118Z     
2025-01-14T13:17:20.9624245Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9624367Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9624518Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9624594Z         else:
2025-01-14T13:17:20.9624677Z             continuum_state = None
2025-01-14T13:17:20.9624782Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9624888Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9624986Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9625097Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9625196Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9625293Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9625389Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9625466Z         ).to_numba(
2025-01-14T13:17:20.9625544Z             macro_atom_state,
2025-01-14T13:17:20.9625637Z             self.line_interaction_type,
2025-01-14T13:17:20.9625831Z         )
2025-01-14T13:17:20.9625938Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9626205Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9626334Z         ]
2025-01-14T13:17:20.9626873Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9626887Z 
2025-01-14T13:17:20.9627136Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9627410Z _____________________ ERROR at setup of test_hdf_plasma[g] _____________________
2025-01-14T13:17:20.9627416Z 
2025-01-14T13:17:20.9628200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9628567Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9628579Z 
2025-01-14T13:17:20.9628675Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9628837Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9628940Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9629117Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9629209Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9629284Z >       sim.run_final()
2025-01-14T13:17:20.9629288Z 
2025-01-14T13:17:20.9629375Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9629485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9629590Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9629730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9629830Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9629989Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9630099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9630103Z 
2025-01-14T13:17:20.9630373Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9630573Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9630798Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9631068Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9631239Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9631377Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9631381Z 
2025-01-14T13:17:20.9631474Z     def initialize_transport_state(
2025-01-14T13:17:20.9631739Z         self,
2025-01-14T13:17:20.9631855Z         simulation_state,
2025-01-14T13:17:20.9631934Z         opacity_state,
2025-01-14T13:17:20.9632015Z         macro_atom_state,
2025-01-14T13:17:20.9632090Z         plasma,
2025-01-14T13:17:20.9632165Z         no_of_packets,
2025-01-14T13:17:20.9632250Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9632321Z         iteration=0,
2025-01-14T13:17:20.9632393Z     ):
2025-01-14T13:17:20.9632517Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9632618Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9632691Z         else:
2025-01-14T13:17:20.9632774Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9632839Z     
2025-01-14T13:17:20.9632987Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9633083Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9633156Z         )
2025-01-14T13:17:20.9633224Z     
2025-01-14T13:17:20.9633355Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9633595Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9633757Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9633830Z         else:
2025-01-14T13:17:20.9633914Z             continuum_state = None
2025-01-14T13:17:20.9634024Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9634129Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9634225Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9634331Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9634435Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9634633Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9634788Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9634914Z         ).to_numba(
2025-01-14T13:17:20.9635050Z             macro_atom_state,
2025-01-14T13:17:20.9635200Z             self.line_interaction_type,
2025-01-14T13:17:20.9635330Z         )
2025-01-14T13:17:20.9635501Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9635946Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9636020Z         ]
2025-01-14T13:17:20.9636324Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9636329Z 
2025-01-14T13:17:20.9636483Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9636636Z ___________________ ERROR at setup of test_hdf_plasma[lines] ___________________
2025-01-14T13:17:20.9636640Z 
2025-01-14T13:17:20.9637288Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9637647Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9637651Z 
2025-01-14T13:17:20.9637740Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9637894Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9637991Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9638166Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9638252Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9638331Z >       sim.run_final()
2025-01-14T13:17:20.9638336Z 
2025-01-14T13:17:20.9638417Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9638536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9638633Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9638779Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9638882Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9639032Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9639144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9639148Z 
2025-01-14T13:17:20.9639419Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9639629Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9639855Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9640136Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9640295Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9640435Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9640439Z 
2025-01-14T13:17:20.9640877Z     def initialize_transport_state(
2025-01-14T13:17:20.9640948Z         self,
2025-01-14T13:17:20.9641031Z         simulation_state,
2025-01-14T13:17:20.9641107Z         opacity_state,
2025-01-14T13:17:20.9641188Z         macro_atom_state,
2025-01-14T13:17:20.9641258Z         plasma,
2025-01-14T13:17:20.9641335Z         no_of_packets,
2025-01-14T13:17:20.9641416Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9641492Z         iteration=0,
2025-01-14T13:17:20.9641754Z     ):
2025-01-14T13:17:20.9641933Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9642031Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9642107Z         else:
2025-01-14T13:17:20.9642185Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9642412Z     
2025-01-14T13:17:20.9642556Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9642660Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9642732Z         )
2025-01-14T13:17:20.9642809Z     
2025-01-14T13:17:20.9642940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9643052Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9643209Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9643277Z         else:
2025-01-14T13:17:20.9643364Z             continuum_state = None
2025-01-14T13:17:20.9643463Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9643573Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9643665Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9643775Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9643878Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9643981Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9644139Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9644285Z         ).to_numba(
2025-01-14T13:17:20.9644426Z             macro_atom_state,
2025-01-14T13:17:20.9644593Z             self.line_interaction_type,
2025-01-14T13:17:20.9644713Z         )
2025-01-14T13:17:20.9644880Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9645328Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9645397Z         ]
2025-01-14T13:17:20.9645707Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9645711Z 
2025-01-14T13:17:20.9645858Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9646015Z ___________________ ERROR at setup of test_hdf_plasma[f_lu] ____________________
2025-01-14T13:17:20.9646027Z 
2025-01-14T13:17:20.9646661Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9647012Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9647016Z 
2025-01-14T13:17:20.9647111Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9647260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9647359Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9647530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9647624Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9647698Z >       sim.run_final()
2025-01-14T13:17:20.9647707Z 
2025-01-14T13:17:20.9647793Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9647908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9648008Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9648153Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9648380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9648544Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9648651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9648655Z 
2025-01-14T13:17:20.9648920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9649119Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9649341Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9649695Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9649857Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9649996Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9650005Z 
2025-01-14T13:17:20.9650093Z     def initialize_transport_state(
2025-01-14T13:17:20.9650169Z         self,
2025-01-14T13:17:20.9650247Z         simulation_state,
2025-01-14T13:17:20.9650326Z         opacity_state,
2025-01-14T13:17:20.9650400Z         macro_atom_state,
2025-01-14T13:17:20.9650476Z         plasma,
2025-01-14T13:17:20.9650548Z         no_of_packets,
2025-01-14T13:17:20.9650637Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9650709Z         iteration=0,
2025-01-14T13:17:20.9650782Z     ):
2025-01-14T13:17:20.9650905Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9651007Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9651082Z         else:
2025-01-14T13:17:20.9651164Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9651235Z     
2025-01-14T13:17:20.9651367Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9651467Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9651541Z         )
2025-01-14T13:17:20.9651865Z     
2025-01-14T13:17:20.9652011Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9652128Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9652280Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9652354Z         else:
2025-01-14T13:17:20.9652436Z             continuum_state = None
2025-01-14T13:17:20.9652540Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9652647Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9652742Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9652851Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9653037Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9653207Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9653359Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9653493Z         ).to_numba(
2025-01-14T13:17:20.9653621Z             macro_atom_state,
2025-01-14T13:17:20.9653770Z             self.line_interaction_type,
2025-01-14T13:17:20.9653882Z         )
2025-01-14T13:17:20.9654067Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9654346Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9654420Z         ]
2025-01-14T13:17:20.9654717Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9654721Z 
2025-01-14T13:17:20.9654874Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9655043Z _______________ ERROR at setup of test_hdf_plasma[tau_sobolevs] ________________
2025-01-14T13:17:20.9655047Z 
2025-01-14T13:17:20.9655674Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9656215Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9656219Z 
2025-01-14T13:17:20.9656309Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9656464Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9656565Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9656747Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9656840Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9656915Z >       sim.run_final()
2025-01-14T13:17:20.9657037Z 
2025-01-14T13:17:20.9657129Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9657238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9657346Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9657492Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9657592Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9657742Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9657852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9657856Z 
2025-01-14T13:17:20.9658124Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9658323Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9658546Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9658822Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9658986Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9659120Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9659130Z 
2025-01-14T13:17:20.9659224Z     def initialize_transport_state(
2025-01-14T13:17:20.9659294Z         self,
2025-01-14T13:17:20.9659377Z         simulation_state,
2025-01-14T13:17:20.9659453Z         opacity_state,
2025-01-14T13:17:20.9659534Z         macro_atom_state,
2025-01-14T13:17:20.9659604Z         plasma,
2025-01-14T13:17:20.9659682Z         no_of_packets,
2025-01-14T13:17:20.9659769Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9659840Z         iteration=0,
2025-01-14T13:17:20.9659911Z     ):
2025-01-14T13:17:20.9660035Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9660136Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9660211Z         else:
2025-01-14T13:17:20.9660294Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9660361Z     
2025-01-14T13:17:20.9660500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9660598Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9660670Z         )
2025-01-14T13:17:20.9660737Z     
2025-01-14T13:17:20.9660869Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9661027Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9661188Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9661263Z         else:
2025-01-14T13:17:20.9661347Z             continuum_state = None
2025-01-14T13:17:20.9661456Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9661690Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9661793Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9661957Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9662139Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9662296Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9662455Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9662770Z         ).to_numba(
2025-01-14T13:17:20.9662907Z             macro_atom_state,
2025-01-14T13:17:20.9663062Z             self.line_interaction_type,
2025-01-14T13:17:20.9663140Z         )
2025-01-14T13:17:20.9663247Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9663529Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9663601Z         ]
2025-01-14T13:17:20.9663902Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9663906Z 
2025-01-14T13:17:20.9664062Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9664336Z __________________ ERROR at setup of test_hdf_plasma[j_blues] __________________
2025-01-14T13:17:20.9664342Z 
2025-01-14T13:17:20.9664987Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9665345Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9665355Z 
2025-01-14T13:17:20.9665444Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9665606Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9665704Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9665884Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9665979Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9666061Z >       sim.run_final()
2025-01-14T13:17:20.9666065Z 
2025-01-14T13:17:20.9666148Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9666261Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9666364Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9666511Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9666604Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9666763Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9666875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9666879Z 
2025-01-14T13:17:20.9667147Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9667352Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9667578Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9667855Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9668018Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9668168Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9668172Z 
2025-01-14T13:17:20.9668281Z     def initialize_transport_state(
2025-01-14T13:17:20.9668352Z         self,
2025-01-14T13:17:20.9668436Z         simulation_state,
2025-01-14T13:17:20.9668511Z         opacity_state,
2025-01-14T13:17:20.9668592Z         macro_atom_state,
2025-01-14T13:17:20.9668666Z         plasma,
2025-01-14T13:17:20.9668744Z         no_of_packets,
2025-01-14T13:17:20.9668827Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9668905Z         iteration=0,
2025-01-14T13:17:20.9668972Z     ):
2025-01-14T13:17:20.9669101Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9669201Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9669274Z         else:
2025-01-14T13:17:20.9669353Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9669425Z     
2025-01-14T13:17:20.9669559Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9669799Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9669866Z         )
2025-01-14T13:17:20.9669938Z     
2025-01-14T13:17:20.9670070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9670182Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9670358Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9670487Z         else:
2025-01-14T13:17:20.9670635Z             continuum_state = None
2025-01-14T13:17:20.9670803Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9670988Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9671274Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9671459Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9671731Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9671838Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9671943Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9672022Z         ).to_numba(
2025-01-14T13:17:20.9672105Z             macro_atom_state,
2025-01-14T13:17:20.9672193Z             self.line_interaction_type,
2025-01-14T13:17:20.9672266Z         )
2025-01-14T13:17:20.9672368Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9672643Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9672711Z         ]
2025-01-14T13:17:20.9673017Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9673022Z 
2025-01-14T13:17:20.9673172Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9673346Z _______________ ERROR at setup of test_hdf_plasma[metastability] _______________
2025-01-14T13:17:20.9673350Z 
2025-01-14T13:17:20.9673984Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9674340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9674344Z 
2025-01-14T13:17:20.9674438Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9674590Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9674693Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9674865Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9674960Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9675037Z >       sim.run_final()
2025-01-14T13:17:20.9675041Z 
2025-01-14T13:17:20.9675129Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9675241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9675341Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9675486Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9675581Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9675738Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9675841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9675845Z 
2025-01-14T13:17:20.9676115Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9676314Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9676543Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9676822Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9677107Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9677248Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9677252Z 
2025-01-14T13:17:20.9677344Z     def initialize_transport_state(
2025-01-14T13:17:20.9677417Z         self,
2025-01-14T13:17:20.9677494Z         simulation_state,
2025-01-14T13:17:20.9677573Z         opacity_state,
2025-01-14T13:17:20.9677648Z         macro_atom_state,
2025-01-14T13:17:20.9677722Z         plasma,
2025-01-14T13:17:20.9677796Z         no_of_packets,
2025-01-14T13:17:20.9677882Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9677955Z         iteration=0,
2025-01-14T13:17:20.9678027Z     ):
2025-01-14T13:17:20.9678259Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9678362Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9678431Z         else:
2025-01-14T13:17:20.9678515Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9678585Z     
2025-01-14T13:17:20.9678724Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9678823Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9678891Z         )
2025-01-14T13:17:20.9678966Z     
2025-01-14T13:17:20.9679093Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9679208Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9679385Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9679516Z         else:
2025-01-14T13:17:20.9679654Z             continuum_state = None
2025-01-14T13:17:20.9679827Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9680011Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9680168Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9680341Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9680515Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9680678Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9680771Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9680848Z         ).to_numba(
2025-01-14T13:17:20.9680925Z             macro_atom_state,
2025-01-14T13:17:20.9681017Z             self.line_interaction_type,
2025-01-14T13:17:20.9681084Z         )
2025-01-14T13:17:20.9681190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9681459Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9681531Z         ]
2025-01-14T13:17:20.9682029Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9682044Z 
2025-01-14T13:17:20.9682201Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9682357Z _____________________ ERROR at setup of test_hdf_plasma[w] _____________________
2025-01-14T13:17:20.9682367Z 
2025-01-14T13:17:20.9682998Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9683348Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9683352Z 
2025-01-14T13:17:20.9683440Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9683600Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9683699Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9683882Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9683975Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9684051Z >       sim.run_final()
2025-01-14T13:17:20.9684055Z 
2025-01-14T13:17:20.9684142Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9684408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9684509Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9684649Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9684747Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9684897Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9685010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9685014Z 
2025-01-14T13:17:20.9685278Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9685591Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9685820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9686094Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9686262Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9686396Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9686400Z 
2025-01-14T13:17:20.9686493Z     def initialize_transport_state(
2025-01-14T13:17:20.9686562Z         self,
2025-01-14T13:17:20.9686647Z         simulation_state,
2025-01-14T13:17:20.9686721Z         opacity_state,
2025-01-14T13:17:20.9686805Z         macro_atom_state,
2025-01-14T13:17:20.9686875Z         plasma,
2025-01-14T13:17:20.9686953Z         no_of_packets,
2025-01-14T13:17:20.9687039Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9687112Z         iteration=0,
2025-01-14T13:17:20.9687190Z     ):
2025-01-14T13:17:20.9687313Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9687413Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9687482Z         else:
2025-01-14T13:17:20.9687565Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9687639Z     
2025-01-14T13:17:20.9687783Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9687878Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9687950Z         )
2025-01-14T13:17:20.9688068Z     
2025-01-14T13:17:20.9688297Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9688488Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9688748Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9688863Z         else:
2025-01-14T13:17:20.9689007Z             continuum_state = None
2025-01-14T13:17:20.9689181Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9689302Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9689401Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9689507Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9689614Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9689709Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9689806Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9689877Z         ).to_numba(
2025-01-14T13:17:20.9689961Z             macro_atom_state,
2025-01-14T13:17:20.9690049Z             self.line_interaction_type,
2025-01-14T13:17:20.9690125Z         )
2025-01-14T13:17:20.9690226Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9690495Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9690562Z         ]
2025-01-14T13:17:20.9690873Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9690877Z 
2025-01-14T13:17:20.9691029Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9691191Z _____________ ERROR at setup of test_hdf_plasma[excitation_energy] _____________
2025-01-14T13:17:20.9691289Z 
2025-01-14T13:17:20.9692144Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9692496Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9692500Z 
2025-01-14T13:17:20.9692597Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9692759Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9692975Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9693158Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9693246Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9693326Z >       sim.run_final()
2025-01-14T13:17:20.9693335Z 
2025-01-14T13:17:20.9693418Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9693532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9693629Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9693776Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9693872Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9694031Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9694140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9694144Z 
2025-01-14T13:17:20.9694407Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9694617Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9694838Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9695119Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9695279Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9695424Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9695427Z 
2025-01-14T13:17:20.9695515Z     def initialize_transport_state(
2025-01-14T13:17:20.9695591Z         self,
2025-01-14T13:17:20.9695680Z         simulation_state,
2025-01-14T13:17:20.9695755Z         opacity_state,
2025-01-14T13:17:20.9695839Z         macro_atom_state,
2025-01-14T13:17:20.9695909Z         plasma,
2025-01-14T13:17:20.9695988Z         no_of_packets,
2025-01-14T13:17:20.9696069Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9696151Z         iteration=0,
2025-01-14T13:17:20.9696218Z     ):
2025-01-14T13:17:20.9696348Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9696443Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9696523Z         else:
2025-01-14T13:17:20.9696601Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9696673Z     
2025-01-14T13:17:20.9696808Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9696911Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9696980Z         )
2025-01-14T13:17:20.9697052Z     
2025-01-14T13:17:20.9697225Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9697433Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9697696Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9697812Z         else:
2025-01-14T13:17:20.9697954Z             continuum_state = None
2025-01-14T13:17:20.9698127Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9698316Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9698443Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9698559Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9698812Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9698911Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9699002Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9699079Z         ).to_numba(
2025-01-14T13:17:20.9699158Z             macro_atom_state,
2025-01-14T13:17:20.9699250Z             self.line_interaction_type,
2025-01-14T13:17:20.9699322Z         )
2025-01-14T13:17:20.9699423Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9699695Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9699765Z         ]
2025-01-14T13:17:20.9700146Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9700151Z 
2025-01-14T13:17:20.9700300Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9700459Z ______________________ ERROR at setup of test_hdf_levels _______________________
2025-01-14T13:17:20.9700463Z 
2025-01-14T13:17:20.9701086Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9701437Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9701441Z 
2025-01-14T13:17:20.9701535Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9701853Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9701961Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9702134Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9702226Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9702307Z >       sim.run_final()
2025-01-14T13:17:20.9702312Z 
2025-01-14T13:17:20.9702399Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9702506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9702609Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9702754Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9702847Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9703003Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9703107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9703111Z 
2025-01-14T13:17:20.9703383Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9703584Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9703809Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9704084Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9704245Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9704385Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9704389Z 
2025-01-14T13:17:20.9704478Z     def initialize_transport_state(
2025-01-14T13:17:20.9704552Z         self,
2025-01-14T13:17:20.9704631Z         simulation_state,
2025-01-14T13:17:20.9704714Z         opacity_state,
2025-01-14T13:17:20.9704790Z         macro_atom_state,
2025-01-14T13:17:20.9704865Z         plasma,
2025-01-14T13:17:20.9704939Z         no_of_packets,
2025-01-14T13:17:20.9705029Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9705104Z         iteration=0,
2025-01-14T13:17:20.9705176Z     ):
2025-01-14T13:17:20.9705300Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9705403Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9705599Z         else:
2025-01-14T13:17:20.9705684Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9705753Z     
2025-01-14T13:17:20.9705895Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9705995Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9706105Z         )
2025-01-14T13:17:20.9706229Z     
2025-01-14T13:17:20.9706448Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9706640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9706892Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9707014Z         else:
2025-01-14T13:17:20.9707298Z             continuum_state = None
2025-01-14T13:17:20.9707419Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9707532Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9707628Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9707741Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9707846Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9707947Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9708039Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9708114Z         ).to_numba(
2025-01-14T13:17:20.9708192Z             macro_atom_state,
2025-01-14T13:17:20.9708284Z             self.line_interaction_type,
2025-01-14T13:17:20.9708351Z         )
2025-01-14T13:17:20.9708456Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9708724Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9708801Z         ]
2025-01-14T13:17:20.9709100Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9709104Z 
2025-01-14T13:17:20.9709257Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9709425Z ______________ ERROR at setup of test_hdf_scalars[time_explosion] ______________
2025-01-14T13:17:20.9709434Z 
2025-01-14T13:17:20.9710058Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9710409Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9710414Z 
2025-01-14T13:17:20.9710504Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9710672Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9710770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9710951Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9711046Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9711127Z >       sim.run_final()
2025-01-14T13:17:20.9711132Z 
2025-01-14T13:17:20.9711218Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9711327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9711431Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9711705Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9711810Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9711961Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9712070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9712074Z 
2025-01-14T13:17:20.9712344Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9712550Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9712897Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9713173Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9713336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9713472Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9713476Z 
2025-01-14T13:17:20.9713568Z     def initialize_transport_state(
2025-01-14T13:17:20.9713639Z         self,
2025-01-14T13:17:20.9713722Z         simulation_state,
2025-01-14T13:17:20.9713797Z         opacity_state,
2025-01-14T13:17:20.9713877Z         macro_atom_state,
2025-01-14T13:17:20.9713947Z         plasma,
2025-01-14T13:17:20.9714154Z         no_of_packets,
2025-01-14T13:17:20.9714240Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9714330Z         iteration=0,
2025-01-14T13:17:20.9714405Z     ):
2025-01-14T13:17:20.9714533Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9714644Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9714714Z         else:
2025-01-14T13:17:20.9714802Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9714877Z     
2025-01-14T13:17:20.9715124Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9715288Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9715409Z         )
2025-01-14T13:17:20.9715521Z     
2025-01-14T13:17:20.9715747Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9715935Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9716158Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9716236Z         else:
2025-01-14T13:17:20.9716330Z             continuum_state = None
2025-01-14T13:17:20.9716435Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9716550Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9716654Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9716761Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9716867Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9716960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9717058Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9717133Z         ).to_numba(
2025-01-14T13:17:20.9717217Z             macro_atom_state,
2025-01-14T13:17:20.9717305Z             self.line_interaction_type,
2025-01-14T13:17:20.9717378Z         )
2025-01-14T13:17:20.9717479Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9717767Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9717835Z         ]
2025-01-14T13:17:20.9718141Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9718148Z 
2025-01-14T13:17:20.9718302Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9718471Z __________ ERROR at setup of test_hdf_scalars[link_t_rad_t_electron] ___________
2025-01-14T13:17:20.9718475Z 
2025-01-14T13:17:20.9719112Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9719463Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9719468Z 
2025-01-14T13:17:20.9719569Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9719729Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9719828Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9720009Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9720205Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9720286Z >       sim.run_final()
2025-01-14T13:17:20.9720290Z 
2025-01-14T13:17:20.9720373Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9720488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9720587Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9720734Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9720829Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9720990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9721193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9721202Z 
2025-01-14T13:17:20.9721471Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9721893Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9722133Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9722415Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9722577Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9722722Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9722726Z 
2025-01-14T13:17:20.9722817Z     def initialize_transport_state(
2025-01-14T13:17:20.9722894Z         self,
2025-01-14T13:17:20.9722972Z         simulation_state,
2025-01-14T13:17:20.9723054Z         opacity_state,
2025-01-14T13:17:20.9723135Z         macro_atom_state,
2025-01-14T13:17:20.9723212Z         plasma,
2025-01-14T13:17:20.9723292Z         no_of_packets,
2025-01-14T13:17:20.9723375Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9723460Z         iteration=0,
2025-01-14T13:17:20.9723527Z     ):
2025-01-14T13:17:20.9723664Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9723760Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9723849Z         else:
2025-01-14T13:17:20.9723991Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9724111Z     
2025-01-14T13:17:20.9724341Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9724508Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9724622Z         )
2025-01-14T13:17:20.9724742Z     
2025-01-14T13:17:20.9724958Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9725116Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9725286Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9725358Z         else:
2025-01-14T13:17:20.9725449Z             continuum_state = None
2025-01-14T13:17:20.9725551Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9725680Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9725773Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9725887Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9725990Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9726096Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9726188Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9726266Z         ).to_numba(
2025-01-14T13:17:20.9726346Z             macro_atom_state,
2025-01-14T13:17:20.9726442Z             self.line_interaction_type,
2025-01-14T13:17:20.9726513Z         )
2025-01-14T13:17:20.9726620Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9726906Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9726975Z         ]
2025-01-14T13:17:20.9727287Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9727446Z 
2025-01-14T13:17:20.9727599Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9727766Z _________________ ERROR at setup of test_hdf_helium_treatment __________________
2025-01-14T13:17:20.9727770Z 
2025-01-14T13:17:20.9728404Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9728762Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9728870Z 
2025-01-14T13:17:20.9728973Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9729129Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9729231Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9729412Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9729505Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9729580Z >       sim.run_final()
2025-01-14T13:17:20.9729584Z 
2025-01-14T13:17:20.9729673Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9729781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9729884Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9730028Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9730122Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9730280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9730389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9730393Z 
2025-01-14T13:17:20.9730664Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9730871Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9731098Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9731369Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9731533Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9731892Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9731898Z 
2025-01-14T13:17:20.9731992Z     def initialize_transport_state(
2025-01-14T13:17:20.9732068Z         self,
2025-01-14T13:17:20.9732147Z         simulation_state,
2025-01-14T13:17:20.9732227Z         opacity_state,
2025-01-14T13:17:20.9732313Z         macro_atom_state,
2025-01-14T13:17:20.9732390Z         plasma,
2025-01-14T13:17:20.9732466Z         no_of_packets,
2025-01-14T13:17:20.9732554Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9732627Z         iteration=0,
2025-01-14T13:17:20.9732761Z     ):
2025-01-14T13:17:20.9732973Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9733138Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9733254Z         else:
2025-01-14T13:17:20.9733391Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9733501Z     
2025-01-14T13:17:20.9733735Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9733891Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9733963Z         )
2025-01-14T13:17:20.9734035Z     
2025-01-14T13:17:20.9734165Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9734285Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9734443Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9734520Z         else:
2025-01-14T13:17:20.9734604Z             continuum_state = None
2025-01-14T13:17:20.9734711Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9734957Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9735056Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9735161Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9735267Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9735361Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9735462Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9735541Z         ).to_numba(
2025-01-14T13:17:20.9735620Z             macro_atom_state,
2025-01-14T13:17:20.9735713Z             self.line_interaction_type,
2025-01-14T13:17:20.9735784Z         )
2025-01-14T13:17:20.9735998Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9736272Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9736346Z         ]
2025-01-14T13:17:20.9736644Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9736654Z 
2025-01-14T13:17:20.9736807Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9736958Z ___________________ ERROR at setup of test_atomic_data_uuid ____________________
2025-01-14T13:17:20.9736971Z 
2025-01-14T13:17:20.9737605Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9737966Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9737971Z 
2025-01-14T13:17:20.9738062Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9738221Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9738322Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9738501Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9738591Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9738674Z >       sim.run_final()
2025-01-14T13:17:20.9738678Z 
2025-01-14T13:17:20.9738769Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9738875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9738980Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9739121Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9739224Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9739381Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9739491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9739495Z 
2025-01-14T13:17:20.9739758Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9739971Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9740198Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9740470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9740634Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9740772Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9740776Z 
2025-01-14T13:17:20.9740868Z     def initialize_transport_state(
2025-01-14T13:17:20.9740936Z         self,
2025-01-14T13:17:20.9741023Z         simulation_state,
2025-01-14T13:17:20.9741098Z         opacity_state,
2025-01-14T13:17:20.9741178Z         macro_atom_state,
2025-01-14T13:17:20.9741249Z         plasma,
2025-01-14T13:17:20.9741331Z         no_of_packets,
2025-01-14T13:17:20.9741412Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9741696Z         iteration=0,
2025-01-14T13:17:20.9741768Z     ):
2025-01-14T13:17:20.9741899Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9742044Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9742165Z         else:
2025-01-14T13:17:20.9742312Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9742425Z     
2025-01-14T13:17:20.9742656Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9742815Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9742932Z         )
2025-01-14T13:17:20.9743046Z     
2025-01-14T13:17:20.9743224Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9743466Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9743632Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9743703Z         else:
2025-01-14T13:17:20.9743792Z             continuum_state = None
2025-01-14T13:17:20.9743899Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9744013Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9744113Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9744218Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9744321Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9744417Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9744513Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9744586Z         ).to_numba(
2025-01-14T13:17:20.9744669Z             macro_atom_state,
2025-01-14T13:17:20.9744757Z             self.line_interaction_type,
2025-01-14T13:17:20.9744835Z         )
2025-01-14T13:17:20.9744936Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9745213Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9745286Z         ]
2025-01-14T13:17:20.9745593Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9745598Z 
2025-01-14T13:17:20.9745751Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9745904Z ___________________ ERROR at setup of test_collection[t_rad] ___________________
2025-01-14T13:17:20.9745908Z 
2025-01-14T13:17:20.9746542Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9746892Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9746896Z 
2025-01-14T13:17:20.9746992Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9747144Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9747250Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9747428Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9747516Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9747598Z >       sim.run_final()
2025-01-14T13:17:20.9747602Z 
2025-01-14T13:17:20.9747684Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9747798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9747895Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9748040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9748134Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9748295Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9748399Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9748409Z 
2025-01-14T13:17:20.9748794Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9749001Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9749223Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9749505Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9749664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9749808Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9749812Z 
2025-01-14T13:17:20.9749905Z     def initialize_transport_state(
2025-01-14T13:17:20.9750080Z         self,
2025-01-14T13:17:20.9750164Z         simulation_state,
2025-01-14T13:17:20.9750247Z         opacity_state,
2025-01-14T13:17:20.9750344Z         macro_atom_state,
2025-01-14T13:17:20.9750475Z         plasma,
2025-01-14T13:17:20.9750621Z         no_of_packets,
2025-01-14T13:17:20.9750756Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9750887Z         iteration=0,
2025-01-14T13:17:20.9751000Z     ):
2025-01-14T13:17:20.9751212Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9751367Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9751499Z         else:
2025-01-14T13:17:20.9751706Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9751789Z     
2025-01-14T13:17:20.9751928Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9752033Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9752103Z         )
2025-01-14T13:17:20.9752173Z     
2025-01-14T13:17:20.9752310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9752427Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9752586Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9752655Z         else:
2025-01-14T13:17:20.9752751Z             continuum_state = None
2025-01-14T13:17:20.9752851Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9752964Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9753054Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9753166Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9753262Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9753360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9753450Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9753529Z         ).to_numba(
2025-01-14T13:17:20.9753608Z             macro_atom_state,
2025-01-14T13:17:20.9753706Z             self.line_interaction_type,
2025-01-14T13:17:20.9753775Z         )
2025-01-14T13:17:20.9753879Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9754159Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9754233Z         ]
2025-01-14T13:17:20.9754541Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9754545Z 
2025-01-14T13:17:20.9754691Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9754846Z _____________________ ERROR at setup of test_collection[w] _____________________
2025-01-14T13:17:20.9754850Z 
2025-01-14T13:17:20.9755470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9755827Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:20.9755831Z 
2025-01-14T13:17:20.9755926Z     @pytest.fixture(scope="session")
2025-01-14T13:17:20.9756216Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:20.9756320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:20.9756491Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:20.9756584Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:20.9756660Z >       sim.run_final()
2025-01-14T13:17:20.9756664Z 
2025-01-14T13:17:20.9756751Z tardis/conftest.py:233: 
2025-01-14T13:17:20.9756858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9756964Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9757104Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9757312Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9757474Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9757578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9757587Z 
2025-01-14T13:17:20.9757857Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:20.9758059Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:20.9758286Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:20.9758558Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:20.9758721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:20.9758859Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9758869Z 
2025-01-14T13:17:20.9758963Z     def initialize_transport_state(
2025-01-14T13:17:20.9759038Z         self,
2025-01-14T13:17:20.9759117Z         simulation_state,
2025-01-14T13:17:20.9759199Z         opacity_state,
2025-01-14T13:17:20.9759276Z         macro_atom_state,
2025-01-14T13:17:20.9759357Z         plasma,
2025-01-14T13:17:20.9759432Z         no_of_packets,
2025-01-14T13:17:20.9759523Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9759596Z         iteration=0,
2025-01-14T13:17:20.9759671Z     ):
2025-01-14T13:17:20.9759868Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9760038Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9760152Z         else:
2025-01-14T13:17:20.9760299Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9760410Z     
2025-01-14T13:17:20.9760642Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9760807Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9760923Z         )
2025-01-14T13:17:20.9761032Z     
2025-01-14T13:17:20.9761170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9761291Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9761446Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9761530Z         else:
2025-01-14T13:17:20.9761800Z             continuum_state = None
2025-01-14T13:17:20.9761913Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9762023Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9762123Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9762228Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9762331Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9762423Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9762522Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9762603Z         ).to_numba(
2025-01-14T13:17:20.9762688Z             macro_atom_state,
2025-01-14T13:17:20.9762783Z             self.line_interaction_type,
2025-01-14T13:17:20.9762850Z         )
2025-01-14T13:17:20.9762954Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9763223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9763437Z         ]
2025-01-14T13:17:20.9763738Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9763743Z 
2025-01-14T13:17:20.9763896Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9764067Z _________ ERROR at setup of test_plasma_state_iterations[iterations_w] _________
2025-01-14T13:17:20.9764071Z 
2025-01-14T13:17:20.9764777Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9765161Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9765166Z 
2025-01-14T13:17:20.9765265Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9765391Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9765485Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9765588Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9765690Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9765810Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9765877Z     
2025-01-14T13:17:20.9765973Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9766063Z >       sim.run_convergence()
2025-01-14T13:17:20.9766067Z 
2025-01-14T13:17:20.9766183Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9766308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9766425Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9766576Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9766671Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9766837Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9766946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9766950Z 
2025-01-14T13:17:20.9767358Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9767822Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9768167Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9768713Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9769144Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9769526Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9769532Z 
2025-01-14T13:17:20.9769662Z     def initialize_transport_state(
2025-01-14T13:17:20.9769808Z         self,
2025-01-14T13:17:20.9769922Z         simulation_state,
2025-01-14T13:17:20.9770104Z         opacity_state,
2025-01-14T13:17:20.9770231Z         macro_atom_state,
2025-01-14T13:17:20.9770387Z         plasma,
2025-01-14T13:17:20.9770493Z         no_of_packets,
2025-01-14T13:17:20.9770642Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9770733Z         iteration=0,
2025-01-14T13:17:20.9770954Z     ):
2025-01-14T13:17:20.9771120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9771288Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9771427Z         else:
2025-01-14T13:17:20.9771523Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9772010Z     
2025-01-14T13:17:20.9772214Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9772386Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9772488Z         )
2025-01-14T13:17:20.9772609Z     
2025-01-14T13:17:20.9773025Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9773238Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9773432Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9773574Z         else:
2025-01-14T13:17:20.9773696Z             continuum_state = None
2025-01-14T13:17:20.9773916Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9774114Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9774243Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9774419Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9774568Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9788697Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9788922Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9789063Z         ).to_numba(
2025-01-14T13:17:20.9789201Z             macro_atom_state,
2025-01-14T13:17:20.9789366Z             self.line_interaction_type,
2025-01-14T13:17:20.9789483Z         )
2025-01-14T13:17:20.9789662Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9790160Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9790267Z         ]
2025-01-14T13:17:20.9790603Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9790609Z 
2025-01-14T13:17:20.9790773Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9790945Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9791377Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9791976Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9792158Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9792666Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9792848Z _______ ERROR at setup of test_plasma_state_iterations[iterations_t_rad] _______
2025-01-14T13:17:20.9792853Z 
2025-01-14T13:17:20.9793461Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9793851Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9793856Z 
2025-01-14T13:17:20.9793957Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9794088Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9794195Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9794295Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9794409Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9794528Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9794600Z     
2025-01-14T13:17:20.9794696Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9794788Z >       sim.run_convergence()
2025-01-14T13:17:20.9794792Z 
2025-01-14T13:17:20.9794913Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9795037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9795167Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9795314Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9795417Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9795575Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9795982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9795989Z 
2025-01-14T13:17:20.9796457Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9796817Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9797047Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9797340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9797524Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9797791Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9797796Z 
2025-01-14T13:17:20.9797896Z     def initialize_transport_state(
2025-01-14T13:17:20.9797968Z         self,
2025-01-14T13:17:20.9798053Z         simulation_state,
2025-01-14T13:17:20.9798137Z         opacity_state,
2025-01-14T13:17:20.9798218Z         macro_atom_state,
2025-01-14T13:17:20.9798290Z         plasma,
2025-01-14T13:17:20.9798370Z         no_of_packets,
2025-01-14T13:17:20.9798453Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9798532Z         iteration=0,
2025-01-14T13:17:20.9798601Z     ):
2025-01-14T13:17:20.9798736Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9798836Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9798915Z         else:
2025-01-14T13:17:20.9798995Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9799068Z     
2025-01-14T13:17:20.9799215Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9799322Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9799395Z         )
2025-01-14T13:17:20.9799461Z     
2025-01-14T13:17:20.9799597Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9799718Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9799879Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9799946Z         else:
2025-01-14T13:17:20.9800036Z             continuum_state = None
2025-01-14T13:17:20.9800139Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9800252Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9800345Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9800459Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9800559Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9800658Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9800759Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9800832Z         ).to_numba(
2025-01-14T13:17:20.9800915Z             macro_atom_state,
2025-01-14T13:17:20.9801005Z             self.line_interaction_type,
2025-01-14T13:17:20.9801080Z         )
2025-01-14T13:17:20.9801186Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9801465Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9801535Z         ]
2025-01-14T13:17:20.9802058Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9802067Z 
2025-01-14T13:17:20.9802221Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9802420Z _ ERROR at setup of test_plasma_state_iterations[iterations_electron_densities] _
2025-01-14T13:17:20.9802425Z 
2025-01-14T13:17:20.9803035Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9803406Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9803530Z 
2025-01-14T13:17:20.9803633Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9803755Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9803853Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9803950Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9804062Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9804184Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9804252Z     
2025-01-14T13:17:20.9804351Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9804467Z >       sim.run_convergence()
2025-01-14T13:17:20.9804473Z 
2025-01-14T13:17:20.9804893Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9805085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9805279Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9805532Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9805667Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9805823Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9805935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9805939Z 
2025-01-14T13:17:20.9806211Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9806414Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9806640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9806918Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9807087Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9807226Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9807236Z 
2025-01-14T13:17:20.9807329Z     def initialize_transport_state(
2025-01-14T13:17:20.9807399Z         self,
2025-01-14T13:17:20.9807482Z         simulation_state,
2025-01-14T13:17:20.9807557Z         opacity_state,
2025-01-14T13:17:20.9807637Z         macro_atom_state,
2025-01-14T13:17:20.9807713Z         plasma,
2025-01-14T13:17:20.9807786Z         no_of_packets,
2025-01-14T13:17:20.9807875Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9807949Z         iteration=0,
2025-01-14T13:17:20.9808022Z     ):
2025-01-14T13:17:20.9808148Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9808249Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9808321Z         else:
2025-01-14T13:17:20.9808406Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9808470Z     
2025-01-14T13:17:20.9808608Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9808702Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9808778Z         )
2025-01-14T13:17:20.9808845Z     
2025-01-14T13:17:20.9808984Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9809094Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9809251Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9809327Z         else:
2025-01-14T13:17:20.9809410Z             continuum_state = None
2025-01-14T13:17:20.9809519Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9809624Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9809726Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9809836Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9809941Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9810035Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9810131Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9810295Z         ).to_numba(
2025-01-14T13:17:20.9810379Z             macro_atom_state,
2025-01-14T13:17:20.9810468Z             self.line_interaction_type,
2025-01-14T13:17:20.9810541Z         )
2025-01-14T13:17:20.9810641Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9810917Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9810991Z         ]
2025-01-14T13:17:20.9811292Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9811296Z 
2025-01-14T13:17:20.9811449Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9811964Z ______ ERROR at setup of test_plasma_state_iterations[iterations_t_inner] ______
2025-01-14T13:17:20.9811972Z 
2025-01-14T13:17:20.9812589Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9812966Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9812976Z 
2025-01-14T13:17:20.9813064Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9813188Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9813306Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9813475Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9813651Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9813858Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9813972Z     
2025-01-14T13:17:20.9814132Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9814265Z >       sim.run_convergence()
2025-01-14T13:17:20.9814271Z 
2025-01-14T13:17:20.9814461Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9814575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9814698Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9814845Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9814941Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9815099Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9815206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9815210Z 
2025-01-14T13:17:20.9815480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9815686Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9815917Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9816188Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9816362Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9816511Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9816515Z 
2025-01-14T13:17:20.9816601Z     def initialize_transport_state(
2025-01-14T13:17:20.9816677Z         self,
2025-01-14T13:17:20.9816754Z         simulation_state,
2025-01-14T13:17:20.9816835Z         opacity_state,
2025-01-14T13:17:20.9816910Z         macro_atom_state,
2025-01-14T13:17:20.9816988Z         plasma,
2025-01-14T13:17:20.9817062Z         no_of_packets,
2025-01-14T13:17:20.9817151Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9817229Z         iteration=0,
2025-01-14T13:17:20.9817304Z     ):
2025-01-14T13:17:20.9817426Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9817525Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9817594Z         else:
2025-01-14T13:17:20.9817810Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9817877Z     
2025-01-14T13:17:20.9818016Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9818112Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9818179Z         )
2025-01-14T13:17:20.9818249Z     
2025-01-14T13:17:20.9818375Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9818493Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9818643Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9818717Z         else:
2025-01-14T13:17:20.9818799Z             continuum_state = None
2025-01-14T13:17:20.9818981Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9819090Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9819189Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9819294Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9819400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9819493Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9819588Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9819668Z         ).to_numba(
2025-01-14T13:17:20.9819747Z             macro_atom_state,
2025-01-14T13:17:20.9819841Z             self.line_interaction_type,
2025-01-14T13:17:20.9819909Z         )
2025-01-14T13:17:20.9820013Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9820281Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9820353Z         ]
2025-01-14T13:17:20.9820658Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9820662Z 
2025-01-14T13:17:20.9820813Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9820984Z __________ ERROR at setup of test_plasma_estimates[nu_bar_estimator] ___________
2025-01-14T13:17:20.9820993Z 
2025-01-14T13:17:20.9821789Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9822168Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9822172Z 
2025-01-14T13:17:20.9822301Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9822513Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9822675Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9822842Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9823011Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9823211Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9823337Z     
2025-01-14T13:17:20.9823474Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9823567Z >       sim.run_convergence()
2025-01-14T13:17:20.9823571Z 
2025-01-14T13:17:20.9823687Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9823802Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9823914Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9824057Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9824150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9824309Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9824417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9824421Z 
2025-01-14T13:17:20.9824690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9825036Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9825258Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9825542Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9825701Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9825847Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9825851Z 
2025-01-14T13:17:20.9825938Z     def initialize_transport_state(
2025-01-14T13:17:20.9826019Z         self,
2025-01-14T13:17:20.9826098Z         simulation_state,
2025-01-14T13:17:20.9826181Z         opacity_state,
2025-01-14T13:17:20.9826356Z         macro_atom_state,
2025-01-14T13:17:20.9826434Z         plasma,
2025-01-14T13:17:20.9826508Z         no_of_packets,
2025-01-14T13:17:20.9826596Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9826675Z         iteration=0,
2025-01-14T13:17:20.9826747Z     ):
2025-01-14T13:17:20.9826876Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9826971Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9827048Z         else:
2025-01-14T13:17:20.9827126Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9827201Z     
2025-01-14T13:17:20.9827336Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9827435Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9827505Z         )
2025-01-14T13:17:20.9827575Z     
2025-01-14T13:17:20.9827701Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9827817Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9827974Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9828048Z         else:
2025-01-14T13:17:20.9828136Z             continuum_state = None
2025-01-14T13:17:20.9828237Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9828352Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9828443Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9828552Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9828648Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9828747Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9828837Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9828913Z         ).to_numba(
2025-01-14T13:17:20.9828990Z             macro_atom_state,
2025-01-14T13:17:20.9829084Z             self.line_interaction_type,
2025-01-14T13:17:20.9829150Z         )
2025-01-14T13:17:20.9829259Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9829528Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9829603Z         ]
2025-01-14T13:17:20.9829909Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9829918Z 
2025-01-14T13:17:20.9830063Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9830231Z _____________ ERROR at setup of test_plasma_estimates[j_estimator] _____________
2025-01-14T13:17:20.9830235Z 
2025-01-14T13:17:20.9830959Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9831734Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9831741Z 
2025-01-14T13:17:20.9831896Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9832066Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9832165Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9832398Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9832514Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9832635Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9832708Z     
2025-01-14T13:17:20.9832803Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9832892Z >       sim.run_convergence()
2025-01-14T13:17:20.9832896Z 
2025-01-14T13:17:20.9833010Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9833130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9833246Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9833500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9833607Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9833762Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9833877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9833887Z 
2025-01-14T13:17:20.9834156Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9834365Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9834586Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9834862Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9835025Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9835172Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9835184Z 
2025-01-14T13:17:20.9835280Z     def initialize_transport_state(
2025-01-14T13:17:20.9835352Z         self,
2025-01-14T13:17:20.9835437Z         simulation_state,
2025-01-14T13:17:20.9835512Z         opacity_state,
2025-01-14T13:17:20.9835595Z         macro_atom_state,
2025-01-14T13:17:20.9835666Z         plasma,
2025-01-14T13:17:20.9835743Z         no_of_packets,
2025-01-14T13:17:20.9835823Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9835898Z         iteration=0,
2025-01-14T13:17:20.9835963Z     ):
2025-01-14T13:17:20.9836098Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9836196Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9836275Z         else:
2025-01-14T13:17:20.9836354Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9836426Z     
2025-01-14T13:17:20.9836562Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9836664Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9836741Z         )
2025-01-14T13:17:20.9836808Z     
2025-01-14T13:17:20.9836944Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9837060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9837218Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9837292Z         else:
2025-01-14T13:17:20.9837383Z             continuum_state = None
2025-01-14T13:17:20.9837485Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9837597Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9837690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9837800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9837898Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9837997Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9838094Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9838165Z         ).to_numba(
2025-01-14T13:17:20.9838253Z             macro_atom_state,
2025-01-14T13:17:20.9838340Z             self.line_interaction_type,
2025-01-14T13:17:20.9838409Z         )
2025-01-14T13:17:20.9838506Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9838870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9838937Z         ]
2025-01-14T13:17:20.9839243Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9839247Z 
2025-01-14T13:17:20.9839396Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9839567Z _____________ ERROR at setup of test_plasma_estimates[t_radiative] _____________
2025-01-14T13:17:20.9839571Z 
2025-01-14T13:17:20.9840433Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9841076Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9841091Z 
2025-01-14T13:17:20.9841241Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9841368Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9841469Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9841731Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9841864Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9841982Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9842054Z     
2025-01-14T13:17:20.9842151Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9842233Z >       sim.run_convergence()
2025-01-14T13:17:20.9842237Z 
2025-01-14T13:17:20.9842354Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9842470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9842591Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9842732Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9842838Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9842994Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9843106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9843111Z 
2025-01-14T13:17:20.9843375Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9843581Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9843806Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9844088Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9844255Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9844398Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9844402Z 
2025-01-14T13:17:20.9844498Z     def initialize_transport_state(
2025-01-14T13:17:20.9844567Z         self,
2025-01-14T13:17:20.9844650Z         simulation_state,
2025-01-14T13:17:20.9844725Z         opacity_state,
2025-01-14T13:17:20.9844806Z         macro_atom_state,
2025-01-14T13:17:20.9844876Z         plasma,
2025-01-14T13:17:20.9844955Z         no_of_packets,
2025-01-14T13:17:20.9845043Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9845116Z         iteration=0,
2025-01-14T13:17:20.9845187Z     ):
2025-01-14T13:17:20.9845312Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9845413Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9845481Z         else:
2025-01-14T13:17:20.9845564Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9845636Z     
2025-01-14T13:17:20.9845779Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9845879Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9845950Z         )
2025-01-14T13:17:20.9846151Z     
2025-01-14T13:17:20.9846285Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9846397Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9846554Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9846623Z         else:
2025-01-14T13:17:20.9846710Z             continuum_state = None
2025-01-14T13:17:20.9846815Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9846923Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9847019Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9847125Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9847332Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9847429Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9847522Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9847591Z         ).to_numba(
2025-01-14T13:17:20.9847678Z             macro_atom_state,
2025-01-14T13:17:20.9847762Z             self.line_interaction_type,
2025-01-14T13:17:20.9847837Z         )
2025-01-14T13:17:20.9847935Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9848208Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9848276Z         ]
2025-01-14T13:17:20.9848580Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9848584Z 
2025-01-14T13:17:20.9848738Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9848908Z ___________ ERROR at setup of test_plasma_estimates[dilution_factor] ___________
2025-01-14T13:17:20.9848912Z 
2025-01-14T13:17:20.9849508Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9849880Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9849883Z 
2025-01-14T13:17:20.9849978Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9850100Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9850190Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9850292Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9850394Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9850515Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9850582Z     
2025-01-14T13:17:20.9850682Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9850764Z >       sim.run_convergence()
2025-01-14T13:17:20.9850768Z 
2025-01-14T13:17:20.9850883Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9850989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9851111Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9851252Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9851356Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9851513Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9851798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9851804Z 
2025-01-14T13:17:20.9852076Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9852283Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9852507Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9852777Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9853072Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9853212Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9853221Z 
2025-01-14T13:17:20.9853310Z     def initialize_transport_state(
2025-01-14T13:17:20.9853387Z         self,
2025-01-14T13:17:20.9853465Z         simulation_state,
2025-01-14T13:17:20.9853545Z         opacity_state,
2025-01-14T13:17:20.9853621Z         macro_atom_state,
2025-01-14T13:17:20.9853696Z         plasma,
2025-01-14T13:17:20.9853769Z         no_of_packets,
2025-01-14T13:17:20.9853856Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9853929Z         iteration=0,
2025-01-14T13:17:20.9854003Z     ):
2025-01-14T13:17:20.9854232Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9854335Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9854406Z         else:
2025-01-14T13:17:20.9854489Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9854563Z     
2025-01-14T13:17:20.9854703Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9854798Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9854873Z         )
2025-01-14T13:17:20.9854943Z     
2025-01-14T13:17:20.9855068Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9855183Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9855334Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9855408Z         else:
2025-01-14T13:17:20.9855491Z             continuum_state = None
2025-01-14T13:17:20.9855597Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9855707Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9855800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9855903Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9856002Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9856097Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9856193Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9856263Z         ).to_numba(
2025-01-14T13:17:20.9856347Z             macro_atom_state,
2025-01-14T13:17:20.9856441Z             self.line_interaction_type,
2025-01-14T13:17:20.9856508Z         )
2025-01-14T13:17:20.9856612Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9856879Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9856951Z         ]
2025-01-14T13:17:20.9857253Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9857257Z 
2025-01-14T13:17:20.9857409Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9857568Z _____________ ERROR at setup of test_plasma_estimates[output_nus] ______________
2025-01-14T13:17:20.9857576Z 
2025-01-14T13:17:20.9858173Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9858538Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9858542Z 
2025-01-14T13:17:20.9858631Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9858755Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9858849Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9858957Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9859059Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9859178Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9859245Z     
2025-01-14T13:17:20.9859342Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9859516Z >       sim.run_convergence()
2025-01-14T13:17:20.9859520Z 
2025-01-14T13:17:20.9859632Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9859744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9859859Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9860001Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9860097Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9860254Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9860358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9860444Z 
2025-01-14T13:17:20.9860717Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9860918Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9861186Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9861460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9861755Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9861901Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9861905Z 
2025-01-14T13:17:20.9861992Z     def initialize_transport_state(
2025-01-14T13:17:20.9862065Z         self,
2025-01-14T13:17:20.9862144Z         simulation_state,
2025-01-14T13:17:20.9862224Z         opacity_state,
2025-01-14T13:17:20.9862300Z         macro_atom_state,
2025-01-14T13:17:20.9862375Z         plasma,
2025-01-14T13:17:20.9862454Z         no_of_packets,
2025-01-14T13:17:20.9862543Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9862616Z         iteration=0,
2025-01-14T13:17:20.9862689Z     ):
2025-01-14T13:17:20.9862817Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9862920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9862994Z         else:
2025-01-14T13:17:20.9863073Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9863144Z     
2025-01-14T13:17:20.9863278Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9863379Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9863446Z         )
2025-01-14T13:17:20.9863518Z     
2025-01-14T13:17:20.9863645Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9863760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9863913Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9863994Z         else:
2025-01-14T13:17:20.9864076Z             continuum_state = None
2025-01-14T13:17:20.9864180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9864291Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9864387Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9864494Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9864589Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9864687Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9864775Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9864851Z         ).to_numba(
2025-01-14T13:17:20.9864929Z             macro_atom_state,
2025-01-14T13:17:20.9865022Z             self.line_interaction_type,
2025-01-14T13:17:20.9865089Z         )
2025-01-14T13:17:20.9865194Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9865462Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9865535Z         ]
2025-01-14T13:17:20.9865832Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9865981Z 
2025-01-14T13:17:20.9866130Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9866301Z ___________ ERROR at setup of test_plasma_estimates[output_energies] ___________
2025-01-14T13:17:20.9866305Z 
2025-01-14T13:17:20.9866895Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9867263Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9867267Z 
2025-01-14T13:17:20.9867453Z     @pytest.fixture(scope="module")
2025-01-14T13:17:20.9867579Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:17:20.9867675Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9867773Z         config.montecarlo.iterations = 2
2025-01-14T13:17:20.9867888Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:17:20.9868001Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:17:20.9868072Z     
2025-01-14T13:17:20.9868163Z         sim = Simulation.from_config(config)
2025-01-14T13:17:20.9868251Z >       sim.run_convergence()
2025-01-14T13:17:20.9868254Z 
2025-01-14T13:17:20.9868367Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:17:20.9868478Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9868592Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9868735Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9868832Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9868990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9869103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9869107Z 
2025-01-14T13:17:20.9869372Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8c530>
2025-01-14T13:17:20.9869579Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a3e525d0>
2025-01-14T13:17:20.9869798Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37824baa20>
2025-01-14T13:17:20.9870076Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378240cb00>
2025-01-14T13:17:20.9870236Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a39233e0>
2025-01-14T13:17:20.9870379Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9870383Z 
2025-01-14T13:17:20.9870473Z     def initialize_transport_state(
2025-01-14T13:17:20.9870547Z         self,
2025-01-14T13:17:20.9870629Z         simulation_state,
2025-01-14T13:17:20.9870704Z         opacity_state,
2025-01-14T13:17:20.9870785Z         macro_atom_state,
2025-01-14T13:17:20.9870857Z         plasma,
2025-01-14T13:17:20.9870940Z         no_of_packets,
2025-01-14T13:17:20.9871022Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9871101Z         iteration=0,
2025-01-14T13:17:20.9871168Z     ):
2025-01-14T13:17:20.9871296Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9871390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9871467Z         else:
2025-01-14T13:17:20.9871545Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9871744Z     
2025-01-14T13:17:20.9871881Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9871983Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9872050Z         )
2025-01-14T13:17:20.9872122Z     
2025-01-14T13:17:20.9872257Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9872365Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9872524Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9872797Z         else:
2025-01-14T13:17:20.9872944Z             continuum_state = None
2025-01-14T13:17:20.9873110Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9873293Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9873443Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9873626Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9873791Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9873931Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9874026Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9874101Z         ).to_numba(
2025-01-14T13:17:20.9874179Z             macro_atom_state,
2025-01-14T13:17:20.9874398Z             self.line_interaction_type,
2025-01-14T13:17:20.9874475Z         )
2025-01-14T13:17:20.9874578Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9874852Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9874926Z         ]
2025-01-14T13:17:20.9875228Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9875233Z 
2025-01-14T13:17:20.9875378Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9875559Z ___________ ERROR at setup of TestSpectrumSolver.test_initialization ___________
2025-01-14T13:17:20.9875563Z 
2025-01-14T13:17:20.9875814Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9875996Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9876368Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9876452Z generate_reference = False
2025-01-14T13:17:20.9876650Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9876658Z 
2025-01-14T13:17:20.9876747Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9876827Z     def simulation(
2025-01-14T13:17:20.9876895Z         self,
2025-01-14T13:17:20.9876970Z         request,
2025-01-14T13:17:20.9877048Z         atomic_data_fname,
2025-01-14T13:17:20.9877135Z         generate_reference,
2025-01-14T13:17:20.9877232Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9877303Z     ):
2025-01-14T13:17:20.9877396Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9877569Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9877644Z         )
2025-01-14T13:17:20.9877738Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9877815Z     
2025-01-14T13:17:20.9877920Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9878006Z >       simulation.run_final()
2025-01-14T13:17:20.9878010Z 
2025-01-14T13:17:20.9878131Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9878251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9878352Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9878499Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9878592Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9878750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9878859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9878868Z 
2025-01-14T13:17:20.9879135Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9879344Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9879565Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9879845Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9880092Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9880240Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9880244Z 
2025-01-14T13:17:20.9880332Z     def initialize_transport_state(
2025-01-14T13:17:20.9880406Z         self,
2025-01-14T13:17:20.9880485Z         simulation_state,
2025-01-14T13:17:20.9880569Z         opacity_state,
2025-01-14T13:17:20.9880650Z         macro_atom_state,
2025-01-14T13:17:20.9880722Z         plasma,
2025-01-14T13:17:20.9880802Z         no_of_packets,
2025-01-14T13:17:20.9880884Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9880964Z         iteration=0,
2025-01-14T13:17:20.9881114Z     ):
2025-01-14T13:17:20.9881250Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9881347Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9881422Z         else:
2025-01-14T13:17:20.9881504Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9881787Z     
2025-01-14T13:17:20.9881940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9882045Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9882113Z         )
2025-01-14T13:17:20.9882185Z     
2025-01-14T13:17:20.9882314Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9882434Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9882592Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9882661Z         else:
2025-01-14T13:17:20.9882749Z             continuum_state = None
2025-01-14T13:17:20.9882850Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9882967Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9883059Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9883174Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9883278Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9883379Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9883471Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9883547Z         ).to_numba(
2025-01-14T13:17:20.9883625Z             macro_atom_state,
2025-01-14T13:17:20.9883719Z             self.line_interaction_type,
2025-01-14T13:17:20.9883786Z         )
2025-01-14T13:17:20.9883891Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9884168Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9884235Z         ]
2025-01-14T13:17:20.9884542Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9884547Z 
2025-01-14T13:17:20.9884696Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9884854Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9885165Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9885607Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9885756Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9886248Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9886435Z _______ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets ________
2025-01-14T13:17:20.9886440Z 
2025-01-14T13:17:20.9886696Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9886872Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9887240Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9887456Z generate_reference = False
2025-01-14T13:17:20.9887646Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9887650Z 
2025-01-14T13:17:20.9887746Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9887826Z     def simulation(
2025-01-14T13:17:20.9887896Z         self,
2025-01-14T13:17:20.9887970Z         request,
2025-01-14T13:17:20.9888047Z         atomic_data_fname,
2025-01-14T13:17:20.9888131Z         generate_reference,
2025-01-14T13:17:20.9888226Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9888298Z     ):
2025-01-14T13:17:20.9888495Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9888673Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9888741Z         )
2025-01-14T13:17:20.9888842Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9888914Z     
2025-01-14T13:17:20.9889023Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9889105Z >       simulation.run_final()
2025-01-14T13:17:20.9889109Z 
2025-01-14T13:17:20.9889234Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9889341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9889444Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9889590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9889683Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9889842Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9889955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9889959Z 
2025-01-14T13:17:20.9890228Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9890429Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9890660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9890934Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9891101Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9891248Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9891252Z 
2025-01-14T13:17:20.9891340Z     def initialize_transport_state(
2025-01-14T13:17:20.9891413Z         self,
2025-01-14T13:17:20.9891491Z         simulation_state,
2025-01-14T13:17:20.9891743Z         opacity_state,
2025-01-14T13:17:20.9891865Z         macro_atom_state,
2025-01-14T13:17:20.9891943Z         plasma,
2025-01-14T13:17:20.9892021Z         no_of_packets,
2025-01-14T13:17:20.9892111Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9892184Z         iteration=0,
2025-01-14T13:17:20.9892262Z     ):
2025-01-14T13:17:20.9892387Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9892489Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9892558Z         else:
2025-01-14T13:17:20.9892643Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9892714Z     
2025-01-14T13:17:20.9892850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9892953Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9893020Z         )
2025-01-14T13:17:20.9893091Z     
2025-01-14T13:17:20.9893216Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9893333Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9893489Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9893562Z         else:
2025-01-14T13:17:20.9893645Z             continuum_state = None
2025-01-14T13:17:20.9893751Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9894022Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9894173Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9894353Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9894526Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9894689Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9894841Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9894964Z         ).to_numba(
2025-01-14T13:17:20.9895093Z             macro_atom_state,
2025-01-14T13:17:20.9895252Z             self.line_interaction_type,
2025-01-14T13:17:20.9895352Z         )
2025-01-14T13:17:20.9895463Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9895858Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9895936Z         ]
2025-01-14T13:17:20.9896239Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9896249Z 
2025-01-14T13:17:20.9896403Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9896607Z __ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets_reabsorbed __
2025-01-14T13:17:20.9896610Z 
2025-01-14T13:17:20.9896863Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9897042Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9897406Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9897496Z generate_reference = False
2025-01-14T13:17:20.9897691Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9897695Z 
2025-01-14T13:17:20.9897788Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9897862Z     def simulation(
2025-01-14T13:17:20.9897941Z         self,
2025-01-14T13:17:20.9898012Z         request,
2025-01-14T13:17:20.9898096Z         atomic_data_fname,
2025-01-14T13:17:20.9898182Z         generate_reference,
2025-01-14T13:17:20.9898275Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9898347Z     ):
2025-01-14T13:17:20.9898439Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9898616Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9898684Z         )
2025-01-14T13:17:20.9898787Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9898854Z     
2025-01-14T13:17:20.9898963Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9899045Z >       simulation.run_final()
2025-01-14T13:17:20.9899054Z 
2025-01-14T13:17:20.9899178Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9899286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9899390Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9899538Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9899639Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9899796Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9899903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9899906Z 
2025-01-14T13:17:20.9900179Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9900381Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9900612Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9900887Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9901055Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9901286Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9901295Z 
2025-01-14T13:17:20.9901385Z     def initialize_transport_state(
2025-01-14T13:17:20.9901459Z         self,
2025-01-14T13:17:20.9901537Z         simulation_state,
2025-01-14T13:17:20.9901735Z         opacity_state,
2025-01-14T13:17:20.9901813Z         macro_atom_state,
2025-01-14T13:17:20.9901888Z         plasma,
2025-01-14T13:17:20.9901963Z         no_of_packets,
2025-01-14T13:17:20.9902049Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9902122Z         iteration=0,
2025-01-14T13:17:20.9902194Z     ):
2025-01-14T13:17:20.9902320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9902535Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9902611Z         else:
2025-01-14T13:17:20.9902698Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9902763Z     
2025-01-14T13:17:20.9902906Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9903010Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9903085Z         )
2025-01-14T13:17:20.9903158Z     
2025-01-14T13:17:20.9903286Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9903406Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9903559Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9903637Z         else:
2025-01-14T13:17:20.9903719Z             continuum_state = None
2025-01-14T13:17:20.9903825Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9903933Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9904033Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9904144Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9904247Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9904341Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9904441Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9904516Z         ).to_numba(
2025-01-14T13:17:20.9904594Z             macro_atom_state,
2025-01-14T13:17:20.9904687Z             self.line_interaction_type,
2025-01-14T13:17:20.9904755Z         )
2025-01-14T13:17:20.9904861Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9905127Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9905199Z         ]
2025-01-14T13:17:20.9905500Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9905504Z 
2025-01-14T13:17:20.9905660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9905828Z _______________ ERROR at setup of TestSpectrumSolver.test_solve ________________
2025-01-14T13:17:20.9905832Z 
2025-01-14T13:17:20.9906085Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f37b14c35f0>
2025-01-14T13:17:20.9906268Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:17:20.9906633Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9906722Z generate_reference = False
2025-01-14T13:17:20.9906909Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9906913Z 
2025-01-14T13:17:20.9907005Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9907079Z     def simulation(
2025-01-14T13:17:20.9907156Z         self,
2025-01-14T13:17:20.9907226Z         request,
2025-01-14T13:17:20.9907311Z         atomic_data_fname,
2025-01-14T13:17:20.9907395Z         generate_reference,
2025-01-14T13:17:20.9907497Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9907565Z     ):
2025-01-14T13:17:20.9907662Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9907833Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9908024Z         )
2025-01-14T13:17:20.9908127Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9908196Z     
2025-01-14T13:17:20.9908306Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9908388Z >       simulation.run_final()
2025-01-14T13:17:20.9908392Z 
2025-01-14T13:17:20.9908517Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:17:20.9908624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9908727Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:20.9908868Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9909529Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9909687Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9909798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9909807Z 
2025-01-14T13:17:20.9910078Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379d3f28a0>
2025-01-14T13:17:20.9910280Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a1b39010>
2025-01-14T13:17:20.9910506Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379d4f7aa0>
2025-01-14T13:17:20.9910778Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379d4f6720>
2025-01-14T13:17:20.9910945Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1b431a0>
2025-01-14T13:17:20.9911084Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:20.9911089Z 
2025-01-14T13:17:20.9911189Z     def initialize_transport_state(
2025-01-14T13:17:20.9911259Z         self,
2025-01-14T13:17:20.9911345Z         simulation_state,
2025-01-14T13:17:20.9911423Z         opacity_state,
2025-01-14T13:17:20.9911501Z         macro_atom_state,
2025-01-14T13:17:20.9911669Z         plasma,
2025-01-14T13:17:20.9911751Z         no_of_packets,
2025-01-14T13:17:20.9911840Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9911912Z         iteration=0,
2025-01-14T13:17:20.9911984Z     ):
2025-01-14T13:17:20.9912110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9912209Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9912279Z         else:
2025-01-14T13:17:20.9912363Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9912430Z     
2025-01-14T13:17:20.9912571Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9912667Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9912745Z         )
2025-01-14T13:17:20.9912811Z     
2025-01-14T13:17:20.9912948Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9913065Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9913216Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9913299Z         else:
2025-01-14T13:17:20.9913382Z             continuum_state = None
2025-01-14T13:17:20.9913486Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9913593Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9913689Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9913794Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9913900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9913992Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9914091Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9914164Z         ).to_numba(
2025-01-14T13:17:20.9914251Z             macro_atom_state,
2025-01-14T13:17:20.9914343Z             self.line_interaction_type,
2025-01-14T13:17:20.9914479Z         )
2025-01-14T13:17:20.9914658Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9915127Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9915411Z         ]
2025-01-14T13:17:20.9915785Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9915790Z 
2025-01-14T13:17:20.9915947Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9916127Z _________ ERROR at setup of TestTransportSimple.test_j_blue_estimators _________
2025-01-14T13:17:20.9916131Z 
2025-01-14T13:17:20.9916346Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9916524Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9917029Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9917121Z generate_reference = False
2025-01-14T13:17:20.9917313Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9917323Z 
2025-01-14T13:17:20.9917413Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9917487Z     def simulation(
2025-01-14T13:17:20.9917562Z         self,
2025-01-14T13:17:20.9917631Z         request,
2025-01-14T13:17:20.9917713Z         atomic_data_fname,
2025-01-14T13:17:20.9917793Z         generate_reference,
2025-01-14T13:17:20.9917891Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9917959Z     ):
2025-01-14T13:17:20.9918056Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9918220Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9918292Z         )
2025-01-14T13:17:20.9918393Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9918466Z     
2025-01-14T13:17:20.9918579Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9918667Z >       simulation.run_convergence()
2025-01-14T13:17:20.9918671Z 
2025-01-14T13:17:20.9918767Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9918880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9919000Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9919137Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9919235Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9919388Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9919496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9919501Z 
2025-01-14T13:17:20.9919764Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9919968Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9920192Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9920466Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9920633Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9920771Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9920775Z 
2025-01-14T13:17:20.9920870Z     def initialize_transport_state(
2025-01-14T13:17:20.9920939Z         self,
2025-01-14T13:17:20.9921039Z         simulation_state,
2025-01-14T13:17:20.9921179Z         opacity_state,
2025-01-14T13:17:20.9921319Z         macro_atom_state,
2025-01-14T13:17:20.9921440Z         plasma,
2025-01-14T13:17:20.9921689Z         no_of_packets,
2025-01-14T13:17:20.9921835Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9921957Z         iteration=0,
2025-01-14T13:17:20.9922079Z     ):
2025-01-14T13:17:20.9922288Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9922394Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9922464Z         else:
2025-01-14T13:17:20.9922684Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9922752Z     
2025-01-14T13:17:20.9922892Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9922988Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9923060Z         )
2025-01-14T13:17:20.9923126Z     
2025-01-14T13:17:20.9923257Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9923370Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9923526Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9923601Z         else:
2025-01-14T13:17:20.9923684Z             continuum_state = None
2025-01-14T13:17:20.9923892Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9924008Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9924110Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9924214Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9924321Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9924413Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9924509Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9924579Z         ).to_numba(
2025-01-14T13:17:20.9924661Z             macro_atom_state,
2025-01-14T13:17:20.9924749Z             self.line_interaction_type,
2025-01-14T13:17:20.9924820Z         )
2025-01-14T13:17:20.9924922Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9925195Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9925271Z         ]
2025-01-14T13:17:20.9925574Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9925579Z 
2025-01-14T13:17:20.9925730Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9925881Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9926136Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9926206Z 	
2025-01-14T13:17:20.9926770Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:20.9926939Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9927362Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:20.9927530Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9928168Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:20.9928593Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9929206Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9929399Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9929608Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:20.9929778Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9929846Z 	
2025-01-14T13:17:20.9930001Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:20.9930153Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9930312Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:20.9930662Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:20.9931031Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:20.9931720Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:20.9932231Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9932453Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:20.9932560Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:20.9932647Z 	Starting iteration 1 of 5
2025-01-14T13:17:20.9932826Z _____________ ERROR at setup of TestTransportSimple.test_spectrum ______________
2025-01-14T13:17:20.9932831Z 
2025-01-14T13:17:20.9933160Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9933350Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9933722Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9933813Z generate_reference = False
2025-01-14T13:17:20.9934002Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9934006Z 
2025-01-14T13:17:20.9934098Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9934173Z     def simulation(
2025-01-14T13:17:20.9934246Z         self,
2025-01-14T13:17:20.9934321Z         request,
2025-01-14T13:17:20.9934400Z         atomic_data_fname,
2025-01-14T13:17:20.9934484Z         generate_reference,
2025-01-14T13:17:20.9934656Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9934775Z     ):
2025-01-14T13:17:20.9934937Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9935225Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9935340Z         )
2025-01-14T13:17:20.9935505Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9935630Z     
2025-01-14T13:17:20.9935752Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9935845Z >       simulation.run_convergence()
2025-01-14T13:17:20.9935849Z 
2025-01-14T13:17:20.9935949Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9936060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9936189Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9936340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9936435Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9936594Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9936706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9936710Z 
2025-01-14T13:17:20.9936980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9937181Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9937412Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9937687Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9937853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9937996Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9938000Z 
2025-01-14T13:17:20.9938093Z     def initialize_transport_state(
2025-01-14T13:17:20.9938167Z         self,
2025-01-14T13:17:20.9938246Z         simulation_state,
2025-01-14T13:17:20.9938325Z         opacity_state,
2025-01-14T13:17:20.9938406Z         macro_atom_state,
2025-01-14T13:17:20.9938485Z         plasma,
2025-01-14T13:17:20.9938560Z         no_of_packets,
2025-01-14T13:17:20.9938647Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9938721Z         iteration=0,
2025-01-14T13:17:20.9938926Z     ):
2025-01-14T13:17:20.9939060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9939164Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9939233Z         else:
2025-01-14T13:17:20.9939316Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9939383Z     
2025-01-14T13:17:20.9939534Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9939636Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9939704Z         )
2025-01-14T13:17:20.9939775Z     
2025-01-14T13:17:20.9939903Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9940026Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9940260Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9940340Z         else:
2025-01-14T13:17:20.9940425Z             continuum_state = None
2025-01-14T13:17:20.9940531Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9940645Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9940742Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9940848Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9940951Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9941045Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9941203Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9941338Z         ).to_numba(
2025-01-14T13:17:20.9941468Z             macro_atom_state,
2025-01-14T13:17:20.9941749Z             self.line_interaction_type,
2025-01-14T13:17:20.9941864Z         )
2025-01-14T13:17:20.9942045Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9942459Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9942535Z         ]
2025-01-14T13:17:20.9942840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9942853Z 
2025-01-14T13:17:20.9943008Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9943189Z _________ ERROR at setup of TestTransportSimple.test_virtual_spectrum __________
2025-01-14T13:17:20.9943198Z 
2025-01-14T13:17:20.9943409Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f37b1313d40>
2025-01-14T13:17:20.9943592Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:17:20.9943958Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9944050Z generate_reference = False
2025-01-14T13:17:20.9944246Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:20.9944250Z 
2025-01-14T13:17:20.9944342Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9944417Z     def simulation(
2025-01-14T13:17:20.9944496Z         self,
2025-01-14T13:17:20.9944566Z         request,
2025-01-14T13:17:20.9944648Z         atomic_data_fname,
2025-01-14T13:17:20.9944728Z         generate_reference,
2025-01-14T13:17:20.9944827Z         example_configuration_dir: Path,
2025-01-14T13:17:20.9944901Z     ):
2025-01-14T13:17:20.9944994Z         config = Configuration.from_yaml(
2025-01-14T13:17:20.9945164Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:17:20.9945231Z         )
2025-01-14T13:17:20.9945332Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:20.9945398Z     
2025-01-14T13:17:20.9945509Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9945598Z >       simulation.run_convergence()
2025-01-14T13:17:20.9945606Z 
2025-01-14T13:17:20.9945703Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:17:20.9945810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9945932Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9946208Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9946313Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9946473Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9946577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9946582Z 
2025-01-14T13:17:20.9946850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3782310290>
2025-01-14T13:17:20.9947051Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d251700>
2025-01-14T13:17:20.9947398Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378238db50>
2025-01-14T13:17:20.9947673Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378238deb0>
2025-01-14T13:17:20.9947839Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378889a810>
2025-01-14T13:17:20.9947988Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9948005Z 
2025-01-14T13:17:20.9948163Z     def initialize_transport_state(
2025-01-14T13:17:20.9948289Z         self,
2025-01-14T13:17:20.9948419Z         simulation_state,
2025-01-14T13:17:20.9948549Z         opacity_state,
2025-01-14T13:17:20.9948675Z         macro_atom_state,
2025-01-14T13:17:20.9948797Z         plasma,
2025-01-14T13:17:20.9948918Z         no_of_packets,
2025-01-14T13:17:20.9949062Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9949172Z         iteration=0,
2025-01-14T13:17:20.9949249Z     ):
2025-01-14T13:17:20.9949379Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9949490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9949561Z         else:
2025-01-14T13:17:20.9949644Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9949710Z     
2025-01-14T13:17:20.9949852Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9949959Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9950032Z         )
2025-01-14T13:17:20.9950103Z     
2025-01-14T13:17:20.9950230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9950348Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9950502Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9950576Z         else:
2025-01-14T13:17:20.9950659Z             continuum_state = None
2025-01-14T13:17:20.9950765Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9950873Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9950970Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9951081Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9951186Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9951283Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9951384Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9951455Z         ).to_numba(
2025-01-14T13:17:20.9951538Z             macro_atom_state,
2025-01-14T13:17:20.9951811Z             self.line_interaction_type,
2025-01-14T13:17:20.9951882Z         )
2025-01-14T13:17:20.9951988Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9952259Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9952331Z         ]
2025-01-14T13:17:20.9952632Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9952636Z 
2025-01-14T13:17:20.9952791Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9953057Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-downbranch] _
2025-01-14T13:17:20.9953061Z 
2025-01-14T13:17:20.9953382Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9954128Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9954495Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9954499Z 
2025-01-14T13:17:20.9954592Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9954709Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9954808Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9954890Z     
2025-01-14T13:17:20.9955329Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9955568Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9955706Z             self.name += "_interp"
2025-01-14T13:17:20.9955829Z     
2025-01-14T13:17:20.9956012Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9956110Z >       simulation.run_convergence()
2025-01-14T13:17:20.9956115Z 
2025-01-14T13:17:20.9956246Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:20.9956361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9956473Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9956620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9956714Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9956871Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9956982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9956986Z 
2025-01-14T13:17:20.9957255Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:20.9957467Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:20.9957686Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:20.9957964Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:20.9958125Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:20.9958271Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9958275Z 
2025-01-14T13:17:20.9958363Z     def initialize_transport_state(
2025-01-14T13:17:20.9958437Z         self,
2025-01-14T13:17:20.9958515Z         simulation_state,
2025-01-14T13:17:20.9958600Z         opacity_state,
2025-01-14T13:17:20.9958676Z         macro_atom_state,
2025-01-14T13:17:20.9958751Z         plasma,
2025-01-14T13:17:20.9958829Z         no_of_packets,
2025-01-14T13:17:20.9958911Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9958995Z         iteration=0,
2025-01-14T13:17:20.9959063Z     ):
2025-01-14T13:17:20.9959193Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9959288Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9959362Z         else:
2025-01-14T13:17:20.9959440Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9959512Z     
2025-01-14T13:17:20.9959648Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9959749Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9959817Z         )
2025-01-14T13:17:20.9959888Z     
2025-01-14T13:17:20.9960014Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9960138Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9960292Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9960366Z         else:
2025-01-14T13:17:20.9960453Z             continuum_state = None
2025-01-14T13:17:20.9960553Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9960755Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9960848Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9960958Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9961089Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9961189Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9961280Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9961361Z         ).to_numba(
2025-01-14T13:17:20.9961465Z             macro_atom_state,
2025-01-14T13:17:20.9961752Z             self.line_interaction_type,
2025-01-14T13:17:20.9961871Z         )
2025-01-14T13:17:20.9962201Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9962681Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9962760Z         ]
2025-01-14T13:17:20.9963069Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9963079Z 
2025-01-14T13:17:20.9963226Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9963382Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:20.9970207Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9970472Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9970673Z 	
2025-01-14T13:17:20.9971230Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:20.9971410Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9972042Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:20.9972224Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9972698Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:20.9973064Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:20.9973509Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:20.9973693Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9973909Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:20.9974071Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:20.9974144Z 	
2025-01-14T13:17:20.9974295Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:20.9974455Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:20.9974609Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:20.9975132Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:20.9975796Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:20.9976279Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:20.9976787Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:20.9977008Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:20.9977120Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:20.9977204Z 	Starting iteration 1 of 5
2025-01-14T13:17:20.9977466Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] _
2025-01-14T13:17:20.9977471Z 
2025-01-14T13:17:20.9977793Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9978397Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9978773Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9978777Z 
2025-01-14T13:17:20.9978866Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9978988Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9979082Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9979154Z     
2025-01-14T13:17:20.9979321Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9979467Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9979548Z             self.name += "_interp"
2025-01-14T13:17:20.9979625Z     
2025-01-14T13:17:20.9979736Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:20.9979826Z >       simulation.run_convergence()
2025-01-14T13:17:20.9979830Z 
2025-01-14T13:17:20.9979966Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:20.9980231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9980353Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:20.9980492Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:20.9980592Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:20.9980747Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:20.9980859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:20.9980863Z 
2025-01-14T13:17:20.9981126Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:20.9981422Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:20.9981958Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:20.9982443Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:20.9982707Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:20.9982853Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:20.9982857Z 
2025-01-14T13:17:20.9982951Z     def initialize_transport_state(
2025-01-14T13:17:20.9983023Z         self,
2025-01-14T13:17:20.9983108Z         simulation_state,
2025-01-14T13:17:20.9983183Z         opacity_state,
2025-01-14T13:17:20.9983265Z         macro_atom_state,
2025-01-14T13:17:20.9983338Z         plasma,
2025-01-14T13:17:20.9993013Z         no_of_packets,
2025-01-14T13:17:20.9993157Z         no_of_virtual_packets=0,
2025-01-14T13:17:20.9993316Z         iteration=0,
2025-01-14T13:17:20.9993456Z     ):
2025-01-14T13:17:20.9993679Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:20.9993847Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:20.9993963Z         else:
2025-01-14T13:17:20.9994110Z             gamma_shape = (0, 0)
2025-01-14T13:17:20.9994220Z     
2025-01-14T13:17:20.9994439Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:20.9994543Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:20.9994615Z         )
2025-01-14T13:17:20.9994681Z     
2025-01-14T13:17:20.9994825Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:20.9994946Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:20.9995117Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:20.9995187Z         else:
2025-01-14T13:17:20.9995277Z             continuum_state = None
2025-01-14T13:17:20.9995394Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:20.9995508Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:20.9995607Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:20.9995714Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:20.9995827Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:20.9995921Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:20.9996018Z             continuum_state=continuum_state,
2025-01-14T13:17:20.9996090Z         ).to_numba(
2025-01-14T13:17:20.9996175Z             macro_atom_state,
2025-01-14T13:17:20.9996264Z             self.line_interaction_type,
2025-01-14T13:17:20.9996336Z         )
2025-01-14T13:17:20.9996436Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:20.9996718Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:20.9996785Z         ]
2025-01-14T13:17:20.9997109Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:20.9997115Z 
2025-01-14T13:17:20.9997276Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:20.9997513Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] _
2025-01-14T13:17:20.9997711Z 
2025-01-14T13:17:20.9998046Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:20.9998661Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:20.9999039Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:20.9999043Z 
2025-01-14T13:17:20.9999139Z     @pytest.fixture(scope="class")
2025-01-14T13:17:20.9999366Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:20.9999473Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:20.9999540Z     
2025-01-14T13:17:20.9999721Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:20.9999873Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:20.9999964Z             self.name += "_interp"
2025-01-14T13:17:21.0000030Z     
2025-01-14T13:17:21.0000145Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0000235Z >       simulation.run_convergence()
2025-01-14T13:17:21.0000239Z 
2025-01-14T13:17:21.0000379Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0000500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0000617Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0000767Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0000869Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0001029Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0001140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0001150Z 
2025-01-14T13:17:21.0001420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:21.0001747Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:21.0001975Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:21.0002248Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:21.0002413Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:21.0002559Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0002563Z 
2025-01-14T13:17:21.0002654Z     def initialize_transport_state(
2025-01-14T13:17:21.0002730Z         self,
2025-01-14T13:17:21.0002809Z         simulation_state,
2025-01-14T13:17:21.0002887Z         opacity_state,
2025-01-14T13:17:21.0002959Z         macro_atom_state,
2025-01-14T13:17:21.0003036Z         plasma,
2025-01-14T13:17:21.0003107Z         no_of_packets,
2025-01-14T13:17:21.0003194Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0003265Z         iteration=0,
2025-01-14T13:17:21.0003340Z     ):
2025-01-14T13:17:21.0003467Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0003569Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0003636Z         else:
2025-01-14T13:17:21.0003718Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0003788Z     
2025-01-14T13:17:21.0003922Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0004024Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0004091Z         )
2025-01-14T13:17:21.0004165Z     
2025-01-14T13:17:21.0004292Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0004413Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0004567Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0004781Z         else:
2025-01-14T13:17:21.0004865Z             continuum_state = None
2025-01-14T13:17:21.0004971Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0005077Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0005177Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0005283Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0005388Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0005487Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0005577Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0005654Z         ).to_numba(
2025-01-14T13:17:21.0005838Z             macro_atom_state,
2025-01-14T13:17:21.0005933Z             self.line_interaction_type,
2025-01-14T13:17:21.0006000Z         )
2025-01-14T13:17:21.0006108Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0006378Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0006459Z         ]
2025-01-14T13:17:21.0006772Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0006777Z 
2025-01-14T13:17:21.0006933Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0007212Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] _
2025-01-14T13:17:21.0007217Z 
2025-01-14T13:17:21.0007535Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0008151Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0008518Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0008527Z 
2025-01-14T13:17:21.0008621Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0008738Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0008836Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0008907Z     
2025-01-14T13:17:21.0009071Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0009218Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0009299Z             self.name += "_interp"
2025-01-14T13:17:21.0009369Z     
2025-01-14T13:17:21.0009482Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0009578Z >       simulation.run_convergence()
2025-01-14T13:17:21.0009583Z 
2025-01-14T13:17:21.0009716Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0009836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0009960Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0010108Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0010204Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0010365Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0010482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0010487Z 
2025-01-14T13:17:21.0010750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787ffdb80>
2025-01-14T13:17:21.0010958Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3787317b00>
2025-01-14T13:17:21.0011182Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378bd83530>
2025-01-14T13:17:21.0011465Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378bd82600>
2025-01-14T13:17:21.0011915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3795584e00>
2025-01-14T13:17:21.0012064Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0012068Z 
2025-01-14T13:17:21.0012163Z     def initialize_transport_state(
2025-01-14T13:17:21.0012232Z         self,
2025-01-14T13:17:21.0012316Z         simulation_state,
2025-01-14T13:17:21.0012391Z         opacity_state,
2025-01-14T13:17:21.0012474Z         macro_atom_state,
2025-01-14T13:17:21.0012544Z         plasma,
2025-01-14T13:17:21.0012622Z         no_of_packets,
2025-01-14T13:17:21.0012706Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0012784Z         iteration=0,
2025-01-14T13:17:21.0012850Z     ):
2025-01-14T13:17:21.0013103Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0013203Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0013276Z         else:
2025-01-14T13:17:21.0013357Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0013425Z     
2025-01-14T13:17:21.0013569Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0013671Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0013737Z         )
2025-01-14T13:17:21.0013810Z     
2025-01-14T13:17:21.0013941Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0014056Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0014218Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0014286Z         else:
2025-01-14T13:17:21.0014373Z             continuum_state = None
2025-01-14T13:17:21.0014472Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0014584Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0014680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0014788Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0014884Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0014990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0015077Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0015151Z         ).to_numba(
2025-01-14T13:17:21.0015228Z             macro_atom_state,
2025-01-14T13:17:21.0015321Z             self.line_interaction_type,
2025-01-14T13:17:21.0015394Z         )
2025-01-14T13:17:21.0015494Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0020048Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0020123Z         ]
2025-01-14T13:17:21.0020435Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0020450Z 
2025-01-14T13:17:21.0020612Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0020846Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-macroatom] _
2025-01-14T13:17:21.0020850Z 
2025-01-14T13:17:21.0021186Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0021987Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0022372Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0022376Z 
2025-01-14T13:17:21.0022476Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0022603Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0022785Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0022902Z     
2025-01-14T13:17:21.0023184Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0023416Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0023765Z             self.name += "_interp"
2025-01-14T13:17:21.0023886Z     
2025-01-14T13:17:21.0024006Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0024096Z >       simulation.run_convergence()
2025-01-14T13:17:21.0024109Z 
2025-01-14T13:17:21.0024240Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0024359Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0024474Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0024620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0024714Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0024990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0025110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0025114Z 
2025-01-14T13:17:21.0025384Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0025596Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0025826Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0026107Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0026274Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0026424Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0026428Z 
2025-01-14T13:17:21.0026519Z     def initialize_transport_state(
2025-01-14T13:17:21.0026597Z         self,
2025-01-14T13:17:21.0026684Z         simulation_state,
2025-01-14T13:17:21.0026768Z         opacity_state,
2025-01-14T13:17:21.0026845Z         macro_atom_state,
2025-01-14T13:17:21.0026921Z         plasma,
2025-01-14T13:17:21.0026994Z         no_of_packets,
2025-01-14T13:17:21.0027089Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0027162Z         iteration=0,
2025-01-14T13:17:21.0027238Z     ):
2025-01-14T13:17:21.0027374Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0027474Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0027554Z         else:
2025-01-14T13:17:21.0027632Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0027707Z     
2025-01-14T13:17:21.0027847Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0027948Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0028016Z         )
2025-01-14T13:17:21.0028085Z     
2025-01-14T13:17:21.0028217Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0028342Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0028495Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0028568Z         else:
2025-01-14T13:17:21.0028655Z             continuum_state = None
2025-01-14T13:17:21.0028764Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0028869Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0028969Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0029083Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0029183Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0029282Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0029372Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0029515Z         ).to_numba(
2025-01-14T13:17:21.0029647Z             macro_atom_state,
2025-01-14T13:17:21.0029798Z             self.line_interaction_type,
2025-01-14T13:17:21.0029919Z         )
2025-01-14T13:17:21.0030095Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0030568Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0030741Z         ]
2025-01-14T13:17:21.0031047Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0031057Z 
2025-01-14T13:17:21.0031208Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0031369Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0038441Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'macroatom', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0038794Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0038866Z 	
2025-01-14T13:17:21.0039431Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0039612Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0040034Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0040204Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0040678Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0040923Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0041353Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0041775Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0042002Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0042165Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0042240Z 	
2025-01-14T13:17:21.0042391Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0042557Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0042709Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0043329Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0044001Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0044507Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0045015Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0045232Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0045345Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0045431Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0045694Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] _
2025-01-14T13:17:21.0045699Z 
2025-01-14T13:17:21.0046022Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0046630Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0047010Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0047015Z 
2025-01-14T13:17:21.0047104Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0047229Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0047322Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0047398Z     
2025-01-14T13:17:21.0047564Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0047716Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0047801Z             self.name += "_interp"
2025-01-14T13:17:21.0047877Z     
2025-01-14T13:17:21.0047997Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0048089Z >       simulation.run_convergence()
2025-01-14T13:17:21.0048103Z 
2025-01-14T13:17:21.0048236Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0048353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0048473Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0048617Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0048712Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0048871Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0048977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0048981Z 
2025-01-14T13:17:21.0049251Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0049451Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0049678Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0050412Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0050688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0050930Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0050934Z 
2025-01-14T13:17:21.0051028Z     def initialize_transport_state(
2025-01-14T13:17:21.0051102Z         self,
2025-01-14T13:17:21.0051181Z         simulation_state,
2025-01-14T13:17:21.0051261Z         opacity_state,
2025-01-14T13:17:21.0051333Z         macro_atom_state,
2025-01-14T13:17:21.0051408Z         plasma,
2025-01-14T13:17:21.0051480Z         no_of_packets,
2025-01-14T13:17:21.0051960Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0052074Z         iteration=0,
2025-01-14T13:17:21.0052150Z     ):
2025-01-14T13:17:21.0052286Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0052381Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0052465Z         else:
2025-01-14T13:17:21.0052542Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0052613Z     
2025-01-14T13:17:21.0052753Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0052855Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0052923Z         )
2025-01-14T13:17:21.0052994Z     
2025-01-14T13:17:21.0053122Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0053241Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0053394Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0053467Z         else:
2025-01-14T13:17:21.0053553Z             continuum_state = None
2025-01-14T13:17:21.0053659Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0053773Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0053865Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0053985Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0054085Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0054183Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0054273Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0054351Z         ).to_numba(
2025-01-14T13:17:21.0054427Z             macro_atom_state,
2025-01-14T13:17:21.0054519Z             self.line_interaction_type,
2025-01-14T13:17:21.0054586Z         )
2025-01-14T13:17:21.0054692Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0054963Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0055039Z         ]
2025-01-14T13:17:21.0055339Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0055349Z 
2025-01-14T13:17:21.0055501Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0055736Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _
2025-01-14T13:17:21.0055740Z 
2025-01-14T13:17:21.0056060Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0056691Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0057332Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0057355Z 
2025-01-14T13:17:21.0057502Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0057698Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0057852Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0058094Z     
2025-01-14T13:17:21.0058276Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0058420Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0058500Z             self.name += "_interp"
2025-01-14T13:17:21.0058574Z     
2025-01-14T13:17:21.0058678Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0058773Z >       simulation.run_convergence()
2025-01-14T13:17:21.0058778Z 
2025-01-14T13:17:21.0058905Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0059019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0059141Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0059362Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0059467Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0059619Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0059736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0059740Z 
2025-01-14T13:17:21.0060002Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0060205Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0060425Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0060702Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0060866Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0061047Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0061051Z 
2025-01-14T13:17:21.0061143Z     def initialize_transport_state(
2025-01-14T13:17:21.0061211Z         self,
2025-01-14T13:17:21.0061292Z         simulation_state,
2025-01-14T13:17:21.0061373Z         opacity_state,
2025-01-14T13:17:21.0061452Z         macro_atom_state,
2025-01-14T13:17:21.0061522Z         plasma,
2025-01-14T13:17:21.0061720Z         no_of_packets,
2025-01-14T13:17:21.0061804Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0061881Z         iteration=0,
2025-01-14T13:17:21.0061947Z     ):
2025-01-14T13:17:21.0062075Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0062172Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0062245Z         else:
2025-01-14T13:17:21.0062321Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0062391Z     
2025-01-14T13:17:21.0062531Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0062631Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0062703Z         )
2025-01-14T13:17:21.0062766Z     
2025-01-14T13:17:21.0062898Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0063009Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0063170Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0063238Z         else:
2025-01-14T13:17:21.0063325Z             continuum_state = None
2025-01-14T13:17:21.0063424Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0063535Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0063627Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0063735Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0063899Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0064075Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0064235Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0064360Z         ).to_numba(
2025-01-14T13:17:21.0064496Z             macro_atom_state,
2025-01-14T13:17:21.0064640Z             self.line_interaction_type,
2025-01-14T13:17:21.0064757Z         )
2025-01-14T13:17:21.0064930Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0065353Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0065422Z         ]
2025-01-14T13:17:21.0065729Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0065734Z 
2025-01-14T13:17:21.0065881Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0066147Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] _
2025-01-14T13:17:21.0066151Z 
2025-01-14T13:17:21.0066575Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0067172Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0067549Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0067553Z 
2025-01-14T13:17:21.0067640Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0067760Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0067852Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0067924Z     
2025-01-14T13:17:21.0068090Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0068227Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0068313Z             self.name += "_interp"
2025-01-14T13:17:21.0068378Z     
2025-01-14T13:17:21.0068492Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0068579Z >       simulation.run_convergence()
2025-01-14T13:17:21.0068584Z 
2025-01-14T13:17:21.0068717Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0068835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0068952Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0069091Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0069188Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0069338Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0069447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0069451Z 
2025-01-14T13:17:21.0069717Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781e3fb00>
2025-01-14T13:17:21.0069924Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378534c950>
2025-01-14T13:17:21.0070151Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2af89e0>
2025-01-14T13:17:21.0070448Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a0f7a0>
2025-01-14T13:17:21.0070744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3787f05820>
2025-01-14T13:17:21.0070981Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0070988Z 
2025-01-14T13:17:21.0071139Z     def initialize_transport_state(
2025-01-14T13:17:21.0071258Z         self,
2025-01-14T13:17:21.0071388Z         simulation_state,
2025-01-14T13:17:21.0071524Z         opacity_state,
2025-01-14T13:17:21.0071757Z         macro_atom_state,
2025-01-14T13:17:21.0071833Z         plasma,
2025-01-14T13:17:21.0071907Z         no_of_packets,
2025-01-14T13:17:21.0071993Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0072067Z         iteration=0,
2025-01-14T13:17:21.0072144Z     ):
2025-01-14T13:17:21.0072270Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0072371Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0072439Z         else:
2025-01-14T13:17:21.0072525Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0072725Z     
2025-01-14T13:17:21.0072867Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0072963Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0073037Z         )
2025-01-14T13:17:21.0073103Z     
2025-01-14T13:17:21.0073234Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0073353Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0073510Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0073583Z         else:
2025-01-14T13:17:21.0073666Z             continuum_state = None
2025-01-14T13:17:21.0073771Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0073985Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0074087Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0074194Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0074304Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0074396Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0074491Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0074561Z         ).to_numba(
2025-01-14T13:17:21.0074643Z             macro_atom_state,
2025-01-14T13:17:21.0074731Z             self.line_interaction_type,
2025-01-14T13:17:21.0074802Z         )
2025-01-14T13:17:21.0074906Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0075179Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0075251Z         ]
2025-01-14T13:17:21.0075555Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0075560Z 
2025-01-14T13:17:21.0075713Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0075941Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-macroatom] _
2025-01-14T13:17:21.0075950Z 
2025-01-14T13:17:21.0076269Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0076872Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0077239Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0077244Z 
2025-01-14T13:17:21.0077408Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0077607Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0077768Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0077879Z     
2025-01-14T13:17:21.0078154Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0078397Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0078495Z             self.name += "_interp"
2025-01-14T13:17:21.0078562Z     
2025-01-14T13:17:21.0078674Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0078767Z >       simulation.run_convergence()
2025-01-14T13:17:21.0078771Z 
2025-01-14T13:17:21.0078900Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0079011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0079126Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0079268Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0079366Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0079530Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0079635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0079738Z 
2025-01-14T13:17:21.0080012Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0080220Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0080441Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0080722Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0080884Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0081027Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0081031Z 
2025-01-14T13:17:21.0081215Z     def initialize_transport_state(
2025-01-14T13:17:21.0081292Z         self,
2025-01-14T13:17:21.0081372Z         simulation_state,
2025-01-14T13:17:21.0081451Z         opacity_state,
2025-01-14T13:17:21.0081528Z         macro_atom_state,
2025-01-14T13:17:21.0081717Z         plasma,
2025-01-14T13:17:21.0081790Z         no_of_packets,
2025-01-14T13:17:21.0081876Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0081952Z         iteration=0,
2025-01-14T13:17:21.0082017Z     ):
2025-01-14T13:17:21.0082149Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0082245Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0082321Z         else:
2025-01-14T13:17:21.0082401Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0082471Z     
2025-01-14T13:17:21.0082613Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0082714Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0082780Z         )
2025-01-14T13:17:21.0082849Z     
2025-01-14T13:17:21.0082982Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0083101Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0083253Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0083332Z         else:
2025-01-14T13:17:21.0083414Z             continuum_state = None
2025-01-14T13:17:21.0083517Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0083629Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0083725Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0083834Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0083933Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0084031Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0084194Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0084322Z         ).to_numba(
2025-01-14T13:17:21.0084461Z             macro_atom_state,
2025-01-14T13:17:21.0084614Z             self.line_interaction_type,
2025-01-14T13:17:21.0084725Z         )
2025-01-14T13:17:21.0084901Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0085317Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0085396Z         ]
2025-01-14T13:17:21.0085702Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0085706Z 
2025-01-14T13:17:21.0085853Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0086012Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0086268Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0086340Z 	
2025-01-14T13:17:21.0086896Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0087072Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0087488Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0087796Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0088274Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0088512Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0088949Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0089124Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0089333Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0089604Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0089678Z 	
2025-01-14T13:17:21.0089832Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0089985Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0090140Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0090479Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0091050Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0091928Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0092440Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0092652Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0092763Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0092852Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0093110Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] _
2025-01-14T13:17:21.0093115Z 
2025-01-14T13:17:21.0093435Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0094031Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0094403Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0094408Z 
2025-01-14T13:17:21.0094497Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0094617Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0094709Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0094790Z     
2025-01-14T13:17:21.0094962Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0095100Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0095184Z             self.name += "_interp"
2025-01-14T13:17:21.0095249Z     
2025-01-14T13:17:21.0095358Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0095449Z >       simulation.run_convergence()
2025-01-14T13:17:21.0095453Z 
2025-01-14T13:17:21.0095585Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0095692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0095815Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0095955Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0096058Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0096216Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0096463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0096468Z 
2025-01-14T13:17:21.0096735Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0096940Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0097164Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0097437Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0097607Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0097852Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0097857Z 
2025-01-14T13:17:21.0097955Z     def initialize_transport_state(
2025-01-14T13:17:21.0098028Z         self,
2025-01-14T13:17:21.0098105Z         simulation_state,
2025-01-14T13:17:21.0098190Z         opacity_state,
2025-01-14T13:17:21.0098265Z         macro_atom_state,
2025-01-14T13:17:21.0098341Z         plasma,
2025-01-14T13:17:21.0098415Z         no_of_packets,
2025-01-14T13:17:21.0098501Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0098573Z         iteration=0,
2025-01-14T13:17:21.0098657Z     ):
2025-01-14T13:17:21.0098783Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0098883Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0098951Z         else:
2025-01-14T13:17:21.0099033Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0099097Z     
2025-01-14T13:17:21.0099238Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0099338Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0099409Z         )
2025-01-14T13:17:21.0099474Z     
2025-01-14T13:17:21.0099606Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0099724Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0099881Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0099953Z         else:
2025-01-14T13:17:21.0100038Z             continuum_state = None
2025-01-14T13:17:21.0100144Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0100250Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0100346Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0100452Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0100558Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0100650Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0100748Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0100820Z         ).to_numba(
2025-01-14T13:17:21.0100903Z             macro_atom_state,
2025-01-14T13:17:21.0100996Z             self.line_interaction_type,
2025-01-14T13:17:21.0101063Z         )
2025-01-14T13:17:21.0101174Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0101448Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0101520Z         ]
2025-01-14T13:17:21.0102115Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0102126Z 
2025-01-14T13:17:21.0102290Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0102512Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _
2025-01-14T13:17:21.0102516Z 
2025-01-14T13:17:21.0102836Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0103436Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0103961Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0103965Z 
2025-01-14T13:17:21.0104056Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0104171Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0104267Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0104333Z     
2025-01-14T13:17:21.0104496Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0104630Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0104717Z             self.name += "_interp"
2025-01-14T13:17:21.0104886Z     
2025-01-14T13:17:21.0104999Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0105090Z >       simulation.run_convergence()
2025-01-14T13:17:21.0105094Z 
2025-01-14T13:17:21.0105220Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0105337Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0105453Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0105596Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0105690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0105848Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0105953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0105957Z 
2025-01-14T13:17:21.0106223Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0106433Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0106656Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0106934Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0107099Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0107241Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0107245Z 
2025-01-14T13:17:21.0107333Z     def initialize_transport_state(
2025-01-14T13:17:21.0107407Z         self,
2025-01-14T13:17:21.0107484Z         simulation_state,
2025-01-14T13:17:21.0107566Z         opacity_state,
2025-01-14T13:17:21.0107640Z         macro_atom_state,
2025-01-14T13:17:21.0107715Z         plasma,
2025-01-14T13:17:21.0107787Z         no_of_packets,
2025-01-14T13:17:21.0107874Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0107951Z         iteration=0,
2025-01-14T13:17:21.0108022Z     ):
2025-01-14T13:17:21.0108150Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0108243Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0108316Z         else:
2025-01-14T13:17:21.0108399Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0108469Z     
2025-01-14T13:17:21.0108603Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0108702Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0108769Z         )
2025-01-14T13:17:21.0108839Z     
2025-01-14T13:17:21.0108963Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0109082Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0109231Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0109305Z         else:
2025-01-14T13:17:21.0109392Z             continuum_state = None
2025-01-14T13:17:21.0109495Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0109609Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0109701Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0109810Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0110019Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0110121Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0110211Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0110287Z         ).to_numba(
2025-01-14T13:17:21.0110363Z             macro_atom_state,
2025-01-14T13:17:21.0110453Z             self.line_interaction_type,
2025-01-14T13:17:21.0110518Z         )
2025-01-14T13:17:21.0110622Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0110891Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0110963Z         ]
2025-01-14T13:17:21.0111347Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0111352Z 
2025-01-14T13:17:21.0111499Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0111968Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] _
2025-01-14T13:17:21.0111981Z 
2025-01-14T13:17:21.0112297Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0112894Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0113258Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0113263Z 
2025-01-14T13:17:21.0113346Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0113469Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0113559Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0113629Z     
2025-01-14T13:17:21.0113787Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0113931Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0114007Z             self.name += "_interp"
2025-01-14T13:17:21.0114078Z     
2025-01-14T13:17:21.0114180Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0114271Z >       simulation.run_convergence()
2025-01-14T13:17:21.0114275Z 
2025-01-14T13:17:21.0114401Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0114517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0114633Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0114770Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0114872Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0115025Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0115134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0115143Z 
2025-01-14T13:17:21.0115400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f379dcfb7d0>
2025-01-14T13:17:21.0115603Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a0937620>
2025-01-14T13:17:21.0115823Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dcfcf50>
2025-01-14T13:17:21.0116099Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc59c70>
2025-01-14T13:17:21.0116264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a2a3f950>
2025-01-14T13:17:21.0116400Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0116405Z 
2025-01-14T13:17:21.0116501Z     def initialize_transport_state(
2025-01-14T13:17:21.0116569Z         self,
2025-01-14T13:17:21.0116651Z         simulation_state,
2025-01-14T13:17:21.0116724Z         opacity_state,
2025-01-14T13:17:21.0116803Z         macro_atom_state,
2025-01-14T13:17:21.0116999Z         plasma,
2025-01-14T13:17:21.0117079Z         no_of_packets,
2025-01-14T13:17:21.0117163Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0117240Z         iteration=0,
2025-01-14T13:17:21.0117307Z     ):
2025-01-14T13:17:21.0117432Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0117527Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0117603Z         else:
2025-01-14T13:17:21.0117685Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0117750Z     
2025-01-14T13:17:21.0117887Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0117979Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0118050Z         )
2025-01-14T13:17:21.0118226Z     
2025-01-14T13:17:21.0118361Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0118472Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0118631Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0118704Z         else:
2025-01-14T13:17:21.0118791Z             continuum_state = None
2025-01-14T13:17:21.0118889Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0118999Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0119088Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0119195Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0119299Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0119389Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0119483Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0119553Z         ).to_numba(
2025-01-14T13:17:21.0119641Z             macro_atom_state,
2025-01-14T13:17:21.0119728Z             self.line_interaction_type,
2025-01-14T13:17:21.0119800Z         )
2025-01-14T13:17:21.0119898Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0120180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0120248Z         ]
2025-01-14T13:17:21.0120550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0120555Z 
2025-01-14T13:17:21.0120699Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0120935Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-downbranch] _
2025-01-14T13:17:21.0120939Z 
2025-01-14T13:17:21.0121256Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0121959Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0122326Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0122336Z 
2025-01-14T13:17:21.0122421Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0122543Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0122637Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0122702Z     
2025-01-14T13:17:21.0122866Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0122999Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0123082Z             self.name += "_interp"
2025-01-14T13:17:21.0123147Z     
2025-01-14T13:17:21.0123252Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0123343Z >       simulation.run_convergence()
2025-01-14T13:17:21.0123347Z 
2025-01-14T13:17:21.0123477Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0123586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0123828Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0123964Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0124062Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0124217Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0124321Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0124326Z 
2025-01-14T13:17:21.0124591Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0124791Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0125119Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0125536Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0125829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0126064Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0126076Z 
2025-01-14T13:17:21.0126223Z     def initialize_transport_state(
2025-01-14T13:17:21.0126344Z         self,
2025-01-14T13:17:21.0126466Z         simulation_state,
2025-01-14T13:17:21.0126547Z         opacity_state,
2025-01-14T13:17:21.0126623Z         macro_atom_state,
2025-01-14T13:17:21.0126699Z         plasma,
2025-01-14T13:17:21.0126771Z         no_of_packets,
2025-01-14T13:17:21.0126859Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0126932Z         iteration=0,
2025-01-14T13:17:21.0127002Z     ):
2025-01-14T13:17:21.0127128Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0127226Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0127294Z         else:
2025-01-14T13:17:21.0127378Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0127442Z     
2025-01-14T13:17:21.0127588Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0127681Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0127752Z         )
2025-01-14T13:17:21.0127822Z     
2025-01-14T13:17:21.0127947Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0128061Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0128213Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0128287Z         else:
2025-01-14T13:17:21.0128369Z             continuum_state = None
2025-01-14T13:17:21.0128473Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0128579Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0128678Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0128781Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0128883Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0128979Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0129072Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0129141Z         ).to_numba(
2025-01-14T13:17:21.0129223Z             macro_atom_state,
2025-01-14T13:17:21.0129317Z             self.line_interaction_type,
2025-01-14T13:17:21.0129382Z         )
2025-01-14T13:17:21.0129489Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0129755Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0129830Z         ]
2025-01-14T13:17:21.0130126Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0130135Z 
2025-01-14T13:17:21.0130286Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0130436Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0137570Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0137962Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0138031Z 	
2025-01-14T13:17:21.0138594Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.0138774Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0139542Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.0139842Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0140362Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.0140605Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0141038Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0141220Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0141432Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0141707Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0141775Z 	
2025-01-14T13:17:21.0141933Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0142247Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0142404Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.0142748Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.0143116Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.0143540Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.0144143Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0144365Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0144477Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0144566Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0144829Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] _
2025-01-14T13:17:21.0144834Z 
2025-01-14T13:17:21.0145151Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0145978Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0146625Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0146631Z 
2025-01-14T13:17:21.0146731Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0146850Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0146955Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0147028Z     
2025-01-14T13:17:21.0147190Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0147335Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0147415Z             self.name += "_interp"
2025-01-14T13:17:21.0147486Z     
2025-01-14T13:17:21.0147592Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0147686Z >       simulation.run_convergence()
2025-01-14T13:17:21.0147690Z 
2025-01-14T13:17:21.0147822Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0147947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0148061Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0148207Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0148300Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0148464Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0148575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0148579Z 
2025-01-14T13:17:21.0148842Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0149049Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0149269Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0149549Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0149713Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0149859Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0149863Z 
2025-01-14T13:17:21.0149955Z     def initialize_transport_state(
2025-01-14T13:17:21.0150127Z         self,
2025-01-14T13:17:21.0150211Z         simulation_state,
2025-01-14T13:17:21.0150284Z         opacity_state,
2025-01-14T13:17:21.0150366Z         macro_atom_state,
2025-01-14T13:17:21.0150434Z         plasma,
2025-01-14T13:17:21.0150513Z         no_of_packets,
2025-01-14T13:17:21.0150594Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0150672Z         iteration=0,
2025-01-14T13:17:21.0150737Z     ):
2025-01-14T13:17:21.0150870Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0150967Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0151040Z         else:
2025-01-14T13:17:21.0151117Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0151187Z     
2025-01-14T13:17:21.0151401Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0151505Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0151756Z         )
2025-01-14T13:17:21.0151863Z     
2025-01-14T13:17:21.0152008Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0152132Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0152401Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0152519Z         else:
2025-01-14T13:17:21.0152662Z             continuum_state = None
2025-01-14T13:17:21.0152831Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0153016Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0153165Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0153336Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0153441Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0153545Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0153636Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0153712Z         ).to_numba(
2025-01-14T13:17:21.0153790Z             macro_atom_state,
2025-01-14T13:17:21.0153886Z             self.line_interaction_type,
2025-01-14T13:17:21.0153971Z         )
2025-01-14T13:17:21.0154073Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0154349Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0154419Z         ]
2025-01-14T13:17:21.0154731Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0154736Z 
2025-01-14T13:17:21.0154884Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0155115Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] _
2025-01-14T13:17:21.0155119Z 
2025-01-14T13:17:21.0155439Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0156035Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0156409Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0156413Z 
2025-01-14T13:17:21.0156500Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0156620Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0156709Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0156780Z     
2025-01-14T13:17:21.0156938Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0157087Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0157167Z             self.name += "_interp"
2025-01-14T13:17:21.0157237Z     
2025-01-14T13:17:21.0157345Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0157432Z >       simulation.run_convergence()
2025-01-14T13:17:21.0157569Z 
2025-01-14T13:17:21.0157708Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0157818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0157940Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0158081Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0158179Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0158336Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0158449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0158453Z 
2025-01-14T13:17:21.0158826Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0159130Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0159526Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0160015Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0160195Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0160334Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0160339Z 
2025-01-14T13:17:21.0160432Z     def initialize_transport_state(
2025-01-14T13:17:21.0160499Z         self,
2025-01-14T13:17:21.0160584Z         simulation_state,
2025-01-14T13:17:21.0160658Z         opacity_state,
2025-01-14T13:17:21.0160741Z         macro_atom_state,
2025-01-14T13:17:21.0160812Z         plasma,
2025-01-14T13:17:21.0160890Z         no_of_packets,
2025-01-14T13:17:21.0160982Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0161090Z         iteration=0,
2025-01-14T13:17:21.0161162Z     ):
2025-01-14T13:17:21.0161291Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0161393Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0161466Z         else:
2025-01-14T13:17:21.0161649Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0161714Z     
2025-01-14T13:17:21.0161856Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0161951Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0162023Z         )
2025-01-14T13:17:21.0162088Z     
2025-01-14T13:17:21.0162221Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0162333Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0162489Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0162557Z         else:
2025-01-14T13:17:21.0162648Z             continuum_state = None
2025-01-14T13:17:21.0162756Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0162862Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0162957Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0163065Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0163177Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0163271Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0163363Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0163433Z         ).to_numba(
2025-01-14T13:17:21.0163516Z             macro_atom_state,
2025-01-14T13:17:21.0163605Z             self.line_interaction_type,
2025-01-14T13:17:21.0163676Z         )
2025-01-14T13:17:21.0163778Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0164053Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0164129Z         ]
2025-01-14T13:17:21.0164444Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0164448Z 
2025-01-14T13:17:21.0164603Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0165010Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] _
2025-01-14T13:17:21.0165014Z 
2025-01-14T13:17:21.0165334Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f37b131d100>
2025-01-14T13:17:21.0166182Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0166813Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.0166956Z 
2025-01-14T13:17:21.0167061Z     @pytest.fixture(scope="class")
2025-01-14T13:17:21.0167180Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:17:21.0167279Z         config.atom_data = atomic_data_fname
2025-01-14T13:17:21.0167350Z     
2025-01-14T13:17:21.0167513Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:17:21.0167651Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:17:21.0167735Z             self.name += "_interp"
2025-01-14T13:17:21.0167803Z     
2025-01-14T13:17:21.0167912Z         simulation = Simulation.from_config(config)
2025-01-14T13:17:21.0167999Z >       simulation.run_convergence()
2025-01-14T13:17:21.0168003Z 
2025-01-14T13:17:21.0168136Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:17:21.0168256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0168370Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0168520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0168615Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0168773Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0168885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0168889Z 
2025-01-14T13:17:21.0169157Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d5f4530>
2025-01-14T13:17:21.0169359Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc703b0>
2025-01-14T13:17:21.0169587Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d6bbb60>
2025-01-14T13:17:21.0169863Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d6ba900>
2025-01-14T13:17:21.0170022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379db87fe0>
2025-01-14T13:17:21.0170174Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0170178Z 
2025-01-14T13:17:21.0170266Z     def initialize_transport_state(
2025-01-14T13:17:21.0170339Z         self,
2025-01-14T13:17:21.0170417Z         simulation_state,
2025-01-14T13:17:21.0170501Z         opacity_state,
2025-01-14T13:17:21.0170576Z         macro_atom_state,
2025-01-14T13:17:21.0170651Z         plasma,
2025-01-14T13:17:21.0170724Z         no_of_packets,
2025-01-14T13:17:21.0170812Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0170882Z         iteration=0,
2025-01-14T13:17:21.0170957Z     ):
2025-01-14T13:17:21.0171080Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0171181Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0171253Z         else:
2025-01-14T13:17:21.0171330Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0171400Z     
2025-01-14T13:17:21.0171535Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0171842Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0171915Z         )
2025-01-14T13:17:21.0171985Z     
2025-01-14T13:17:21.0172113Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0172230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0172557Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0172695Z         else:
2025-01-14T13:17:21.0172834Z             continuum_state = None
2025-01-14T13:17:21.0173009Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0173190Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0173349Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0173530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0173701Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0173804Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0174020Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0174101Z         ).to_numba(
2025-01-14T13:17:21.0174181Z             macro_atom_state,
2025-01-14T13:17:21.0174273Z             self.line_interaction_type,
2025-01-14T13:17:21.0174339Z         )
2025-01-14T13:17:21.0174449Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0174718Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0174788Z         ]
2025-01-14T13:17:21.0175090Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0175094Z 
2025-01-14T13:17:21.0175246Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0175419Z ____________ ERROR at setup of test_hdf_transport_state[output_nu] _____________
2025-01-14T13:17:21.0175423Z 
2025-01-14T13:17:21.0176057Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0176412Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0176421Z 
2025-01-14T13:17:21.0176510Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0176716Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0176812Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0176902Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0177078Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0177144Z         )
2025-01-14T13:17:21.0177234Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0177308Z >       sim.run_final()
2025-01-14T13:17:21.0177312Z 
2025-01-14T13:17:21.0177397Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0177507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0177610Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0177749Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0177852Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0178002Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0178111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0178115Z 
2025-01-14T13:17:21.0178380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0178579Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0178802Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0179077Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0179284Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0179529Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0179653Z 
2025-01-14T13:17:21.0179807Z     def initialize_transport_state(
2025-01-14T13:17:21.0179923Z         self,
2025-01-14T13:17:21.0180061Z         simulation_state,
2025-01-14T13:17:21.0180186Z         opacity_state,
2025-01-14T13:17:21.0180326Z         macro_atom_state,
2025-01-14T13:17:21.0180419Z         plasma,
2025-01-14T13:17:21.0180495Z         no_of_packets,
2025-01-14T13:17:21.0180583Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0180654Z         iteration=0,
2025-01-14T13:17:21.0180728Z     ):
2025-01-14T13:17:21.0180852Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0180950Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0181018Z         else:
2025-01-14T13:17:21.0181186Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0181253Z     
2025-01-14T13:17:21.0181392Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0181486Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0181670Z         )
2025-01-14T13:17:21.0181743Z     
2025-01-14T13:17:21.0181874Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0181987Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0182143Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0182216Z         else:
2025-01-14T13:17:21.0182298Z             continuum_state = None
2025-01-14T13:17:21.0182401Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0182508Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0182605Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0182710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0182817Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0182909Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0183002Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0183073Z         ).to_numba(
2025-01-14T13:17:21.0183162Z             macro_atom_state,
2025-01-14T13:17:21.0183247Z             self.line_interaction_type,
2025-01-14T13:17:21.0183319Z         )
2025-01-14T13:17:21.0183418Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0183696Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0183767Z         ]
2025-01-14T13:17:21.0184063Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0184067Z 
2025-01-14T13:17:21.0184218Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0184387Z __________ ERROR at setup of test_hdf_transport_state[output_energy] ___________
2025-01-14T13:17:21.0184391Z 
2025-01-14T13:17:21.0185025Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0185383Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0185387Z 
2025-01-14T13:17:21.0185476Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0185680Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0185776Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0185866Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0186041Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0186113Z         )
2025-01-14T13:17:21.0186286Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0186420Z >       sim.run_final()
2025-01-14T13:17:21.0186426Z 
2025-01-14T13:17:21.0186569Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0186756Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0187080Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0187309Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0187413Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0187566Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0187675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0187679Z 
2025-01-14T13:17:21.0187940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0188144Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0188480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0188760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0188931Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0189067Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0189070Z 
2025-01-14T13:17:21.0189162Z     def initialize_transport_state(
2025-01-14T13:17:21.0189230Z         self,
2025-01-14T13:17:21.0189312Z         simulation_state,
2025-01-14T13:17:21.0189386Z         opacity_state,
2025-01-14T13:17:21.0189466Z         macro_atom_state,
2025-01-14T13:17:21.0189535Z         plasma,
2025-01-14T13:17:21.0189611Z         no_of_packets,
2025-01-14T13:17:21.0189692Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0189768Z         iteration=0,
2025-01-14T13:17:21.0189833Z     ):
2025-01-14T13:17:21.0189966Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0190061Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0190135Z         else:
2025-01-14T13:17:21.0190213Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0190283Z     
2025-01-14T13:17:21.0190435Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0190530Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0190604Z         )
2025-01-14T13:17:21.0190671Z     
2025-01-14T13:17:21.0190803Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0190913Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0191069Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0191136Z         else:
2025-01-14T13:17:21.0191225Z             continuum_state = None
2025-01-14T13:17:21.0191324Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0191435Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0191527Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0191859Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0191963Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0192069Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0192164Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0192235Z         ).to_numba(
2025-01-14T13:17:21.0192318Z             macro_atom_state,
2025-01-14T13:17:21.0192403Z             self.line_interaction_type,
2025-01-14T13:17:21.0192473Z         )
2025-01-14T13:17:21.0192571Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0192844Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0192919Z         ]
2025-01-14T13:17:21.0193461Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0193476Z 
2025-01-14T13:17:21.0193727Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0194026Z _________ ERROR at setup of test_hdf_transport_state[nu_bar_estimator] _________
2025-01-14T13:17:21.0194033Z 
2025-01-14T13:17:21.0194838Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0195190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0195195Z 
2025-01-14T13:17:21.0195289Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0195489Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0195590Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0195800Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0195982Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0196053Z         )
2025-01-14T13:17:21.0196137Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0196222Z >       sim.run_final()
2025-01-14T13:17:21.0196226Z 
2025-01-14T13:17:21.0196307Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0196417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0196512Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0196653Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0196747Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0196913Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0197019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0197023Z 
2025-01-14T13:17:21.0197296Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0197501Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0197723Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0198001Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0198159Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0198299Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0198303Z 
2025-01-14T13:17:21.0198389Z     def initialize_transport_state(
2025-01-14T13:17:21.0198461Z         self,
2025-01-14T13:17:21.0198537Z         simulation_state,
2025-01-14T13:17:21.0198615Z         opacity_state,
2025-01-14T13:17:21.0198690Z         macro_atom_state,
2025-01-14T13:17:21.0198765Z         plasma,
2025-01-14T13:17:21.0198837Z         no_of_packets,
2025-01-14T13:17:21.0198927Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0199004Z         iteration=0,
2025-01-14T13:17:21.0199069Z     ):
2025-01-14T13:17:21.0199196Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0199289Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0199368Z         else:
2025-01-14T13:17:21.0199445Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0199516Z     
2025-01-14T13:17:21.0199729Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0199898Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0200014Z         )
2025-01-14T13:17:21.0200130Z     
2025-01-14T13:17:21.0200344Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0200538Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0200769Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0200844Z         else:
2025-01-14T13:17:21.0200937Z             continuum_state = None
2025-01-14T13:17:21.0201044Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0201164Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0201259Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0201486Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0201708Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0201814Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0201905Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0201990Z         ).to_numba(
2025-01-14T13:17:21.0202070Z             macro_atom_state,
2025-01-14T13:17:21.0202166Z             self.line_interaction_type,
2025-01-14T13:17:21.0202234Z         )
2025-01-14T13:17:21.0202340Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0202613Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0202810Z         ]
2025-01-14T13:17:21.0203123Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0203128Z 
2025-01-14T13:17:21.0203274Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0203451Z ___________ ERROR at setup of test_hdf_transport_state[j_estimator] ____________
2025-01-14T13:17:21.0203455Z 
2025-01-14T13:17:21.0204091Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0204443Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0204447Z 
2025-01-14T13:17:21.0204545Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0204757Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0204861Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0204946Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0205123Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0205195Z         )
2025-01-14T13:17:21.0205288Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0205363Z >       sim.run_final()
2025-01-14T13:17:21.0205367Z 
2025-01-14T13:17:21.0205453Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0205558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0205660Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0205800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0205896Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0206051Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0223857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0223912Z 
2025-01-14T13:17:21.0224452Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0224807Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0225173Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0225623Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0225894Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0226160Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0226166Z 
2025-01-14T13:17:21.0226305Z     def initialize_transport_state(
2025-01-14T13:17:21.0226429Z         self,
2025-01-14T13:17:21.0226562Z         simulation_state,
2025-01-14T13:17:21.0226681Z         opacity_state,
2025-01-14T13:17:21.0226824Z         macro_atom_state,
2025-01-14T13:17:21.0226941Z         plasma,
2025-01-14T13:17:21.0227060Z         no_of_packets,
2025-01-14T13:17:21.0227186Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0227309Z         iteration=0,
2025-01-14T13:17:21.0227669Z     ):
2025-01-14T13:17:21.0227885Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0228044Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0228161Z         else:
2025-01-14T13:17:21.0228284Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0228395Z     
2025-01-14T13:17:21.0228621Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0228789Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0228902Z         )
2025-01-14T13:17:21.0229018Z     
2025-01-14T13:17:21.0229222Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0229486Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0229963Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0230125Z         else:
2025-01-14T13:17:21.0230276Z             continuum_state = None
2025-01-14T13:17:21.0230477Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0230714Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0230863Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0231031Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0231186Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0231347Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0231491Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0231806Z         ).to_numba(
2025-01-14T13:17:21.0231932Z             macro_atom_state,
2025-01-14T13:17:21.0232076Z             self.line_interaction_type,
2025-01-14T13:17:21.0232190Z         )
2025-01-14T13:17:21.0232361Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0232806Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0232913Z         ]
2025-01-14T13:17:21.0233404Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0233419Z 
2025-01-14T13:17:21.0233656Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0233940Z _______ ERROR at setup of test_hdf_transport_state[emitted_packet_mask] ________
2025-01-14T13:17:21.0233946Z 
2025-01-14T13:17:21.0234964Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0235541Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0235548Z 
2025-01-14T13:17:21.0235702Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0236034Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0236200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0236349Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0236633Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0236754Z         )
2025-01-14T13:17:21.0236901Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0237018Z >       sim.run_final()
2025-01-14T13:17:21.0237024Z 
2025-01-14T13:17:21.0237169Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0237357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0237516Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0237749Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0237912Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0238165Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0238335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0238514Z 
2025-01-14T13:17:21.0238974Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0239305Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0239677Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0240126Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0240393Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0240627Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0240633Z 
2025-01-14T13:17:21.0240924Z     def initialize_transport_state(
2025-01-14T13:17:21.0241055Z         self,
2025-01-14T13:17:21.0241179Z         simulation_state,
2025-01-14T13:17:21.0241308Z         opacity_state,
2025-01-14T13:17:21.0241427Z         macro_atom_state,
2025-01-14T13:17:21.0241735Z         plasma,
2025-01-14T13:17:21.0241859Z         no_of_packets,
2025-01-14T13:17:21.0241994Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0242108Z         iteration=0,
2025-01-14T13:17:21.0242220Z     ):
2025-01-14T13:17:21.0242424Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0242576Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0242688Z         else:
2025-01-14T13:17:21.0242828Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0242951Z     
2025-01-14T13:17:21.0243176Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0243337Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0243446Z         )
2025-01-14T13:17:21.0243554Z     
2025-01-14T13:17:21.0243768Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0243963Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0244213Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0244341Z         else:
2025-01-14T13:17:21.0244475Z             continuum_state = None
2025-01-14T13:17:21.0244651Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0244817Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0244967Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0245128Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0245289Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0245442Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0245585Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0245706Z         ).to_numba(
2025-01-14T13:17:21.0245836Z             macro_atom_state,
2025-01-14T13:17:21.0245985Z             self.line_interaction_type,
2025-01-14T13:17:21.0246098Z         )
2025-01-14T13:17:21.0246263Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0246712Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0246838Z         ]
2025-01-14T13:17:21.0247335Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0247342Z 
2025-01-14T13:17:21.0247585Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0247881Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_type] _______
2025-01-14T13:17:21.0247887Z 
2025-01-14T13:17:21.0248975Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0249632Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0249642Z 
2025-01-14T13:17:21.0250054Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0250460Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0250650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0250818Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0251137Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0251322Z         )
2025-01-14T13:17:21.0251481Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0251739Z >       sim.run_final()
2025-01-14T13:17:21.0251747Z 
2025-01-14T13:17:21.0251953Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0252476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0252710Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0257612Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0257918Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0258249Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0258470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0258479Z 
2025-01-14T13:17:21.0258987Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0259355Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0259773Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0260274Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0260583Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0260841Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0260851Z 
2025-01-14T13:17:21.0261018Z     def initialize_transport_state(
2025-01-14T13:17:21.0261144Z         self,
2025-01-14T13:17:21.0261325Z         simulation_state,
2025-01-14T13:17:21.0261456Z         opacity_state,
2025-01-14T13:17:21.0261757Z         macro_atom_state,
2025-01-14T13:17:21.0261888Z         plasma,
2025-01-14T13:17:21.0262021Z         no_of_packets,
2025-01-14T13:17:21.0262169Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0262295Z         iteration=0,
2025-01-14T13:17:21.0262420Z     ):
2025-01-14T13:17:21.0262646Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0262822Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0262942Z         else:
2025-01-14T13:17:21.0263082Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0263204Z     
2025-01-14T13:17:21.0263460Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0263629Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0263854Z         )
2025-01-14T13:17:21.0263976Z     
2025-01-14T13:17:21.0264216Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0264430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0264709Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0264829Z         else:
2025-01-14T13:17:21.0264978Z             continuum_state = None
2025-01-14T13:17:21.0265159Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0265348Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0265515Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0265700Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0265876Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0266047Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0266213Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0266341Z         ).to_numba(
2025-01-14T13:17:21.0266488Z             macro_atom_state,
2025-01-14T13:17:21.0266641Z             self.line_interaction_type,
2025-01-14T13:17:21.0267110Z         )
2025-01-14T13:17:21.0267290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0267850Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0267982Z         ]
2025-01-14T13:17:21.0268533Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0268543Z 
2025-01-14T13:17:21.0289598Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0289993Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_nu] ______
2025-01-14T13:17:21.0290004Z 
2025-01-14T13:17:21.0291510Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0292400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0292429Z 
2025-01-14T13:17:21.0292600Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0292986Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0293164Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0293328Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0293655Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0293795Z         )
2025-01-14T13:17:21.0293953Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0294096Z >       sim.run_final()
2025-01-14T13:17:21.0294116Z 
2025-01-14T13:17:21.0294263Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0294470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0294650Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0294927Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0295108Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0295387Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0295594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0295601Z 
2025-01-14T13:17:21.0296079Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0296451Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0296856Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0297376Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0297670Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0297928Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0297942Z 
2025-01-14T13:17:21.0298109Z     def initialize_transport_state(
2025-01-14T13:17:21.0298231Z         self,
2025-01-14T13:17:21.0298373Z         simulation_state,
2025-01-14T13:17:21.0298502Z         opacity_state,
2025-01-14T13:17:21.0298640Z         macro_atom_state,
2025-01-14T13:17:21.0298762Z         plasma,
2025-01-14T13:17:21.0298897Z         no_of_packets,
2025-01-14T13:17:21.0299044Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0299178Z         iteration=0,
2025-01-14T13:17:21.0299294Z     ):
2025-01-14T13:17:21.0299532Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0299703Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0299854Z         else:
2025-01-14T13:17:21.0299997Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0300119Z     
2025-01-14T13:17:21.0300373Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0300803Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0300928Z         )
2025-01-14T13:17:21.0301044Z     
2025-01-14T13:17:21.0301289Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0301499Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0301999Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0302135Z         else:
2025-01-14T13:17:21.0302290Z             continuum_state = None
2025-01-14T13:17:21.0302474Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0302674Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0302836Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0303221Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0303405Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0303580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0303742Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0303882Z         ).to_numba(
2025-01-14T13:17:21.0304028Z             macro_atom_state,
2025-01-14T13:17:21.0304181Z             self.line_interaction_type,
2025-01-14T13:17:21.0304308Z         )
2025-01-14T13:17:21.0304488Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0304998Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0305119Z         ]
2025-01-14T13:17:21.0305674Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0305684Z 
2025-01-14T13:17:21.0305955Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0306297Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_r] _______
2025-01-14T13:17:21.0306304Z 
2025-01-14T13:17:21.0307485Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0308144Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0308152Z 
2025-01-14T13:17:21.0308321Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0308696Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0308880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0309035Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0309379Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0309497Z         )
2025-01-14T13:17:21.0309656Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0309787Z >       sim.run_final()
2025-01-14T13:17:21.0309795Z 
2025-01-14T13:17:21.0309945Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0310145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0310329Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0310581Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0310754Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0311033Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0311230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0311238Z 
2025-01-14T13:17:21.0311885Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0312264Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0312671Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0313171Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0313678Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0313928Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0313936Z 
2025-01-14T13:17:21.0314143Z     def initialize_transport_state(
2025-01-14T13:17:21.0314268Z         self,
2025-01-14T13:17:21.0314413Z         simulation_state,
2025-01-14T13:17:21.0314551Z         opacity_state,
2025-01-14T13:17:21.0314687Z         macro_atom_state,
2025-01-14T13:17:21.0314819Z         plasma,
2025-01-14T13:17:21.0314947Z         no_of_packets,
2025-01-14T13:17:21.0315099Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0315226Z         iteration=0,
2025-01-14T13:17:21.0315531Z     ):
2025-01-14T13:17:21.0315765Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0315948Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0316069Z         else:
2025-01-14T13:17:21.0316212Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0316338Z     
2025-01-14T13:17:21.0316582Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0316751Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0316885Z         )
2025-01-14T13:17:21.0317007Z     
2025-01-14T13:17:21.0317244Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0317448Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0317731Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0317858Z         else:
2025-01-14T13:17:21.0318004Z             continuum_state = None
2025-01-14T13:17:21.0318188Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0318389Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0318561Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0318747Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0318938Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0319100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0319268Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0319391Z         ).to_numba(
2025-01-14T13:17:21.0319536Z             macro_atom_state,
2025-01-14T13:17:21.0319687Z             self.line_interaction_type,
2025-01-14T13:17:21.0319814Z         )
2025-01-14T13:17:21.0319997Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0320489Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0320614Z         ]
2025-01-14T13:17:21.0321171Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0321181Z 
2025-01-14T13:17:21.0321454Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0321953Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_out_id] ___
2025-01-14T13:17:21.0321970Z 
2025-01-14T13:17:21.0323147Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0323794Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0323802Z 
2025-01-14T13:17:21.0323963Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0324339Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0324516Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0324682Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0324997Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0325123Z         )
2025-01-14T13:17:21.0325510Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0325653Z >       sim.run_final()
2025-01-14T13:17:21.0325661Z 
2025-01-14T13:17:21.0325804Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0326006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0326190Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0326442Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0326616Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0326891Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0327090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0327262Z 
2025-01-14T13:17:21.0327756Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0328135Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0328539Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0329052Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0329356Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0329601Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0329608Z 
2025-01-14T13:17:21.0329768Z     def initialize_transport_state(
2025-01-14T13:17:21.0329888Z         self,
2025-01-14T13:17:21.0330031Z         simulation_state,
2025-01-14T13:17:21.0330162Z         opacity_state,
2025-01-14T13:17:21.0330307Z         macro_atom_state,
2025-01-14T13:17:21.0330429Z         plasma,
2025-01-14T13:17:21.0330577Z         no_of_packets,
2025-01-14T13:17:21.0330721Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0330855Z         iteration=0,
2025-01-14T13:17:21.0330969Z     ):
2025-01-14T13:17:21.0331202Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0331377Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0331503Z         else:
2025-01-14T13:17:21.0331802Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0331919Z     
2025-01-14T13:17:21.0332171Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0332337Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0332461Z         )
2025-01-14T13:17:21.0332577Z     
2025-01-14T13:17:21.0332814Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0333014Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0333298Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0333427Z         else:
2025-01-14T13:17:21.0333583Z             continuum_state = None
2025-01-14T13:17:21.0333761Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0333963Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0334129Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0334326Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0334505Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0334672Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0334841Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0334966Z         ).to_numba(
2025-01-14T13:17:21.0335110Z             macro_atom_state,
2025-01-14T13:17:21.0335265Z             self.line_interaction_type,
2025-01-14T13:17:21.0335389Z         )
2025-01-14T13:17:21.0335593Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0336089Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0336216Z         ]
2025-01-14T13:17:21.0336770Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0336969Z 
2025-01-14T13:17:21.0337260Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0337588Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_in_id] ____
2025-01-14T13:17:21.0337596Z 
2025-01-14T13:17:21.0338755Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0339399Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0339407Z 
2025-01-14T13:17:21.0339729Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0340112Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0340285Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0340447Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0340782Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0340915Z         )
2025-01-14T13:17:21.0341064Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0341202Z >       sim.run_final()
2025-01-14T13:17:21.0341210Z 
2025-01-14T13:17:21.0341364Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0341790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0341986Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0342239Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0342413Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0342699Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0342896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0342904Z 
2025-01-14T13:17:21.0343385Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0343760Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0344165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0344655Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0344947Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0345191Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0345198Z 
2025-01-14T13:17:21.0345362Z     def initialize_transport_state(
2025-01-14T13:17:21.0345482Z         self,
2025-01-14T13:17:21.0345629Z         simulation_state,
2025-01-14T13:17:21.0345760Z         opacity_state,
2025-01-14T13:17:21.0345897Z         macro_atom_state,
2025-01-14T13:17:21.0346023Z         plasma,
2025-01-14T13:17:21.0346168Z         no_of_packets,
2025-01-14T13:17:21.0346320Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0346455Z         iteration=0,
2025-01-14T13:17:21.0346580Z     ):
2025-01-14T13:17:21.0346799Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0346984Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0347104Z         else:
2025-01-14T13:17:21.0347245Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0347362Z     
2025-01-14T13:17:21.0347609Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0347776Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0347898Z         )
2025-01-14T13:17:21.0348013Z     
2025-01-14T13:17:21.0348245Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0348447Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0348724Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0348843Z         else:
2025-01-14T13:17:21.0349219Z             continuum_state = None
2025-01-14T13:17:21.0349400Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0349604Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0349768Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0349954Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0350133Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0350297Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0350468Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0350591Z         ).to_numba(
2025-01-14T13:17:21.0350732Z             macro_atom_state,
2025-01-14T13:17:21.0350884Z             self.line_interaction_type,
2025-01-14T13:17:21.0351183Z         )
2025-01-14T13:17:21.0351373Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0352055Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0352187Z         ]
2025-01-14T13:17:21.0352749Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0352760Z 
2025-01-14T13:17:21.0353032Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0353367Z __ ERROR at setup of test_hdf_transport_state[last_line_interaction_shell_id] __
2025-01-14T13:17:21.0353375Z 
2025-01-14T13:17:21.0354532Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0355176Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0355185Z 
2025-01-14T13:17:21.0355350Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0355728Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0355910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0356072Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0356388Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0356513Z         )
2025-01-14T13:17:21.0356667Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0356806Z >       sim.run_final()
2025-01-14T13:17:21.0356814Z 
2025-01-14T13:17:21.0356967Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0357163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0357339Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0357603Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0357773Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0358062Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0358270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0358277Z 
2025-01-14T13:17:21.0358754Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0359125Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0359525Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0360027Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0360312Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0360569Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0360576Z 
2025-01-14T13:17:21.0360732Z     def initialize_transport_state(
2025-01-14T13:17:21.0360860Z         self,
2025-01-14T13:17:21.0361004Z         simulation_state,
2025-01-14T13:17:21.0361133Z         opacity_state,
2025-01-14T13:17:21.0361477Z         macro_atom_state,
2025-01-14T13:17:21.0361758Z         plasma,
2025-01-14T13:17:21.0361902Z         no_of_packets,
2025-01-14T13:17:21.0362043Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0362179Z         iteration=0,
2025-01-14T13:17:21.0362294Z     ):
2025-01-14T13:17:21.0362525Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0362689Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0362814Z         else:
2025-01-14T13:17:21.0362950Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0363072Z     
2025-01-14T13:17:21.0363312Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0363698Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0363847Z         )
2025-01-14T13:17:21.0363987Z     
2025-01-14T13:17:21.0364235Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0364435Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0364727Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0364847Z         else:
2025-01-14T13:17:21.0365001Z             continuum_state = None
2025-01-14T13:17:21.0365179Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0365374Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0365531Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0365721Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0365898Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0366069Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0366228Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0366367Z         ).to_numba(
2025-01-14T13:17:21.0366504Z             macro_atom_state,
2025-01-14T13:17:21.0366664Z             self.line_interaction_type,
2025-01-14T13:17:21.0366790Z         )
2025-01-14T13:17:21.0366974Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0367484Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0367601Z         ]
2025-01-14T13:17:21.0368152Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0368161Z 
2025-01-14T13:17:21.0368429Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0368742Z _________ ERROR at setup of test_hdf_transport_state[virt_packet_nus] __________
2025-01-14T13:17:21.0368751Z 
2025-01-14T13:17:21.0369902Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0370547Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0370562Z 
2025-01-14T13:17:21.0370726Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0371092Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0371269Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0371421Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0371894Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0372018Z         )
2025-01-14T13:17:21.0372176Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0372306Z >       sim.run_final()
2025-01-14T13:17:21.0372313Z 
2025-01-14T13:17:21.0372467Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0372676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0372848Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0373106Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0373469Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0373755Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0373944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0373951Z 
2025-01-14T13:17:21.0374436Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0374801Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0375204Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0375895Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0376203Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0376459Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0376466Z 
2025-01-14T13:17:21.0376631Z     def initialize_transport_state(
2025-01-14T13:17:21.0376762Z         self,
2025-01-14T13:17:21.0376897Z         simulation_state,
2025-01-14T13:17:21.0377033Z         opacity_state,
2025-01-14T13:17:21.0377164Z         macro_atom_state,
2025-01-14T13:17:21.0377294Z         plasma,
2025-01-14T13:17:21.0377421Z         no_of_packets,
2025-01-14T13:17:21.0377569Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0377698Z         iteration=0,
2025-01-14T13:17:21.0377822Z     ):
2025-01-14T13:17:21.0378041Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0378213Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0378337Z         else:
2025-01-14T13:17:21.0378473Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0378604Z     
2025-01-14T13:17:21.0378847Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0379021Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0379136Z         )
2025-01-14T13:17:21.0379264Z     
2025-01-14T13:17:21.0379489Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0379696Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0379966Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0380090Z         else:
2025-01-14T13:17:21.0380232Z             continuum_state = None
2025-01-14T13:17:21.0380417Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0380602Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0380768Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0380958Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0381134Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0381285Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0381435Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0381703Z         ).to_numba(
2025-01-14T13:17:21.0381842Z             macro_atom_state,
2025-01-14T13:17:21.0382000Z             self.line_interaction_type,
2025-01-14T13:17:21.0382121Z         )
2025-01-14T13:17:21.0382307Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0382803Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0382931Z         ]
2025-01-14T13:17:21.0383474Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0383482Z 
2025-01-14T13:17:21.0383744Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0384061Z _______ ERROR at setup of test_hdf_transport_state[virt_packet_energies] _______
2025-01-14T13:17:21.0384068Z 
2025-01-14T13:17:21.0385230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0386009Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0386015Z 
2025-01-14T13:17:21.0386150Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0386460Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0386601Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0386735Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0387004Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0387105Z         )
2025-01-14T13:17:21.0387401Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0387516Z >       sim.run_final()
2025-01-14T13:17:21.0387522Z 
2025-01-14T13:17:21.0387645Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0387803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0387961Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0388169Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0388313Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0388543Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0388708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0388714Z 
2025-01-14T13:17:21.0389115Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0389415Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0389753Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0390167Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0390411Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0390626Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0390632Z 
2025-01-14T13:17:21.0390768Z     def initialize_transport_state(
2025-01-14T13:17:21.0390872Z         self,
2025-01-14T13:17:21.0390994Z         simulation_state,
2025-01-14T13:17:21.0391109Z         opacity_state,
2025-01-14T13:17:21.0391229Z         macro_atom_state,
2025-01-14T13:17:21.0391339Z         plasma,
2025-01-14T13:17:21.0391448Z         no_of_packets,
2025-01-14T13:17:21.0391796Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0392213Z         iteration=0,
2025-01-14T13:17:21.0392322Z     ):
2025-01-14T13:17:21.0392476Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0392597Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0392668Z         else:
2025-01-14T13:17:21.0392757Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0392822Z     
2025-01-14T13:17:21.0392976Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0393080Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0393155Z         )
2025-01-14T13:17:21.0393222Z     
2025-01-14T13:17:21.0393360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0393479Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0393644Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0393718Z         else:
2025-01-14T13:17:21.0393801Z             continuum_state = None
2025-01-14T13:17:21.0393908Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0394016Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0394117Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0394228Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0394336Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0394430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0394743Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0394815Z         ).to_numba(
2025-01-14T13:17:21.0394898Z             macro_atom_state,
2025-01-14T13:17:21.0394985Z             self.line_interaction_type,
2025-01-14T13:17:21.0395058Z         )
2025-01-14T13:17:21.0395159Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0395444Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0395515Z         ]
2025-01-14T13:17:21.0395822Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0395828Z 
2025-01-14T13:17:21.0396109Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0396294Z ______ ERROR at setup of test_hdf_transport_state[virt_packet_initial_rs] ______
2025-01-14T13:17:21.0396298Z 
2025-01-14T13:17:21.0396964Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0397329Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0397334Z 
2025-01-14T13:17:21.0397430Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0397641Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0397746Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0397838Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0398137Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0398252Z         )
2025-01-14T13:17:21.0398607Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0399002Z >       sim.run_final()
2025-01-14T13:17:21.0399216Z 
2025-01-14T13:17:21.0399353Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0399762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0400217Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0400725Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0401216Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0401968Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0402624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0402989Z 
2025-01-14T13:17:21.0403498Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0404823Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0405793Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0407056Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0407968Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0408375Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0408602Z 
2025-01-14T13:17:21.0408708Z     def initialize_transport_state(
2025-01-14T13:17:21.0408944Z         self,
2025-01-14T13:17:21.0409130Z         simulation_state,
2025-01-14T13:17:21.0409352Z         opacity_state,
2025-01-14T13:17:21.0409554Z         macro_atom_state,
2025-01-14T13:17:21.0409753Z         plasma,
2025-01-14T13:17:21.0409934Z         no_of_packets,
2025-01-14T13:17:21.0410142Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0410371Z         iteration=0,
2025-01-14T13:17:21.0410559Z     ):
2025-01-14T13:17:21.0410784Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0411092Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0411515Z         else:
2025-01-14T13:17:21.0411931Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0412149Z     
2025-01-14T13:17:21.0412378Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0412701Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0412952Z         )
2025-01-14T13:17:21.0413115Z     
2025-01-14T13:17:21.0413339Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0413669Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0414031Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0414342Z         else:
2025-01-14T13:17:21.0414683Z             continuum_state = None
2025-01-14T13:17:21.0414955Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0415250Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0415531Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0415817Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0416102Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0416385Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0416650Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0416891Z         ).to_numba(
2025-01-14T13:17:21.0417097Z             macro_atom_state,
2025-01-14T13:17:21.0417323Z             self.line_interaction_type,
2025-01-14T13:17:21.0417557Z         )
2025-01-14T13:17:21.0417753Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0418213Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0418709Z         ]
2025-01-14T13:17:21.0419398Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0419958Z 
2025-01-14T13:17:21.0420118Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0420535Z _____ ERROR at setup of test_hdf_transport_state[virt_packet_initial_mus] ______
2025-01-14T13:17:21.0420797Z 
2025-01-14T13:17:21.0421429Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0422706Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0423141Z 
2025-01-14T13:17:21.0423231Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0423604Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0423990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0424267Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0424609Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0424944Z         )
2025-01-14T13:17:21.0425125Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0425360Z >       sim.run_final()
2025-01-14T13:17:21.0425485Z 
2025-01-14T13:17:21.0425579Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0425827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0426120Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0426439Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0426755Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0427091Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0427440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0427636Z 
2025-01-14T13:17:21.0427898Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0428454Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0429124Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0429704Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0430227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0430608Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0430829Z 
2025-01-14T13:17:21.0430925Z     def initialize_transport_state(
2025-01-14T13:17:21.0431158Z         self,
2025-01-14T13:17:21.0431341Z         simulation_state,
2025-01-14T13:17:21.0431714Z         opacity_state,
2025-01-14T13:17:21.0432077Z         macro_atom_state,
2025-01-14T13:17:21.0432291Z         plasma,
2025-01-14T13:17:21.0432475Z         no_of_packets,
2025-01-14T13:17:21.0432679Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0432899Z         iteration=0,
2025-01-14T13:17:21.0433089Z     ):
2025-01-14T13:17:21.0433317Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0433623Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0433870Z         else:
2025-01-14T13:17:21.0434047Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0434266Z     
2025-01-14T13:17:21.0434496Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0434823Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0435069Z         )
2025-01-14T13:17:21.0435230Z     
2025-01-14T13:17:21.0435459Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0435787Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0436140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0436448Z         else:
2025-01-14T13:17:21.0436633Z             continuum_state = None
2025-01-14T13:17:21.0436888Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0437186Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0437467Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0437744Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0438029Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0438304Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0438566Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0438811Z         ).to_numba(
2025-01-14T13:17:21.0439001Z             macro_atom_state,
2025-01-14T13:17:21.0439232Z             self.line_interaction_type,
2025-01-14T13:17:21.0439464Z         )
2025-01-14T13:17:21.0439665Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0440118Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0440537Z         ]
2025-01-14T13:17:21.0440928Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0441317Z 
2025-01-14T13:17:21.0441470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0442000Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_nu] _
2025-01-14T13:17:21.0442292Z 
2025-01-14T13:17:21.0443056Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0444507Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0444942Z 
2025-01-14T13:17:21.0445035Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0445406Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0445938Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0446205Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0446541Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0446867Z         )
2025-01-14T13:17:21.0447046Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0447283Z >       sim.run_final()
2025-01-14T13:17:21.0447405Z 
2025-01-14T13:17:21.0447495Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0447739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0448032Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0448352Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0448813Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0449151Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0449492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0449699Z 
2025-01-14T13:17:21.0449960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0450506Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0451019Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0451737Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0452253Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0452636Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0452860Z 
2025-01-14T13:17:21.0452960Z     def initialize_transport_state(
2025-01-14T13:17:21.0453195Z         self,
2025-01-14T13:17:21.0453374Z         simulation_state,
2025-01-14T13:17:21.0453587Z         opacity_state,
2025-01-14T13:17:21.0453790Z         macro_atom_state,
2025-01-14T13:17:21.0453996Z         plasma,
2025-01-14T13:17:21.0454177Z         no_of_packets,
2025-01-14T13:17:21.0454378Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0454598Z         iteration=0,
2025-01-14T13:17:21.0454781Z     ):
2025-01-14T13:17:21.0455002Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0455313Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0455558Z         else:
2025-01-14T13:17:21.0455736Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0455945Z     
2025-01-14T13:17:21.0456168Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0456481Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0456728Z         )
2025-01-14T13:17:21.0456886Z     
2025-01-14T13:17:21.0457110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0457437Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0457782Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0458090Z         else:
2025-01-14T13:17:21.0458271Z             continuum_state = None
2025-01-14T13:17:21.0458524Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0458811Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0459089Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0459367Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0459652Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0459925Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0460191Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0460430Z         ).to_numba(
2025-01-14T13:17:21.0460624Z             macro_atom_state,
2025-01-14T13:17:21.0460854Z             self.line_interaction_type,
2025-01-14T13:17:21.0461089Z         )
2025-01-14T13:17:21.0461285Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0461936Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0462500Z         ]
2025-01-14T13:17:21.0462911Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0463303Z 
2025-01-14T13:17:21.0463457Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0463881Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_r] _
2025-01-14T13:17:21.0464165Z 
2025-01-14T13:17:21.0464898Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0466331Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0466898Z 
2025-01-14T13:17:21.0466997Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0467365Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0467754Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0468021Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0468359Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0468685Z         )
2025-01-14T13:17:21.0468861Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0469094Z >       sim.run_final()
2025-01-14T13:17:21.0469215Z 
2025-01-14T13:17:21.0469305Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0469556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0469855Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0470172Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0470487Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0470820Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0471167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0471365Z 
2025-01-14T13:17:21.0471852Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0472413Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0472920Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0473796Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0474513Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0474903Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0475120Z 
2025-01-14T13:17:21.0475214Z     def initialize_transport_state(
2025-01-14T13:17:21.0475446Z         self,
2025-01-14T13:17:21.0475630Z         simulation_state,
2025-01-14T13:17:21.0475839Z         opacity_state,
2025-01-14T13:17:21.0476037Z         macro_atom_state,
2025-01-14T13:17:21.0476236Z         plasma,
2025-01-14T13:17:21.0476414Z         no_of_packets,
2025-01-14T13:17:21.0476614Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0476834Z         iteration=0,
2025-01-14T13:17:21.0477019Z     ):
2025-01-14T13:17:21.0477244Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0477552Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0477794Z         else:
2025-01-14T13:17:21.0477981Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0478191Z     
2025-01-14T13:17:21.0478421Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0478733Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0478976Z         )
2025-01-14T13:17:21.0479135Z     
2025-01-14T13:17:21.0479355Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0479865Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0480215Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0480518Z         else:
2025-01-14T13:17:21.0480700Z             continuum_state = None
2025-01-14T13:17:21.0480952Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0481241Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0481528Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0481993Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0482280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0482700Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0482976Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0483223Z         ).to_numba(
2025-01-14T13:17:21.0483418Z             macro_atom_state,
2025-01-14T13:17:21.0483645Z             self.line_interaction_type,
2025-01-14T13:17:21.0483884Z         )
2025-01-14T13:17:21.0484081Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0484539Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0484966Z         ]
2025-01-14T13:17:21.0485362Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0485745Z 
2025-01-14T13:17:21.0485903Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0486320Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_type] _
2025-01-14T13:17:21.0486593Z 
2025-01-14T13:17:21.0487227Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0488297Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0488726Z 
2025-01-14T13:17:21.0488816Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0489191Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0489583Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0489847Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0490182Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0490510Z         )
2025-01-14T13:17:21.0490689Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0490924Z >       sim.run_final()
2025-01-14T13:17:21.0491052Z 
2025-01-14T13:17:21.0491142Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0491388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0491832Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0492161Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0492477Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0492806Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0493147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0493350Z 
2025-01-14T13:17:21.0493614Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0494158Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0494660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0495245Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0495769Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0496157Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0496583Z 
2025-01-14T13:17:21.0496681Z     def initialize_transport_state(
2025-01-14T13:17:21.0496910Z         self,
2025-01-14T13:17:21.0497094Z         simulation_state,
2025-01-14T13:17:21.0497299Z         opacity_state,
2025-01-14T13:17:21.0497497Z         macro_atom_state,
2025-01-14T13:17:21.0497696Z         plasma,
2025-01-14T13:17:21.0497877Z         no_of_packets,
2025-01-14T13:17:21.0498076Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0498309Z         iteration=0,
2025-01-14T13:17:21.0498496Z     ):
2025-01-14T13:17:21.0498713Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0499011Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0499372Z         else:
2025-01-14T13:17:21.0499562Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0499771Z     
2025-01-14T13:17:21.0499995Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0500309Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0500560Z         )
2025-01-14T13:17:21.0500718Z     
2025-01-14T13:17:21.0500936Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0501271Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0501828Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0502141Z         else:
2025-01-14T13:17:21.0502323Z             continuum_state = None
2025-01-14T13:17:21.0502576Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0502864Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0503143Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0503421Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0503724Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0503998Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0504266Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0504515Z         ).to_numba(
2025-01-14T13:17:21.0504704Z             macro_atom_state,
2025-01-14T13:17:21.0504937Z             self.line_interaction_type,
2025-01-14T13:17:21.0505171Z         )
2025-01-14T13:17:21.0505372Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0505835Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0506258Z         ]
2025-01-14T13:17:21.0506657Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0507044Z 
2025-01-14T13:17:21.0507199Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0507630Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_in_id] _
2025-01-14T13:17:21.0507926Z 
2025-01-14T13:17:21.0508553Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0509618Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0510049Z 
2025-01-14T13:17:21.0510143Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0510511Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0510902Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0545625Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0546309Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0546846Z         )
2025-01-14T13:17:21.0547037Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0547291Z >       sim.run_final()
2025-01-14T13:17:21.0547417Z 
2025-01-14T13:17:21.0547515Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0548151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0548457Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0548792Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0549117Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0549445Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0549790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0549988Z 
2025-01-14T13:17:21.0550254Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0550935Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0551450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0552248Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0552787Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0553173Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0553390Z 
2025-01-14T13:17:21.0553486Z     def initialize_transport_state(
2025-01-14T13:17:21.0553716Z         self,
2025-01-14T13:17:21.0553897Z         simulation_state,
2025-01-14T13:17:21.0554102Z         opacity_state,
2025-01-14T13:17:21.0554298Z         macro_atom_state,
2025-01-14T13:17:21.0554493Z         plasma,
2025-01-14T13:17:21.0554681Z         no_of_packets,
2025-01-14T13:17:21.0554876Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0555093Z         iteration=0,
2025-01-14T13:17:21.0555282Z     ):
2025-01-14T13:17:21.0555505Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0555815Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0556058Z         else:
2025-01-14T13:17:21.0556236Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0556456Z     
2025-01-14T13:17:21.0556683Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0557002Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0557250Z         )
2025-01-14T13:17:21.0557410Z     
2025-01-14T13:17:21.0557635Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0557959Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0558306Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0558612Z         else:
2025-01-14T13:17:21.0558802Z             continuum_state = None
2025-01-14T13:17:21.0559068Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0559360Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0559642Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0559922Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0560212Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0560767Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0561027Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0561268Z         ).to_numba(
2025-01-14T13:17:21.0561455Z             macro_atom_state,
2025-01-14T13:17:21.0562061Z             self.line_interaction_type,
2025-01-14T13:17:21.0562302Z         )
2025-01-14T13:17:21.0562505Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0563076Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0563508Z         ]
2025-01-14T13:17:21.0563962Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0564355Z 
2025-01-14T13:17:21.0564509Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0564954Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_out_id] _
2025-01-14T13:17:21.0565430Z 
2025-01-14T13:17:21.0566082Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0567174Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0567609Z 
2025-01-14T13:17:21.0567707Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0568082Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0568599Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0568874Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0569207Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0569527Z         )
2025-01-14T13:17:21.0569710Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0569948Z >       sim.run_final()
2025-01-14T13:17:21.0570075Z 
2025-01-14T13:17:21.0570165Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0570409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0570724Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0571047Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0571369Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0571907Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0572256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0572459Z 
2025-01-14T13:17:21.0572722Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0573268Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0573778Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0574355Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0574879Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0575270Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0575488Z 
2025-01-14T13:17:21.0575584Z     def initialize_transport_state(
2025-01-14T13:17:21.0575811Z         self,
2025-01-14T13:17:21.0575993Z         simulation_state,
2025-01-14T13:17:21.0576197Z         opacity_state,
2025-01-14T13:17:21.0576400Z         macro_atom_state,
2025-01-14T13:17:21.0576603Z         plasma,
2025-01-14T13:17:21.0576794Z         no_of_packets,
2025-01-14T13:17:21.0576995Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0577212Z         iteration=0,
2025-01-14T13:17:21.0577395Z     ):
2025-01-14T13:17:21.0577617Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0577926Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0578167Z         else:
2025-01-14T13:17:21.0578344Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0578551Z     
2025-01-14T13:17:21.0578779Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0579093Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0579334Z         )
2025-01-14T13:17:21.0579493Z     
2025-01-14T13:17:21.0579712Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0580034Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0580384Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0580695Z         else:
2025-01-14T13:17:21.0580878Z             continuum_state = None
2025-01-14T13:17:21.0581137Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0581436Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0582061Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0582350Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0582635Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0582908Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0583167Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0583405Z         ).to_numba(
2025-01-14T13:17:21.0583594Z             macro_atom_state,
2025-01-14T13:17:21.0583826Z             self.line_interaction_type,
2025-01-14T13:17:21.0584057Z         )
2025-01-14T13:17:21.0584255Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0584847Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0585278Z         ]
2025-01-14T13:17:21.0585673Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0586069Z 
2025-01-14T13:17:21.0586218Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0586659Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] _
2025-01-14T13:17:21.0586961Z 
2025-01-14T13:17:21.0587603Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0588661Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0589098Z 
2025-01-14T13:17:21.0589204Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.0589572Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0589954Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0590230Z         sim = Simulation.from_config(
2025-01-14T13:17:21.0590572Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:17:21.0590898Z         )
2025-01-14T13:17:21.0591087Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.0591325Z >       sim.run_final()
2025-01-14T13:17:21.0591447Z 
2025-01-14T13:17:21.0591535Z tardis/conftest.py:244: 
2025-01-14T13:17:21.0591992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0592288Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.0592604Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0592917Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0593248Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0593589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0593783Z 
2025-01-14T13:17:21.0594044Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d4f3500>
2025-01-14T13:17:21.0594599Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d6a1af0>
2025-01-14T13:17:21.0595104Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4620c0>
2025-01-14T13:17:21.0595686Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d4601a0>
2025-01-14T13:17:21.0596211Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d594dd0>
2025-01-14T13:17:21.0596592Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.0596808Z 
2025-01-14T13:17:21.0596901Z     def initialize_transport_state(
2025-01-14T13:17:21.0597128Z         self,
2025-01-14T13:17:21.0597318Z         simulation_state,
2025-01-14T13:17:21.0597526Z         opacity_state,
2025-01-14T13:17:21.0597721Z         macro_atom_state,
2025-01-14T13:17:21.0597926Z         plasma,
2025-01-14T13:17:21.0598114Z         no_of_packets,
2025-01-14T13:17:21.0598464Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0598689Z         iteration=0,
2025-01-14T13:17:21.0598875Z     ):
2025-01-14T13:17:21.0599089Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0599390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0599632Z         else:
2025-01-14T13:17:21.0599811Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0600020Z     
2025-01-14T13:17:21.0600244Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0600563Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0600810Z         )
2025-01-14T13:17:21.0600971Z     
2025-01-14T13:17:21.0601299Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0601763Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0602112Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0602417Z         else:
2025-01-14T13:17:21.0602603Z             continuum_state = None
2025-01-14T13:17:21.0602855Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0603138Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0603424Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0603697Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0603985Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0604260Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0604526Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0604765Z         ).to_numba(
2025-01-14T13:17:21.0604956Z             macro_atom_state,
2025-01-14T13:17:21.0605198Z             self.line_interaction_type,
2025-01-14T13:17:21.0605437Z         )
2025-01-14T13:17:21.0605636Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0606090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0606523Z         ]
2025-01-14T13:17:21.0606830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0606841Z 
2025-01-14T13:17:21.0606990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0607152Z ____________________ ERROR at setup of test_thomson_scatter ____________________
2025-01-14T13:17:21.0607156Z 
2025-01-14T13:17:21.0607791Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0608154Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0608158Z 
2025-01-14T13:17:21.0608248Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0608414Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0608518Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0608689Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0608770Z >       sim.iterate(10)
2025-01-14T13:17:21.0608774Z 
2025-01-14T13:17:21.0608895Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0609009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0609106Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0609268Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0609375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0609379Z 
2025-01-14T13:17:21.0609648Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0609855Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0610247Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0610531Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0610697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0610835Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0610839Z 
2025-01-14T13:17:21.0610926Z     def initialize_transport_state(
2025-01-14T13:17:21.0610999Z         self,
2025-01-14T13:17:21.0611077Z         simulation_state,
2025-01-14T13:17:21.0611158Z         opacity_state,
2025-01-14T13:17:21.0611334Z         macro_atom_state,
2025-01-14T13:17:21.0611413Z         plasma,
2025-01-14T13:17:21.0611486Z         no_of_packets,
2025-01-14T13:17:21.0611676Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0611758Z         iteration=0,
2025-01-14T13:17:21.0611825Z     ):
2025-01-14T13:17:21.0611962Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0612058Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0612131Z         else:
2025-01-14T13:17:21.0612216Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0612287Z     
2025-01-14T13:17:21.0612424Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0612525Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0612592Z         )
2025-01-14T13:17:21.0612662Z     
2025-01-14T13:17:21.0612791Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0612910Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0613071Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0613145Z         else:
2025-01-14T13:17:21.0613235Z             continuum_state = None
2025-01-14T13:17:21.0613339Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0613460Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0613553Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0613664Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0613762Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0613861Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0613951Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0614028Z         ).to_numba(
2025-01-14T13:17:21.0614107Z             macro_atom_state,
2025-01-14T13:17:21.0614202Z             self.line_interaction_type,
2025-01-14T13:17:21.0614276Z         )
2025-01-14T13:17:21.0614381Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0614656Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0614727Z         ]
2025-01-14T13:17:21.0615031Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0615039Z 
2025-01-14T13:17:21.0615193Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0615355Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0615779Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0616224Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0616405Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0616617Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0616783Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0616861Z 	
2025-01-14T13:17:21.0617018Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0617169Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0617812Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0618032Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0618143Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0618229Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.0618385Z ____________________ ERROR at setup of test_line_scatter[0] ____________________
2025-01-14T13:17:21.0618389Z 
2025-01-14T13:17:21.0619118Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0619485Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0619494Z 
2025-01-14T13:17:21.0619592Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0619750Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0619856Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0620028Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0620110Z >       sim.iterate(10)
2025-01-14T13:17:21.0620114Z 
2025-01-14T13:17:21.0620235Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0620346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0620442Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0620607Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0620716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0620720Z 
2025-01-14T13:17:21.0620987Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0621198Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0621415Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0621883Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0622051Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0622191Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0622195Z 
2025-01-14T13:17:21.0622288Z     def initialize_transport_state(
2025-01-14T13:17:21.0622358Z         self,
2025-01-14T13:17:21.0622446Z         simulation_state,
2025-01-14T13:17:21.0622522Z         opacity_state,
2025-01-14T13:17:21.0622606Z         macro_atom_state,
2025-01-14T13:17:21.0622677Z         plasma,
2025-01-14T13:17:21.0622756Z         no_of_packets,
2025-01-14T13:17:21.0622843Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0622919Z         iteration=0,
2025-01-14T13:17:21.0622985Z     ):
2025-01-14T13:17:21.0623116Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0623210Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0623284Z         else:
2025-01-14T13:17:21.0623360Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0623439Z     
2025-01-14T13:17:21.0623579Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0623679Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0623746Z         )
2025-01-14T13:17:21.0623819Z     
2025-01-14T13:17:21.0623957Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0624071Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0624232Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0624300Z         else:
2025-01-14T13:17:21.0624531Z             continuum_state = None
2025-01-14T13:17:21.0624640Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0624755Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0624847Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0624956Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0625053Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0625152Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0625244Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0625320Z         ).to_numba(
2025-01-14T13:17:21.0625397Z             macro_atom_state,
2025-01-14T13:17:21.0625594Z             self.line_interaction_type,
2025-01-14T13:17:21.0625678Z         )
2025-01-14T13:17:21.0625783Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0626061Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0626134Z         ]
2025-01-14T13:17:21.0626440Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0626444Z 
2025-01-14T13:17:21.0626591Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0626745Z ____________________ ERROR at setup of test_line_scatter[1] ____________________
2025-01-14T13:17:21.0626749Z 
2025-01-14T13:17:21.0627379Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0627730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0627735Z 
2025-01-14T13:17:21.0627830Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0627995Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0628098Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0628270Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0628350Z >       sim.iterate(10)
2025-01-14T13:17:21.0628354Z 
2025-01-14T13:17:21.0628473Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0628584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0628685Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0628837Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0628949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0628953Z 
2025-01-14T13:17:21.0629218Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0629421Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0629646Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0629930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0630090Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0630227Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0630231Z 
2025-01-14T13:17:21.0630324Z     def initialize_transport_state(
2025-01-14T13:17:21.0630395Z         self,
2025-01-14T13:17:21.0630477Z         simulation_state,
2025-01-14T13:17:21.0630553Z         opacity_state,
2025-01-14T13:17:21.0630637Z         macro_atom_state,
2025-01-14T13:17:21.0630708Z         plasma,
2025-01-14T13:17:21.0630785Z         no_of_packets,
2025-01-14T13:17:21.0630866Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0630945Z         iteration=0,
2025-01-14T13:17:21.0631116Z     ):
2025-01-14T13:17:21.0631250Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0631346Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0631419Z         else:
2025-01-14T13:17:21.0631497Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0631696Z     
2025-01-14T13:17:21.0631866Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0631968Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0632040Z         )
2025-01-14T13:17:21.0632106Z     
2025-01-14T13:17:21.0632241Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0632357Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0632649Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0632722Z         else:
2025-01-14T13:17:21.0632810Z             continuum_state = None
2025-01-14T13:17:21.0632909Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0633028Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0633120Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0633231Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0633328Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0633428Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0633517Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0633593Z         ).to_numba(
2025-01-14T13:17:21.0633676Z             macro_atom_state,
2025-01-14T13:17:21.0633762Z             self.line_interaction_type,
2025-01-14T13:17:21.0633835Z         )
2025-01-14T13:17:21.0633935Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0634209Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0634277Z         ]
2025-01-14T13:17:21.0634590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0634599Z 
2025-01-14T13:17:21.0634746Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0634900Z ____________________ ERROR at setup of test_line_scatter[2] ____________________
2025-01-14T13:17:21.0634904Z 
2025-01-14T13:17:21.0635529Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0635875Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0635883Z 
2025-01-14T13:17:21.0635984Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0636142Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0636242Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0636420Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0636501Z >       sim.iterate(10)
2025-01-14T13:17:21.0636505Z 
2025-01-14T13:17:21.0636623Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0636733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0636834Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0636984Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0637092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0637096Z 
2025-01-14T13:17:21.0637357Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0637560Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0637777Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0638177Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0638336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0638477Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0638481Z 
2025-01-14T13:17:21.0638575Z     def initialize_transport_state(
2025-01-14T13:17:21.0638644Z         self,
2025-01-14T13:17:21.0638727Z         simulation_state,
2025-01-14T13:17:21.0638802Z         opacity_state,
2025-01-14T13:17:21.0638883Z         macro_atom_state,
2025-01-14T13:17:21.0638954Z         plasma,
2025-01-14T13:17:21.0639031Z         no_of_packets,
2025-01-14T13:17:21.0639188Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0639269Z         iteration=0,
2025-01-14T13:17:21.0639336Z     ):
2025-01-14T13:17:21.0639475Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0639572Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0639653Z         else:
2025-01-14T13:17:21.0639731Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0639801Z     
2025-01-14T13:17:21.0639939Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0640031Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0640102Z         )
2025-01-14T13:17:21.0640169Z     
2025-01-14T13:17:21.0640299Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0640409Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0640567Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0640635Z         else:
2025-01-14T13:17:21.0640727Z             continuum_state = None
2025-01-14T13:17:21.0640825Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0640943Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0641036Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0641150Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0641247Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0641346Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0641440Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0641512Z         ).to_numba(
2025-01-14T13:17:21.0641695Z             macro_atom_state,
2025-01-14T13:17:21.0641783Z             self.line_interaction_type,
2025-01-14T13:17:21.0641854Z         )
2025-01-14T13:17:21.0641954Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0642223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0642296Z         ]
2025-01-14T13:17:21.0642598Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0642602Z 
2025-01-14T13:17:21.0642747Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0642927Z _________ ERROR at setup of test_line_emission[test_packet0-expected0] _________
2025-01-14T13:17:21.0642932Z 
2025-01-14T13:17:21.0643559Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0643902Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0643906Z 
2025-01-14T13:17:21.0644005Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0644165Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0644266Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0644444Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0644649Z >       sim.iterate(10)
2025-01-14T13:17:21.0644653Z 
2025-01-14T13:17:21.0644778Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0644883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0644981Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0645133Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0645239Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0645243Z 
2025-01-14T13:17:21.0645503Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0645815Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0646040Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0646315Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0646484Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0646613Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0646618Z 
2025-01-14T13:17:21.0646709Z     def initialize_transport_state(
2025-01-14T13:17:21.0646777Z         self,
2025-01-14T13:17:21.0646866Z         simulation_state,
2025-01-14T13:17:21.0646941Z         opacity_state,
2025-01-14T13:17:21.0647022Z         macro_atom_state,
2025-01-14T13:17:21.0647092Z         plasma,
2025-01-14T13:17:21.0647170Z         no_of_packets,
2025-01-14T13:17:21.0647252Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0647332Z         iteration=0,
2025-01-14T13:17:21.0647398Z     ):
2025-01-14T13:17:21.0647532Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0647626Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0647750Z         else:
2025-01-14T13:17:21.0647881Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0647997Z     
2025-01-14T13:17:21.0648219Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0648371Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0648486Z         )
2025-01-14T13:17:21.0648594Z     
2025-01-14T13:17:21.0648807Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0648984Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0649188Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0649305Z         else:
2025-01-14T13:17:21.0649446Z             continuum_state = None
2025-01-14T13:17:21.0649609Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0649794Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0649940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0650115Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0650224Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0650325Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0650422Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0650493Z         ).to_numba(
2025-01-14T13:17:21.0650583Z             macro_atom_state,
2025-01-14T13:17:21.0650735Z             self.line_interaction_type,
2025-01-14T13:17:21.0650852Z         )
2025-01-14T13:17:21.0651015Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0651483Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0651685Z         ]
2025-01-14T13:17:21.0652007Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0652012Z 
2025-01-14T13:17:21.0652164Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0652413Z _________ ERROR at setup of test_line_emission[test_packet1-expected1] _________
2025-01-14T13:17:21.0652584Z 
2025-01-14T13:17:21.0653532Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0654092Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0654099Z 
2025-01-14T13:17:21.0654254Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0654518Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0654665Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0654991Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0655139Z >       sim.iterate(10)
2025-01-14T13:17:21.0655146Z 
2025-01-14T13:17:21.0655356Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0655542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0655705Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0655969Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0656083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0656087Z 
2025-01-14T13:17:21.0656462Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0656814Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0657197Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0657481Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0657744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0657963Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0657975Z 
2025-01-14T13:17:21.0658123Z     def initialize_transport_state(
2025-01-14T13:17:21.0658238Z         self,
2025-01-14T13:17:21.0658369Z         simulation_state,
2025-01-14T13:17:21.0658495Z         opacity_state,
2025-01-14T13:17:21.0658579Z         macro_atom_state,
2025-01-14T13:17:21.0658651Z         plasma,
2025-01-14T13:17:21.0658729Z         no_of_packets,
2025-01-14T13:17:21.0658860Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0658987Z         iteration=0,
2025-01-14T13:17:21.0659096Z     ):
2025-01-14T13:17:21.0659304Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0659462Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0659578Z         else:
2025-01-14T13:17:21.0659722Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0659792Z     
2025-01-14T13:17:21.0659937Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0660063Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0660189Z         )
2025-01-14T13:17:21.0660298Z     
2025-01-14T13:17:21.0660518Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0660699Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0660963Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0661039Z         else:
2025-01-14T13:17:21.0661128Z             continuum_state = None
2025-01-14T13:17:21.0661236Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0661432Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0661716Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0661896Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0662060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0662211Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0662360Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0662572Z         ).to_numba(
2025-01-14T13:17:21.0662656Z             macro_atom_state,
2025-01-14T13:17:21.0662742Z             self.line_interaction_type,
2025-01-14T13:17:21.0662813Z         )
2025-01-14T13:17:21.0662913Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0663187Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0663253Z         ]
2025-01-14T13:17:21.0663558Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0663563Z 
2025-01-14T13:17:21.0663713Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0664017Z _________ ERROR at setup of test_line_emission[test_packet2-expected2] _________
2025-01-14T13:17:21.0664027Z 
2025-01-14T13:17:21.0664669Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0665022Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0665027Z 
2025-01-14T13:17:21.0665122Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0665284Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0665389Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0665564Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0665640Z >       sim.iterate(10)
2025-01-14T13:17:21.0665652Z 
2025-01-14T13:17:21.0665774Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0665881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0665985Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0666161Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0666271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0666274Z 
2025-01-14T13:17:21.0666539Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0666742Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0666965Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0667234Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0667402Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0667532Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0667536Z 
2025-01-14T13:17:21.0667626Z     def initialize_transport_state(
2025-01-14T13:17:21.0667700Z         self,
2025-01-14T13:17:21.0667784Z         simulation_state,
2025-01-14T13:17:21.0667865Z         opacity_state,
2025-01-14T13:17:21.0667947Z         macro_atom_state,
2025-01-14T13:17:21.0668017Z         plasma,
2025-01-14T13:17:21.0668095Z         no_of_packets,
2025-01-14T13:17:21.0668177Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0668253Z         iteration=0,
2025-01-14T13:17:21.0668326Z     ):
2025-01-14T13:17:21.0668451Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0668550Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0668623Z         else:
2025-01-14T13:17:21.0668707Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0668772Z     
2025-01-14T13:17:21.0668916Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0669011Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0669083Z         )
2025-01-14T13:17:21.0669149Z     
2025-01-14T13:17:21.0669379Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0669493Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0669648Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0669718Z         else:
2025-01-14T13:17:21.0669805Z             continuum_state = None
2025-01-14T13:17:21.0669904Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0670014Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0670111Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0670215Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0670315Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0670480Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0670578Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0670649Z         ).to_numba(
2025-01-14T13:17:21.0670730Z             macro_atom_state,
2025-01-14T13:17:21.0670822Z             self.line_interaction_type,
2025-01-14T13:17:21.0670894Z         )
2025-01-14T13:17:21.0670993Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0671265Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0671332Z         ]
2025-01-14T13:17:21.0671856Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0671864Z 
2025-01-14T13:17:21.0672024Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0672177Z ________________ ERROR at setup of test_macro_atom[1963-10015] _________________
2025-01-14T13:17:21.0672181Z 
2025-01-14T13:17:21.0672818Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0673185Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0673189Z 
2025-01-14T13:17:21.0673285Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0673449Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0673547Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0673723Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0673804Z >       sim.iterate(10)
2025-01-14T13:17:21.0673809Z 
2025-01-14T13:17:21.0673934Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0674045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0674143Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0674294Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0674411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0674415Z 
2025-01-14T13:17:21.0674677Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0674880Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0675104Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0675376Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0675550Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0675685Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0675689Z 
2025-01-14T13:17:21.0675785Z     def initialize_transport_state(
2025-01-14T13:17:21.0675854Z         self,
2025-01-14T13:17:21.0675935Z         simulation_state,
2025-01-14T13:17:21.0676010Z         opacity_state,
2025-01-14T13:17:21.0676241Z         macro_atom_state,
2025-01-14T13:17:21.0676353Z         plasma,
2025-01-14T13:17:21.0676486Z         no_of_packets,
2025-01-14T13:17:21.0676630Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0676750Z         iteration=0,
2025-01-14T13:17:21.0676865Z     ):
2025-01-14T13:17:21.0677070Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0677232Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0677336Z         else:
2025-01-14T13:17:21.0677423Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0677490Z     
2025-01-14T13:17:21.0677634Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0677730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0677928Z         )
2025-01-14T13:17:21.0677997Z     
2025-01-14T13:17:21.0678133Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0678244Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0678412Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0678479Z         else:
2025-01-14T13:17:21.0678573Z             continuum_state = None
2025-01-14T13:17:21.0678680Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0678787Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0678882Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0678990Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0679093Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0679185Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0679288Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0679365Z         ).to_numba(
2025-01-14T13:17:21.0679449Z             macro_atom_state,
2025-01-14T13:17:21.0679535Z             self.line_interaction_type,
2025-01-14T13:17:21.0679606Z         )
2025-01-14T13:17:21.0679706Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0679986Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0680058Z         ]
2025-01-14T13:17:21.0680356Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0680361Z 
2025-01-14T13:17:21.0680514Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0680665Z __________________ ERROR at setup of test_macro_atom[1-9993] ___________________
2025-01-14T13:17:21.0680669Z 
2025-01-14T13:17:21.0681303Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0681913Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0681936Z 
2025-01-14T13:17:21.0682070Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0682237Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0682333Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0682507Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0682581Z >       sim.iterate(10)
2025-01-14T13:17:21.0682585Z 
2025-01-14T13:17:21.0682710Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0682815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0682915Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0683071Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0683178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0683182Z 
2025-01-14T13:17:21.0683589Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0683794Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0684021Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0684290Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0684455Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0684585Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0684589Z 
2025-01-14T13:17:21.0684688Z     def initialize_transport_state(
2025-01-14T13:17:21.0684758Z         self,
2025-01-14T13:17:21.0684959Z         simulation_state,
2025-01-14T13:17:21.0685045Z         opacity_state,
2025-01-14T13:17:21.0685127Z         macro_atom_state,
2025-01-14T13:17:21.0685208Z         plasma,
2025-01-14T13:17:21.0685283Z         no_of_packets,
2025-01-14T13:17:21.0685377Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0685457Z         iteration=0,
2025-01-14T13:17:21.0685529Z     ):
2025-01-14T13:17:21.0685654Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0685753Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0685822Z         else:
2025-01-14T13:17:21.0685905Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0685971Z     
2025-01-14T13:17:21.0686110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0686204Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0686277Z         )
2025-01-14T13:17:21.0686342Z     
2025-01-14T13:17:21.0686479Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0686590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0686755Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0686830Z         else:
2025-01-14T13:17:21.0686918Z             continuum_state = None
2025-01-14T13:17:21.0687022Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0687127Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0687228Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0687336Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0687436Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0687527Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0687619Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0687690Z         ).to_numba(
2025-01-14T13:17:21.0687780Z             macro_atom_state,
2025-01-14T13:17:21.0687874Z             self.line_interaction_type,
2025-01-14T13:17:21.0687947Z         )
2025-01-14T13:17:21.0688055Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0688328Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0688410Z         ]
2025-01-14T13:17:21.0688710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0688714Z 
2025-01-14T13:17:21.0688866Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0689017Z _______________ ERROR at setup of test_macro_atom[2111963-17296] _______________
2025-01-14T13:17:21.0689021Z 
2025-01-14T13:17:21.0689647Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0689992Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0690002Z 
2025-01-14T13:17:21.0690092Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0690364Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0690459Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0690633Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0690709Z >       sim.iterate(10)
2025-01-14T13:17:21.0690713Z 
2025-01-14T13:17:21.0690835Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0690940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0691041Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0691191Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0691380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0691385Z 
2025-01-14T13:17:21.0691803Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0692004Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0692234Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0692505Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0692673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0692806Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0692810Z 
2025-01-14T13:17:21.0692901Z     def initialize_transport_state(
2025-01-14T13:17:21.0692969Z         self,
2025-01-14T13:17:21.0693052Z         simulation_state,
2025-01-14T13:17:21.0693132Z         opacity_state,
2025-01-14T13:17:21.0693212Z         macro_atom_state,
2025-01-14T13:17:21.0693287Z         plasma,
2025-01-14T13:17:21.0693360Z         no_of_packets,
2025-01-14T13:17:21.0693447Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0693519Z         iteration=0,
2025-01-14T13:17:21.0693595Z     ):
2025-01-14T13:17:21.0693719Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0693817Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0693885Z         else:
2025-01-14T13:17:21.0693970Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0694042Z     
2025-01-14T13:17:21.0694181Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0694275Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0694347Z         )
2025-01-14T13:17:21.0694412Z     
2025-01-14T13:17:21.0694544Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0694655Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0694813Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0694886Z         else:
2025-01-14T13:17:21.0694968Z             continuum_state = None
2025-01-14T13:17:21.0695071Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0695180Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0695274Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0695378Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0695479Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0695575Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0695674Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0695747Z         ).to_numba(
2025-01-14T13:17:21.0695828Z             macro_atom_state,
2025-01-14T13:17:21.0695914Z             self.line_interaction_type,
2025-01-14T13:17:21.0695986Z         )
2025-01-14T13:17:21.0696086Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0696361Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0696433Z         ]
2025-01-14T13:17:21.0696732Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0696877Z 
2025-01-14T13:17:21.0697036Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0697190Z ________________ ERROR at setup of test_macro_atom[10000-9993] _________________
2025-01-14T13:17:21.0697193Z 
2025-01-14T13:17:21.0697821Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0698181Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0698285Z 
2025-01-14T13:17:21.0698378Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0698543Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0698640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0698834Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0698913Z >       sim.iterate(10)
2025-01-14T13:17:21.0698917Z 
2025-01-14T13:17:21.0699045Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0699152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0699253Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0699421Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0699531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0699534Z 
2025-01-14T13:17:21.0699808Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0700007Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0700237Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0700518Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0700687Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0700821Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0700825Z 
2025-01-14T13:17:21.0700922Z     def initialize_transport_state(
2025-01-14T13:17:21.0700998Z         self,
2025-01-14T13:17:21.0701079Z         simulation_state,
2025-01-14T13:17:21.0701159Z         opacity_state,
2025-01-14T13:17:21.0701233Z         macro_atom_state,
2025-01-14T13:17:21.0701307Z         plasma,
2025-01-14T13:17:21.0701381Z         no_of_packets,
2025-01-14T13:17:21.0701694Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0701838Z         iteration=0,
2025-01-14T13:17:21.0701966Z     ):
2025-01-14T13:17:21.0702177Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0702346Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0702465Z         else:
2025-01-14T13:17:21.0702597Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0702705Z     
2025-01-14T13:17:21.0702952Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0703118Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0703232Z         )
2025-01-14T13:17:21.0703335Z     
2025-01-14T13:17:21.0703556Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0703683Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0703839Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0703913Z         else:
2025-01-14T13:17:21.0704013Z             continuum_state = None
2025-01-14T13:17:21.0704127Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0704242Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0704340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0704646Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0704754Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0704847Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0704945Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0705017Z         ).to_numba(
2025-01-14T13:17:21.0705105Z             macro_atom_state,
2025-01-14T13:17:21.0705194Z             self.line_interaction_type,
2025-01-14T13:17:21.0705268Z         )
2025-01-14T13:17:21.0705378Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0705651Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0705829Z         ]
2025-01-14T13:17:21.0706142Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0706147Z 
2025-01-14T13:17:21.0706307Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0706498Z ________ ERROR at setup of test_opacity_state_initialize[scatter-False] ________
2025-01-14T13:17:21.0706502Z 
2025-01-14T13:17:21.0707145Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0707502Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0707506Z 
2025-01-14T13:17:21.0707599Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0707773Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0707877Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0708058Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0708141Z >       sim.iterate(10)
2025-01-14T13:17:21.0708145Z 
2025-01-14T13:17:21.0708279Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0708389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0708491Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0708652Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0708761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0708764Z 
2025-01-14T13:17:21.0709035Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0709241Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0709468Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0709743Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0709921Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0710057Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0710068Z 
2025-01-14T13:17:21.0710157Z     def initialize_transport_state(
2025-01-14T13:17:21.0710231Z         self,
2025-01-14T13:17:21.0710309Z         simulation_state,
2025-01-14T13:17:21.0710390Z         opacity_state,
2025-01-14T13:17:21.0710469Z         macro_atom_state,
2025-01-14T13:17:21.0710550Z         plasma,
2025-01-14T13:17:21.0710624Z         no_of_packets,
2025-01-14T13:17:21.0710713Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0710787Z         iteration=0,
2025-01-14T13:17:21.0710864Z     ):
2025-01-14T13:17:21.0710993Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0711097Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0711168Z         else:
2025-01-14T13:17:21.0711255Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0711409Z     
2025-01-14T13:17:21.0711768Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0711897Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0711978Z         )
2025-01-14T13:17:21.0712052Z     
2025-01-14T13:17:21.0712184Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0712306Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0712463Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0712540Z         else:
2025-01-14T13:17:21.0712624Z             continuum_state = None
2025-01-14T13:17:21.0712733Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0712957Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0713066Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0713177Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0713280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0713379Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0713475Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0713547Z         ).to_numba(
2025-01-14T13:17:21.0713630Z             macro_atom_state,
2025-01-14T13:17:21.0713721Z             self.line_interaction_type,
2025-01-14T13:17:21.0713790Z         )
2025-01-14T13:17:21.0713896Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0714168Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0714240Z         ]
2025-01-14T13:17:21.0714546Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0714551Z 
2025-01-14T13:17:21.0714704Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0714883Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-False] _______
2025-01-14T13:17:21.0714892Z 
2025-01-14T13:17:21.0715524Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0715876Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0715880Z 
2025-01-14T13:17:21.0715970Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0716131Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0716229Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0716410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0716486Z >       sim.iterate(10)
2025-01-14T13:17:21.0716490Z 
2025-01-14T13:17:21.0716617Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0716734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0716830Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0716991Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0717095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0717099Z 
2025-01-14T13:17:21.0717367Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0717567Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0717794Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0718071Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0718238Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0718378Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0718528Z 
2025-01-14T13:17:21.0718623Z     def initialize_transport_state(
2025-01-14T13:17:21.0718699Z         self,
2025-01-14T13:17:21.0718777Z         simulation_state,
2025-01-14T13:17:21.0718859Z         opacity_state,
2025-01-14T13:17:21.0718935Z         macro_atom_state,
2025-01-14T13:17:21.0719011Z         plasma,
2025-01-14T13:17:21.0719085Z         no_of_packets,
2025-01-14T13:17:21.0719171Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0719244Z         iteration=0,
2025-01-14T13:17:21.0719318Z     ):
2025-01-14T13:17:21.0719444Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0719545Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0719689Z         else:
2025-01-14T13:17:21.0719776Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0719843Z     
2025-01-14T13:17:21.0719987Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0720093Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0720163Z         )
2025-01-14T13:17:21.0720236Z     
2025-01-14T13:17:21.0720366Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0720485Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0720640Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0720716Z         else:
2025-01-14T13:17:21.0720801Z             continuum_state = None
2025-01-14T13:17:21.0720908Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0721015Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0721113Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0721228Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0721333Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0721427Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0721529Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0721865Z         ).to_numba(
2025-01-14T13:17:21.0721998Z             macro_atom_state,
2025-01-14T13:17:21.0722131Z             self.line_interaction_type,
2025-01-14T13:17:21.0722204Z         )
2025-01-14T13:17:21.0722316Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0722586Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0722661Z         ]
2025-01-14T13:17:21.0722962Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0722966Z 
2025-01-14T13:17:21.0723121Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0723305Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-True] ________
2025-01-14T13:17:21.0723309Z 
2025-01-14T13:17:21.0723949Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0724306Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0724310Z 
2025-01-14T13:17:21.0724401Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0724566Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0724664Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0724843Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0724921Z >       sim.iterate(10)
2025-01-14T13:17:21.0724928Z 
2025-01-14T13:17:21.0725055Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0725171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0725265Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0725574Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0725679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0725683Z 
2025-01-14T13:17:21.0725947Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0726149Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0726371Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0726640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0726907Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0727049Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0727053Z 
2025-01-14T13:17:21.0727141Z     def initialize_transport_state(
2025-01-14T13:17:21.0727221Z         self,
2025-01-14T13:17:21.0727300Z         simulation_state,
2025-01-14T13:17:21.0727379Z         opacity_state,
2025-01-14T13:17:21.0727454Z         macro_atom_state,
2025-01-14T13:17:21.0727537Z         plasma,
2025-01-14T13:17:21.0727610Z         no_of_packets,
2025-01-14T13:17:21.0727695Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0727768Z         iteration=0,
2025-01-14T13:17:21.0727842Z     ):
2025-01-14T13:17:21.0727966Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0728065Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0728134Z         else:
2025-01-14T13:17:21.0728218Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0728285Z     
2025-01-14T13:17:21.0728434Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0728535Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0728601Z         )
2025-01-14T13:17:21.0728673Z     
2025-01-14T13:17:21.0728810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0728930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0729088Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0729164Z         else:
2025-01-14T13:17:21.0729248Z             continuum_state = None
2025-01-14T13:17:21.0729355Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0729463Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0729565Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0729670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0729774Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0729878Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0729969Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0730048Z         ).to_numba(
2025-01-14T13:17:21.0730126Z             macro_atom_state,
2025-01-14T13:17:21.0730223Z             self.line_interaction_type,
2025-01-14T13:17:21.0730291Z         )
2025-01-14T13:17:21.0730399Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0730672Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0730747Z         ]
2025-01-14T13:17:21.0731046Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0731050Z 
2025-01-14T13:17:21.0731201Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0731378Z ______ ERROR at setup of test_opacity_state_initialize[downbranch-False] _______
2025-01-14T13:17:21.0731388Z 
2025-01-14T13:17:21.0732231Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0732722Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0732727Z 
2025-01-14T13:17:21.0732820Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0732984Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0733080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0733258Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0733334Z >       sim.iterate(10)
2025-01-14T13:17:21.0733345Z 
2025-01-14T13:17:21.0733466Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0733684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0733783Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0733943Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0734053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0734057Z 
2025-01-14T13:17:21.0734327Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0734527Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0734756Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0735029Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0735200Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0735347Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0735351Z 
2025-01-14T13:17:21.0735440Z     def initialize_transport_state(
2025-01-14T13:17:21.0735515Z         self,
2025-01-14T13:17:21.0735596Z         simulation_state,
2025-01-14T13:17:21.0735679Z         opacity_state,
2025-01-14T13:17:21.0735761Z         macro_atom_state,
2025-01-14T13:17:21.0735840Z         plasma,
2025-01-14T13:17:21.0735914Z         no_of_packets,
2025-01-14T13:17:21.0736005Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0736084Z         iteration=0,
2025-01-14T13:17:21.0736158Z     ):
2025-01-14T13:17:21.0736287Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0736391Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0736460Z         else:
2025-01-14T13:17:21.0736547Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0736621Z     
2025-01-14T13:17:21.0736757Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0736865Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0736934Z         )
2025-01-14T13:17:21.0737006Z     
2025-01-14T13:17:21.0737137Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0737255Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0737411Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0737489Z         else:
2025-01-14T13:17:21.0737572Z             continuum_state = None
2025-01-14T13:17:21.0737679Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0737794Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0737889Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0737995Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0738099Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0738197Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0738287Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0738365Z         ).to_numba(
2025-01-14T13:17:21.0738445Z             macro_atom_state,
2025-01-14T13:17:21.0738537Z             self.line_interaction_type,
2025-01-14T13:17:21.0738604Z         )
2025-01-14T13:17:21.0738709Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0739065Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0739137Z         ]
2025-01-14T13:17:21.0739439Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0739442Z 
2025-01-14T13:17:21.0739593Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0739775Z _______ ERROR at setup of test_opacity_state_initialize[downbranch-True] _______
2025-01-14T13:17:21.0739779Z 
2025-01-14T13:17:21.0740492Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0740845Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0740854Z 
2025-01-14T13:17:21.0740944Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0741105Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0741275Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0741517Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0741770Z >       sim.iterate(10)
2025-01-14T13:17:21.0741776Z 
2025-01-14T13:17:21.0741916Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0742030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0742127Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0742294Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0742402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0742406Z 
2025-01-14T13:17:21.0742680Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0742881Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0743110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0743390Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0743552Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0743692Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0743695Z 
2025-01-14T13:17:21.0743783Z     def initialize_transport_state(
2025-01-14T13:17:21.0743863Z         self,
2025-01-14T13:17:21.0743945Z         simulation_state,
2025-01-14T13:17:21.0744029Z         opacity_state,
2025-01-14T13:17:21.0744104Z         macro_atom_state,
2025-01-14T13:17:21.0744181Z         plasma,
2025-01-14T13:17:21.0744255Z         no_of_packets,
2025-01-14T13:17:21.0744385Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0744510Z         iteration=0,
2025-01-14T13:17:21.0744615Z     ):
2025-01-14T13:17:21.0744744Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0744846Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0744923Z         else:
2025-01-14T13:17:21.0745001Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0745073Z     
2025-01-14T13:17:21.0745210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0745311Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0745379Z         )
2025-01-14T13:17:21.0745453Z     
2025-01-14T13:17:21.0753720Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0753898Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0754071Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0754150Z         else:
2025-01-14T13:17:21.0754419Z             continuum_state = None
2025-01-14T13:17:21.0754537Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0754654Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0754755Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0754869Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0754974Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0755075Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0755167Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0755244Z         ).to_numba(
2025-01-14T13:17:21.0755324Z             macro_atom_state,
2025-01-14T13:17:21.0755524Z             self.line_interaction_type,
2025-01-14T13:17:21.0755596Z         )
2025-01-14T13:17:21.0755703Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0755986Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0756066Z         ]
2025-01-14T13:17:21.0756376Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0756381Z 
2025-01-14T13:17:21.0756547Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0756729Z _____________ ERROR at setup of test_VPacketCollection_add_packet ______________
2025-01-14T13:17:21.0756734Z 
2025-01-14T13:17:21.0757375Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0757731Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0757736Z 
2025-01-14T13:17:21.0757829Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0758005Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0758104Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0758286Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0758367Z >       sim.iterate(10)
2025-01-14T13:17:21.0758370Z 
2025-01-14T13:17:21.0758493Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0758608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0758705Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0758867Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0758976Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0758980Z 
2025-01-14T13:17:21.0759250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0759446Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0759674Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0759954Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0760114Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0760250Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0760255Z 
2025-01-14T13:17:21.0760345Z     def initialize_transport_state(
2025-01-14T13:17:21.0760420Z         self,
2025-01-14T13:17:21.0760499Z         simulation_state,
2025-01-14T13:17:21.0760578Z         opacity_state,
2025-01-14T13:17:21.0760660Z         macro_atom_state,
2025-01-14T13:17:21.0760736Z         plasma,
2025-01-14T13:17:21.0760810Z         no_of_packets,
2025-01-14T13:17:21.0760900Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0760972Z         iteration=0,
2025-01-14T13:17:21.0761161Z     ):
2025-01-14T13:17:21.0761293Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0761396Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0761468Z         else:
2025-01-14T13:17:21.0761710Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0761838Z     
2025-01-14T13:17:21.0762050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0762159Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0762226Z         )
2025-01-14T13:17:21.0762297Z     
2025-01-14T13:17:21.0762427Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0762545Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0762829Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0762908Z         else:
2025-01-14T13:17:21.0762991Z             continuum_state = None
2025-01-14T13:17:21.0763099Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0763209Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0763307Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0763420Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0763518Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0763617Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0763708Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0763783Z         ).to_numba(
2025-01-14T13:17:21.0763862Z             macro_atom_state,
2025-01-14T13:17:21.0763953Z             self.line_interaction_type,
2025-01-14T13:17:21.0764020Z         )
2025-01-14T13:17:21.0764125Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0764402Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0764474Z         ]
2025-01-14T13:17:21.0764774Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0764790Z 
2025-01-14T13:17:21.0764937Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0765124Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-11-132] _
2025-01-14T13:17:21.0765128Z 
2025-01-14T13:17:21.0765758Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0766111Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0766116Z 
2025-01-14T13:17:21.0766205Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0766366Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0766469Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0766647Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0766728Z >       sim.iterate(10)
2025-01-14T13:17:21.0766733Z 
2025-01-14T13:17:21.0766852Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0766965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0767064Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0767228Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0767334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0767337Z 
2025-01-14T13:17:21.0767614Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0767814Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0768043Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0768440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0768603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0768746Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0768750Z 
2025-01-14T13:17:21.0768839Z     def initialize_transport_state(
2025-01-14T13:17:21.0768912Z         self,
2025-01-14T13:17:21.0768990Z         simulation_state,
2025-01-14T13:17:21.0769070Z         opacity_state,
2025-01-14T13:17:21.0769145Z         macro_atom_state,
2025-01-14T13:17:21.0769271Z         plasma,
2025-01-14T13:17:21.0769385Z         no_of_packets,
2025-01-14T13:17:21.0769646Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0769771Z         iteration=0,
2025-01-14T13:17:21.0769890Z     ):
2025-01-14T13:17:21.0770103Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0770260Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0770377Z         else:
2025-01-14T13:17:21.0770459Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0770531Z     
2025-01-14T13:17:21.0770670Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0770774Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0770842Z         )
2025-01-14T13:17:21.0770912Z     
2025-01-14T13:17:21.0771043Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0771160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0771321Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0771394Z         else:
2025-01-14T13:17:21.0771482Z             continuum_state = None
2025-01-14T13:17:21.0771773Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0771997Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0772127Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0772246Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0772346Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0772447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0772536Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0772612Z         ).to_numba(
2025-01-14T13:17:21.0772691Z             macro_atom_state,
2025-01-14T13:17:21.0772783Z             self.line_interaction_type,
2025-01-14T13:17:21.0772850Z         )
2025-01-14T13:17:21.0772955Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0773226Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0773303Z         ]
2025-01-14T13:17:21.0773605Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0773616Z 
2025-01-14T13:17:21.0773762Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0773955Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-1-133] __
2025-01-14T13:17:21.0773959Z 
2025-01-14T13:17:21.0774590Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0774944Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0774948Z 
2025-01-14T13:17:21.0775037Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0775204Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0775306Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0775479Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0775700Z >       sim.iterate(10)
2025-01-14T13:17:21.0775704Z 
2025-01-14T13:17:21.0775825Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0775939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0776036Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0776193Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0776296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0776300Z 
2025-01-14T13:17:21.0776569Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0776897Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0777122Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0777397Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0777565Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0777701Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0777705Z 
2025-01-14T13:17:21.0777792Z     def initialize_transport_state(
2025-01-14T13:17:21.0777866Z         self,
2025-01-14T13:17:21.0777942Z         simulation_state,
2025-01-14T13:17:21.0778022Z         opacity_state,
2025-01-14T13:17:21.0778096Z         macro_atom_state,
2025-01-14T13:17:21.0778172Z         plasma,
2025-01-14T13:17:21.0778244Z         no_of_packets,
2025-01-14T13:17:21.0778331Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0778409Z         iteration=0,
2025-01-14T13:17:21.0778477Z     ):
2025-01-14T13:17:21.0778610Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0778704Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0778776Z         else:
2025-01-14T13:17:21.0778854Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0778928Z     
2025-01-14T13:17:21.0779065Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0779164Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0779231Z         )
2025-01-14T13:17:21.0779301Z     
2025-01-14T13:17:21.0779430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0779547Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0779699Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0779772Z         else:
2025-01-14T13:17:21.0779854Z             continuum_state = None
2025-01-14T13:17:21.0779958Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0780073Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0780165Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0780273Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0780368Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0780467Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0780556Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0780631Z         ).to_numba(
2025-01-14T13:17:21.0780708Z             macro_atom_state,
2025-01-14T13:17:21.0780799Z             self.line_interaction_type,
2025-01-14T13:17:21.0780865Z         )
2025-01-14T13:17:21.0780970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0781235Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0781309Z         ]
2025-01-14T13:17:21.0781791Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0781797Z 
2025-01-14T13:17:21.0781948Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0782132Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-2-133] __
2025-01-14T13:17:21.0782257Z 
2025-01-14T13:17:21.0782888Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0783244Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0783248Z 
2025-01-14T13:17:21.0783343Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0783502Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0783601Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0783875Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0783959Z >       sim.iterate(10)
2025-01-14T13:17:21.0783964Z 
2025-01-14T13:17:21.0784083Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0784200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0784295Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0784451Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0784554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0784557Z 
2025-01-14T13:17:21.0784823Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0785027Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0785245Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0785528Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0785688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0785826Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0785830Z 
2025-01-14T13:17:21.0785916Z     def initialize_transport_state(
2025-01-14T13:17:21.0785990Z         self,
2025-01-14T13:17:21.0786067Z         simulation_state,
2025-01-14T13:17:21.0786146Z         opacity_state,
2025-01-14T13:17:21.0786221Z         macro_atom_state,
2025-01-14T13:17:21.0786296Z         plasma,
2025-01-14T13:17:21.0786376Z         no_of_packets,
2025-01-14T13:17:21.0786458Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0786534Z         iteration=0,
2025-01-14T13:17:21.0786600Z     ):
2025-01-14T13:17:21.0786729Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0786826Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0786905Z         else:
2025-01-14T13:17:21.0786982Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0787053Z     
2025-01-14T13:17:21.0787188Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0787291Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0787358Z         )
2025-01-14T13:17:21.0787429Z     
2025-01-14T13:17:21.0787559Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0787674Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0787823Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0787900Z         else:
2025-01-14T13:17:21.0787990Z             continuum_state = None
2025-01-14T13:17:21.0788090Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0788200Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0788289Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0788401Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0788495Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0788593Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0788682Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0788845Z         ).to_numba(
2025-01-14T13:17:21.0788923Z             macro_atom_state,
2025-01-14T13:17:21.0789017Z             self.line_interaction_type,
2025-01-14T13:17:21.0789084Z         )
2025-01-14T13:17:21.0789186Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0789453Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0789524Z         ]
2025-01-14T13:17:21.0789826Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0789829Z 
2025-01-14T13:17:21.0790049Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0790254Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-132] _
2025-01-14T13:17:21.0790258Z 
2025-01-14T13:17:21.0790881Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0791235Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0791239Z 
2025-01-14T13:17:21.0791332Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0791486Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0791682Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0791857Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0791943Z >       sim.iterate(10)
2025-01-14T13:17:21.0791946Z 
2025-01-14T13:17:21.0792064Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0792175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0792273Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0792428Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0792531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0792540Z 
2025-01-14T13:17:21.0792804Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0793010Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0793229Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0793504Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0793666Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0793801Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0793805Z 
2025-01-14T13:17:21.0793890Z     def initialize_transport_state(
2025-01-14T13:17:21.0793969Z         self,
2025-01-14T13:17:21.0794047Z         simulation_state,
2025-01-14T13:17:21.0794126Z         opacity_state,
2025-01-14T13:17:21.0794206Z         macro_atom_state,
2025-01-14T13:17:21.0794275Z         plasma,
2025-01-14T13:17:21.0794353Z         no_of_packets,
2025-01-14T13:17:21.0794434Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0794510Z         iteration=0,
2025-01-14T13:17:21.0794580Z     ):
2025-01-14T13:17:21.0794705Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0794799Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0794874Z         else:
2025-01-14T13:17:21.0794950Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0795021Z     
2025-01-14T13:17:21.0795159Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0795258Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0795324Z         )
2025-01-14T13:17:21.0795395Z     
2025-01-14T13:17:21.0795647Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0795763Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0795916Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0795983Z         else:
2025-01-14T13:17:21.0796069Z             continuum_state = None
2025-01-14T13:17:21.0796167Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0796278Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0796368Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0796475Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0796568Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0796771Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0796864Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0796940Z         ).to_numba(
2025-01-14T13:17:21.0797016Z             macro_atom_state,
2025-01-14T13:17:21.0797112Z             self.line_interaction_type,
2025-01-14T13:17:21.0797179Z         )
2025-01-14T13:17:21.0797282Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0797549Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0797629Z         ]
2025-01-14T13:17:21.0797929Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0797934Z 
2025-01-14T13:17:21.0798086Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0798289Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-133] _
2025-01-14T13:17:21.0798297Z 
2025-01-14T13:17:21.0798917Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0799277Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0799280Z 
2025-01-14T13:17:21.0799369Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0799532Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0799627Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0799806Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0799891Z >       sim.iterate(10)
2025-01-14T13:17:21.0799894Z 
2025-01-14T13:17:21.0800012Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0800133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0800229Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0800419Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0800619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0800626Z 
2025-01-14T13:17:21.0801088Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0801438Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0802090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0802404Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0802568Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0802718Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0802723Z 
2025-01-14T13:17:21.0802811Z     def initialize_transport_state(
2025-01-14T13:17:21.0802884Z         self,
2025-01-14T13:17:21.0802960Z         simulation_state,
2025-01-14T13:17:21.0803248Z         opacity_state,
2025-01-14T13:17:21.0803326Z         macro_atom_state,
2025-01-14T13:17:21.0803403Z         plasma,
2025-01-14T13:17:21.0803476Z         no_of_packets,
2025-01-14T13:17:21.0803561Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0803632Z         iteration=0,
2025-01-14T13:17:21.0803703Z     ):
2025-01-14T13:17:21.0803841Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0803936Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0804009Z         else:
2025-01-14T13:17:21.0804086Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0804158Z     
2025-01-14T13:17:21.0804296Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0804511Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0804580Z         )
2025-01-14T13:17:21.0804650Z     
2025-01-14T13:17:21.0804781Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0804898Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0805056Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0805128Z         else:
2025-01-14T13:17:21.0805209Z             continuum_state = None
2025-01-14T13:17:21.0805315Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0805428Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0805520Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0805632Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0805731Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0805833Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0805927Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0806004Z         ).to_numba(
2025-01-14T13:17:21.0806083Z             macro_atom_state,
2025-01-14T13:17:21.0806175Z             self.line_interaction_type,
2025-01-14T13:17:21.0806242Z         )
2025-01-14T13:17:21.0806352Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0806619Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0806695Z         ]
2025-01-14T13:17:21.0806993Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0807004Z 
2025-01-14T13:17:21.0807151Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0807373Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] _
2025-01-14T13:17:21.0807377Z 
2025-01-14T13:17:21.0808012Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0808363Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0808371Z 
2025-01-14T13:17:21.0808459Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0808624Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0808726Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0808901Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0808983Z >       sim.iterate(10)
2025-01-14T13:17:21.0808986Z 
2025-01-14T13:17:21.0809109Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0809223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0809322Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0809481Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0809587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0809680Z 
2025-01-14T13:17:21.0809954Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0810161Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0810380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0810657Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0810815Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0810950Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0810954Z 
2025-01-14T13:17:21.0811040Z     def initialize_transport_state(
2025-01-14T13:17:21.0811196Z         self,
2025-01-14T13:17:21.0811275Z         simulation_state,
2025-01-14T13:17:21.0811358Z         opacity_state,
2025-01-14T13:17:21.0811431Z         macro_atom_state,
2025-01-14T13:17:21.0811509Z         plasma,
2025-01-14T13:17:21.0811759Z         no_of_packets,
2025-01-14T13:17:21.0811857Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0811937Z         iteration=0,
2025-01-14T13:17:21.0812005Z     ):
2025-01-14T13:17:21.0812136Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0812232Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0812305Z         else:
2025-01-14T13:17:21.0812383Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0812454Z     
2025-01-14T13:17:21.0812589Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0812690Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0812760Z         )
2025-01-14T13:17:21.0812831Z     
2025-01-14T13:17:21.0812973Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0813092Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0813242Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0813319Z         else:
2025-01-14T13:17:21.0813401Z             continuum_state = None
2025-01-14T13:17:21.0813506Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0813618Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0813708Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0813817Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0813911Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0814005Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0814092Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0814165Z         ).to_numba(
2025-01-14T13:17:21.0814241Z             macro_atom_state,
2025-01-14T13:17:21.0814337Z             self.line_interaction_type,
2025-01-14T13:17:21.0814402Z         )
2025-01-14T13:17:21.0814504Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0814770Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0814846Z         ]
2025-01-14T13:17:21.0815149Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0815153Z 
2025-01-14T13:17:21.0815299Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0815492Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132--1-199] _
2025-01-14T13:17:21.0815495Z 
2025-01-14T13:17:21.0816123Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0816472Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0816476Z 
2025-01-14T13:17:21.0816695Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0816849Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0816947Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0817116Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0817198Z >       sim.iterate(10)
2025-01-14T13:17:21.0817202Z 
2025-01-14T13:17:21.0817321Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0817436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0817528Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0817684Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0817888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0817892Z 
2025-01-14T13:17:21.0818162Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0818374Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0818591Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0818868Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0819024Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0819159Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0819163Z 
2025-01-14T13:17:21.0819251Z     def initialize_transport_state(
2025-01-14T13:17:21.0819324Z         self,
2025-01-14T13:17:21.0819399Z         simulation_state,
2025-01-14T13:17:21.0819483Z         opacity_state,
2025-01-14T13:17:21.0819556Z         macro_atom_state,
2025-01-14T13:17:21.0819632Z         plasma,
2025-01-14T13:17:21.0819709Z         no_of_packets,
2025-01-14T13:17:21.0819788Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0819869Z         iteration=0,
2025-01-14T13:17:21.0819936Z     ):
2025-01-14T13:17:21.0820065Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0820155Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0820227Z         else:
2025-01-14T13:17:21.0820306Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0820376Z     
2025-01-14T13:17:21.0820511Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0820611Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0820677Z         )
2025-01-14T13:17:21.0820748Z     
2025-01-14T13:17:21.0820876Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0821001Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0821155Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0821228Z         else:
2025-01-14T13:17:21.0821314Z             continuum_state = None
2025-01-14T13:17:21.0821413Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0821535Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0821822Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0821941Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0822040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0822142Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0822231Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0822307Z         ).to_numba(
2025-01-14T13:17:21.0822386Z             macro_atom_state,
2025-01-14T13:17:21.0822480Z             self.line_interaction_type,
2025-01-14T13:17:21.0822546Z         )
2025-01-14T13:17:21.0822662Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0822933Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0823006Z         ]
2025-01-14T13:17:21.0823314Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0823441Z 
2025-01-14T13:17:21.0823598Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0823795Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-0-132] _
2025-01-14T13:17:21.0823800Z 
2025-01-14T13:17:21.0824431Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0824909Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0824914Z 
2025-01-14T13:17:21.0825013Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0825179Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0825288Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0825460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0825540Z >       sim.iterate(10)
2025-01-14T13:17:21.0825544Z 
2025-01-14T13:17:21.0825660Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0825774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0825866Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0826024Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0826125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0826139Z 
2025-01-14T13:17:21.0826404Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0826607Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0826824Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0827105Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0827264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0827400Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0827404Z 
2025-01-14T13:17:21.0827496Z     def initialize_transport_state(
2025-01-14T13:17:21.0827569Z         self,
2025-01-14T13:17:21.0827653Z         simulation_state,
2025-01-14T13:17:21.0827735Z         opacity_state,
2025-01-14T13:17:21.0827824Z         macro_atom_state,
2025-01-14T13:17:21.0827894Z         plasma,
2025-01-14T13:17:21.0827977Z         no_of_packets,
2025-01-14T13:17:21.0828059Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0828136Z         iteration=0,
2025-01-14T13:17:21.0828201Z     ):
2025-01-14T13:17:21.0828329Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0828426Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0828498Z         else:
2025-01-14T13:17:21.0828575Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0828648Z     
2025-01-14T13:17:21.0828780Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0828880Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0828947Z         )
2025-01-14T13:17:21.0829018Z     
2025-01-14T13:17:21.0829147Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0829263Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0829420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0829495Z         else:
2025-01-14T13:17:21.0829589Z             continuum_state = None
2025-01-14T13:17:21.0829690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0829801Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0829980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0830092Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0830189Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0830296Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0830388Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0830464Z         ).to_numba(
2025-01-14T13:17:21.0830543Z             macro_atom_state,
2025-01-14T13:17:21.0830636Z             self.line_interaction_type,
2025-01-14T13:17:21.0830702Z         )
2025-01-14T13:17:21.0830809Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0831165Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0831236Z         ]
2025-01-14T13:17:21.0831542Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0831654Z 
2025-01-14T13:17:21.0831809Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0832000Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-20-154] _
2025-01-14T13:17:21.0832004Z 
2025-01-14T13:17:21.0832626Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:17:21.0832976Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0832979Z 
2025-01-14T13:17:21.0833080Z     @pytest.fixture(scope="package")
2025-01-14T13:17:21.0833245Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0833353Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0833526Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.0833618Z >       sim.iterate(10)
2025-01-14T13:17:21.0833622Z 
2025-01-14T13:17:21.0833742Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:17:21.0833857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0833950Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0834108Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0834218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0834222Z 
2025-01-14T13:17:21.0834484Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0834692Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0834909Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0835188Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0835354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0835490Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0835494Z 
2025-01-14T13:17:21.0835579Z     def initialize_transport_state(
2025-01-14T13:17:21.0835652Z         self,
2025-01-14T13:17:21.0835736Z         simulation_state,
2025-01-14T13:17:21.0835810Z         opacity_state,
2025-01-14T13:17:21.0835892Z         macro_atom_state,
2025-01-14T13:17:21.0835965Z         plasma,
2025-01-14T13:17:21.0836044Z         no_of_packets,
2025-01-14T13:17:21.0836125Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0836202Z         iteration=0,
2025-01-14T13:17:21.0836271Z     ):
2025-01-14T13:17:21.0836398Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0836495Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0836568Z         else:
2025-01-14T13:17:21.0836779Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0836855Z     
2025-01-14T13:17:21.0836989Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0837087Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0837152Z         )
2025-01-14T13:17:21.0837222Z     
2025-01-14T13:17:21.0837353Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0837469Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0837624Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0837691Z         else:
2025-01-14T13:17:21.0837776Z             continuum_state = None
2025-01-14T13:17:21.0837978Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0838089Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0838179Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0838287Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0838386Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0838482Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0838572Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0838647Z         ).to_numba(
2025-01-14T13:17:21.0838723Z             macro_atom_state,
2025-01-14T13:17:21.0838814Z             self.line_interaction_type,
2025-01-14T13:17:21.0838880Z         )
2025-01-14T13:17:21.0838984Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0839255Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0839320Z         ]
2025-01-14T13:17:21.0839626Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0839630Z 
2025-01-14T13:17:21.0839772Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0839933Z _________________ ERROR at setup of test_boundary_interactions _________________
2025-01-14T13:17:21.0839941Z 
2025-01-14T13:17:21.0840108Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.0840440Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.0840444Z 
2025-01-14T13:17:21.0840539Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0840621Z         "expected,obtained",
2025-01-14T13:17:21.0840692Z         [
2025-01-14T13:17:21.0840757Z             (
2025-01-14T13:17:21.0840869Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.0840974Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.0841051Z             ),
2025-01-14T13:17:21.0841203Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.0841327Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.0841393Z         ],
2025-01-14T13:17:21.0841469Z     )
2025-01-14T13:17:21.0841778Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.0841902Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0841906Z 
2025-01-14T13:17:21.0842078Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.0842187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0842475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0842591Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0842893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0842993Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0843241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0843488Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0843780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0843876Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0844120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0844195Z     raise exc
2025-01-14T13:17:21.0844432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0844525Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0844756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0845040Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0845282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0845481Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0845724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0845892Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0846202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0846303Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0846655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0846721Z     yield
2025-01-14T13:17:21.0847051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0847160Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0847533Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0847604Z     yield
2025-01-14T13:17:21.0847884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0847984Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0848236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0848306Z     yield
2025-01-14T13:17:21.0848572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0848647Z     return (yield)
2025-01-14T13:17:21.0848924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0849002Z     return (yield)
2025-01-14T13:17:21.0849269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0849343Z     raise e
2025-01-14T13:17:21.0849607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0849684Z     item.runtest()
2025-01-14T13:17:21.0849915Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0850031Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0850264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0850451Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0850698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0850862Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0851136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0851331Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0851700Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0851813Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0852080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0852199Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0852483Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0852585Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0852933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0853065Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0853349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0853452Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0853685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0853758Z     raise exc
2025-01-14T13:17:21.0853996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0854082Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0854313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0854473Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0854711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0854896Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0855135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0855301Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0855608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0855710Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0856057Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0856127Z     yield
2025-01-14T13:17:21.0856445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0856556Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0856929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0857001Z     yield
2025-01-14T13:17:21.0857270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0857375Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0857625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0857694Z     yield
2025-01-14T13:17:21.0857966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0858036Z     return (yield)
2025-01-14T13:17:21.0858319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0858391Z     return (yield)
2025-01-14T13:17:21.0858667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0858735Z     raise e
2025-01-14T13:17:21.0859006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0859197Z     item.runtest()
2025-01-14T13:17:21.0859432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0859541Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0859774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0859963Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0860198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0860360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0860704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0860800Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0861070Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0861193Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0861459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0861740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0862063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0862158Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0862397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0862519Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0862816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0862910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0863149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.0863323Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.0863554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0863739Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0863976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0864141Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0864423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.0864503Z     return (yield)
2025-01-14T13:17:21.0864786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.0864923Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.0865190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.0865285Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.0865416Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.0865496Z     sim = run_tardis(
2025-01-14T13:17:21.0865580Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0865672Z     simulation.run_convergence()
2025-01-14T13:17:21.0865792Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0865930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0866027Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0866182Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0866297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0866302Z 
2025-01-14T13:17:21.0866562Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.0866909Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.0867129Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.0867399Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.0867562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.0867698Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0867702Z 
2025-01-14T13:17:21.0867792Z     def initialize_transport_state(
2025-01-14T13:17:21.0867859Z         self,
2025-01-14T13:17:21.0868044Z         simulation_state,
2025-01-14T13:17:21.0868121Z         opacity_state,
2025-01-14T13:17:21.0868202Z         macro_atom_state,
2025-01-14T13:17:21.0868275Z         plasma,
2025-01-14T13:17:21.0868350Z         no_of_packets,
2025-01-14T13:17:21.0868430Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0868511Z         iteration=0,
2025-01-14T13:17:21.0868575Z     ):
2025-01-14T13:17:21.0868702Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0868797Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0868873Z         else:
2025-01-14T13:17:21.0868954Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0869018Z     
2025-01-14T13:17:21.0869159Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0869253Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0869323Z         )
2025-01-14T13:17:21.0869386Z     
2025-01-14T13:17:21.0869520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0869637Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0869796Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0869862Z         else:
2025-01-14T13:17:21.0869948Z             continuum_state = None
2025-01-14T13:17:21.0870052Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0870163Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0870253Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0870362Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0870466Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0870558Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0870656Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0870724Z         ).to_numba(
2025-01-14T13:17:21.0870804Z             macro_atom_state,
2025-01-14T13:17:21.0870890Z             self.line_interaction_type,
2025-01-14T13:17:21.0870964Z         )
2025-01-14T13:17:21.0871063Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0871338Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0871406Z         ]
2025-01-14T13:17:21.0871813Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0871818Z 
2025-01-14T13:17:21.0871998Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0872173Z _____________ ERROR at setup of test_rpacket_trackers_to_dataframe _____________
2025-01-14T13:17:21.0872177Z 
2025-01-14T13:17:21.0872349Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.0872669Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.0872673Z 
2025-01-14T13:17:21.0872767Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0872853Z         "expected,obtained",
2025-01-14T13:17:21.0872923Z         [
2025-01-14T13:17:21.0872989Z             (
2025-01-14T13:17:21.0873102Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.0873209Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.0873402Z             ),
2025-01-14T13:17:21.0873552Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.0873675Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.0873750Z         ],
2025-01-14T13:17:21.0873816Z     )
2025-01-14T13:17:21.0873979Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.0874098Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0874102Z 
2025-01-14T13:17:21.0874274Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.0874489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0874771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0874889Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0875188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0875286Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0875532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0875662Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0875949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0876048Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0876288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0876368Z     raise exc
2025-01-14T13:17:21.0876608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0876700Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0876931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0877103Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0877340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0877529Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0877770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0877934Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0878248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0878350Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0878699Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0878771Z     yield
2025-01-14T13:17:21.0879094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0879208Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0879589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0879662Z     yield
2025-01-14T13:17:21.0879937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0880037Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0880290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0880362Z     yield
2025-01-14T13:17:21.0880631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0880709Z     return (yield)
2025-01-14T13:17:21.0881097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0881173Z     return (yield)
2025-01-14T13:17:21.0881444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0881513Z     raise e
2025-01-14T13:17:21.0881875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0881947Z     item.runtest()
2025-01-14T13:17:21.0882181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0882295Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0882640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0882832Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0883082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0883246Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0883516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0883609Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0883879Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0883997Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0884259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0884386Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0884672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0884774Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0885015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0885143Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0885430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0885524Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0885766Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.0885835Z     raise exc
2025-01-14T13:17:21.0886073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.0886164Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.0886400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.0886558Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.0886794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0886979Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0887218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0887384Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0887685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.0887789Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.0888136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.0888208Z     yield
2025-01-14T13:17:21.0888524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.0888759Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.0889131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.0889204Z     yield
2025-01-14T13:17:21.0889478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.0889571Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.0889823Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.0889888Z     yield
2025-01-14T13:17:21.0890246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.0890320Z     return (yield)
2025-01-14T13:17:21.0890601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.0890671Z     return (yield)
2025-01-14T13:17:21.0890946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.0891012Z     raise e
2025-01-14T13:17:21.0891277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.0891352Z     item.runtest()
2025-01-14T13:17:21.0891684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.0891801Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.0892028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0892226Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0892462Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0892627Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0892899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.0892992Z     result = testfunction(**testargs)
2025-01-14T13:17:21.0893259Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.0893372Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0893641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.0893755Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.0894048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0894144Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0894384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.0894504Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.0894794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.0894887Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.0895127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.0895300Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.0895526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.0895718Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.0895955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.0896118Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.0896404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.0896612Z     return (yield)
2025-01-14T13:17:21.0896894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.0897032Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.0897300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.0897391Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.0897525Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.0897597Z     sim = run_tardis(
2025-01-14T13:17:21.0897686Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0897873Z     simulation.run_convergence()
2025-01-14T13:17:21.0897993Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0898133Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0898232Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0898389Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0898501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0898505Z 
2025-01-14T13:17:21.0898771Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.0898971Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.0899196Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.0899461Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.0899627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.0899766Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0899770Z 
2025-01-14T13:17:21.0899860Z     def initialize_transport_state(
2025-01-14T13:17:21.0899932Z         self,
2025-01-14T13:17:21.0900014Z         simulation_state,
2025-01-14T13:17:21.0900087Z         opacity_state,
2025-01-14T13:17:21.0900166Z         macro_atom_state,
2025-01-14T13:17:21.0900240Z         plasma,
2025-01-14T13:17:21.0900311Z         no_of_packets,
2025-01-14T13:17:21.0900395Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0900466Z         iteration=0,
2025-01-14T13:17:21.0900540Z     ):
2025-01-14T13:17:21.0900667Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0900767Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0900839Z         else:
2025-01-14T13:17:21.0900920Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0900983Z     
2025-01-14T13:17:21.0901125Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0901218Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0901290Z         )
2025-01-14T13:17:21.0901355Z     
2025-01-14T13:17:21.0901489Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0901781Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0901951Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0902026Z         else:
2025-01-14T13:17:21.0902107Z             continuum_state = None
2025-01-14T13:17:21.0902220Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0902325Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0902421Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0902525Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0902628Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0902724Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0902818Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0902886Z         ).to_numba(
2025-01-14T13:17:21.0902969Z             macro_atom_state,
2025-01-14T13:17:21.0903191Z             self.line_interaction_type,
2025-01-14T13:17:21.0903262Z         )
2025-01-14T13:17:21.0903361Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0903642Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0903712Z         ]
2025-01-14T13:17:21.0904011Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0904015Z 
2025-01-14T13:17:21.0904164Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0904325Z ______________ ERROR at setup of test_trace_vpacket_within_shell _______________
2025-01-14T13:17:21.0904329Z 
2025-01-14T13:17:21.0904592Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0904878Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0904882Z 
2025-01-14T13:17:21.0904982Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0905065Z         "expected,obtained",
2025-01-14T13:17:21.0905136Z         [
2025-01-14T13:17:21.0905214Z             (
2025-01-14T13:17:21.0905301Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0905393Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0905458Z             ),
2025-01-14T13:17:21.0905530Z             (
2025-01-14T13:17:21.0905614Z                 "shell_id_in_use",
2025-01-14T13:17:21.0905700Z                 "shell_id_to_check",
2025-01-14T13:17:21.0905766Z             ),
2025-01-14T13:17:21.0905837Z             (
2025-01-14T13:17:21.0905908Z                 "r_in_use",
2025-01-14T13:17:21.0905992Z                 "r_to_check",
2025-01-14T13:17:21.0906068Z             ),
2025-01-14T13:17:21.0906175Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0906240Z         ],
2025-01-14T13:17:21.0906311Z     )
2025-01-14T13:17:21.0906472Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0906598Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0906602Z 
2025-01-14T13:17:21.0906827Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0906931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0907267Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0907376Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0907703Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0907808Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0908132Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0908236Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0908459Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0908537Z     sim.iterate(10)
2025-01-14T13:17:21.0908630Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0908787Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0908891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0908895Z 
2025-01-14T13:17:21.0909162Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0909365Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0909596Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0909864Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0910027Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0910263Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0910268Z 
2025-01-14T13:17:21.0910355Z     def initialize_transport_state(
2025-01-14T13:17:21.0910427Z         self,
2025-01-14T13:17:21.0910501Z         simulation_state,
2025-01-14T13:17:21.0910579Z         opacity_state,
2025-01-14T13:17:21.0910653Z         macro_atom_state,
2025-01-14T13:17:21.0910733Z         plasma,
2025-01-14T13:17:21.0910808Z         no_of_packets,
2025-01-14T13:17:21.0910894Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0910966Z         iteration=0,
2025-01-14T13:17:21.0911037Z     ):
2025-01-14T13:17:21.0911159Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0911347Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0911416Z         else:
2025-01-14T13:17:21.0911499Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0911676Z     
2025-01-14T13:17:21.0911820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0911924Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0911989Z         )
2025-01-14T13:17:21.0912058Z     
2025-01-14T13:17:21.0912185Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0912301Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0912457Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0912529Z         else:
2025-01-14T13:17:21.0912612Z             continuum_state = None
2025-01-14T13:17:21.0912716Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0912821Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0912926Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0913029Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0913132Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0913225Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0913327Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0913408Z         ).to_numba(
2025-01-14T13:17:21.0913486Z             macro_atom_state,
2025-01-14T13:17:21.0913577Z             self.line_interaction_type,
2025-01-14T13:17:21.0913642Z         )
2025-01-14T13:17:21.0913746Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0914008Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0914078Z         ]
2025-01-14T13:17:21.0914374Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0914378Z 
2025-01-14T13:17:21.0914531Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0914683Z _____________________ ERROR at setup of test_trace_vpacket _____________________
2025-01-14T13:17:21.0914687Z 
2025-01-14T13:17:21.0914826Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0915114Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0915118Z 
2025-01-14T13:17:21.0915203Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0915287Z         "expected,obtained",
2025-01-14T13:17:21.0915352Z         [
2025-01-14T13:17:21.0915421Z             (
2025-01-14T13:17:21.0915507Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0915597Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0915663Z             ),
2025-01-14T13:17:21.0915733Z             (
2025-01-14T13:17:21.0915808Z                 "shell_id_in_use",
2025-01-14T13:17:21.0915897Z                 "shell_id_to_check",
2025-01-14T13:17:21.0915968Z             ),
2025-01-14T13:17:21.0916039Z             (
2025-01-14T13:17:21.0916111Z                 "r_in_use",
2025-01-14T13:17:21.0916191Z                 "r_to_check",
2025-01-14T13:17:21.0916261Z             ),
2025-01-14T13:17:21.0916488Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0916561Z         ],
2025-01-14T13:17:21.0916625Z     )
2025-01-14T13:17:21.0916793Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0916904Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0916908Z 
2025-01-14T13:17:21.0917131Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0917234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0917567Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0917776Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918106Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0918216Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918540Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0918649Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0918857Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0918935Z     sim.iterate(10)
2025-01-14T13:17:21.0919027Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0919183Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0919289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0919293Z 
2025-01-14T13:17:21.0919561Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0919760Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0919984Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0920261Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0920419Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0920559Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0920563Z 
2025-01-14T13:17:21.0920648Z     def initialize_transport_state(
2025-01-14T13:17:21.0920719Z         self,
2025-01-14T13:17:21.0920793Z         simulation_state,
2025-01-14T13:17:21.0920874Z         opacity_state,
2025-01-14T13:17:21.0920947Z         macro_atom_state,
2025-01-14T13:17:21.0921022Z         plasma,
2025-01-14T13:17:21.0921094Z         no_of_packets,
2025-01-14T13:17:21.0921182Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0921254Z         iteration=0,
2025-01-14T13:17:21.0921325Z     ):
2025-01-14T13:17:21.0921451Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0921544Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0921732Z         else:
2025-01-14T13:17:21.0921808Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0921883Z     
2025-01-14T13:17:21.0922017Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0922115Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0922180Z         )
2025-01-14T13:17:21.0922248Z     
2025-01-14T13:17:21.0922373Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0922488Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0922636Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0922707Z         else:
2025-01-14T13:17:21.0922790Z             continuum_state = None
2025-01-14T13:17:21.0922894Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0923005Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0923095Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0923321Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0923418Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0923514Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0923601Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0923675Z         ).to_numba(
2025-01-14T13:17:21.0923750Z             macro_atom_state,
2025-01-14T13:17:21.0923839Z             self.line_interaction_type,
2025-01-14T13:17:21.0923903Z         )
2025-01-14T13:17:21.0924011Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0924276Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0924474Z         ]
2025-01-14T13:17:21.0924775Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0924785Z 
2025-01-14T13:17:21.0924929Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0925095Z ___________________ ERROR at setup of test_trace_bad_vpacket ___________________
2025-01-14T13:17:21.0925099Z 
2025-01-14T13:17:21.0925234Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.0925521Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.0925525Z 
2025-01-14T13:17:21.0925612Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.0925699Z         "expected,obtained",
2025-01-14T13:17:21.0925765Z         [
2025-01-14T13:17:21.0925836Z             (
2025-01-14T13:17:21.0925925Z                 "interaction_type_in_use",
2025-01-14T13:17:21.0926017Z                 "interaction_type_to_check",
2025-01-14T13:17:21.0926092Z             ),
2025-01-14T13:17:21.0926158Z             (
2025-01-14T13:17:21.0926240Z                 "shell_id_in_use",
2025-01-14T13:17:21.0926318Z                 "shell_id_to_check",
2025-01-14T13:17:21.0926389Z             ),
2025-01-14T13:17:21.0926460Z             (
2025-01-14T13:17:21.0926537Z                 "r_in_use",
2025-01-14T13:17:21.0926609Z                 "r_to_check",
2025-01-14T13:17:21.0926678Z             ),
2025-01-14T13:17:21.0926778Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.0926849Z         ],
2025-01-14T13:17:21.0926916Z     )
2025-01-14T13:17:21.0927081Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.0927191Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0927195Z 
2025-01-14T13:17:21.0927419Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.0927532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0927861Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0927973Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0928298Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0928410Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0928726Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.0928835Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.0929043Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.0929121Z     sim.iterate(10)
2025-01-14T13:17:21.0929214Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0929371Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0929482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0929486Z 
2025-01-14T13:17:21.0929746Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.0930038Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.0930259Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.0930534Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.0930690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.0930825Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0930829Z 
2025-01-14T13:17:21.0930913Z     def initialize_transport_state(
2025-01-14T13:17:21.0930985Z         self,
2025-01-14T13:17:21.0931065Z         simulation_state,
2025-01-14T13:17:21.0931232Z         opacity_state,
2025-01-14T13:17:21.0931315Z         macro_atom_state,
2025-01-14T13:17:21.0931383Z         plasma,
2025-01-14T13:17:21.0931462Z         no_of_packets,
2025-01-14T13:17:21.0931542Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0931725Z         iteration=0,
2025-01-14T13:17:21.0931790Z     ):
2025-01-14T13:17:21.0931917Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0932009Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0932079Z         else:
2025-01-14T13:17:21.0932154Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0932224Z     
2025-01-14T13:17:21.0932356Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0932453Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0932519Z         )
2025-01-14T13:17:21.0932588Z     
2025-01-14T13:17:21.0932712Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0932832Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0932988Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0933054Z         else:
2025-01-14T13:17:21.0933138Z             continuum_state = None
2025-01-14T13:17:21.0933235Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0933350Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0933439Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0933547Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0933642Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0933737Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0933826Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0933898Z         ).to_numba(
2025-01-14T13:17:21.0933975Z             macro_atom_state,
2025-01-14T13:17:21.0934067Z             self.line_interaction_type,
2025-01-14T13:17:21.0934138Z         )
2025-01-14T13:17:21.0934241Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0934515Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0934580Z         ]
2025-01-14T13:17:21.0934886Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0934893Z 
2025-01-14T13:17:21.0935039Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0935233Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-14T13:17:21.0935237Z 
2025-01-14T13:17:21.0935899Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0936255Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0936260Z 
2025-01-14T13:17:21.0936350Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0936488Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0936691Z         """
2025-01-14T13:17:21.0936799Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0936870Z     
2025-01-14T13:17:21.0936941Z         Parameters:
2025-01-14T13:17:21.0937018Z         -----------
2025-01-14T13:17:21.0937156Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0937305Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0937369Z     
2025-01-14T13:17:21.0937442Z         Returns:
2025-01-14T13:17:21.0937512Z         --------
2025-01-14T13:17:21.0937599Z         A TARDIS simulation object.
2025-01-14T13:17:21.0937670Z         """
2025-01-14T13:17:21.0937782Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0938013Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0938147Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0938326Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0938466Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0938568Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0938642Z >       sim = run_tardis(
2025-01-14T13:17:21.0938728Z             config_verysimple,
2025-01-14T13:17:21.0938806Z             atom_data=atomic_data,
2025-01-14T13:17:21.0938878Z         )
2025-01-14T13:17:21.0938882Z 
2025-01-14T13:17:21.0939016Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0939131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0939218Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0939302Z     simulation.run_convergence()
2025-01-14T13:17:21.0939429Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0939566Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0939664Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0939814Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0939928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0939931Z 
2025-01-14T13:17:21.0940193Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0940397Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0940617Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0940895Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0941057Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0941195Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0941199Z 
2025-01-14T13:17:21.0941289Z     def initialize_transport_state(
2025-01-14T13:17:21.0941355Z         self,
2025-01-14T13:17:21.0941435Z         simulation_state,
2025-01-14T13:17:21.0941512Z         opacity_state,
2025-01-14T13:17:21.0941763Z         macro_atom_state,
2025-01-14T13:17:21.0941854Z         plasma,
2025-01-14T13:17:21.0941933Z         no_of_packets,
2025-01-14T13:17:21.0942012Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0942095Z         iteration=0,
2025-01-14T13:17:21.0942161Z     ):
2025-01-14T13:17:21.0942287Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0942385Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0942451Z         else:
2025-01-14T13:17:21.0942540Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0942606Z     
2025-01-14T13:17:21.0942745Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0942844Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0942915Z         )
2025-01-14T13:17:21.0942985Z     
2025-01-14T13:17:21.0943117Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0943355Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0943511Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0943580Z         else:
2025-01-14T13:17:21.0943664Z             continuum_state = None
2025-01-14T13:17:21.0943768Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0943891Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0943980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0944099Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0944203Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0944297Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0944512Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0944586Z         ).to_numba(
2025-01-14T13:17:21.0944672Z             macro_atom_state,
2025-01-14T13:17:21.0944758Z             self.line_interaction_type,
2025-01-14T13:17:21.0944837Z         )
2025-01-14T13:17:21.0944941Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0945220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0945288Z         ]
2025-01-14T13:17:21.0945593Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0945597Z 
2025-01-14T13:17:21.0945752Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0945910Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.0946334Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.0946780Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.0946967Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0947183Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.0965214Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.0965327Z 	
2025-01-14T13:17:21.0965566Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:17:21.0965746Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:17:21.0966253Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.0966484Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.0966596Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.0966701Z 	Starting iteration 1 of 3
2025-01-14T13:17:21.0966902Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:17:21.0966907Z 
2025-01-14T13:17:21.0967588Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0967947Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0967952Z 
2025-01-14T13:17:21.0968044Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0968194Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0968262Z         """
2025-01-14T13:17:21.0968383Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0968449Z     
2025-01-14T13:17:21.0968534Z         Parameters:
2025-01-14T13:17:21.0968607Z         -----------
2025-01-14T13:17:21.0968755Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0968903Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0969178Z     
2025-01-14T13:17:21.0969254Z         Returns:
2025-01-14T13:17:21.0969327Z         --------
2025-01-14T13:17:21.0969420Z         A TARDIS simulation object.
2025-01-14T13:17:21.0969491Z         """
2025-01-14T13:17:21.0969612Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0969737Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0969874Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0970052Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0970194Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0970291Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0970483Z >       sim = run_tardis(
2025-01-14T13:17:21.0970569Z             config_verysimple,
2025-01-14T13:17:21.0970657Z             atom_data=atomic_data,
2025-01-14T13:17:21.0970724Z         )
2025-01-14T13:17:21.0970728Z 
2025-01-14T13:17:21.0970882Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0971006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0971093Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0971185Z     simulation.run_convergence()
2025-01-14T13:17:21.0971303Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0971450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0971685Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0971855Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0971997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0972009Z 
2025-01-14T13:17:21.0972282Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0972494Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0972727Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0973004Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0973171Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0973315Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0973319Z 
2025-01-14T13:17:21.0973409Z     def initialize_transport_state(
2025-01-14T13:17:21.0973483Z         self,
2025-01-14T13:17:21.0973565Z         simulation_state,
2025-01-14T13:17:21.0973644Z         opacity_state,
2025-01-14T13:17:21.0973722Z         macro_atom_state,
2025-01-14T13:17:21.0973798Z         plasma,
2025-01-14T13:17:21.0973875Z         no_of_packets,
2025-01-14T13:17:21.0973963Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0974036Z         iteration=0,
2025-01-14T13:17:21.0974108Z     ):
2025-01-14T13:17:21.0974241Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0974343Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0974415Z         else:
2025-01-14T13:17:21.0974495Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0974567Z     
2025-01-14T13:17:21.0974704Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0974804Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0974872Z         )
2025-01-14T13:17:21.0974943Z     
2025-01-14T13:17:21.0975072Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0975192Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0975344Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0975422Z         else:
2025-01-14T13:17:21.0975505Z             continuum_state = None
2025-01-14T13:17:21.0975612Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0975726Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0975948Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0976059Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0976159Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0976259Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0976348Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0976424Z         ).to_numba(
2025-01-14T13:17:21.0976501Z             macro_atom_state,
2025-01-14T13:17:21.0976595Z             self.line_interaction_type,
2025-01-14T13:17:21.0976661Z         )
2025-01-14T13:17:21.0976768Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0977147Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0977222Z         ]
2025-01-14T13:17:21.0977524Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0977539Z 
2025-01-14T13:17:21.0977689Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0977898Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-14T13:17:21.0977902Z 
2025-01-14T13:17:21.0978573Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0978924Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0978928Z 
2025-01-14T13:17:21.0979021Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0979169Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0979241Z         """
2025-01-14T13:17:21.0979355Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0979430Z     
2025-01-14T13:17:21.0979505Z         Parameters:
2025-01-14T13:17:21.0979585Z         -----------
2025-01-14T13:17:21.0979723Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0979874Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0979940Z     
2025-01-14T13:17:21.0980015Z         Returns:
2025-01-14T13:17:21.0980086Z         --------
2025-01-14T13:17:21.0980175Z         A TARDIS simulation object.
2025-01-14T13:17:21.0980241Z         """
2025-01-14T13:17:21.0980367Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0980488Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0980631Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0980804Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0980941Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0981047Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0981122Z >       sim = run_tardis(
2025-01-14T13:17:21.0981209Z             config_verysimple,
2025-01-14T13:17:21.0981289Z             atom_data=atomic_data,
2025-01-14T13:17:21.0981360Z         )
2025-01-14T13:17:21.0981364Z 
2025-01-14T13:17:21.0981501Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0981832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0981930Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0982023Z     simulation.run_convergence()
2025-01-14T13:17:21.0982138Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0982286Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0982388Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0982539Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0982649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0982784Z 
2025-01-14T13:17:21.0983058Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0983268Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0983487Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0983763Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0983923Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0984072Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0984077Z 
2025-01-14T13:17:21.0984299Z     def initialize_transport_state(
2025-01-14T13:17:21.0984375Z         self,
2025-01-14T13:17:21.0984460Z         simulation_state,
2025-01-14T13:17:21.0984535Z         opacity_state,
2025-01-14T13:17:21.0984615Z         macro_atom_state,
2025-01-14T13:17:21.0984690Z         plasma,
2025-01-14T13:17:21.0984771Z         no_of_packets,
2025-01-14T13:17:21.0984853Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0984932Z         iteration=0,
2025-01-14T13:17:21.0984998Z     ):
2025-01-14T13:17:21.0985129Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0985227Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0985299Z         else:
2025-01-14T13:17:21.0985376Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0985455Z     
2025-01-14T13:17:21.0985591Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0985693Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0985762Z         )
2025-01-14T13:17:21.0985838Z     
2025-01-14T13:17:21.0985970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0986085Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0986240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0986314Z         else:
2025-01-14T13:17:21.0986401Z             continuum_state = None
2025-01-14T13:17:21.0986500Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0986617Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0986711Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0986823Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0986921Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0987019Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0987115Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0987192Z         ).to_numba(
2025-01-14T13:17:21.0987278Z             macro_atom_state,
2025-01-14T13:17:21.0987367Z             self.line_interaction_type,
2025-01-14T13:17:21.0987440Z         )
2025-01-14T13:17:21.0987542Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0987819Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0987887Z         ]
2025-01-14T13:17:21.0988193Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0988198Z 
2025-01-14T13:17:21.0988346Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0988602Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-14T13:17:21.0988606Z 
2025-01-14T13:17:21.0989277Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.0989626Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.0989724Z 
2025-01-14T13:17:21.0989820Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.0989960Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.0990032Z         """
2025-01-14T13:17:21.0990142Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.0990212Z     
2025-01-14T13:17:21.0990288Z         Parameters:
2025-01-14T13:17:21.0990365Z         -----------
2025-01-14T13:17:21.0990502Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.0990658Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.0990731Z     
2025-01-14T13:17:21.0990801Z         Returns:
2025-01-14T13:17:21.0990875Z         --------
2025-01-14T13:17:21.0991034Z         A TARDIS simulation object.
2025-01-14T13:17:21.0991116Z         """
2025-01-14T13:17:21.0991231Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.0991359Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.0991494Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.0991778Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.0991913Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.0992013Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.0992089Z >       sim = run_tardis(
2025-01-14T13:17:21.0992174Z             config_verysimple,
2025-01-14T13:17:21.0992254Z             atom_data=atomic_data,
2025-01-14T13:17:21.0992326Z         )
2025-01-14T13:17:21.0992329Z 
2025-01-14T13:17:21.0992469Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.0992584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0992675Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.0992760Z     simulation.run_convergence()
2025-01-14T13:17:21.0992877Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.0993019Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.0993120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.0993272Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.0993382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.0993387Z 
2025-01-14T13:17:21.0993650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.0993855Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.0994080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.0994356Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.0994518Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.0994656Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.0994663Z 
2025-01-14T13:17:21.0994755Z     def initialize_transport_state(
2025-01-14T13:17:21.0994824Z         self,
2025-01-14T13:17:21.0994906Z         simulation_state,
2025-01-14T13:17:21.0994980Z         opacity_state,
2025-01-14T13:17:21.0995058Z         macro_atom_state,
2025-01-14T13:17:21.0995130Z         plasma,
2025-01-14T13:17:21.0995208Z         no_of_packets,
2025-01-14T13:17:21.0995291Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.0995370Z         iteration=0,
2025-01-14T13:17:21.0995442Z     ):
2025-01-14T13:17:21.0995567Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.0995666Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.0995737Z         else:
2025-01-14T13:17:21.0995819Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.0995885Z     
2025-01-14T13:17:21.0996021Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.0996117Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.0996313Z         )
2025-01-14T13:17:21.0996379Z     
2025-01-14T13:17:21.0996511Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.0996623Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.0996780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.0996849Z         else:
2025-01-14T13:17:21.0996934Z             continuum_state = None
2025-01-14T13:17:21.0997034Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.0997152Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.0997247Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.0997454Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.0997561Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.0997654Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.0997748Z             continuum_state=continuum_state,
2025-01-14T13:17:21.0997824Z         ).to_numba(
2025-01-14T13:17:21.0997906Z             macro_atom_state,
2025-01-14T13:17:21.0997994Z             self.line_interaction_type,
2025-01-14T13:17:21.0998066Z         )
2025-01-14T13:17:21.0998166Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.0998441Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.0998510Z         ]
2025-01-14T13:17:21.0998813Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.0998818Z 
2025-01-14T13:17:21.0998972Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.0999231Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-14T13:17:21.0999235Z 
2025-01-14T13:17:21.0999900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1000252Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1000256Z 
2025-01-14T13:17:21.1000348Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1000489Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1000557Z         """
2025-01-14T13:17:21.1000670Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1000736Z     
2025-01-14T13:17:21.1000814Z         Parameters:
2025-01-14T13:17:21.1000891Z         -----------
2025-01-14T13:17:21.1001032Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1001174Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1001244Z     
2025-01-14T13:17:21.1001319Z         Returns:
2025-01-14T13:17:21.1001395Z         --------
2025-01-14T13:17:21.1001479Z         A TARDIS simulation object.
2025-01-14T13:17:21.1001688Z         """
2025-01-14T13:17:21.1001889Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1002019Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1002149Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1002326Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1002460Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1002554Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1002633Z >       sim = run_tardis(
2025-01-14T13:17:21.1002720Z             config_verysimple,
2025-01-14T13:17:21.1002805Z             atom_data=atomic_data,
2025-01-14T13:17:21.1002872Z         )
2025-01-14T13:17:21.1002876Z 
2025-01-14T13:17:21.1003026Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1003282Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1003381Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1003467Z     simulation.run_convergence()
2025-01-14T13:17:21.1003583Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1003721Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1003828Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1003997Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1004103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1004107Z 
2025-01-14T13:17:21.1004482Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1004689Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1004914Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1005193Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1005359Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1005494Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1005503Z 
2025-01-14T13:17:21.1005589Z     def initialize_transport_state(
2025-01-14T13:17:21.1005671Z         self,
2025-01-14T13:17:21.1005749Z         simulation_state,
2025-01-14T13:17:21.1005827Z         opacity_state,
2025-01-14T13:17:21.1005900Z         macro_atom_state,
2025-01-14T13:17:21.1005974Z         plasma,
2025-01-14T13:17:21.1006053Z         no_of_packets,
2025-01-14T13:17:21.1006148Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1006222Z         iteration=0,
2025-01-14T13:17:21.1006293Z     ):
2025-01-14T13:17:21.1006415Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1006524Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1006593Z         else:
2025-01-14T13:17:21.1006676Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1006742Z     
2025-01-14T13:17:21.1006879Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1006980Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1007054Z         )
2025-01-14T13:17:21.1007125Z     
2025-01-14T13:17:21.1007251Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1007370Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1007520Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1007593Z         else:
2025-01-14T13:17:21.1007678Z             continuum_state = None
2025-01-14T13:17:21.1007786Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1007893Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1007989Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1008095Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1008197Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1008290Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1008385Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1008460Z         ).to_numba(
2025-01-14T13:17:21.1008538Z             macro_atom_state,
2025-01-14T13:17:21.1008630Z             self.line_interaction_type,
2025-01-14T13:17:21.1008698Z         )
2025-01-14T13:17:21.1008811Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1009083Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1009161Z         ]
2025-01-14T13:17:21.1009465Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1009469Z 
2025-01-14T13:17:21.1009713Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1009974Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-14T13:17:21.1009979Z 
2025-01-14T13:17:21.1010643Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1010993Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1010997Z 
2025-01-14T13:17:21.1011084Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1011385Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1011458Z         """
2025-01-14T13:17:21.1011894Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1011964Z     
2025-01-14T13:17:21.1012051Z         Parameters:
2025-01-14T13:17:21.1012123Z         -----------
2025-01-14T13:17:21.1012266Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1012415Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1012489Z     
2025-01-14T13:17:21.1012564Z         Returns:
2025-01-14T13:17:21.1012633Z         --------
2025-01-14T13:17:21.1012723Z         A TARDIS simulation object.
2025-01-14T13:17:21.1012789Z         """
2025-01-14T13:17:21.1012906Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1013027Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1013163Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1013341Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1013477Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1013575Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1013660Z >       sim = run_tardis(
2025-01-14T13:17:21.1013740Z             config_verysimple,
2025-01-14T13:17:21.1013826Z             atom_data=atomic_data,
2025-01-14T13:17:21.1013893Z         )
2025-01-14T13:17:21.1013902Z 
2025-01-14T13:17:21.1014036Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1014151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1014235Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1014327Z     simulation.run_convergence()
2025-01-14T13:17:21.1014440Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1014582Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1014680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1014835Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1014943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1014950Z 
2025-01-14T13:17:21.1015216Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1015421Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1015641Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1015914Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1016073Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1016209Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1016213Z 
2025-01-14T13:17:21.1016307Z     def initialize_transport_state(
2025-01-14T13:17:21.1016387Z         self,
2025-01-14T13:17:21.1016466Z         simulation_state,
2025-01-14T13:17:21.1016547Z         opacity_state,
2025-01-14T13:17:21.1016622Z         macro_atom_state,
2025-01-14T13:17:21.1016819Z         plasma,
2025-01-14T13:17:21.1016893Z         no_of_packets,
2025-01-14T13:17:21.1016979Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1017057Z         iteration=0,
2025-01-14T13:17:21.1017123Z     ):
2025-01-14T13:17:21.1017248Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1017342Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1017416Z         else:
2025-01-14T13:17:21.1017493Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1017567Z     
2025-01-14T13:17:21.1017698Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1017796Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1017873Z         )
2025-01-14T13:17:21.1017943Z     
2025-01-14T13:17:21.1018189Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1018309Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1018458Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1018537Z         else:
2025-01-14T13:17:21.1018618Z             continuum_state = None
2025-01-14T13:17:21.1018724Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1018835Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1018925Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1019032Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1019131Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1019232Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1019323Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1019401Z         ).to_numba(
2025-01-14T13:17:21.1019484Z             macro_atom_state,
2025-01-14T13:17:21.1019576Z             self.line_interaction_type,
2025-01-14T13:17:21.1019644Z         )
2025-01-14T13:17:21.1019752Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1020024Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1020105Z         ]
2025-01-14T13:17:21.1020411Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1020415Z 
2025-01-14T13:17:21.1020564Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1020820Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-14T13:17:21.1020824Z 
2025-01-14T13:17:21.1021493Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1022044Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1022057Z 
2025-01-14T13:17:21.1022155Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1022297Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1022370Z         """
2025-01-14T13:17:21.1022487Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1022557Z     
2025-01-14T13:17:21.1022630Z         Parameters:
2025-01-14T13:17:21.1022706Z         -----------
2025-01-14T13:17:21.1022846Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1022996Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1023062Z     
2025-01-14T13:17:21.1023138Z         Returns:
2025-01-14T13:17:21.1023210Z         --------
2025-01-14T13:17:21.1023302Z         A TARDIS simulation object.
2025-01-14T13:17:21.1023368Z         """
2025-01-14T13:17:21.1023488Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1023610Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1023888Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1024080Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1024219Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1024320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1024396Z >       sim = run_tardis(
2025-01-14T13:17:21.1024483Z             config_verysimple,
2025-01-14T13:17:21.1024563Z             atom_data=atomic_data,
2025-01-14T13:17:21.1024634Z         )
2025-01-14T13:17:21.1024638Z 
2025-01-14T13:17:21.1024776Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1025008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1025099Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1025192Z     simulation.run_convergence()
2025-01-14T13:17:21.1025309Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1025454Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1025565Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1025720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1025833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1025837Z 
2025-01-14T13:17:21.1026104Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1026312Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1026535Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1026818Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1026979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1027121Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1027129Z 
2025-01-14T13:17:21.1027222Z     def initialize_transport_state(
2025-01-14T13:17:21.1027292Z         self,
2025-01-14T13:17:21.1027383Z         simulation_state,
2025-01-14T13:17:21.1027459Z         opacity_state,
2025-01-14T13:17:21.1027549Z         macro_atom_state,
2025-01-14T13:17:21.1027620Z         plasma,
2025-01-14T13:17:21.1027698Z         no_of_packets,
2025-01-14T13:17:21.1027787Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1027868Z         iteration=0,
2025-01-14T13:17:21.1027935Z     ):
2025-01-14T13:17:21.1028066Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1028162Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1028241Z         else:
2025-01-14T13:17:21.1028334Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1028405Z     
2025-01-14T13:17:21.1028539Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1028639Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1028723Z         )
2025-01-14T13:17:21.1028790Z     
2025-01-14T13:17:21.1028925Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1029041Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1029201Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1029268Z         else:
2025-01-14T13:17:21.1029355Z             continuum_state = None
2025-01-14T13:17:21.1029455Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1029568Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1029660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1029771Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1029875Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1029973Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1030069Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1030236Z         ).to_numba(
2025-01-14T13:17:21.1030320Z             macro_atom_state,
2025-01-14T13:17:21.1030408Z             self.line_interaction_type,
2025-01-14T13:17:21.1030479Z         )
2025-01-14T13:17:21.1030579Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1030853Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1030920Z         ]
2025-01-14T13:17:21.1031227Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1031232Z 
2025-01-14T13:17:21.1031380Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1031859Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-14T13:17:21.1031865Z 
2025-01-14T13:17:21.1032541Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1032895Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1032899Z 
2025-01-14T13:17:21.1032999Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1033139Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1033213Z         """
2025-01-14T13:17:21.1033324Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1033398Z     
2025-01-14T13:17:21.1033471Z         Parameters:
2025-01-14T13:17:21.1033548Z         -----------
2025-01-14T13:17:21.1033690Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1033837Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1033909Z     
2025-01-14T13:17:21.1033978Z         Returns:
2025-01-14T13:17:21.1034060Z         --------
2025-01-14T13:17:21.1034144Z         A TARDIS simulation object.
2025-01-14T13:17:21.1034216Z         """
2025-01-14T13:17:21.1034329Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1034454Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1034592Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1034774Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1034908Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1035008Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1035083Z >       sim = run_tardis(
2025-01-14T13:17:21.1035178Z             config_verysimple,
2025-01-14T13:17:21.1035259Z             atom_data=atomic_data,
2025-01-14T13:17:21.1035331Z         )
2025-01-14T13:17:21.1035335Z 
2025-01-14T13:17:21.1035479Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1035598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1035695Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1035783Z     simulation.run_convergence()
2025-01-14T13:17:21.1035903Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1036040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1036138Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1036290Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1036407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1036412Z 
2025-01-14T13:17:21.1036680Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1036887Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1037111Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1037523Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1037688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1037821Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1037825Z 
2025-01-14T13:17:21.1037915Z     def initialize_transport_state(
2025-01-14T13:17:21.1037983Z         self,
2025-01-14T13:17:21.1038066Z         simulation_state,
2025-01-14T13:17:21.1038146Z         opacity_state,
2025-01-14T13:17:21.1038228Z         macro_atom_state,
2025-01-14T13:17:21.1038299Z         plasma,
2025-01-14T13:17:21.1038376Z         no_of_packets,
2025-01-14T13:17:21.1038541Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1038625Z         iteration=0,
2025-01-14T13:17:21.1038700Z     ):
2025-01-14T13:17:21.1038825Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1038922Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1038996Z         else:
2025-01-14T13:17:21.1039078Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1039143Z     
2025-01-14T13:17:21.1039280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1039373Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1039445Z         )
2025-01-14T13:17:21.1039510Z     
2025-01-14T13:17:21.1039642Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1039754Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1039920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1039989Z         else:
2025-01-14T13:17:21.1040081Z             continuum_state = None
2025-01-14T13:17:21.1040192Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1040301Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1040398Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1040506Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1040606Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1040704Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1040800Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1040872Z         ).to_numba(
2025-01-14T13:17:21.1040955Z             macro_atom_state,
2025-01-14T13:17:21.1041041Z             self.line_interaction_type,
2025-01-14T13:17:21.1041120Z         )
2025-01-14T13:17:21.1041221Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1041496Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1041668Z         ]
2025-01-14T13:17:21.1041970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1041974Z 
2025-01-14T13:17:21.1042129Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1042393Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-14T13:17:21.1042397Z 
2025-01-14T13:17:21.1043066Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1043414Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1043423Z 
2025-01-14T13:17:21.1043509Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1043655Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1043723Z         """
2025-01-14T13:17:21.1043836Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1043902Z     
2025-01-14T13:17:21.1043981Z         Parameters:
2025-01-14T13:17:21.1044178Z         -----------
2025-01-14T13:17:21.1044320Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1044461Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1044532Z     
2025-01-14T13:17:21.1044604Z         Returns:
2025-01-14T13:17:21.1044679Z         --------
2025-01-14T13:17:21.1044765Z         A TARDIS simulation object.
2025-01-14T13:17:21.1044836Z         """
2025-01-14T13:17:21.1044950Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1045080Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1045214Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1045493Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1045634Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1045729Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1045815Z >       sim = run_tardis(
2025-01-14T13:17:21.1045895Z             config_verysimple,
2025-01-14T13:17:21.1045979Z             atom_data=atomic_data,
2025-01-14T13:17:21.1046047Z         )
2025-01-14T13:17:21.1046051Z 
2025-01-14T13:17:21.1046189Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1046299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1046389Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1046473Z     simulation.run_convergence()
2025-01-14T13:17:21.1046590Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1046735Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1046835Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1046991Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1047097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1047107Z 
2025-01-14T13:17:21.1047374Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1047578Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1047804Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1048075Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1048240Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1048378Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1048382Z 
2025-01-14T13:17:21.1048468Z     def initialize_transport_state(
2025-01-14T13:17:21.1048547Z         self,
2025-01-14T13:17:21.1048624Z         simulation_state,
2025-01-14T13:17:21.1048702Z         opacity_state,
2025-01-14T13:17:21.1048777Z         macro_atom_state,
2025-01-14T13:17:21.1048852Z         plasma,
2025-01-14T13:17:21.1048930Z         no_of_packets,
2025-01-14T13:17:21.1049015Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1049087Z         iteration=0,
2025-01-14T13:17:21.1049159Z     ):
2025-01-14T13:17:21.1049283Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1049380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1049451Z         else:
2025-01-14T13:17:21.1049534Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1049600Z     
2025-01-14T13:17:21.1049736Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1049837Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1049904Z         )
2025-01-14T13:17:21.1049974Z     
2025-01-14T13:17:21.1050103Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1050220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1050372Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1050539Z         else:
2025-01-14T13:17:21.1050622Z             continuum_state = None
2025-01-14T13:17:21.1050729Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1050838Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1050938Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1051042Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1051145Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1051237Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1051333Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1051408Z         ).to_numba(
2025-01-14T13:17:21.1051487Z             macro_atom_state,
2025-01-14T13:17:21.1051788Z             self.line_interaction_type,
2025-01-14T13:17:21.1051862Z         )
2025-01-14T13:17:21.1051972Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1052244Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1052325Z         ]
2025-01-14T13:17:21.1052641Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1052645Z 
2025-01-14T13:17:21.1052809Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1053058Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-14T13:17:21.1053068Z 
2025-01-14T13:17:21.1053735Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1054097Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1054100Z 
2025-01-14T13:17:21.1054195Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1054340Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1054409Z         """
2025-01-14T13:17:21.1054526Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1054592Z     
2025-01-14T13:17:21.1054673Z         Parameters:
2025-01-14T13:17:21.1054745Z         -----------
2025-01-14T13:17:21.1054889Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1055041Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1055109Z     
2025-01-14T13:17:21.1055188Z         Returns:
2025-01-14T13:17:21.1055258Z         --------
2025-01-14T13:17:21.1055349Z         A TARDIS simulation object.
2025-01-14T13:17:21.1055420Z         """
2025-01-14T13:17:21.1055542Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1055666Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1055804Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1055982Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1056118Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1056212Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1056296Z >       sim = run_tardis(
2025-01-14T13:17:21.1056376Z             config_verysimple,
2025-01-14T13:17:21.1056463Z             atom_data=atomic_data,
2025-01-14T13:17:21.1056535Z         )
2025-01-14T13:17:21.1056539Z 
2025-01-14T13:17:21.1056671Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1056788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1056879Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1056969Z     simulation.run_convergence()
2025-01-14T13:17:21.1057085Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1057226Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1057441Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1057600Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1057708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1057712Z 
2025-01-14T13:17:21.1057983Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1058190Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1058408Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1058760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1058922Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1059063Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1059072Z 
2025-01-14T13:17:21.1059159Z     def initialize_transport_state(
2025-01-14T13:17:21.1059233Z         self,
2025-01-14T13:17:21.1059309Z         simulation_state,
2025-01-14T13:17:21.1059392Z         opacity_state,
2025-01-14T13:17:21.1059468Z         macro_atom_state,
2025-01-14T13:17:21.1059548Z         plasma,
2025-01-14T13:17:21.1059627Z         no_of_packets,
2025-01-14T13:17:21.1059708Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1059789Z         iteration=0,
2025-01-14T13:17:21.1059855Z     ):
2025-01-14T13:17:21.1059986Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1060081Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1060155Z         else:
2025-01-14T13:17:21.1060238Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1060309Z     
2025-01-14T13:17:21.1060444Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1060547Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1060616Z         )
2025-01-14T13:17:21.1060694Z     
2025-01-14T13:17:21.1060821Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1060942Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1061094Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1061169Z         else:
2025-01-14T13:17:21.1061257Z             continuum_state = None
2025-01-14T13:17:21.1061358Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1061479Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1061730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1061873Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1061980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1062080Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1062173Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1062251Z         ).to_numba(
2025-01-14T13:17:21.1062333Z             macro_atom_state,
2025-01-14T13:17:21.1062426Z             self.line_interaction_type,
2025-01-14T13:17:21.1062493Z         )
2025-01-14T13:17:21.1062601Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1062876Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1062950Z         ]
2025-01-14T13:17:21.1063257Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1063261Z 
2025-01-14T13:17:21.1063411Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1063677Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-14T13:17:21.1063681Z 
2025-01-14T13:17:21.1064342Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1064851Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1064855Z 
2025-01-14T13:17:21.1064957Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1065098Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1065173Z         """
2025-01-14T13:17:21.1065284Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1065363Z     
2025-01-14T13:17:21.1065439Z         Parameters:
2025-01-14T13:17:21.1065519Z         -----------
2025-01-14T13:17:21.1065764Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1065920Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1065987Z     
2025-01-14T13:17:21.1066064Z         Returns:
2025-01-14T13:17:21.1066136Z         --------
2025-01-14T13:17:21.1066240Z         A TARDIS simulation object.
2025-01-14T13:17:21.1066309Z         """
2025-01-14T13:17:21.1066431Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1066560Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1066692Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1066872Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1067008Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1067109Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1067185Z >       sim = run_tardis(
2025-01-14T13:17:21.1067272Z             config_verysimple,
2025-01-14T13:17:21.1067358Z             atom_data=atomic_data,
2025-01-14T13:17:21.1067431Z         )
2025-01-14T13:17:21.1067435Z 
2025-01-14T13:17:21.1067569Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1067685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1067775Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1067867Z     simulation.run_convergence()
2025-01-14T13:17:21.1067987Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1068125Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1068225Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1068378Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1068489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1068493Z 
2025-01-14T13:17:21.1068760Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1068969Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1069188Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1069468Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1069636Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1069774Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1069778Z 
2025-01-14T13:17:21.1069870Z     def initialize_transport_state(
2025-01-14T13:17:21.1069937Z         self,
2025-01-14T13:17:21.1070020Z         simulation_state,
2025-01-14T13:17:21.1070093Z         opacity_state,
2025-01-14T13:17:21.1070173Z         macro_atom_state,
2025-01-14T13:17:21.1070245Z         plasma,
2025-01-14T13:17:21.1070324Z         no_of_packets,
2025-01-14T13:17:21.1070405Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1070487Z         iteration=0,
2025-01-14T13:17:21.1070554Z     ):
2025-01-14T13:17:21.1070683Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1070777Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1070944Z         else:
2025-01-14T13:17:21.1071024Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1071096Z     
2025-01-14T13:17:21.1071233Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1071328Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1071409Z         )
2025-01-14T13:17:21.1071477Z     
2025-01-14T13:17:21.1071711Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1071833Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1072029Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1072099Z         else:
2025-01-14T13:17:21.1072187Z             continuum_state = None
2025-01-14T13:17:21.1072405Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1072522Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1072614Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1072727Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1072833Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1072939Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1073040Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1073119Z         ).to_numba(
2025-01-14T13:17:21.1073206Z             macro_atom_state,
2025-01-14T13:17:21.1073296Z             self.line_interaction_type,
2025-01-14T13:17:21.1073368Z         )
2025-01-14T13:17:21.1073469Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1073745Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1073812Z         ]
2025-01-14T13:17:21.1074128Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1074132Z 
2025-01-14T13:17:21.1074279Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1074550Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-14T13:17:21.1074554Z 
2025-01-14T13:17:21.1075229Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1075582Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1075587Z 
2025-01-14T13:17:21.1075688Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1075832Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1075910Z         """
2025-01-14T13:17:21.1076025Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1076099Z     
2025-01-14T13:17:21.1076173Z         Parameters:
2025-01-14T13:17:21.1076259Z         -----------
2025-01-14T13:17:21.1076406Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1076548Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1076623Z     
2025-01-14T13:17:21.1076693Z         Returns:
2025-01-14T13:17:21.1076780Z         --------
2025-01-14T13:17:21.1076872Z         A TARDIS simulation object.
2025-01-14T13:17:21.1076948Z         """
2025-01-14T13:17:21.1077063Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1077194Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1077324Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1077515Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1077650Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1077752Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1077828Z >       sim = run_tardis(
2025-01-14T13:17:21.1078039Z             config_verysimple,
2025-01-14T13:17:21.1078127Z             atom_data=atomic_data,
2025-01-14T13:17:21.1078194Z         )
2025-01-14T13:17:21.1078197Z 
2025-01-14T13:17:21.1078337Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1078447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1078538Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1078622Z     simulation.run_convergence()
2025-01-14T13:17:21.1078740Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1078878Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1078978Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1079203Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1079326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1079330Z 
2025-01-14T13:17:21.1079602Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1079809Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1080032Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1080304Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1080466Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1080610Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1080614Z 
2025-01-14T13:17:21.1080709Z     def initialize_transport_state(
2025-01-14T13:17:21.1080778Z         self,
2025-01-14T13:17:21.1080866Z         simulation_state,
2025-01-14T13:17:21.1080942Z         opacity_state,
2025-01-14T13:17:21.1081022Z         macro_atom_state,
2025-01-14T13:17:21.1081099Z         plasma,
2025-01-14T13:17:21.1081173Z         no_of_packets,
2025-01-14T13:17:21.1081273Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1081348Z         iteration=0,
2025-01-14T13:17:21.1081428Z     ):
2025-01-14T13:17:21.1081648Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1081752Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1081819Z         else:
2025-01-14T13:17:21.1081903Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1081970Z     
2025-01-14T13:17:21.1082108Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1082202Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1082276Z         )
2025-01-14T13:17:21.1082346Z     
2025-01-14T13:17:21.1082481Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1082592Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1082752Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1082826Z         else:
2025-01-14T13:17:21.1082911Z             continuum_state = None
2025-01-14T13:17:21.1083017Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1083125Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1083221Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1083326Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1083429Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1083522Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1083619Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1083693Z         ).to_numba(
2025-01-14T13:17:21.1083776Z             macro_atom_state,
2025-01-14T13:17:21.1083868Z             self.line_interaction_type,
2025-01-14T13:17:21.1083942Z         )
2025-01-14T13:17:21.1084041Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1084318Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1084720Z         ]
2025-01-14T13:17:21.1085023Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1085027Z 
2025-01-14T13:17:21.1085179Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1085430Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-14T13:17:21.1085434Z 
2025-01-14T13:17:21.1086100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1086578Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1086583Z 
2025-01-14T13:17:21.1086674Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1086830Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1086898Z         """
2025-01-14T13:17:21.1087016Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1087086Z     
2025-01-14T13:17:21.1087165Z         Parameters:
2025-01-14T13:17:21.1087238Z         -----------
2025-01-14T13:17:21.1087383Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1087524Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1087598Z     
2025-01-14T13:17:21.1087669Z         Returns:
2025-01-14T13:17:21.1087748Z         --------
2025-01-14T13:17:21.1087833Z         A TARDIS simulation object.
2025-01-14T13:17:21.1087910Z         """
2025-01-14T13:17:21.1088029Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1088158Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1088295Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1088475Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1088613Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1088707Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1088788Z >       sim = run_tardis(
2025-01-14T13:17:21.1088868Z             config_verysimple,
2025-01-14T13:17:21.1088953Z             atom_data=atomic_data,
2025-01-14T13:17:21.1089021Z         )
2025-01-14T13:17:21.1089024Z 
2025-01-14T13:17:21.1089164Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1089271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1089369Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1089459Z     simulation.run_convergence()
2025-01-14T13:17:21.1089573Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1089715Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1089812Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1089966Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1090069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1090073Z 
2025-01-14T13:17:21.1090341Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1090543Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1090769Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1091039Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1091207Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1091352Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1091356Z 
2025-01-14T13:17:21.1091531Z     def initialize_transport_state(
2025-01-14T13:17:21.1091701Z         self,
2025-01-14T13:17:21.1091781Z         simulation_state,
2025-01-14T13:17:21.1091860Z         opacity_state,
2025-01-14T13:17:21.1091935Z         macro_atom_state,
2025-01-14T13:17:21.1092010Z         plasma,
2025-01-14T13:17:21.1092084Z         no_of_packets,
2025-01-14T13:17:21.1092172Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1092244Z         iteration=0,
2025-01-14T13:17:21.1092315Z     ):
2025-01-14T13:17:21.1092438Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1092538Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1092605Z         else:
2025-01-14T13:17:21.1092690Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1092874Z     
2025-01-14T13:17:21.1093009Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1093111Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1093178Z         )
2025-01-14T13:17:21.1093256Z     
2025-01-14T13:17:21.1093382Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1093498Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1093650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1093724Z         else:
2025-01-14T13:17:21.1093807Z             continuum_state = None
2025-01-14T13:17:21.1093912Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1094022Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1094120Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1094225Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1094332Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1094430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1094522Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1094601Z         ).to_numba(
2025-01-14T13:17:21.1094679Z             macro_atom_state,
2025-01-14T13:17:21.1094776Z             self.line_interaction_type,
2025-01-14T13:17:21.1094844Z         )
2025-01-14T13:17:21.1094949Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1095221Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1095297Z         ]
2025-01-14T13:17:21.1095595Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1095599Z 
2025-01-14T13:17:21.1095753Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1096019Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-14T13:17:21.1096024Z 
2025-01-14T13:17:21.1096682Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1097035Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1097039Z 
2025-01-14T13:17:21.1097125Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1097267Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1097333Z         """
2025-01-14T13:17:21.1097446Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1097512Z     
2025-01-14T13:17:21.1097589Z         Parameters:
2025-01-14T13:17:21.1097665Z         -----------
2025-01-14T13:17:21.1097800Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1097950Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1098019Z     
2025-01-14T13:17:21.1098092Z         Returns:
2025-01-14T13:17:21.1098161Z         --------
2025-01-14T13:17:21.1098370Z         A TARDIS simulation object.
2025-01-14T13:17:21.1098438Z         """
2025-01-14T13:17:21.1098557Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1098676Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1098809Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1098981Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1099118Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1099214Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1099293Z >       sim = run_tardis(
2025-01-14T13:17:21.1099378Z             config_verysimple,
2025-01-14T13:17:21.1099534Z             atom_data=atomic_data,
2025-01-14T13:17:21.1099608Z         )
2025-01-14T13:17:21.1099612Z 
2025-01-14T13:17:21.1099746Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1099860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1099949Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1100041Z     simulation.run_convergence()
2025-01-14T13:17:21.1100154Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1100297Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1100391Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1100546Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1100652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1100661Z 
2025-01-14T13:17:21.1100924Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1101137Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1101360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1101815Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1101987Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1102127Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1102131Z 
2025-01-14T13:17:21.1102217Z     def initialize_transport_state(
2025-01-14T13:17:21.1102290Z         self,
2025-01-14T13:17:21.1102368Z         simulation_state,
2025-01-14T13:17:21.1102448Z         opacity_state,
2025-01-14T13:17:21.1102533Z         macro_atom_state,
2025-01-14T13:17:21.1102604Z         plasma,
2025-01-14T13:17:21.1102682Z         no_of_packets,
2025-01-14T13:17:21.1102761Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1102843Z         iteration=0,
2025-01-14T13:17:21.1102910Z     ):
2025-01-14T13:17:21.1103038Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1103131Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1103205Z         else:
2025-01-14T13:17:21.1103286Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1103356Z     
2025-01-14T13:17:21.1103488Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1103588Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1103656Z         )
2025-01-14T13:17:21.1103736Z     
2025-01-14T13:17:21.1103864Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1103980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1104137Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1104206Z         else:
2025-01-14T13:17:21.1104295Z             continuum_state = None
2025-01-14T13:17:21.1104397Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1104507Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1104596Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1104704Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1104933Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1105033Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1105123Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1105202Z         ).to_numba(
2025-01-14T13:17:21.1105281Z             macro_atom_state,
2025-01-14T13:17:21.1105374Z             self.line_interaction_type,
2025-01-14T13:17:21.1105442Z         )
2025-01-14T13:17:21.1105548Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1105822Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1105889Z         ]
2025-01-14T13:17:21.1106293Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1106298Z 
2025-01-14T13:17:21.1106445Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1106709Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-14T13:17:21.1106719Z 
2025-01-14T13:17:21.1107372Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1107723Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1107727Z 
2025-01-14T13:17:21.1107818Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1107956Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1108037Z         """
2025-01-14T13:17:21.1108146Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1108217Z     
2025-01-14T13:17:21.1108290Z         Parameters:
2025-01-14T13:17:21.1108366Z         -----------
2025-01-14T13:17:21.1108507Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1108658Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1108725Z     
2025-01-14T13:17:21.1108801Z         Returns:
2025-01-14T13:17:21.1108872Z         --------
2025-01-14T13:17:21.1108960Z         A TARDIS simulation object.
2025-01-14T13:17:21.1109027Z         """
2025-01-14T13:17:21.1109148Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1109277Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1109407Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1109590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1109727Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1109827Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1109902Z >       sim = run_tardis(
2025-01-14T13:17:21.1109991Z             config_verysimple,
2025-01-14T13:17:21.1110071Z             atom_data=atomic_data,
2025-01-14T13:17:21.1110143Z         )
2025-01-14T13:17:21.1110147Z 
2025-01-14T13:17:21.1110281Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1110395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1110484Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1110571Z     simulation.run_convergence()
2025-01-14T13:17:21.1110688Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1110824Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1110922Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1111074Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1111186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1111190Z 
2025-01-14T13:17:21.1111451Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1111870Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1112091Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1112367Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1112533Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1112665Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1112669Z 
2025-01-14T13:17:21.1112759Z     def initialize_transport_state(
2025-01-14T13:17:21.1112826Z         self,
2025-01-14T13:17:21.1113041Z         simulation_state,
2025-01-14T13:17:21.1113125Z         opacity_state,
2025-01-14T13:17:21.1113207Z         macro_atom_state,
2025-01-14T13:17:21.1113276Z         plasma,
2025-01-14T13:17:21.1113354Z         no_of_packets,
2025-01-14T13:17:21.1113442Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1113519Z         iteration=0,
2025-01-14T13:17:21.1113585Z     ):
2025-01-14T13:17:21.1113714Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1113810Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1113883Z         else:
2025-01-14T13:17:21.1113966Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1114032Z     
2025-01-14T13:17:21.1114170Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1114266Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1114337Z         )
2025-01-14T13:17:21.1114403Z     
2025-01-14T13:17:21.1114535Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1114653Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1114810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1114879Z         else:
2025-01-14T13:17:21.1114966Z             continuum_state = None
2025-01-14T13:17:21.1115071Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1115182Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1115271Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1115383Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1115486Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1115577Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1115672Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1115743Z         ).to_numba(
2025-01-14T13:17:21.1115826Z             macro_atom_state,
2025-01-14T13:17:21.1115913Z             self.line_interaction_type,
2025-01-14T13:17:21.1115989Z         )
2025-01-14T13:17:21.1116089Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1116366Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1116438Z         ]
2025-01-14T13:17:21.1116741Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1116745Z 
2025-01-14T13:17:21.1116889Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1117146Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-14T13:17:21.1117150Z 
2025-01-14T13:17:21.1117810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1118157Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1118161Z 
2025-01-14T13:17:21.1118255Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1118511Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1118584Z         """
2025-01-14T13:17:21.1118694Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1118766Z     
2025-01-14T13:17:21.1118845Z         Parameters:
2025-01-14T13:17:21.1118915Z         -----------
2025-01-14T13:17:21.1119054Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1119198Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1119270Z     
2025-01-14T13:17:21.1119340Z         Returns:
2025-01-14T13:17:21.1119418Z         --------
2025-01-14T13:17:21.1119501Z         A TARDIS simulation object.
2025-01-14T13:17:21.1119575Z         """
2025-01-14T13:17:21.1119765Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1119895Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1120027Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1120209Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1120340Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1120442Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1120522Z >       sim = run_tardis(
2025-01-14T13:17:21.1120604Z             config_verysimple,
2025-01-14T13:17:21.1120689Z             atom_data=atomic_data,
2025-01-14T13:17:21.1120757Z         )
2025-01-14T13:17:21.1120761Z 
2025-01-14T13:17:21.1120902Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1121009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1121101Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1121192Z     simulation.run_convergence()
2025-01-14T13:17:21.1121310Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1121448Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1121648Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1121807Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1121940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1121946Z 
2025-01-14T13:17:21.1122373Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1122718Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1123107Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1123498Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1123672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1123810Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1123814Z 
2025-01-14T13:17:21.1123910Z     def initialize_transport_state(
2025-01-14T13:17:21.1123983Z         self,
2025-01-14T13:17:21.1124069Z         simulation_state,
2025-01-14T13:17:21.1124153Z         opacity_state,
2025-01-14T13:17:21.1124231Z         macro_atom_state,
2025-01-14T13:17:21.1124306Z         plasma,
2025-01-14T13:17:21.1124380Z         no_of_packets,
2025-01-14T13:17:21.1124466Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1124539Z         iteration=0,
2025-01-14T13:17:21.1124611Z     ):
2025-01-14T13:17:21.1124737Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1124838Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1124906Z         else:
2025-01-14T13:17:21.1124992Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1125058Z     
2025-01-14T13:17:21.1125200Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1125295Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1125368Z         )
2025-01-14T13:17:21.1125432Z     
2025-01-14T13:17:21.1125729Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1125849Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1126002Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1126076Z         else:
2025-01-14T13:17:21.1126158Z             continuum_state = None
2025-01-14T13:17:21.1126263Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1126371Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1126469Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1126579Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1126686Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1126885Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1126983Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1127054Z         ).to_numba(
2025-01-14T13:17:21.1127137Z             macro_atom_state,
2025-01-14T13:17:21.1127230Z             self.line_interaction_type,
2025-01-14T13:17:21.1127303Z         )
2025-01-14T13:17:21.1127410Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1127683Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1127754Z         ]
2025-01-14T13:17:21.1128054Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1128058Z 
2025-01-14T13:17:21.1128211Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1128463Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-14T13:17:21.1128471Z 
2025-01-14T13:17:21.1129137Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1129491Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1129494Z 
2025-01-14T13:17:21.1129583Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1129725Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1129793Z         """
2025-01-14T13:17:21.1129907Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1129974Z     
2025-01-14T13:17:21.1130053Z         Parameters:
2025-01-14T13:17:21.1130124Z         -----------
2025-01-14T13:17:21.1130267Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1130412Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1130484Z     
2025-01-14T13:17:21.1130556Z         Returns:
2025-01-14T13:17:21.1130632Z         --------
2025-01-14T13:17:21.1130719Z         A TARDIS simulation object.
2025-01-14T13:17:21.1130789Z         """
2025-01-14T13:17:21.1130906Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1131028Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1131165Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1131338Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1131476Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1131768Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1131862Z >       sim = run_tardis(
2025-01-14T13:17:21.1131943Z             config_verysimple,
2025-01-14T13:17:21.1132029Z             atom_data=atomic_data,
2025-01-14T13:17:21.1132103Z         )
2025-01-14T13:17:21.1132107Z 
2025-01-14T13:17:21.1132246Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1132360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1132585Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1132677Z     simulation.run_convergence()
2025-01-14T13:17:21.1132789Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1132930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1133025Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1133180Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1133288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1133292Z 
2025-01-14T13:17:21.1133559Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1133866Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1134096Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1134369Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1134533Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1134673Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1134677Z 
2025-01-14T13:17:21.1134762Z     def initialize_transport_state(
2025-01-14T13:17:21.1134836Z         self,
2025-01-14T13:17:21.1134913Z         simulation_state,
2025-01-14T13:17:21.1134992Z         opacity_state,
2025-01-14T13:17:21.1135066Z         macro_atom_state,
2025-01-14T13:17:21.1135143Z         plasma,
2025-01-14T13:17:21.1135216Z         no_of_packets,
2025-01-14T13:17:21.1135303Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1135376Z         iteration=0,
2025-01-14T13:17:21.1135453Z     ):
2025-01-14T13:17:21.1135575Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1135674Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1135748Z         else:
2025-01-14T13:17:21.1135827Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1135902Z     
2025-01-14T13:17:21.1136034Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1136132Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1136201Z         )
2025-01-14T13:17:21.1136272Z     
2025-01-14T13:17:21.1136398Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1136517Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1136666Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1136739Z         else:
2025-01-14T13:17:21.1136822Z             continuum_state = None
2025-01-14T13:17:21.1136932Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1137041Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1137137Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1137245Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1137345Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1137447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1137537Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1137612Z         ).to_numba(
2025-01-14T13:17:21.1137689Z             macro_atom_state,
2025-01-14T13:17:21.1137780Z             self.line_interaction_type,
2025-01-14T13:17:21.1137846Z         )
2025-01-14T13:17:21.1137951Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1138225Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1138297Z         ]
2025-01-14T13:17:21.1138600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1138604Z 
2025-01-14T13:17:21.1138756Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1139018Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-14T13:17:21.1139128Z 
2025-01-14T13:17:21.1139790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1140136Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1140140Z 
2025-01-14T13:17:21.1140227Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1145697Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1145801Z         """
2025-01-14T13:17:21.1146117Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1146197Z     
2025-01-14T13:17:21.1146278Z         Parameters:
2025-01-14T13:17:21.1146356Z         -----------
2025-01-14T13:17:21.1146508Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1146673Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1146738Z     
2025-01-14T13:17:21.1146815Z         Returns:
2025-01-14T13:17:21.1146886Z         --------
2025-01-14T13:17:21.1146979Z         A TARDIS simulation object.
2025-01-14T13:17:21.1147046Z         """
2025-01-14T13:17:21.1147168Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1147295Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1147437Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1147614Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1147763Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1147868Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1147949Z >       sim = run_tardis(
2025-01-14T13:17:21.1148034Z             config_verysimple,
2025-01-14T13:17:21.1148123Z             atom_data=atomic_data,
2025-01-14T13:17:21.1148195Z         )
2025-01-14T13:17:21.1148200Z 
2025-01-14T13:17:21.1148345Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1148466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1148556Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1148649Z     simulation.run_convergence()
2025-01-14T13:17:21.1148772Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1148927Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1149027Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1149195Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1149313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1149318Z 
2025-01-14T13:17:21.1149586Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1149798Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1150019Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1150313Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1150479Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1150624Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1150627Z 
2025-01-14T13:17:21.1150716Z     def initialize_transport_state(
2025-01-14T13:17:21.1150790Z         self,
2025-01-14T13:17:21.1150873Z         simulation_state,
2025-01-14T13:17:21.1150951Z         opacity_state,
2025-01-14T13:17:21.1151035Z         macro_atom_state,
2025-01-14T13:17:21.1151105Z         plasma,
2025-01-14T13:17:21.1151182Z         no_of_packets,
2025-01-14T13:17:21.1151265Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1151463Z         iteration=0,
2025-01-14T13:17:21.1151529Z     ):
2025-01-14T13:17:21.1151808Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1151911Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1151984Z         else:
2025-01-14T13:17:21.1152061Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1152131Z     
2025-01-14T13:17:21.1152274Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1152380Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1152446Z         )
2025-01-14T13:17:21.1152517Z     
2025-01-14T13:17:21.1152646Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1152880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1153045Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1153113Z         else:
2025-01-14T13:17:21.1153201Z             continuum_state = None
2025-01-14T13:17:21.1153308Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1153422Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1153512Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1153623Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1153721Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1153820Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1153909Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1153984Z         ).to_numba(
2025-01-14T13:17:21.1154061Z             macro_atom_state,
2025-01-14T13:17:21.1154153Z             self.line_interaction_type,
2025-01-14T13:17:21.1154221Z         )
2025-01-14T13:17:21.1154332Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1154613Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1154678Z         ]
2025-01-14T13:17:21.1154996Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1155001Z 
2025-01-14T13:17:21.1155152Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1155418Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-14T13:17:21.1155422Z 
2025-01-14T13:17:21.1156102Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1156460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1156465Z 
2025-01-14T13:17:21.1156560Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1156707Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1156785Z         """
2025-01-14T13:17:21.1156897Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1156967Z     
2025-01-14T13:17:21.1157042Z         Parameters:
2025-01-14T13:17:21.1157120Z         -----------
2025-01-14T13:17:21.1157257Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1157406Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1157472Z     
2025-01-14T13:17:21.1157546Z         Returns:
2025-01-14T13:17:21.1157617Z         --------
2025-01-14T13:17:21.1157705Z         A TARDIS simulation object.
2025-01-14T13:17:21.1157776Z         """
2025-01-14T13:17:21.1157894Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1158024Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1158158Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1158340Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1158594Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1158696Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1158771Z >       sim = run_tardis(
2025-01-14T13:17:21.1158858Z             config_verysimple,
2025-01-14T13:17:21.1158939Z             atom_data=atomic_data,
2025-01-14T13:17:21.1159010Z         )
2025-01-14T13:17:21.1159014Z 
2025-01-14T13:17:21.1159150Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1159268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1159357Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1159443Z     simulation.run_convergence()
2025-01-14T13:17:21.1159638Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1159780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1159879Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1160038Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1160150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1160155Z 
2025-01-14T13:17:21.1160420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1160628Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1160848Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1161127Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1161295Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1161432Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1161436Z 
2025-01-14T13:17:21.1161528Z     def initialize_transport_state(
2025-01-14T13:17:21.1161693Z         self,
2025-01-14T13:17:21.1161785Z         simulation_state,
2025-01-14T13:17:21.1161860Z         opacity_state,
2025-01-14T13:17:21.1161943Z         macro_atom_state,
2025-01-14T13:17:21.1162014Z         plasma,
2025-01-14T13:17:21.1162092Z         no_of_packets,
2025-01-14T13:17:21.1162173Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1162250Z         iteration=0,
2025-01-14T13:17:21.1162316Z     ):
2025-01-14T13:17:21.1162448Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1162548Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1162615Z         else:
2025-01-14T13:17:21.1162700Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1162765Z     
2025-01-14T13:17:21.1162905Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1163002Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1163073Z         )
2025-01-14T13:17:21.1163138Z     
2025-01-14T13:17:21.1163269Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1163386Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1163548Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1163615Z         else:
2025-01-14T13:17:21.1163702Z             continuum_state = None
2025-01-14T13:17:21.1163798Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1163910Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1164000Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1164108Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1164211Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1164307Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1164403Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1164473Z         ).to_numba(
2025-01-14T13:17:21.1164559Z             macro_atom_state,
2025-01-14T13:17:21.1164644Z             self.line_interaction_type,
2025-01-14T13:17:21.1164843Z         )
2025-01-14T13:17:21.1164944Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1165223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1165290Z         ]
2025-01-14T13:17:21.1165599Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1165603Z 
2025-01-14T13:17:21.1165754Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1166007Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-14T13:17:21.1166012Z 
2025-01-14T13:17:21.1166781Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1167137Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1167141Z 
2025-01-14T13:17:21.1167235Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1167374Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1167448Z         """
2025-01-14T13:17:21.1167564Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1167632Z     
2025-01-14T13:17:21.1167710Z         Parameters:
2025-01-14T13:17:21.1167783Z         -----------
2025-01-14T13:17:21.1167925Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1168070Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1168140Z     
2025-01-14T13:17:21.1168209Z         Returns:
2025-01-14T13:17:21.1168286Z         --------
2025-01-14T13:17:21.1168368Z         A TARDIS simulation object.
2025-01-14T13:17:21.1168445Z         """
2025-01-14T13:17:21.1168560Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1168688Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1168821Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1169001Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1169132Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1169233Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1169313Z >       sim = run_tardis(
2025-01-14T13:17:21.1169392Z             config_verysimple,
2025-01-14T13:17:21.1169476Z             atom_data=atomic_data,
2025-01-14T13:17:21.1169542Z         )
2025-01-14T13:17:21.1169551Z 
2025-01-14T13:17:21.1169688Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1169797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1169890Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1169980Z     simulation.run_convergence()
2025-01-14T13:17:21.1170096Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1170232Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1170333Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1170484Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1170595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1170599Z 
2025-01-14T13:17:21.1170867Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1171071Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1171295Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1171658Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1172000Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1172135Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1172138Z 
2025-01-14T13:17:21.1172230Z     def initialize_transport_state(
2025-01-14T13:17:21.1172304Z         self,
2025-01-14T13:17:21.1172382Z         simulation_state,
2025-01-14T13:17:21.1172464Z         opacity_state,
2025-01-14T13:17:21.1172539Z         macro_atom_state,
2025-01-14T13:17:21.1172613Z         plasma,
2025-01-14T13:17:21.1172688Z         no_of_packets,
2025-01-14T13:17:21.1172776Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1172849Z         iteration=0,
2025-01-14T13:17:21.1172920Z     ):
2025-01-14T13:17:21.1173154Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1173257Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1173325Z         else:
2025-01-14T13:17:21.1173410Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1173481Z     
2025-01-14T13:17:21.1173622Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1173718Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1173789Z         )
2025-01-14T13:17:21.1173854Z     
2025-01-14T13:17:21.1173985Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1174102Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1174254Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1174326Z         else:
2025-01-14T13:17:21.1174407Z             continuum_state = None
2025-01-14T13:17:21.1174509Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1174620Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1174715Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1174819Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1174921Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1175017Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1175114Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1175185Z         ).to_numba(
2025-01-14T13:17:21.1175267Z             macro_atom_state,
2025-01-14T13:17:21.1175354Z             self.line_interaction_type,
2025-01-14T13:17:21.1175426Z         )
2025-01-14T13:17:21.1175529Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1175794Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1175867Z         ]
2025-01-14T13:17:21.1176170Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1176175Z 
2025-01-14T13:17:21.1176324Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1176583Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-14T13:17:21.1176591Z 
2025-01-14T13:17:21.1177262Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1177612Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1177616Z 
2025-01-14T13:17:21.1177703Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1177843Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1177911Z         """
2025-01-14T13:17:21.1178026Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1178092Z     
2025-01-14T13:17:21.1178169Z         Parameters:
2025-01-14T13:17:21.1178240Z         -----------
2025-01-14T13:17:21.1178381Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1178613Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1178685Z     
2025-01-14T13:17:21.1178753Z         Returns:
2025-01-14T13:17:21.1178827Z         --------
2025-01-14T13:17:21.1178915Z         A TARDIS simulation object.
2025-01-14T13:17:21.1178983Z         """
2025-01-14T13:17:21.1179099Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1179221Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1179354Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1179527Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1179740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1179838Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1179918Z >       sim = run_tardis(
2025-01-14T13:17:21.1179997Z             config_verysimple,
2025-01-14T13:17:21.1180081Z             atom_data=atomic_data,
2025-01-14T13:17:21.1180152Z         )
2025-01-14T13:17:21.1180156Z 
2025-01-14T13:17:21.1180294Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1180408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1180491Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1180579Z     simulation.run_convergence()
2025-01-14T13:17:21.1180690Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1180834Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1180927Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1181083Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1181195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1181199Z 
2025-01-14T13:17:21.1181464Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1181892Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1182123Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1182404Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1182562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1182702Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1182706Z 
2025-01-14T13:17:21.1182791Z     def initialize_transport_state(
2025-01-14T13:17:21.1182864Z         self,
2025-01-14T13:17:21.1182941Z         simulation_state,
2025-01-14T13:17:21.1183023Z         opacity_state,
2025-01-14T13:17:21.1183098Z         macro_atom_state,
2025-01-14T13:17:21.1183174Z         plasma,
2025-01-14T13:17:21.1183247Z         no_of_packets,
2025-01-14T13:17:21.1183334Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1183405Z         iteration=0,
2025-01-14T13:17:21.1183478Z     ):
2025-01-14T13:17:21.1183603Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1183702Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1183773Z         else:
2025-01-14T13:17:21.1183849Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1183920Z     
2025-01-14T13:17:21.1184051Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1184147Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1184213Z         )
2025-01-14T13:17:21.1184289Z     
2025-01-14T13:17:21.1184415Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1184531Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1184685Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1184759Z         else:
2025-01-14T13:17:21.1184840Z             continuum_state = None
2025-01-14T13:17:21.1184942Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1185194Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1185289Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1185395Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1185492Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1185591Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1185681Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1185756Z         ).to_numba(
2025-01-14T13:17:21.1185834Z             macro_atom_state,
2025-01-14T13:17:21.1185928Z             self.line_interaction_type,
2025-01-14T13:17:21.1185994Z         )
2025-01-14T13:17:21.1186202Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1186474Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1186545Z         ]
2025-01-14T13:17:21.1186844Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1186860Z 
2025-01-14T13:17:21.1187009Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1187264Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-14T13:17:21.1187269Z 
2025-01-14T13:17:21.1187932Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1188291Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1188294Z 
2025-01-14T13:17:21.1188383Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1188529Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1188606Z         """
2025-01-14T13:17:21.1188719Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1188795Z     
2025-01-14T13:17:21.1188868Z         Parameters:
2025-01-14T13:17:21.1188944Z         -----------
2025-01-14T13:17:21.1189081Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1189227Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1189292Z     
2025-01-14T13:17:21.1189367Z         Returns:
2025-01-14T13:17:21.1189436Z         --------
2025-01-14T13:17:21.1189521Z         A TARDIS simulation object.
2025-01-14T13:17:21.1189588Z         """
2025-01-14T13:17:21.1189705Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1189831Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1189969Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1190150Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1190288Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1190388Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1190462Z >       sim = run_tardis(
2025-01-14T13:17:21.1190545Z             config_verysimple,
2025-01-14T13:17:21.1190624Z             atom_data=atomic_data,
2025-01-14T13:17:21.1190695Z         )
2025-01-14T13:17:21.1190699Z 
2025-01-14T13:17:21.1190833Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1190951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1191036Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1191130Z     simulation.run_convergence()
2025-01-14T13:17:21.1191252Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1191396Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1191495Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1191753Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1191988Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1191992Z 
2025-01-14T13:17:21.1192258Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1192464Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1192683Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1192960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1193122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1193384Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1193389Z 
2025-01-14T13:17:21.1193483Z     def initialize_transport_state(
2025-01-14T13:17:21.1193551Z         self,
2025-01-14T13:17:21.1193639Z         simulation_state,
2025-01-14T13:17:21.1193712Z         opacity_state,
2025-01-14T13:17:21.1193793Z         macro_atom_state,
2025-01-14T13:17:21.1193862Z         plasma,
2025-01-14T13:17:21.1193939Z         no_of_packets,
2025-01-14T13:17:21.1194019Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1194095Z         iteration=0,
2025-01-14T13:17:21.1194161Z     ):
2025-01-14T13:17:21.1194289Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1194384Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1194455Z         else:
2025-01-14T13:17:21.1194531Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1194601Z     
2025-01-14T13:17:21.1194734Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1194842Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1194915Z         )
2025-01-14T13:17:21.1194981Z     
2025-01-14T13:17:21.1195114Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1195231Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1195389Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1195456Z         else:
2025-01-14T13:17:21.1195543Z             continuum_state = None
2025-01-14T13:17:21.1195646Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1195757Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1195850Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1195959Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1196056Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1196153Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1196250Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1196326Z         ).to_numba(
2025-01-14T13:17:21.1196410Z             macro_atom_state,
2025-01-14T13:17:21.1196496Z             self.line_interaction_type,
2025-01-14T13:17:21.1196570Z         )
2025-01-14T13:17:21.1196669Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1196942Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1197009Z         ]
2025-01-14T13:17:21.1197319Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1197323Z 
2025-01-14T13:17:21.1197470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1197729Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-14T13:17:21.1197733Z 
2025-01-14T13:17:21.1198404Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1198854Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1198858Z 
2025-01-14T13:17:21.1198950Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1199086Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1199158Z         """
2025-01-14T13:17:21.1199266Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1199337Z     
2025-01-14T13:17:21.1199410Z         Parameters:
2025-01-14T13:17:21.1199486Z         -----------
2025-01-14T13:17:21.1199620Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1199768Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1199920Z     
2025-01-14T13:17:21.1199993Z         Returns:
2025-01-14T13:17:21.1200069Z         --------
2025-01-14T13:17:21.1200151Z         A TARDIS simulation object.
2025-01-14T13:17:21.1200221Z         """
2025-01-14T13:17:21.1200338Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1200462Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1200593Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1200773Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1200905Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1201003Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1201076Z >       sim = run_tardis(
2025-01-14T13:17:21.1201161Z             config_verysimple,
2025-01-14T13:17:21.1201240Z             atom_data=atomic_data,
2025-01-14T13:17:21.1201311Z         )
2025-01-14T13:17:21.1201314Z 
2025-01-14T13:17:21.1201458Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1201672Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1201762Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1201851Z     simulation.run_convergence()
2025-01-14T13:17:21.1201968Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1202104Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1202202Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1202353Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1202462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1202465Z 
2025-01-14T13:17:21.1202728Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1202931Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1203162Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1203433Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1203599Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1203733Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1203737Z 
2025-01-14T13:17:21.1203826Z     def initialize_transport_state(
2025-01-14T13:17:21.1203895Z         self,
2025-01-14T13:17:21.1203980Z         simulation_state,
2025-01-14T13:17:21.1204054Z         opacity_state,
2025-01-14T13:17:21.1204136Z         macro_atom_state,
2025-01-14T13:17:21.1204205Z         plasma,
2025-01-14T13:17:21.1204281Z         no_of_packets,
2025-01-14T13:17:21.1204361Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1204438Z         iteration=0,
2025-01-14T13:17:21.1204510Z     ):
2025-01-14T13:17:21.1204635Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1204734Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1204802Z         else:
2025-01-14T13:17:21.1204883Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1204949Z     
2025-01-14T13:17:21.1205210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1205305Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1205375Z         )
2025-01-14T13:17:21.1205440Z     
2025-01-14T13:17:21.1205569Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1205681Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1205839Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1205906Z         else:
2025-01-14T13:17:21.1205992Z             continuum_state = None
2025-01-14T13:17:21.1206090Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1206309Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1206407Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1206514Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1206614Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1206710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1206803Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1206872Z         ).to_numba(
2025-01-14T13:17:21.1206953Z             macro_atom_state,
2025-01-14T13:17:21.1207039Z             self.line_interaction_type,
2025-01-14T13:17:21.1207110Z         )
2025-01-14T13:17:21.1207208Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1207483Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1207549Z         ]
2025-01-14T13:17:21.1207854Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1207863Z 
2025-01-14T13:17:21.1208012Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1208271Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-14T13:17:21.1208279Z 
2025-01-14T13:17:21.1208940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1209285Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1209289Z 
2025-01-14T13:17:21.1209382Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1209524Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1209589Z         """
2025-01-14T13:17:21.1209706Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1209771Z     
2025-01-14T13:17:21.1209849Z         Parameters:
2025-01-14T13:17:21.1209919Z         -----------
2025-01-14T13:17:21.1210058Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1210204Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1210273Z     
2025-01-14T13:17:21.1210342Z         Returns:
2025-01-14T13:17:21.1210417Z         --------
2025-01-14T13:17:21.1210500Z         A TARDIS simulation object.
2025-01-14T13:17:21.1210575Z         """
2025-01-14T13:17:21.1210686Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1210812Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1210941Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1211121Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1211258Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1211357Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1211437Z >       sim = run_tardis(
2025-01-14T13:17:21.1211517Z             config_verysimple,
2025-01-14T13:17:21.1211707Z             atom_data=atomic_data,
2025-01-14T13:17:21.1211899Z         )
2025-01-14T13:17:21.1211903Z 
2025-01-14T13:17:21.1212047Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1212156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1212245Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1212331Z     simulation.run_convergence()
2025-01-14T13:17:21.1212447Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1212583Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1212682Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1212837Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1213047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1213052Z 
2025-01-14T13:17:21.1213321Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1213519Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1213748Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1214020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1214184Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1214317Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1214326Z 
2025-01-14T13:17:21.1214411Z     def initialize_transport_state(
2025-01-14T13:17:21.1214483Z         self,
2025-01-14T13:17:21.1214559Z         simulation_state,
2025-01-14T13:17:21.1214637Z         opacity_state,
2025-01-14T13:17:21.1214715Z         macro_atom_state,
2025-01-14T13:17:21.1214790Z         plasma,
2025-01-14T13:17:21.1214862Z         no_of_packets,
2025-01-14T13:17:21.1214946Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1215017Z         iteration=0,
2025-01-14T13:17:21.1215094Z     ):
2025-01-14T13:17:21.1215218Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1215317Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1215387Z         else:
2025-01-14T13:17:21.1215468Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1215533Z     
2025-01-14T13:17:21.1215668Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1215765Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1215832Z         )
2025-01-14T13:17:21.1215905Z     
2025-01-14T13:17:21.1216038Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1216161Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1216322Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1216398Z         else:
2025-01-14T13:17:21.1216481Z             continuum_state = None
2025-01-14T13:17:21.1216591Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1216704Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1216800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1216907Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1217012Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1217108Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1217205Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1217281Z         ).to_numba(
2025-01-14T13:17:21.1217359Z             macro_atom_state,
2025-01-14T13:17:21.1217452Z             self.line_interaction_type,
2025-01-14T13:17:21.1217519Z         )
2025-01-14T13:17:21.1217626Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1217898Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1217970Z         ]
2025-01-14T13:17:21.1218272Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1218362Z 
2025-01-14T13:17:21.1218517Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1218769Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-14T13:17:21.1218772Z 
2025-01-14T13:17:21.1219445Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1219889Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1219894Z 
2025-01-14T13:17:21.1219985Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1220132Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1220201Z         """
2025-01-14T13:17:21.1220323Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1220389Z     
2025-01-14T13:17:21.1220468Z         Parameters:
2025-01-14T13:17:21.1220541Z         -----------
2025-01-14T13:17:21.1220683Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1220829Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1220895Z     
2025-01-14T13:17:21.1220970Z         Returns:
2025-01-14T13:17:21.1221041Z         --------
2025-01-14T13:17:21.1221130Z         A TARDIS simulation object.
2025-01-14T13:17:21.1221197Z         """
2025-01-14T13:17:21.1221318Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1221445Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1221762Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1221956Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1222108Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1222205Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1222285Z >       sim = run_tardis(
2025-01-14T13:17:21.1222365Z             config_verysimple,
2025-01-14T13:17:21.1222451Z             atom_data=atomic_data,
2025-01-14T13:17:21.1222518Z         )
2025-01-14T13:17:21.1222527Z 
2025-01-14T13:17:21.1222662Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1222778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1222862Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1222952Z     simulation.run_convergence()
2025-01-14T13:17:21.1223073Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1223217Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1223312Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1223471Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1223584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1223588Z 
2025-01-14T13:17:21.1223853Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1224060Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1224280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1224561Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1224724Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1224868Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1224871Z 
2025-01-14T13:17:21.1224960Z     def initialize_transport_state(
2025-01-14T13:17:21.1225034Z         self,
2025-01-14T13:17:21.1225111Z         simulation_state,
2025-01-14T13:17:21.1225345Z         opacity_state,
2025-01-14T13:17:21.1225422Z         macro_atom_state,
2025-01-14T13:17:21.1225497Z         plasma,
2025-01-14T13:17:21.1225569Z         no_of_packets,
2025-01-14T13:17:21.1225655Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1225732Z         iteration=0,
2025-01-14T13:17:21.1225799Z     ):
2025-01-14T13:17:21.1225937Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1226034Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1226106Z         else:
2025-01-14T13:17:21.1226183Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1226253Z     
2025-01-14T13:17:21.1226387Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1226597Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1226668Z         )
2025-01-14T13:17:21.1226738Z     
2025-01-14T13:17:21.1226865Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1226983Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1227141Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1227213Z         else:
2025-01-14T13:17:21.1227298Z             continuum_state = None
2025-01-14T13:17:21.1227401Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1227512Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1227608Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1227722Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1227822Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1227918Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1228013Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1228088Z         ).to_numba(
2025-01-14T13:17:21.1228165Z             macro_atom_state,
2025-01-14T13:17:21.1228256Z             self.line_interaction_type,
2025-01-14T13:17:21.1228323Z         )
2025-01-14T13:17:21.1228431Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1228703Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1228782Z         ]
2025-01-14T13:17:21.1229088Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1229092Z 
2025-01-14T13:17:21.1229239Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1229501Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-14T13:17:21.1229505Z 
2025-01-14T13:17:21.1230173Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1230525Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1230532Z 
2025-01-14T13:17:21.1230625Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1230761Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1230834Z         """
2025-01-14T13:17:21.1230948Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1231020Z     
2025-01-14T13:17:21.1231094Z         Parameters:
2025-01-14T13:17:21.1231169Z         -----------
2025-01-14T13:17:21.1231305Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1231461Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1231528Z     
2025-01-14T13:17:21.1231732Z         Returns:
2025-01-14T13:17:21.1231806Z         --------
2025-01-14T13:17:21.1231899Z         A TARDIS simulation object.
2025-01-14T13:17:21.1231967Z         """
2025-01-14T13:17:21.1232089Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1232334Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1232472Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1232657Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1232790Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1232892Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1232969Z >       sim = run_tardis(
2025-01-14T13:17:21.1233060Z             config_verysimple,
2025-01-14T13:17:21.1233139Z             atom_data=atomic_data,
2025-01-14T13:17:21.1233216Z         )
2025-01-14T13:17:21.1233220Z 
2025-01-14T13:17:21.1233464Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1233585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1233671Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1233763Z     simulation.run_convergence()
2025-01-14T13:17:21.1233885Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1234029Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1234132Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1234282Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1234391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1234395Z 
2025-01-14T13:17:21.1234658Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1234863Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1235086Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1235362Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1235522Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1235668Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1235672Z 
2025-01-14T13:17:21.1235764Z     def initialize_transport_state(
2025-01-14T13:17:21.1235832Z         self,
2025-01-14T13:17:21.1235913Z         simulation_state,
2025-01-14T13:17:21.1235988Z         opacity_state,
2025-01-14T13:17:21.1236068Z         macro_atom_state,
2025-01-14T13:17:21.1236140Z         plasma,
2025-01-14T13:17:21.1236218Z         no_of_packets,
2025-01-14T13:17:21.1236300Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1236378Z         iteration=0,
2025-01-14T13:17:21.1236446Z     ):
2025-01-14T13:17:21.1236575Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1236672Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1236749Z         else:
2025-01-14T13:17:21.1236827Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1236901Z     
2025-01-14T13:17:21.1237037Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1237141Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1237217Z         )
2025-01-14T13:17:21.1237284Z     
2025-01-14T13:17:21.1237417Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1237530Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1237688Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1237757Z         else:
2025-01-14T13:17:21.1237845Z             continuum_state = None
2025-01-14T13:17:21.1237947Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1238061Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1238157Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1238269Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1238368Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1238469Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1238658Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1238729Z         ).to_numba(
2025-01-14T13:17:21.1238812Z             macro_atom_state,
2025-01-14T13:17:21.1238900Z             self.line_interaction_type,
2025-01-14T13:17:21.1238976Z         )
2025-01-14T13:17:21.1239074Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1239350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1239419Z         ]
2025-01-14T13:17:21.1239727Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1239731Z 
2025-01-14T13:17:21.1239961Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1240231Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-14T13:17:21.1240235Z 
2025-01-14T13:17:21.1240904Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1241246Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1241250Z 
2025-01-14T13:17:21.1241346Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1241486Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1241661Z         """
2025-01-14T13:17:21.1241775Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1241853Z     
2025-01-14T13:17:21.1241928Z         Parameters:
2025-01-14T13:17:21.1242006Z         -----------
2025-01-14T13:17:21.1242142Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1242294Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1242377Z     
2025-01-14T13:17:21.1242449Z         Returns:
2025-01-14T13:17:21.1242531Z         --------
2025-01-14T13:17:21.1242616Z         A TARDIS simulation object.
2025-01-14T13:17:21.1242691Z         """
2025-01-14T13:17:21.1242805Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1242935Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1243066Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1243247Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1243382Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1243492Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1243568Z >       sim = run_tardis(
2025-01-14T13:17:21.1243657Z             config_verysimple,
2025-01-14T13:17:21.1243739Z             atom_data=atomic_data,
2025-01-14T13:17:21.1243813Z         )
2025-01-14T13:17:21.1243820Z 
2025-01-14T13:17:21.1243962Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1244074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1244166Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1244254Z     simulation.run_convergence()
2025-01-14T13:17:21.1244374Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1244510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1244611Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1244762Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1244878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1244882Z 
2025-01-14T13:17:21.1245149Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1245349Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1245725Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1245996Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1246160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1246293Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1246297Z 
2025-01-14T13:17:21.1246388Z     def initialize_transport_state(
2025-01-14T13:17:21.1246456Z         self,
2025-01-14T13:17:21.1246537Z         simulation_state,
2025-01-14T13:17:21.1246612Z         opacity_state,
2025-01-14T13:17:21.1246696Z         macro_atom_state,
2025-01-14T13:17:21.1246886Z         plasma,
2025-01-14T13:17:21.1246971Z         no_of_packets,
2025-01-14T13:17:21.1247063Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1247137Z         iteration=0,
2025-01-14T13:17:21.1247211Z     ):
2025-01-14T13:17:21.1247345Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1247446Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1247517Z         else:
2025-01-14T13:17:21.1247601Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1247669Z     
2025-01-14T13:17:21.1247807Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1247904Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1247978Z         )
2025-01-14T13:17:21.1248047Z     
2025-01-14T13:17:21.1248182Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1248295Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1248458Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1248526Z         else:
2025-01-14T13:17:21.1248615Z             continuum_state = None
2025-01-14T13:17:21.1248720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1248828Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1248930Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1249035Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1249139Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1249233Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1249329Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1249402Z         ).to_numba(
2025-01-14T13:17:21.1249486Z             macro_atom_state,
2025-01-14T13:17:21.1249573Z             self.line_interaction_type,
2025-01-14T13:17:21.1249648Z         )
2025-01-14T13:17:21.1249748Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1250026Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1250099Z         ]
2025-01-14T13:17:21.1250400Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1250409Z 
2025-01-14T13:17:21.1250560Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1250782Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-14T13:17:21.1250786Z 
2025-01-14T13:17:21.1251455Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1251908Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1251923Z 
2025-01-14T13:17:21.1252010Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1252151Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1252219Z         """
2025-01-14T13:17:21.1252332Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1252521Z     
2025-01-14T13:17:21.1252602Z         Parameters:
2025-01-14T13:17:21.1252674Z         -----------
2025-01-14T13:17:21.1252816Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1252957Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1253033Z     
2025-01-14T13:17:21.1253104Z         Returns:
2025-01-14T13:17:21.1253185Z         --------
2025-01-14T13:17:21.1253269Z         A TARDIS simulation object.
2025-01-14T13:17:21.1253345Z         """
2025-01-14T13:17:21.1253461Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1253591Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1253841Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1254021Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1254161Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1254266Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1254354Z >       sim = run_tardis(
2025-01-14T13:17:21.1254436Z             config_verysimple,
2025-01-14T13:17:21.1254524Z             atom_data=atomic_data,
2025-01-14T13:17:21.1254594Z         )
2025-01-14T13:17:21.1254597Z 
2025-01-14T13:17:21.1254745Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1254859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1254954Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1255043Z     simulation.run_convergence()
2025-01-14T13:17:21.1255163Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1255315Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1255409Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1255565Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1255677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1255680Z 
2025-01-14T13:17:21.1255954Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1256155Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1256379Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1256651Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1256817Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1256965Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1256969Z 
2025-01-14T13:17:21.1257060Z     def initialize_transport_state(
2025-01-14T13:17:21.1257135Z         self,
2025-01-14T13:17:21.1257213Z         simulation_state,
2025-01-14T13:17:21.1257293Z         opacity_state,
2025-01-14T13:17:21.1257371Z         macro_atom_state,
2025-01-14T13:17:21.1257445Z         plasma,
2025-01-14T13:17:21.1257518Z         no_of_packets,
2025-01-14T13:17:21.1257605Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1257677Z         iteration=0,
2025-01-14T13:17:21.1257751Z     ):
2025-01-14T13:17:21.1257875Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1257978Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1258048Z         else:
2025-01-14T13:17:21.1258133Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1258200Z     
2025-01-14T13:17:21.1258337Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1258438Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1258510Z         )
2025-01-14T13:17:21.1258585Z     
2025-01-14T13:17:21.1258712Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1258830Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1259078Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1259156Z         else:
2025-01-14T13:17:21.1259239Z             continuum_state = None
2025-01-14T13:17:21.1259344Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1259453Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1259552Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1259656Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1259762Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1259856Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1259953Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1260107Z         ).to_numba(
2025-01-14T13:17:21.1260188Z             macro_atom_state,
2025-01-14T13:17:21.1260281Z             self.line_interaction_type,
2025-01-14T13:17:21.1260351Z         )
2025-01-14T13:17:21.1260457Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1260730Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1260806Z         ]
2025-01-14T13:17:21.1261104Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1261108Z 
2025-01-14T13:17:21.1261260Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1261477Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-14T13:17:21.1261487Z 
2025-01-14T13:17:21.1262354Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1262709Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1262718Z 
2025-01-14T13:17:21.1262805Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1262949Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1263016Z         """
2025-01-14T13:17:21.1263134Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1263200Z     
2025-01-14T13:17:21.1263280Z         Parameters:
2025-01-14T13:17:21.1263351Z         -----------
2025-01-14T13:17:21.1263492Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1263640Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1263708Z     
2025-01-14T13:17:21.1263785Z         Returns:
2025-01-14T13:17:21.1263866Z         --------
2025-01-14T13:17:21.1263962Z         A TARDIS simulation object.
2025-01-14T13:17:21.1264031Z         """
2025-01-14T13:17:21.1264152Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1264277Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1264416Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1264592Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1264734Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1264831Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1264915Z >       sim = run_tardis(
2025-01-14T13:17:21.1264997Z             config_verysimple,
2025-01-14T13:17:21.1265084Z             atom_data=atomic_data,
2025-01-14T13:17:21.1265159Z         )
2025-01-14T13:17:21.1265162Z 
2025-01-14T13:17:21.1265298Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1265424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1265512Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1265605Z     simulation.run_convergence()
2025-01-14T13:17:21.1265721Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1266016Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1266114Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1266274Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1266383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1266387Z 
2025-01-14T13:17:21.1266656Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1266865Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1267188Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1267475Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1267639Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1267789Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1267792Z 
2025-01-14T13:17:21.1267882Z     def initialize_transport_state(
2025-01-14T13:17:21.1267957Z         self,
2025-01-14T13:17:21.1268036Z         simulation_state,
2025-01-14T13:17:21.1268116Z         opacity_state,
2025-01-14T13:17:21.1268191Z         macro_atom_state,
2025-01-14T13:17:21.1268266Z         plasma,
2025-01-14T13:17:21.1268344Z         no_of_packets,
2025-01-14T13:17:21.1268426Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1268505Z         iteration=0,
2025-01-14T13:17:21.1268572Z     ):
2025-01-14T13:17:21.1268702Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1268803Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1268877Z         else:
2025-01-14T13:17:21.1268955Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1269027Z     
2025-01-14T13:17:21.1269163Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1269269Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1269337Z         )
2025-01-14T13:17:21.1269411Z     
2025-01-14T13:17:21.1269540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1269659Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1269812Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1269887Z         else:
2025-01-14T13:17:21.1269975Z             continuum_state = None
2025-01-14T13:17:21.1270075Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1270195Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1270289Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1270408Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1270511Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1270609Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1270704Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1270781Z         ).to_numba(
2025-01-14T13:17:21.1270859Z             macro_atom_state,
2025-01-14T13:17:21.1270954Z             self.line_interaction_type,
2025-01-14T13:17:21.1271023Z         )
2025-01-14T13:17:21.1271130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1271400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1271478Z         ]
2025-01-14T13:17:21.1271936Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1271941Z 
2025-01-14T13:17:21.1272095Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1272323Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-14T13:17:21.1272327Z 
2025-01-14T13:17:21.1272990Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1273504Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1273508Z 
2025-01-14T13:17:21.1273608Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1273749Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1273824Z         """
2025-01-14T13:17:21.1273936Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1274009Z     
2025-01-14T13:17:21.1274086Z         Parameters:
2025-01-14T13:17:21.1274287Z         -----------
2025-01-14T13:17:21.1274430Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1274581Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1274655Z     
2025-01-14T13:17:21.1274733Z         Returns:
2025-01-14T13:17:21.1274813Z         --------
2025-01-14T13:17:21.1274910Z         A TARDIS simulation object.
2025-01-14T13:17:21.1274978Z         """
2025-01-14T13:17:21.1275098Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1275226Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1275359Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1275538Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1275674Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1275775Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1275860Z >       sim = run_tardis(
2025-01-14T13:17:21.1275946Z             config_verysimple,
2025-01-14T13:17:21.1276027Z             atom_data=atomic_data,
2025-01-14T13:17:21.1276100Z         )
2025-01-14T13:17:21.1276104Z 
2025-01-14T13:17:21.1276239Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1276361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1276445Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1276539Z     simulation.run_convergence()
2025-01-14T13:17:21.1276657Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1276795Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1276896Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1277048Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1277164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1277168Z 
2025-01-14T13:17:21.1277436Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1277643Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1277864Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1278145Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1278309Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1278445Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1278449Z 
2025-01-14T13:17:21.1278542Z     def initialize_transport_state(
2025-01-14T13:17:21.1278611Z         self,
2025-01-14T13:17:21.1278694Z         simulation_state,
2025-01-14T13:17:21.1278769Z         opacity_state,
2025-01-14T13:17:21.1278849Z         macro_atom_state,
2025-01-14T13:17:21.1278920Z         plasma,
2025-01-14T13:17:21.1279002Z         no_of_packets,
2025-01-14T13:17:21.1279084Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1279165Z         iteration=0,
2025-01-14T13:17:21.1279234Z     ):
2025-01-14T13:17:21.1279363Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1279548Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1279621Z         else:
2025-01-14T13:17:21.1279699Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1279771Z     
2025-01-14T13:17:21.1279908Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1280004Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1280076Z         )
2025-01-14T13:17:21.1280142Z     
2025-01-14T13:17:21.1280275Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1280389Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1280546Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1280697Z         else:
2025-01-14T13:17:21.1280787Z             continuum_state = None
2025-01-14T13:17:21.1280888Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1281001Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1281099Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1281210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1281308Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1281407Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1281503Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1281680Z         ).to_numba(
2025-01-14T13:17:21.1281765Z             macro_atom_state,
2025-01-14T13:17:21.1281855Z             self.line_interaction_type,
2025-01-14T13:17:21.1281933Z         )
2025-01-14T13:17:21.1282035Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1282316Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1282383Z         ]
2025-01-14T13:17:21.1282690Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1282694Z 
2025-01-14T13:17:21.1282848Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1283072Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-14T13:17:21.1283076Z 
2025-01-14T13:17:21.1283743Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1284088Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1284092Z 
2025-01-14T13:17:21.1284190Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1284328Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1284405Z         """
2025-01-14T13:17:21.1284518Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1284597Z     
2025-01-14T13:17:21.1284673Z         Parameters:
2025-01-14T13:17:21.1284752Z         -----------
2025-01-14T13:17:21.1284895Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1285038Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1285110Z     
2025-01-14T13:17:21.1285182Z         Returns:
2025-01-14T13:17:21.1285259Z         --------
2025-01-14T13:17:21.1285342Z         A TARDIS simulation object.
2025-01-14T13:17:21.1285415Z         """
2025-01-14T13:17:21.1285528Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1285657Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1285793Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1285972Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1286103Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1286204Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1286412Z >       sim = run_tardis(
2025-01-14T13:17:21.1286499Z             config_verysimple,
2025-01-14T13:17:21.1286585Z             atom_data=atomic_data,
2025-01-14T13:17:21.1286653Z         )
2025-01-14T13:17:21.1286657Z 
2025-01-14T13:17:21.1286796Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1286907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1286997Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1287082Z     simulation.run_convergence()
2025-01-14T13:17:21.1287199Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1287337Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1287544Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1287697Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1287809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1287823Z 
2025-01-14T13:17:21.1288090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1288292Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1288519Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1288795Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1288958Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1289092Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1289096Z 
2025-01-14T13:17:21.1289193Z     def initialize_transport_state(
2025-01-14T13:17:21.1289264Z         self,
2025-01-14T13:17:21.1289347Z         simulation_state,
2025-01-14T13:17:21.1289421Z         opacity_state,
2025-01-14T13:17:21.1289502Z         macro_atom_state,
2025-01-14T13:17:21.1289583Z         plasma,
2025-01-14T13:17:21.1289657Z         no_of_packets,
2025-01-14T13:17:21.1289746Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1289819Z         iteration=0,
2025-01-14T13:17:21.1289892Z     ):
2025-01-14T13:17:21.1290020Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1290130Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1290199Z         else:
2025-01-14T13:17:21.1290285Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1290352Z     
2025-01-14T13:17:21.1290489Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1290585Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1290658Z         )
2025-01-14T13:17:21.1290731Z     
2025-01-14T13:17:21.1290865Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1290977Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1291137Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1291215Z         else:
2025-01-14T13:17:21.1291297Z             continuum_state = None
2025-01-14T13:17:21.1291401Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1291507Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1291708Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1291815Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1291919Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1292012Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1292112Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1292182Z         ).to_numba(
2025-01-14T13:17:21.1292276Z             macro_atom_state,
2025-01-14T13:17:21.1292365Z             self.line_interaction_type,
2025-01-14T13:17:21.1292438Z         )
2025-01-14T13:17:21.1292537Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1292808Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1293010Z         ]
2025-01-14T13:17:21.1293313Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1293317Z 
2025-01-14T13:17:21.1293469Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1293685Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-14T13:17:21.1293689Z 
2025-01-14T13:17:21.1294479Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1294829Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1294844Z 
2025-01-14T13:17:21.1294934Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1295077Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1295146Z         """
2025-01-14T13:17:21.1295261Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1295328Z     
2025-01-14T13:17:21.1295406Z         Parameters:
2025-01-14T13:17:21.1295478Z         -----------
2025-01-14T13:17:21.1295618Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1295757Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1295829Z     
2025-01-14T13:17:21.1295898Z         Returns:
2025-01-14T13:17:21.1295975Z         --------
2025-01-14T13:17:21.1296062Z         A TARDIS simulation object.
2025-01-14T13:17:21.1296137Z         """
2025-01-14T13:17:21.1296250Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1296376Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1296516Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1296689Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1296827Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1296925Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1297005Z >       sim = run_tardis(
2025-01-14T13:17:21.1297085Z             config_verysimple,
2025-01-14T13:17:21.1297172Z             atom_data=atomic_data,
2025-01-14T13:17:21.1297240Z         )
2025-01-14T13:17:21.1297244Z 
2025-01-14T13:17:21.1297381Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1297493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1297584Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1297669Z     simulation.run_convergence()
2025-01-14T13:17:21.1297790Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1297944Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1298045Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1298199Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1298307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1298311Z 
2025-01-14T13:17:21.1298577Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1298778Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1299003Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1299277Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1299446Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1299586Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1299682Z 
2025-01-14T13:17:21.1299770Z     def initialize_transport_state(
2025-01-14T13:17:21.1299844Z         self,
2025-01-14T13:17:21.1299921Z         simulation_state,
2025-01-14T13:17:21.1300003Z         opacity_state,
2025-01-14T13:17:21.1300079Z         macro_atom_state,
2025-01-14T13:17:21.1300153Z         plasma,
2025-01-14T13:17:21.1300228Z         no_of_packets,
2025-01-14T13:17:21.1300315Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1300390Z         iteration=0,
2025-01-14T13:17:21.1300464Z     ):
2025-01-14T13:17:21.1300586Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1300690Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1300760Z         else:
2025-01-14T13:17:21.1300934Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1301008Z     
2025-01-14T13:17:21.1301142Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1301242Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1301315Z         )
2025-01-14T13:17:21.1301398Z     
2025-01-14T13:17:21.1301534Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1301859Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1302035Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1302110Z         else:
2025-01-14T13:17:21.1302191Z             continuum_state = None
2025-01-14T13:17:21.1302298Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1302405Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1302502Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1302606Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1302714Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1302812Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1302904Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1302986Z         ).to_numba(
2025-01-14T13:17:21.1303064Z             macro_atom_state,
2025-01-14T13:17:21.1303158Z             self.line_interaction_type,
2025-01-14T13:17:21.1303226Z         )
2025-01-14T13:17:21.1303334Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1303604Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1303677Z         ]
2025-01-14T13:17:21.1303975Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1303979Z 
2025-01-14T13:17:21.1304129Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1304350Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-14T13:17:21.1304361Z 
2025-01-14T13:17:21.1305018Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1305372Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1305377Z 
2025-01-14T13:17:21.1305465Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1305612Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1305680Z         """
2025-01-14T13:17:21.1305804Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1305881Z     
2025-01-14T13:17:21.1305960Z         Parameters:
2025-01-14T13:17:21.1306031Z         -----------
2025-01-14T13:17:21.1306176Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1306323Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1306390Z     
2025-01-14T13:17:21.1306466Z         Returns:
2025-01-14T13:17:21.1306678Z         --------
2025-01-14T13:17:21.1306769Z         A TARDIS simulation object.
2025-01-14T13:17:21.1306838Z         """
2025-01-14T13:17:21.1306957Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1307078Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1307214Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1307387Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1307524Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1307619Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1307699Z >       sim = run_tardis(
2025-01-14T13:17:21.1307888Z             config_verysimple,
2025-01-14T13:17:21.1307972Z             atom_data=atomic_data,
2025-01-14T13:17:21.1308044Z         )
2025-01-14T13:17:21.1308048Z 
2025-01-14T13:17:21.1308180Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1308300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1308384Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1308474Z     simulation.run_convergence()
2025-01-14T13:17:21.1308587Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1308729Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1308823Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1308979Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1309086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1309096Z 
2025-01-14T13:17:21.1309360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1309564Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1309785Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1310068Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1310226Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1310366Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1310370Z 
2025-01-14T13:17:21.1310456Z     def initialize_transport_state(
2025-01-14T13:17:21.1310529Z         self,
2025-01-14T13:17:21.1310606Z         simulation_state,
2025-01-14T13:17:21.1310687Z         opacity_state,
2025-01-14T13:17:21.1310763Z         macro_atom_state,
2025-01-14T13:17:21.1310843Z         plasma,
2025-01-14T13:17:21.1310921Z         no_of_packets,
2025-01-14T13:17:21.1311006Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1311088Z         iteration=0,
2025-01-14T13:17:21.1311159Z     ):
2025-01-14T13:17:21.1311286Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1311380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1311456Z         else:
2025-01-14T13:17:21.1311533Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1311710Z     
2025-01-14T13:17:21.1311843Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1311944Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1312012Z         )
2025-01-14T13:17:21.1312083Z     
2025-01-14T13:17:21.1312208Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1312328Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1312480Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1312553Z         else:
2025-01-14T13:17:21.1312641Z             continuum_state = None
2025-01-14T13:17:21.1312747Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1312862Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1312953Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1313184Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1313283Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1313381Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1313473Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1313549Z         ).to_numba(
2025-01-14T13:17:21.1313626Z             macro_atom_state,
2025-01-14T13:17:21.1313718Z             self.line_interaction_type,
2025-01-14T13:17:21.1313786Z         )
2025-01-14T13:17:21.1313892Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1314170Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1314239Z         ]
2025-01-14T13:17:21.1314652Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1314658Z 
2025-01-14T13:17:21.1314809Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1315039Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-14T13:17:21.1315043Z 
2025-01-14T13:17:21.1315699Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1316050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1316054Z 
2025-01-14T13:17:21.1316146Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1316292Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1316366Z         """
2025-01-14T13:17:21.1316476Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1316547Z     
2025-01-14T13:17:21.1316620Z         Parameters:
2025-01-14T13:17:21.1316701Z         -----------
2025-01-14T13:17:21.1316837Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1316986Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1317057Z     
2025-01-14T13:17:21.1317132Z         Returns:
2025-01-14T13:17:21.1317201Z         --------
2025-01-14T13:17:21.1317291Z         A TARDIS simulation object.
2025-01-14T13:17:21.1317359Z         """
2025-01-14T13:17:21.1322203Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1322384Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1322541Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1322747Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1322890Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1322995Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1323072Z >       sim = run_tardis(
2025-01-14T13:17:21.1323166Z             config_verysimple,
2025-01-14T13:17:21.1323249Z             atom_data=atomic_data,
2025-01-14T13:17:21.1323321Z         )
2025-01-14T13:17:21.1323326Z 
2025-01-14T13:17:21.1323472Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1323595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1323684Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1323777Z     simulation.run_convergence()
2025-01-14T13:17:21.1323897Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1324047Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1324150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1324306Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1324419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1324424Z 
2025-01-14T13:17:21.1324866Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1325072Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1325294Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1325571Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1325734Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1325877Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1325881Z 
2025-01-14T13:17:21.1325974Z     def initialize_transport_state(
2025-01-14T13:17:21.1326173Z         self,
2025-01-14T13:17:21.1326262Z         simulation_state,
2025-01-14T13:17:21.1326335Z         opacity_state,
2025-01-14T13:17:21.1326415Z         macro_atom_state,
2025-01-14T13:17:21.1326485Z         plasma,
2025-01-14T13:17:21.1326563Z         no_of_packets,
2025-01-14T13:17:21.1326650Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1326726Z         iteration=0,
2025-01-14T13:17:21.1326792Z     ):
2025-01-14T13:17:21.1326925Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1327024Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1327101Z         else:
2025-01-14T13:17:21.1327178Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1327247Z     
2025-01-14T13:17:21.1327387Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1327493Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1327566Z         )
2025-01-14T13:17:21.1327632Z     
2025-01-14T13:17:21.1327773Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1327891Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1328049Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1328117Z         else:
2025-01-14T13:17:21.1328214Z             continuum_state = None
2025-01-14T13:17:21.1328316Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1328430Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1328522Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1328634Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1328731Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1328830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1328925Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1328996Z         ).to_numba(
2025-01-14T13:17:21.1329083Z             macro_atom_state,
2025-01-14T13:17:21.1329174Z             self.line_interaction_type,
2025-01-14T13:17:21.1329246Z         )
2025-01-14T13:17:21.1329347Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1329624Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1329694Z         ]
2025-01-14T13:17:21.1329998Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1330002Z 
2025-01-14T13:17:21.1330154Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1330383Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-14T13:17:21.1330387Z 
2025-01-14T13:17:21.1331070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1331422Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1331426Z 
2025-01-14T13:17:21.1331521Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1331885Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1331958Z         """
2025-01-14T13:17:21.1332071Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1332142Z     
2025-01-14T13:17:21.1332215Z         Parameters:
2025-01-14T13:17:21.1332294Z         -----------
2025-01-14T13:17:21.1332431Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1332580Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1332653Z     
2025-01-14T13:17:21.1332723Z         Returns:
2025-01-14T13:17:21.1332798Z         --------
2025-01-14T13:17:21.1332882Z         A TARDIS simulation object.
2025-01-14T13:17:21.1332954Z         """
2025-01-14T13:17:21.1333176Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1333309Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1333440Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1333625Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1333759Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1333864Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1333940Z >       sim = run_tardis(
2025-01-14T13:17:21.1334025Z             config_verysimple,
2025-01-14T13:17:21.1334105Z             atom_data=atomic_data,
2025-01-14T13:17:21.1334177Z         )
2025-01-14T13:17:21.1334181Z 
2025-01-14T13:17:21.1334323Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1334437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1334535Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1334622Z     simulation.run_convergence()
2025-01-14T13:17:21.1334739Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1334879Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1334981Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1335136Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1335249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1335253Z 
2025-01-14T13:17:21.1335517Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1335725Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1335951Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1336223Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1336391Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1336528Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1336532Z 
2025-01-14T13:17:21.1336624Z     def initialize_transport_state(
2025-01-14T13:17:21.1336696Z         self,
2025-01-14T13:17:21.1336779Z         simulation_state,
2025-01-14T13:17:21.1336852Z         opacity_state,
2025-01-14T13:17:21.1336937Z         macro_atom_state,
2025-01-14T13:17:21.1337007Z         plasma,
2025-01-14T13:17:21.1337084Z         no_of_packets,
2025-01-14T13:17:21.1337171Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1337243Z         iteration=0,
2025-01-14T13:17:21.1337316Z     ):
2025-01-14T13:17:21.1337440Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1337546Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1337614Z         else:
2025-01-14T13:17:21.1337698Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1337768Z     
2025-01-14T13:17:21.1337904Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1337999Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1338069Z         )
2025-01-14T13:17:21.1338134Z     
2025-01-14T13:17:21.1338380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1338493Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1338650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1338717Z         else:
2025-01-14T13:17:21.1338803Z             continuum_state = None
2025-01-14T13:17:21.1338906Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1339012Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1339111Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1339216Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1339395Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1339490Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1339584Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1339655Z         ).to_numba(
2025-01-14T13:17:21.1339737Z             macro_atom_state,
2025-01-14T13:17:21.1339828Z             self.line_interaction_type,
2025-01-14T13:17:21.1339899Z         )
2025-01-14T13:17:21.1340001Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1340275Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1340343Z         ]
2025-01-14T13:17:21.1340648Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1340651Z 
2025-01-14T13:17:21.1340802Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1340996Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-14T13:17:21.1341005Z 
2025-01-14T13:17:21.1341944Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1342315Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1342326Z 
2025-01-14T13:17:21.1342415Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1342559Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1342627Z         """
2025-01-14T13:17:21.1342742Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1342808Z     
2025-01-14T13:17:21.1342886Z         Parameters:
2025-01-14T13:17:21.1342960Z         -----------
2025-01-14T13:17:21.1343100Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1343245Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1343316Z     
2025-01-14T13:17:21.1343385Z         Returns:
2025-01-14T13:17:21.1343461Z         --------
2025-01-14T13:17:21.1343543Z         A TARDIS simulation object.
2025-01-14T13:17:21.1343620Z         """
2025-01-14T13:17:21.1343734Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1343863Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1344000Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1344173Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1344311Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1344406Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1344487Z >       sim = run_tardis(
2025-01-14T13:17:21.1344567Z             config_verysimple,
2025-01-14T13:17:21.1344651Z             atom_data=atomic_data,
2025-01-14T13:17:21.1344720Z         )
2025-01-14T13:17:21.1344725Z 
2025-01-14T13:17:21.1344865Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1344972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1345196Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1345281Z     simulation.run_convergence()
2025-01-14T13:17:21.1345399Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1345542Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1345638Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1345794Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1345898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1345902Z 
2025-01-14T13:17:21.1346167Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1346469Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1346695Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1346971Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1347143Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1347285Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1347289Z 
2025-01-14T13:17:21.1347376Z     def initialize_transport_state(
2025-01-14T13:17:21.1347450Z         self,
2025-01-14T13:17:21.1347526Z         simulation_state,
2025-01-14T13:17:21.1347605Z         opacity_state,
2025-01-14T13:17:21.1347679Z         macro_atom_state,
2025-01-14T13:17:21.1347756Z         plasma,
2025-01-14T13:17:21.1347828Z         no_of_packets,
2025-01-14T13:17:21.1347915Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1347987Z         iteration=0,
2025-01-14T13:17:21.1348066Z     ):
2025-01-14T13:17:21.1348189Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1348288Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1348356Z         else:
2025-01-14T13:17:21.1348442Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1348508Z     
2025-01-14T13:17:21.1348646Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1348748Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1348816Z         )
2025-01-14T13:17:21.1348887Z     
2025-01-14T13:17:21.1349014Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1349131Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1349283Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1349359Z         else:
2025-01-14T13:17:21.1349440Z             continuum_state = None
2025-01-14T13:17:21.1349545Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1349657Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1349754Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1349859Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1349965Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1350059Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1350154Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1350228Z         ).to_numba(
2025-01-14T13:17:21.1350308Z             macro_atom_state,
2025-01-14T13:17:21.1350401Z             self.line_interaction_type,
2025-01-14T13:17:21.1350468Z         )
2025-01-14T13:17:21.1350574Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1350844Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1350915Z         ]
2025-01-14T13:17:21.1351218Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1351222Z 
2025-01-14T13:17:21.1351372Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1351679Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-14T13:17:21.1351842Z 
2025-01-14T13:17:21.1352530Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1352886Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1352890Z 
2025-01-14T13:17:21.1352979Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1353125Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1353193Z         """
2025-01-14T13:17:21.1353414Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1353481Z     
2025-01-14T13:17:21.1353562Z         Parameters:
2025-01-14T13:17:21.1353634Z         -----------
2025-01-14T13:17:21.1353778Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1353931Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1353997Z     
2025-01-14T13:17:21.1354073Z         Returns:
2025-01-14T13:17:21.1354143Z         --------
2025-01-14T13:17:21.1354233Z         A TARDIS simulation object.
2025-01-14T13:17:21.1354299Z         """
2025-01-14T13:17:21.1354417Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1354540Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1354678Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1354857Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1354999Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1355097Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1355179Z >       sim = run_tardis(
2025-01-14T13:17:21.1355258Z             config_verysimple,
2025-01-14T13:17:21.1355349Z             atom_data=atomic_data,
2025-01-14T13:17:21.1355421Z         )
2025-01-14T13:17:21.1355425Z 
2025-01-14T13:17:21.1355561Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1355675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1355760Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1355851Z     simulation.run_convergence()
2025-01-14T13:17:21.1355963Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1356108Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1356201Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1356357Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1356465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1356469Z 
2025-01-14T13:17:21.1356739Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1356951Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1357171Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1357445Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1357606Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1357744Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1357748Z 
2025-01-14T13:17:21.1357833Z     def initialize_transport_state(
2025-01-14T13:17:21.1357907Z         self,
2025-01-14T13:17:21.1357983Z         simulation_state,
2025-01-14T13:17:21.1358066Z         opacity_state,
2025-01-14T13:17:21.1358140Z         macro_atom_state,
2025-01-14T13:17:21.1358217Z         plasma,
2025-01-14T13:17:21.1358289Z         no_of_packets,
2025-01-14T13:17:21.1358377Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1358547Z         iteration=0,
2025-01-14T13:17:21.1358615Z     ):
2025-01-14T13:17:21.1358745Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1358842Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1358916Z         else:
2025-01-14T13:17:21.1358992Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1359065Z     
2025-01-14T13:17:21.1359198Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1359297Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1359363Z         )
2025-01-14T13:17:21.1359434Z     
2025-01-14T13:17:21.1359563Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1359764Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1359919Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1359991Z         else:
2025-01-14T13:17:21.1360080Z             continuum_state = None
2025-01-14T13:17:21.1360185Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1360296Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1360388Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1360497Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1360594Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1360691Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1360778Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1360853Z         ).to_numba(
2025-01-14T13:17:21.1360930Z             macro_atom_state,
2025-01-14T13:17:21.1361025Z             self.line_interaction_type,
2025-01-14T13:17:21.1361090Z         )
2025-01-14T13:17:21.1361200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1361469Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1361543Z         ]
2025-01-14T13:17:21.1361952Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1361957Z 
2025-01-14T13:17:21.1362104Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1362306Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-14T13:17:21.1362310Z 
2025-01-14T13:17:21.1362977Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1363329Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1363333Z 
2025-01-14T13:17:21.1363429Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1363568Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1363646Z         """
2025-01-14T13:17:21.1363757Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1363830Z     
2025-01-14T13:17:21.1363904Z         Parameters:
2025-01-14T13:17:21.1363981Z         -----------
2025-01-14T13:17:21.1364117Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1364264Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1364331Z     
2025-01-14T13:17:21.1364406Z         Returns:
2025-01-14T13:17:21.1364480Z         --------
2025-01-14T13:17:21.1364568Z         A TARDIS simulation object.
2025-01-14T13:17:21.1364638Z         """
2025-01-14T13:17:21.1364756Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1364882Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1365019Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1365207Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1365463Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1365565Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1365641Z >       sim = run_tardis(
2025-01-14T13:17:21.1365728Z             config_verysimple,
2025-01-14T13:17:21.1365809Z             atom_data=atomic_data,
2025-01-14T13:17:21.1365884Z         )
2025-01-14T13:17:21.1365887Z 
2025-01-14T13:17:21.1366021Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1366133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1366217Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1366309Z     simulation.run_convergence()
2025-01-14T13:17:21.1366536Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1366678Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1366781Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1366933Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1367048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1367052Z 
2025-01-14T13:17:21.1367316Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1367520Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1367739Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1368015Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1368188Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1368325Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1368329Z 
2025-01-14T13:17:21.1368422Z     def initialize_transport_state(
2025-01-14T13:17:21.1368490Z         self,
2025-01-14T13:17:21.1368580Z         simulation_state,
2025-01-14T13:17:21.1368654Z         opacity_state,
2025-01-14T13:17:21.1368736Z         macro_atom_state,
2025-01-14T13:17:21.1368806Z         plasma,
2025-01-14T13:17:21.1368884Z         no_of_packets,
2025-01-14T13:17:21.1368964Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1369041Z         iteration=0,
2025-01-14T13:17:21.1369109Z     ):
2025-01-14T13:17:21.1369239Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1369334Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1369407Z         else:
2025-01-14T13:17:21.1369484Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1369556Z     
2025-01-14T13:17:21.1369696Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1369793Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1369865Z         )
2025-01-14T13:17:21.1369932Z     
2025-01-14T13:17:21.1370064Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1370181Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1370335Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1370402Z         else:
2025-01-14T13:17:21.1370489Z             continuum_state = None
2025-01-14T13:17:21.1370588Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1370701Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1370792Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1370901Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1370997Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1371097Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1371197Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1371266Z         ).to_numba(
2025-01-14T13:17:21.1371349Z             macro_atom_state,
2025-01-14T13:17:21.1371435Z             self.line_interaction_type,
2025-01-14T13:17:21.1371697Z         )
2025-01-14T13:17:21.1371802Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1372109Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1372175Z         ]
2025-01-14T13:17:21.1372483Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1372487Z 
2025-01-14T13:17:21.1372633Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1372831Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-14T13:17:21.1372835Z 
2025-01-14T13:17:21.1373639Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1373993Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1374005Z 
2025-01-14T13:17:21.1374104Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1374243Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1374315Z         """
2025-01-14T13:17:21.1374424Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1374495Z     
2025-01-14T13:17:21.1374569Z         Parameters:
2025-01-14T13:17:21.1374644Z         -----------
2025-01-14T13:17:21.1374783Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1374926Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1375002Z     
2025-01-14T13:17:21.1375072Z         Returns:
2025-01-14T13:17:21.1375148Z         --------
2025-01-14T13:17:21.1375231Z         A TARDIS simulation object.
2025-01-14T13:17:21.1375302Z         """
2025-01-14T13:17:21.1375415Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1375548Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1375678Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1375857Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1375990Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1376091Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1376165Z >       sim = run_tardis(
2025-01-14T13:17:21.1376249Z             config_verysimple,
2025-01-14T13:17:21.1376336Z             atom_data=atomic_data,
2025-01-14T13:17:21.1376402Z         )
2025-01-14T13:17:21.1376406Z 
2025-01-14T13:17:21.1376552Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1376665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1376754Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1376845Z     simulation.run_convergence()
2025-01-14T13:17:21.1376964Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1377102Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1377201Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1377354Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1377463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1377467Z 
2025-01-14T13:17:21.1377735Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1377935Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1378165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1378440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1378757Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1378889Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1378893Z 
2025-01-14T13:17:21.1378984Z     def initialize_transport_state(
2025-01-14T13:17:21.1379052Z         self,
2025-01-14T13:17:21.1379134Z         simulation_state,
2025-01-14T13:17:21.1379208Z         opacity_state,
2025-01-14T13:17:21.1379289Z         macro_atom_state,
2025-01-14T13:17:21.1379364Z         plasma,
2025-01-14T13:17:21.1379436Z         no_of_packets,
2025-01-14T13:17:21.1379523Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1379595Z         iteration=0,
2025-01-14T13:17:21.1379668Z     ):
2025-01-14T13:17:21.1379870Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1379974Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1380042Z         else:
2025-01-14T13:17:21.1380126Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1380192Z     
2025-01-14T13:17:21.1380336Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1380432Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1380503Z         )
2025-01-14T13:17:21.1380568Z     
2025-01-14T13:17:21.1380702Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1380815Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1380971Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1381044Z         else:
2025-01-14T13:17:21.1381125Z             continuum_state = None
2025-01-14T13:17:21.1381229Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1381333Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1381433Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1381536Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1381840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1381978Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1382076Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1382147Z         ).to_numba(
2025-01-14T13:17:21.1382229Z             macro_atom_state,
2025-01-14T13:17:21.1382316Z             self.line_interaction_type,
2025-01-14T13:17:21.1382389Z         )
2025-01-14T13:17:21.1382489Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1382761Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1382831Z         ]
2025-01-14T13:17:21.1383128Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1383139Z 
2025-01-14T13:17:21.1383291Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1383485Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-14T13:17:21.1383488Z 
2025-01-14T13:17:21.1384160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1384503Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1384512Z 
2025-01-14T13:17:21.1384599Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1384739Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1384806Z         """
2025-01-14T13:17:21.1384920Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1384988Z     
2025-01-14T13:17:21.1385066Z         Parameters:
2025-01-14T13:17:21.1385138Z         -----------
2025-01-14T13:17:21.1385278Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1385420Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1385622Z     
2025-01-14T13:17:21.1385693Z         Returns:
2025-01-14T13:17:21.1385767Z         --------
2025-01-14T13:17:21.1385849Z         A TARDIS simulation object.
2025-01-14T13:17:21.1385920Z         """
2025-01-14T13:17:21.1386033Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1386161Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1386298Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1386469Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1386606Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1386822Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1386906Z >       sim = run_tardis(
2025-01-14T13:17:21.1386987Z             config_verysimple,
2025-01-14T13:17:21.1387071Z             atom_data=atomic_data,
2025-01-14T13:17:21.1387139Z         )
2025-01-14T13:17:21.1387148Z 
2025-01-14T13:17:21.1387287Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1387394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1387483Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1387567Z     simulation.run_convergence()
2025-01-14T13:17:21.1387686Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1387830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1387924Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1388080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1388190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1388194Z 
2025-01-14T13:17:21.1388460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1388658Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1388887Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1389161Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1389323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1389463Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1389467Z 
2025-01-14T13:17:21.1389553Z     def initialize_transport_state(
2025-01-14T13:17:21.1389626Z         self,
2025-01-14T13:17:21.1389703Z         simulation_state,
2025-01-14T13:17:21.1389783Z         opacity_state,
2025-01-14T13:17:21.1389857Z         macro_atom_state,
2025-01-14T13:17:21.1389938Z         plasma,
2025-01-14T13:17:21.1390011Z         no_of_packets,
2025-01-14T13:17:21.1390095Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1390167Z         iteration=0,
2025-01-14T13:17:21.1390239Z     ):
2025-01-14T13:17:21.1390366Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1390466Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1390536Z         else:
2025-01-14T13:17:21.1390621Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1390692Z     
2025-01-14T13:17:21.1390823Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1390922Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1390990Z         )
2025-01-14T13:17:21.1391060Z     
2025-01-14T13:17:21.1391187Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1391304Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1391456Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1391529Z         else:
2025-01-14T13:17:21.1391715Z             continuum_state = None
2025-01-14T13:17:21.1391822Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1392074Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1392172Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1392276Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1392379Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1392477Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1392568Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1392644Z         ).to_numba(
2025-01-14T13:17:21.1392721Z             macro_atom_state,
2025-01-14T13:17:21.1392812Z             self.line_interaction_type,
2025-01-14T13:17:21.1392878Z         )
2025-01-14T13:17:21.1392983Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1393359Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1393433Z         ]
2025-01-14T13:17:21.1393732Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1393742Z 
2025-01-14T13:17:21.1393891Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1394085Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-14T13:17:21.1394095Z 
2025-01-14T13:17:21.1394750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1395099Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1395108Z 
2025-01-14T13:17:21.1395194Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1395333Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1395402Z         """
2025-01-14T13:17:21.1395513Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1395585Z     
2025-01-14T13:17:21.1395663Z         Parameters:
2025-01-14T13:17:21.1395733Z         -----------
2025-01-14T13:17:21.1395872Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1396017Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1396084Z     
2025-01-14T13:17:21.1396159Z         Returns:
2025-01-14T13:17:21.1396228Z         --------
2025-01-14T13:17:21.1396316Z         A TARDIS simulation object.
2025-01-14T13:17:21.1396383Z         """
2025-01-14T13:17:21.1396500Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1396621Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1396764Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1396937Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1397073Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1397172Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1397257Z >       sim = run_tardis(
2025-01-14T13:17:21.1397345Z             config_verysimple,
2025-01-14T13:17:21.1397426Z             atom_data=atomic_data,
2025-01-14T13:17:21.1397501Z         )
2025-01-14T13:17:21.1397505Z 
2025-01-14T13:17:21.1397637Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1397747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1397832Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1397921Z     simulation.run_convergence()
2025-01-14T13:17:21.1398032Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1398177Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1398270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1398425Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1398619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1398629Z 
2025-01-14T13:17:21.1398890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1399093Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1399315Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1399593Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1399750Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1399983Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1399987Z 
2025-01-14T13:17:21.1400076Z     def initialize_transport_state(
2025-01-14T13:17:21.1400150Z         self,
2025-01-14T13:17:21.1400226Z         simulation_state,
2025-01-14T13:17:21.1400304Z         opacity_state,
2025-01-14T13:17:21.1400384Z         macro_atom_state,
2025-01-14T13:17:21.1400458Z         plasma,
2025-01-14T13:17:21.1400536Z         no_of_packets,
2025-01-14T13:17:21.1400615Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1400692Z         iteration=0,
2025-01-14T13:17:21.1400759Z     ):
2025-01-14T13:17:21.1400886Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1400980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1401053Z         else:
2025-01-14T13:17:21.1401129Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1401199Z     
2025-01-14T13:17:21.1401330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1401432Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1401504Z         )
2025-01-14T13:17:21.1401674Z     
2025-01-14T13:17:21.1401801Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1401916Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1402073Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1402146Z         else:
2025-01-14T13:17:21.1402231Z             continuum_state = None
2025-01-14T13:17:21.1402328Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1402438Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1402528Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1402634Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1402729Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1402825Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1402913Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1402991Z         ).to_numba(
2025-01-14T13:17:21.1403067Z             macro_atom_state,
2025-01-14T13:17:21.1403158Z             self.line_interaction_type,
2025-01-14T13:17:21.1403225Z         )
2025-01-14T13:17:21.1403330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1403605Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1403670Z         ]
2025-01-14T13:17:21.1403975Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1403979Z 
2025-01-14T13:17:21.1404123Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1404321Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-14T13:17:21.1404325Z 
2025-01-14T13:17:21.1404984Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1405330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1405456Z 
2025-01-14T13:17:21.1405552Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1405689Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1405761Z         """
2025-01-14T13:17:21.1405867Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1405938Z     
2025-01-14T13:17:21.1406010Z         Parameters:
2025-01-14T13:17:21.1406086Z         -----------
2025-01-14T13:17:21.1406224Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1406372Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1406438Z     
2025-01-14T13:17:21.1406512Z         Returns:
2025-01-14T13:17:21.1406687Z         --------
2025-01-14T13:17:21.1406779Z         A TARDIS simulation object.
2025-01-14T13:17:21.1406846Z         """
2025-01-14T13:17:21.1406966Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1407094Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1407231Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1407411Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1407545Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1407646Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1407720Z >       sim = run_tardis(
2025-01-14T13:17:21.1407818Z             config_verysimple,
2025-01-14T13:17:21.1407900Z             atom_data=atomic_data,
2025-01-14T13:17:21.1407973Z         )
2025-01-14T13:17:21.1407977Z 
2025-01-14T13:17:21.1408113Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1408237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1408324Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1408417Z     simulation.run_convergence()
2025-01-14T13:17:21.1408539Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1408685Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1408787Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1408940Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1409057Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1409061Z 
2025-01-14T13:17:21.1409324Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1409532Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1409751Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1410037Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1410205Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1410346Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1410350Z 
2025-01-14T13:17:21.1410447Z     def initialize_transport_state(
2025-01-14T13:17:21.1410517Z         self,
2025-01-14T13:17:21.1410602Z         simulation_state,
2025-01-14T13:17:21.1410676Z         opacity_state,
2025-01-14T13:17:21.1410756Z         macro_atom_state,
2025-01-14T13:17:21.1410830Z         plasma,
2025-01-14T13:17:21.1410911Z         no_of_packets,
2025-01-14T13:17:21.1410994Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1411071Z         iteration=0,
2025-01-14T13:17:21.1411138Z     ):
2025-01-14T13:17:21.1411267Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1411364Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1411443Z         else:
2025-01-14T13:17:21.1411522Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1411687Z     
2025-01-14T13:17:21.1411827Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1412063Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1412137Z         )
2025-01-14T13:17:21.1412204Z     
2025-01-14T13:17:21.1412339Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1412453Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1412613Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1412683Z         else:
2025-01-14T13:17:21.1412773Z             continuum_state = None
2025-01-14T13:17:21.1412872Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1412987Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1413080Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1413303Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1413404Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1413504Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1413601Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1413682Z         ).to_numba(
2025-01-14T13:17:21.1413766Z             macro_atom_state,
2025-01-14T13:17:21.1413856Z             self.line_interaction_type,
2025-01-14T13:17:21.1413933Z         )
2025-01-14T13:17:21.1414038Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1414315Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1414384Z         ]
2025-01-14T13:17:21.1414693Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1414697Z 
2025-01-14T13:17:21.1414847Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1415055Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-14T13:17:21.1415058Z 
2025-01-14T13:17:21.1415723Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1416073Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1416077Z 
2025-01-14T13:17:21.1416172Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1416311Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1416388Z         """
2025-01-14T13:17:21.1416498Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1416571Z     
2025-01-14T13:17:21.1416645Z         Parameters:
2025-01-14T13:17:21.1416725Z         -----------
2025-01-14T13:17:21.1416878Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1417024Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1417098Z     
2025-01-14T13:17:21.1417173Z         Returns:
2025-01-14T13:17:21.1417251Z         --------
2025-01-14T13:17:21.1417335Z         A TARDIS simulation object.
2025-01-14T13:17:21.1417409Z         """
2025-01-14T13:17:21.1417522Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1417651Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1417781Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1417962Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1418096Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1418202Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1418279Z >       sim = run_tardis(
2025-01-14T13:17:21.1418372Z             config_verysimple,
2025-01-14T13:17:21.1418461Z             atom_data=atomic_data,
2025-01-14T13:17:21.1418529Z         )
2025-01-14T13:17:21.1418533Z 
2025-01-14T13:17:21.1418677Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1418873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1418967Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1419055Z     simulation.run_convergence()
2025-01-14T13:17:21.1419176Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1419313Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1419413Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1419566Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1419681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1419685Z 
2025-01-14T13:17:21.1420031Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1420237Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1420466Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1420744Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1420912Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1421048Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1421052Z 
2025-01-14T13:17:21.1421146Z     def initialize_transport_state(
2025-01-14T13:17:21.1421214Z         self,
2025-01-14T13:17:21.1421300Z         simulation_state,
2025-01-14T13:17:21.1421374Z         opacity_state,
2025-01-14T13:17:21.1421456Z         macro_atom_state,
2025-01-14T13:17:21.1421530Z         plasma,
2025-01-14T13:17:21.1421790Z         no_of_packets,
2025-01-14T13:17:21.1421923Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1422001Z         iteration=0,
2025-01-14T13:17:21.1422073Z     ):
2025-01-14T13:17:21.1422197Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1422307Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1422376Z         else:
2025-01-14T13:17:21.1422461Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1422529Z     
2025-01-14T13:17:21.1422668Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1422763Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1422837Z         )
2025-01-14T13:17:21.1422905Z     
2025-01-14T13:17:21.1423036Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1423147Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1423304Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1423378Z         else:
2025-01-14T13:17:21.1423465Z             continuum_state = None
2025-01-14T13:17:21.1423572Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1423678Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1423777Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1423883Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1423986Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1424078Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1424173Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1424245Z         ).to_numba(
2025-01-14T13:17:21.1424329Z             macro_atom_state,
2025-01-14T13:17:21.1424417Z             self.line_interaction_type,
2025-01-14T13:17:21.1424491Z         )
2025-01-14T13:17:21.1424591Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1424869Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1424947Z         ]
2025-01-14T13:17:21.1425246Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1425250Z 
2025-01-14T13:17:21.1425537Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1425757Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-14T13:17:21.1425761Z 
2025-01-14T13:17:21.1426427Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1426773Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1426785Z 
2025-01-14T13:17:21.1426873Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1427138Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1427210Z         """
2025-01-14T13:17:21.1427329Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1427396Z     
2025-01-14T13:17:21.1427482Z         Parameters:
2025-01-14T13:17:21.1427558Z         -----------
2025-01-14T13:17:21.1427702Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1427844Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1427918Z     
2025-01-14T13:17:21.1427991Z         Returns:
2025-01-14T13:17:21.1428070Z         --------
2025-01-14T13:17:21.1428155Z         A TARDIS simulation object.
2025-01-14T13:17:21.1428228Z         """
2025-01-14T13:17:21.1428344Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1428474Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1428610Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1428789Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1428928Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1429025Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1429113Z >       sim = run_tardis(
2025-01-14T13:17:21.1429193Z             config_verysimple,
2025-01-14T13:17:21.1429281Z             atom_data=atomic_data,
2025-01-14T13:17:21.1429350Z         )
2025-01-14T13:17:21.1429354Z 
2025-01-14T13:17:21.1429496Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1429606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1429697Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1429792Z     simulation.run_convergence()
2025-01-14T13:17:21.1429905Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1430054Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1430153Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1430317Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1430427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1430434Z 
2025-01-14T13:17:21.1430707Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1430909Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1431136Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1431409Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1431684Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1431830Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1431834Z 
2025-01-14T13:17:21.1431928Z     def initialize_transport_state(
2025-01-14T13:17:21.1432006Z         self,
2025-01-14T13:17:21.1432084Z         simulation_state,
2025-01-14T13:17:21.1432168Z         opacity_state,
2025-01-14T13:17:21.1432243Z         macro_atom_state,
2025-01-14T13:17:21.1432437Z         plasma,
2025-01-14T13:17:21.1432511Z         no_of_packets,
2025-01-14T13:17:21.1432597Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1432672Z         iteration=0,
2025-01-14T13:17:21.1432744Z     ):
2025-01-14T13:17:21.1432871Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1432971Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1433041Z         else:
2025-01-14T13:17:21.1433124Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1433195Z     
2025-01-14T13:17:21.1433328Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1433426Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1433492Z         )
2025-01-14T13:17:21.1433565Z     
2025-01-14T13:17:21.1433796Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1433919Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1434068Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1434148Z         else:
2025-01-14T13:17:21.1434227Z             continuum_state = None
2025-01-14T13:17:21.1434337Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1434443Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1434540Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1434643Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1434745Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1434843Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1434934Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1435011Z         ).to_numba(
2025-01-14T13:17:21.1435089Z             macro_atom_state,
2025-01-14T13:17:21.1435185Z             self.line_interaction_type,
2025-01-14T13:17:21.1435254Z         )
2025-01-14T13:17:21.1435366Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1435635Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1435714Z         ]
2025-01-14T13:17:21.1436010Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1436014Z 
2025-01-14T13:17:21.1436166Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1436383Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-14T13:17:21.1436394Z 
2025-01-14T13:17:21.1437054Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1437407Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1437411Z 
2025-01-14T13:17:21.1437501Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1437645Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1437714Z         """
2025-01-14T13:17:21.1437834Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1437919Z     
2025-01-14T13:17:21.1437999Z         Parameters:
2025-01-14T13:17:21.1438077Z         -----------
2025-01-14T13:17:21.1438212Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1438358Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1438425Z     
2025-01-14T13:17:21.1438501Z         Returns:
2025-01-14T13:17:21.1438573Z         --------
2025-01-14T13:17:21.1438670Z         A TARDIS simulation object.
2025-01-14T13:17:21.1438737Z         """
2025-01-14T13:17:21.1438862Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1438984Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1439118Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1439380Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1439518Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1439613Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1439694Z >       sim = run_tardis(
2025-01-14T13:17:21.1439780Z             config_verysimple,
2025-01-14T13:17:21.1439861Z             atom_data=atomic_data,
2025-01-14T13:17:21.1439936Z         )
2025-01-14T13:17:21.1439940Z 
2025-01-14T13:17:21.1440073Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1440192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1440351Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1440450Z     simulation.run_convergence()
2025-01-14T13:17:21.1440569Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1440715Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1440820Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1440979Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1441086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1441096Z 
2025-01-14T13:17:21.1441359Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1441658Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1441882Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1442166Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1442325Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1442471Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1442479Z 
2025-01-14T13:17:21.1442567Z     def initialize_transport_state(
2025-01-14T13:17:21.1442643Z         self,
2025-01-14T13:17:21.1442721Z         simulation_state,
2025-01-14T13:17:21.1442803Z         opacity_state,
2025-01-14T13:17:21.1442888Z         macro_atom_state,
2025-01-14T13:17:21.1442957Z         plasma,
2025-01-14T13:17:21.1443035Z         no_of_packets,
2025-01-14T13:17:21.1443118Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1443195Z         iteration=0,
2025-01-14T13:17:21.1443261Z     ):
2025-01-14T13:17:21.1443388Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1443482Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1443556Z         else:
2025-01-14T13:17:21.1443636Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1443708Z     
2025-01-14T13:17:21.1443841Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1443939Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1444010Z         )
2025-01-14T13:17:21.1444082Z     
2025-01-14T13:17:21.1444208Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1444325Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1444481Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1444549Z         else:
2025-01-14T13:17:21.1444637Z             continuum_state = None
2025-01-14T13:17:21.1444737Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1444848Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1444938Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1445046Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1445147Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1445247Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1445339Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1445415Z         ).to_numba(
2025-01-14T13:17:21.1445615Z             macro_atom_state,
2025-01-14T13:17:21.1445708Z             self.line_interaction_type,
2025-01-14T13:17:21.1445775Z         )
2025-01-14T13:17:21.1445883Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1446156Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1446224Z         ]
2025-01-14T13:17:21.1446526Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1446531Z 
2025-01-14T13:17:21.1446676Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1446999Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-14T13:17:21.1447004Z 
2025-01-14T13:17:21.1447666Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1448022Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1448026Z 
2025-01-14T13:17:21.1448121Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1448259Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1448333Z         """
2025-01-14T13:17:21.1448440Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1448512Z     
2025-01-14T13:17:21.1448586Z         Parameters:
2025-01-14T13:17:21.1448663Z         -----------
2025-01-14T13:17:21.1448805Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1448957Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1449024Z     
2025-01-14T13:17:21.1449103Z         Returns:
2025-01-14T13:17:21.1449175Z         --------
2025-01-14T13:17:21.1449268Z         A TARDIS simulation object.
2025-01-14T13:17:21.1449337Z         """
2025-01-14T13:17:21.1449456Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1449584Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1449718Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1449898Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1450031Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1450133Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1450208Z >       sim = run_tardis(
2025-01-14T13:17:21.1450294Z             config_verysimple,
2025-01-14T13:17:21.1450381Z             atom_data=atomic_data,
2025-01-14T13:17:21.1450455Z         )
2025-01-14T13:17:21.1450459Z 
2025-01-14T13:17:21.1450596Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1450710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1450803Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1450894Z     simulation.run_convergence()
2025-01-14T13:17:21.1451013Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1451147Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1451245Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1451395Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1451506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1451511Z 
2025-01-14T13:17:21.1451867Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1452074Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1452296Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1452715Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1452879Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1453013Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1453017Z 
2025-01-14T13:17:21.1453110Z     def initialize_transport_state(
2025-01-14T13:17:21.1453178Z         self,
2025-01-14T13:17:21.1453258Z         simulation_state,
2025-01-14T13:17:21.1453332Z         opacity_state,
2025-01-14T13:17:21.1453412Z         macro_atom_state,
2025-01-14T13:17:21.1453482Z         plasma,
2025-01-14T13:17:21.1453560Z         no_of_packets,
2025-01-14T13:17:21.1453639Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1453836Z         iteration=0,
2025-01-14T13:17:21.1453907Z     ):
2025-01-14T13:17:21.1454036Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1454128Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1454208Z         else:
2025-01-14T13:17:21.1454289Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1454356Z     
2025-01-14T13:17:21.1454492Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1454587Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1454658Z         )
2025-01-14T13:17:21.1454724Z     
2025-01-14T13:17:21.1454853Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1454962Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1455117Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1455184Z         else:
2025-01-14T13:17:21.1455273Z             continuum_state = None
2025-01-14T13:17:21.1455376Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1455487Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1455578Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1455684Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1455791Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1455885Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1455979Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1456049Z         ).to_numba(
2025-01-14T13:17:21.1456131Z             macro_atom_state,
2025-01-14T13:17:21.1456218Z             self.line_interaction_type,
2025-01-14T13:17:21.1456291Z         )
2025-01-14T13:17:21.1456390Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1456662Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1456732Z         ]
2025-01-14T13:17:21.1457040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1457044Z 
2025-01-14T13:17:21.1457191Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1457414Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-14T13:17:21.1457418Z 
2025-01-14T13:17:21.1458078Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1458424Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1458427Z 
2025-01-14T13:17:21.1458521Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1458662Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1458736Z         """
2025-01-14T13:17:21.1458843Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1458914Z     
2025-01-14T13:17:21.1458991Z         Parameters:
2025-01-14T13:17:21.1459063Z         -----------
2025-01-14T13:17:21.1459292Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1459433Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1459504Z     
2025-01-14T13:17:21.1459574Z         Returns:
2025-01-14T13:17:21.1459649Z         --------
2025-01-14T13:17:21.1459731Z         A TARDIS simulation object.
2025-01-14T13:17:21.1459803Z         """
2025-01-14T13:17:21.1459915Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1460041Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1460171Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1460426Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1460559Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1460659Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1460738Z >       sim = run_tardis(
2025-01-14T13:17:21.1460824Z             config_verysimple,
2025-01-14T13:17:21.1460910Z             atom_data=atomic_data,
2025-01-14T13:17:21.1460977Z         )
2025-01-14T13:17:21.1460982Z 
2025-01-14T13:17:21.1461122Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1461231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1461319Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1461403Z     simulation.run_convergence()
2025-01-14T13:17:21.1461520Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1461882Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1461988Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1462147Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1462257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1462262Z 
2025-01-14T13:17:21.1462526Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1462730Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1462955Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1463229Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1463392Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1463524Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1463528Z 
2025-01-14T13:17:21.1463621Z     def initialize_transport_state(
2025-01-14T13:17:21.1463690Z         self,
2025-01-14T13:17:21.1463778Z         simulation_state,
2025-01-14T13:17:21.1463852Z         opacity_state,
2025-01-14T13:17:21.1463931Z         macro_atom_state,
2025-01-14T13:17:21.1464005Z         plasma,
2025-01-14T13:17:21.1464077Z         no_of_packets,
2025-01-14T13:17:21.1464165Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1464236Z         iteration=0,
2025-01-14T13:17:21.1464309Z     ):
2025-01-14T13:17:21.1464430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1464528Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1464596Z         else:
2025-01-14T13:17:21.1464677Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1464744Z     
2025-01-14T13:17:21.1464881Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1464976Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1465049Z         )
2025-01-14T13:17:21.1465117Z     
2025-01-14T13:17:21.1465251Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1465364Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1465525Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1465598Z         else:
2025-01-14T13:17:21.1465810Z             continuum_state = None
2025-01-14T13:17:21.1465914Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1466020Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1466114Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1466216Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1466318Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1466409Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1466504Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1466574Z         ).to_numba(
2025-01-14T13:17:21.1466655Z             macro_atom_state,
2025-01-14T13:17:21.1466741Z             self.line_interaction_type,
2025-01-14T13:17:21.1466917Z         )
2025-01-14T13:17:21.1467020Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1467295Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1467371Z         ]
2025-01-14T13:17:21.1467668Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1467671Z 
2025-01-14T13:17:21.1467821Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1468037Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-14T13:17:21.1468041Z 
2025-01-14T13:17:21.1468698Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1469051Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1469055Z 
2025-01-14T13:17:21.1469141Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1469286Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1469353Z         """
2025-01-14T13:17:21.1469469Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1469534Z     
2025-01-14T13:17:21.1469611Z         Parameters:
2025-01-14T13:17:21.1469682Z         -----------
2025-01-14T13:17:21.1469822Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1469964Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1470036Z     
2025-01-14T13:17:21.1470105Z         Returns:
2025-01-14T13:17:21.1470181Z         --------
2025-01-14T13:17:21.1470264Z         A TARDIS simulation object.
2025-01-14T13:17:21.1470337Z         """
2025-01-14T13:17:21.1470458Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1470580Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1470716Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1470891Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1471029Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1471127Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1471208Z >       sim = run_tardis(
2025-01-14T13:17:21.1471289Z             config_verysimple,
2025-01-14T13:17:21.1471374Z             atom_data=atomic_data,
2025-01-14T13:17:21.1471442Z         )
2025-01-14T13:17:21.1471446Z 
2025-01-14T13:17:21.1471685Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1471796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1471885Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1472006Z     simulation.run_convergence()
2025-01-14T13:17:21.1472119Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1472260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1472487Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1472643Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1472751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1472755Z 
2025-01-14T13:17:21.1473021Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1473222Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1473444Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1473715Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1473982Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1474126Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1474131Z 
2025-01-14T13:17:21.1474218Z     def initialize_transport_state(
2025-01-14T13:17:21.1474296Z         self,
2025-01-14T13:17:21.1474373Z         simulation_state,
2025-01-14T13:17:21.1474453Z         opacity_state,
2025-01-14T13:17:21.1474527Z         macro_atom_state,
2025-01-14T13:17:21.1474601Z         plasma,
2025-01-14T13:17:21.1474674Z         no_of_packets,
2025-01-14T13:17:21.1474760Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1474832Z         iteration=0,
2025-01-14T13:17:21.1474905Z     ):
2025-01-14T13:17:21.1475028Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1475126Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1475194Z         else:
2025-01-14T13:17:21.1475277Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1475349Z     
2025-01-14T13:17:21.1475486Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1475588Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1475656Z         )
2025-01-14T13:17:21.1475726Z     
2025-01-14T13:17:21.1475857Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1475973Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1476125Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1476197Z         else:
2025-01-14T13:17:21.1476277Z             continuum_state = None
2025-01-14T13:17:21.1476382Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1476488Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1476584Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1476686Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1476790Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1476892Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1476982Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1477057Z         ).to_numba(
2025-01-14T13:17:21.1477134Z             macro_atom_state,
2025-01-14T13:17:21.1477228Z             self.line_interaction_type,
2025-01-14T13:17:21.1477295Z         )
2025-01-14T13:17:21.1477399Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1477662Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1477736Z         ]
2025-01-14T13:17:21.1478034Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1478037Z 
2025-01-14T13:17:21.1478189Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1478411Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-14T13:17:21.1478419Z 
2025-01-14T13:17:21.1479072Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1479540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1479544Z 
2025-01-14T13:17:21.1479631Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1479774Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1479842Z         """
2025-01-14T13:17:21.1479955Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1480023Z     
2025-01-14T13:17:21.1480102Z         Parameters:
2025-01-14T13:17:21.1480178Z         -----------
2025-01-14T13:17:21.1480312Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1480542Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1480611Z     
2025-01-14T13:17:21.1480685Z         Returns:
2025-01-14T13:17:21.1480755Z         --------
2025-01-14T13:17:21.1480842Z         A TARDIS simulation object.
2025-01-14T13:17:21.1480915Z         """
2025-01-14T13:17:21.1481031Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1481153Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1481286Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1481458Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1481701Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1481799Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1481882Z >       sim = run_tardis(
2025-01-14T13:17:21.1481968Z             config_verysimple,
2025-01-14T13:17:21.1482046Z             atom_data=atomic_data,
2025-01-14T13:17:21.1482122Z         )
2025-01-14T13:17:21.1482126Z 
2025-01-14T13:17:21.1482258Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1482372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1482463Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1482553Z     simulation.run_convergence()
2025-01-14T13:17:21.1482665Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1482805Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1482898Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1483053Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1483160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1483170Z 
2025-01-14T13:17:21.1483439Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1483650Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1483871Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1484148Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1484310Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1484449Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1484453Z 
2025-01-14T13:17:21.1484539Z     def initialize_transport_state(
2025-01-14T13:17:21.1484612Z         self,
2025-01-14T13:17:21.1484690Z         simulation_state,
2025-01-14T13:17:21.1484770Z         opacity_state,
2025-01-14T13:17:21.1484852Z         macro_atom_state,
2025-01-14T13:17:21.1484922Z         plasma,
2025-01-14T13:17:21.1485000Z         no_of_packets,
2025-01-14T13:17:21.1485081Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1485156Z         iteration=0,
2025-01-14T13:17:21.1485226Z     ):
2025-01-14T13:17:21.1485359Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1485455Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1485529Z         else:
2025-01-14T13:17:21.1485606Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1485799Z     
2025-01-14T13:17:21.1485934Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1486032Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1486100Z         )
2025-01-14T13:17:21.1486171Z     
2025-01-14T13:17:21.1486299Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1486418Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1486576Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1486645Z         else:
2025-01-14T13:17:21.1486732Z             continuum_state = None
2025-01-14T13:17:21.1486830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1487046Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1487142Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1487253Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1487356Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1487454Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1487543Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1487618Z         ).to_numba(
2025-01-14T13:17:21.1487699Z             macro_atom_state,
2025-01-14T13:17:21.1487790Z             self.line_interaction_type,
2025-01-14T13:17:21.1487857Z         )
2025-01-14T13:17:21.1487962Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1488237Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1488303Z         ]
2025-01-14T13:17:21.1488613Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1488617Z 
2025-01-14T13:17:21.1488763Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1488989Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-14T13:17:21.1488998Z 
2025-01-14T13:17:21.1489670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1490020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1490024Z 
2025-01-14T13:17:21.1490118Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1490258Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1490331Z         """
2025-01-14T13:17:21.1490442Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1490514Z     
2025-01-14T13:17:21.1490588Z         Parameters:
2025-01-14T13:17:21.1490664Z         -----------
2025-01-14T13:17:21.1490799Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1490947Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1491013Z     
2025-01-14T13:17:21.1491089Z         Returns:
2025-01-14T13:17:21.1491159Z         --------
2025-01-14T13:17:21.1491246Z         A TARDIS simulation object.
2025-01-14T13:17:21.1491313Z         """
2025-01-14T13:17:21.1491435Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1491662Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1491796Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1491974Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1492110Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1492211Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1492287Z >       sim = run_tardis(
2025-01-14T13:17:21.1492374Z             config_verysimple,
2025-01-14T13:17:21.1492576Z             atom_data=atomic_data,
2025-01-14T13:17:21.1492649Z         )
2025-01-14T13:17:21.1492652Z 
2025-01-14T13:17:21.1492786Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1492902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1492990Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1497576Z     simulation.run_convergence()
2025-01-14T13:17:21.1497742Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1497897Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1498008Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1498169Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1498455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1498461Z 
2025-01-14T13:17:21.1498740Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1498959Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1499180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1499462Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1499629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1499766Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1499769Z 
2025-01-14T13:17:21.1499864Z     def initialize_transport_state(
2025-01-14T13:17:21.1499937Z         self,
2025-01-14T13:17:21.1500022Z         simulation_state,
2025-01-14T13:17:21.1500105Z         opacity_state,
2025-01-14T13:17:21.1500188Z         macro_atom_state,
2025-01-14T13:17:21.1500259Z         plasma,
2025-01-14T13:17:21.1500336Z         no_of_packets,
2025-01-14T13:17:21.1500420Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1500502Z         iteration=0,
2025-01-14T13:17:21.1500568Z     ):
2025-01-14T13:17:21.1500707Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1500806Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1500880Z         else:
2025-01-14T13:17:21.1500960Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1501033Z     
2025-01-14T13:17:21.1501173Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1501270Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1501344Z         )
2025-01-14T13:17:21.1501409Z     
2025-01-14T13:17:21.1501544Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1501931Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1502125Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1502196Z         else:
2025-01-14T13:17:21.1502284Z             continuum_state = None
2025-01-14T13:17:21.1502390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1502506Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1502601Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1502715Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1502814Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1502914Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1503008Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1503078Z         ).to_numba(
2025-01-14T13:17:21.1503162Z             macro_atom_state,
2025-01-14T13:17:21.1503251Z             self.line_interaction_type,
2025-01-14T13:17:21.1503322Z         )
2025-01-14T13:17:21.1503427Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1503706Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1503771Z         ]
2025-01-14T13:17:21.1504227Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1504231Z 
2025-01-14T13:17:21.1504381Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1504606Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-14T13:17:21.1504610Z 
2025-01-14T13:17:21.1505290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1505761Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1505766Z 
2025-01-14T13:17:21.1505864Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1506006Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1506086Z         """
2025-01-14T13:17:21.1506199Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:17:21.1506270Z     
2025-01-14T13:17:21.1506344Z         Parameters:
2025-01-14T13:17:21.1506421Z         -----------
2025-01-14T13:17:21.1506563Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:17:21.1506706Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:17:21.1506777Z     
2025-01-14T13:17:21.1506847Z         Returns:
2025-01-14T13:17:21.1506923Z         --------
2025-01-14T13:17:21.1507006Z         A TARDIS simulation object.
2025-01-14T13:17:21.1507077Z         """
2025-01-14T13:17:21.1507190Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1507325Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1507456Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1507636Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1507776Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1507878Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1507954Z >       sim = run_tardis(
2025-01-14T13:17:21.1508040Z             config_verysimple,
2025-01-14T13:17:21.1508125Z             atom_data=atomic_data,
2025-01-14T13:17:21.1508193Z         )
2025-01-14T13:17:21.1508197Z 
2025-01-14T13:17:21.1508341Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:17:21.1508459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1508550Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1508636Z     simulation.run_convergence()
2025-01-14T13:17:21.1508758Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1508899Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1508999Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1509155Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1509268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1509272Z 
2025-01-14T13:17:21.1509541Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d583110>
2025-01-14T13:17:21.1509740Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d318da0>
2025-01-14T13:17:21.1509962Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d5aebd0>
2025-01-14T13:17:21.1510234Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1c9c1a0>
2025-01-14T13:17:21.1510400Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a1c175f0>
2025-01-14T13:17:21.1510536Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1510540Z 
2025-01-14T13:17:21.1510634Z     def initialize_transport_state(
2025-01-14T13:17:21.1510702Z         self,
2025-01-14T13:17:21.1510881Z         simulation_state,
2025-01-14T13:17:21.1510957Z         opacity_state,
2025-01-14T13:17:21.1511038Z         macro_atom_state,
2025-01-14T13:17:21.1511112Z         plasma,
2025-01-14T13:17:21.1511184Z         no_of_packets,
2025-01-14T13:17:21.1511270Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1511343Z         iteration=0,
2025-01-14T13:17:21.1511414Z     ):
2025-01-14T13:17:21.1511540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1511759Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1511830Z         else:
2025-01-14T13:17:21.1511912Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1511979Z     
2025-01-14T13:17:21.1512234Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1512335Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1512407Z         )
2025-01-14T13:17:21.1512472Z     
2025-01-14T13:17:21.1512606Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1512726Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1512883Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1512956Z         else:
2025-01-14T13:17:21.1513037Z             continuum_state = None
2025-01-14T13:17:21.1513142Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1513251Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1513346Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1513451Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1513553Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1513646Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1513748Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1513820Z         ).to_numba(
2025-01-14T13:17:21.1513903Z             macro_atom_state,
2025-01-14T13:17:21.1513990Z             self.line_interaction_type,
2025-01-14T13:17:21.1514068Z         )
2025-01-14T13:17:21.1514169Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1514445Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1514517Z         ]
2025-01-14T13:17:21.1514817Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1514821Z 
2025-01-14T13:17:21.1514976Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1515171Z __ ERROR at setup of TestRPacketPlotter.test_get_coordinates_with_theta_init ___
2025-01-14T13:17:21.1515175Z 
2025-01-14T13:17:21.1515353Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1515679Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1515683Z 
2025-01-14T13:17:21.1515777Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1515871Z         "expected,obtained",
2025-01-14T13:17:21.1515938Z         [
2025-01-14T13:17:21.1516010Z             (
2025-01-14T13:17:21.1516119Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1516229Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1516298Z             ),
2025-01-14T13:17:21.1516455Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1516573Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1516647Z         ],
2025-01-14T13:17:21.1516713Z     )
2025-01-14T13:17:21.1516879Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1517002Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1517006Z 
2025-01-14T13:17:21.1517184Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1517295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1517701Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1517820Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1518086Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1518197Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1518328Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1518408Z     sim = run_tardis(
2025-01-14T13:17:21.1518491Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1518581Z     simulation.run_convergence()
2025-01-14T13:17:21.1518772Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1518922Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1519015Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1519171Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1519290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1519294Z 
2025-01-14T13:17:21.1519555Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1519762Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1519983Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1520258Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1520419Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1520565Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1520568Z 
2025-01-14T13:17:21.1520656Z     def initialize_transport_state(
2025-01-14T13:17:21.1520730Z         self,
2025-01-14T13:17:21.1520811Z         simulation_state,
2025-01-14T13:17:21.1520891Z         opacity_state,
2025-01-14T13:17:21.1520974Z         macro_atom_state,
2025-01-14T13:17:21.1521043Z         plasma,
2025-01-14T13:17:21.1521121Z         no_of_packets,
2025-01-14T13:17:21.1521201Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1521278Z         iteration=0,
2025-01-14T13:17:21.1521349Z     ):
2025-01-14T13:17:21.1521477Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1521669Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1521745Z         else:
2025-01-14T13:17:21.1521821Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1521892Z     
2025-01-14T13:17:21.1522025Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1522128Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1522194Z         )
2025-01-14T13:17:21.1522265Z     
2025-01-14T13:17:21.1522394Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1522514Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1522675Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1522742Z         else:
2025-01-14T13:17:21.1522828Z             continuum_state = None
2025-01-14T13:17:21.1522926Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1523037Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1523128Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1523236Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1523334Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1523431Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1523524Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1523602Z         ).to_numba(
2025-01-14T13:17:21.1523677Z             macro_atom_state,
2025-01-14T13:17:21.1523768Z             self.line_interaction_type,
2025-01-14T13:17:21.1523834Z         )
2025-01-14T13:17:21.1524532Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1524808Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1524875Z         ]
2025-01-14T13:17:21.1525181Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1525184Z 
2025-01-14T13:17:21.1525328Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1525539Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[2] _
2025-01-14T13:17:21.1525543Z 
2025-01-14T13:17:21.1525709Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1526143Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1526148Z 
2025-01-14T13:17:21.1526244Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1526333Z         "expected,obtained",
2025-01-14T13:17:21.1526406Z         [
2025-01-14T13:17:21.1526473Z             (
2025-01-14T13:17:21.1526584Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1526689Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1526761Z             ),
2025-01-14T13:17:21.1526913Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1527036Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1527104Z         ],
2025-01-14T13:17:21.1527175Z     )
2025-01-14T13:17:21.1527334Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1527459Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1527462Z 
2025-01-14T13:17:21.1527634Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1527742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1528023Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1528134Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1528404Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1528509Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1528647Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1528721Z     sim = run_tardis(
2025-01-14T13:17:21.1528813Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1528898Z     simulation.run_convergence()
2025-01-14T13:17:21.1529015Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1529160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1529259Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1529419Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1529529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1529533Z 
2025-01-14T13:17:21.1529798Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1529997Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1530217Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1530483Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1530647Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1530785Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1530794Z 
2025-01-14T13:17:21.1530882Z     def initialize_transport_state(
2025-01-14T13:17:21.1530957Z         self,
2025-01-14T13:17:21.1531034Z         simulation_state,
2025-01-14T13:17:21.1531113Z         opacity_state,
2025-01-14T13:17:21.1531276Z         macro_atom_state,
2025-01-14T13:17:21.1531351Z         plasma,
2025-01-14T13:17:21.1531424Z         no_of_packets,
2025-01-14T13:17:21.1531510Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1531693Z         iteration=0,
2025-01-14T13:17:21.1531765Z     ):
2025-01-14T13:17:21.1531888Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1531986Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1532054Z         else:
2025-01-14T13:17:21.1532138Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1532205Z     
2025-01-14T13:17:21.1532343Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1532572Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1532649Z         )
2025-01-14T13:17:21.1532722Z     
2025-01-14T13:17:21.1532851Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1532968Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1533123Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1533196Z         else:
2025-01-14T13:17:21.1533277Z             continuum_state = None
2025-01-14T13:17:21.1533383Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1533491Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1533588Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1533691Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1533793Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1533886Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1533982Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1534063Z         ).to_numba(
2025-01-14T13:17:21.1534140Z             macro_atom_state,
2025-01-14T13:17:21.1534235Z             self.line_interaction_type,
2025-01-14T13:17:21.1534301Z         )
2025-01-14T13:17:21.1534406Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1534677Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1534749Z         ]
2025-01-14T13:17:21.1535049Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1535053Z 
2025-01-14T13:17:21.1535202Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1535404Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[5] _
2025-01-14T13:17:21.1535409Z 
2025-01-14T13:17:21.1535578Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1535906Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1535910Z 
2025-01-14T13:17:21.1536000Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1536086Z         "expected,obtained",
2025-01-14T13:17:21.1536158Z         [
2025-01-14T13:17:21.1536235Z             (
2025-01-14T13:17:21.1536338Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1536447Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1536515Z             ),
2025-01-14T13:17:21.1536669Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1536786Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1536859Z         ],
2025-01-14T13:17:21.1536925Z     )
2025-01-14T13:17:21.1537089Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1537208Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1537219Z 
2025-01-14T13:17:21.1537387Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1537498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1537772Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1538046Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1538310Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1538418Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1538546Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1538625Z     sim = run_tardis(
2025-01-14T13:17:21.1538708Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1538799Z     simulation.run_convergence()
2025-01-14T13:17:21.1538915Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1539132Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1539233Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1539383Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1539495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1539505Z 
2025-01-14T13:17:21.1539763Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1539965Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1540183Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1540455Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1540619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1540754Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1540758Z 
2025-01-14T13:17:21.1540855Z     def initialize_transport_state(
2025-01-14T13:17:21.1540925Z         self,
2025-01-14T13:17:21.1541007Z         simulation_state,
2025-01-14T13:17:21.1541080Z         opacity_state,
2025-01-14T13:17:21.1541160Z         macro_atom_state,
2025-01-14T13:17:21.1541237Z         plasma,
2025-01-14T13:17:21.1541328Z         no_of_packets,
2025-01-14T13:17:21.1541410Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1541487Z         iteration=0,
2025-01-14T13:17:21.1541764Z     ):
2025-01-14T13:17:21.1541982Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1542083Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1542158Z         else:
2025-01-14T13:17:21.1542240Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1542306Z     
2025-01-14T13:17:21.1542444Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1542537Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1542618Z         )
2025-01-14T13:17:21.1542685Z     
2025-01-14T13:17:21.1542816Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1542925Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1543078Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1543151Z         else:
2025-01-14T13:17:21.1543237Z             continuum_state = None
2025-01-14T13:17:21.1543334Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1543448Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1543537Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1543648Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1543749Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1543845Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1543939Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1544011Z         ).to_numba(
2025-01-14T13:17:21.1544097Z             macro_atom_state,
2025-01-14T13:17:21.1544185Z             self.line_interaction_type,
2025-01-14T13:17:21.1544260Z         )
2025-01-14T13:17:21.1544359Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1544802Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1544871Z         ]
2025-01-14T13:17:21.1545173Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1545178Z 
2025-01-14T13:17:21.1545322Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1545531Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[10] _
2025-01-14T13:17:21.1545535Z 
2025-01-14T13:17:21.1545703Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1546122Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1546127Z 
2025-01-14T13:17:21.1546220Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1546303Z         "expected,obtained",
2025-01-14T13:17:21.1546374Z         [
2025-01-14T13:17:21.1546446Z             (
2025-01-14T13:17:21.1546556Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1546659Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1546732Z             ),
2025-01-14T13:17:21.1546882Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1547007Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1547079Z         ],
2025-01-14T13:17:21.1547145Z     )
2025-01-14T13:17:21.1547307Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1547421Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1547425Z 
2025-01-14T13:17:21.1547604Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1547713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1547990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1548110Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1548379Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1548483Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1548616Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1548697Z     sim = run_tardis(
2025-01-14T13:17:21.1548781Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1548871Z     simulation.run_convergence()
2025-01-14T13:17:21.1548983Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1549125Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1549223Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1549382Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1549487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1549494Z 
2025-01-14T13:17:21.1549757Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1549958Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1550181Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1550453Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1550609Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1550749Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1550752Z 
2025-01-14T13:17:21.1550843Z     def initialize_transport_state(
2025-01-14T13:17:21.1550917Z         self,
2025-01-14T13:17:21.1550994Z         simulation_state,
2025-01-14T13:17:21.1551073Z         opacity_state,
2025-01-14T13:17:21.1551147Z         macro_atom_state,
2025-01-14T13:17:21.1551325Z         plasma,
2025-01-14T13:17:21.1551398Z         no_of_packets,
2025-01-14T13:17:21.1551483Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1551678Z         iteration=0,
2025-01-14T13:17:21.1551753Z     ):
2025-01-14T13:17:21.1551883Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1551978Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1552052Z         else:
2025-01-14T13:17:21.1552131Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1552205Z     
2025-01-14T13:17:21.1552343Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1552447Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1552514Z         )
2025-01-14T13:17:21.1552586Z     
2025-01-14T13:17:21.1552843Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1552968Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1553119Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1553198Z         else:
2025-01-14T13:17:21.1553280Z             continuum_state = None
2025-01-14T13:17:21.1553389Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1553496Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1553591Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1553703Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1553801Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1553898Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1553989Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1554065Z         ).to_numba(
2025-01-14T13:17:21.1554146Z             macro_atom_state,
2025-01-14T13:17:21.1554237Z             self.line_interaction_type,
2025-01-14T13:17:21.1554303Z         )
2025-01-14T13:17:21.1554409Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1554681Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1554763Z         ]
2025-01-14T13:17:21.1555064Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1555073Z 
2025-01-14T13:17:21.1555219Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1555412Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[2] _______
2025-01-14T13:17:21.1555416Z 
2025-01-14T13:17:21.1555582Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1555909Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1555913Z 
2025-01-14T13:17:21.1556000Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1556087Z         "expected,obtained",
2025-01-14T13:17:21.1556153Z         [
2025-01-14T13:17:21.1556224Z             (
2025-01-14T13:17:21.1556334Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1556445Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1556518Z             ),
2025-01-14T13:17:21.1556669Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1556793Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1556861Z         ],
2025-01-14T13:17:21.1556933Z     )
2025-01-14T13:17:21.1557091Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1557213Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1557217Z 
2025-01-14T13:17:21.1557386Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1557499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1557775Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1558051Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1558323Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1558430Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1558566Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1558640Z     sim = run_tardis(
2025-01-14T13:17:21.1558728Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1558814Z     simulation.run_convergence()
2025-01-14T13:17:21.1558932Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1559074Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1559261Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1559416Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1559527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1559531Z 
2025-01-14T13:17:21.1559802Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1559999Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1560227Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1560496Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1560660Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1560794Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1560798Z 
2025-01-14T13:17:21.1560891Z     def initialize_transport_state(
2025-01-14T13:17:21.1560965Z         self,
2025-01-14T13:17:21.1561047Z         simulation_state,
2025-01-14T13:17:21.1561121Z         opacity_state,
2025-01-14T13:17:21.1561204Z         macro_atom_state,
2025-01-14T13:17:21.1561274Z         plasma,
2025-01-14T13:17:21.1561357Z         no_of_packets,
2025-01-14T13:17:21.1561444Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1561520Z         iteration=0,
2025-01-14T13:17:21.1561688Z     ):
2025-01-14T13:17:21.1561814Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1561915Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1561983Z         else:
2025-01-14T13:17:21.1562065Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1562131Z     
2025-01-14T13:17:21.1562267Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1562360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1562431Z         )
2025-01-14T13:17:21.1562498Z     
2025-01-14T13:17:21.1562633Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1562746Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1562904Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1562976Z         else:
2025-01-14T13:17:21.1563062Z             continuum_state = None
2025-01-14T13:17:21.1563168Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1563274Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1563369Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1563473Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1563575Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1563668Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1563761Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1563830Z         ).to_numba(
2025-01-14T13:17:21.1563915Z             macro_atom_state,
2025-01-14T13:17:21.1564004Z             self.line_interaction_type,
2025-01-14T13:17:21.1564077Z         )
2025-01-14T13:17:21.1564175Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1564447Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1564649Z         ]
2025-01-14T13:17:21.1564947Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1564951Z 
2025-01-14T13:17:21.1565102Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1565285Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[5] _______
2025-01-14T13:17:21.1565288Z 
2025-01-14T13:17:21.1565456Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1565773Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1565777Z 
2025-01-14T13:17:21.1565977Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1566061Z         "expected,obtained",
2025-01-14T13:17:21.1566132Z         [
2025-01-14T13:17:21.1566203Z             (
2025-01-14T13:17:21.1566307Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1566424Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1566491Z             ),
2025-01-14T13:17:21.1566644Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1566760Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1566831Z         ],
2025-01-14T13:17:21.1566899Z     )
2025-01-14T13:17:21.1567061Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1567176Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1567180Z 
2025-01-14T13:17:21.1567349Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1567462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1567735Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1567850Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1568119Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1568230Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1568361Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1568441Z     sim = run_tardis(
2025-01-14T13:17:21.1568525Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1568616Z     simulation.run_convergence()
2025-01-14T13:17:21.1568727Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1568871Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1568963Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1569123Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1569227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1569236Z 
2025-01-14T13:17:21.1569497Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1569705Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1569921Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1570194Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1570350Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1570489Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1570493Z 
2025-01-14T13:17:21.1570580Z     def initialize_transport_state(
2025-01-14T13:17:21.1570653Z         self,
2025-01-14T13:17:21.1570736Z         simulation_state,
2025-01-14T13:17:21.1570815Z         opacity_state,
2025-01-14T13:17:21.1570897Z         macro_atom_state,
2025-01-14T13:17:21.1570966Z         plasma,
2025-01-14T13:17:21.1571043Z         no_of_packets,
2025-01-14T13:17:21.1571235Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1571312Z         iteration=0,
2025-01-14T13:17:21.1571377Z     ):
2025-01-14T13:17:21.1571504Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1571701Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1571775Z         else:
2025-01-14T13:17:21.1571852Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1571924Z     
2025-01-14T13:17:21.1572089Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1572190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1572257Z         )
2025-01-14T13:17:21.1572327Z     
2025-01-14T13:17:21.1572459Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1572699Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1572858Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1572926Z         else:
2025-01-14T13:17:21.1573017Z             continuum_state = None
2025-01-14T13:17:21.1573115Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1573227Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1573318Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1573427Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1573523Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1573621Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1573710Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1573784Z         ).to_numba(
2025-01-14T13:17:21.1573859Z             macro_atom_state,
2025-01-14T13:17:21.1573952Z             self.line_interaction_type,
2025-01-14T13:17:21.1574024Z         )
2025-01-14T13:17:21.1574130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1574399Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1574470Z         ]
2025-01-14T13:17:21.1574772Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1574776Z 
2025-01-14T13:17:21.1574917Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1575101Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[10] ______
2025-01-14T13:17:21.1575104Z 
2025-01-14T13:17:21.1575266Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1575585Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1575589Z 
2025-01-14T13:17:21.1575687Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1575769Z         "expected,obtained",
2025-01-14T13:17:21.1575840Z         [
2025-01-14T13:17:21.1575907Z             (
2025-01-14T13:17:21.1576016Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1576121Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1576194Z             ),
2025-01-14T13:17:21.1576341Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1576463Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1576530Z         ],
2025-01-14T13:17:21.1576602Z     )
2025-01-14T13:17:21.1576760Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1576879Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1576883Z 
2025-01-14T13:17:21.1577048Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1577169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1577449Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1577561Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1577952Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1578059Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1578196Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1578270Z     sim = run_tardis(
2025-01-14T13:17:21.1578358Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1578444Z     simulation.run_convergence()
2025-01-14T13:17:21.1578561Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1578703Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1578803Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1579044Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1579156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1579159Z 
2025-01-14T13:17:21.1579426Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1579631Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1579854Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1580122Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1580287Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1580424Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1580433Z 
2025-01-14T13:17:21.1580520Z     def initialize_transport_state(
2025-01-14T13:17:21.1580593Z         self,
2025-01-14T13:17:21.1580674Z         simulation_state,
2025-01-14T13:17:21.1580758Z         opacity_state,
2025-01-14T13:17:21.1580834Z         macro_atom_state,
2025-01-14T13:17:21.1580907Z         plasma,
2025-01-14T13:17:21.1580980Z         no_of_packets,
2025-01-14T13:17:21.1581066Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1581142Z         iteration=0,
2025-01-14T13:17:21.1581214Z     ):
2025-01-14T13:17:21.1581337Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1581437Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1581504Z         else:
2025-01-14T13:17:21.1581772Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1581879Z     
2025-01-14T13:17:21.1582032Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1582130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1582202Z         )
2025-01-14T13:17:21.1582274Z     
2025-01-14T13:17:21.1582403Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1582528Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1582681Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1582754Z         else:
2025-01-14T13:17:21.1582836Z             continuum_state = None
2025-01-14T13:17:21.1582944Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1583051Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1583147Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1583254Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1583356Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1583449Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1583553Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1583628Z         ).to_numba(
2025-01-14T13:17:21.1583716Z             macro_atom_state,
2025-01-14T13:17:21.1583811Z             self.line_interaction_type,
2025-01-14T13:17:21.1583883Z         )
2025-01-14T13:17:21.1583995Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1584265Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1584340Z         ]
2025-01-14T13:17:21.1584795Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1584800Z 
2025-01-14T13:17:21.1584955Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1585138Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-2] _________
2025-01-14T13:17:21.1585141Z 
2025-01-14T13:17:21.1585317Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1585642Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1585646Z 
2025-01-14T13:17:21.1585734Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1585928Z         "expected,obtained",
2025-01-14T13:17:21.1586000Z         [
2025-01-14T13:17:21.1586072Z             (
2025-01-14T13:17:21.1586179Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1586290Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1586365Z             ),
2025-01-14T13:17:21.1586520Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1586637Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1586710Z         ],
2025-01-14T13:17:21.1586777Z     )
2025-01-14T13:17:21.1586942Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1587069Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1587073Z 
2025-01-14T13:17:21.1587237Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1587351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1587627Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1587745Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1588009Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1588126Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1588256Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1588337Z     sim = run_tardis(
2025-01-14T13:17:21.1588421Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1588517Z     simulation.run_convergence()
2025-01-14T13:17:21.1588636Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1588779Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1588879Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1589030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1589147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1589151Z 
2025-01-14T13:17:21.1589409Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1589615Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1589835Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1590108Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1590265Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1590405Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1590408Z 
2025-01-14T13:17:21.1590503Z     def initialize_transport_state(
2025-01-14T13:17:21.1590574Z         self,
2025-01-14T13:17:21.1590657Z         simulation_state,
2025-01-14T13:17:21.1590740Z         opacity_state,
2025-01-14T13:17:21.1590822Z         macro_atom_state,
2025-01-14T13:17:21.1590893Z         plasma,
2025-01-14T13:17:21.1590972Z         no_of_packets,
2025-01-14T13:17:21.1591054Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1591132Z         iteration=0,
2025-01-14T13:17:21.1591303Z     ):
2025-01-14T13:17:21.1591434Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1591529Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1591709Z         else:
2025-01-14T13:17:21.1591789Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1591863Z     
2025-01-14T13:17:21.1592005Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1592099Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1592174Z         )
2025-01-14T13:17:21.1592240Z     
2025-01-14T13:17:21.1592373Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1592488Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1592767Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1592841Z         else:
2025-01-14T13:17:21.1592930Z             continuum_state = None
2025-01-14T13:17:21.1593030Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1593148Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1593239Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1593350Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1593448Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1593548Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1593644Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1593715Z         ).to_numba(
2025-01-14T13:17:21.1593798Z             macro_atom_state,
2025-01-14T13:17:21.1593887Z             self.line_interaction_type,
2025-01-14T13:17:21.1593960Z         )
2025-01-14T13:17:21.1594067Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1594342Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1594411Z         ]
2025-01-14T13:17:21.1594719Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1594729Z 
2025-01-14T13:17:21.1594876Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1595064Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-5] _________
2025-01-14T13:17:21.1595068Z 
2025-01-14T13:17:21.1595245Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1595564Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1595568Z 
2025-01-14T13:17:21.1595662Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1595746Z         "expected,obtained",
2025-01-14T13:17:21.1595825Z         [
2025-01-14T13:17:21.1595894Z             (
2025-01-14T13:17:21.1596007Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1596113Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1596193Z             ),
2025-01-14T13:17:21.1596343Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1596468Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1596536Z         ],
2025-01-14T13:17:21.1596611Z     )
2025-01-14T13:17:21.1596777Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1596891Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1596895Z 
2025-01-14T13:17:21.1597068Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1597178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1597473Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1597590Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1597865Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1598116Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1598254Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1598334Z     sim = run_tardis(
2025-01-14T13:17:21.1598417Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1598507Z     simulation.run_convergence()
2025-01-14T13:17:21.1598620Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1598763Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1598856Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1599012Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1599204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1599208Z 
2025-01-14T13:17:21.1599473Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1599672Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1599903Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1600177Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1600333Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1600474Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1600477Z 
2025-01-14T13:17:21.1600565Z     def initialize_transport_state(
2025-01-14T13:17:21.1600638Z         self,
2025-01-14T13:17:21.1600716Z         simulation_state,
2025-01-14T13:17:21.1600797Z         opacity_state,
2025-01-14T13:17:21.1600876Z         macro_atom_state,
2025-01-14T13:17:21.1600953Z         plasma,
2025-01-14T13:17:21.1601027Z         no_of_packets,
2025-01-14T13:17:21.1601115Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1601188Z         iteration=0,
2025-01-14T13:17:21.1601266Z     ):
2025-01-14T13:17:21.1601391Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1601492Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1601669Z         else:
2025-01-14T13:17:21.1601747Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1601819Z     
2025-01-14T13:17:21.1601952Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1602051Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1602119Z         )
2025-01-14T13:17:21.1602193Z     
2025-01-14T13:17:21.1602322Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1602438Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1602594Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1602671Z         else:
2025-01-14T13:17:21.1602754Z             continuum_state = None
2025-01-14T13:17:21.1602858Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1602968Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1603067Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1603179Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1603277Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1603379Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1603471Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1603549Z         ).to_numba(
2025-01-14T13:17:21.1603627Z             macro_atom_state,
2025-01-14T13:17:21.1603721Z             self.line_interaction_type,
2025-01-14T13:17:21.1603789Z         )
2025-01-14T13:17:21.1603895Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1604167Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1604240Z         ]
2025-01-14T13:17:21.1604536Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1604666Z 
2025-01-14T13:17:21.1604821Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1605005Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-10] ________
2025-01-14T13:17:21.1605009Z 
2025-01-14T13:17:21.1605175Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1605502Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1605505Z 
2025-01-14T13:17:21.1605593Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1605684Z         "expected,obtained",
2025-01-14T13:17:21.1605752Z         [
2025-01-14T13:17:21.1605958Z             (
2025-01-14T13:17:21.1606070Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1606181Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1606251Z             ),
2025-01-14T13:17:21.1606413Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1606539Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1606607Z         ],
2025-01-14T13:17:21.1606684Z     )
2025-01-14T13:17:21.1606844Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1606970Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1606974Z 
2025-01-14T13:17:21.1607140Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1607256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1607530Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1607648Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1607914Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1608039Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1608173Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1608247Z     sim = run_tardis(
2025-01-14T13:17:21.1608338Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1608424Z     simulation.run_convergence()
2025-01-14T13:17:21.1608540Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1608680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1608781Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1608932Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1609042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1609050Z 
2025-01-14T13:17:21.1609310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1609515Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1609743Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1610008Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1610168Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1610301Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1610305Z 
2025-01-14T13:17:21.1610397Z     def initialize_transport_state(
2025-01-14T13:17:21.1610466Z         self,
2025-01-14T13:17:21.1610550Z         simulation_state,
2025-01-14T13:17:21.1610625Z         opacity_state,
2025-01-14T13:17:21.1610708Z         macro_atom_state,
2025-01-14T13:17:21.1610783Z         plasma,
2025-01-14T13:17:21.1610862Z         no_of_packets,
2025-01-14T13:17:21.1610942Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1611021Z         iteration=0,
2025-01-14T13:17:21.1611094Z     ):
2025-01-14T13:17:21.1611215Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1611401Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1611469Z         else:
2025-01-14T13:17:21.1611654Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1611721Z     
2025-01-14T13:17:21.1611862Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1611954Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1612027Z         )
2025-01-14T13:17:21.1612094Z     
2025-01-14T13:17:21.1612226Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1612340Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1612608Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1612679Z         else:
2025-01-14T13:17:21.1612771Z             continuum_state = None
2025-01-14T13:17:21.1612873Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1612983Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1613084Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1613190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1613294Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1613387Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1613486Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1613558Z         ).to_numba(
2025-01-14T13:17:21.1613643Z             macro_atom_state,
2025-01-14T13:17:21.1613730Z             self.line_interaction_type,
2025-01-14T13:17:21.1613805Z         )
2025-01-14T13:17:21.1613906Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1614184Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1614252Z         ]
2025-01-14T13:17:21.1614554Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1614562Z 
2025-01-14T13:17:21.1614712Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1614889Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-2] _________
2025-01-14T13:17:21.1614893Z 
2025-01-14T13:17:21.1615064Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1615380Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1615384Z 
2025-01-14T13:17:21.1615479Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1615561Z         "expected,obtained",
2025-01-14T13:17:21.1615635Z         [
2025-01-14T13:17:21.1615703Z             (
2025-01-14T13:17:21.1615821Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1615937Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1616007Z             ),
2025-01-14T13:17:21.1616165Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1616287Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1616362Z         ],
2025-01-14T13:17:21.1616432Z     )
2025-01-14T13:17:21.1616596Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1616711Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1616716Z 
2025-01-14T13:17:21.1616889Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1616997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1617270Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1617391Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1617658Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1617774Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1618026Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1618108Z     sim = run_tardis(
2025-01-14T13:17:21.1618193Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1618287Z     simulation.run_convergence()
2025-01-14T13:17:21.1618398Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1618547Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1618640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1618798Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1618901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1618906Z 
2025-01-14T13:17:21.1619246Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1619452Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1619670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1619952Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1620107Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1620244Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1620248Z 
2025-01-14T13:17:21.1620333Z     def initialize_transport_state(
2025-01-14T13:17:21.1620409Z         self,
2025-01-14T13:17:21.1620485Z         simulation_state,
2025-01-14T13:17:21.1620563Z         opacity_state,
2025-01-14T13:17:21.1620638Z         macro_atom_state,
2025-01-14T13:17:21.1620717Z         plasma,
2025-01-14T13:17:21.1620800Z         no_of_packets,
2025-01-14T13:17:21.1620880Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1620959Z         iteration=0,
2025-01-14T13:17:21.1621027Z     ):
2025-01-14T13:17:21.1621154Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1621253Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1621327Z         else:
2025-01-14T13:17:21.1621404Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1621478Z     
2025-01-14T13:17:21.1621813Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1621967Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1622036Z         )
2025-01-14T13:17:21.1622109Z     
2025-01-14T13:17:21.1622236Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1622354Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1622504Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1622584Z         else:
2025-01-14T13:17:21.1622672Z             continuum_state = None
2025-01-14T13:17:21.1622770Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1622884Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1622981Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1623091Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1623188Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1623286Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1623375Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1623454Z         ).to_numba(
2025-01-14T13:17:21.1623531Z             macro_atom_state,
2025-01-14T13:17:21.1623624Z             self.line_interaction_type,
2025-01-14T13:17:21.1623693Z         )
2025-01-14T13:17:21.1623800Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1624069Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1624142Z         ]
2025-01-14T13:17:21.1624447Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1624606Z 
2025-01-14T13:17:21.1624756Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1624942Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-5] _________
2025-01-14T13:17:21.1624946Z 
2025-01-14T13:17:21.1625111Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1625439Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1625443Z 
2025-01-14T13:17:21.1625532Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1625621Z         "expected,obtained",
2025-01-14T13:17:21.1625695Z         [
2025-01-14T13:17:21.1625765Z             (
2025-01-14T13:17:21.1625992Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1626101Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1626175Z             ),
2025-01-14T13:17:21.1626322Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1626451Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1626519Z         ],
2025-01-14T13:17:21.1626597Z     )
2025-01-14T13:17:21.1626757Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1626877Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1626881Z 
2025-01-14T13:17:21.1627047Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1627158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1627435Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1627550Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1627822Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1627929Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1628067Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1628141Z     sim = run_tardis(
2025-01-14T13:17:21.1628229Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1628314Z     simulation.run_convergence()
2025-01-14T13:17:21.1628430Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1628569Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1628667Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1628818Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1628930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1628934Z 
2025-01-14T13:17:21.1629202Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1629406Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1629628Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1629898Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1630059Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1630196Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1630200Z 
2025-01-14T13:17:21.1630292Z     def initialize_transport_state(
2025-01-14T13:17:21.1630360Z         self,
2025-01-14T13:17:21.1630442Z         simulation_state,
2025-01-14T13:17:21.1630521Z         opacity_state,
2025-01-14T13:17:21.1630596Z         macro_atom_state,
2025-01-14T13:17:21.1630671Z         plasma,
2025-01-14T13:17:21.1630745Z         no_of_packets,
2025-01-14T13:17:21.1630834Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1630908Z         iteration=0,
2025-01-14T13:17:21.1630978Z     ):
2025-01-14T13:17:21.1631098Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1631282Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1631350Z         else:
2025-01-14T13:17:21.1631435Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1631501Z     
2025-01-14T13:17:21.1631741Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1631835Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1631907Z         )
2025-01-14T13:17:21.1631973Z     
2025-01-14T13:17:21.1632103Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1632217Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1632366Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1632438Z         else:
2025-01-14T13:17:21.1632654Z             continuum_state = None
2025-01-14T13:17:21.1632760Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1632866Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1632961Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1633071Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1633174Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1633267Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1633360Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1633431Z         ).to_numba(
2025-01-14T13:17:21.1633514Z             macro_atom_state,
2025-01-14T13:17:21.1633599Z             self.line_interaction_type,
2025-01-14T13:17:21.1633670Z         )
2025-01-14T13:17:21.1633773Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1634040Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1634116Z         ]
2025-01-14T13:17:21.1634414Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1634418Z 
2025-01-14T13:17:21.1634567Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1634748Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-10] _________
2025-01-14T13:17:21.1634751Z 
2025-01-14T13:17:21.1634918Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1635230Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1635241Z 
2025-01-14T13:17:21.1635329Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1635416Z         "expected,obtained",
2025-01-14T13:17:21.1635482Z         [
2025-01-14T13:17:21.1635557Z             (
2025-01-14T13:17:21.1635662Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1635774Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1635843Z             ),
2025-01-14T13:17:21.1636001Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1636120Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1636194Z         ],
2025-01-14T13:17:21.1636260Z     )
2025-01-14T13:17:21.1636425Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1636538Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1636542Z 
2025-01-14T13:17:21.1636711Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1636824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1637097Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1637212Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1637483Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1637595Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1637722Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1637928Z     sim = run_tardis(
2025-01-14T13:17:21.1638010Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1638101Z     simulation.run_convergence()
2025-01-14T13:17:21.1638211Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1638358Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1638459Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1638609Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1638719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1638723Z 
2025-01-14T13:17:21.1639058Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1639264Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1639488Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1639768Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1639924Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1640064Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1640067Z 
2025-01-14T13:17:21.1640159Z     def initialize_transport_state(
2025-01-14T13:17:21.1640227Z         self,
2025-01-14T13:17:21.1640308Z         simulation_state,
2025-01-14T13:17:21.1640382Z         opacity_state,
2025-01-14T13:17:21.1640462Z         macro_atom_state,
2025-01-14T13:17:21.1640531Z         plasma,
2025-01-14T13:17:21.1640609Z         no_of_packets,
2025-01-14T13:17:21.1640694Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1640776Z         iteration=0,
2025-01-14T13:17:21.1640842Z     ):
2025-01-14T13:17:21.1640971Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1641064Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1641143Z         else:
2025-01-14T13:17:21.1641220Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1641291Z     
2025-01-14T13:17:21.1641422Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1641525Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1641698Z         )
2025-01-14T13:17:21.1641765Z     
2025-01-14T13:17:21.1641900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1642010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1642168Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1642237Z         else:
2025-01-14T13:17:21.1642323Z             continuum_state = None
2025-01-14T13:17:21.1642432Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1642548Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1642639Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1642754Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1642851Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1642949Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1643039Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1643115Z         ).to_numba(
2025-01-14T13:17:21.1643198Z             macro_atom_state,
2025-01-14T13:17:21.1643285Z             self.line_interaction_type,
2025-01-14T13:17:21.1643357Z         )
2025-01-14T13:17:21.1643457Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1643732Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1643800Z         ]
2025-01-14T13:17:21.1644110Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1644114Z 
2025-01-14T13:17:21.1644261Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1644571Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[10] ________
2025-01-14T13:17:21.1644574Z 
2025-01-14T13:17:21.1644739Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1645063Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1645067Z 
2025-01-14T13:17:21.1645160Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1645241Z         "expected,obtained",
2025-01-14T13:17:21.1645313Z         [
2025-01-14T13:17:21.1645379Z             (
2025-01-14T13:17:21.1645489Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1645696Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1645771Z             ),
2025-01-14T13:17:21.1645922Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1646043Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1646117Z         ],
2025-01-14T13:17:21.1646190Z     )
2025-01-14T13:17:21.1646350Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1646470Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1646474Z 
2025-01-14T13:17:21.1646645Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1646753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1647030Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1647139Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1647414Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1647520Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1647656Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1647736Z     sim = run_tardis(
2025-01-14T13:17:21.1647826Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1647914Z     simulation.run_convergence()
2025-01-14T13:17:21.1648032Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1648179Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1648272Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1648432Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1648538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1648542Z 
2025-01-14T13:17:21.1648806Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1649008Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1649233Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1649504Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1649672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1649818Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1649822Z 
2025-01-14T13:17:21.1649909Z     def initialize_transport_state(
2025-01-14T13:17:21.1649984Z         self,
2025-01-14T13:17:21.1650061Z         simulation_state,
2025-01-14T13:17:21.1650142Z         opacity_state,
2025-01-14T13:17:21.1650217Z         macro_atom_state,
2025-01-14T13:17:21.1650293Z         plasma,
2025-01-14T13:17:21.1650368Z         no_of_packets,
2025-01-14T13:17:21.1650454Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1650530Z         iteration=0,
2025-01-14T13:17:21.1650604Z     ):
2025-01-14T13:17:21.1650728Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1650826Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1650899Z         else:
2025-01-14T13:17:21.1651087Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1651158Z     
2025-01-14T13:17:21.1651292Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1651391Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1651458Z         )
2025-01-14T13:17:21.1651532Z     
2025-01-14T13:17:21.1651779Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1651900Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1652051Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1652124Z         else:
2025-01-14T13:17:21.1652206Z             continuum_state = None
2025-01-14T13:17:21.1652460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1652578Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1652676Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1652780Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1652892Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1652991Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1653081Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1653158Z         ).to_numba(
2025-01-14T13:17:21.1653236Z             macro_atom_state,
2025-01-14T13:17:21.1653328Z             self.line_interaction_type,
2025-01-14T13:17:21.1653395Z         )
2025-01-14T13:17:21.1653501Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1653767Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1653839Z         ]
2025-01-14T13:17:21.1654140Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1654144Z 
2025-01-14T13:17:21.1654295Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1654476Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[30] ________
2025-01-14T13:17:21.1654491Z 
2025-01-14T13:17:21.1654655Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1654979Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1654982Z 
2025-01-14T13:17:21.1655068Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1655155Z         "expected,obtained",
2025-01-14T13:17:21.1655222Z         [
2025-01-14T13:17:21.1655296Z             (
2025-01-14T13:17:21.1655401Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1655510Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1655588Z             ),
2025-01-14T13:17:21.1655745Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1655862Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1655938Z         ],
2025-01-14T13:17:21.1656012Z     )
2025-01-14T13:17:21.1656171Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1656290Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1656294Z 
2025-01-14T13:17:21.1656458Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1656573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1656856Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1656976Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1657249Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1657362Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1657494Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1657575Z     sim = run_tardis(
2025-01-14T13:17:21.1657811Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1657899Z     simulation.run_convergence()
2025-01-14T13:17:21.1658017Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1658160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1658259Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1658408Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1658522Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1658526Z 
2025-01-14T13:17:21.1658787Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1659075Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1659300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1659575Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1659742Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1659879Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1659882Z 
2025-01-14T13:17:21.1659975Z     def initialize_transport_state(
2025-01-14T13:17:21.1660043Z         self,
2025-01-14T13:17:21.1660127Z         simulation_state,
2025-01-14T13:17:21.1660202Z         opacity_state,
2025-01-14T13:17:21.1660283Z         macro_atom_state,
2025-01-14T13:17:21.1660353Z         plasma,
2025-01-14T13:17:21.1660433Z         no_of_packets,
2025-01-14T13:17:21.1660517Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1660596Z         iteration=0,
2025-01-14T13:17:21.1660670Z     ):
2025-01-14T13:17:21.1660798Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1660898Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1660967Z         else:
2025-01-14T13:17:21.1661051Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1661124Z     
2025-01-14T13:17:21.1661261Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1661355Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1661427Z         )
2025-01-14T13:17:21.1661492Z     
2025-01-14T13:17:21.1661843Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1661993Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1662151Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1662219Z         else:
2025-01-14T13:17:21.1662306Z             continuum_state = None
2025-01-14T13:17:21.1662405Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1662520Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1662611Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1662721Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1662831Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1662923Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1663017Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1663087Z         ).to_numba(
2025-01-14T13:17:21.1663169Z             macro_atom_state,
2025-01-14T13:17:21.1663256Z             self.line_interaction_type,
2025-01-14T13:17:21.1663327Z         )
2025-01-14T13:17:21.1663426Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1663698Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1663765Z         ]
2025-01-14T13:17:21.1664071Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1664076Z 
2025-01-14T13:17:21.1664226Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1664404Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[50] ________
2025-01-14T13:17:21.1664570Z 
2025-01-14T13:17:21.1664744Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1665065Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1665069Z 
2025-01-14T13:17:21.1665162Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1665244Z         "expected,obtained",
2025-01-14T13:17:21.1665317Z         [
2025-01-14T13:17:21.1665384Z             (
2025-01-14T13:17:21.1665494Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1665597Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1665668Z             ),
2025-01-14T13:17:21.1665932Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1666053Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1666125Z         ],
2025-01-14T13:17:21.1666197Z     )
2025-01-14T13:17:21.1666360Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1666475Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1666479Z 
2025-01-14T13:17:21.1666649Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1666757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1667033Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1667144Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1667415Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1667535Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1667665Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1667744Z     sim = run_tardis(
2025-01-14T13:17:21.1667828Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1667925Z     simulation.run_convergence()
2025-01-14T13:17:21.1668035Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1668178Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1668271Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1668427Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1668534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1668538Z 
2025-01-14T13:17:21.1668803Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1669006Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1669228Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1669501Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1669664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1675889Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1675915Z 
2025-01-14T13:17:21.1676051Z     def initialize_transport_state(
2025-01-14T13:17:21.1676129Z         self,
2025-01-14T13:17:21.1676211Z         simulation_state,
2025-01-14T13:17:21.1676292Z         opacity_state,
2025-01-14T13:17:21.1676369Z         macro_atom_state,
2025-01-14T13:17:21.1676446Z         plasma,
2025-01-14T13:17:21.1676523Z         no_of_packets,
2025-01-14T13:17:21.1676611Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1676684Z         iteration=0,
2025-01-14T13:17:21.1676756Z     ):
2025-01-14T13:17:21.1676926Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1677031Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1677105Z         else:
2025-01-14T13:17:21.1677184Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1677444Z     
2025-01-14T13:17:21.1677591Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1677694Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1677764Z         )
2025-01-14T13:17:21.1677834Z     
2025-01-14T13:17:21.1677970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1678099Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1678261Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1678335Z         else:
2025-01-14T13:17:21.1678418Z             continuum_state = None
2025-01-14T13:17:21.1678525Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1678744Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1678844Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1678957Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1679058Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1679162Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1679253Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1679330Z         ).to_numba(
2025-01-14T13:17:21.1679411Z             macro_atom_state,
2025-01-14T13:17:21.1679502Z             self.line_interaction_type,
2025-01-14T13:17:21.1679569Z         )
2025-01-14T13:17:21.1679677Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1679955Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1680027Z         ]
2025-01-14T13:17:21.1680347Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1680356Z 
2025-01-14T13:17:21.1680514Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1680716Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-2] _______
2025-01-14T13:17:21.1680725Z 
2025-01-14T13:17:21.1680899Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1681226Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1681231Z 
2025-01-14T13:17:21.1681322Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1681410Z         "expected,obtained",
2025-01-14T13:17:21.1681477Z         [
2025-01-14T13:17:21.1681816Z             (
2025-01-14T13:17:21.1682008Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1682194Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1682277Z             ),
2025-01-14T13:17:21.1682442Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1682570Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1682637Z         ],
2025-01-14T13:17:21.1682709Z     )
2025-01-14T13:17:21.1682874Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1683003Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1683007Z 
2025-01-14T13:17:21.1683179Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1683298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1683579Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1683699Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1683968Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1684077Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1684218Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1684294Z     sim = run_tardis(
2025-01-14T13:17:21.1684389Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1684479Z     simulation.run_convergence()
2025-01-14T13:17:21.1684747Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1684896Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1684998Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1685153Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1685271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1685275Z 
2025-01-14T13:17:21.1685539Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1685744Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1686080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1686353Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1686521Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1686671Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1686675Z 
2025-01-14T13:17:21.1686768Z     def initialize_transport_state(
2025-01-14T13:17:21.1686838Z         self,
2025-01-14T13:17:21.1686921Z         simulation_state,
2025-01-14T13:17:21.1686996Z         opacity_state,
2025-01-14T13:17:21.1687077Z         macro_atom_state,
2025-01-14T13:17:21.1687147Z         plasma,
2025-01-14T13:17:21.1687226Z         no_of_packets,
2025-01-14T13:17:21.1687314Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1687390Z         iteration=0,
2025-01-14T13:17:21.1687461Z     ):
2025-01-14T13:17:21.1687598Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1687702Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1687770Z         else:
2025-01-14T13:17:21.1687851Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1687917Z     
2025-01-14T13:17:21.1688060Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1688164Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1688235Z         )
2025-01-14T13:17:21.1688299Z     
2025-01-14T13:17:21.1688434Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1688549Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1688708Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1688776Z         else:
2025-01-14T13:17:21.1688864Z             continuum_state = None
2025-01-14T13:17:21.1688970Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1689078Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1689180Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1689288Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1689392Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1689492Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1689589Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1689659Z         ).to_numba(
2025-01-14T13:17:21.1689742Z             macro_atom_state,
2025-01-14T13:17:21.1689828Z             self.line_interaction_type,
2025-01-14T13:17:21.1689900Z         )
2025-01-14T13:17:21.1690001Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1690274Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1690340Z         ]
2025-01-14T13:17:21.1690652Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1690656Z 
2025-01-14T13:17:21.1690819Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1691005Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-5] _______
2025-01-14T13:17:21.1691009Z 
2025-01-14T13:17:21.1691288Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1691732Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1691738Z 
2025-01-14T13:17:21.1691838Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1691922Z         "expected,obtained",
2025-01-14T13:17:21.1691996Z         [
2025-01-14T13:17:21.1692064Z             (
2025-01-14T13:17:21.1692175Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1692282Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1692350Z             ),
2025-01-14T13:17:21.1692631Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1692758Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1692829Z         ],
2025-01-14T13:17:21.1692896Z     )
2025-01-14T13:17:21.1693060Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1693186Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1693191Z 
2025-01-14T13:17:21.1693364Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1693475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1693756Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1693872Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1694137Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1694255Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1694391Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1694472Z     sim = run_tardis(
2025-01-14T13:17:21.1694556Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1694648Z     simulation.run_convergence()
2025-01-14T13:17:21.1694768Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1694915Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1695009Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1695168Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1695278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1695289Z 
2025-01-14T13:17:21.1695554Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1695760Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1695986Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1696264Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1696426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1696575Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1696579Z 
2025-01-14T13:17:21.1696666Z     def initialize_transport_state(
2025-01-14T13:17:21.1696741Z         self,
2025-01-14T13:17:21.1696819Z         simulation_state,
2025-01-14T13:17:21.1696899Z         opacity_state,
2025-01-14T13:17:21.1696983Z         macro_atom_state,
2025-01-14T13:17:21.1697055Z         plasma,
2025-01-14T13:17:21.1697139Z         no_of_packets,
2025-01-14T13:17:21.1697220Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1697300Z         iteration=0,
2025-01-14T13:17:21.1697367Z     ):
2025-01-14T13:17:21.1697498Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1697597Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1697676Z         else:
2025-01-14T13:17:21.1697753Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1697823Z     
2025-01-14T13:17:21.1697958Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1698215Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1698282Z         )
2025-01-14T13:17:21.1698353Z     
2025-01-14T13:17:21.1698483Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1698599Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1698757Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1698825Z         else:
2025-01-14T13:17:21.1698913Z             continuum_state = None
2025-01-14T13:17:21.1699011Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1699122Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1699316Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1699430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1699528Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1699625Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1699720Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1699795Z         ).to_numba(
2025-01-14T13:17:21.1699871Z             macro_atom_state,
2025-01-14T13:17:21.1699962Z             self.line_interaction_type,
2025-01-14T13:17:21.1700028Z         )
2025-01-14T13:17:21.1700133Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1700407Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1700473Z         ]
2025-01-14T13:17:21.1700778Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1700782Z 
2025-01-14T13:17:21.1700931Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1701123Z ______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-10] _______
2025-01-14T13:17:21.1701127Z 
2025-01-14T13:17:21.1701294Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1701863Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1701870Z 
2025-01-14T13:17:21.1702007Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1702092Z         "expected,obtained",
2025-01-14T13:17:21.1702166Z         [
2025-01-14T13:17:21.1702232Z             (
2025-01-14T13:17:21.1702348Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1702459Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1702533Z             ),
2025-01-14T13:17:21.1702686Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1702818Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1702885Z         ],
2025-01-14T13:17:21.1702959Z     )
2025-01-14T13:17:21.1703119Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1703248Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1703252Z 
2025-01-14T13:17:21.1703418Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1703535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1703821Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1703934Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1704207Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1704311Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1704450Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1704527Z     sim = run_tardis(
2025-01-14T13:17:21.1704618Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1704704Z     simulation.run_convergence()
2025-01-14T13:17:21.1704823Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1705130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1705228Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1705385Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1705491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1705496Z 
2025-01-14T13:17:21.1705764Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1705966Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1706195Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1706572Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1706744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1706882Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1706893Z 
2025-01-14T13:17:21.1706990Z     def initialize_transport_state(
2025-01-14T13:17:21.1707064Z         self,
2025-01-14T13:17:21.1707142Z         simulation_state,
2025-01-14T13:17:21.1707221Z         opacity_state,
2025-01-14T13:17:21.1707293Z         macro_atom_state,
2025-01-14T13:17:21.1707369Z         plasma,
2025-01-14T13:17:21.1707441Z         no_of_packets,
2025-01-14T13:17:21.1707527Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1707600Z         iteration=0,
2025-01-14T13:17:21.1707671Z     ):
2025-01-14T13:17:21.1707798Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1707901Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1707973Z         else:
2025-01-14T13:17:21.1708056Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1708122Z     
2025-01-14T13:17:21.1708259Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1708364Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1708435Z         )
2025-01-14T13:17:21.1708502Z     
2025-01-14T13:17:21.1708633Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1708752Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1708904Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1708982Z         else:
2025-01-14T13:17:21.1709063Z             continuum_state = None
2025-01-14T13:17:21.1709167Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1709279Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1709378Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1709490Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1709595Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1709689Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1709784Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1709858Z         ).to_numba(
2025-01-14T13:17:21.1709943Z             macro_atom_state,
2025-01-14T13:17:21.1710034Z             self.line_interaction_type,
2025-01-14T13:17:21.1710102Z         )
2025-01-14T13:17:21.1710208Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1710474Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1710546Z         ]
2025-01-14T13:17:21.1710845Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1710849Z 
2025-01-14T13:17:21.1711000Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1711185Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-2] ________
2025-01-14T13:17:21.1711189Z 
2025-01-14T13:17:21.1711359Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1711882Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1711887Z 
2025-01-14T13:17:21.1711976Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1712064Z         "expected,obtained",
2025-01-14T13:17:21.1712129Z         [
2025-01-14T13:17:21.1712200Z             (
2025-01-14T13:17:21.1712305Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1712414Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1712481Z             ),
2025-01-14T13:17:21.1712635Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1712864Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1712940Z         ],
2025-01-14T13:17:21.1713007Z     )
2025-01-14T13:17:21.1713175Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1713289Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1713303Z 
2025-01-14T13:17:21.1713470Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1713583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1713854Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1713969Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1714235Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1714348Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1714477Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1714559Z     sim = run_tardis(
2025-01-14T13:17:21.1714643Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1714736Z     simulation.run_convergence()
2025-01-14T13:17:21.1714850Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1714999Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1715098Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1715251Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1715363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1715367Z 
2025-01-14T13:17:21.1715629Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1715832Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1716051Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1716328Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1716486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1716625Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1716632Z 
2025-01-14T13:17:21.1716725Z     def initialize_transport_state(
2025-01-14T13:17:21.1716792Z         self,
2025-01-14T13:17:21.1716873Z         simulation_state,
2025-01-14T13:17:21.1716947Z         opacity_state,
2025-01-14T13:17:21.1717030Z         macro_atom_state,
2025-01-14T13:17:21.1717100Z         plasma,
2025-01-14T13:17:21.1717177Z         no_of_packets,
2025-01-14T13:17:21.1717257Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1717334Z         iteration=0,
2025-01-14T13:17:21.1717403Z     ):
2025-01-14T13:17:21.1717529Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1717623Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1717695Z         else:
2025-01-14T13:17:21.1717776Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1717847Z     
2025-01-14T13:17:21.1717982Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1718080Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1718276Z         )
2025-01-14T13:17:21.1718342Z     
2025-01-14T13:17:21.1718474Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1718586Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1718743Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1718825Z         else:
2025-01-14T13:17:21.1718914Z             continuum_state = None
2025-01-14T13:17:21.1719010Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1719123Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1719213Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1719401Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1719503Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1719599Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1719693Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1719769Z         ).to_numba(
2025-01-14T13:17:21.1719850Z             macro_atom_state,
2025-01-14T13:17:21.1719940Z             self.line_interaction_type,
2025-01-14T13:17:21.1720009Z         )
2025-01-14T13:17:21.1720107Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1720381Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1720448Z         ]
2025-01-14T13:17:21.1720754Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1720758Z 
2025-01-14T13:17:21.1720905Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1721095Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-5] ________
2025-01-14T13:17:21.1721099Z 
2025-01-14T13:17:21.1721268Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1721763Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1721777Z 
2025-01-14T13:17:21.1721937Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1722054Z         "expected,obtained",
2025-01-14T13:17:21.1722130Z         [
2025-01-14T13:17:21.1722196Z             (
2025-01-14T13:17:21.1722308Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1722411Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1722488Z             ),
2025-01-14T13:17:21.1722636Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1722758Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1722835Z         ],
2025-01-14T13:17:21.1722901Z     )
2025-01-14T13:17:21.1723064Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1723180Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1723190Z 
2025-01-14T13:17:21.1723362Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1723467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1723748Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1723860Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1724134Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1724238Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1724374Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1724453Z     sim = run_tardis(
2025-01-14T13:17:21.1724539Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1724630Z     simulation.run_convergence()
2025-01-14T13:17:21.1724741Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1724894Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1725155Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1725311Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1725416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1725420Z 
2025-01-14T13:17:21.1725687Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1725883Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1726106Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1726483Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1726645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1726785Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1726795Z 
2025-01-14T13:17:21.1726881Z     def initialize_transport_state(
2025-01-14T13:17:21.1726954Z         self,
2025-01-14T13:17:21.1727031Z         simulation_state,
2025-01-14T13:17:21.1727108Z         opacity_state,
2025-01-14T13:17:21.1727183Z         macro_atom_state,
2025-01-14T13:17:21.1727257Z         plasma,
2025-01-14T13:17:21.1727329Z         no_of_packets,
2025-01-14T13:17:21.1727415Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1727486Z         iteration=0,
2025-01-14T13:17:21.1727557Z     ):
2025-01-14T13:17:21.1727678Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1727776Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1727849Z         else:
2025-01-14T13:17:21.1727930Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1728000Z     
2025-01-14T13:17:21.1728136Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1728238Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1728306Z         )
2025-01-14T13:17:21.1728380Z     
2025-01-14T13:17:21.1728505Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1728621Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1728771Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1728846Z         else:
2025-01-14T13:17:21.1728926Z             continuum_state = None
2025-01-14T13:17:21.1729030Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1729136Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1729232Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1729342Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1729451Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1729548Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1729638Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1729714Z         ).to_numba(
2025-01-14T13:17:21.1729795Z             macro_atom_state,
2025-01-14T13:17:21.1729886Z             self.line_interaction_type,
2025-01-14T13:17:21.1729952Z         )
2025-01-14T13:17:21.1730056Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1730322Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1730396Z         ]
2025-01-14T13:17:21.1730698Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1730702Z 
2025-01-14T13:17:21.1730853Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1731042Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-10] _______
2025-01-14T13:17:21.1731046Z 
2025-01-14T13:17:21.1731206Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.1731530Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.1731819Z 
2025-01-14T13:17:21.1731916Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.1732003Z         "expected,obtained",
2025-01-14T13:17:21.1732069Z         [
2025-01-14T13:17:21.1732140Z             (
2025-01-14T13:17:21.1732247Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.1732355Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.1732423Z             ),
2025-01-14T13:17:21.1732579Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.1732701Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.1732768Z         ],
2025-01-14T13:17:21.1732838Z     )
2025-01-14T13:17:21.1733101Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.1733224Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1733228Z 
2025-01-14T13:17:21.1733394Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.1733508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1733779Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1733893Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1734156Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.1734272Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.1734409Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.1734482Z     sim = run_tardis(
2025-01-14T13:17:21.1734570Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1734661Z     simulation.run_convergence()
2025-01-14T13:17:21.1734780Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1734917Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1735023Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1735172Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1735281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1735285Z 
2025-01-14T13:17:21.1735543Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.1735745Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.1735969Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.1736236Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.1736403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.1736537Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1736541Z 
2025-01-14T13:17:21.1736632Z     def initialize_transport_state(
2025-01-14T13:17:21.1736703Z         self,
2025-01-14T13:17:21.1736786Z         simulation_state,
2025-01-14T13:17:21.1736860Z         opacity_state,
2025-01-14T13:17:21.1736940Z         macro_atom_state,
2025-01-14T13:17:21.1737009Z         plasma,
2025-01-14T13:17:21.1737087Z         no_of_packets,
2025-01-14T13:17:21.1737166Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1737243Z         iteration=0,
2025-01-14T13:17:21.1737315Z     ):
2025-01-14T13:17:21.1737437Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1737538Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1737605Z         else:
2025-01-14T13:17:21.1737686Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1737758Z     
2025-01-14T13:17:21.1737898Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1737990Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1738062Z         )
2025-01-14T13:17:21.1738128Z     
2025-01-14T13:17:21.1738384Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1738497Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1738650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1738718Z         else:
2025-01-14T13:17:21.1738805Z             continuum_state = None
2025-01-14T13:17:21.1738902Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1739014Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1739108Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1739210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1739393Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1739489Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1739581Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1739650Z         ).to_numba(
2025-01-14T13:17:21.1739739Z             macro_atom_state,
2025-01-14T13:17:21.1739831Z             self.line_interaction_type,
2025-01-14T13:17:21.1739907Z         )
2025-01-14T13:17:21.1740007Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1740278Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1740345Z         ]
2025-01-14T13:17:21.1740645Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1740649Z 
2025-01-14T13:17:21.1740801Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1740999Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-14T13:17:21.1741008Z 
2025-01-14T13:17:21.1741997Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1742372Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1742377Z 
2025-01-14T13:17:21.1742474Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1742619Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1742688Z         """
2025-01-14T13:17:21.1742837Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1742903Z     
2025-01-14T13:17:21.1742980Z         Parameters
2025-01-14T13:17:21.1743055Z         ----------
2025-01-14T13:17:21.1743204Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1743335Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1743456Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1743531Z             Atomic data.
2025-01-14T13:17:21.1743602Z     
2025-01-14T13:17:21.1743673Z         Returns
2025-01-14T13:17:21.1743749Z         -------
2025-01-14T13:17:21.1743854Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1743939Z             Simulation object.
2025-01-14T13:17:21.1744005Z         """
2025-01-14T13:17:21.1744159Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1744333Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1744446Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1744576Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1744708Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1744887Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1745025Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1745130Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1745362Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1745442Z >       sim = run_tardis(
2025-01-14T13:17:21.1745522Z             config_verysimple,
2025-01-14T13:17:21.1745607Z             atom_data=atomic_data,
2025-01-14T13:17:21.1745697Z             show_convergence_plots=False,
2025-01-14T13:17:21.1745782Z             log_level="CRITICAl",
2025-01-14T13:17:21.1745853Z         )
2025-01-14T13:17:21.1745857Z 
2025-01-14T13:17:21.1745995Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1746111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1746195Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1746285Z     simulation.run_convergence()
2025-01-14T13:17:21.1746519Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1746668Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1746762Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1746926Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1747032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1747036Z 
2025-01-14T13:17:21.1747305Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1747510Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1747730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1748008Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1748171Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1748311Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1748315Z 
2025-01-14T13:17:21.1748403Z     def initialize_transport_state(
2025-01-14T13:17:21.1748476Z         self,
2025-01-14T13:17:21.1748560Z         simulation_state,
2025-01-14T13:17:21.1748639Z         opacity_state,
2025-01-14T13:17:21.1748714Z         macro_atom_state,
2025-01-14T13:17:21.1748788Z         plasma,
2025-01-14T13:17:21.1748866Z         no_of_packets,
2025-01-14T13:17:21.1748947Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1749023Z         iteration=0,
2025-01-14T13:17:21.1749090Z     ):
2025-01-14T13:17:21.1749220Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1749316Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1749389Z         else:
2025-01-14T13:17:21.1749466Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1749537Z     
2025-01-14T13:17:21.1749672Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1749772Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1749839Z         )
2025-01-14T13:17:21.1749912Z     
2025-01-14T13:17:21.1750039Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1750162Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1750313Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1750386Z         else:
2025-01-14T13:17:21.1750472Z             continuum_state = None
2025-01-14T13:17:21.1750570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1750683Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1750775Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1750883Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1750981Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1751077Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1751170Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1751247Z         ).to_numba(
2025-01-14T13:17:21.1751324Z             macro_atom_state,
2025-01-14T13:17:21.1751415Z             self.line_interaction_type,
2025-01-14T13:17:21.1751699Z         )
2025-01-14T13:17:21.1751807Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1752077Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1752149Z         ]
2025-01-14T13:17:21.1752457Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1752462Z 
2025-01-14T13:17:21.1752608Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1752766Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:17:21.1753085Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-14T13:17:21.1753233Z log_level = CRITICAL will be used for Log Level Determination
2025-01-14T13:17:21.1753237Z 
2025-01-14T13:17:21.1753427Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-14T13:17:21.1753436Z 
2025-01-14T13:17:21.1754108Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1754458Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1754462Z 
2025-01-14T13:17:21.1754549Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1754689Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1754757Z         """
2025-01-14T13:17:21.1754911Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1754976Z     
2025-01-14T13:17:21.1755053Z         Parameters
2025-01-14T13:17:21.1755125Z         ----------
2025-01-14T13:17:21.1755271Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1755403Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1755518Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1755598Z             Atomic data.
2025-01-14T13:17:21.1755664Z     
2025-01-14T13:17:21.1755737Z         Returns
2025-01-14T13:17:21.1755807Z         -------
2025-01-14T13:17:21.1755915Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1755998Z             Simulation object.
2025-01-14T13:17:21.1756069Z         """
2025-01-14T13:17:21.1756217Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1756388Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1756506Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1756635Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1756767Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1756944Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1757088Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1757186Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1757284Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1757358Z >       sim = run_tardis(
2025-01-14T13:17:21.1757442Z             config_verysimple,
2025-01-14T13:17:21.1757523Z             atom_data=atomic_data,
2025-01-14T13:17:21.1757617Z             show_convergence_plots=False,
2025-01-14T13:17:21.1757696Z             log_level="CRITICAl",
2025-01-14T13:17:21.1757767Z         )
2025-01-14T13:17:21.1757771Z 
2025-01-14T13:17:21.1757910Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1758023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1758105Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1758196Z     simulation.run_convergence()
2025-01-14T13:17:21.1758447Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1758585Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1758683Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1758842Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1758963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1758966Z 
2025-01-14T13:17:21.1759237Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1759444Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1759739Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1760021Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1760180Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1760329Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1760333Z 
2025-01-14T13:17:21.1760425Z     def initialize_transport_state(
2025-01-14T13:17:21.1760493Z         self,
2025-01-14T13:17:21.1760574Z         simulation_state,
2025-01-14T13:17:21.1760648Z         opacity_state,
2025-01-14T13:17:21.1760726Z         macro_atom_state,
2025-01-14T13:17:21.1760796Z         plasma,
2025-01-14T13:17:21.1760873Z         no_of_packets,
2025-01-14T13:17:21.1760953Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1761028Z         iteration=0,
2025-01-14T13:17:21.1761094Z     ):
2025-01-14T13:17:21.1761227Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1761328Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1761400Z         else:
2025-01-14T13:17:21.1761476Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1761692Z     
2025-01-14T13:17:21.1761836Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1761948Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1762022Z         )
2025-01-14T13:17:21.1762089Z     
2025-01-14T13:17:21.1762222Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1762335Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1762494Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1762564Z         else:
2025-01-14T13:17:21.1762651Z             continuum_state = None
2025-01-14T13:17:21.1762751Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1762865Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1762965Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1763076Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1763174Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1763279Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1763381Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1763450Z         ).to_numba(
2025-01-14T13:17:21.1763537Z             macro_atom_state,
2025-01-14T13:17:21.1763625Z             self.line_interaction_type,
2025-01-14T13:17:21.1763699Z         )
2025-01-14T13:17:21.1763801Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1764075Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1764143Z         ]
2025-01-14T13:17:21.1764452Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1764456Z 
2025-01-14T13:17:21.1764607Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1764804Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:17:21.1764807Z 
2025-01-14T13:17:21.1765478Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1765950Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1765954Z 
2025-01-14T13:17:21.1766048Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1766185Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1766256Z         """
2025-01-14T13:17:21.1766400Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1766475Z     
2025-01-14T13:17:21.1766652Z         Parameters
2025-01-14T13:17:21.1766733Z         ----------
2025-01-14T13:17:21.1766881Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1767005Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1767133Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1767207Z             Atomic data.
2025-01-14T13:17:21.1767279Z     
2025-01-14T13:17:21.1767348Z         Returns
2025-01-14T13:17:21.1767422Z         -------
2025-01-14T13:17:21.1767526Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1767610Z             Simulation object.
2025-01-14T13:17:21.1767676Z         """
2025-01-14T13:17:21.1767832Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1768002Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1768120Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1768248Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1768385Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1768564Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1768702Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1768808Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1768904Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1768984Z >       sim = run_tardis(
2025-01-14T13:17:21.1769067Z             config_verysimple,
2025-01-14T13:17:21.1769153Z             atom_data=atomic_data,
2025-01-14T13:17:21.1769242Z             show_convergence_plots=False,
2025-01-14T13:17:21.1769329Z             log_level="CRITICAl",
2025-01-14T13:17:21.1769397Z         )
2025-01-14T13:17:21.1769400Z 
2025-01-14T13:17:21.1769543Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1769655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1769745Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1769840Z     simulation.run_convergence()
2025-01-14T13:17:21.1769953Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1770101Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1770195Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1770355Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1770461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1770464Z 
2025-01-14T13:17:21.1770737Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1770938Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1771168Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1771441Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1771699Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1771842Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1771963Z 
2025-01-14T13:17:21.1772083Z     def initialize_transport_state(
2025-01-14T13:17:21.1772160Z         self,
2025-01-14T13:17:21.1772239Z         simulation_state,
2025-01-14T13:17:21.1772321Z         opacity_state,
2025-01-14T13:17:21.1772395Z         macro_atom_state,
2025-01-14T13:17:21.1772470Z         plasma,
2025-01-14T13:17:21.1772545Z         no_of_packets,
2025-01-14T13:17:21.1772631Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1772705Z         iteration=0,
2025-01-14T13:17:21.1772781Z     ):
2025-01-14T13:17:21.1772905Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1773007Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1773076Z         else:
2025-01-14T13:17:21.1773290Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1773369Z     
2025-01-14T13:17:21.1773503Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1773606Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1773681Z         )
2025-01-14T13:17:21.1773756Z     
2025-01-14T13:17:21.1773892Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1774009Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1774162Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1774237Z         else:
2025-01-14T13:17:21.1774319Z             continuum_state = None
2025-01-14T13:17:21.1774426Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1774534Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1774633Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1774743Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1774848Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1774947Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1775037Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1775117Z         ).to_numba(
2025-01-14T13:17:21.1775195Z             macro_atom_state,
2025-01-14T13:17:21.1775286Z             self.line_interaction_type,
2025-01-14T13:17:21.1775352Z         )
2025-01-14T13:17:21.1775458Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1775725Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1775797Z         ]
2025-01-14T13:17:21.1776098Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1776102Z 
2025-01-14T13:17:21.1776254Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1776529Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-14T13:17:21.1776533Z 
2025-01-14T13:17:21.1777195Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1777554Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1777558Z 
2025-01-14T13:17:21.1777646Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1777787Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1777853Z         """
2025-01-14T13:17:21.1777999Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1778070Z     
2025-01-14T13:17:21.1778143Z         Parameters
2025-01-14T13:17:21.1778222Z         ----------
2025-01-14T13:17:21.1778364Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1778491Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1778604Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1778787Z             Atomic data.
2025-01-14T13:17:21.1778856Z     
2025-01-14T13:17:21.1778930Z         Returns
2025-01-14T13:17:21.1779000Z         -------
2025-01-14T13:17:21.1779109Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1779188Z             Simulation object.
2025-01-14T13:17:21.1779259Z         """
2025-01-14T13:17:21.1779406Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1779582Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1779695Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1779826Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1780046Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1780222Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1780358Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1780465Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1780564Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1780640Z >       sim = run_tardis(
2025-01-14T13:17:21.1780725Z             config_verysimple,
2025-01-14T13:17:21.1780806Z             atom_data=atomic_data,
2025-01-14T13:17:21.1780899Z             show_convergence_plots=False,
2025-01-14T13:17:21.1780978Z             log_level="CRITICAl",
2025-01-14T13:17:21.1781052Z         )
2025-01-14T13:17:21.1781056Z 
2025-01-14T13:17:21.1781192Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1781307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1781400Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1781486Z     simulation.run_convergence()
2025-01-14T13:17:21.1781831Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1782054Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1782226Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1782404Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1782520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1782524Z 
2025-01-14T13:17:21.1782789Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1782994Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1783222Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1783496Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1783658Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1783791Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1783795Z 
2025-01-14T13:17:21.1783893Z     def initialize_transport_state(
2025-01-14T13:17:21.1783963Z         self,
2025-01-14T13:17:21.1784048Z         simulation_state,
2025-01-14T13:17:21.1784124Z         opacity_state,
2025-01-14T13:17:21.1784211Z         macro_atom_state,
2025-01-14T13:17:21.1784282Z         plasma,
2025-01-14T13:17:21.1784362Z         no_of_packets,
2025-01-14T13:17:21.1784449Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1784529Z         iteration=0,
2025-01-14T13:17:21.1784599Z     ):
2025-01-14T13:17:21.1784729Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1784832Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1784902Z         else:
2025-01-14T13:17:21.1784987Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1785059Z     
2025-01-14T13:17:21.1785198Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1785292Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1785369Z         )
2025-01-14T13:17:21.1785584Z     
2025-01-14T13:17:21.1785720Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1785834Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1785993Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1786063Z         else:
2025-01-14T13:17:21.1786150Z             continuum_state = None
2025-01-14T13:17:21.1786249Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1786362Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1786459Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1786564Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1786780Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1786878Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1786978Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1787048Z         ).to_numba(
2025-01-14T13:17:21.1787136Z             macro_atom_state,
2025-01-14T13:17:21.1787223Z             self.line_interaction_type,
2025-01-14T13:17:21.1787297Z         )
2025-01-14T13:17:21.1787396Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1787671Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1787737Z         ]
2025-01-14T13:17:21.1788043Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1788048Z 
2025-01-14T13:17:21.1788198Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1788462Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-14T13:17:21.1788466Z 
2025-01-14T13:17:21.1789135Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1789484Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1789488Z 
2025-01-14T13:17:21.1789582Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1789720Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1789793Z         """
2025-01-14T13:17:21.1789944Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1790010Z     
2025-01-14T13:17:21.1790089Z         Parameters
2025-01-14T13:17:21.1790162Z         ----------
2025-01-14T13:17:21.1790315Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1790436Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1790557Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1790632Z             Atomic data.
2025-01-14T13:17:21.1790709Z     
2025-01-14T13:17:21.1790778Z         Returns
2025-01-14T13:17:21.1790854Z         -------
2025-01-14T13:17:21.1790958Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1791043Z             Simulation object.
2025-01-14T13:17:21.1791111Z         """
2025-01-14T13:17:21.1791267Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1791437Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1791708Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1791909Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1792052Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1792235Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1792368Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1792472Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1792697Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1792780Z >       sim = run_tardis(
2025-01-14T13:17:21.1792859Z             config_verysimple,
2025-01-14T13:17:21.1792946Z             atom_data=atomic_data,
2025-01-14T13:17:21.1793035Z             show_convergence_plots=False,
2025-01-14T13:17:21.1793121Z             log_level="CRITICAl",
2025-01-14T13:17:21.1793193Z         )
2025-01-14T13:17:21.1793204Z 
2025-01-14T13:17:21.1793339Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1793454Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1793537Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1793737Z     simulation.run_convergence()
2025-01-14T13:17:21.1793853Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1793996Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1794092Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1794261Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1794368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1794372Z 
2025-01-14T13:17:21.1794641Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1794850Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1795068Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1795351Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1795516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1795660Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1795664Z 
2025-01-14T13:17:21.1795752Z     def initialize_transport_state(
2025-01-14T13:17:21.1795834Z         self,
2025-01-14T13:17:21.1795912Z         simulation_state,
2025-01-14T13:17:21.1795993Z         opacity_state,
2025-01-14T13:17:21.1796071Z         macro_atom_state,
2025-01-14T13:17:21.1796150Z         plasma,
2025-01-14T13:17:21.1796226Z         no_of_packets,
2025-01-14T13:17:21.1796318Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1796397Z         iteration=0,
2025-01-14T13:17:21.1796466Z     ):
2025-01-14T13:17:21.1796597Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1796694Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1796771Z         else:
2025-01-14T13:17:21.1796849Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1796923Z     
2025-01-14T13:17:21.1797058Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1797159Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1797226Z         )
2025-01-14T13:17:21.1797299Z     
2025-01-14T13:17:21.1797423Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1797544Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1797693Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1797767Z         else:
2025-01-14T13:17:21.1797849Z             continuum_state = None
2025-01-14T13:17:21.1797953Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1798066Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1798155Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1798263Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1798360Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1798459Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1798550Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1798626Z         ).to_numba(
2025-01-14T13:17:21.1798703Z             macro_atom_state,
2025-01-14T13:17:21.1798882Z             self.line_interaction_type,
2025-01-14T13:17:21.1798950Z         )
2025-01-14T13:17:21.1799057Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1799327Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1799400Z         ]
2025-01-14T13:17:21.1799704Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1799708Z 
2025-01-14T13:17:21.1799852Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1800117Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-14T13:17:21.1800121Z 
2025-01-14T13:17:21.1800884Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1801241Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1801246Z 
2025-01-14T13:17:21.1801338Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1801473Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1801647Z         """
2025-01-14T13:17:21.1801793Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1801865Z     
2025-01-14T13:17:21.1801940Z         Parameters
2025-01-14T13:17:21.1802019Z         ----------
2025-01-14T13:17:21.1802161Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1802294Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1802407Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1802487Z             Atomic data.
2025-01-14T13:17:21.1802553Z     
2025-01-14T13:17:21.1802633Z         Returns
2025-01-14T13:17:21.1802703Z         -------
2025-01-14T13:17:21.1802813Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1802891Z             Simulation object.
2025-01-14T13:17:21.1802965Z         """
2025-01-14T13:17:21.1803120Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1803288Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1803407Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1803529Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1803667Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1803844Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1803981Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1804081Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1804181Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1804260Z >       sim = run_tardis(
2025-01-14T13:17:21.1804346Z             config_verysimple,
2025-01-14T13:17:21.1804427Z             atom_data=atomic_data,
2025-01-14T13:17:21.1804521Z             show_convergence_plots=False,
2025-01-14T13:17:21.1804607Z             log_level="CRITICAl",
2025-01-14T13:17:21.1804674Z         )
2025-01-14T13:17:21.1804678Z 
2025-01-14T13:17:21.1804820Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1804927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1805024Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1805108Z     simulation.run_convergence()
2025-01-14T13:17:21.1805232Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1805371Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1805471Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1805622Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1805860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1805864Z 
2025-01-14T13:17:21.1806134Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1806332Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1806558Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1806830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1806990Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1807235Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1807240Z 
2025-01-14T13:17:21.1807334Z     def initialize_transport_state(
2025-01-14T13:17:21.1807401Z         self,
2025-01-14T13:17:21.1807489Z         simulation_state,
2025-01-14T13:17:21.1807563Z         opacity_state,
2025-01-14T13:17:21.1807643Z         macro_atom_state,
2025-01-14T13:17:21.1807716Z         plasma,
2025-01-14T13:17:21.1807788Z         no_of_packets,
2025-01-14T13:17:21.1807876Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1807947Z         iteration=0,
2025-01-14T13:17:21.1808019Z     ):
2025-01-14T13:17:21.1808141Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1808239Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1808307Z         else:
2025-01-14T13:17:21.1808390Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1808456Z     
2025-01-14T13:17:21.1808591Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1808689Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1808761Z         )
2025-01-14T13:17:21.1808826Z     
2025-01-14T13:17:21.1808956Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1809073Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1809228Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1809301Z         else:
2025-01-14T13:17:21.1809381Z             continuum_state = None
2025-01-14T13:17:21.1809485Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1809591Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1809685Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1809789Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1809892Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1809983Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1810084Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1810154Z         ).to_numba(
2025-01-14T13:17:21.1810239Z             macro_atom_state,
2025-01-14T13:17:21.1810325Z             self.line_interaction_type,
2025-01-14T13:17:21.1810400Z         )
2025-01-14T13:17:21.1810498Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1810771Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1810844Z         ]
2025-01-14T13:17:21.1811141Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1811145Z 
2025-01-14T13:17:21.1811294Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1811646Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-14T13:17:21.1811650Z 
2025-01-14T13:17:21.1812319Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1812783Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1812793Z 
2025-01-14T13:17:21.1812879Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1813019Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1813091Z         """
2025-01-14T13:17:21.1813236Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1813302Z     
2025-01-14T13:17:21.1813378Z         Parameters
2025-01-14T13:17:21.1813450Z         ----------
2025-01-14T13:17:21.1813594Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1813714Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1813938Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1814016Z             Atomic data.
2025-01-14T13:17:21.1814086Z     
2025-01-14T13:17:21.1814153Z         Returns
2025-01-14T13:17:21.1814228Z         -------
2025-01-14T13:17:21.1814343Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1814420Z             Simulation object.
2025-01-14T13:17:21.1814493Z         """
2025-01-14T13:17:21.1814637Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1814807Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1814919Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1815046Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1815176Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1815351Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1815485Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1815588Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1815680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1815765Z >       sim = run_tardis(
2025-01-14T13:17:21.1815844Z             config_verysimple,
2025-01-14T13:17:21.1815929Z             atom_data=atomic_data,
2025-01-14T13:17:21.1816023Z             show_convergence_plots=False,
2025-01-14T13:17:21.1816102Z             log_level="CRITICAl",
2025-01-14T13:17:21.1816177Z         )
2025-01-14T13:17:21.1816180Z 
2025-01-14T13:17:21.1816317Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1816430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1816511Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1816600Z     simulation.run_convergence()
2025-01-14T13:17:21.1816714Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1816860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1816952Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1817107Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1817220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1817224Z 
2025-01-14T13:17:21.1817489Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1817693Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1817912Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1818187Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1818341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1818487Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1818491Z 
2025-01-14T13:17:21.1818579Z     def initialize_transport_state(
2025-01-14T13:17:21.1818651Z         self,
2025-01-14T13:17:21.1818732Z         simulation_state,
2025-01-14T13:17:21.1818810Z         opacity_state,
2025-01-14T13:17:21.1818978Z         macro_atom_state,
2025-01-14T13:17:21.1819047Z         plasma,
2025-01-14T13:17:21.1819124Z         no_of_packets,
2025-01-14T13:17:21.1819205Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1819281Z         iteration=0,
2025-01-14T13:17:21.1819346Z     ):
2025-01-14T13:17:21.1819473Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1819567Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1819639Z         else:
2025-01-14T13:17:21.1819715Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1819785Z     
2025-01-14T13:17:21.1819917Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1820093Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1820162Z         )
2025-01-14T13:17:21.1820232Z     
2025-01-14T13:17:21.1820358Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1820473Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1820634Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1820701Z         else:
2025-01-14T13:17:21.1820788Z             continuum_state = None
2025-01-14T13:17:21.1820885Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1820997Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1821089Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1821200Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1821298Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1821396Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1821488Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1821662Z         ).to_numba(
2025-01-14T13:17:21.1821745Z             macro_atom_state,
2025-01-14T13:17:21.1821837Z             self.line_interaction_type,
2025-01-14T13:17:21.1821903Z         )
2025-01-14T13:17:21.1822008Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1822292Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1822359Z         ]
2025-01-14T13:17:21.1822662Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1822666Z 
2025-01-14T13:17:21.1822814Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1823080Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-14T13:17:21.1823085Z 
2025-01-14T13:17:21.1823751Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1824104Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1824112Z 
2025-01-14T13:17:21.1824206Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1824345Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1824416Z         """
2025-01-14T13:17:21.1824558Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1824629Z     
2025-01-14T13:17:21.1824702Z         Parameters
2025-01-14T13:17:21.1824780Z         ----------
2025-01-14T13:17:21.1824922Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1825058Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1825176Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1825257Z             Atomic data.
2025-01-14T13:17:21.1825328Z     
2025-01-14T13:17:21.1825396Z         Returns
2025-01-14T13:17:21.1825474Z         -------
2025-01-14T13:17:21.1825579Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1825803Z             Simulation object.
2025-01-14T13:17:21.1825871Z         """
2025-01-14T13:17:21.1826022Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1826192Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1826312Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1826435Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1826572Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1826747Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1827007Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1827111Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1827209Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1827289Z >       sim = run_tardis(
2025-01-14T13:17:21.1827369Z             config_verysimple,
2025-01-14T13:17:21.1827462Z             atom_data=atomic_data,
2025-01-14T13:17:21.1827551Z             show_convergence_plots=False,
2025-01-14T13:17:21.1827635Z             log_level="CRITICAl",
2025-01-14T13:17:21.1827702Z         )
2025-01-14T13:17:21.1827706Z 
2025-01-14T13:17:21.1827849Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1827960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1828049Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1828135Z     simulation.run_convergence()
2025-01-14T13:17:21.1828253Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1828396Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1828492Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1828647Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1828755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1828763Z 
2025-01-14T13:17:21.1829030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1829231Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1829457Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1829731Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1829893Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1830027Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1830031Z 
2025-01-14T13:17:21.1830129Z     def initialize_transport_state(
2025-01-14T13:17:21.1830202Z         self,
2025-01-14T13:17:21.1830279Z         simulation_state,
2025-01-14T13:17:21.1830360Z         opacity_state,
2025-01-14T13:17:21.1830435Z         macro_atom_state,
2025-01-14T13:17:21.1830513Z         plasma,
2025-01-14T13:17:21.1830585Z         no_of_packets,
2025-01-14T13:17:21.1830671Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1830744Z         iteration=0,
2025-01-14T13:17:21.1830816Z     ):
2025-01-14T13:17:21.1830940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1831039Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1831107Z         else:
2025-01-14T13:17:21.1831190Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1831256Z     
2025-01-14T13:17:21.1831394Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1831489Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1831708Z         )
2025-01-14T13:17:21.1831830Z     
2025-01-14T13:17:21.1831965Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1832083Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1832237Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1832437Z         else:
2025-01-14T13:17:21.1832521Z             continuum_state = None
2025-01-14T13:17:21.1832626Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1832733Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1832830Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1832936Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1833037Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1833129Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1833227Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1833296Z         ).to_numba(
2025-01-14T13:17:21.1833487Z             macro_atom_state,
2025-01-14T13:17:21.1833583Z             self.line_interaction_type,
2025-01-14T13:17:21.1833651Z         )
2025-01-14T13:17:21.1833758Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1834038Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1834110Z         ]
2025-01-14T13:17:21.1834409Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1834413Z 
2025-01-14T13:17:21.1834567Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1834828Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-14T13:17:21.1834832Z 
2025-01-14T13:17:21.1835502Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1835853Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1835863Z 
2025-01-14T13:17:21.1835951Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1836097Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1836164Z         """
2025-01-14T13:17:21.1836311Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1836380Z     
2025-01-14T13:17:21.1836457Z         Parameters
2025-01-14T13:17:21.1836528Z         ----------
2025-01-14T13:17:21.1836673Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1836794Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1836913Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1836997Z             Atomic data.
2025-01-14T13:17:21.1837063Z     
2025-01-14T13:17:21.1837137Z         Returns
2025-01-14T13:17:21.1837207Z         -------
2025-01-14T13:17:21.1837316Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1837394Z             Simulation object.
2025-01-14T13:17:21.1837472Z         """
2025-01-14T13:17:21.1837619Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1837791Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1837904Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1838029Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1838161Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1838343Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1838475Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1838583Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1838682Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1838757Z >       sim = run_tardis(
2025-01-14T13:17:21.1838841Z             config_verysimple,
2025-01-14T13:17:21.1838922Z             atom_data=atomic_data,
2025-01-14T13:17:21.1839106Z             show_convergence_plots=False,
2025-01-14T13:17:21.1839185Z             log_level="CRITICAl",
2025-01-14T13:17:21.1839257Z         )
2025-01-14T13:17:21.1839262Z 
2025-01-14T13:17:21.1839399Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1839513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1839596Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1839686Z     simulation.run_convergence()
2025-01-14T13:17:21.1839798Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1839944Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1840131Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1840286Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1840397Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1840400Z 
2025-01-14T13:17:21.1840671Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1840876Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1841096Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1841375Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1841530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1841767Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1841771Z 
2025-01-14T13:17:21.1841864Z     def initialize_transport_state(
2025-01-14T13:17:21.1841938Z         self,
2025-01-14T13:17:21.1842020Z         simulation_state,
2025-01-14T13:17:21.1842097Z         opacity_state,
2025-01-14T13:17:21.1842177Z         macro_atom_state,
2025-01-14T13:17:21.1842247Z         plasma,
2025-01-14T13:17:21.1842329Z         no_of_packets,
2025-01-14T13:17:21.1842412Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1842489Z         iteration=0,
2025-01-14T13:17:21.1842556Z     ):
2025-01-14T13:17:21.1842684Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1842778Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1842852Z         else:
2025-01-14T13:17:21.1842930Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1843000Z     
2025-01-14T13:17:21.1843132Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1843231Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1843304Z         )
2025-01-14T13:17:21.1843371Z     
2025-01-14T13:17:21.1843507Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1843619Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1843780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1843853Z         else:
2025-01-14T13:17:21.1843938Z             continuum_state = None
2025-01-14T13:17:21.1844037Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1844148Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1844241Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1844354Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1844452Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1844549Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1844644Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1844715Z         ).to_numba(
2025-01-14T13:17:21.1844797Z             macro_atom_state,
2025-01-14T13:17:21.1844887Z             self.line_interaction_type,
2025-01-14T13:17:21.1844959Z         )
2025-01-14T13:17:21.1845058Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1845333Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1845528Z         ]
2025-01-14T13:17:21.1845837Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1845841Z 
2025-01-14T13:17:21.1845988Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1846251Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-14T13:17:21.1846255Z 
2025-01-14T13:17:21.1847024Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1847373Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1847378Z 
2025-01-14T13:17:21.1847476Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1847613Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1847685Z         """
2025-01-14T13:17:21.1847827Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1847899Z     
2025-01-14T13:17:21.1847972Z         Parameters
2025-01-14T13:17:21.1853472Z         ----------
2025-01-14T13:17:21.1853665Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1853813Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1853942Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1854019Z             Atomic data.
2025-01-14T13:17:21.1854092Z     
2025-01-14T13:17:21.1854174Z         Returns
2025-01-14T13:17:21.1854254Z         -------
2025-01-14T13:17:21.1854366Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1854452Z             Simulation object.
2025-01-14T13:17:21.1854517Z         """
2025-01-14T13:17:21.1854686Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1854868Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1854989Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1855115Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1855254Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1855428Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1855568Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1855673Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1855774Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1855856Z >       sim = run_tardis(
2025-01-14T13:17:21.1855937Z             config_verysimple,
2025-01-14T13:17:21.1856020Z             atom_data=atomic_data,
2025-01-14T13:17:21.1856111Z             show_convergence_plots=False,
2025-01-14T13:17:21.1856206Z             log_level="CRITICAl",
2025-01-14T13:17:21.1856272Z         )
2025-01-14T13:17:21.1856277Z 
2025-01-14T13:17:21.1856427Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1856539Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1856630Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1856716Z     simulation.run_convergence()
2025-01-14T13:17:21.1856838Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1856987Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1857078Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1857239Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1857348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1857352Z 
2025-01-14T13:17:21.1857624Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1858033Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1858261Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1858534Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1858696Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1858836Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1858840Z 
2025-01-14T13:17:21.1858928Z     def initialize_transport_state(
2025-01-14T13:17:21.1858999Z         self,
2025-01-14T13:17:21.1859182Z         simulation_state,
2025-01-14T13:17:21.1859263Z         opacity_state,
2025-01-14T13:17:21.1859337Z         macro_atom_state,
2025-01-14T13:17:21.1859412Z         plasma,
2025-01-14T13:17:21.1859484Z         no_of_packets,
2025-01-14T13:17:21.1859574Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1859652Z         iteration=0,
2025-01-14T13:17:21.1859724Z     ):
2025-01-14T13:17:21.1859850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1859950Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1860018Z         else:
2025-01-14T13:17:21.1860099Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1860164Z     
2025-01-14T13:17:21.1860307Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1860410Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1860475Z         )
2025-01-14T13:17:21.1860544Z     
2025-01-14T13:17:21.1860677Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1860802Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1860956Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1861029Z         else:
2025-01-14T13:17:21.1861111Z             continuum_state = None
2025-01-14T13:17:21.1861222Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1861329Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1861425Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1861528Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1861778Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1861874Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1861972Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1862046Z         ).to_numba(
2025-01-14T13:17:21.1862122Z             macro_atom_state,
2025-01-14T13:17:21.1862213Z             self.line_interaction_type,
2025-01-14T13:17:21.1862283Z         )
2025-01-14T13:17:21.1862389Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1862662Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1862736Z         ]
2025-01-14T13:17:21.1863040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1863044Z 
2025-01-14T13:17:21.1863199Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1863459Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-14T13:17:21.1863469Z 
2025-01-14T13:17:21.1864139Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1864496Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1864500Z 
2025-01-14T13:17:21.1864592Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1864874Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1864940Z         """
2025-01-14T13:17:21.1865094Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1865158Z     
2025-01-14T13:17:21.1865234Z         Parameters
2025-01-14T13:17:21.1865304Z         ----------
2025-01-14T13:17:21.1865452Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1865580Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1865693Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1865771Z             Atomic data.
2025-01-14T13:17:21.1865835Z     
2025-01-14T13:17:21.1865910Z         Returns
2025-01-14T13:17:21.1866087Z         -------
2025-01-14T13:17:21.1866201Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1866278Z             Simulation object.
2025-01-14T13:17:21.1866347Z         """
2025-01-14T13:17:21.1866497Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1866678Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1866789Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1866917Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1867046Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1867222Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1867363Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1867462Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1867558Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1867635Z >       sim = run_tardis(
2025-01-14T13:17:21.1867717Z             config_verysimple,
2025-01-14T13:17:21.1867798Z             atom_data=atomic_data,
2025-01-14T13:17:21.1867891Z             show_convergence_plots=False,
2025-01-14T13:17:21.1867970Z             log_level="CRITICAl",
2025-01-14T13:17:21.1868045Z         )
2025-01-14T13:17:21.1868049Z 
2025-01-14T13:17:21.1868186Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1868304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1868388Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1868479Z     simulation.run_convergence()
2025-01-14T13:17:21.1868599Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1868741Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1868841Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1868995Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1869113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1869117Z 
2025-01-14T13:17:21.1869384Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1869595Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1869813Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1870095Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1870262Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1870398Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1870402Z 
2025-01-14T13:17:21.1870493Z     def initialize_transport_state(
2025-01-14T13:17:21.1870560Z         self,
2025-01-14T13:17:21.1870644Z         simulation_state,
2025-01-14T13:17:21.1870720Z         opacity_state,
2025-01-14T13:17:21.1870798Z         macro_atom_state,
2025-01-14T13:17:21.1870867Z         plasma,
2025-01-14T13:17:21.1870945Z         no_of_packets,
2025-01-14T13:17:21.1871025Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1871198Z         iteration=0,
2025-01-14T13:17:21.1871263Z     ):
2025-01-14T13:17:21.1871395Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1871490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1871746Z         else:
2025-01-14T13:17:21.1871887Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1871961Z     
2025-01-14T13:17:21.1872131Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1872227Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1872297Z         )
2025-01-14T13:17:21.1872362Z     
2025-01-14T13:17:21.1872496Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1872736Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1872902Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1872970Z         else:
2025-01-14T13:17:21.1873056Z             continuum_state = None
2025-01-14T13:17:21.1873155Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1873272Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1873365Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1873477Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1873580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1873672Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1873767Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1873836Z         ).to_numba(
2025-01-14T13:17:21.1873919Z             macro_atom_state,
2025-01-14T13:17:21.1874005Z             self.line_interaction_type,
2025-01-14T13:17:21.1874077Z         )
2025-01-14T13:17:21.1874183Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1874460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1874525Z         ]
2025-01-14T13:17:21.1874833Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1874842Z 
2025-01-14T13:17:21.1874990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1875254Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-14T13:17:21.1875258Z 
2025-01-14T13:17:21.1875930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1876281Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1876285Z 
2025-01-14T13:17:21.1876377Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1876515Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1876591Z         """
2025-01-14T13:17:21.1876733Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1876805Z     
2025-01-14T13:17:21.1876881Z         Parameters
2025-01-14T13:17:21.1876952Z         ----------
2025-01-14T13:17:21.1877098Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1877221Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1877337Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1877410Z             Atomic data.
2025-01-14T13:17:21.1877479Z     
2025-01-14T13:17:21.1877545Z         Returns
2025-01-14T13:17:21.1877618Z         -------
2025-01-14T13:17:21.1877724Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1877806Z             Simulation object.
2025-01-14T13:17:21.1877871Z         """
2025-01-14T13:17:21.1878023Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1878193Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1878429Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1878556Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1878686Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1878863Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1878995Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1879097Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1879191Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1879269Z >       sim = run_tardis(
2025-01-14T13:17:21.1879449Z             config_verysimple,
2025-01-14T13:17:21.1879535Z             atom_data=atomic_data,
2025-01-14T13:17:21.1879624Z             show_convergence_plots=False,
2025-01-14T13:17:21.1879707Z             log_level="CRITICAl",
2025-01-14T13:17:21.1879772Z         )
2025-01-14T13:17:21.1879782Z 
2025-01-14T13:17:21.1879922Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1880037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1880125Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1880215Z     simulation.run_convergence()
2025-01-14T13:17:21.1880328Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1880471Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1880563Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1880717Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1880827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1880831Z 
2025-01-14T13:17:21.1881101Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1881299Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1881525Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1881915Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1882071Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1882208Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1882212Z 
2025-01-14T13:17:21.1882296Z     def initialize_transport_state(
2025-01-14T13:17:21.1882367Z         self,
2025-01-14T13:17:21.1882442Z         simulation_state,
2025-01-14T13:17:21.1882520Z         opacity_state,
2025-01-14T13:17:21.1882593Z         macro_atom_state,
2025-01-14T13:17:21.1882672Z         plasma,
2025-01-14T13:17:21.1882745Z         no_of_packets,
2025-01-14T13:17:21.1882830Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1882900Z         iteration=0,
2025-01-14T13:17:21.1882970Z     ):
2025-01-14T13:17:21.1883100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1883200Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1883272Z         else:
2025-01-14T13:17:21.1883347Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1883415Z     
2025-01-14T13:17:21.1883549Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1883652Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1883721Z         )
2025-01-14T13:17:21.1883790Z     
2025-01-14T13:17:21.1883921Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1884039Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1884197Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1884270Z         else:
2025-01-14T13:17:21.1884355Z             continuum_state = None
2025-01-14T13:17:21.1884463Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1884696Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1884792Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1884904Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1885002Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1885099Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1885190Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1885266Z         ).to_numba(
2025-01-14T13:17:21.1885343Z             macro_atom_state,
2025-01-14T13:17:21.1885436Z             self.line_interaction_type,
2025-01-14T13:17:21.1885501Z         )
2025-01-14T13:17:21.1885608Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1885989Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1886066Z         ]
2025-01-14T13:17:21.1886371Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1886387Z 
2025-01-14T13:17:21.1886534Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1886796Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-14T13:17:21.1886800Z 
2025-01-14T13:17:21.1887461Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1887811Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1887820Z 
2025-01-14T13:17:21.1887909Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1888054Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1888124Z         """
2025-01-14T13:17:21.1888274Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1888343Z     
2025-01-14T13:17:21.1888414Z         Parameters
2025-01-14T13:17:21.1888489Z         ----------
2025-01-14T13:17:21.1888630Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1888756Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1888869Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1888946Z             Atomic data.
2025-01-14T13:17:21.1889010Z     
2025-01-14T13:17:21.1889082Z         Returns
2025-01-14T13:17:21.1889150Z         -------
2025-01-14T13:17:21.1889259Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1889341Z             Simulation object.
2025-01-14T13:17:21.1889412Z         """
2025-01-14T13:17:21.1889558Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1889734Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1889858Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1889979Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1890115Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1890286Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1890423Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1890520Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1890620Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1890693Z >       sim = run_tardis(
2025-01-14T13:17:21.1890775Z             config_verysimple,
2025-01-14T13:17:21.1890862Z             atom_data=atomic_data,
2025-01-14T13:17:21.1890959Z             show_convergence_plots=False,
2025-01-14T13:17:21.1891038Z             log_level="CRITICAl",
2025-01-14T13:17:21.1891108Z         )
2025-01-14T13:17:21.1891112Z 
2025-01-14T13:17:21.1891343Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1891455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1891543Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1891832Z     simulation.run_convergence()
2025-01-14T13:17:21.1892031Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1892175Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1892272Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1892423Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1892535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1892539Z 
2025-01-14T13:17:21.1892947Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1893165Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1893400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1893671Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1893829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1893963Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1893967Z 
2025-01-14T13:17:21.1894057Z     def initialize_transport_state(
2025-01-14T13:17:21.1894123Z         self,
2025-01-14T13:17:21.1894204Z         simulation_state,
2025-01-14T13:17:21.1894278Z         opacity_state,
2025-01-14T13:17:21.1894360Z         macro_atom_state,
2025-01-14T13:17:21.1894428Z         plasma,
2025-01-14T13:17:21.1894509Z         no_of_packets,
2025-01-14T13:17:21.1894589Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1894665Z         iteration=0,
2025-01-14T13:17:21.1894738Z     ):
2025-01-14T13:17:21.1894861Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1894967Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1895033Z         else:
2025-01-14T13:17:21.1895114Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1895177Z     
2025-01-14T13:17:21.1895314Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1895408Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1895477Z         )
2025-01-14T13:17:21.1895543Z     
2025-01-14T13:17:21.1895671Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1895797Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1895953Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1896023Z         else:
2025-01-14T13:17:21.1896108Z             continuum_state = None
2025-01-14T13:17:21.1896213Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1896316Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1896414Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1896516Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1896617Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1896707Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1896800Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1896868Z         ).to_numba(
2025-01-14T13:17:21.1896952Z             macro_atom_state,
2025-01-14T13:17:21.1897038Z             self.line_interaction_type,
2025-01-14T13:17:21.1897114Z         )
2025-01-14T13:17:21.1897212Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1897484Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1897549Z         ]
2025-01-14T13:17:21.1897852Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1897984Z 
2025-01-14T13:17:21.1898137Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1898401Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-14T13:17:21.1898405Z 
2025-01-14T13:17:21.1899072Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1899416Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1899426Z 
2025-01-14T13:17:21.1899652Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1899797Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1899863Z         """
2025-01-14T13:17:21.1900009Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1900080Z     
2025-01-14T13:17:21.1900156Z         Parameters
2025-01-14T13:17:21.1900225Z         ----------
2025-01-14T13:17:21.1900369Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1900490Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1900605Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1900681Z             Atomic data.
2025-01-14T13:17:21.1900750Z     
2025-01-14T13:17:21.1900816Z         Returns
2025-01-14T13:17:21.1900889Z         -------
2025-01-14T13:17:21.1900992Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1901074Z             Simulation object.
2025-01-14T13:17:21.1901143Z         """
2025-01-14T13:17:21.1901294Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1901466Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1901724Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1901860Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1901988Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1902165Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1902297Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1902398Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1902490Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1902568Z >       sim = run_tardis(
2025-01-14T13:17:21.1902647Z             config_verysimple,
2025-01-14T13:17:21.1902732Z             atom_data=atomic_data,
2025-01-14T13:17:21.1902827Z             show_convergence_plots=False,
2025-01-14T13:17:21.1902905Z             log_level="CRITICAl",
2025-01-14T13:17:21.1902975Z         )
2025-01-14T13:17:21.1902980Z 
2025-01-14T13:17:21.1903114Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1903233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1903315Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1903405Z     simulation.run_convergence()
2025-01-14T13:17:21.1903518Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1903659Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1903751Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1903906Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1904010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1904021Z 
2025-01-14T13:17:21.1904285Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1904489Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1904705Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1905104Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1905259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1905397Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1905401Z 
2025-01-14T13:17:21.1905485Z     def initialize_transport_state(
2025-01-14T13:17:21.1905557Z         self,
2025-01-14T13:17:21.1905633Z         simulation_state,
2025-01-14T13:17:21.1905710Z         opacity_state,
2025-01-14T13:17:21.1905788Z         macro_atom_state,
2025-01-14T13:17:21.1905856Z         plasma,
2025-01-14T13:17:21.1905933Z         no_of_packets,
2025-01-14T13:17:21.1906141Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1906220Z         iteration=0,
2025-01-14T13:17:21.1906284Z     ):
2025-01-14T13:17:21.1906411Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1906505Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1906582Z         else:
2025-01-14T13:17:21.1906657Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1906725Z     
2025-01-14T13:17:21.1906856Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1906954Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1907019Z         )
2025-01-14T13:17:21.1907087Z     
2025-01-14T13:17:21.1907213Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1907330Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1907484Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1907550Z         else:
2025-01-14T13:17:21.1907643Z             continuum_state = None
2025-01-14T13:17:21.1907740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1907849Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1907936Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1908048Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1908141Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1908237Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1908324Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1908398Z         ).to_numba(
2025-01-14T13:17:21.1908474Z             macro_atom_state,
2025-01-14T13:17:21.1908564Z             self.line_interaction_type,
2025-01-14T13:17:21.1908628Z         )
2025-01-14T13:17:21.1908735Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1909008Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1909077Z         ]
2025-01-14T13:17:21.1909380Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1909384Z 
2025-01-14T13:17:21.1909530Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1909798Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-14T13:17:21.1909802Z 
2025-01-14T13:17:21.1910461Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1910810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1910814Z 
2025-01-14T13:17:21.1910903Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1911041Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1911111Z         """
2025-01-14T13:17:21.1911253Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1911324Z     
2025-01-14T13:17:21.1911487Z         Parameters
2025-01-14T13:17:21.1911734Z         ----------
2025-01-14T13:17:21.1911942Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1912070Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1912182Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1912262Z             Atomic data.
2025-01-14T13:17:21.1912327Z     
2025-01-14T13:17:21.1912399Z         Returns
2025-01-14T13:17:21.1912467Z         -------
2025-01-14T13:17:21.1912575Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1912657Z             Simulation object.
2025-01-14T13:17:21.1912725Z         """
2025-01-14T13:17:21.1913023Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1913202Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1913319Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1913443Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1913588Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1913760Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1913893Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1913990Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1914088Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1914160Z >       sim = run_tardis(
2025-01-14T13:17:21.1914244Z             config_verysimple,
2025-01-14T13:17:21.1914327Z             atom_data=atomic_data,
2025-01-14T13:17:21.1914415Z             show_convergence_plots=False,
2025-01-14T13:17:21.1914505Z             log_level="CRITICAl",
2025-01-14T13:17:21.1914570Z         )
2025-01-14T13:17:21.1914574Z 
2025-01-14T13:17:21.1914717Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1914825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1914918Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1915001Z     simulation.run_convergence()
2025-01-14T13:17:21.1915116Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1915251Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1915348Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1915496Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1915603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1915607Z 
2025-01-14T13:17:21.1915873Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1916075Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1916298Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1916567Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1916731Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1916863Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1916867Z 
2025-01-14T13:17:21.1916959Z     def initialize_transport_state(
2025-01-14T13:17:21.1917033Z         self,
2025-01-14T13:17:21.1917109Z         simulation_state,
2025-01-14T13:17:21.1917188Z         opacity_state,
2025-01-14T13:17:21.1917261Z         macro_atom_state,
2025-01-14T13:17:21.1917336Z         plasma,
2025-01-14T13:17:21.1917406Z         no_of_packets,
2025-01-14T13:17:21.1917491Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1917565Z         iteration=0,
2025-01-14T13:17:21.1917635Z     ):
2025-01-14T13:17:21.1917756Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1917855Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1917922Z         else:
2025-01-14T13:17:21.1918146Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1918212Z     
2025-01-14T13:17:21.1918349Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1918443Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1918515Z         )
2025-01-14T13:17:21.1918580Z     
2025-01-14T13:17:21.1918711Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1918826Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1918975Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1919046Z         else:
2025-01-14T13:17:21.1919124Z             continuum_state = None
2025-01-14T13:17:21.1919307Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1919414Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1919509Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1919614Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1919724Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1919813Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1919906Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1919974Z         ).to_numba(
2025-01-14T13:17:21.1920054Z             macro_atom_state,
2025-01-14T13:17:21.1920143Z             self.line_interaction_type,
2025-01-14T13:17:21.1920211Z         )
2025-01-14T13:17:21.1920315Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1920582Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1920651Z         ]
2025-01-14T13:17:21.1920951Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1920955Z 
2025-01-14T13:17:21.1921105Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1921370Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-14T13:17:21.1921374Z 
2025-01-14T13:17:21.1922153Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1922502Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1922506Z 
2025-01-14T13:17:21.1922591Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1922728Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1922801Z         """
2025-01-14T13:17:21.1922947Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1923012Z     
2025-01-14T13:17:21.1923089Z         Parameters
2025-01-14T13:17:21.1923159Z         ----------
2025-01-14T13:17:21.1923306Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1923425Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1923540Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1923618Z             Atomic data.
2025-01-14T13:17:21.1923682Z     
2025-01-14T13:17:21.1923754Z         Returns
2025-01-14T13:17:21.1923823Z         -------
2025-01-14T13:17:21.1923927Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1924005Z             Simulation object.
2025-01-14T13:17:21.1924074Z         """
2025-01-14T13:17:21.1924220Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1924394Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1924505Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1924631Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1924901Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1925078Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1925208Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1925308Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1925405Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1925478Z >       sim = run_tardis(
2025-01-14T13:17:21.1925559Z             config_verysimple,
2025-01-14T13:17:21.1925636Z             atom_data=atomic_data,
2025-01-14T13:17:21.1925728Z             show_convergence_plots=False,
2025-01-14T13:17:21.1925807Z             log_level="CRITICAl",
2025-01-14T13:17:21.1925876Z         )
2025-01-14T13:17:21.1925985Z 
2025-01-14T13:17:21.1926126Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1926240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1926327Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1926415Z     simulation.run_convergence()
2025-01-14T13:17:21.1926526Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1926667Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1926763Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1926912Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1927023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1927027Z 
2025-01-14T13:17:21.1927286Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1927492Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1927708Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1927981Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1928142Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1928280Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1928284Z 
2025-01-14T13:17:21.1928374Z     def initialize_transport_state(
2025-01-14T13:17:21.1928441Z         self,
2025-01-14T13:17:21.1928521Z         simulation_state,
2025-01-14T13:17:21.1928594Z         opacity_state,
2025-01-14T13:17:21.1928671Z         macro_atom_state,
2025-01-14T13:17:21.1928738Z         plasma,
2025-01-14T13:17:21.1928814Z         no_of_packets,
2025-01-14T13:17:21.1928893Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1928970Z         iteration=0,
2025-01-14T13:17:21.1929036Z     ):
2025-01-14T13:17:21.1929164Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1929258Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1929329Z         else:
2025-01-14T13:17:21.1929403Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1929483Z     
2025-01-14T13:17:21.1929615Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1929713Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1929784Z         )
2025-01-14T13:17:21.1929849Z     
2025-01-14T13:17:21.1929976Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1930085Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1930238Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1930306Z         else:
2025-01-14T13:17:21.1930392Z             continuum_state = None
2025-01-14T13:17:21.1930488Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1930602Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1930692Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1930798Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1930892Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1931102Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1931189Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1931264Z         ).to_numba(
2025-01-14T13:17:21.1931344Z             macro_atom_state,
2025-01-14T13:17:21.1931429Z             self.line_interaction_type,
2025-01-14T13:17:21.1931499Z         )
2025-01-14T13:17:21.1931709Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1931988Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1932053Z         ]
2025-01-14T13:17:21.1932472Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1932477Z 
2025-01-14T13:17:21.1932628Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1932898Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-14T13:17:21.1932910Z 
2025-01-14T13:17:21.1933575Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1933922Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1933926Z 
2025-01-14T13:17:21.1934019Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1934162Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1934233Z         """
2025-01-14T13:17:21.1934386Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1934455Z     
2025-01-14T13:17:21.1934527Z         Parameters
2025-01-14T13:17:21.1934603Z         ----------
2025-01-14T13:17:21.1934745Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1934879Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1934998Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1935073Z             Atomic data.
2025-01-14T13:17:21.1935146Z     
2025-01-14T13:17:21.1935213Z         Returns
2025-01-14T13:17:21.1935289Z         -------
2025-01-14T13:17:21.1935392Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1935474Z             Simulation object.
2025-01-14T13:17:21.1935543Z         """
2025-01-14T13:17:21.1935697Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1935873Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1935991Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1936115Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1936253Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1936435Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1936578Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1936682Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1936775Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1936855Z >       sim = run_tardis(
2025-01-14T13:17:21.1936935Z             config_verysimple,
2025-01-14T13:17:21.1937023Z             atom_data=atomic_data,
2025-01-14T13:17:21.1937115Z             show_convergence_plots=False,
2025-01-14T13:17:21.1937201Z             log_level="CRITICAl",
2025-01-14T13:17:21.1937269Z         )
2025-01-14T13:17:21.1937273Z 
2025-01-14T13:17:21.1937420Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1937531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1937618Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1937844Z     simulation.run_convergence()
2025-01-14T13:17:21.1937963Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1938108Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1938214Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1938373Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1938479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1938483Z 
2025-01-14T13:17:21.1938753Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1938954Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1939256Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1939533Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1939703Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1939842Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1939846Z 
2025-01-14T13:17:21.1939934Z     def initialize_transport_state(
2025-01-14T13:17:21.1940008Z         self,
2025-01-14T13:17:21.1940085Z         simulation_state,
2025-01-14T13:17:21.1940166Z         opacity_state,
2025-01-14T13:17:21.1940241Z         macro_atom_state,
2025-01-14T13:17:21.1940319Z         plasma,
2025-01-14T13:17:21.1940393Z         no_of_packets,
2025-01-14T13:17:21.1940480Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1940554Z         iteration=0,
2025-01-14T13:17:21.1940632Z     ):
2025-01-14T13:17:21.1940759Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1940859Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1940929Z         else:
2025-01-14T13:17:21.1941010Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1941076Z     
2025-01-14T13:17:21.1941223Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1941322Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1941388Z         )
2025-01-14T13:17:21.1941458Z     
2025-01-14T13:17:21.1941701Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1941820Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1941976Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1942048Z         else:
2025-01-14T13:17:21.1942130Z             continuum_state = None
2025-01-14T13:17:21.1942234Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1942341Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1942441Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1942544Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1942646Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1942750Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1942840Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1942915Z         ).to_numba(
2025-01-14T13:17:21.1942993Z             macro_atom_state,
2025-01-14T13:17:21.1943086Z             self.line_interaction_type,
2025-01-14T13:17:21.1943151Z         )
2025-01-14T13:17:21.1943257Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1943522Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1943597Z         ]
2025-01-14T13:17:21.1943899Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1943908Z 
2025-01-14T13:17:21.1944058Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1944324Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-14T13:17:21.1944463Z 
2025-01-14T13:17:21.1945123Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1945478Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1945483Z 
2025-01-14T13:17:21.1945570Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1945714Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1945780Z         """
2025-01-14T13:17:21.1946039Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1946106Z     
2025-01-14T13:17:21.1946185Z         Parameters
2025-01-14T13:17:21.1946258Z         ----------
2025-01-14T13:17:21.1946404Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1946535Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1946647Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1946727Z             Atomic data.
2025-01-14T13:17:21.1946795Z     
2025-01-14T13:17:21.1946870Z         Returns
2025-01-14T13:17:21.1946938Z         -------
2025-01-14T13:17:21.1947046Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1947123Z             Simulation object.
2025-01-14T13:17:21.1947197Z         """
2025-01-14T13:17:21.1947344Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1947521Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1947639Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1947768Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1947905Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1948080Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1948226Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1948326Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1948424Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1948499Z >       sim = run_tardis(
2025-01-14T13:17:21.1948583Z             config_verysimple,
2025-01-14T13:17:21.1948662Z             atom_data=atomic_data,
2025-01-14T13:17:21.1948758Z             show_convergence_plots=False,
2025-01-14T13:17:21.1948836Z             log_level="CRITICAl",
2025-01-14T13:17:21.1948910Z         )
2025-01-14T13:17:21.1948913Z 
2025-01-14T13:17:21.1949051Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1949172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1949263Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1949348Z     simulation.run_convergence()
2025-01-14T13:17:21.1949476Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1949614Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1949712Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1949869Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1949983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1949987Z 
2025-01-14T13:17:21.1950247Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1950456Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1950680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1950957Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1951118Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1951353Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1951357Z 
2025-01-14T13:17:21.1951452Z     def initialize_transport_state(
2025-01-14T13:17:21.1951522Z         self,
2025-01-14T13:17:21.1951806Z         simulation_state,
2025-01-14T13:17:21.1951928Z         opacity_state,
2025-01-14T13:17:21.1952022Z         macro_atom_state,
2025-01-14T13:17:21.1952093Z         plasma,
2025-01-14T13:17:21.1952169Z         no_of_packets,
2025-01-14T13:17:21.1952248Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1952324Z         iteration=0,
2025-01-14T13:17:21.1952389Z     ):
2025-01-14T13:17:21.1952519Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1952734Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1952813Z         else:
2025-01-14T13:17:21.1952897Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1952961Z     
2025-01-14T13:17:21.1953104Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1953204Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1953275Z         )
2025-01-14T13:17:21.1953339Z     
2025-01-14T13:17:21.1953472Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1953581Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1953738Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1953807Z         else:
2025-01-14T13:17:21.1953892Z             continuum_state = None
2025-01-14T13:17:21.1953991Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1954107Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1954204Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1954314Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1954414Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1954506Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1954609Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1954679Z         ).to_numba(
2025-01-14T13:17:21.1954761Z             macro_atom_state,
2025-01-14T13:17:21.1954848Z             self.line_interaction_type,
2025-01-14T13:17:21.1954922Z         )
2025-01-14T13:17:21.1955021Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1955298Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1955363Z         ]
2025-01-14T13:17:21.1955669Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1955673Z 
2025-01-14T13:17:21.1955822Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1956091Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-14T13:17:21.1956095Z 
2025-01-14T13:17:21.1956764Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1957113Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1957117Z 
2025-01-14T13:17:21.1957211Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1957347Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1957420Z         """
2025-01-14T13:17:21.1957560Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1957632Z     
2025-01-14T13:17:21.1957713Z         Parameters
2025-01-14T13:17:21.1957783Z         ----------
2025-01-14T13:17:21.1957934Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1958059Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1958327Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1958403Z             Atomic data.
2025-01-14T13:17:21.1958476Z     
2025-01-14T13:17:21.1958547Z         Returns
2025-01-14T13:17:21.1958622Z         -------
2025-01-14T13:17:21.1958726Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1958811Z             Simulation object.
2025-01-14T13:17:21.1958878Z         """
2025-01-14T13:17:21.1959033Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1959204Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1959323Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1959533Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1959668Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1959849Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1959987Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1960098Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1960193Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1960279Z >       sim = run_tardis(
2025-01-14T13:17:21.1960357Z             config_verysimple,
2025-01-14T13:17:21.1960444Z             atom_data=atomic_data,
2025-01-14T13:17:21.1960534Z             show_convergence_plots=False,
2025-01-14T13:17:21.1960620Z             log_level="CRITICAl",
2025-01-14T13:17:21.1960689Z         )
2025-01-14T13:17:21.1960693Z 
2025-01-14T13:17:21.1960836Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1960961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1961046Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1961137Z     simulation.run_convergence()
2025-01-14T13:17:21.1961253Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1961401Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1961494Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1961774Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1961883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1961887Z 
2025-01-14T13:17:21.1962160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1962358Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1962585Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1962868Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1963024Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1963162Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1963170Z 
2025-01-14T13:17:21.1963256Z     def initialize_transport_state(
2025-01-14T13:17:21.1963329Z         self,
2025-01-14T13:17:21.1963405Z         simulation_state,
2025-01-14T13:17:21.1963486Z         opacity_state,
2025-01-14T13:17:21.1963560Z         macro_atom_state,
2025-01-14T13:17:21.1963635Z         plasma,
2025-01-14T13:17:21.1963707Z         no_of_packets,
2025-01-14T13:17:21.1963795Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1963865Z         iteration=0,
2025-01-14T13:17:21.1963938Z     ):
2025-01-14T13:17:21.1964068Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1964162Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1964240Z         else:
2025-01-14T13:17:21.1964317Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1964387Z     
2025-01-14T13:17:21.1964518Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1964616Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1964807Z         )
2025-01-14T13:17:21.1964879Z     
2025-01-14T13:17:21.1965007Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1965122Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1965276Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1965348Z         else:
2025-01-14T13:17:21.1965428Z             continuum_state = None
2025-01-14T13:17:21.1965535Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1965641Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1965735Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1965956Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1966055Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1966150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1966240Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1966321Z         ).to_numba(
2025-01-14T13:17:21.1966397Z             macro_atom_state,
2025-01-14T13:17:21.1966491Z             self.line_interaction_type,
2025-01-14T13:17:21.1966557Z         )
2025-01-14T13:17:21.1966664Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1966935Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1967007Z         ]
2025-01-14T13:17:21.1967305Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1967316Z 
2025-01-14T13:17:21.1967459Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1967696Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-14T13:17:21.1967700Z 
2025-01-14T13:17:21.1968363Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1968721Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1968725Z 
2025-01-14T13:17:21.1968812Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1968957Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1969031Z         """
2025-01-14T13:17:21.1969174Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1969246Z     
2025-01-14T13:17:21.1969319Z         Parameters
2025-01-14T13:17:21.1969396Z         ----------
2025-01-14T13:17:21.1969541Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1969669Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1969783Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1969870Z             Atomic data.
2025-01-14T13:17:21.1969936Z     
2025-01-14T13:17:21.1970011Z         Returns
2025-01-14T13:17:21.1970082Z         -------
2025-01-14T13:17:21.1970192Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1970269Z             Simulation object.
2025-01-14T13:17:21.1970345Z         """
2025-01-14T13:17:21.1970494Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1970672Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1970793Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1970919Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1971066Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1971241Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1971382Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1971698Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1971807Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1971883Z >       sim = run_tardis(
2025-01-14T13:17:21.1971974Z             config_verysimple,
2025-01-14T13:17:21.1972095Z             atom_data=atomic_data,
2025-01-14T13:17:21.1972193Z             show_convergence_plots=False,
2025-01-14T13:17:21.1972273Z             log_level="CRITICAl",
2025-01-14T13:17:21.1972347Z         )
2025-01-14T13:17:21.1972351Z 
2025-01-14T13:17:21.1972497Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1972608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1972819Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1972909Z     simulation.run_convergence()
2025-01-14T13:17:21.1973027Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1973166Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1973270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1973421Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1973531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1973535Z 
2025-01-14T13:17:21.1973798Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1974002Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1974227Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1974503Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1974663Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1974801Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1974805Z 
2025-01-14T13:17:21.1974902Z     def initialize_transport_state(
2025-01-14T13:17:21.1974968Z         self,
2025-01-14T13:17:21.1975050Z         simulation_state,
2025-01-14T13:17:21.1975126Z         opacity_state,
2025-01-14T13:17:21.1975206Z         macro_atom_state,
2025-01-14T13:17:21.1975274Z         plasma,
2025-01-14T13:17:21.1975354Z         no_of_packets,
2025-01-14T13:17:21.1975440Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1975513Z         iteration=0,
2025-01-14T13:17:21.1975586Z     ):
2025-01-14T13:17:21.1975716Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1975818Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1975886Z         else:
2025-01-14T13:17:21.1975970Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1976040Z     
2025-01-14T13:17:21.1976178Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1976275Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1976347Z         )
2025-01-14T13:17:21.1976424Z     
2025-01-14T13:17:21.1976559Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1976669Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1976828Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1976896Z         else:
2025-01-14T13:17:21.1976983Z             continuum_state = None
2025-01-14T13:17:21.1977094Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1977204Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1977299Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1977401Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1977510Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1977603Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1977698Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1977771Z         ).to_numba(
2025-01-14T13:17:21.1978007Z             macro_atom_state,
2025-01-14T13:17:21.1978094Z             self.line_interaction_type,
2025-01-14T13:17:21.1978167Z         )
2025-01-14T13:17:21.1978269Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1978549Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1978615Z         ]
2025-01-14T13:17:21.1978924Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1978928Z 
2025-01-14T13:17:21.1979079Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1979436Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-14T13:17:21.1979440Z 
2025-01-14T13:17:21.1980114Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1980467Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1980470Z 
2025-01-14T13:17:21.1980564Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1980708Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1980775Z         """
2025-01-14T13:17:21.1980925Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1980991Z     
2025-01-14T13:17:21.1981070Z         Parameters
2025-01-14T13:17:21.1981141Z         ----------
2025-01-14T13:17:21.1981294Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1981417Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1981648Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1981725Z             Atomic data.
2025-01-14T13:17:21.1981804Z     
2025-01-14T13:17:21.1981871Z         Returns
2025-01-14T13:17:21.1981945Z         -------
2025-01-14T13:17:21.1982047Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1982130Z             Simulation object.
2025-01-14T13:17:21.1982195Z         """
2025-01-14T13:17:21.1982346Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1982519Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1982632Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1982758Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1982889Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1983071Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1983201Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1983303Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1983399Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1983477Z >       sim = run_tardis(
2025-01-14T13:17:21.1983554Z             config_verysimple,
2025-01-14T13:17:21.1983638Z             atom_data=atomic_data,
2025-01-14T13:17:21.1983726Z             show_convergence_plots=False,
2025-01-14T13:17:21.1983809Z             log_level="CRITICAl",
2025-01-14T13:17:21.1983878Z         )
2025-01-14T13:17:21.1983882Z 
2025-01-14T13:17:21.1984015Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1984129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1984211Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1984308Z     simulation.run_convergence()
2025-01-14T13:17:21.1984419Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1984563Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1984654Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1984936Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1985042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1985051Z 
2025-01-14T13:17:21.1985313Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1985517Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1985737Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1986012Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1986273Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1986424Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1986428Z 
2025-01-14T13:17:21.1986515Z     def initialize_transport_state(
2025-01-14T13:17:21.1986592Z         self,
2025-01-14T13:17:21.1986668Z         simulation_state,
2025-01-14T13:17:21.1986747Z         opacity_state,
2025-01-14T13:17:21.1986821Z         macro_atom_state,
2025-01-14T13:17:21.1986894Z         plasma,
2025-01-14T13:17:21.1986972Z         no_of_packets,
2025-01-14T13:17:21.1987052Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1987127Z         iteration=0,
2025-01-14T13:17:21.1987192Z     ):
2025-01-14T13:17:21.1987321Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1987415Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1987486Z         else:
2025-01-14T13:17:21.1987563Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1987632Z     
2025-01-14T13:17:21.1987767Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1987865Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1987930Z         )
2025-01-14T13:17:21.1988000Z     
2025-01-14T13:17:21.1988124Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1988243Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.1988392Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.1988464Z         else:
2025-01-14T13:17:21.1988549Z             continuum_state = None
2025-01-14T13:17:21.1988648Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.1988760Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.1988848Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.1988957Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.1989053Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.1989157Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.1989247Z             continuum_state=continuum_state,
2025-01-14T13:17:21.1989322Z         ).to_numba(
2025-01-14T13:17:21.1989398Z             macro_atom_state,
2025-01-14T13:17:21.1989490Z             self.line_interaction_type,
2025-01-14T13:17:21.1989560Z         )
2025-01-14T13:17:21.1989666Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.1989937Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.1990004Z         ]
2025-01-14T13:17:21.1990309Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.1990313Z 
2025-01-14T13:17:21.1990459Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.1990684Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-14T13:17:21.1990688Z 
2025-01-14T13:17:21.1991348Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.1992098Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.1992105Z 
2025-01-14T13:17:21.1992201Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.1992341Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.1992412Z         """
2025-01-14T13:17:21.1992553Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.1992623Z     
2025-01-14T13:17:21.1992695Z         Parameters
2025-01-14T13:17:21.1992770Z         ----------
2025-01-14T13:17:21.1992912Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.1993196Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.1993319Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.1993399Z             Atomic data.
2025-01-14T13:17:21.1993464Z     
2025-01-14T13:17:21.1993537Z         Returns
2025-01-14T13:17:21.1993612Z         -------
2025-01-14T13:17:21.1993718Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.1993800Z             Simulation object.
2025-01-14T13:17:21.1993866Z         """
2025-01-14T13:17:21.1994016Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.1994185Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.1994301Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.1994424Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.1994560Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.1994738Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.1994875Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.1994972Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.1995073Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.1995151Z >       sim = run_tardis(
2025-01-14T13:17:21.1995234Z             config_verysimple,
2025-01-14T13:17:21.1995318Z             atom_data=atomic_data,
2025-01-14T13:17:21.1995407Z             show_convergence_plots=False,
2025-01-14T13:17:21.1995491Z             log_level="CRITICAl",
2025-01-14T13:17:21.1995557Z         )
2025-01-14T13:17:21.1995561Z 
2025-01-14T13:17:21.1995701Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.1995809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1995896Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.1995979Z     simulation.run_convergence()
2025-01-14T13:17:21.1996103Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.1996240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.1996336Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.1996487Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.1996602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.1996606Z 
2025-01-14T13:17:21.1996875Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.1997076Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.1997301Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.1997571Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.1997732Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.1997868Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.1997872Z 
2025-01-14T13:17:21.1997964Z     def initialize_transport_state(
2025-01-14T13:17:21.1998030Z         self,
2025-01-14T13:17:21.1998112Z         simulation_state,
2025-01-14T13:17:21.1998306Z         opacity_state,
2025-01-14T13:17:21.1998380Z         macro_atom_state,
2025-01-14T13:17:21.1998453Z         plasma,
2025-01-14T13:17:21.1998524Z         no_of_packets,
2025-01-14T13:17:21.1998610Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.1998681Z         iteration=0,
2025-01-14T13:17:21.1998750Z     ):
2025-01-14T13:17:21.1998873Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.1998975Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.1999043Z         else:
2025-01-14T13:17:21.1999123Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.1999188Z     
2025-01-14T13:17:21.1999324Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.1999500Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.1999574Z         )
2025-01-14T13:17:21.1999639Z     
2025-01-14T13:17:21.1999770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.1999883Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2000040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2000111Z         else:
2025-01-14T13:17:21.2000189Z             continuum_state = None
2025-01-14T13:17:21.2000291Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2000398Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2000491Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2000593Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2000696Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2000791Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2000888Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2000958Z         ).to_numba(
2025-01-14T13:17:21.2001039Z             macro_atom_state,
2025-01-14T13:17:21.2001125Z             self.line_interaction_type,
2025-01-14T13:17:21.2001197Z         )
2025-01-14T13:17:21.2001310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2001686Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2001760Z         ]
2025-01-14T13:17:21.2002059Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2002063Z 
2025-01-14T13:17:21.2002214Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2002429Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-14T13:17:21.2002433Z 
2025-01-14T13:17:21.2003108Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2003456Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2003463Z 
2025-01-14T13:17:21.2003549Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2003691Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2003757Z         """
2025-01-14T13:17:21.2003904Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2003971Z     
2025-01-14T13:17:21.2004047Z         Parameters
2025-01-14T13:17:21.2004117Z         ----------
2025-01-14T13:17:21.2004261Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2004380Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2004499Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2004571Z             Atomic data.
2025-01-14T13:17:21.2004641Z     
2025-01-14T13:17:21.2004713Z         Returns
2025-01-14T13:17:21.2004780Z         -------
2025-01-14T13:17:21.2005024Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2005102Z             Simulation object.
2025-01-14T13:17:21.2005171Z         """
2025-01-14T13:17:21.2005318Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2005493Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2005604Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2005733Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2005865Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2006041Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2006310Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2006417Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2006518Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2006592Z >       sim = run_tardis(
2025-01-14T13:17:21.2006684Z             config_verysimple,
2025-01-14T13:17:21.2006761Z             atom_data=atomic_data,
2025-01-14T13:17:21.2006854Z             show_convergence_plots=False,
2025-01-14T13:17:21.2006931Z             log_level="CRITICAl",
2025-01-14T13:17:21.2007002Z         )
2025-01-14T13:17:21.2007006Z 
2025-01-14T13:17:21.2007140Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2007253Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2007335Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2007424Z     simulation.run_convergence()
2025-01-14T13:17:21.2007534Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2007680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2007772Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2007926Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2008037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2008048Z 
2025-01-14T13:17:21.2008307Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2008507Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2008725Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2009001Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2009154Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2009292Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2009299Z 
2025-01-14T13:17:21.2009389Z     def initialize_transport_state(
2025-01-14T13:17:21.2009456Z         self,
2025-01-14T13:17:21.2009536Z         simulation_state,
2025-01-14T13:17:21.2009609Z         opacity_state,
2025-01-14T13:17:21.2009693Z         macro_atom_state,
2025-01-14T13:17:21.2009761Z         plasma,
2025-01-14T13:17:21.2009837Z         no_of_packets,
2025-01-14T13:17:21.2009916Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2009993Z         iteration=0,
2025-01-14T13:17:21.2010058Z     ):
2025-01-14T13:17:21.2010183Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2010275Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2010346Z         else:
2025-01-14T13:17:21.2010423Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2010494Z     
2025-01-14T13:17:21.2010623Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2010721Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2010790Z         )
2025-01-14T13:17:21.2010861Z     
2025-01-14T13:17:21.2010990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2011103Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2011351Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2011419Z         else:
2025-01-14T13:17:21.2011504Z             continuum_state = None
2025-01-14T13:17:21.2011702Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2011816Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2011905Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2012012Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2012108Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2012203Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2012290Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2012369Z         ).to_numba(
2025-01-14T13:17:21.2012561Z             macro_atom_state,
2025-01-14T13:17:21.2012658Z             self.line_interaction_type,
2025-01-14T13:17:21.2012730Z         )
2025-01-14T13:17:21.2012829Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2013110Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2013176Z         ]
2025-01-14T13:17:21.2013479Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2013483Z 
2025-01-14T13:17:21.2013625Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2013845Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-14T13:17:21.2013849Z 
2025-01-14T13:17:21.2014518Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2014863Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2014871Z 
2025-01-14T13:17:21.2014961Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2015098Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2015169Z         """
2025-01-14T13:17:21.2015311Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2015382Z     
2025-01-14T13:17:21.2015453Z         Parameters
2025-01-14T13:17:21.2015527Z         ----------
2025-01-14T13:17:21.2015668Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2015796Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2015913Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2015989Z             Atomic data.
2025-01-14T13:17:21.2016059Z     
2025-01-14T13:17:21.2016127Z         Returns
2025-01-14T13:17:21.2016200Z         -------
2025-01-14T13:17:21.2016302Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2016387Z             Simulation object.
2025-01-14T13:17:21.2016452Z         """
2025-01-14T13:17:21.2016604Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2016771Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2016887Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2017011Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2017146Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2017320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2017453Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2017561Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2017652Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2017729Z >       sim = run_tardis(
2025-01-14T13:17:21.2017806Z             config_verysimple,
2025-01-14T13:17:21.2018008Z             atom_data=atomic_data,
2025-01-14T13:17:21.2018098Z             show_convergence_plots=False,
2025-01-14T13:17:21.2018179Z             log_level="CRITICAl",
2025-01-14T13:17:21.2018245Z         )
2025-01-14T13:17:21.2018248Z 
2025-01-14T13:17:21.2018385Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2018492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2018579Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2018662Z     simulation.run_convergence()
2025-01-14T13:17:21.2018776Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2018917Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2019092Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2019249Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2019353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2019362Z 
2025-01-14T13:17:21.2019627Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2019823Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2020047Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2020317Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2020478Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2020614Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2020618Z 
2025-01-14T13:17:21.2020706Z     def initialize_transport_state(
2025-01-14T13:17:21.2020783Z         self,
2025-01-14T13:17:21.2020862Z         simulation_state,
2025-01-14T13:17:21.2020940Z         opacity_state,
2025-01-14T13:17:21.2021013Z         macro_atom_state,
2025-01-14T13:17:21.2021086Z         plasma,
2025-01-14T13:17:21.2021163Z         no_of_packets,
2025-01-14T13:17:21.2021246Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2021317Z         iteration=0,
2025-01-14T13:17:21.2021388Z     ):
2025-01-14T13:17:21.2021509Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2021713Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2021781Z         else:
2025-01-14T13:17:21.2021864Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2021928Z     
2025-01-14T13:17:21.2022067Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2022164Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2022229Z         )
2025-01-14T13:17:21.2022299Z     
2025-01-14T13:17:21.2022433Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2022551Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2022700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2022778Z         else:
2025-01-14T13:17:21.2022857Z             continuum_state = None
2025-01-14T13:17:21.2027820Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2027969Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2028077Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2028192Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2028300Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2028397Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2028498Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2028570Z         ).to_numba(
2025-01-14T13:17:21.2028656Z             macro_atom_state,
2025-01-14T13:17:21.2028762Z             self.line_interaction_type,
2025-01-14T13:17:21.2028831Z         )
2025-01-14T13:17:21.2028944Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2029230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2029471Z         ]
2025-01-14T13:17:21.2029788Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2029793Z 
2025-01-14T13:17:21.2029956Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2030184Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-14T13:17:21.2030188Z 
2025-01-14T13:17:21.2030977Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2031335Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2031339Z 
2025-01-14T13:17:21.2031437Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2031824Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2031940Z         """
2025-01-14T13:17:21.2032125Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2032194Z     
2025-01-14T13:17:21.2032274Z         Parameters
2025-01-14T13:17:21.2032347Z         ----------
2025-01-14T13:17:21.2032495Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2032620Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2032743Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2032824Z             Atomic data.
2025-01-14T13:17:21.2032893Z     
2025-01-14T13:17:21.2032975Z         Returns
2025-01-14T13:17:21.2033046Z         -------
2025-01-14T13:17:21.2033158Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2033238Z             Simulation object.
2025-01-14T13:17:21.2033310Z         """
2025-01-14T13:17:21.2033466Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2033649Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2033765Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2033896Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2034030Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2034211Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2034348Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2034451Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2034557Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2034633Z >       sim = run_tardis(
2025-01-14T13:17:21.2034719Z             config_verysimple,
2025-01-14T13:17:21.2034802Z             atom_data=atomic_data,
2025-01-14T13:17:21.2034899Z             show_convergence_plots=False,
2025-01-14T13:17:21.2034983Z             log_level="CRITICAl",
2025-01-14T13:17:21.2035056Z         )
2025-01-14T13:17:21.2035060Z 
2025-01-14T13:17:21.2035199Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2035319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2035404Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2035496Z     simulation.run_convergence()
2025-01-14T13:17:21.2035612Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2035758Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2035856Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2036013Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2036127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2036131Z 
2025-01-14T13:17:21.2036395Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2036823Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2037043Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2037347Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2037518Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2037661Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2037665Z 
2025-01-14T13:17:21.2037757Z     def initialize_transport_state(
2025-01-14T13:17:21.2037826Z         self,
2025-01-14T13:17:21.2038019Z         simulation_state,
2025-01-14T13:17:21.2038101Z         opacity_state,
2025-01-14T13:17:21.2038184Z         macro_atom_state,
2025-01-14T13:17:21.2038255Z         plasma,
2025-01-14T13:17:21.2038333Z         no_of_packets,
2025-01-14T13:17:21.2038420Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2038498Z         iteration=0,
2025-01-14T13:17:21.2038565Z     ):
2025-01-14T13:17:21.2038698Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2038792Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2038865Z         else:
2025-01-14T13:17:21.2038944Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2039016Z     
2025-01-14T13:17:21.2039151Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2039254Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2039329Z         )
2025-01-14T13:17:21.2039395Z     
2025-01-14T13:17:21.2039529Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2039648Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2039808Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2039876Z         else:
2025-01-14T13:17:21.2039962Z             continuum_state = None
2025-01-14T13:17:21.2040066Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2040179Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2040270Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2040382Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2040480Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2040578Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2040675Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2040753Z         ).to_numba(
2025-01-14T13:17:21.2040836Z             macro_atom_state,
2025-01-14T13:17:21.2040922Z             self.line_interaction_type,
2025-01-14T13:17:21.2040999Z         )
2025-01-14T13:17:21.2041105Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2041381Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2041451Z         ]
2025-01-14T13:17:21.2041875Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2041880Z 
2025-01-14T13:17:21.2042027Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2042257Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-14T13:17:21.2042261Z 
2025-01-14T13:17:21.2042926Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2043277Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2043281Z 
2025-01-14T13:17:21.2043374Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2043513Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2043711Z         """
2025-01-14T13:17:21.2043856Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2043926Z     
2025-01-14T13:17:21.2044001Z         Parameters
2025-01-14T13:17:21.2044079Z         ----------
2025-01-14T13:17:21.2044218Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2044345Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2044463Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2044538Z             Atomic data.
2025-01-14T13:17:21.2044607Z     
2025-01-14T13:17:21.2044675Z         Returns
2025-01-14T13:17:21.2044750Z         -------
2025-01-14T13:17:21.2044962Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2045050Z             Simulation object.
2025-01-14T13:17:21.2045116Z         """
2025-01-14T13:17:21.2045271Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2045448Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2045566Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2045688Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2045823Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2046001Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2046133Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2046239Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2046336Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2046419Z >       sim = run_tardis(
2025-01-14T13:17:21.2046499Z             config_verysimple,
2025-01-14T13:17:21.2046583Z             atom_data=atomic_data,
2025-01-14T13:17:21.2046674Z             show_convergence_plots=False,
2025-01-14T13:17:21.2046759Z             log_level="CRITICAl",
2025-01-14T13:17:21.2046831Z         )
2025-01-14T13:17:21.2046835Z 
2025-01-14T13:17:21.2046985Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2047095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2047187Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2047273Z     simulation.run_convergence()
2025-01-14T13:17:21.2047394Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2047541Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2047634Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2047792Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2047905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2047908Z 
2025-01-14T13:17:21.2048176Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2048381Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2048604Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2048875Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2049040Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2049181Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2049184Z 
2025-01-14T13:17:21.2049271Z     def initialize_transport_state(
2025-01-14T13:17:21.2049344Z         self,
2025-01-14T13:17:21.2049422Z         simulation_state,
2025-01-14T13:17:21.2049505Z         opacity_state,
2025-01-14T13:17:21.2049582Z         macro_atom_state,
2025-01-14T13:17:21.2049657Z         plasma,
2025-01-14T13:17:21.2049730Z         no_of_packets,
2025-01-14T13:17:21.2049815Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2049887Z         iteration=0,
2025-01-14T13:17:21.2050055Z     ):
2025-01-14T13:17:21.2050182Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2050283Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2050351Z         else:
2025-01-14T13:17:21.2050435Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2050505Z     
2025-01-14T13:17:21.2050637Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2050738Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2050804Z         )
2025-01-14T13:17:21.2050874Z     
2025-01-14T13:17:21.2051005Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2051125Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2051367Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2051441Z         else:
2025-01-14T13:17:21.2051523Z             continuum_state = None
2025-01-14T13:17:21.2051734Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2051849Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2051946Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2052052Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2052157Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2052253Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2052344Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2052422Z         ).to_numba(
2025-01-14T13:17:21.2052500Z             macro_atom_state,
2025-01-14T13:17:21.2052593Z             self.line_interaction_type,
2025-01-14T13:17:21.2052660Z         )
2025-01-14T13:17:21.2052770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2053045Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2053115Z         ]
2025-01-14T13:17:21.2053419Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2053429Z 
2025-01-14T13:17:21.2053584Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2053809Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-14T13:17:21.2053819Z 
2025-01-14T13:17:21.2054483Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2054838Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2054842Z 
2025-01-14T13:17:21.2054933Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2055076Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2055147Z         """
2025-01-14T13:17:21.2055297Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2055362Z     
2025-01-14T13:17:21.2055439Z         Parameters
2025-01-14T13:17:21.2055515Z         ----------
2025-01-14T13:17:21.2055657Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2055785Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2055903Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2055981Z             Atomic data.
2025-01-14T13:17:21.2056047Z     
2025-01-14T13:17:21.2056119Z         Returns
2025-01-14T13:17:21.2056189Z         -------
2025-01-14T13:17:21.2056301Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2056385Z             Simulation object.
2025-01-14T13:17:21.2056457Z         """
2025-01-14T13:17:21.2056605Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2056784Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2057036Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2057164Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2057304Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2057477Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2057614Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2057713Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2057811Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2057885Z >       sim = run_tardis(
2025-01-14T13:17:21.2057968Z             config_verysimple,
2025-01-14T13:17:21.2058165Z             atom_data=atomic_data,
2025-01-14T13:17:21.2058261Z             show_convergence_plots=False,
2025-01-14T13:17:21.2058341Z             log_level="CRITICAl",
2025-01-14T13:17:21.2058416Z         )
2025-01-14T13:17:21.2058425Z 
2025-01-14T13:17:21.2058563Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2058680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2058768Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2058853Z     simulation.run_convergence()
2025-01-14T13:17:21.2058972Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2059109Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2059207Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2059356Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2059466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2059474Z 
2025-01-14T13:17:21.2059738Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2059943Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2060167Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2060444Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2060609Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2060743Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2060746Z 
2025-01-14T13:17:21.2060838Z     def initialize_transport_state(
2025-01-14T13:17:21.2060906Z         self,
2025-01-14T13:17:21.2060992Z         simulation_state,
2025-01-14T13:17:21.2061067Z         opacity_state,
2025-01-14T13:17:21.2061145Z         macro_atom_state,
2025-01-14T13:17:21.2061218Z         plasma,
2025-01-14T13:17:21.2061297Z         no_of_packets,
2025-01-14T13:17:21.2061377Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2061454Z         iteration=0,
2025-01-14T13:17:21.2061520Z     ):
2025-01-14T13:17:21.2061750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2061846Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2061919Z         else:
2025-01-14T13:17:21.2062000Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2062065Z     
2025-01-14T13:17:21.2062203Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2062298Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2062372Z         )
2025-01-14T13:17:21.2062438Z     
2025-01-14T13:17:21.2062571Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2062680Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2062841Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2062909Z         else:
2025-01-14T13:17:21.2062995Z             continuum_state = None
2025-01-14T13:17:21.2063095Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2063205Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2063444Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2063553Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2063656Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2063747Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2063842Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2063914Z         ).to_numba(
2025-01-14T13:17:21.2063996Z             macro_atom_state,
2025-01-14T13:17:21.2064082Z             self.line_interaction_type,
2025-01-14T13:17:21.2064153Z         )
2025-01-14T13:17:21.2064253Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2064639Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2064708Z         ]
2025-01-14T13:17:21.2065015Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2065026Z 
2025-01-14T13:17:21.2065177Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2065396Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-14T13:17:21.2065400Z 
2025-01-14T13:17:21.2066079Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2066430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2066434Z 
2025-01-14T13:17:21.2066533Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2066675Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2066747Z         """
2025-01-14T13:17:21.2066892Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2066970Z     
2025-01-14T13:17:21.2067048Z         Parameters
2025-01-14T13:17:21.2067118Z         ----------
2025-01-14T13:17:21.2067267Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2067389Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2067509Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2067583Z             Atomic data.
2025-01-14T13:17:21.2067653Z     
2025-01-14T13:17:21.2067723Z         Returns
2025-01-14T13:17:21.2067797Z         -------
2025-01-14T13:17:21.2067900Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2067983Z             Simulation object.
2025-01-14T13:17:21.2068053Z         """
2025-01-14T13:17:21.2068206Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2068377Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2068500Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2068630Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2068763Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2068941Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2069074Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2069177Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2069270Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2069350Z >       sim = run_tardis(
2025-01-14T13:17:21.2069429Z             config_verysimple,
2025-01-14T13:17:21.2069515Z             atom_data=atomic_data,
2025-01-14T13:17:21.2069611Z             show_convergence_plots=False,
2025-01-14T13:17:21.2069697Z             log_level="CRITICAl",
2025-01-14T13:17:21.2069763Z         )
2025-01-14T13:17:21.2069767Z 
2025-01-14T13:17:21.2069912Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2070117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2070200Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2070290Z     simulation.run_convergence()
2025-01-14T13:17:21.2070405Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2070551Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2070645Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2070802Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2070908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2070912Z 
2025-01-14T13:17:21.2071265Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2071487Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2071973Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2072294Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2072456Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2072599Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2072603Z 
2025-01-14T13:17:21.2072690Z     def initialize_transport_state(
2025-01-14T13:17:21.2072763Z         self,
2025-01-14T13:17:21.2072840Z         simulation_state,
2025-01-14T13:17:21.2072920Z         opacity_state,
2025-01-14T13:17:21.2072994Z         macro_atom_state,
2025-01-14T13:17:21.2073072Z         plasma,
2025-01-14T13:17:21.2073145Z         no_of_packets,
2025-01-14T13:17:21.2073236Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2073313Z         iteration=0,
2025-01-14T13:17:21.2073379Z     ):
2025-01-14T13:17:21.2073509Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2073609Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2073684Z         else:
2025-01-14T13:17:21.2073761Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2073832Z     
2025-01-14T13:17:21.2073965Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2074066Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2074135Z         )
2025-01-14T13:17:21.2074207Z     
2025-01-14T13:17:21.2074332Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2074446Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2074597Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2074672Z         else:
2025-01-14T13:17:21.2074757Z             continuum_state = None
2025-01-14T13:17:21.2074862Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2074972Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2075069Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2075181Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2075278Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2075374Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2075463Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2075539Z         ).to_numba(
2025-01-14T13:17:21.2075617Z             macro_atom_state,
2025-01-14T13:17:21.2075708Z             self.line_interaction_type,
2025-01-14T13:17:21.2075780Z         )
2025-01-14T13:17:21.2075886Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2076156Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2076229Z         ]
2025-01-14T13:17:21.2076528Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2076537Z 
2025-01-14T13:17:21.2076828Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2077057Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-14T13:17:21.2077061Z 
2025-01-14T13:17:21.2077719Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2078071Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2078075Z 
2025-01-14T13:17:21.2078162Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2078411Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2078487Z         """
2025-01-14T13:17:21.2078631Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2078703Z     
2025-01-14T13:17:21.2078780Z         Parameters
2025-01-14T13:17:21.2078857Z         ----------
2025-01-14T13:17:21.2078998Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2079125Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2079238Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2079319Z             Atomic data.
2025-01-14T13:17:21.2079385Z     
2025-01-14T13:17:21.2079461Z         Returns
2025-01-14T13:17:21.2079532Z         -------
2025-01-14T13:17:21.2079640Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2079717Z             Simulation object.
2025-01-14T13:17:21.2079789Z         """
2025-01-14T13:17:21.2079941Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2080117Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2080237Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2080364Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2080501Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2080670Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2080807Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2080907Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2081003Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2081076Z >       sim = run_tardis(
2025-01-14T13:17:21.2081159Z             config_verysimple,
2025-01-14T13:17:21.2081239Z             atom_data=atomic_data,
2025-01-14T13:17:21.2081332Z             show_convergence_plots=False,
2025-01-14T13:17:21.2081415Z             log_level="CRITICAl",
2025-01-14T13:17:21.2081487Z         )
2025-01-14T13:17:21.2081491Z 
2025-01-14T13:17:21.2081999Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2082123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2082220Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2082305Z     simulation.run_convergence()
2025-01-14T13:17:21.2082423Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2082565Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2082665Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2082816Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2082927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2082931Z 
2025-01-14T13:17:21.2083196Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2083400Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2083627Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2084090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2084260Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2084394Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2084398Z 
2025-01-14T13:17:21.2084491Z     def initialize_transport_state(
2025-01-14T13:17:21.2084561Z         self,
2025-01-14T13:17:21.2084644Z         simulation_state,
2025-01-14T13:17:21.2084721Z         opacity_state,
2025-01-14T13:17:21.2084803Z         macro_atom_state,
2025-01-14T13:17:21.2084873Z         plasma,
2025-01-14T13:17:21.2084953Z         no_of_packets,
2025-01-14T13:17:21.2085040Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2085284Z         iteration=0,
2025-01-14T13:17:21.2085373Z     ):
2025-01-14T13:17:21.2085504Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2085602Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2085679Z         else:
2025-01-14T13:17:21.2085763Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2085828Z     
2025-01-14T13:17:21.2085963Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2086058Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2086132Z         )
2025-01-14T13:17:21.2086198Z     
2025-01-14T13:17:21.2086331Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2086443Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2086602Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2086670Z         else:
2025-01-14T13:17:21.2086757Z             continuum_state = None
2025-01-14T13:17:21.2086864Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2086973Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2087073Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2087181Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2087301Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2087392Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2087488Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2087559Z         ).to_numba(
2025-01-14T13:17:21.2087642Z             macro_atom_state,
2025-01-14T13:17:21.2087728Z             self.line_interaction_type,
2025-01-14T13:17:21.2087799Z         )
2025-01-14T13:17:21.2087899Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2088173Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2088245Z         ]
2025-01-14T13:17:21.2088548Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2088552Z 
2025-01-14T13:17:21.2088706Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2088936Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-14T13:17:21.2088940Z 
2025-01-14T13:17:21.2089612Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2089960Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2089970Z 
2025-01-14T13:17:21.2090057Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2090201Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2090271Z         """
2025-01-14T13:17:21.2090418Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2090484Z     
2025-01-14T13:17:21.2090559Z         Parameters
2025-01-14T13:17:21.2090631Z         ----------
2025-01-14T13:17:21.2090867Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2090989Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2091108Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2091183Z             Atomic data.
2025-01-14T13:17:21.2091254Z     
2025-01-14T13:17:21.2091322Z         Returns
2025-01-14T13:17:21.2091400Z         -------
2025-01-14T13:17:21.2091503Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2091688Z             Simulation object.
2025-01-14T13:17:21.2091761Z         """
2025-01-14T13:17:21.2091908Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2092193Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2092309Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2092437Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2092573Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2092751Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2092884Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2092987Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2093080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2093161Z >       sim = run_tardis(
2025-01-14T13:17:21.2093240Z             config_verysimple,
2025-01-14T13:17:21.2093325Z             atom_data=atomic_data,
2025-01-14T13:17:21.2093417Z             show_convergence_plots=False,
2025-01-14T13:17:21.2093495Z             log_level="CRITICAl",
2025-01-14T13:17:21.2093567Z         )
2025-01-14T13:17:21.2093576Z 
2025-01-14T13:17:21.2093712Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2093826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2093918Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2094012Z     simulation.run_convergence()
2025-01-14T13:17:21.2094126Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2094273Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2094368Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2094526Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2094637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2094646Z 
2025-01-14T13:17:21.2094917Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2095129Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2095349Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2095627Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2095788Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2095932Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2095936Z 
2025-01-14T13:17:21.2096024Z     def initialize_transport_state(
2025-01-14T13:17:21.2096099Z         self,
2025-01-14T13:17:21.2096177Z         simulation_state,
2025-01-14T13:17:21.2096257Z         opacity_state,
2025-01-14T13:17:21.2096339Z         macro_atom_state,
2025-01-14T13:17:21.2096409Z         plasma,
2025-01-14T13:17:21.2096486Z         no_of_packets,
2025-01-14T13:17:21.2096568Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2096645Z         iteration=0,
2025-01-14T13:17:21.2096712Z     ):
2025-01-14T13:17:21.2096847Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2096942Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2097016Z         else:
2025-01-14T13:17:21.2097096Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2097288Z     
2025-01-14T13:17:21.2097427Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2097531Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2097599Z         )
2025-01-14T13:17:21.2097671Z     
2025-01-14T13:17:21.2097799Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2097921Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2098081Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2098149Z         else:
2025-01-14T13:17:21.2098238Z             continuum_state = None
2025-01-14T13:17:21.2098337Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2098532Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2098626Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2098740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2098840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2098945Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2099035Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2099111Z         ).to_numba(
2025-01-14T13:17:21.2099190Z             macro_atom_state,
2025-01-14T13:17:21.2099283Z             self.line_interaction_type,
2025-01-14T13:17:21.2099350Z         )
2025-01-14T13:17:21.2099454Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2099728Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2099795Z         ]
2025-01-14T13:17:21.2100105Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2100110Z 
2025-01-14T13:17:21.2100259Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2100489Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-14T13:17:21.2100498Z 
2025-01-14T13:17:21.2101161Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2101516Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2101520Z 
2025-01-14T13:17:21.2101721Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2101861Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2101935Z         """
2025-01-14T13:17:21.2102085Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2102158Z     
2025-01-14T13:17:21.2102230Z         Parameters
2025-01-14T13:17:21.2102306Z         ----------
2025-01-14T13:17:21.2102447Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2102582Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2102698Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2102777Z             Atomic data.
2025-01-14T13:17:21.2102843Z     
2025-01-14T13:17:21.2102917Z         Returns
2025-01-14T13:17:21.2102993Z         -------
2025-01-14T13:17:21.2103097Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2103181Z             Simulation object.
2025-01-14T13:17:21.2103248Z         """
2025-01-14T13:17:21.2103401Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2103571Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2103694Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2103817Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2103959Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2104273Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2104410Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2104510Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2104610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2104690Z >       sim = run_tardis(
2025-01-14T13:17:21.2104768Z             config_verysimple,
2025-01-14T13:17:21.2104854Z             atom_data=atomic_data,
2025-01-14T13:17:21.2104944Z             show_convergence_plots=False,
2025-01-14T13:17:21.2105030Z             log_level="CRITICAl",
2025-01-14T13:17:21.2105095Z         )
2025-01-14T13:17:21.2105100Z 
2025-01-14T13:17:21.2105349Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2105462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2105552Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2105647Z     simulation.run_convergence()
2025-01-14T13:17:21.2105784Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2105921Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2106022Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2106173Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2106284Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2106288Z 
2025-01-14T13:17:21.2106559Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2106767Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2106997Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2107269Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2107430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2107571Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2107575Z 
2025-01-14T13:17:21.2107670Z     def initialize_transport_state(
2025-01-14T13:17:21.2107745Z         self,
2025-01-14T13:17:21.2107827Z         simulation_state,
2025-01-14T13:17:21.2107907Z         opacity_state,
2025-01-14T13:17:21.2107982Z         macro_atom_state,
2025-01-14T13:17:21.2108057Z         plasma,
2025-01-14T13:17:21.2108129Z         no_of_packets,
2025-01-14T13:17:21.2108215Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2108291Z         iteration=0,
2025-01-14T13:17:21.2108364Z     ):
2025-01-14T13:17:21.2108493Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2108596Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2108664Z         else:
2025-01-14T13:17:21.2108747Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2108812Z     
2025-01-14T13:17:21.2108951Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2109051Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2109124Z         )
2025-01-14T13:17:21.2109190Z     
2025-01-14T13:17:21.2109322Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2109439Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2109590Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2109662Z         else:
2025-01-14T13:17:21.2109744Z             continuum_state = None
2025-01-14T13:17:21.2109848Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2109956Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2110055Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2110159Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2110261Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2110477Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2110571Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2110642Z         ).to_numba(
2025-01-14T13:17:21.2110725Z             macro_atom_state,
2025-01-14T13:17:21.2110812Z             self.line_interaction_type,
2025-01-14T13:17:21.2110884Z         )
2025-01-14T13:17:21.2110991Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2111256Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2111328Z         ]
2025-01-14T13:17:21.2111866Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2111873Z 
2025-01-14T13:17:21.2112243Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2112481Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-14T13:17:21.2112485Z 
2025-01-14T13:17:21.2113168Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2113526Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2113530Z 
2025-01-14T13:17:21.2113619Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2113763Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2113830Z         """
2025-01-14T13:17:21.2113981Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2114052Z     
2025-01-14T13:17:21.2114132Z         Parameters
2025-01-14T13:17:21.2114208Z         ----------
2025-01-14T13:17:21.2114354Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2114478Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2114601Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2114679Z             Atomic data.
2025-01-14T13:17:21.2114746Z     
2025-01-14T13:17:21.2114820Z         Returns
2025-01-14T13:17:21.2114907Z         -------
2025-01-14T13:17:21.2115020Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2115103Z             Simulation object.
2025-01-14T13:17:21.2115177Z         """
2025-01-14T13:17:21.2115326Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2115503Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2115616Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2115751Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2115884Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2116063Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2116202Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2116311Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2116411Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2116487Z >       sim = run_tardis(
2025-01-14T13:17:21.2116574Z             config_verysimple,
2025-01-14T13:17:21.2116654Z             atom_data=atomic_data,
2025-01-14T13:17:21.2116748Z             show_convergence_plots=False,
2025-01-14T13:17:21.2116827Z             log_level="CRITICAl",
2025-01-14T13:17:21.2116903Z         )
2025-01-14T13:17:21.2116907Z 
2025-01-14T13:17:21.2117044Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2117166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2117251Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2117343Z     simulation.run_convergence()
2025-01-14T13:17:21.2117456Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2117770Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2117869Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2118018Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2118129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2118133Z 
2025-01-14T13:17:21.2118397Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2118603Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2118824Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2119178Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2119338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2119484Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2119489Z 
2025-01-14T13:17:21.2119584Z     def initialize_transport_state(
2025-01-14T13:17:21.2119652Z         self,
2025-01-14T13:17:21.2119737Z         simulation_state,
2025-01-14T13:17:21.2119811Z         opacity_state,
2025-01-14T13:17:21.2119892Z         macro_atom_state,
2025-01-14T13:17:21.2119963Z         plasma,
2025-01-14T13:17:21.2120041Z         no_of_packets,
2025-01-14T13:17:21.2120121Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2120199Z         iteration=0,
2025-01-14T13:17:21.2120265Z     ):
2025-01-14T13:17:21.2120395Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2120494Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2120569Z         else:
2025-01-14T13:17:21.2120646Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2120719Z     
2025-01-14T13:17:21.2120851Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2120960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2121035Z         )
2025-01-14T13:17:21.2121103Z     
2025-01-14T13:17:21.2121238Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2121351Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2121509Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2121712Z         else:
2025-01-14T13:17:21.2121802Z             continuum_state = None
2025-01-14T13:17:21.2121902Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2122017Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2122109Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2122224Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2122323Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2122422Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2122518Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2122596Z         ).to_numba(
2025-01-14T13:17:21.2122681Z             macro_atom_state,
2025-01-14T13:17:21.2122769Z             self.line_interaction_type,
2025-01-14T13:17:21.2122843Z         )
2025-01-14T13:17:21.2122949Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2123229Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2123299Z         ]
2025-01-14T13:17:21.2123608Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2123611Z 
2025-01-14T13:17:21.2123762Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2123994Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-14T13:17:21.2123998Z 
2025-01-14T13:17:21.2124677Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2125151Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2125156Z 
2025-01-14T13:17:21.2125256Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2125398Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2125470Z         """
2025-01-14T13:17:21.2125614Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2125689Z     
2025-01-14T13:17:21.2125762Z         Parameters
2025-01-14T13:17:21.2125945Z         ----------
2025-01-14T13:17:21.2126092Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2126222Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2126350Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2126426Z             Atomic data.
2025-01-14T13:17:21.2126502Z     
2025-01-14T13:17:21.2126572Z         Returns
2025-01-14T13:17:21.2126648Z         -------
2025-01-14T13:17:21.2126756Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2126841Z             Simulation object.
2025-01-14T13:17:21.2126910Z         """
2025-01-14T13:17:21.2127065Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2127235Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2127356Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2127485Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2127626Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2127799Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2127941Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2128058Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2128153Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2128233Z >       sim = run_tardis(
2025-01-14T13:17:21.2128317Z             config_verysimple,
2025-01-14T13:17:21.2128403Z             atom_data=atomic_data,
2025-01-14T13:17:21.2128494Z             show_convergence_plots=False,
2025-01-14T13:17:21.2128580Z             log_level="CRITICAl",
2025-01-14T13:17:21.2128647Z         )
2025-01-14T13:17:21.2128651Z 
2025-01-14T13:17:21.2128794Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2128904Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2129000Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2129090Z     simulation.run_convergence()
2025-01-14T13:17:21.2129212Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2129358Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2129460Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2129618Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2129723Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2129727Z 
2025-01-14T13:17:21.2129996Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2130197Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2130423Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2130699Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2130862Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2131002Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2131098Z 
2025-01-14T13:17:21.2131188Z     def initialize_transport_state(
2025-01-14T13:17:21.2131265Z         self,
2025-01-14T13:17:21.2131343Z         simulation_state,
2025-01-14T13:17:21.2131426Z         opacity_state,
2025-01-14T13:17:21.2131501Z         macro_atom_state,
2025-01-14T13:17:21.2131684Z         plasma,
2025-01-14T13:17:21.2131760Z         no_of_packets,
2025-01-14T13:17:21.2131849Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2131921Z         iteration=0,
2025-01-14T13:17:21.2131993Z     ):
2025-01-14T13:17:21.2132119Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2132223Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2132293Z         else:
2025-01-14T13:17:21.2132497Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2132570Z     
2025-01-14T13:17:21.2132709Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2132810Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2132884Z         )
2025-01-14T13:17:21.2132956Z     
2025-01-14T13:17:21.2133086Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2133204Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2133358Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2133434Z         else:
2025-01-14T13:17:21.2133515Z             continuum_state = None
2025-01-14T13:17:21.2133621Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2133728Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2133825Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2133929Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2134039Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2134140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2134232Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2134317Z         ).to_numba(
2025-01-14T13:17:21.2134394Z             macro_atom_state,
2025-01-14T13:17:21.2134489Z             self.line_interaction_type,
2025-01-14T13:17:21.2134556Z         )
2025-01-14T13:17:21.2134661Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2134931Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2135006Z         ]
2025-01-14T13:17:21.2135307Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2135312Z 
2025-01-14T13:17:21.2135464Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2135696Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-14T13:17:21.2135707Z 
2025-01-14T13:17:21.2136370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2136725Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2136728Z 
2025-01-14T13:17:21.2136816Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2136961Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2137032Z         """
2025-01-14T13:17:21.2137183Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2137250Z     
2025-01-14T13:17:21.2137333Z         Parameters
2025-01-14T13:17:21.2137405Z         ----------
2025-01-14T13:17:21.2137561Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2137693Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2137809Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2138038Z             Atomic data.
2025-01-14T13:17:21.2138108Z     
2025-01-14T13:17:21.2138185Z         Returns
2025-01-14T13:17:21.2138256Z         -------
2025-01-14T13:17:21.2138369Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2138448Z             Simulation object.
2025-01-14T13:17:21.2138524Z         """
2025-01-14T13:17:21.2138674Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2138852Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2138966Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2139094Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2139312Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2139489Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2139629Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2139734Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2139834Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2139909Z >       sim = run_tardis(
2025-01-14T13:17:21.2139994Z             config_verysimple,
2025-01-14T13:17:21.2140075Z             atom_data=atomic_data,
2025-01-14T13:17:21.2140170Z             show_convergence_plots=False,
2025-01-14T13:17:21.2140250Z             log_level="CRITICAl",
2025-01-14T13:17:21.2140322Z         )
2025-01-14T13:17:21.2140326Z 
2025-01-14T13:17:21.2140462Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2140576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2140665Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2140755Z     simulation.run_convergence()
2025-01-14T13:17:21.2140873Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2141010Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2141113Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2141264Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2141380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2141384Z 
2025-01-14T13:17:21.2141746Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2141956Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2142174Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2142451Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2142617Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2142751Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2142756Z 
2025-01-14T13:17:21.2142849Z     def initialize_transport_state(
2025-01-14T13:17:21.2142922Z         self,
2025-01-14T13:17:21.2143005Z         simulation_state,
2025-01-14T13:17:21.2143085Z         opacity_state,
2025-01-14T13:17:21.2143166Z         macro_atom_state,
2025-01-14T13:17:21.2143238Z         plasma,
2025-01-14T13:17:21.2143321Z         no_of_packets,
2025-01-14T13:17:21.2143404Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2143483Z         iteration=0,
2025-01-14T13:17:21.2143550Z     ):
2025-01-14T13:17:21.2143682Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2143781Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2143858Z         else:
2025-01-14T13:17:21.2143944Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2144012Z     
2025-01-14T13:17:21.2144161Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2144258Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2144332Z         )
2025-01-14T13:17:21.2144400Z     
2025-01-14T13:17:21.2144659Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2144773Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2144935Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2145005Z         else:
2025-01-14T13:17:21.2145094Z             continuum_state = None
2025-01-14T13:17:21.2145195Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2145307Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2145399Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2145508Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2145612Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2145810Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2145909Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2145982Z         ).to_numba(
2025-01-14T13:17:21.2146066Z             macro_atom_state,
2025-01-14T13:17:21.2146159Z             self.line_interaction_type,
2025-01-14T13:17:21.2146237Z         )
2025-01-14T13:17:21.2146338Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2146615Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2146684Z         ]
2025-01-14T13:17:21.2146993Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2146997Z 
2025-01-14T13:17:21.2147145Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2147375Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-14T13:17:21.2147384Z 
2025-01-14T13:17:21.2148052Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2148403Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2148407Z 
2025-01-14T13:17:21.2148506Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2148644Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2148723Z         """
2025-01-14T13:17:21.2148867Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2148942Z     
2025-01-14T13:17:21.2149022Z         Parameters
2025-01-14T13:17:21.2149096Z         ----------
2025-01-14T13:17:21.2149246Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2149375Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2149496Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2149572Z             Atomic data.
2025-01-14T13:17:21.2149646Z     
2025-01-14T13:17:21.2149723Z         Returns
2025-01-14T13:17:21.2149799Z         -------
2025-01-14T13:17:21.2149904Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2149988Z             Simulation object.
2025-01-14T13:17:21.2150055Z         """
2025-01-14T13:17:21.2150209Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2150378Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2150497Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2150627Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2150757Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2150940Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2151072Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2151175Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2151358Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2151439Z >       sim = run_tardis(
2025-01-14T13:17:21.2151519Z             config_verysimple,
2025-01-14T13:17:21.2151809Z             atom_data=atomic_data,
2025-01-14T13:17:21.2151951Z             show_convergence_plots=False,
2025-01-14T13:17:21.2152046Z             log_level="CRITICAl",
2025-01-14T13:17:21.2152115Z         )
2025-01-14T13:17:21.2152122Z 
2025-01-14T13:17:21.2152265Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2152382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2152466Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2152561Z     simulation.run_convergence()
2025-01-14T13:17:21.2152808Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2152961Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2153058Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2153215Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2153332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2153336Z 
2025-01-14T13:17:21.2153604Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2153805Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2154033Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2154311Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2154476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2154617Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2154621Z 
2025-01-14T13:17:21.2154708Z     def initialize_transport_state(
2025-01-14T13:17:21.2154785Z         self,
2025-01-14T13:17:21.2154868Z         simulation_state,
2025-01-14T13:17:21.2154949Z         opacity_state,
2025-01-14T13:17:21.2155027Z         macro_atom_state,
2025-01-14T13:17:21.2155106Z         plasma,
2025-01-14T13:17:21.2155181Z         no_of_packets,
2025-01-14T13:17:21.2155270Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2155343Z         iteration=0,
2025-01-14T13:17:21.2155417Z     ):
2025-01-14T13:17:21.2155549Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2155646Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2155724Z         else:
2025-01-14T13:17:21.2155802Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2155877Z     
2025-01-14T13:17:21.2156016Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2156118Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2156187Z         )
2025-01-14T13:17:21.2156260Z     
2025-01-14T13:17:21.2156387Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2156510Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2156664Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2156739Z         else:
2025-01-14T13:17:21.2156821Z             continuum_state = None
2025-01-14T13:17:21.2156929Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2157037Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2157137Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2157257Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2157356Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2157453Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2157548Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2157624Z         ).to_numba(
2025-01-14T13:17:21.2157701Z             macro_atom_state,
2025-01-14T13:17:21.2157795Z             self.line_interaction_type,
2025-01-14T13:17:21.2157988Z         )
2025-01-14T13:17:21.2158093Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2158363Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2158435Z         ]
2025-01-14T13:17:21.2158734Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2158744Z 
2025-01-14T13:17:21.2158890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2159090Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-14T13:17:21.2159094Z 
2025-01-14T13:17:21.2159825Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2160179Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2160189Z 
2025-01-14T13:17:21.2160278Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2160420Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2160492Z         """
2025-01-14T13:17:21.2160633Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2160703Z     
2025-01-14T13:17:21.2160778Z         Parameters
2025-01-14T13:17:21.2160854Z         ----------
2025-01-14T13:17:21.2160995Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2161123Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2161241Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2161321Z             Atomic data.
2025-01-14T13:17:21.2161388Z     
2025-01-14T13:17:21.2161462Z         Returns
2025-01-14T13:17:21.2161532Z         -------
2025-01-14T13:17:21.2161751Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2161831Z             Simulation object.
2025-01-14T13:17:21.2161905Z         """
2025-01-14T13:17:21.2162051Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2162227Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2162343Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2162466Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2162602Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2162774Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2162915Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2163012Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2163112Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2163187Z >       sim = run_tardis(
2025-01-14T13:17:21.2163275Z             config_verysimple,
2025-01-14T13:17:21.2163355Z             atom_data=atomic_data,
2025-01-14T13:17:21.2163450Z             show_convergence_plots=False,
2025-01-14T13:17:21.2163528Z             log_level="CRITICAl",
2025-01-14T13:17:21.2163601Z         )
2025-01-14T13:17:21.2163604Z 
2025-01-14T13:17:21.2163744Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2163852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2163943Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2164032Z     simulation.run_convergence()
2025-01-14T13:17:21.2164155Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2164299Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2164396Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2164545Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2164835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2164839Z 
2025-01-14T13:17:21.2165103Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2165312Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2165538Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2165810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2165971Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2166211Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2166215Z 
2025-01-14T13:17:21.2166308Z     def initialize_transport_state(
2025-01-14T13:17:21.2166377Z         self,
2025-01-14T13:17:21.2166460Z         simulation_state,
2025-01-14T13:17:21.2166534Z         opacity_state,
2025-01-14T13:17:21.2166621Z         macro_atom_state,
2025-01-14T13:17:21.2166690Z         plasma,
2025-01-14T13:17:21.2166769Z         no_of_packets,
2025-01-14T13:17:21.2166848Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2166928Z         iteration=0,
2025-01-14T13:17:21.2167002Z     ):
2025-01-14T13:17:21.2167127Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2167225Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2167292Z         else:
2025-01-14T13:17:21.2167373Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2167440Z     
2025-01-14T13:17:21.2167577Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2167676Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2167749Z         )
2025-01-14T13:17:21.2167816Z     
2025-01-14T13:17:21.2167949Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2168060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2168225Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2168294Z         else:
2025-01-14T13:17:21.2168382Z             continuum_state = None
2025-01-14T13:17:21.2168486Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2168594Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2168689Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2168793Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2168895Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2168985Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2169078Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2169155Z         ).to_numba(
2025-01-14T13:17:21.2169237Z             macro_atom_state,
2025-01-14T13:17:21.2169326Z             self.line_interaction_type,
2025-01-14T13:17:21.2169398Z         )
2025-01-14T13:17:21.2169497Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2169772Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2169839Z         ]
2025-01-14T13:17:21.2170140Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2170144Z 
2025-01-14T13:17:21.2170291Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2170492Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-14T13:17:21.2170495Z 
2025-01-14T13:17:21.2171169Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2171517Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2171754Z 
2025-01-14T13:17:21.2171861Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2172008Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2172109Z         """
2025-01-14T13:17:21.2172259Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2172325Z     
2025-01-14T13:17:21.2172403Z         Parameters
2025-01-14T13:17:21.2172474Z         ----------
2025-01-14T13:17:21.2172623Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2172747Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2172868Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2173064Z             Atomic data.
2025-01-14T13:17:21.2173137Z     
2025-01-14T13:17:21.2173207Z         Returns
2025-01-14T13:17:21.2173283Z         -------
2025-01-14T13:17:21.2173388Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2173477Z             Simulation object.
2025-01-14T13:17:21.2173547Z         """
2025-01-14T13:17:21.2173700Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2173876Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2173991Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2174119Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2174250Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2174430Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2174561Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2174668Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2174764Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2174844Z >       sim = run_tardis(
2025-01-14T13:17:21.2174923Z             config_verysimple,
2025-01-14T13:17:21.2175015Z             atom_data=atomic_data,
2025-01-14T13:17:21.2175108Z             show_convergence_plots=False,
2025-01-14T13:17:21.2175197Z             log_level="CRITICAl",
2025-01-14T13:17:21.2175273Z         )
2025-01-14T13:17:21.2175277Z 
2025-01-14T13:17:21.2175417Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2175530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2175614Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2175707Z     simulation.run_convergence()
2025-01-14T13:17:21.2175822Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2175966Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2176065Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2176222Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2176325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2176332Z 
2025-01-14T13:17:21.2176606Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2176812Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2177033Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2177312Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2177467Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2177607Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2177611Z 
2025-01-14T13:17:21.2177699Z     def initialize_transport_state(
2025-01-14T13:17:21.2177773Z         self,
2025-01-14T13:17:21.2177850Z         simulation_state,
2025-01-14T13:17:21.2177930Z         opacity_state,
2025-01-14T13:17:21.2178005Z         macro_atom_state,
2025-01-14T13:17:21.2178229Z         plasma,
2025-01-14T13:17:21.2178309Z         no_of_packets,
2025-01-14T13:17:21.2178389Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2178466Z         iteration=0,
2025-01-14T13:17:21.2178535Z     ):
2025-01-14T13:17:21.2178667Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2178761Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2178835Z         else:
2025-01-14T13:17:21.2178914Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2178985Z     
2025-01-14T13:17:21.2179115Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2179215Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2179281Z         )
2025-01-14T13:17:21.2179351Z     
2025-01-14T13:17:21.2179560Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2179682Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2179835Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2179919Z         else:
2025-01-14T13:17:21.2180006Z             continuum_state = None
2025-01-14T13:17:21.2180106Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2180221Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2180315Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2180426Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2180524Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2180621Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2180712Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2180787Z         ).to_numba(
2025-01-14T13:17:21.2180875Z             macro_atom_state,
2025-01-14T13:17:21.2180968Z             self.line_interaction_type,
2025-01-14T13:17:21.2181035Z         )
2025-01-14T13:17:21.2181141Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2181411Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2181489Z         ]
2025-01-14T13:17:21.2181901Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2181906Z 
2025-01-14T13:17:21.2182057Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2182260Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-14T13:17:21.2182264Z 
2025-01-14T13:17:21.2182935Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2183290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2183294Z 
2025-01-14T13:17:21.2183393Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2183537Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2183608Z         """
2025-01-14T13:17:21.2183755Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2183826Z     
2025-01-14T13:17:21.2183898Z         Parameters
2025-01-14T13:17:21.2183977Z         ----------
2025-01-14T13:17:21.2184121Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2184252Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2184366Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2184446Z             Atomic data.
2025-01-14T13:17:21.2184513Z     
2025-01-14T13:17:21.2184590Z         Returns
2025-01-14T13:17:21.2184661Z         -------
2025-01-14T13:17:21.2184773Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2184858Z             Simulation object.
2025-01-14T13:17:21.2185072Z         """
2025-01-14T13:17:21.2185231Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2185402Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2185524Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2185649Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2185790Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2185966Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2186108Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2186207Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2186439Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2186520Z >       sim = run_tardis(
2025-01-14T13:17:21.2186607Z             config_verysimple,
2025-01-14T13:17:21.2186690Z             atom_data=atomic_data,
2025-01-14T13:17:21.2186797Z             show_convergence_plots=False,
2025-01-14T13:17:21.2186883Z             log_level="CRITICAl",
2025-01-14T13:17:21.2186953Z         )
2025-01-14T13:17:21.2186957Z 
2025-01-14T13:17:21.2187103Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2187216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2187306Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2187392Z     simulation.run_convergence()
2025-01-14T13:17:21.2187510Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2187649Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2187748Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2187907Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2188022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2188026Z 
2025-01-14T13:17:21.2188294Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2188500Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2188726Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2189003Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2189166Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2189307Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2189311Z 
2025-01-14T13:17:21.2189405Z     def initialize_transport_state(
2025-01-14T13:17:21.2189473Z         self,
2025-01-14T13:17:21.2189559Z         simulation_state,
2025-01-14T13:17:21.2189639Z         opacity_state,
2025-01-14T13:17:21.2189714Z         macro_atom_state,
2025-01-14T13:17:21.2189790Z         plasma,
2025-01-14T13:17:21.2189866Z         no_of_packets,
2025-01-14T13:17:21.2189959Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2190033Z         iteration=0,
2025-01-14T13:17:21.2190106Z     ):
2025-01-14T13:17:21.2190234Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2190336Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2190405Z         else:
2025-01-14T13:17:21.2190489Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2190555Z     
2025-01-14T13:17:21.2190692Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2190791Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2190864Z         )
2025-01-14T13:17:21.2190930Z     
2025-01-14T13:17:21.2191062Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2191179Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2191340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2191412Z         else:
2025-01-14T13:17:21.2191769Z             continuum_state = None
2025-01-14T13:17:21.2191935Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2192068Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2192167Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2192273Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2192375Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2192466Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2192561Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2192631Z         ).to_numba(
2025-01-14T13:17:21.2192716Z             macro_atom_state,
2025-01-14T13:17:21.2192803Z             self.line_interaction_type,
2025-01-14T13:17:21.2192996Z         )
2025-01-14T13:17:21.2193103Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2193382Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2193461Z         ]
2025-01-14T13:17:21.2193762Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2193766Z 
2025-01-14T13:17:21.2193919Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2194115Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-14T13:17:21.2194118Z 
2025-01-14T13:17:21.2194785Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2195139Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2195143Z 
2025-01-14T13:17:21.2195230Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2195377Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2195443Z         """
2025-01-14T13:17:21.2195592Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2195658Z     
2025-01-14T13:17:21.2195735Z         Parameters
2025-01-14T13:17:21.2195807Z         ----------
2025-01-14T13:17:21.2195950Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2196073Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2196192Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2196267Z             Atomic data.
2025-01-14T13:17:21.2196337Z     
2025-01-14T13:17:21.2196407Z         Returns
2025-01-14T13:17:21.2196481Z         -------
2025-01-14T13:17:21.2196594Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2196675Z             Simulation object.
2025-01-14T13:17:21.2196747Z         """
2025-01-14T13:17:21.2196897Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2197080Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2197194Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2197320Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2197451Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2197630Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2197766Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2197872Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2197966Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2198053Z >       sim = run_tardis(
2025-01-14T13:17:21.2198137Z             config_verysimple,
2025-01-14T13:17:21.2198221Z             atom_data=atomic_data,
2025-01-14T13:17:21.2198315Z             show_convergence_plots=False,
2025-01-14T13:17:21.2198395Z             log_level="CRITICAl",
2025-01-14T13:17:21.2198588Z         )
2025-01-14T13:17:21.2198592Z 
2025-01-14T13:17:21.2198728Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2198843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2198928Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2199019Z     simulation.run_convergence()
2025-01-14T13:17:21.2199134Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2199276Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2199368Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2199524Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2199713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2199718Z 
2025-01-14T13:17:21.2199984Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2200198Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2200422Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2200701Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2200858Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2205800Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2205814Z 
2025-01-14T13:17:21.2205927Z     def initialize_transport_state(
2025-01-14T13:17:21.2206004Z         self,
2025-01-14T13:17:21.2206087Z         simulation_state,
2025-01-14T13:17:21.2206183Z         opacity_state,
2025-01-14T13:17:21.2206263Z         macro_atom_state,
2025-01-14T13:17:21.2206335Z         plasma,
2025-01-14T13:17:21.2206413Z         no_of_packets,
2025-01-14T13:17:21.2206494Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2206580Z         iteration=0,
2025-01-14T13:17:21.2206648Z     ):
2025-01-14T13:17:21.2206793Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2206894Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2206968Z         else:
2025-01-14T13:17:21.2207049Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2207119Z     
2025-01-14T13:17:21.2207264Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2207367Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2207435Z         )
2025-01-14T13:17:21.2207506Z     
2025-01-14T13:17:21.2207640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2207762Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2207931Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2208000Z         else:
2025-01-14T13:17:21.2208089Z             continuum_state = None
2025-01-14T13:17:21.2208191Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2208312Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2208403Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2208515Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2208616Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2208718Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2208811Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2208887Z         ).to_numba(
2025-01-14T13:17:21.2208965Z             macro_atom_state,
2025-01-14T13:17:21.2209058Z             self.line_interaction_type,
2025-01-14T13:17:21.2209126Z         )
2025-01-14T13:17:21.2209239Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2209525Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2209592Z         ]
2025-01-14T13:17:21.2209909Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2210085Z 
2025-01-14T13:17:21.2210245Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2210463Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-14T13:17:21.2210467Z 
2025-01-14T13:17:21.2211145Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2211741Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2211747Z 
2025-01-14T13:17:21.2211853Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2212004Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2212083Z         """
2025-01-14T13:17:21.2212233Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2212303Z     
2025-01-14T13:17:21.2212376Z         Parameters
2025-01-14T13:17:21.2212454Z         ----------
2025-01-14T13:17:21.2212599Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2212731Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2212847Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2212928Z             Atomic data.
2025-01-14T13:17:21.2212994Z     
2025-01-14T13:17:21.2213067Z         Returns
2025-01-14T13:17:21.2213144Z         -------
2025-01-14T13:17:21.2213249Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2213338Z             Simulation object.
2025-01-14T13:17:21.2213405Z         """
2025-01-14T13:17:21.2213561Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2213731Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2213856Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2213980Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2214120Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2214296Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2214435Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2214536Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2214638Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2214713Z >       sim = run_tardis(
2025-01-14T13:17:21.2214798Z             config_verysimple,
2025-01-14T13:17:21.2214890Z             atom_data=atomic_data,
2025-01-14T13:17:21.2214982Z             show_convergence_plots=False,
2025-01-14T13:17:21.2215068Z             log_level="CRITICAl",
2025-01-14T13:17:21.2215135Z         )
2025-01-14T13:17:21.2215142Z 
2025-01-14T13:17:21.2215292Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2215407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2215502Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2215590Z     simulation.run_convergence()
2025-01-14T13:17:21.2215710Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2215856Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2215957Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2216112Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2216226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2216233Z 
2025-01-14T13:17:21.2216504Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2216705Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2217055Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2217329Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2217494Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2217631Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2217635Z 
2025-01-14T13:17:21.2217729Z     def initialize_transport_state(
2025-01-14T13:17:21.2217802Z         self,
2025-01-14T13:17:21.2217880Z         simulation_state,
2025-01-14T13:17:21.2217961Z         opacity_state,
2025-01-14T13:17:21.2218035Z         macro_atom_state,
2025-01-14T13:17:21.2218232Z         plasma,
2025-01-14T13:17:21.2218308Z         no_of_packets,
2025-01-14T13:17:21.2218396Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2218468Z         iteration=0,
2025-01-14T13:17:21.2218540Z     ):
2025-01-14T13:17:21.2218675Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2218776Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2218845Z         else:
2025-01-14T13:17:21.2218926Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2218993Z     
2025-01-14T13:17:21.2219130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2219227Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2219299Z         )
2025-01-14T13:17:21.2219364Z     
2025-01-14T13:17:21.2219498Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2219616Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2219774Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2219849Z         else:
2025-01-14T13:17:21.2219931Z             continuum_state = None
2025-01-14T13:17:21.2220036Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2220142Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2220245Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2220352Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2220455Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2220547Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2220643Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2220714Z         ).to_numba(
2025-01-14T13:17:21.2220798Z             macro_atom_state,
2025-01-14T13:17:21.2220885Z             self.line_interaction_type,
2025-01-14T13:17:21.2220958Z         )
2025-01-14T13:17:21.2221063Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2221340Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2221412Z         ]
2025-01-14T13:17:21.2221855Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2221864Z 
2025-01-14T13:17:21.2222021Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2222217Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-14T13:17:21.2222221Z 
2025-01-14T13:17:21.2222893Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2223247Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2223251Z 
2025-01-14T13:17:21.2223344Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2223492Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2223559Z         """
2025-01-14T13:17:21.2223706Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2223918Z     
2025-01-14T13:17:21.2223999Z         Parameters
2025-01-14T13:17:21.2224073Z         ----------
2025-01-14T13:17:21.2224222Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2224342Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2224464Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2224542Z             Atomic data.
2025-01-14T13:17:21.2224608Z     
2025-01-14T13:17:21.2224681Z         Returns
2025-01-14T13:17:21.2224752Z         -------
2025-01-14T13:17:21.2224863Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2224944Z             Simulation object.
2025-01-14T13:17:21.2225134Z         """
2025-01-14T13:17:21.2225285Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2225463Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2225578Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2225717Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2225848Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2226032Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2226164Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2226272Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2226372Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2226446Z >       sim = run_tardis(
2025-01-14T13:17:21.2226531Z             config_verysimple,
2025-01-14T13:17:21.2226611Z             atom_data=atomic_data,
2025-01-14T13:17:21.2226710Z             show_convergence_plots=False,
2025-01-14T13:17:21.2226792Z             log_level="CRITICAl",
2025-01-14T13:17:21.2226867Z         )
2025-01-14T13:17:21.2226871Z 
2025-01-14T13:17:21.2227008Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2227131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2227214Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2227303Z     simulation.run_convergence()
2025-01-14T13:17:21.2227415Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2227559Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2227657Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2227806Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2227916Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2227920Z 
2025-01-14T13:17:21.2228186Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2228390Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2228610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2228890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2229047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2229188Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2229192Z 
2025-01-14T13:17:21.2229284Z     def initialize_transport_state(
2025-01-14T13:17:21.2229352Z         self,
2025-01-14T13:17:21.2229437Z         simulation_state,
2025-01-14T13:17:21.2229510Z         opacity_state,
2025-01-14T13:17:21.2229590Z         macro_atom_state,
2025-01-14T13:17:21.2229658Z         plasma,
2025-01-14T13:17:21.2229735Z         no_of_packets,
2025-01-14T13:17:21.2229818Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2229895Z         iteration=0,
2025-01-14T13:17:21.2229962Z     ):
2025-01-14T13:17:21.2230090Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2230274Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2230348Z         else:
2025-01-14T13:17:21.2230426Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2230497Z     
2025-01-14T13:17:21.2230628Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2230729Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2230804Z         )
2025-01-14T13:17:21.2230869Z     
2025-01-14T13:17:21.2231000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2231110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2231266Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2231335Z         else:
2025-01-14T13:17:21.2231499Z             continuum_state = None
2025-01-14T13:17:21.2231843Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2232033Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2232131Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2232255Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2232354Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2232450Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2232539Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2232613Z         ).to_numba(
2025-01-14T13:17:21.2232697Z             macro_atom_state,
2025-01-14T13:17:21.2232784Z             self.line_interaction_type,
2025-01-14T13:17:21.2232855Z         )
2025-01-14T13:17:21.2232954Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2233229Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2233302Z         ]
2025-01-14T13:17:21.2233609Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2233614Z 
2025-01-14T13:17:21.2233758Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2233961Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-14T13:17:21.2233966Z 
2025-01-14T13:17:21.2234628Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2234974Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2234978Z 
2025-01-14T13:17:21.2235071Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2235211Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2235284Z         """
2025-01-14T13:17:21.2235426Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2235496Z     
2025-01-14T13:17:21.2235573Z         Parameters
2025-01-14T13:17:21.2235650Z         ----------
2025-01-14T13:17:21.2235790Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2235916Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2236037Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2236112Z             Atomic data.
2025-01-14T13:17:21.2236183Z     
2025-01-14T13:17:21.2236255Z         Returns
2025-01-14T13:17:21.2236329Z         -------
2025-01-14T13:17:21.2236435Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2236517Z             Simulation object.
2025-01-14T13:17:21.2236584Z         """
2025-01-14T13:17:21.2236739Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2236905Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2237026Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2237149Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2237424Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2237598Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2237738Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2237841Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2237935Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2238015Z >       sim = run_tardis(
2025-01-14T13:17:21.2238094Z             config_verysimple,
2025-01-14T13:17:21.2238180Z             atom_data=atomic_data,
2025-01-14T13:17:21.2238269Z             show_convergence_plots=False,
2025-01-14T13:17:21.2238457Z             log_level="CRITICAl",
2025-01-14T13:17:21.2238531Z         )
2025-01-14T13:17:21.2238535Z 
2025-01-14T13:17:21.2238676Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2238786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2238880Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2238965Z     simulation.run_convergence()
2025-01-14T13:17:21.2239083Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2239224Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2239317Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2239473Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2239577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2239581Z 
2025-01-14T13:17:21.2239847Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2240049Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2240273Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2240544Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2240708Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2240848Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2240852Z 
2025-01-14T13:17:21.2240938Z     def initialize_transport_state(
2025-01-14T13:17:21.2241010Z         self,
2025-01-14T13:17:21.2241085Z         simulation_state,
2025-01-14T13:17:21.2241164Z         opacity_state,
2025-01-14T13:17:21.2241238Z         macro_atom_state,
2025-01-14T13:17:21.2241312Z         plasma,
2025-01-14T13:17:21.2241384Z         no_of_packets,
2025-01-14T13:17:21.2241470Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2241662Z         iteration=0,
2025-01-14T13:17:21.2241738Z     ):
2025-01-14T13:17:21.2241863Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2241962Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2242031Z         else:
2025-01-14T13:17:21.2242118Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2242183Z     
2025-01-14T13:17:21.2242319Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2242419Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2242486Z         )
2025-01-14T13:17:21.2242558Z     
2025-01-14T13:17:21.2242687Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2242807Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2242961Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2243037Z         else:
2025-01-14T13:17:21.2243120Z             continuum_state = None
2025-01-14T13:17:21.2243234Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2243345Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2243440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2243546Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2243810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2243905Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2244002Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2244078Z         ).to_numba(
2025-01-14T13:17:21.2244157Z             macro_atom_state,
2025-01-14T13:17:21.2244250Z             self.line_interaction_type,
2025-01-14T13:17:21.2244321Z         )
2025-01-14T13:17:21.2244429Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2244699Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2244771Z         ]
2025-01-14T13:17:21.2245210Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2245215Z 
2025-01-14T13:17:21.2245372Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2245581Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-14T13:17:21.2245591Z 
2025-01-14T13:17:21.2246252Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2246605Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2246610Z 
2025-01-14T13:17:21.2246699Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2246844Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2246916Z         """
2025-01-14T13:17:21.2247066Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2247132Z     
2025-01-14T13:17:21.2247210Z         Parameters
2025-01-14T13:17:21.2247281Z         ----------
2025-01-14T13:17:21.2247435Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2247563Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2247682Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2247763Z             Atomic data.
2025-01-14T13:17:21.2247830Z     
2025-01-14T13:17:21.2247903Z         Returns
2025-01-14T13:17:21.2247972Z         -------
2025-01-14T13:17:21.2248082Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2248161Z             Simulation object.
2025-01-14T13:17:21.2248233Z         """
2025-01-14T13:17:21.2248394Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2248574Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2248687Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2248815Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2248952Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2249131Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2249270Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2249368Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2249466Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2249541Z >       sim = run_tardis(
2025-01-14T13:17:21.2249625Z             config_verysimple,
2025-01-14T13:17:21.2249705Z             atom_data=atomic_data,
2025-01-14T13:17:21.2249804Z             show_convergence_plots=False,
2025-01-14T13:17:21.2249883Z             log_level="CRITICAl",
2025-01-14T13:17:21.2249957Z         )
2025-01-14T13:17:21.2249965Z 
2025-01-14T13:17:21.2250100Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2250215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2250303Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2250495Z     simulation.run_convergence()
2025-01-14T13:17:21.2250615Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2250756Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2250853Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2251002Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2251112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2251116Z 
2025-01-14T13:17:21.2251377Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2251794Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2252024Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2252302Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2252469Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2252604Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2252608Z 
2025-01-14T13:17:21.2252699Z     def initialize_transport_state(
2025-01-14T13:17:21.2252767Z         self,
2025-01-14T13:17:21.2252849Z         simulation_state,
2025-01-14T13:17:21.2252923Z         opacity_state,
2025-01-14T13:17:21.2253003Z         macro_atom_state,
2025-01-14T13:17:21.2253073Z         plasma,
2025-01-14T13:17:21.2253151Z         no_of_packets,
2025-01-14T13:17:21.2253232Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2253309Z         iteration=0,
2025-01-14T13:17:21.2253376Z     ):
2025-01-14T13:17:21.2253513Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2253609Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2253683Z         else:
2025-01-14T13:17:21.2253766Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2253838Z     
2025-01-14T13:17:21.2253974Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2254071Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2254143Z         )
2025-01-14T13:17:21.2254210Z     
2025-01-14T13:17:21.2254343Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2254454Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2254609Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2254678Z         else:
2025-01-14T13:17:21.2254765Z             continuum_state = None
2025-01-14T13:17:21.2254866Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2254983Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2255075Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2255187Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2255291Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2255387Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2255483Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2255555Z         ).to_numba(
2025-01-14T13:17:21.2255638Z             macro_atom_state,
2025-01-14T13:17:21.2255724Z             self.line_interaction_type,
2025-01-14T13:17:21.2255799Z         )
2025-01-14T13:17:21.2255899Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2256172Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2256239Z         ]
2025-01-14T13:17:21.2256547Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2256552Z 
2025-01-14T13:17:21.2256698Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2256899Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-14T13:17:21.2257047Z 
2025-01-14T13:17:21.2257715Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2258065Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2258069Z 
2025-01-14T13:17:21.2258163Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2258303Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2258375Z         """
2025-01-14T13:17:21.2258600Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2258677Z     
2025-01-14T13:17:21.2258757Z         Parameters
2025-01-14T13:17:21.2258828Z         ----------
2025-01-14T13:17:21.2258973Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2259101Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2259228Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2259303Z             Atomic data.
2025-01-14T13:17:21.2259373Z     
2025-01-14T13:17:21.2259441Z         Returns
2025-01-14T13:17:21.2259516Z         -------
2025-01-14T13:17:21.2259618Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2259703Z             Simulation object.
2025-01-14T13:17:21.2259770Z         """
2025-01-14T13:17:21.2259924Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2260092Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2260215Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2260344Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2260474Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2260658Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2260790Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2260893Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2260988Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2261071Z >       sim = run_tardis(
2025-01-14T13:17:21.2261152Z             config_verysimple,
2025-01-14T13:17:21.2261236Z             atom_data=atomic_data,
2025-01-14T13:17:21.2261326Z             show_convergence_plots=False,
2025-01-14T13:17:21.2261411Z             log_level="CRITICAl",
2025-01-14T13:17:21.2261477Z         )
2025-01-14T13:17:21.2261481Z 
2025-01-14T13:17:21.2261723Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2261838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2261921Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2262012Z     simulation.run_convergence()
2025-01-14T13:17:21.2262129Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2262275Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2262368Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2262524Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2262632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2262637Z 
2025-01-14T13:17:21.2262903Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2263103Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2263331Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2263606Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2263763Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2264031Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2264035Z 
2025-01-14T13:17:21.2264123Z     def initialize_transport_state(
2025-01-14T13:17:21.2264196Z         self,
2025-01-14T13:17:21.2264272Z         simulation_state,
2025-01-14T13:17:21.2264352Z         opacity_state,
2025-01-14T13:17:21.2264427Z         macro_atom_state,
2025-01-14T13:17:21.2264502Z         plasma,
2025-01-14T13:17:21.2264574Z         no_of_packets,
2025-01-14T13:17:21.2264660Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2264732Z         iteration=0,
2025-01-14T13:17:21.2264804Z     ):
2025-01-14T13:17:21.2264933Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2265135Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2265211Z         else:
2025-01-14T13:17:21.2265290Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2265360Z     
2025-01-14T13:17:21.2265493Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2265602Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2265668Z         )
2025-01-14T13:17:21.2265739Z     
2025-01-14T13:17:21.2265866Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2265982Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2266133Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2266205Z         else:
2025-01-14T13:17:21.2266290Z             continuum_state = None
2025-01-14T13:17:21.2266396Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2266500Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2266600Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2266709Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2266806Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2266902Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2266997Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2267073Z         ).to_numba(
2025-01-14T13:17:21.2267151Z             macro_atom_state,
2025-01-14T13:17:21.2267244Z             self.line_interaction_type,
2025-01-14T13:17:21.2267311Z         )
2025-01-14T13:17:21.2267416Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2267682Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2267755Z         ]
2025-01-14T13:17:21.2268052Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2268061Z 
2025-01-14T13:17:21.2268210Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2268411Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-14T13:17:21.2268415Z 
2025-01-14T13:17:21.2269071Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2269432Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2269435Z 
2025-01-14T13:17:21.2269525Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2269668Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2269740Z         """
2025-01-14T13:17:21.2269880Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2269952Z     
2025-01-14T13:17:21.2270028Z         Parameters
2025-01-14T13:17:21.2270108Z         ----------
2025-01-14T13:17:21.2270249Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2270375Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2270634Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2270712Z             Atomic data.
2025-01-14T13:17:21.2270780Z     
2025-01-14T13:17:21.2270854Z         Returns
2025-01-14T13:17:21.2270924Z         -------
2025-01-14T13:17:21.2271032Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2271111Z             Simulation object.
2025-01-14T13:17:21.2271183Z         """
2025-01-14T13:17:21.2271332Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2271507Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2271844Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2272229Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2272378Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2272555Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2272704Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2272802Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2272903Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2272978Z >       sim = run_tardis(
2025-01-14T13:17:21.2273064Z             config_verysimple,
2025-01-14T13:17:21.2273145Z             atom_data=atomic_data,
2025-01-14T13:17:21.2273240Z             show_convergence_plots=False,
2025-01-14T13:17:21.2273321Z             log_level="CRITICAl",
2025-01-14T13:17:21.2273393Z         )
2025-01-14T13:17:21.2273398Z 
2025-01-14T13:17:21.2273543Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2273660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2273749Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2273836Z     simulation.run_convergence()
2025-01-14T13:17:21.2273956Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2274103Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2274201Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2274350Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2274463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2274466Z 
2025-01-14T13:17:21.2274731Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2274939Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2275165Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2275445Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2275609Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2275745Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2275751Z 
2025-01-14T13:17:21.2275843Z     def initialize_transport_state(
2025-01-14T13:17:21.2275911Z         self,
2025-01-14T13:17:21.2275994Z         simulation_state,
2025-01-14T13:17:21.2276069Z         opacity_state,
2025-01-14T13:17:21.2276149Z         macro_atom_state,
2025-01-14T13:17:21.2276219Z         plasma,
2025-01-14T13:17:21.2276298Z         no_of_packets,
2025-01-14T13:17:21.2276378Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2276457Z         iteration=0,
2025-01-14T13:17:21.2276529Z     ):
2025-01-14T13:17:21.2276654Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2276758Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2276833Z         else:
2025-01-14T13:17:21.2276920Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2276987Z     
2025-01-14T13:17:21.2277123Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2277220Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2277466Z         )
2025-01-14T13:17:21.2277533Z     
2025-01-14T13:17:21.2277667Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2277779Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2277938Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2278005Z         else:
2025-01-14T13:17:21.2278091Z             continuum_state = None
2025-01-14T13:17:21.2278198Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2278304Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2278399Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2278592Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2278701Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2278794Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2278889Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2278968Z         ).to_numba(
2025-01-14T13:17:21.2279051Z             macro_atom_state,
2025-01-14T13:17:21.2279137Z             self.line_interaction_type,
2025-01-14T13:17:21.2279209Z         )
2025-01-14T13:17:21.2279310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2279587Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2279655Z         ]
2025-01-14T13:17:21.2279962Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2279966Z 
2025-01-14T13:17:21.2280119Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2280323Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-14T13:17:21.2280327Z 
2025-01-14T13:17:21.2280999Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2281349Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2281353Z 
2025-01-14T13:17:21.2281446Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2281697Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2281770Z         """
2025-01-14T13:17:21.2281919Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2281985Z     
2025-01-14T13:17:21.2282064Z         Parameters
2025-01-14T13:17:21.2282138Z         ----------
2025-01-14T13:17:21.2282291Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2282412Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2282533Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2282616Z             Atomic data.
2025-01-14T13:17:21.2282689Z     
2025-01-14T13:17:21.2282759Z         Returns
2025-01-14T13:17:21.2282835Z         -------
2025-01-14T13:17:21.2282938Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2283022Z             Simulation object.
2025-01-14T13:17:21.2283089Z         """
2025-01-14T13:17:21.2283243Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2283422Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2283536Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2283666Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2283801Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2283981Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2284114Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2284368Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2284463Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2284544Z >       sim = run_tardis(
2025-01-14T13:17:21.2284625Z             config_verysimple,
2025-01-14T13:17:21.2284711Z             atom_data=atomic_data,
2025-01-14T13:17:21.2284801Z             show_convergence_plots=False,
2025-01-14T13:17:21.2284888Z             log_level="CRITICAl",
2025-01-14T13:17:21.2284961Z         )
2025-01-14T13:17:21.2284965Z 
2025-01-14T13:17:21.2285102Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2285219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2285421Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2285516Z     simulation.run_convergence()
2025-01-14T13:17:21.2285631Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2285777Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2285876Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2286032Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2286139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2286143Z 
2025-01-14T13:17:21.2286412Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2286621Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2286841Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2287123Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2287280Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2287419Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2287423Z 
2025-01-14T13:17:21.2287514Z     def initialize_transport_state(
2025-01-14T13:17:21.2287589Z         self,
2025-01-14T13:17:21.2287666Z         simulation_state,
2025-01-14T13:17:21.2287747Z         opacity_state,
2025-01-14T13:17:21.2287824Z         macro_atom_state,
2025-01-14T13:17:21.2287900Z         plasma,
2025-01-14T13:17:21.2287977Z         no_of_packets,
2025-01-14T13:17:21.2288057Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2288135Z         iteration=0,
2025-01-14T13:17:21.2288202Z     ):
2025-01-14T13:17:21.2288330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2288425Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2288498Z         else:
2025-01-14T13:17:21.2288576Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2288654Z     
2025-01-14T13:17:21.2288786Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2288887Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2288952Z         )
2025-01-14T13:17:21.2289027Z     
2025-01-14T13:17:21.2289155Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2289270Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2289424Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2289498Z         else:
2025-01-14T13:17:21.2289585Z             continuum_state = None
2025-01-14T13:17:21.2289683Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2289795Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2289885Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2289994Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2290095Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2290191Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2290283Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2290376Z         ).to_numba(
2025-01-14T13:17:21.2290566Z             macro_atom_state,
2025-01-14T13:17:21.2290663Z             self.line_interaction_type,
2025-01-14T13:17:21.2290740Z         )
2025-01-14T13:17:21.2290849Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2291124Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2291199Z         ]
2025-01-14T13:17:21.2291503Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2291507Z 
2025-01-14T13:17:21.2291748Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2291958Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-14T13:17:21.2292095Z 
2025-01-14T13:17:21.2292762Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2293122Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2293127Z 
2025-01-14T13:17:21.2293221Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2293360Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2293433Z         """
2025-01-14T13:17:21.2293575Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2293650Z     
2025-01-14T13:17:21.2293728Z         Parameters
2025-01-14T13:17:21.2293808Z         ----------
2025-01-14T13:17:21.2293951Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2294083Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2294197Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2294279Z             Atomic data.
2025-01-14T13:17:21.2294353Z     
2025-01-14T13:17:21.2294428Z         Returns
2025-01-14T13:17:21.2294499Z         -------
2025-01-14T13:17:21.2294607Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2294689Z             Simulation object.
2025-01-14T13:17:21.2294757Z         """
2025-01-14T13:17:21.2294914Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2295085Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2295204Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2295327Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2295466Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2295645Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2295783Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2295880Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2295984Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2296059Z >       sim = run_tardis(
2025-01-14T13:17:21.2296144Z             config_verysimple,
2025-01-14T13:17:21.2296233Z             atom_data=atomic_data,
2025-01-14T13:17:21.2296324Z             show_convergence_plots=False,
2025-01-14T13:17:21.2296408Z             log_level="CRITICAl",
2025-01-14T13:17:21.2296476Z         )
2025-01-14T13:17:21.2296480Z 
2025-01-14T13:17:21.2296622Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2296730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2296821Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2296906Z     simulation.run_convergence()
2025-01-14T13:17:21.2297035Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2297173Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2297274Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2297549Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2297666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2297669Z 
2025-01-14T13:17:21.2297940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2298142Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2298370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2298639Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2298878Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2299014Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2299018Z 
2025-01-14T13:17:21.2299112Z     def initialize_transport_state(
2025-01-14T13:17:21.2299182Z         self,
2025-01-14T13:17:21.2299270Z         simulation_state,
2025-01-14T13:17:21.2299353Z         opacity_state,
2025-01-14T13:17:21.2299428Z         macro_atom_state,
2025-01-14T13:17:21.2299505Z         plasma,
2025-01-14T13:17:21.2299580Z         no_of_packets,
2025-01-14T13:17:21.2299667Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2299739Z         iteration=0,
2025-01-14T13:17:21.2299812Z     ):
2025-01-14T13:17:21.2299936Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2300040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2300113Z         else:
2025-01-14T13:17:21.2300196Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2300262Z     
2025-01-14T13:17:21.2300406Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2300502Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2300577Z         )
2025-01-14T13:17:21.2300644Z     
2025-01-14T13:17:21.2300779Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2300895Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2301053Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2301129Z         else:
2025-01-14T13:17:21.2301212Z             continuum_state = None
2025-01-14T13:17:21.2301318Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2301427Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2301527Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2301733Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2301839Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2301940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2302039Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2302110Z         ).to_numba(
2025-01-14T13:17:21.2302196Z             macro_atom_state,
2025-01-14T13:17:21.2302285Z             self.line_interaction_type,
2025-01-14T13:17:21.2302366Z         )
2025-01-14T13:17:21.2302468Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2302747Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2302824Z         ]
2025-01-14T13:17:21.2303123Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2303127Z 
2025-01-14T13:17:21.2303282Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2303483Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-14T13:17:21.2303487Z 
2025-01-14T13:17:21.2304167Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2304645Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2304650Z 
2025-01-14T13:17:21.2304740Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2304883Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2304950Z         """
2025-01-14T13:17:21.2305097Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2305163Z     
2025-01-14T13:17:21.2305242Z         Parameters
2025-01-14T13:17:21.2305313Z         ----------
2025-01-14T13:17:21.2305460Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2305687Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2305809Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2305883Z             Atomic data.
2025-01-14T13:17:21.2305954Z     
2025-01-14T13:17:21.2306023Z         Returns
2025-01-14T13:17:21.2306104Z         -------
2025-01-14T13:17:21.2306216Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2306296Z             Simulation object.
2025-01-14T13:17:21.2306370Z         """
2025-01-14T13:17:21.2306520Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2306693Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2306807Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2306936Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2307068Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2307249Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2307387Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2307491Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2307587Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2307675Z >       sim = run_tardis(
2025-01-14T13:17:21.2307763Z             config_verysimple,
2025-01-14T13:17:21.2307844Z             atom_data=atomic_data,
2025-01-14T13:17:21.2307939Z             show_convergence_plots=False,
2025-01-14T13:17:21.2308020Z             log_level="CRITICAl",
2025-01-14T13:17:21.2308094Z         )
2025-01-14T13:17:21.2308097Z 
2025-01-14T13:17:21.2308235Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2308353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2308438Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2308531Z     simulation.run_convergence()
2025-01-14T13:17:21.2308644Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2308793Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2308886Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2309048Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2309165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2309169Z 
2025-01-14T13:17:21.2309431Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2309637Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2309859Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2310138Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2310296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2310443Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2310446Z 
2025-01-14T13:17:21.2310535Z     def initialize_transport_state(
2025-01-14T13:17:21.2310613Z         self,
2025-01-14T13:17:21.2310698Z         simulation_state,
2025-01-14T13:17:21.2310871Z         opacity_state,
2025-01-14T13:17:21.2310953Z         macro_atom_state,
2025-01-14T13:17:21.2311027Z         plasma,
2025-01-14T13:17:21.2311108Z         no_of_packets,
2025-01-14T13:17:21.2311191Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2311271Z         iteration=0,
2025-01-14T13:17:21.2311338Z     ):
2025-01-14T13:17:21.2311468Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2311728Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2311850Z         else:
2025-01-14T13:17:21.2311967Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2312041Z     
2025-01-14T13:17:21.2312177Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2312404Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2312478Z         )
2025-01-14T13:17:21.2312553Z     
2025-01-14T13:17:21.2312690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2312802Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2312969Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2313039Z         else:
2025-01-14T13:17:21.2313128Z             continuum_state = None
2025-01-14T13:17:21.2313228Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2313341Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2313434Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2313545Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2313642Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2313741Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2313836Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2313915Z         ).to_numba(
2025-01-14T13:17:21.2313995Z             macro_atom_state,
2025-01-14T13:17:21.2314089Z             self.line_interaction_type,
2025-01-14T13:17:21.2314166Z         )
2025-01-14T13:17:21.2314272Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2314549Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2314617Z         ]
2025-01-14T13:17:21.2314916Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2314920Z 
2025-01-14T13:17:21.2315064Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2315269Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-14T13:17:21.2315273Z 
2025-01-14T13:17:21.2315937Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2316289Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2316296Z 
2025-01-14T13:17:21.2316389Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2316526Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2316601Z         """
2025-01-14T13:17:21.2316743Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2316818Z     
2025-01-14T13:17:21.2316893Z         Parameters
2025-01-14T13:17:21.2316974Z         ----------
2025-01-14T13:17:21.2317116Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2317245Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2317361Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2317444Z             Atomic data.
2025-01-14T13:17:21.2317515Z     
2025-01-14T13:17:21.2317584Z         Returns
2025-01-14T13:17:21.2317659Z         -------
2025-01-14T13:17:21.2317765Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2317990Z             Simulation object.
2025-01-14T13:17:21.2318057Z         """
2025-01-14T13:17:21.2318211Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2318381Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2318500Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2318622Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2318764Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2318939Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2319075Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2319288Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2319385Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2319467Z >       sim = run_tardis(
2025-01-14T13:17:21.2319549Z             config_verysimple,
2025-01-14T13:17:21.2319647Z             atom_data=atomic_data,
2025-01-14T13:17:21.2319740Z             show_convergence_plots=False,
2025-01-14T13:17:21.2319826Z             log_level="CRITICAl",
2025-01-14T13:17:21.2319895Z         )
2025-01-14T13:17:21.2319898Z 
2025-01-14T13:17:21.2320040Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2320150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2320239Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2320324Z     simulation.run_convergence()
2025-01-14T13:17:21.2320445Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2320586Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2320690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2320849Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2320956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2320967Z 
2025-01-14T13:17:21.2321234Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2321438Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2321779Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2322052Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2322214Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2322349Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2322359Z 
2025-01-14T13:17:21.2322451Z     def initialize_transport_state(
2025-01-14T13:17:21.2322525Z         self,
2025-01-14T13:17:21.2322602Z         simulation_state,
2025-01-14T13:17:21.2322683Z         opacity_state,
2025-01-14T13:17:21.2322759Z         macro_atom_state,
2025-01-14T13:17:21.2322841Z         plasma,
2025-01-14T13:17:21.2322914Z         no_of_packets,
2025-01-14T13:17:21.2322999Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2323071Z         iteration=0,
2025-01-14T13:17:21.2323146Z     ):
2025-01-14T13:17:21.2323270Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2323372Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2323444Z         else:
2025-01-14T13:17:21.2323530Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2323597Z     
2025-01-14T13:17:21.2323739Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2323834Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2323908Z         )
2025-01-14T13:17:21.2323985Z     
2025-01-14T13:17:21.2324113Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2324231Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2324383Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2324595Z         else:
2025-01-14T13:17:21.2324679Z             continuum_state = None
2025-01-14T13:17:21.2324788Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2324896Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2324995Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2325103Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2325208Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2325299Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2325400Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2325478Z         ).to_numba(
2025-01-14T13:17:21.2325662Z             macro_atom_state,
2025-01-14T13:17:21.2325760Z             self.line_interaction_type,
2025-01-14T13:17:21.2325833Z         )
2025-01-14T13:17:21.2325939Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2326206Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2326283Z         ]
2025-01-14T13:17:21.2326581Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2326585Z 
2025-01-14T13:17:21.2326735Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2326935Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-14T13:17:21.2326939Z 
2025-01-14T13:17:21.2327616Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2327965Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2327973Z 
2025-01-14T13:17:21.2328059Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2328201Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2328268Z         """
2025-01-14T13:17:21.2328415Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2328481Z     
2025-01-14T13:17:21.2328562Z         Parameters
2025-01-14T13:17:21.2328633Z         ----------
2025-01-14T13:17:21.2328780Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2328901Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2329020Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2329101Z             Atomic data.
2025-01-14T13:17:21.2329171Z     
2025-01-14T13:17:21.2329246Z         Returns
2025-01-14T13:17:21.2329315Z         -------
2025-01-14T13:17:21.2329424Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2329502Z             Simulation object.
2025-01-14T13:17:21.2329582Z         """
2025-01-14T13:17:21.2329730Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2329905Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2330017Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2330145Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2330277Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2330454Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2330592Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2330692Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2330796Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2330872Z >       sim = run_tardis(
2025-01-14T13:17:21.2330958Z             config_verysimple,
2025-01-14T13:17:21.2331039Z             atom_data=atomic_data,
2025-01-14T13:17:21.2331234Z             show_convergence_plots=False,
2025-01-14T13:17:21.2331314Z             log_level="CRITICAl",
2025-01-14T13:17:21.2331390Z         )
2025-01-14T13:17:21.2331394Z 
2025-01-14T13:17:21.2331533Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2331757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2331843Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2331934Z     simulation.run_convergence()
2025-01-14T13:17:21.2332053Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2332195Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2332293Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2332558Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2332676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2332679Z 
2025-01-14T13:17:21.2332957Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2333169Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2333390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2333670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2333829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2333970Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2333974Z 
2025-01-14T13:17:21.2334067Z     def initialize_transport_state(
2025-01-14T13:17:21.2334141Z         self,
2025-01-14T13:17:21.2334240Z         simulation_state,
2025-01-14T13:17:21.2334314Z         opacity_state,
2025-01-14T13:17:21.2334396Z         macro_atom_state,
2025-01-14T13:17:21.2334468Z         plasma,
2025-01-14T13:17:21.2334547Z         no_of_packets,
2025-01-14T13:17:21.2334634Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2334712Z         iteration=0,
2025-01-14T13:17:21.2334779Z     ):
2025-01-14T13:17:21.2334911Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2335005Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2335079Z         else:
2025-01-14T13:17:21.2335157Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2335229Z     
2025-01-14T13:17:21.2335368Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2335465Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2335537Z         )
2025-01-14T13:17:21.2335604Z     
2025-01-14T13:17:21.2335740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2335852Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2336008Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2336076Z         else:
2025-01-14T13:17:21.2336166Z             continuum_state = None
2025-01-14T13:17:21.2336267Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2336378Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2336471Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2336581Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2336678Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2336774Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2336870Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2336941Z         ).to_numba(
2025-01-14T13:17:21.2337027Z             macro_atom_state,
2025-01-14T13:17:21.2337117Z             self.line_interaction_type,
2025-01-14T13:17:21.2337189Z         )
2025-01-14T13:17:21.2337290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2337563Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2337748Z         ]
2025-01-14T13:17:21.2338052Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2338057Z 
2025-01-14T13:17:21.2338203Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2338409Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-14T13:17:21.2338413Z 
2025-01-14T13:17:21.2339080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2339507Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2339512Z 
2025-01-14T13:17:21.2339606Z     @pytest.fixture(scope="module")
2025-01-14T13:17:21.2339752Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2339825Z         """
2025-01-14T13:17:21.2339967Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:17:21.2340037Z     
2025-01-14T13:17:21.2340111Z         Parameters
2025-01-14T13:17:21.2340188Z         ----------
2025-01-14T13:17:21.2340335Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:17:21.2340459Z             Configuration object for a very simple simulation.
2025-01-14T13:17:21.2340576Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:17:21.2340649Z             Atomic data.
2025-01-14T13:17:21.2340720Z     
2025-01-14T13:17:21.2340789Z         Returns
2025-01-14T13:17:21.2340868Z         -------
2025-01-14T13:17:21.2340972Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:17:21.2341058Z             Simulation object.
2025-01-14T13:17:21.2341125Z         """
2025-01-14T13:17:21.2341277Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:17:21.2341452Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:17:21.2341665Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:17:21.2341790Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:17:21.2341928Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:17:21.2342105Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:17:21.2342235Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:17:21.2342342Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:17:21.2342434Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2342519Z >       sim = run_tardis(
2025-01-14T13:17:21.2342598Z             config_verysimple,
2025-01-14T13:17:21.2342683Z             atom_data=atomic_data,
2025-01-14T13:17:21.2342772Z             show_convergence_plots=False,
2025-01-14T13:17:21.2342860Z             log_level="CRITICAl",
2025-01-14T13:17:21.2342927Z         )
2025-01-14T13:17:21.2342931Z 
2025-01-14T13:17:21.2343071Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:17:21.2343180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2343268Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2343360Z     simulation.run_convergence()
2025-01-14T13:17:21.2343473Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2343616Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2343708Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2343864Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2343975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2343978Z 
2025-01-14T13:17:21.2344248Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378bd8ff50>
2025-01-14T13:17:21.2344594Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3786296e70>
2025-01-14T13:17:21.2344817Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fa39e0>
2025-01-14T13:17:21.2345086Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a1dfeff0>
2025-01-14T13:17:21.2345247Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3788750290>
2025-01-14T13:17:21.2345387Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2345391Z 
2025-01-14T13:17:21.2345477Z     def initialize_transport_state(
2025-01-14T13:17:21.2345549Z         self,
2025-01-14T13:17:21.2345627Z         simulation_state,
2025-01-14T13:17:21.2345815Z         opacity_state,
2025-01-14T13:17:21.2345894Z         macro_atom_state,
2025-01-14T13:17:21.2345970Z         plasma,
2025-01-14T13:17:21.2346043Z         no_of_packets,
2025-01-14T13:17:21.2346128Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2346206Z         iteration=0,
2025-01-14T13:17:21.2346278Z     ):
2025-01-14T13:17:21.2346402Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2346505Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2346573Z         else:
2025-01-14T13:17:21.2346656Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2346727Z     
2025-01-14T13:17:21.2346858Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2346959Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2347025Z         )
2025-01-14T13:17:21.2347096Z     
2025-01-14T13:17:21.2347224Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2347344Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2347496Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2347568Z         else:
2025-01-14T13:17:21.2347649Z             continuum_state = None
2025-01-14T13:17:21.2347762Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2347868Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2347964Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2348067Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2348167Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2348265Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2348356Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2348432Z         ).to_numba(
2025-01-14T13:17:21.2348509Z             macro_atom_state,
2025-01-14T13:17:21.2348601Z             self.line_interaction_type,
2025-01-14T13:17:21.2348667Z         )
2025-01-14T13:17:21.2348781Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2349049Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2349124Z         ]
2025-01-14T13:17:21.2349428Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2349432Z 
2025-01-14T13:17:21.2349584Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2349878Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2349882Z 
2025-01-14T13:17:21.2350554Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2350918Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2350922Z 
2025-01-14T13:17:21.2351012Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2351171Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2351369Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2351705Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2351859Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2351974Z >       sim.run_final()
2025-01-14T13:17:21.2351979Z 
2025-01-14T13:17:21.2352071Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2352183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2352289Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2352433Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2352533Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2352815Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2352935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2352939Z 
2025-01-14T13:17:21.2353213Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2353421Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2353648Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2353920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2354085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2354222Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2354226Z 
2025-01-14T13:17:21.2354317Z     def initialize_transport_state(
2025-01-14T13:17:21.2354391Z         self,
2025-01-14T13:17:21.2354473Z         simulation_state,
2025-01-14T13:17:21.2354548Z         opacity_state,
2025-01-14T13:17:21.2354629Z         macro_atom_state,
2025-01-14T13:17:21.2354699Z         plasma,
2025-01-14T13:17:21.2354779Z         no_of_packets,
2025-01-14T13:17:21.2354870Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2354942Z         iteration=0,
2025-01-14T13:17:21.2355016Z     ):
2025-01-14T13:17:21.2355144Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2355246Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2355315Z         else:
2025-01-14T13:17:21.2355398Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2355464Z     
2025-01-14T13:17:21.2355602Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2355700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2355773Z         )
2025-01-14T13:17:21.2355840Z     
2025-01-14T13:17:21.2355977Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2356090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2356246Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2356314Z         else:
2025-01-14T13:17:21.2356405Z             continuum_state = None
2025-01-14T13:17:21.2356511Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2356617Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2356715Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2356820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2356925Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2357017Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2357113Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2357184Z         ).to_numba(
2025-01-14T13:17:21.2357276Z             macro_atom_state,
2025-01-14T13:17:21.2357389Z             self.line_interaction_type,
2025-01-14T13:17:21.2357472Z         )
2025-01-14T13:17:21.2357573Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2357845Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2358066Z         ]
2025-01-14T13:17:21.2358372Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2358376Z 
2025-01-14T13:17:21.2358527Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2358809Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2358813Z 
2025-01-14T13:17:21.2359563Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2359913Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2359923Z 
2025-01-14T13:17:21.2360015Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2360180Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2360276Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2360456Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2360543Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2360626Z >       sim.run_final()
2025-01-14T13:17:21.2360630Z 
2025-01-14T13:17:21.2360711Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2360825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2360923Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2361072Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2361166Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2361324Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2361435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2361445Z 
2025-01-14T13:17:21.2361823Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2362036Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2362257Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2362533Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2362691Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2362831Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2362835Z 
2025-01-14T13:17:21.2362925Z     def initialize_transport_state(
2025-01-14T13:17:21.2363000Z         self,
2025-01-14T13:17:21.2363083Z         simulation_state,
2025-01-14T13:17:21.2363158Z         opacity_state,
2025-01-14T13:17:21.2363241Z         macro_atom_state,
2025-01-14T13:17:21.2363316Z         plasma,
2025-01-14T13:17:21.2363393Z         no_of_packets,
2025-01-14T13:17:21.2363473Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2363549Z         iteration=0,
2025-01-14T13:17:21.2363615Z     ):
2025-01-14T13:17:21.2363741Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2363835Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2363910Z         else:
2025-01-14T13:17:21.2363988Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2364062Z     
2025-01-14T13:17:21.2364196Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2364298Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2364366Z         )
2025-01-14T13:17:21.2364444Z     
2025-01-14T13:17:21.2364577Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2364690Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2364848Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2365042Z         else:
2025-01-14T13:17:21.2365131Z             continuum_state = None
2025-01-14T13:17:21.2365230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2365341Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2365431Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2365541Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2365638Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2365735Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2365825Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2365902Z         ).to_numba(
2025-01-14T13:17:21.2366082Z             macro_atom_state,
2025-01-14T13:17:21.2366176Z             self.line_interaction_type,
2025-01-14T13:17:21.2366247Z         )
2025-01-14T13:17:21.2366349Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2366633Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2366699Z         ]
2025-01-14T13:17:21.2367002Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2367006Z 
2025-01-14T13:17:21.2367154Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2367447Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2367452Z 
2025-01-14T13:17:21.2368109Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2368458Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2368466Z 
2025-01-14T13:17:21.2368559Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2368709Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2368809Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2368982Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2369073Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2369147Z >       sim.run_final()
2025-01-14T13:17:21.2369151Z 
2025-01-14T13:17:21.2369237Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2369344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2369447Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2369597Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2369691Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2369846Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2369955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2369959Z 
2025-01-14T13:17:21.2370227Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2370429Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2370660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2370939Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2371101Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2371243Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2371247Z 
2025-01-14T13:17:21.2371333Z     def initialize_transport_state(
2025-01-14T13:17:21.2371407Z         self,
2025-01-14T13:17:21.2371483Z         simulation_state,
2025-01-14T13:17:21.2371827Z         opacity_state,
2025-01-14T13:17:21.2371905Z         macro_atom_state,
2025-01-14T13:17:21.2371982Z         plasma,
2025-01-14T13:17:21.2372055Z         no_of_packets,
2025-01-14T13:17:21.2372165Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2372238Z         iteration=0,
2025-01-14T13:17:21.2372314Z     ):
2025-01-14T13:17:21.2372440Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2372538Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2372606Z         else:
2025-01-14T13:17:21.2372690Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2372761Z     
2025-01-14T13:17:21.2372893Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2373104Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2373176Z         )
2025-01-14T13:17:21.2373247Z     
2025-01-14T13:17:21.2373373Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2373490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2373646Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2373719Z         else:
2025-01-14T13:17:21.2373800Z             continuum_state = None
2025-01-14T13:17:21.2373903Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2374011Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2374105Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2374210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2374313Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2374410Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2374504Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2374580Z         ).to_numba(
2025-01-14T13:17:21.2374656Z             macro_atom_state,
2025-01-14T13:17:21.2374751Z             self.line_interaction_type,
2025-01-14T13:17:21.2374818Z         )
2025-01-14T13:17:21.2374927Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2375195Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2375267Z         ]
2025-01-14T13:17:21.2375565Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2375569Z 
2025-01-14T13:17:21.2375719Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2375968Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[None-packet_in_nu] _
2025-01-14T13:17:21.2375972Z 
2025-01-14T13:17:21.2376631Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2376980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2376987Z 
2025-01-14T13:17:21.2377077Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2377233Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2377328Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2377506Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2377597Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2377671Z >       sim.run_final()
2025-01-14T13:17:21.2377674Z 
2025-01-14T13:17:21.2377759Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2377866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2377970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2378111Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2378208Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2378476Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2378589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2378593Z 
2025-01-14T13:17:21.2378853Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2383664Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2383950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2384250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2384597Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2384749Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2384754Z 
2025-01-14T13:17:21.2384851Z     def initialize_transport_state(
2025-01-14T13:17:21.2384921Z         self,
2025-01-14T13:17:21.2385011Z         simulation_state,
2025-01-14T13:17:21.2385084Z         opacity_state,
2025-01-14T13:17:21.2385167Z         macro_atom_state,
2025-01-14T13:17:21.2385238Z         plasma,
2025-01-14T13:17:21.2385317Z         no_of_packets,
2025-01-14T13:17:21.2385399Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2385480Z         iteration=0,
2025-01-14T13:17:21.2385547Z     ):
2025-01-14T13:17:21.2385684Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2385787Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2385856Z         else:
2025-01-14T13:17:21.2385939Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2386005Z     
2025-01-14T13:17:21.2386155Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2386253Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2386325Z         )
2025-01-14T13:17:21.2386390Z     
2025-01-14T13:17:21.2386527Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2386648Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2386810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2386878Z         else:
2025-01-14T13:17:21.2386965Z             continuum_state = None
2025-01-14T13:17:21.2387067Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2387179Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2387274Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2387379Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2387483Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2387580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2387675Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2387745Z         ).to_numba(
2025-01-14T13:17:21.2387826Z             macro_atom_state,
2025-01-14T13:17:21.2387914Z             self.line_interaction_type,
2025-01-14T13:17:21.2387989Z         )
2025-01-14T13:17:21.2388088Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2388367Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2388433Z         ]
2025-01-14T13:17:21.2388745Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2388750Z 
2025-01-14T13:17:21.2388906Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2389188Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2389192Z 
2025-01-14T13:17:21.2389873Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2390339Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2390344Z 
2025-01-14T13:17:21.2390440Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2390597Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2390702Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2390881Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2390967Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2391046Z >       sim.run_final()
2025-01-14T13:17:21.2391051Z 
2025-01-14T13:17:21.2391131Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2391328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2391433Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2391720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2391902Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2392075Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2392187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2392196Z 
2025-01-14T13:17:21.2392459Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2392667Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2392889Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2393172Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2393337Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2393479Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2393483Z 
2025-01-14T13:17:21.2393576Z     def initialize_transport_state(
2025-01-14T13:17:21.2393652Z         self,
2025-01-14T13:17:21.2393731Z         simulation_state,
2025-01-14T13:17:21.2393811Z         opacity_state,
2025-01-14T13:17:21.2393892Z         macro_atom_state,
2025-01-14T13:17:21.2393962Z         plasma,
2025-01-14T13:17:21.2394039Z         no_of_packets,
2025-01-14T13:17:21.2394121Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2394198Z         iteration=0,
2025-01-14T13:17:21.2394265Z     ):
2025-01-14T13:17:21.2394399Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2394494Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2394567Z         else:
2025-01-14T13:17:21.2394645Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2394720Z     
2025-01-14T13:17:21.2394857Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2394960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2395027Z         )
2025-01-14T13:17:21.2395101Z     
2025-01-14T13:17:21.2395230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2395350Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2395507Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2395576Z         else:
2025-01-14T13:17:21.2395663Z             continuum_state = None
2025-01-14T13:17:21.2395763Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2395875Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2395965Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2396075Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2396176Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2396278Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2396368Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2396444Z         ).to_numba(
2025-01-14T13:17:21.2396648Z             macro_atom_state,
2025-01-14T13:17:21.2396740Z             self.line_interaction_type,
2025-01-14T13:17:21.2396807Z         )
2025-01-14T13:17:21.2396913Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2397188Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2397256Z         ]
2025-01-14T13:17:21.2397563Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2397567Z 
2025-01-14T13:17:21.2397717Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2398131Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2398136Z 
2025-01-14T13:17:21.2398803Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2399161Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2399166Z 
2025-01-14T13:17:21.2399261Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2399415Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2399519Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2399693Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2399785Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2399860Z >       sim.run_final()
2025-01-14T13:17:21.2399869Z 
2025-01-14T13:17:21.2399956Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2400066Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2400169Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2400314Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2400415Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2400573Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2400679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2400683Z 
2025-01-14T13:17:21.2400955Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2401156Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2401380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2401757Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2401920Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2402058Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2402071Z 
2025-01-14T13:17:21.2402159Z     def initialize_transport_state(
2025-01-14T13:17:21.2402231Z         self,
2025-01-14T13:17:21.2402308Z         simulation_state,
2025-01-14T13:17:21.2402386Z         opacity_state,
2025-01-14T13:17:21.2402463Z         macro_atom_state,
2025-01-14T13:17:21.2402537Z         plasma,
2025-01-14T13:17:21.2402609Z         no_of_packets,
2025-01-14T13:17:21.2402695Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2402768Z         iteration=0,
2025-01-14T13:17:21.2402840Z     ):
2025-01-14T13:17:21.2402964Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2403062Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2403134Z         else:
2025-01-14T13:17:21.2403216Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2403282Z     
2025-01-14T13:17:21.2403425Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2403521Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2403720Z         )
2025-01-14T13:17:21.2403792Z     
2025-01-14T13:17:21.2403920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2404037Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2404190Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2404263Z         else:
2025-01-14T13:17:21.2404344Z             continuum_state = None
2025-01-14T13:17:21.2404448Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2404555Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2404649Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2404863Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2404969Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2405062Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2405157Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2405238Z         ).to_numba(
2025-01-14T13:17:21.2405316Z             macro_atom_state,
2025-01-14T13:17:21.2405410Z             self.line_interaction_type,
2025-01-14T13:17:21.2405476Z         )
2025-01-14T13:17:21.2405583Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2405852Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2405924Z         ]
2025-01-14T13:17:21.2406223Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2406227Z 
2025-01-14T13:17:21.2406379Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2406661Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2406665Z 
2025-01-14T13:17:21.2407334Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2407688Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2407692Z 
2025-01-14T13:17:21.2407780Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2407934Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2408029Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2408208Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2408299Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2408380Z >       sim.run_final()
2025-01-14T13:17:21.2408383Z 
2025-01-14T13:17:21.2408469Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2408577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2408682Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2408819Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2408918Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2409070Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2409181Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2409185Z 
2025-01-14T13:17:21.2409447Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2409652Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2409880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2410157Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2410318Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2410545Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2410549Z 
2025-01-14T13:17:21.2410641Z     def initialize_transport_state(
2025-01-14T13:17:21.2410710Z         self,
2025-01-14T13:17:21.2410791Z         simulation_state,
2025-01-14T13:17:21.2410866Z         opacity_state,
2025-01-14T13:17:21.2410950Z         macro_atom_state,
2025-01-14T13:17:21.2411020Z         plasma,
2025-01-14T13:17:21.2411098Z         no_of_packets,
2025-01-14T13:17:21.2411180Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2411258Z         iteration=0,
2025-01-14T13:17:21.2411324Z     ):
2025-01-14T13:17:21.2411451Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2411781Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2411855Z         else:
2025-01-14T13:17:21.2411939Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2412006Z     
2025-01-14T13:17:21.2412147Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2412246Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2412320Z         )
2025-01-14T13:17:21.2412386Z     
2025-01-14T13:17:21.2412519Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2412628Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2412783Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2412851Z         else:
2025-01-14T13:17:21.2412937Z             continuum_state = None
2025-01-14T13:17:21.2413037Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2413146Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2413243Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2413354Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2413456Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2413549Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2413648Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2413718Z         ).to_numba(
2025-01-14T13:17:21.2413801Z             macro_atom_state,
2025-01-14T13:17:21.2413889Z             self.line_interaction_type,
2025-01-14T13:17:21.2413961Z         )
2025-01-14T13:17:21.2414061Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2414332Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2414398Z         ]
2025-01-14T13:17:21.2414705Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2414710Z 
2025-01-14T13:17:21.2414866Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2415109Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-None-packet_in_nu] _
2025-01-14T13:17:21.2415113Z 
2025-01-14T13:17:21.2415778Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2416125Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2416130Z 
2025-01-14T13:17:21.2416222Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2416374Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2416473Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2416654Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2416739Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2416820Z >       sim.run_final()
2025-01-14T13:17:21.2416823Z 
2025-01-14T13:17:21.2416905Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2417016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2417233Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2417377Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2417471Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2417625Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2417728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2417733Z 
2025-01-14T13:17:21.2417999Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2418278Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2418500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2418777Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2418941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2419082Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2419086Z 
2025-01-14T13:17:21.2419173Z     def initialize_transport_state(
2025-01-14T13:17:21.2419250Z         self,
2025-01-14T13:17:21.2419326Z         simulation_state,
2025-01-14T13:17:21.2419408Z         opacity_state,
2025-01-14T13:17:21.2419482Z         macro_atom_state,
2025-01-14T13:17:21.2419555Z         plasma,
2025-01-14T13:17:21.2419632Z         no_of_packets,
2025-01-14T13:17:21.2419712Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2419792Z         iteration=0,
2025-01-14T13:17:21.2419859Z     ):
2025-01-14T13:17:21.2419992Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2420084Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2420157Z         else:
2025-01-14T13:17:21.2420234Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2420310Z     
2025-01-14T13:17:21.2420443Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2420542Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2420610Z         )
2025-01-14T13:17:21.2420682Z     
2025-01-14T13:17:21.2420806Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2420920Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2421070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2421144Z         else:
2025-01-14T13:17:21.2421232Z             continuum_state = None
2025-01-14T13:17:21.2421330Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2421443Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2421533Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2421734Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2421832Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2421934Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2422023Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2422099Z         ).to_numba(
2025-01-14T13:17:21.2422178Z             macro_atom_state,
2025-01-14T13:17:21.2422269Z             self.line_interaction_type,
2025-01-14T13:17:21.2422336Z         )
2025-01-14T13:17:21.2422440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2422707Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2422779Z         ]
2025-01-14T13:17:21.2423085Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2423089Z 
2025-01-14T13:17:21.2423238Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2423538Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2423660Z 
2025-01-14T13:17:21.2424321Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2424669Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2424673Z 
2025-01-14T13:17:21.2424764Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2424912Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2425010Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2425306Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2425400Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2425475Z >       sim.run_final()
2025-01-14T13:17:21.2425485Z 
2025-01-14T13:17:21.2425569Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2425676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2425777Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2425918Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2426014Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2426170Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2426274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2426278Z 
2025-01-14T13:17:21.2426543Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2426743Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2426966Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2427235Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2427400Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2427535Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2427544Z 
2025-01-14T13:17:21.2427633Z     def initialize_transport_state(
2025-01-14T13:17:21.2427706Z         self,
2025-01-14T13:17:21.2427782Z         simulation_state,
2025-01-14T13:17:21.2427861Z         opacity_state,
2025-01-14T13:17:21.2427935Z         macro_atom_state,
2025-01-14T13:17:21.2428011Z         plasma,
2025-01-14T13:17:21.2428083Z         no_of_packets,
2025-01-14T13:17:21.2428168Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2428244Z         iteration=0,
2025-01-14T13:17:21.2428317Z     ):
2025-01-14T13:17:21.2428439Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2428537Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2428606Z         else:
2025-01-14T13:17:21.2428694Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2428760Z     
2025-01-14T13:17:21.2428898Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2429001Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2429070Z         )
2025-01-14T13:17:21.2429143Z     
2025-01-14T13:17:21.2429268Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2429382Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2429531Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2429605Z         else:
2025-01-14T13:17:21.2429685Z             continuum_state = None
2025-01-14T13:17:21.2429792Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2429897Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2429991Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2430094Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2430289Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2430381Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2430477Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2430552Z         ).to_numba(
2025-01-14T13:17:21.2430630Z             macro_atom_state,
2025-01-14T13:17:21.2430721Z             self.line_interaction_type,
2025-01-14T13:17:21.2430787Z         )
2025-01-14T13:17:21.2430891Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2431157Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2431229Z         ]
2025-01-14T13:17:21.2431801Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2431811Z 
2025-01-14T13:17:21.2432006Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2432307Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2432311Z 
2025-01-14T13:17:21.2432975Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2433324Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2433327Z 
2025-01-14T13:17:21.2433416Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2433580Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2433673Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2433848Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2433933Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2434016Z >       sim.run_final()
2025-01-14T13:17:21.2434020Z 
2025-01-14T13:17:21.2434104Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2434211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2434313Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2434449Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2434548Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2434698Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2434806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2434810Z 
2025-01-14T13:17:21.2435074Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2435275Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2435492Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2435768Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2435929Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2436064Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2436068Z 
2025-01-14T13:17:21.2436159Z     def initialize_transport_state(
2025-01-14T13:17:21.2436227Z         self,
2025-01-14T13:17:21.2436308Z         simulation_state,
2025-01-14T13:17:21.2436384Z         opacity_state,
2025-01-14T13:17:21.2436465Z         macro_atom_state,
2025-01-14T13:17:21.2436535Z         plasma,
2025-01-14T13:17:21.2436613Z         no_of_packets,
2025-01-14T13:17:21.2436700Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2436779Z         iteration=0,
2025-01-14T13:17:21.2436846Z     ):
2025-01-14T13:17:21.2436975Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2437193Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2437261Z         else:
2025-01-14T13:17:21.2437343Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2437410Z     
2025-01-14T13:17:21.2437552Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2437648Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2437719Z         )
2025-01-14T13:17:21.2437785Z     
2025-01-14T13:17:21.2437915Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2438025Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2438180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2438248Z         else:
2025-01-14T13:17:21.2438428Z             continuum_state = None
2025-01-14T13:17:21.2438529Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2438640Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2438730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2438844Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2438945Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2439037Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2439131Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2439200Z         ).to_numba(
2025-01-14T13:17:21.2439282Z             macro_atom_state,
2025-01-14T13:17:21.2439368Z             self.line_interaction_type,
2025-01-14T13:17:21.2439440Z         )
2025-01-14T13:17:21.2439541Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2439817Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2439883Z         ]
2025-01-14T13:17:21.2440184Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2440188Z 
2025-01-14T13:17:21.2440344Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2440634Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2440638Z 
2025-01-14T13:17:21.2441299Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2441743Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2441747Z 
2025-01-14T13:17:21.2441842Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2441996Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2442096Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2442271Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2442360Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2442440Z >       sim.run_final()
2025-01-14T13:17:21.2442444Z 
2025-01-14T13:17:21.2442524Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2442636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2442731Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2442875Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2442967Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2443122Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2443230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2443240Z 
2025-01-14T13:17:21.2443498Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2443701Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2444041Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2444317Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2444473Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2444611Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2444615Z 
2025-01-14T13:17:21.2444701Z     def initialize_transport_state(
2025-01-14T13:17:21.2444774Z         self,
2025-01-14T13:17:21.2444850Z         simulation_state,
2025-01-14T13:17:21.2444928Z         opacity_state,
2025-01-14T13:17:21.2445004Z         macro_atom_state,
2025-01-14T13:17:21.2445181Z         plasma,
2025-01-14T13:17:21.2445262Z         no_of_packets,
2025-01-14T13:17:21.2445343Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2445419Z         iteration=0,
2025-01-14T13:17:21.2445485Z     ):
2025-01-14T13:17:21.2445619Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2445711Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2445783Z         else:
2025-01-14T13:17:21.2445860Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2445934Z     
2025-01-14T13:17:21.2446067Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2446166Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2446232Z         )
2025-01-14T13:17:21.2446302Z     
2025-01-14T13:17:21.2446427Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2446541Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2446695Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2446769Z         else:
2025-01-14T13:17:21.2446854Z             continuum_state = None
2025-01-14T13:17:21.2446953Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2447062Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2447160Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2447267Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2447363Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2447460Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2447551Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2447626Z         ).to_numba(
2025-01-14T13:17:21.2447703Z             macro_atom_state,
2025-01-14T13:17:21.2447795Z             self.line_interaction_type,
2025-01-14T13:17:21.2447865Z         )
2025-01-14T13:17:21.2447970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2448245Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2448312Z         ]
2025-01-14T13:17:21.2448610Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2448618Z 
2025-01-14T13:17:21.2448764Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2449021Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-None-packet_in_nu] _
2025-01-14T13:17:21.2449025Z 
2025-01-14T13:17:21.2449689Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2450043Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2450050Z 
2025-01-14T13:17:21.2450146Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2450298Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2450399Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2450687Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2450777Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2450852Z >       sim.run_final()
2025-01-14T13:17:21.2450855Z 
2025-01-14T13:17:21.2450939Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2451048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2451150Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2451289Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2451389Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2451635Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2451851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2451856Z 
2025-01-14T13:17:21.2452131Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2452340Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2452567Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2452837Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2452998Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2453135Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2453144Z 
2025-01-14T13:17:21.2453232Z     def initialize_transport_state(
2025-01-14T13:17:21.2453306Z         self,
2025-01-14T13:17:21.2453385Z         simulation_state,
2025-01-14T13:17:21.2453465Z         opacity_state,
2025-01-14T13:17:21.2453547Z         macro_atom_state,
2025-01-14T13:17:21.2453623Z         plasma,
2025-01-14T13:17:21.2453699Z         no_of_packets,
2025-01-14T13:17:21.2453785Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2453858Z         iteration=0,
2025-01-14T13:17:21.2453938Z     ):
2025-01-14T13:17:21.2454064Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2454164Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2454232Z         else:
2025-01-14T13:17:21.2454316Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2454382Z     
2025-01-14T13:17:21.2454521Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2454615Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2454687Z         )
2025-01-14T13:17:21.2454758Z     
2025-01-14T13:17:21.2454884Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2455000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2455154Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2455228Z         else:
2025-01-14T13:17:21.2455309Z             continuum_state = None
2025-01-14T13:17:21.2455415Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2455523Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2455619Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2455725Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2455825Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2455918Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2456012Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2456082Z         ).to_numba(
2025-01-14T13:17:21.2456164Z             macro_atom_state,
2025-01-14T13:17:21.2456257Z             self.line_interaction_type,
2025-01-14T13:17:21.2456323Z         )
2025-01-14T13:17:21.2456430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2456698Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2456770Z         ]
2025-01-14T13:17:21.2457067Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2457187Z 
2025-01-14T13:17:21.2457341Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2457624Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range0-packet_out_nu] _
2025-01-14T13:17:21.2457628Z 
2025-01-14T13:17:21.2458303Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2458735Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2458740Z 
2025-01-14T13:17:21.2458831Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2458988Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2459090Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2459268Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2459354Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2459432Z >       sim.run_final()
2025-01-14T13:17:21.2459436Z 
2025-01-14T13:17:21.2459522Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2459630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2459733Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2459873Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2459974Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2460130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2460241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2460245Z 
2025-01-14T13:17:21.2460510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2460724Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2460944Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2461221Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2461383Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2461517Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2461521Z 
2025-01-14T13:17:21.2461720Z     def initialize_transport_state(
2025-01-14T13:17:21.2461790Z         self,
2025-01-14T13:17:21.2461876Z         simulation_state,
2025-01-14T13:17:21.2461951Z         opacity_state,
2025-01-14T13:17:21.2462030Z         macro_atom_state,
2025-01-14T13:17:21.2462101Z         plasma,
2025-01-14T13:17:21.2462181Z         no_of_packets,
2025-01-14T13:17:21.2462265Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2462342Z         iteration=0,
2025-01-14T13:17:21.2462409Z     ):
2025-01-14T13:17:21.2462540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2462635Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2462708Z         else:
2025-01-14T13:17:21.2462791Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2462856Z     
2025-01-14T13:17:21.2462997Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2463096Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2463168Z         )
2025-01-14T13:17:21.2463233Z     
2025-01-14T13:17:21.2463365Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2463480Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2463637Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2463705Z         else:
2025-01-14T13:17:21.2463925Z             continuum_state = None
2025-01-14T13:17:21.2464026Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2464137Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2464226Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2464339Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2464443Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2464536Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2464630Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2464701Z         ).to_numba(
2025-01-14T13:17:21.2464782Z             macro_atom_state,
2025-01-14T13:17:21.2464868Z             self.line_interaction_type,
2025-01-14T13:17:21.2465050Z         )
2025-01-14T13:17:21.2465153Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2465431Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2465504Z         ]
2025-01-14T13:17:21.2465808Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2465812Z 
2025-01-14T13:17:21.2465964Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2466244Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range1-packet_in_nu] _
2025-01-14T13:17:21.2466248Z 
2025-01-14T13:17:21.2466908Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2467254Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2467258Z 
2025-01-14T13:17:21.2467351Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2467506Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2467607Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2467781Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2467866Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2467945Z >       sim.run_final()
2025-01-14T13:17:21.2467948Z 
2025-01-14T13:17:21.2468029Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2468147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2468242Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2468384Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2468482Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2468637Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2468742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2468749Z 
2025-01-14T13:17:21.2469017Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2469223Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2469445Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2469720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2469878Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2470017Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2470021Z 
2025-01-14T13:17:21.2470110Z     def initialize_transport_state(
2025-01-14T13:17:21.2470183Z         self,
2025-01-14T13:17:21.2470259Z         simulation_state,
2025-01-14T13:17:21.2470338Z         opacity_state,
2025-01-14T13:17:21.2470413Z         macro_atom_state,
2025-01-14T13:17:21.2470576Z         plasma,
2025-01-14T13:17:21.2470654Z         no_of_packets,
2025-01-14T13:17:21.2470736Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2470813Z         iteration=0,
2025-01-14T13:17:21.2470881Z     ):
2025-01-14T13:17:21.2471012Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2471106Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2471179Z         else:
2025-01-14T13:17:21.2471256Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2471327Z     
2025-01-14T13:17:21.2471459Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2471713Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2471828Z         )
2025-01-14T13:17:21.2471905Z     
2025-01-14T13:17:21.2472186Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2472308Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2472457Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2472540Z         else:
2025-01-14T13:17:21.2472626Z             continuum_state = None
2025-01-14T13:17:21.2472724Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2472836Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2472927Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2473036Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2473133Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2473231Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2473321Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2473396Z         ).to_numba(
2025-01-14T13:17:21.2473481Z             macro_atom_state,
2025-01-14T13:17:21.2473573Z             self.line_interaction_type,
2025-01-14T13:17:21.2473640Z         )
2025-01-14T13:17:21.2473746Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2474012Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2474101Z         ]
2025-01-14T13:17:21.2474407Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2474411Z 
2025-01-14T13:17:21.2474565Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2474853Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range2-packet_out_nu] _
2025-01-14T13:17:21.2474857Z 
2025-01-14T13:17:21.2475522Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2475875Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2475883Z 
2025-01-14T13:17:21.2475976Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2476131Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2476232Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2476407Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2476500Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2476577Z >       sim.run_final()
2025-01-14T13:17:21.2476580Z 
2025-01-14T13:17:21.2476668Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2476776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2476878Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2477022Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2477124Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2477282Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2477531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2477536Z 
2025-01-14T13:17:21.2477808Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2478009Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2478236Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2478505Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2478671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2478884Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2478894Z 
2025-01-14T13:17:21.2478983Z     def initialize_transport_state(
2025-01-14T13:17:21.2479057Z         self,
2025-01-14T13:17:21.2479134Z         simulation_state,
2025-01-14T13:17:21.2479213Z         opacity_state,
2025-01-14T13:17:21.2479293Z         macro_atom_state,
2025-01-14T13:17:21.2479367Z         plasma,
2025-01-14T13:17:21.2479443Z         no_of_packets,
2025-01-14T13:17:21.2479530Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2479603Z         iteration=0,
2025-01-14T13:17:21.2479675Z     ):
2025-01-14T13:17:21.2479799Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2479901Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2479969Z         else:
2025-01-14T13:17:21.2480054Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2480119Z     
2025-01-14T13:17:21.2480258Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2480358Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2480432Z         )
2025-01-14T13:17:21.2480505Z     
2025-01-14T13:17:21.2480631Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2480747Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2480903Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2480978Z         else:
2025-01-14T13:17:21.2481060Z             continuum_state = None
2025-01-14T13:17:21.2481167Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2481274Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2481369Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2481474Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2481685Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2481780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2481877Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2481952Z         ).to_numba(
2025-01-14T13:17:21.2482036Z             macro_atom_state,
2025-01-14T13:17:21.2482130Z             self.line_interaction_type,
2025-01-14T13:17:21.2482197Z         )
2025-01-14T13:17:21.2482304Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2482576Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2482649Z         ]
2025-01-14T13:17:21.2482944Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2482948Z 
2025-01-14T13:17:21.2483098Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2483340Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-None-packet_in_nu] _
2025-01-14T13:17:21.2483344Z 
2025-01-14T13:17:21.2484009Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2484361Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2484483Z 
2025-01-14T13:17:21.2484577Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2484735Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2484831Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2485009Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2485096Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2485177Z >       sim.run_final()
2025-01-14T13:17:21.2485181Z 
2025-01-14T13:17:21.2485262Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2485376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2485597Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2485739Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2485837Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2485987Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2486105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2486108Z 
2025-01-14T13:17:21.2486376Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2486582Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2486804Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2487084Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2487247Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2487388Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2487392Z 
2025-01-14T13:17:21.2487487Z     def initialize_transport_state(
2025-01-14T13:17:21.2487557Z         self,
2025-01-14T13:17:21.2487644Z         simulation_state,
2025-01-14T13:17:21.2487720Z         opacity_state,
2025-01-14T13:17:21.2487803Z         macro_atom_state,
2025-01-14T13:17:21.2487873Z         plasma,
2025-01-14T13:17:21.2487954Z         no_of_packets,
2025-01-14T13:17:21.2488037Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2488117Z         iteration=0,
2025-01-14T13:17:21.2488186Z     ):
2025-01-14T13:17:21.2488315Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2488409Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2488483Z         else:
2025-01-14T13:17:21.2488569Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2488636Z     
2025-01-14T13:17:21.2488781Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2488875Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2488946Z         )
2025-01-14T13:17:21.2489012Z     
2025-01-14T13:17:21.2489146Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2489262Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2489418Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2489488Z         else:
2025-01-14T13:17:21.2489574Z             continuum_state = None
2025-01-14T13:17:21.2489670Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2489782Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2489872Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2489979Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2490081Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2490174Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2490272Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2490343Z         ).to_numba(
2025-01-14T13:17:21.2490428Z             macro_atom_state,
2025-01-14T13:17:21.2490518Z             self.line_interaction_type,
2025-01-14T13:17:21.2490679Z         )
2025-01-14T13:17:21.2490783Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2491063Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2491131Z         ]
2025-01-14T13:17:21.2491469Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2491473Z 
2025-01-14T13:17:21.2491721Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2491966Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection0] _
2025-01-14T13:17:21.2491970Z 
2025-01-14T13:17:21.2492760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2493117Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2493121Z 
2025-01-14T13:17:21.2493215Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2493367Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2493471Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2493649Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2493736Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2493817Z >       sim.run_final()
2025-01-14T13:17:21.2493821Z 
2025-01-14T13:17:21.2493902Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2494021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2494118Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2494263Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2494358Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2494523Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2494629Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2494632Z 
2025-01-14T13:17:21.2494900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2495107Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2495329Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2495609Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2495770Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2495912Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2495916Z 
2025-01-14T13:17:21.2496004Z     def initialize_transport_state(
2025-01-14T13:17:21.2496082Z         self,
2025-01-14T13:17:21.2496160Z         simulation_state,
2025-01-14T13:17:21.2496245Z         opacity_state,
2025-01-14T13:17:21.2496323Z         macro_atom_state,
2025-01-14T13:17:21.2496401Z         plasma,
2025-01-14T13:17:21.2496475Z         no_of_packets,
2025-01-14T13:17:21.2496563Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2496642Z         iteration=0,
2025-01-14T13:17:21.2496709Z     ):
2025-01-14T13:17:21.2496837Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2496932Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2497009Z         else:
2025-01-14T13:17:21.2497086Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2497158Z     
2025-01-14T13:17:21.2497297Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2497403Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2497473Z         )
2025-01-14T13:17:21.2497547Z     
2025-01-14T13:17:21.2497798Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2497919Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2498069Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2498146Z         else:
2025-01-14T13:17:21.2498229Z             continuum_state = None
2025-01-14T13:17:21.2498337Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2498455Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2498546Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2498657Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2498757Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2498961Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2499058Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2499138Z         ).to_numba(
2025-01-14T13:17:21.2499218Z             macro_atom_state,
2025-01-14T13:17:21.2499320Z             self.line_interaction_type,
2025-01-14T13:17:21.2499388Z         )
2025-01-14T13:17:21.2499495Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2499762Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2499833Z         ]
2025-01-14T13:17:21.2500138Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2500142Z 
2025-01-14T13:17:21.2500287Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2500538Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-0] _
2025-01-14T13:17:21.2500542Z 
2025-01-14T13:17:21.2501204Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2501654Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2501658Z 
2025-01-14T13:17:21.2501753Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2501903Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2502003Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2502174Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2502266Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2502339Z >       sim.run_final()
2025-01-14T13:17:21.2502343Z 
2025-01-14T13:17:21.2502433Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2502541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2502643Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2502782Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2502887Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2503043Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2503147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2503150Z 
2025-01-14T13:17:21.2503417Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2503616Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2503841Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2504116Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2504276Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2504410Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2504534Z 
2025-01-14T13:17:21.2504630Z     def initialize_transport_state(
2025-01-14T13:17:21.2504705Z         self,
2025-01-14T13:17:21.2504781Z         simulation_state,
2025-01-14T13:17:21.2504862Z         opacity_state,
2025-01-14T13:17:21.2504936Z         macro_atom_state,
2025-01-14T13:17:21.2505013Z         plasma,
2025-01-14T13:17:21.2505086Z         no_of_packets,
2025-01-14T13:17:21.2505174Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2505248Z         iteration=0,
2025-01-14T13:17:21.2505320Z     ):
2025-01-14T13:17:21.2505446Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2505546Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2505615Z         else:
2025-01-14T13:17:21.2505813Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2505882Z     
2025-01-14T13:17:21.2506022Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2506117Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2506198Z         )
2025-01-14T13:17:21.2506265Z     
2025-01-14T13:17:21.2506397Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2506515Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2506664Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2506737Z         else:
2025-01-14T13:17:21.2506821Z             continuum_state = None
2025-01-14T13:17:21.2506928Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2507033Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2507130Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2507234Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2507340Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2507431Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2507528Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2507599Z         ).to_numba(
2025-01-14T13:17:21.2507687Z             macro_atom_state,
2025-01-14T13:17:21.2507777Z             self.line_interaction_type,
2025-01-14T13:17:21.2507852Z         )
2025-01-14T13:17:21.2507959Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2508227Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2508303Z         ]
2025-01-14T13:17:21.2508601Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2508604Z 
2025-01-14T13:17:21.2508756Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2509005Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-1] _
2025-01-14T13:17:21.2509009Z 
2025-01-14T13:17:21.2509679Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2510031Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2510035Z 
2025-01-14T13:17:21.2510124Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2510282Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2510379Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2510556Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2510642Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2510722Z >       sim.run_final()
2025-01-14T13:17:21.2510729Z 
2025-01-14T13:17:21.2510813Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2510929Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2511035Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2511274Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2511374Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2511526Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2511850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2511857Z 
2025-01-14T13:17:21.2512130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2512341Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2512571Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2512973Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2513149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2513286Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2513296Z 
2025-01-14T13:17:21.2513391Z     def initialize_transport_state(
2025-01-14T13:17:21.2513459Z         self,
2025-01-14T13:17:21.2513541Z         simulation_state,
2025-01-14T13:17:21.2513615Z         opacity_state,
2025-01-14T13:17:21.2513696Z         macro_atom_state,
2025-01-14T13:17:21.2513766Z         plasma,
2025-01-14T13:17:21.2513843Z         no_of_packets,
2025-01-14T13:17:21.2513924Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2514002Z         iteration=0,
2025-01-14T13:17:21.2514068Z     ):
2025-01-14T13:17:21.2514201Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2514298Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2514376Z         else:
2025-01-14T13:17:21.2514458Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2514529Z     
2025-01-14T13:17:21.2514667Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2514762Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2514840Z         )
2025-01-14T13:17:21.2514906Z     
2025-01-14T13:17:21.2515036Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2515151Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2515308Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2515377Z         else:
2025-01-14T13:17:21.2515465Z             continuum_state = None
2025-01-14T13:17:21.2515565Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2515678Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2515768Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2515883Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2515980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2516083Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2516185Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2516259Z         ).to_numba(
2025-01-14T13:17:21.2516344Z             macro_atom_state,
2025-01-14T13:17:21.2516432Z             self.line_interaction_type,
2025-01-14T13:17:21.2516505Z         )
2025-01-14T13:17:21.2516606Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2516880Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2516950Z         ]
2025-01-14T13:17:21.2517253Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2517257Z 
2025-01-14T13:17:21.2517403Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2517700Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection0] _
2025-01-14T13:17:21.2517704Z 
2025-01-14T13:17:21.2518374Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2518847Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2518851Z 
2025-01-14T13:17:21.2518948Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2519099Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2519205Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2519377Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2519546Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2519628Z >       sim.run_final()
2025-01-14T13:17:21.2519632Z 
2025-01-14T13:17:21.2519713Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2519827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2519930Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2520076Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2520170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2520326Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2520434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2520438Z 
2025-01-14T13:17:21.2520709Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2520921Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2521147Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2521424Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2521682Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2521835Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2521839Z 
2025-01-14T13:17:21.2521925Z     def initialize_transport_state(
2025-01-14T13:17:21.2521998Z         self,
2025-01-14T13:17:21.2522074Z         simulation_state,
2025-01-14T13:17:21.2522154Z         opacity_state,
2025-01-14T13:17:21.2522230Z         macro_atom_state,
2025-01-14T13:17:21.2522304Z         plasma,
2025-01-14T13:17:21.2522377Z         no_of_packets,
2025-01-14T13:17:21.2522463Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2522541Z         iteration=0,
2025-01-14T13:17:21.2522608Z     ):
2025-01-14T13:17:21.2522737Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2522835Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2522907Z         else:
2025-01-14T13:17:21.2522984Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2523055Z     
2025-01-14T13:17:21.2523188Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2523290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2523357Z         )
2025-01-14T13:17:21.2523427Z     
2025-01-14T13:17:21.2523554Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2523670Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2523821Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2523899Z         else:
2025-01-14T13:17:21.2523980Z             continuum_state = None
2025-01-14T13:17:21.2524092Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2524202Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2524294Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2524403Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2524499Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2524597Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2524811Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2524886Z         ).to_numba(
2025-01-14T13:17:21.2524964Z             macro_atom_state,
2025-01-14T13:17:21.2525056Z             self.line_interaction_type,
2025-01-14T13:17:21.2525121Z         )
2025-01-14T13:17:21.2525226Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2525489Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2525560Z         ]
2025-01-14T13:17:21.2525861Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2525865Z 
2025-01-14T13:17:21.2526138Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2526387Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-0] _
2025-01-14T13:17:21.2526391Z 
2025-01-14T13:17:21.2527061Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2527404Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2527408Z 
2025-01-14T13:17:21.2527500Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2527649Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2527749Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2527926Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2528016Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2528089Z >       sim.run_final()
2025-01-14T13:17:21.2528093Z 
2025-01-14T13:17:21.2528177Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2528289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2528389Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2528527Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2528628Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2528779Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2528888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2528891Z 
2025-01-14T13:17:21.2529157Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2529362Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2529587Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2529855Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2530023Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2530155Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2530159Z 
2025-01-14T13:17:21.2530249Z     def initialize_transport_state(
2025-01-14T13:17:21.2530317Z         self,
2025-01-14T13:17:21.2530398Z         simulation_state,
2025-01-14T13:17:21.2530476Z         opacity_state,
2025-01-14T13:17:21.2530551Z         macro_atom_state,
2025-01-14T13:17:21.2530626Z         plasma,
2025-01-14T13:17:21.2530700Z         no_of_packets,
2025-01-14T13:17:21.2530787Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2530858Z         iteration=0,
2025-01-14T13:17:21.2530930Z     ):
2025-01-14T13:17:21.2531058Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2531156Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2531224Z         else:
2025-01-14T13:17:21.2531306Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2531461Z     
2025-01-14T13:17:21.2531691Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2531788Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2531861Z         )
2025-01-14T13:17:21.2531925Z     
2025-01-14T13:17:21.2532056Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2532171Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2532320Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2532393Z         else:
2025-01-14T13:17:21.2532475Z             continuum_state = None
2025-01-14T13:17:21.2532583Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2532799Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2532897Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2533001Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2533101Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2533200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2533293Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2533363Z         ).to_numba(
2025-01-14T13:17:21.2533447Z             macro_atom_state,
2025-01-14T13:17:21.2533534Z             self.line_interaction_type,
2025-01-14T13:17:21.2533608Z         )
2025-01-14T13:17:21.2533714Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2533977Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2534048Z         ]
2025-01-14T13:17:21.2534348Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2534352Z 
2025-01-14T13:17:21.2534500Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2534739Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-1] _
2025-01-14T13:17:21.2534748Z 
2025-01-14T13:17:21.2535410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2535757Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2535761Z 
2025-01-14T13:17:21.2535849Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2536002Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2536096Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2536277Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2536362Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2536441Z >       sim.run_final()
2025-01-14T13:17:21.2536448Z 
2025-01-14T13:17:21.2536528Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2536640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2536735Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2536880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2536978Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2537130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2537238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2537242Z 
2025-01-14T13:17:21.2537501Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2537708Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2537927Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2538201Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2538486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2538626Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2538630Z 
2025-01-14T13:17:21.2538721Z     def initialize_transport_state(
2025-01-14T13:17:21.2538788Z         self,
2025-01-14T13:17:21.2538869Z         simulation_state,
2025-01-14T13:17:21.2538943Z         opacity_state,
2025-01-14T13:17:21.2539022Z         macro_atom_state,
2025-01-14T13:17:21.2539092Z         plasma,
2025-01-14T13:17:21.2539169Z         no_of_packets,
2025-01-14T13:17:21.2539250Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2539409Z         iteration=0,
2025-01-14T13:17:21.2539479Z     ):
2025-01-14T13:17:21.2539604Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2539696Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2539768Z         else:
2025-01-14T13:17:21.2539851Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2539926Z     
2025-01-14T13:17:21.2540063Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2540156Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2540229Z         )
2025-01-14T13:17:21.2540295Z     
2025-01-14T13:17:21.2540426Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2540536Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2540691Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2540761Z         else:
2025-01-14T13:17:21.2540847Z             continuum_state = None
2025-01-14T13:17:21.2540949Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2541059Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2541148Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2541255Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2541355Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2541456Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2541643Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2541717Z         ).to_numba(
2025-01-14T13:17:21.2541800Z             macro_atom_state,
2025-01-14T13:17:21.2541887Z             self.line_interaction_type,
2025-01-14T13:17:21.2541958Z         )
2025-01-14T13:17:21.2542058Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2542331Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2542398Z         ]
2025-01-14T13:17:21.2542707Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2542710Z 
2025-01-14T13:17:21.2542854Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2543099Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-2] _
2025-01-14T13:17:21.2543103Z 
2025-01-14T13:17:21.2543762Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2544106Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2544109Z 
2025-01-14T13:17:21.2544203Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2544352Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2544455Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2544627Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2544717Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2544911Z >       sim.run_final()
2025-01-14T13:17:21.2544920Z 
2025-01-14T13:17:21.2545000Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2545113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2545210Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2545353Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2545446Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2545601Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2545704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2545708Z 
2025-01-14T13:17:21.2546074Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2546276Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2546502Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2546785Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2546941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2547079Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2547083Z 
2025-01-14T13:17:21.2547167Z     def initialize_transport_state(
2025-01-14T13:17:21.2547239Z         self,
2025-01-14T13:17:21.2547316Z         simulation_state,
2025-01-14T13:17:21.2547395Z         opacity_state,
2025-01-14T13:17:21.2547469Z         macro_atom_state,
2025-01-14T13:17:21.2547544Z         plasma,
2025-01-14T13:17:21.2547615Z         no_of_packets,
2025-01-14T13:17:21.2547707Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2547780Z         iteration=0,
2025-01-14T13:17:21.2547851Z     ):
2025-01-14T13:17:21.2547979Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2548072Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2548150Z         else:
2025-01-14T13:17:21.2548227Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2548298Z     
2025-01-14T13:17:21.2548429Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2548529Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2548597Z         )
2025-01-14T13:17:21.2548668Z     
2025-01-14T13:17:21.2548794Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2548909Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2549060Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2549135Z         else:
2025-01-14T13:17:21.2549220Z             continuum_state = None
2025-01-14T13:17:21.2549327Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2549432Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2549526Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2549642Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2549739Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2549836Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2549925Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2550000Z         ).to_numba(
2025-01-14T13:17:21.2550076Z             macro_atom_state,
2025-01-14T13:17:21.2550167Z             self.line_interaction_type,
2025-01-14T13:17:21.2550233Z         )
2025-01-14T13:17:21.2550337Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2550603Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2550680Z         ]
2025-01-14T13:17:21.2550977Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2550985Z 
2025-01-14T13:17:21.2551128Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2551491Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection1] _
2025-01-14T13:17:21.2551495Z 
2025-01-14T13:17:21.2552367Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2552718Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2552722Z 
2025-01-14T13:17:21.2552813Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2553087Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2553194Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2553366Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2553463Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2553538Z >       sim.run_final()
2025-01-14T13:17:21.2553542Z 
2025-01-14T13:17:21.2553626Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2553734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2553835Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2553977Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2554076Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2554228Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2554338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2554349Z 
2025-01-14T13:17:21.2554615Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2554813Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2555042Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2555310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2555471Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2555605Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2555609Z 
2025-01-14T13:17:21.2555699Z     def initialize_transport_state(
2025-01-14T13:17:21.2555769Z         self,
2025-01-14T13:17:21.2555850Z         simulation_state,
2025-01-14T13:17:21.2555926Z         opacity_state,
2025-01-14T13:17:21.2556006Z         macro_atom_state,
2025-01-14T13:17:21.2556080Z         plasma,
2025-01-14T13:17:21.2556156Z         no_of_packets,
2025-01-14T13:17:21.2556244Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2556316Z         iteration=0,
2025-01-14T13:17:21.2556388Z     ):
2025-01-14T13:17:21.2556509Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2556611Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2556679Z         else:
2025-01-14T13:17:21.2556762Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2556828Z     
2025-01-14T13:17:21.2556964Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2557058Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2557131Z         )
2025-01-14T13:17:21.2557197Z     
2025-01-14T13:17:21.2557328Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2557438Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2557590Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2557667Z         else:
2025-01-14T13:17:21.2557749Z             continuum_state = None
2025-01-14T13:17:21.2557853Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2557959Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2558175Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2558278Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2558379Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2558470Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2558565Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2558635Z         ).to_numba(
2025-01-14T13:17:21.2558718Z             macro_atom_state,
2025-01-14T13:17:21.2558804Z             self.line_interaction_type,
2025-01-14T13:17:21.2558876Z         )
2025-01-14T13:17:21.2558977Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2559331Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2559405Z         ]
2025-01-14T13:17:21.2559701Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2559710Z 
2025-01-14T13:17:21.2559860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2560105Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-0] _
2025-01-14T13:17:21.2560109Z 
2025-01-14T13:17:21.2560766Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2561113Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2561117Z 
2025-01-14T13:17:21.2561210Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2561366Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2561464Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2561756Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2561850Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2561930Z >       sim.run_final()
2025-01-14T13:17:21.2561934Z 
2025-01-14T13:17:21.2562018Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2562137Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2562234Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2562380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2562478Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2562633Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2562749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2562753Z 
2025-01-14T13:17:21.2563016Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2563222Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2563446Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2563722Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2563879Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2564019Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2564023Z 
2025-01-14T13:17:21.2564113Z     def initialize_transport_state(
2025-01-14T13:17:21.2564180Z         self,
2025-01-14T13:17:21.2564262Z         simulation_state,
2025-01-14T13:17:21.2564336Z         opacity_state,
2025-01-14T13:17:21.2564420Z         macro_atom_state,
2025-01-14T13:17:21.2564491Z         plasma,
2025-01-14T13:17:21.2564572Z         no_of_packets,
2025-01-14T13:17:21.2564654Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2564732Z         iteration=0,
2025-01-14T13:17:21.2564931Z     ):
2025-01-14T13:17:21.2565061Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2565154Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2565228Z         else:
2025-01-14T13:17:21.2565305Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2565376Z     
2025-01-14T13:17:21.2565511Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2570175Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2570256Z         )
2025-01-14T13:17:21.2570326Z     
2025-01-14T13:17:21.2570476Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2570597Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2570938Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2571014Z         else:
2025-01-14T13:17:21.2571104Z             continuum_state = None
2025-01-14T13:17:21.2571212Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2571340Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2571430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2571694Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2571803Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2571905Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2572001Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2572077Z         ).to_numba(
2025-01-14T13:17:21.2572187Z             macro_atom_state,
2025-01-14T13:17:21.2572279Z             self.line_interaction_type,
2025-01-14T13:17:21.2572349Z         )
2025-01-14T13:17:21.2572449Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2572735Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2572801Z         ]
2025-01-14T13:17:21.2573116Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2573126Z 
2025-01-14T13:17:21.2573279Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2573534Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-1] _
2025-01-14T13:17:21.2573538Z 
2025-01-14T13:17:21.2574215Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2574571Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2574575Z 
2025-01-14T13:17:21.2574671Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2574828Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2574931Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2575108Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2575199Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2575271Z >       sim.run_final()
2025-01-14T13:17:21.2575275Z 
2025-01-14T13:17:21.2575359Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2575469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2575571Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2575714Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2575806Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2575967Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2576074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2576078Z 
2025-01-14T13:17:21.2576354Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2576682Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2576908Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2577178Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2577340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2577485Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2577489Z 
2025-01-14T13:17:21.2577576Z     def initialize_transport_state(
2025-01-14T13:17:21.2577652Z         self,
2025-01-14T13:17:21.2577730Z         simulation_state,
2025-01-14T13:17:21.2577923Z         opacity_state,
2025-01-14T13:17:21.2578002Z         macro_atom_state,
2025-01-14T13:17:21.2578076Z         plasma,
2025-01-14T13:17:21.2578147Z         no_of_packets,
2025-01-14T13:17:21.2578232Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2578308Z         iteration=0,
2025-01-14T13:17:21.2578380Z     ):
2025-01-14T13:17:21.2578506Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2578605Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2578671Z         else:
2025-01-14T13:17:21.2578758Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2578826Z     
2025-01-14T13:17:21.2578961Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2579061Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2579127Z         )
2025-01-14T13:17:21.2579198Z     
2025-01-14T13:17:21.2579325Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2579449Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2579603Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2579674Z         else:
2025-01-14T13:17:21.2579756Z             continuum_state = None
2025-01-14T13:17:21.2579864Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2579971Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2580068Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2580173Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2580275Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2580370Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2580460Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2580533Z         ).to_numba(
2025-01-14T13:17:21.2580609Z             macro_atom_state,
2025-01-14T13:17:21.2580698Z             self.line_interaction_type,
2025-01-14T13:17:21.2580764Z         )
2025-01-14T13:17:21.2580872Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2581139Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2581207Z         ]
2025-01-14T13:17:21.2581509Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2581513Z 
2025-01-14T13:17:21.2581794Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2582084Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection1] _
2025-01-14T13:17:21.2582088Z 
2025-01-14T13:17:21.2582744Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2583100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2583105Z 
2025-01-14T13:17:21.2583193Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2583347Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2583590Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2583767Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2583855Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2583929Z >       sim.run_final()
2025-01-14T13:17:21.2583933Z 
2025-01-14T13:17:21.2584016Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2584126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2584225Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2584363Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2584459Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2584727Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2584840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2584844Z 
2025-01-14T13:17:21.2585112Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2585314Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2585538Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2585809Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2585972Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2586108Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2586112Z 
2025-01-14T13:17:21.2586201Z     def initialize_transport_state(
2025-01-14T13:17:21.2586272Z         self,
2025-01-14T13:17:21.2586352Z         simulation_state,
2025-01-14T13:17:21.2586425Z         opacity_state,
2025-01-14T13:17:21.2586504Z         macro_atom_state,
2025-01-14T13:17:21.2586572Z         plasma,
2025-01-14T13:17:21.2586653Z         no_of_packets,
2025-01-14T13:17:21.2586733Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2586808Z         iteration=0,
2025-01-14T13:17:21.2586879Z     ):
2025-01-14T13:17:21.2587002Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2587098Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2587166Z         else:
2025-01-14T13:17:21.2587246Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2587310Z     
2025-01-14T13:17:21.2587448Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2587540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2587610Z         )
2025-01-14T13:17:21.2587674Z     
2025-01-14T13:17:21.2587809Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2587921Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2588076Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2588146Z         else:
2025-01-14T13:17:21.2588233Z             continuum_state = None
2025-01-14T13:17:21.2588340Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2588446Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2588541Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2588643Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2588745Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2588838Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2588931Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2588998Z         ).to_numba(
2025-01-14T13:17:21.2589078Z             macro_atom_state,
2025-01-14T13:17:21.2589166Z             self.line_interaction_type,
2025-01-14T13:17:21.2589239Z         )
2025-01-14T13:17:21.2589338Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2589608Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2589769Z         ]
2025-01-14T13:17:21.2590074Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2590078Z 
2025-01-14T13:17:21.2590228Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2590467Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-0] _
2025-01-14T13:17:21.2590472Z 
2025-01-14T13:17:21.2591211Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2591724Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2591732Z 
2025-01-14T13:17:21.2591891Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2592070Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2592166Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2592340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2592425Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2592504Z >       sim.run_final()
2025-01-14T13:17:21.2592508Z 
2025-01-14T13:17:21.2592586Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2592698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2592794Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2592941Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2593041Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2593195Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2593303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2593312Z 
2025-01-14T13:17:21.2593569Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2593775Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2593990Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2594262Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2594416Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2594553Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2596730Z 
2025-01-14T13:17:21.2596858Z     def initialize_transport_state(
2025-01-14T13:17:21.2596937Z         self,
2025-01-14T13:17:21.2597021Z         simulation_state,
2025-01-14T13:17:21.2597094Z         opacity_state,
2025-01-14T13:17:21.2597176Z         macro_atom_state,
2025-01-14T13:17:21.2597250Z         plasma,
2025-01-14T13:17:21.2597330Z         no_of_packets,
2025-01-14T13:17:21.2597412Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2597488Z         iteration=0,
2025-01-14T13:17:21.2597553Z     ):
2025-01-14T13:17:21.2597695Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2597796Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2597869Z         else:
2025-01-14T13:17:21.2597946Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2598015Z     
2025-01-14T13:17:21.2598159Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2598260Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2598327Z         )
2025-01-14T13:17:21.2598436Z     
2025-01-14T13:17:21.2598572Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2598688Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2598852Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2599031Z         else:
2025-01-14T13:17:21.2599115Z             continuum_state = None
2025-01-14T13:17:21.2599222Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2599331Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2599425Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2599529Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2599635Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2599735Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2599830Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2599901Z         ).to_numba(
2025-01-14T13:17:21.2600102Z             macro_atom_state,
2025-01-14T13:17:21.2600195Z             self.line_interaction_type,
2025-01-14T13:17:21.2600267Z         )
2025-01-14T13:17:21.2600371Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2600654Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2600728Z         ]
2025-01-14T13:17:21.2601032Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2601036Z 
2025-01-14T13:17:21.2601192Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2601435Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-1] _
2025-01-14T13:17:21.2601439Z 
2025-01-14T13:17:21.2602277Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2602632Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2602644Z 
2025-01-14T13:17:21.2602735Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2602896Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2602993Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2603172Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2603258Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2603337Z >       sim.run_final()
2025-01-14T13:17:21.2603341Z 
2025-01-14T13:17:21.2603420Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2603535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2603631Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2603913Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2604014Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2604165Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2604281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2604285Z 
2025-01-14T13:17:21.2604546Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2604751Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2604968Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2605243Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2605402Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2605546Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2605553Z 
2025-01-14T13:17:21.2605645Z     def initialize_transport_state(
2025-01-14T13:17:21.2605712Z         self,
2025-01-14T13:17:21.2605793Z         simulation_state,
2025-01-14T13:17:21.2605867Z         opacity_state,
2025-01-14T13:17:21.2606020Z         macro_atom_state,
2025-01-14T13:17:21.2606090Z         plasma,
2025-01-14T13:17:21.2606166Z         no_of_packets,
2025-01-14T13:17:21.2606247Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2606321Z         iteration=0,
2025-01-14T13:17:21.2606386Z     ):
2025-01-14T13:17:21.2606517Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2606611Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2606684Z         else:
2025-01-14T13:17:21.2606760Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2606830Z     
2025-01-14T13:17:21.2606964Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2607198Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2607276Z         )
2025-01-14T13:17:21.2607340Z     
2025-01-14T13:17:21.2607474Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2607587Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2607748Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2607814Z         else:
2025-01-14T13:17:21.2607900Z             continuum_state = None
2025-01-14T13:17:21.2607998Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2608109Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2608197Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2608306Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2608401Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2608497Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2608586Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2608668Z         ).to_numba(
2025-01-14T13:17:21.2608751Z             macro_atom_state,
2025-01-14T13:17:21.2608837Z             self.line_interaction_type,
2025-01-14T13:17:21.2608907Z         )
2025-01-14T13:17:21.2609005Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2609280Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2609345Z         ]
2025-01-14T13:17:21.2609647Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2609651Z 
2025-01-14T13:17:21.2609795Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2610039Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-2] _
2025-01-14T13:17:21.2610043Z 
2025-01-14T13:17:21.2610707Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2611115Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2611121Z 
2025-01-14T13:17:21.2611216Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2611370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2611469Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2611744Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2611836Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2611908Z >       sim.run_final()
2025-01-14T13:17:21.2611912Z 
2025-01-14T13:17:21.2611997Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2612109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2612211Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2612354Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2612446Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2612602Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2612776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2612780Z 
2025-01-14T13:17:21.2613046Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2613244Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2613467Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2613741Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2613897Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2614154Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2614159Z 
2025-01-14T13:17:21.2614246Z     def initialize_transport_state(
2025-01-14T13:17:21.2614319Z         self,
2025-01-14T13:17:21.2614398Z         simulation_state,
2025-01-14T13:17:21.2614476Z         opacity_state,
2025-01-14T13:17:21.2614550Z         macro_atom_state,
2025-01-14T13:17:21.2614623Z         plasma,
2025-01-14T13:17:21.2614694Z         no_of_packets,
2025-01-14T13:17:21.2614778Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2614849Z         iteration=0,
2025-01-14T13:17:21.2614919Z     ):
2025-01-14T13:17:21.2615041Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2615139Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2615210Z         else:
2025-01-14T13:17:21.2615287Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2615357Z     
2025-01-14T13:17:21.2615494Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2615595Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2615661Z         )
2025-01-14T13:17:21.2615730Z     
2025-01-14T13:17:21.2615855Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2615973Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2616124Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2616196Z         else:
2025-01-14T13:17:21.2616276Z             continuum_state = None
2025-01-14T13:17:21.2616380Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2616485Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2616578Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2616681Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2616781Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2616879Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2617050Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2617124Z         ).to_numba(
2025-01-14T13:17:21.2617200Z             macro_atom_state,
2025-01-14T13:17:21.2617290Z             self.line_interaction_type,
2025-01-14T13:17:21.2617373Z         )
2025-01-14T13:17:21.2617472Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2617748Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2617813Z         ]
2025-01-14T13:17:21.2618116Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2618119Z 
2025-01-14T13:17:21.2618268Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2618461Z ___ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[None] ____
2025-01-14T13:17:21.2618464Z 
2025-01-14T13:17:21.2619140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2619485Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2619535Z 
2025-01-14T13:17:21.2619630Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2619782Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2619882Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2620057Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2620141Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2620218Z >       sim.run_final()
2025-01-14T13:17:21.2620222Z 
2025-01-14T13:17:21.2620300Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2620490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2620593Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2620737Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2620828Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2620991Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2621095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2621099Z 
2025-01-14T13:17:21.2621375Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2621751Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2621999Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2622274Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2622440Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2622580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2622584Z 
2025-01-14T13:17:21.2622669Z     def initialize_transport_state(
2025-01-14T13:17:21.2622743Z         self,
2025-01-14T13:17:21.2622817Z         simulation_state,
2025-01-14T13:17:21.2622895Z         opacity_state,
2025-01-14T13:17:21.2622968Z         macro_atom_state,
2025-01-14T13:17:21.2623040Z         plasma,
2025-01-14T13:17:21.2623116Z         no_of_packets,
2025-01-14T13:17:21.2623195Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2623273Z         iteration=0,
2025-01-14T13:17:21.2623338Z     ):
2025-01-14T13:17:21.2623467Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2623560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2623632Z         else:
2025-01-14T13:17:21.2623709Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2623779Z     
2025-01-14T13:17:21.2623998Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2624099Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2624164Z         )
2025-01-14T13:17:21.2624233Z     
2025-01-14T13:17:21.2624364Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2624487Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2624639Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2624712Z         else:
2025-01-14T13:17:21.2624799Z             continuum_state = None
2025-01-14T13:17:21.2624899Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2625011Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2625101Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2625211Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2625308Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2625410Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2625501Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2625577Z         ).to_numba(
2025-01-14T13:17:21.2625652Z             macro_atom_state,
2025-01-14T13:17:21.2625813Z             self.line_interaction_type,
2025-01-14T13:17:21.2625879Z         )
2025-01-14T13:17:21.2625984Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2626254Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2626324Z         ]
2025-01-14T13:17:21.2626627Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2626631Z 
2025-01-14T13:17:21.2626778Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2626983Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-0] __
2025-01-14T13:17:21.2626990Z 
2025-01-14T13:17:21.2627753Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2628111Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2628115Z 
2025-01-14T13:17:21.2628207Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2628360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2628462Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2628631Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2628720Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2628797Z >       sim.run_final()
2025-01-14T13:17:21.2628801Z 
2025-01-14T13:17:21.2628885Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2628997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2629098Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2629239Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2629340Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2629497Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2629600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2629604Z 
2025-01-14T13:17:21.2629872Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2630072Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2630296Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2630568Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2630778Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2630914Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2630918Z 
2025-01-14T13:17:21.2631012Z     def initialize_transport_state(
2025-01-14T13:17:21.2631084Z         self,
2025-01-14T13:17:21.2631160Z         simulation_state,
2025-01-14T13:17:21.2631239Z         opacity_state,
2025-01-14T13:17:21.2631321Z         macro_atom_state,
2025-01-14T13:17:21.2631394Z         plasma,
2025-01-14T13:17:21.2631468Z         no_of_packets,
2025-01-14T13:17:21.2631694Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2631825Z         iteration=0,
2025-01-14T13:17:21.2631929Z     ):
2025-01-14T13:17:21.2632058Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2632160Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2632227Z         else:
2025-01-14T13:17:21.2632309Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2632382Z     
2025-01-14T13:17:21.2632521Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2632618Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2632689Z         )
2025-01-14T13:17:21.2632846Z     
2025-01-14T13:17:21.2632981Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2633096Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2633249Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2633324Z         else:
2025-01-14T13:17:21.2633405Z             continuum_state = None
2025-01-14T13:17:21.2633507Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2633614Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2633709Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2633813Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2634045Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2634141Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2634238Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2634306Z         ).to_numba(
2025-01-14T13:17:21.2634392Z             macro_atom_state,
2025-01-14T13:17:21.2634483Z             self.line_interaction_type,
2025-01-14T13:17:21.2634548Z         )
2025-01-14T13:17:21.2634652Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2634920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2634990Z         ]
2025-01-14T13:17:21.2635286Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2635291Z 
2025-01-14T13:17:21.2635443Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2635643Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-1] __
2025-01-14T13:17:21.2635650Z 
2025-01-14T13:17:21.2636314Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2636667Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2636670Z 
2025-01-14T13:17:21.2636757Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2636910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2637004Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2637180Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2637264Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2637342Z >       sim.run_final()
2025-01-14T13:17:21.2637408Z 
2025-01-14T13:17:21.2637496Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2637607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2637706Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2637846Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2637946Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2638096Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2638202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2638206Z 
2025-01-14T13:17:21.2638467Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2638671Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2638888Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2639166Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2639331Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2639464Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2639515Z 
2025-01-14T13:17:21.2639609Z     def initialize_transport_state(
2025-01-14T13:17:21.2639675Z         self,
2025-01-14T13:17:21.2639755Z         simulation_state,
2025-01-14T13:17:21.2639831Z         opacity_state,
2025-01-14T13:17:21.2639909Z         macro_atom_state,
2025-01-14T13:17:21.2639977Z         plasma,
2025-01-14T13:17:21.2640054Z         no_of_packets,
2025-01-14T13:17:21.2640134Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2640209Z         iteration=0,
2025-01-14T13:17:21.2640274Z     ):
2025-01-14T13:17:21.2640400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2640493Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2640570Z         else:
2025-01-14T13:17:21.2640727Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2640802Z     
2025-01-14T13:17:21.2640940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2641035Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2641112Z         )
2025-01-14T13:17:21.2641176Z     
2025-01-14T13:17:21.2641308Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2641418Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2641699Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2641769Z         else:
2025-01-14T13:17:21.2641855Z             continuum_state = None
2025-01-14T13:17:21.2641954Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2642066Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2642155Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2642274Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2642376Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2642474Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2642567Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2642639Z         ).to_numba(
2025-01-14T13:17:21.2642721Z             macro_atom_state,
2025-01-14T13:17:21.2642808Z             self.line_interaction_type,
2025-01-14T13:17:21.2642881Z         )
2025-01-14T13:17:21.2642979Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2643254Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2643319Z         ]
2025-01-14T13:17:21.2643623Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2643627Z 
2025-01-14T13:17:21.2643770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2644109Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[None] _
2025-01-14T13:17:21.2644113Z 
2025-01-14T13:17:21.2644777Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2645122Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2645126Z 
2025-01-14T13:17:21.2645218Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2645370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2645470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2645640Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2645733Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2645818Z >       sim.run_final()
2025-01-14T13:17:21.2645822Z 
2025-01-14T13:17:21.2645902Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2646015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2646175Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2646320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2646414Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2646570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2646675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2646678Z 
2025-01-14T13:17:21.2646943Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2647148Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2647475Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2647761Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2647918Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2648059Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2648064Z 
2025-01-14T13:17:21.2648149Z     def initialize_transport_state(
2025-01-14T13:17:21.2648220Z         self,
2025-01-14T13:17:21.2648296Z         simulation_state,
2025-01-14T13:17:21.2648377Z         opacity_state,
2025-01-14T13:17:21.2648452Z         macro_atom_state,
2025-01-14T13:17:21.2648526Z         plasma,
2025-01-14T13:17:21.2648598Z         no_of_packets,
2025-01-14T13:17:21.2648681Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2648751Z         iteration=0,
2025-01-14T13:17:21.2648821Z     ):
2025-01-14T13:17:21.2648948Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2649046Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2649122Z         else:
2025-01-14T13:17:21.2649201Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2649271Z     
2025-01-14T13:17:21.2649403Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2649504Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2649570Z         )
2025-01-14T13:17:21.2649642Z     
2025-01-14T13:17:21.2649767Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2649883Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2650033Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2650106Z         else:
2025-01-14T13:17:21.2650187Z             continuum_state = None
2025-01-14T13:17:21.2650292Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2650402Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2650492Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2650657Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2650754Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2650851Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2650943Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2651016Z         ).to_numba(
2025-01-14T13:17:21.2651092Z             macro_atom_state,
2025-01-14T13:17:21.2651181Z             self.line_interaction_type,
2025-01-14T13:17:21.2651248Z         )
2025-01-14T13:17:21.2651350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2651745Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2651819Z         ]
2025-01-14T13:17:21.2652117Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2652127Z 
2025-01-14T13:17:21.2652272Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2652475Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-0] ___
2025-01-14T13:17:21.2652479Z 
2025-01-14T13:17:21.2653149Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2653572Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2653576Z 
2025-01-14T13:17:21.2653669Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2653825Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2653925Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2654096Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2654300Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2654377Z >       sim.run_final()
2025-01-14T13:17:21.2654381Z 
2025-01-14T13:17:21.2654465Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2654572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2654677Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2654815Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2654912Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2655063Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2655175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2655178Z 
2025-01-14T13:17:21.2655445Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2655644Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2655873Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2656143Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2656304Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2656443Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2656446Z 
2025-01-14T13:17:21.2656537Z     def initialize_transport_state(
2025-01-14T13:17:21.2656605Z         self,
2025-01-14T13:17:21.2656686Z         simulation_state,
2025-01-14T13:17:21.2656764Z         opacity_state,
2025-01-14T13:17:21.2656838Z         macro_atom_state,
2025-01-14T13:17:21.2656912Z         plasma,
2025-01-14T13:17:21.2656984Z         no_of_packets,
2025-01-14T13:17:21.2657069Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2657139Z         iteration=0,
2025-01-14T13:17:21.2657209Z     ):
2025-01-14T13:17:21.2657338Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2657505Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2657572Z         else:
2025-01-14T13:17:21.2657654Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2657718Z     
2025-01-14T13:17:21.2657856Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2657950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2658023Z         )
2025-01-14T13:17:21.2658087Z     
2025-01-14T13:17:21.2658216Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2658326Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2658479Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2658550Z         else:
2025-01-14T13:17:21.2658630Z             continuum_state = None
2025-01-14T13:17:21.2658734Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2658840Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2658944Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2659048Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2659150Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2659311Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2659408Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2659476Z         ).to_numba(
2025-01-14T13:17:21.2659558Z             macro_atom_state,
2025-01-14T13:17:21.2659642Z             self.line_interaction_type,
2025-01-14T13:17:21.2659712Z         )
2025-01-14T13:17:21.2659810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2660079Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2660148Z         ]
2025-01-14T13:17:21.2660446Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2660453Z 
2025-01-14T13:17:21.2660676Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2660875Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-1] ___
2025-01-14T13:17:21.2660879Z 
2025-01-14T13:17:21.2661642Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2661991Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2661995Z 
2025-01-14T13:17:21.2662081Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2662239Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2662335Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2662513Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2662600Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2662679Z >       sim.run_final()
2025-01-14T13:17:21.2662683Z 
2025-01-14T13:17:21.2662762Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2662875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2662970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2663112Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2663211Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2663362Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2663483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2663487Z 
2025-01-14T13:17:21.2663748Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2663962Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2664261Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2664541Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2664700Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2664845Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2664849Z 
2025-01-14T13:17:21.2664941Z     def initialize_transport_state(
2025-01-14T13:17:21.2665009Z         self,
2025-01-14T13:17:21.2665092Z         simulation_state,
2025-01-14T13:17:21.2665166Z         opacity_state,
2025-01-14T13:17:21.2665247Z         macro_atom_state,
2025-01-14T13:17:21.2665316Z         plasma,
2025-01-14T13:17:21.2665396Z         no_of_packets,
2025-01-14T13:17:21.2665477Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2665553Z         iteration=0,
2025-01-14T13:17:21.2665619Z     ):
2025-01-14T13:17:21.2665752Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2665847Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2665923Z         else:
2025-01-14T13:17:21.2666000Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2666139Z     
2025-01-14T13:17:21.2666272Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2666372Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2666441Z         )
2025-01-14T13:17:21.2666506Z     
2025-01-14T13:17:21.2666638Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2666747Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2666907Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2666975Z         else:
2025-01-14T13:17:21.2667063Z             continuum_state = None
2025-01-14T13:17:21.2667159Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2667386Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2667480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2667590Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2667686Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2667788Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2667886Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2667956Z         ).to_numba(
2025-01-14T13:17:21.2668039Z             macro_atom_state,
2025-01-14T13:17:21.2668126Z             self.line_interaction_type,
2025-01-14T13:17:21.2668197Z         )
2025-01-14T13:17:21.2668295Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2668563Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2668629Z         ]
2025-01-14T13:17:21.2668937Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2668943Z 
2025-01-14T13:17:21.2669088Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2669290Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-2] ___
2025-01-14T13:17:21.2669298Z 
2025-01-14T13:17:21.2669963Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2670306Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2670310Z 
2025-01-14T13:17:21.2670403Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2670554Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2670655Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2670875Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2670965Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2671039Z >       sim.run_final()
2025-01-14T13:17:21.2671049Z 
2025-01-14T13:17:21.2671134Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2671245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2671341Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2671483Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2671752Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2671972Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2672080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2672083Z 
2025-01-14T13:17:21.2672377Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2672586Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2672811Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2673084Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2673323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2673468Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2673472Z 
2025-01-14T13:17:21.2673559Z     def initialize_transport_state(
2025-01-14T13:17:21.2673633Z         self,
2025-01-14T13:17:21.2673709Z         simulation_state,
2025-01-14T13:17:21.2673788Z         opacity_state,
2025-01-14T13:17:21.2673863Z         macro_atom_state,
2025-01-14T13:17:21.2673938Z         plasma,
2025-01-14T13:17:21.2674010Z         no_of_packets,
2025-01-14T13:17:21.2674097Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2674172Z         iteration=0,
2025-01-14T13:17:21.2674352Z     ):
2025-01-14T13:17:21.2674478Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2674580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2674654Z         else:
2025-01-14T13:17:21.2674735Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2674807Z     
2025-01-14T13:17:21.2674940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2675043Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2675110Z         )
2025-01-14T13:17:21.2675183Z     
2025-01-14T13:17:21.2675308Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2675425Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2675577Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2675651Z         else:
2025-01-14T13:17:21.2675732Z             continuum_state = None
2025-01-14T13:17:21.2675846Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2675954Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2676051Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2676162Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2676261Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2676360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2676451Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2676528Z         ).to_numba(
2025-01-14T13:17:21.2676605Z             macro_atom_state,
2025-01-14T13:17:21.2676699Z             self.line_interaction_type,
2025-01-14T13:17:21.2676765Z         )
2025-01-14T13:17:21.2676869Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2677136Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2677208Z         ]
2025-01-14T13:17:21.2677509Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2677594Z 
2025-01-14T13:17:21.2677741Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2677914Z _____________ ERROR at setup of TestBaseShellInfo.test_shells_data _____________
2025-01-14T13:17:21.2677920Z 
2025-01-14T13:17:21.2678574Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2678921Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2678925Z 
2025-01-14T13:17:21.2679011Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2679166Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2679272Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2679441Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2679532Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2679606Z >       sim.run_final()
2025-01-14T13:17:21.2679654Z 
2025-01-14T13:17:21.2679738Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2679844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2679946Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2680080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2680177Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2680326Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2680434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2680438Z 
2025-01-14T13:17:21.2680783Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2680986Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2681212Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2681485Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2681762Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2681898Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2681902Z 
2025-01-14T13:17:21.2681996Z     def initialize_transport_state(
2025-01-14T13:17:21.2682064Z         self,
2025-01-14T13:17:21.2682150Z         simulation_state,
2025-01-14T13:17:21.2682224Z         opacity_state,
2025-01-14T13:17:21.2682308Z         macro_atom_state,
2025-01-14T13:17:21.2682385Z         plasma,
2025-01-14T13:17:21.2682458Z         no_of_packets,
2025-01-14T13:17:21.2682547Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2682624Z         iteration=0,
2025-01-14T13:17:21.2682696Z     ):
2025-01-14T13:17:21.2682817Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2682920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2682991Z         else:
2025-01-14T13:17:21.2683074Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2683139Z     
2025-01-14T13:17:21.2683277Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2683372Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2683444Z         )
2025-01-14T13:17:21.2683509Z     
2025-01-14T13:17:21.2683640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2683750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2683904Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2683982Z         else:
2025-01-14T13:17:21.2684064Z             continuum_state = None
2025-01-14T13:17:21.2684292Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2684399Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2684496Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2684601Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2684702Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2684792Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2684887Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2684957Z         ).to_numba(
2025-01-14T13:17:21.2685039Z             macro_atom_state,
2025-01-14T13:17:21.2685125Z             self.line_interaction_type,
2025-01-14T13:17:21.2685199Z         )
2025-01-14T13:17:21.2685298Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2685571Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2685649Z         ]
2025-01-14T13:17:21.2685953Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2685957Z 
2025-01-14T13:17:21.2686109Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2686356Z ________ ERROR at setup of TestBaseShellInfo.test_element_count_data[1] ________
2025-01-14T13:17:21.2686360Z 
2025-01-14T13:17:21.2687025Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2687370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2687379Z 
2025-01-14T13:17:21.2687467Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2687725Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2687825Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2688002Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2688087Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2688172Z >       sim.run_final()
2025-01-14T13:17:21.2688176Z 
2025-01-14T13:17:21.2688257Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2688369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2688465Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2688609Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2688701Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2688858Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2688965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2688968Z 
2025-01-14T13:17:21.2689235Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2689440Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2689659Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2689944Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2690100Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2690239Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2690243Z 
2025-01-14T13:17:21.2690338Z     def initialize_transport_state(
2025-01-14T13:17:21.2690406Z         self,
2025-01-14T13:17:21.2690486Z         simulation_state,
2025-01-14T13:17:21.2690560Z         opacity_state,
2025-01-14T13:17:21.2690639Z         macro_atom_state,
2025-01-14T13:17:21.2690708Z         plasma,
2025-01-14T13:17:21.2690848Z         no_of_packets,
2025-01-14T13:17:21.2690929Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2691004Z         iteration=0,
2025-01-14T13:17:21.2691069Z     ):
2025-01-14T13:17:21.2691199Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2691296Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2691368Z         else:
2025-01-14T13:17:21.2691445Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2691516Z     
2025-01-14T13:17:21.2691752Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2691857Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2691923Z         )
2025-01-14T13:17:21.2691995Z     
2025-01-14T13:17:21.2692126Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2692235Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2692389Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2692460Z         else:
2025-01-14T13:17:21.2692551Z             continuum_state = None
2025-01-14T13:17:21.2692649Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2692761Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2692920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2693031Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2693127Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2693227Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2693317Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2693393Z         ).to_numba(
2025-01-14T13:17:21.2693469Z             macro_atom_state,
2025-01-14T13:17:21.2693560Z             self.line_interaction_type,
2025-01-14T13:17:21.2693631Z         )
2025-01-14T13:17:21.2693732Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2694123Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2694195Z         ]
2025-01-14T13:17:21.2694505Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2694509Z 
2025-01-14T13:17:21.2694660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2694846Z _______ ERROR at setup of TestBaseShellInfo.test_element_count_data[20] ________
2025-01-14T13:17:21.2694850Z 
2025-01-14T13:17:21.2695514Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2695856Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2695860Z 
2025-01-14T13:17:21.2695953Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2696109Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2696213Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2696382Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2696475Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2696548Z >       sim.run_final()
2025-01-14T13:17:21.2696552Z 
2025-01-14T13:17:21.2696637Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2696751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2696847Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2696991Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2697085Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2697246Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2697356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2697425Z 
2025-01-14T13:17:21.2697699Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2697900Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2698128Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2698402Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2698565Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2698705Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2698709Z 
2025-01-14T13:17:21.2698794Z     def initialize_transport_state(
2025-01-14T13:17:21.2698869Z         self,
2025-01-14T13:17:21.2698945Z         simulation_state,
2025-01-14T13:17:21.2699026Z         opacity_state,
2025-01-14T13:17:21.2699101Z         macro_atom_state,
2025-01-14T13:17:21.2699184Z         plasma,
2025-01-14T13:17:21.2699257Z         no_of_packets,
2025-01-14T13:17:21.2699345Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2699419Z         iteration=0,
2025-01-14T13:17:21.2699495Z     ):
2025-01-14T13:17:21.2699619Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2699770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2699839Z         else:
2025-01-14T13:17:21.2699923Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2699992Z     
2025-01-14T13:17:21.2700124Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2700224Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2700289Z         )
2025-01-14T13:17:21.2700358Z     
2025-01-14T13:17:21.2700481Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2700600Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2700839Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2700917Z         else:
2025-01-14T13:17:21.2700999Z             continuum_state = None
2025-01-14T13:17:21.2701103Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2701207Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2701304Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2701414Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2701516Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2701720Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2701812Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2701886Z         ).to_numba(
2025-01-14T13:17:21.2701963Z             macro_atom_state,
2025-01-14T13:17:21.2702054Z             self.line_interaction_type,
2025-01-14T13:17:21.2702118Z         )
2025-01-14T13:17:21.2702224Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2702497Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2702571Z         ]
2025-01-14T13:17:21.2702868Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2702874Z 
2025-01-14T13:17:21.2703027Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2703211Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:17:21.2703214Z 
2025-01-14T13:17:21.2703870Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2704219Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2704299Z 
2025-01-14T13:17:21.2704394Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2704551Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2704646Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2704820Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2704914Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2704987Z >       sim.run_final()
2025-01-14T13:17:21.2704991Z 
2025-01-14T13:17:21.2705077Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2705182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2705282Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2705419Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2705518Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2705667Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2705780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2705787Z 
2025-01-14T13:17:21.2706044Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2706249Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2706538Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2706808Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2706970Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2707104Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2707108Z 
2025-01-14T13:17:21.2707200Z     def initialize_transport_state(
2025-01-14T13:17:21.2707268Z         self,
2025-01-14T13:17:21.2707350Z         simulation_state,
2025-01-14T13:17:21.2707425Z         opacity_state,
2025-01-14T13:17:21.2707633Z         macro_atom_state,
2025-01-14T13:17:21.2707704Z         plasma,
2025-01-14T13:17:21.2707787Z         no_of_packets,
2025-01-14T13:17:21.2707868Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2707945Z         iteration=0,
2025-01-14T13:17:21.2708024Z     ):
2025-01-14T13:17:21.2708146Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2708244Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2708311Z         else:
2025-01-14T13:17:21.2708401Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2708465Z     
2025-01-14T13:17:21.2708601Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2708694Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2708765Z         )
2025-01-14T13:17:21.2708828Z     
2025-01-14T13:17:21.2708957Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2709065Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2709225Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2709293Z         else:
2025-01-14T13:17:21.2709381Z             continuum_state = None
2025-01-14T13:17:21.2709484Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2709594Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2709688Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2709792Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2709895Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2709986Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2710080Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2710149Z         ).to_numba(
2025-01-14T13:17:21.2710231Z             macro_atom_state,
2025-01-14T13:17:21.2710317Z             self.line_interaction_type,
2025-01-14T13:17:21.2710394Z         )
2025-01-14T13:17:21.2710492Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2710819Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2710886Z         ]
2025-01-14T13:17:21.2711186Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2711192Z 
2025-01-14T13:17:21.2711349Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2711522Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[20-20] ________
2025-01-14T13:17:21.2711526Z 
2025-01-14T13:17:21.2712435Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2712784Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2712791Z 
2025-01-14T13:17:21.2712885Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2713043Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2713138Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2713393Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2713479Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2713558Z >       sim.run_final()
2025-01-14T13:17:21.2713561Z 
2025-01-14T13:17:21.2713639Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2713750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2713855Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2713996Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2714089Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2714244Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2714494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2714499Z 
2025-01-14T13:17:21.2714763Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2714972Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2715191Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2715464Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2715619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2715758Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2715761Z 
2025-01-14T13:17:21.2715845Z     def initialize_transport_state(
2025-01-14T13:17:21.2715918Z         self,
2025-01-14T13:17:21.2716001Z         simulation_state,
2025-01-14T13:17:21.2716082Z         opacity_state,
2025-01-14T13:17:21.2716163Z         macro_atom_state,
2025-01-14T13:17:21.2716232Z         plasma,
2025-01-14T13:17:21.2716308Z         no_of_packets,
2025-01-14T13:17:21.2716387Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2716467Z         iteration=0,
2025-01-14T13:17:21.2716536Z     ):
2025-01-14T13:17:21.2716661Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2716752Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2716825Z         else:
2025-01-14T13:17:21.2716901Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2716971Z     
2025-01-14T13:17:21.2717102Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2717199Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2717266Z         )
2025-01-14T13:17:21.2717336Z     
2025-01-14T13:17:21.2717461Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2717579Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2717801Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2717869Z         else:
2025-01-14T13:17:21.2717954Z             continuum_state = None
2025-01-14T13:17:21.2718052Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2718162Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2718250Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2718358Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2718452Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2718547Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2718636Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2718709Z         ).to_numba(
2025-01-14T13:17:21.2718784Z             macro_atom_state,
2025-01-14T13:17:21.2718874Z             self.line_interaction_type,
2025-01-14T13:17:21.2718939Z         )
2025-01-14T13:17:21.2719047Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2719322Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2719386Z         ]
2025-01-14T13:17:21.2719740Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2719744Z 
2025-01-14T13:17:21.2719887Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2720072Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:17:21.2720076Z 
2025-01-14T13:17:21.2720728Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2721145Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2721152Z 
2025-01-14T13:17:21.2721245Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2721393Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2721496Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2721766Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2721857Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2721929Z >       sim.run_final()
2025-01-14T13:17:21.2721940Z 
2025-01-14T13:17:21.2722083Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2722257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2722394Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2722540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2722632Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2722795Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2722898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2722902Z 
2025-01-14T13:17:21.2723166Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2723365Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2723590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2723857Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2724016Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2724157Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2724162Z 
2025-01-14T13:17:21.2724246Z     def initialize_transport_state(
2025-01-14T13:17:21.2724317Z         self,
2025-01-14T13:17:21.2724482Z         simulation_state,
2025-01-14T13:17:21.2724560Z         opacity_state,
2025-01-14T13:17:21.2724634Z         macro_atom_state,
2025-01-14T13:17:21.2724708Z         plasma,
2025-01-14T13:17:21.2724779Z         no_of_packets,
2025-01-14T13:17:21.2724865Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2724936Z         iteration=0,
2025-01-14T13:17:21.2725006Z     ):
2025-01-14T13:17:21.2725126Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2725223Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2725294Z         else:
2025-01-14T13:17:21.2725377Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2725441Z     
2025-01-14T13:17:21.2725579Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2725677Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2725742Z         )
2025-01-14T13:17:21.2725811Z     
2025-01-14T13:17:21.2725937Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2726058Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2726212Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2726283Z         else:
2025-01-14T13:17:21.2726435Z             continuum_state = None
2025-01-14T13:17:21.2726543Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2726648Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2726741Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2726843Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2726943Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2727038Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2727132Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2727206Z         ).to_numba(
2025-01-14T13:17:21.2727281Z             macro_atom_state,
2025-01-14T13:17:21.2727371Z             self.line_interaction_type,
2025-01-14T13:17:21.2727543Z         )
2025-01-14T13:17:21.2727650Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2727916Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2727989Z         ]
2025-01-14T13:17:21.2728287Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2728291Z 
2025-01-14T13:17:21.2728437Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2728616Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[3-20-20] ______
2025-01-14T13:17:21.2728625Z 
2025-01-14T13:17:21.2729280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2729635Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2729639Z 
2025-01-14T13:17:21.2729726Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2729884Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2729978Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2730152Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2730238Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2730316Z >       sim.run_final()
2025-01-14T13:17:21.2730320Z 
2025-01-14T13:17:21.2730405Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2730509Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2730608Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2730745Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2730895Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2731046Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2731155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2731163Z 
2025-01-14T13:17:21.2731422Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2731739Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2731966Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2732239Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2732398Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2732531Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2732535Z 
2025-01-14T13:17:21.2732624Z     def initialize_transport_state(
2025-01-14T13:17:21.2732697Z         self,
2025-01-14T13:17:21.2732778Z         simulation_state,
2025-01-14T13:17:21.2732851Z         opacity_state,
2025-01-14T13:17:21.2732934Z         macro_atom_state,
2025-01-14T13:17:21.2733003Z         plasma,
2025-01-14T13:17:21.2733149Z         no_of_packets,
2025-01-14T13:17:21.2733230Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2733306Z         iteration=0,
2025-01-14T13:17:21.2733371Z     ):
2025-01-14T13:17:21.2733498Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2733597Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2733663Z         else:
2025-01-14T13:17:21.2733746Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2733810Z     
2025-01-14T13:17:21.2733946Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2734040Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2734110Z         )
2025-01-14T13:17:21.2734175Z     
2025-01-14T13:17:21.2734434Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2734547Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2734701Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2734770Z         else:
2025-01-14T13:17:21.2734857Z             continuum_state = None
2025-01-14T13:17:21.2734954Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2735065Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2735158Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2735259Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2735358Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2735449Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2735546Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2735614Z         ).to_numba(
2025-01-14T13:17:21.2735695Z             macro_atom_state,
2025-01-14T13:17:21.2735787Z             self.line_interaction_type,
2025-01-14T13:17:21.2735858Z         )
2025-01-14T13:17:21.2735956Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2736223Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2736291Z         ]
2025-01-14T13:17:21.2736595Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2736598Z 
2025-01-14T13:17:21.2736750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2736927Z __________ ERROR at setup of TestSimulationShellInfo.test_shells_data __________
2025-01-14T13:17:21.2736931Z 
2025-01-14T13:17:21.2737593Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2737999Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2738003Z 
2025-01-14T13:17:21.2738093Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2738243Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2738342Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2738517Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2738602Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2738680Z >       sim.run_final()
2025-01-14T13:17:21.2738683Z 
2025-01-14T13:17:21.2738762Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2738871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2738964Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2739109Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2739204Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2739359Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2739461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2739515Z 
2025-01-14T13:17:21.2739776Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2739981Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2740197Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2740473Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2740627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2740765Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2740771Z 
2025-01-14T13:17:21.2740929Z     def initialize_transport_state(
2025-01-14T13:17:21.2741003Z         self,
2025-01-14T13:17:21.2741079Z         simulation_state,
2025-01-14T13:17:21.2741157Z         opacity_state,
2025-01-14T13:17:21.2741231Z         macro_atom_state,
2025-01-14T13:17:21.2741307Z         plasma,
2025-01-14T13:17:21.2741382Z         no_of_packets,
2025-01-14T13:17:21.2741462Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2741537Z         iteration=0,
2025-01-14T13:17:21.2741696Z     ):
2025-01-14T13:17:21.2741824Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2741916Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2741991Z         else:
2025-01-14T13:17:21.2742068Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2742137Z     
2025-01-14T13:17:21.2742269Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2742368Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2742436Z         )
2025-01-14T13:17:21.2742511Z     
2025-01-14T13:17:21.2742634Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2742748Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2742900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2742975Z         else:
2025-01-14T13:17:21.2743061Z             continuum_state = None
2025-01-14T13:17:21.2743159Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2743269Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2743356Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2743462Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2743556Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2743653Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2743745Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2743818Z         ).to_numba(
2025-01-14T13:17:21.2743972Z             macro_atom_state,
2025-01-14T13:17:21.2744064Z             self.line_interaction_type,
2025-01-14T13:17:21.2744130Z         )
2025-01-14T13:17:21.2744231Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2744505Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2744570Z         ]
2025-01-14T13:17:21.2744871Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2744875Z 
2025-01-14T13:17:21.2745018Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2745210Z _____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[1] _____
2025-01-14T13:17:21.2745214Z 
2025-01-14T13:17:21.2745870Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2746216Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2746279Z 
2025-01-14T13:17:21.2746372Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2746522Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2746620Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2746786Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2746877Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2746953Z >       sim.run_final()
2025-01-14T13:17:21.2746957Z 
2025-01-14T13:17:21.2747040Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2747143Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2747243Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2747484Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2747586Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2747743Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2747849Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2747854Z 
2025-01-14T13:17:21.2748116Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2748312Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2748535Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2748802Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2748959Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2749095Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2749106Z 
2025-01-14T13:17:21.2749191Z     def initialize_transport_state(
2025-01-14T13:17:21.2749264Z         self,
2025-01-14T13:17:21.2749338Z         simulation_state,
2025-01-14T13:17:21.2749416Z         opacity_state,
2025-01-14T13:17:21.2749493Z         macro_atom_state,
2025-01-14T13:17:21.2749567Z         plasma,
2025-01-14T13:17:21.2749637Z         no_of_packets,
2025-01-14T13:17:21.2749723Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2749794Z         iteration=0,
2025-01-14T13:17:21.2749863Z     ):
2025-01-14T13:17:21.2749982Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2750079Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2750146Z         else:
2025-01-14T13:17:21.2750227Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2750292Z     
2025-01-14T13:17:21.2750427Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2750526Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2750649Z         )
2025-01-14T13:17:21.2750718Z     
2025-01-14T13:17:21.2750842Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2750958Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2751109Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2751180Z         else:
2025-01-14T13:17:21.2751260Z             continuum_state = None
2025-01-14T13:17:21.2751364Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2751469Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2751721Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2751871Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2751976Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2752069Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2752163Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2752239Z         ).to_numba(
2025-01-14T13:17:21.2752321Z             macro_atom_state,
2025-01-14T13:17:21.2752411Z             self.line_interaction_type,
2025-01-14T13:17:21.2757788Z         )
2025-01-14T13:17:21.2757941Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2763803Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2763940Z         ]
2025-01-14T13:17:21.2764280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2764287Z 
2025-01-14T13:17:21.2764457Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2764661Z ____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[20] _____
2025-01-14T13:17:21.2764664Z 
2025-01-14T13:17:21.2765459Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2765826Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2765835Z 
2025-01-14T13:17:21.2765930Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2766129Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2766230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2766416Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2766502Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2766581Z >       sim.run_final()
2025-01-14T13:17:21.2766585Z 
2025-01-14T13:17:21.2766667Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2766786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2766889Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2767038Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2767133Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2767293Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2767409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2767415Z 
2025-01-14T13:17:21.2767681Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2767887Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2768107Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2768380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2768543Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2768766Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2768771Z 
2025-01-14T13:17:21.2768860Z     def initialize_transport_state(
2025-01-14T13:17:21.2768932Z         self,
2025-01-14T13:17:21.2769018Z         simulation_state,
2025-01-14T13:17:21.2769091Z         opacity_state,
2025-01-14T13:17:21.2769174Z         macro_atom_state,
2025-01-14T13:17:21.2769243Z         plasma,
2025-01-14T13:17:21.2769320Z         no_of_packets,
2025-01-14T13:17:21.2769401Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2769475Z         iteration=0,
2025-01-14T13:17:21.2769541Z     ):
2025-01-14T13:17:21.2769673Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2769770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2769843Z         else:
2025-01-14T13:17:21.2769919Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2769988Z     
2025-01-14T13:17:21.2770124Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2770233Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2770301Z         )
2025-01-14T13:17:21.2770370Z     
2025-01-14T13:17:21.2770503Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2770694Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2770854Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2771022Z         else:
2025-01-14T13:17:21.2771111Z             continuum_state = None
2025-01-14T13:17:21.2771212Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2771327Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2771416Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2771528Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2771771Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2771871Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2772030Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2772110Z         ).to_numba(
2025-01-14T13:17:21.2772219Z             macro_atom_state,
2025-01-14T13:17:21.2772310Z             self.line_interaction_type,
2025-01-14T13:17:21.2772384Z         )
2025-01-14T13:17:21.2772483Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2772765Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2772831Z         ]
2025-01-14T13:17:21.2773142Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2773147Z 
2025-01-14T13:17:21.2773298Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2773494Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[12-1] ______
2025-01-14T13:17:21.2773498Z 
2025-01-14T13:17:21.2774174Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2774533Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2774540Z 
2025-01-14T13:17:21.2774638Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2774792Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2774894Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2775066Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2775157Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2775231Z >       sim.run_final()
2025-01-14T13:17:21.2775235Z 
2025-01-14T13:17:21.2775320Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2775432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2775606Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2775757Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2775850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2776009Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2776117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2776121Z 
2025-01-14T13:17:21.2776394Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2776593Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2776817Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2777085Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2777250Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2777393Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2777397Z 
2025-01-14T13:17:21.2777483Z     def initialize_transport_state(
2025-01-14T13:17:21.2777619Z         self,
2025-01-14T13:17:21.2777697Z         simulation_state,
2025-01-14T13:17:21.2777774Z         opacity_state,
2025-01-14T13:17:21.2777910Z         macro_atom_state,
2025-01-14T13:17:21.2777989Z         plasma,
2025-01-14T13:17:21.2778060Z         no_of_packets,
2025-01-14T13:17:21.2778144Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2778214Z         iteration=0,
2025-01-14T13:17:21.2778283Z     ):
2025-01-14T13:17:21.2778408Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2778507Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2778572Z         else:
2025-01-14T13:17:21.2778652Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2778716Z     
2025-01-14T13:17:21.2778901Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2779006Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2779072Z         )
2025-01-14T13:17:21.2779141Z     
2025-01-14T13:17:21.2779268Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2779388Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2779541Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2779612Z         else:
2025-01-14T13:17:21.2779693Z             continuum_state = None
2025-01-14T13:17:21.2779797Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2779901Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2779995Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2780099Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2780200Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2780296Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2780391Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2780466Z         ).to_numba(
2025-01-14T13:17:21.2780543Z             macro_atom_state,
2025-01-14T13:17:21.2780637Z             self.line_interaction_type,
2025-01-14T13:17:21.2780703Z         )
2025-01-14T13:17:21.2780807Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2781079Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2781149Z         ]
2025-01-14T13:17:21.2781445Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2781449Z 
2025-01-14T13:17:21.2781704Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2781896Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[20-20] _____
2025-01-14T13:17:21.2781906Z 
2025-01-14T13:17:21.2782639Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2782995Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2783002Z 
2025-01-14T13:17:21.2783089Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2783243Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2783337Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2783511Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2783596Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2783674Z >       sim.run_final()
2025-01-14T13:17:21.2783678Z 
2025-01-14T13:17:21.2783760Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2783869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2783970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2784109Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2784272Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2784421Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2784580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2784586Z 
2025-01-14T13:17:21.2784849Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2785052Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2785274Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2785600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2785764Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2785899Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2785903Z 
2025-01-14T13:17:21.2786000Z     def initialize_transport_state(
2025-01-14T13:17:21.2786067Z         self,
2025-01-14T13:17:21.2786148Z         simulation_state,
2025-01-14T13:17:21.2786223Z         opacity_state,
2025-01-14T13:17:21.2786302Z         macro_atom_state,
2025-01-14T13:17:21.2786369Z         plasma,
2025-01-14T13:17:21.2786447Z         no_of_packets,
2025-01-14T13:17:21.2786527Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2786603Z         iteration=0,
2025-01-14T13:17:21.2786669Z     ):
2025-01-14T13:17:21.2786798Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2786897Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2786964Z         else:
2025-01-14T13:17:21.2787046Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2787116Z     
2025-01-14T13:17:21.2787256Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2787350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2787423Z         )
2025-01-14T13:17:21.2787490Z     
2025-01-14T13:17:21.2787623Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2787738Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2787896Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2787963Z         else:
2025-01-14T13:17:21.2788048Z             continuum_state = None
2025-01-14T13:17:21.2788145Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2788257Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2788350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2788453Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2788559Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2788724Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2788819Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2788890Z         ).to_numba(
2025-01-14T13:17:21.2788972Z             macro_atom_state,
2025-01-14T13:17:21.2789057Z             self.line_interaction_type,
2025-01-14T13:17:21.2789127Z         )
2025-01-14T13:17:21.2789227Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2789501Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2789567Z         ]
2025-01-14T13:17:21.2789874Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2789878Z 
2025-01-14T13:17:21.2790035Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2790231Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[2-12-1] ____
2025-01-14T13:17:21.2790239Z 
2025-01-14T13:17:21.2790904Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2791385Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2791390Z 
2025-01-14T13:17:21.2791485Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2791855Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2791967Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2792148Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2792235Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2792313Z >       sim.run_final()
2025-01-14T13:17:21.2792320Z 
2025-01-14T13:17:21.2792482Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2792601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2792697Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2792843Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2792943Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2793104Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2793213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2793223Z 
2025-01-14T13:17:21.2793484Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2793688Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2793908Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2794187Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2794347Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2794491Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2794498Z 
2025-01-14T13:17:21.2794584Z     def initialize_transport_state(
2025-01-14T13:17:21.2794658Z         self,
2025-01-14T13:17:21.2794736Z         simulation_state,
2025-01-14T13:17:21.2794816Z         opacity_state,
2025-01-14T13:17:21.2794894Z         macro_atom_state,
2025-01-14T13:17:21.2794962Z         plasma,
2025-01-14T13:17:21.2795038Z         no_of_packets,
2025-01-14T13:17:21.2795118Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2795197Z         iteration=0,
2025-01-14T13:17:21.2795262Z     ):
2025-01-14T13:17:21.2795392Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2795488Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2795559Z         else:
2025-01-14T13:17:21.2795707Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2795777Z     
2025-01-14T13:17:21.2795911Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2796014Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2796081Z         )
2025-01-14T13:17:21.2796150Z     
2025-01-14T13:17:21.2796279Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2796398Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2796554Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2796622Z         else:
2025-01-14T13:17:21.2796708Z             continuum_state = None
2025-01-14T13:17:21.2796806Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2796917Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2797007Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2797118Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2797219Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2797315Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2797408Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2797549Z         ).to_numba(
2025-01-14T13:17:21.2797625Z             macro_atom_state,
2025-01-14T13:17:21.2797716Z             self.line_interaction_type,
2025-01-14T13:17:21.2797834Z         )
2025-01-14T13:17:21.2797941Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2798222Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2798288Z         ]
2025-01-14T13:17:21.2798597Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2798602Z 
2025-01-14T13:17:21.2798753Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2798995Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[3-20-20] ___
2025-01-14T13:17:21.2799002Z 
2025-01-14T13:17:21.2799668Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2800027Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2800032Z 
2025-01-14T13:17:21.2800126Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2800282Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2800383Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2800556Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2800650Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2800728Z >       sim.run_final()
2025-01-14T13:17:21.2800732Z 
2025-01-14T13:17:21.2800818Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2800926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2801030Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2801173Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2801275Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2801433Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2801536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2801540Z 
2025-01-14T13:17:21.2802071Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2802275Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2802501Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2802865Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2803032Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2803172Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2803184Z 
2025-01-14T13:17:21.2803270Z     def initialize_transport_state(
2025-01-14T13:17:21.2803344Z         self,
2025-01-14T13:17:21.2803420Z         simulation_state,
2025-01-14T13:17:21.2803499Z         opacity_state,
2025-01-14T13:17:21.2803574Z         macro_atom_state,
2025-01-14T13:17:21.2803647Z         plasma,
2025-01-14T13:17:21.2803719Z         no_of_packets,
2025-01-14T13:17:21.2803804Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2803875Z         iteration=0,
2025-01-14T13:17:21.2803946Z     ):
2025-01-14T13:17:21.2804071Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2804173Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2804245Z         else:
2025-01-14T13:17:21.2804327Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2804396Z     
2025-01-14T13:17:21.2804539Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2804704Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2804775Z         )
2025-01-14T13:17:21.2804843Z     
2025-01-14T13:17:21.2805023Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2805144Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2805295Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2805366Z         else:
2025-01-14T13:17:21.2805447Z             continuum_state = None
2025-01-14T13:17:21.2805551Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2805657Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2805750Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2805911Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2806018Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2806109Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2806202Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2806274Z         ).to_numba(
2025-01-14T13:17:21.2806356Z             macro_atom_state,
2025-01-14T13:17:21.2806450Z             self.line_interaction_type,
2025-01-14T13:17:21.2806516Z         )
2025-01-14T13:17:21.2806624Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2806891Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2806962Z         ]
2025-01-14T13:17:21.2807264Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2807269Z 
2025-01-14T13:17:21.2807428Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2807600Z _____________ ERROR at setup of TestHDFShellInfo.test_shells_data ______________
2025-01-14T13:17:21.2807604Z 
2025-01-14T13:17:21.2808275Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2808631Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2808634Z 
2025-01-14T13:17:21.2808722Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2808877Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2808972Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2809148Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2809281Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2809359Z >       sim.run_final()
2025-01-14T13:17:21.2809363Z 
2025-01-14T13:17:21.2809448Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2809555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2809656Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2809808Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2809909Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2810064Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2810168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2810172Z 
2025-01-14T13:17:21.2810438Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2810636Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2810862Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2811134Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2811296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2811481Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2811491Z 
2025-01-14T13:17:21.2811798Z     def initialize_transport_state(
2025-01-14T13:17:21.2811876Z         self,
2025-01-14T13:17:21.2811953Z         simulation_state,
2025-01-14T13:17:21.2812033Z         opacity_state,
2025-01-14T13:17:21.2812107Z         macro_atom_state,
2025-01-14T13:17:21.2812180Z         plasma,
2025-01-14T13:17:21.2812251Z         no_of_packets,
2025-01-14T13:17:21.2812335Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2812407Z         iteration=0,
2025-01-14T13:17:21.2812477Z     ):
2025-01-14T13:17:21.2812600Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2812785Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2812854Z         else:
2025-01-14T13:17:21.2812935Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2813000Z     
2025-01-14T13:17:21.2813137Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2813234Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2813305Z         )
2025-01-14T13:17:21.2813377Z     
2025-01-14T13:17:21.2813503Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2813644Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2813811Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2813881Z         else:
2025-01-14T13:17:21.2813962Z             continuum_state = None
2025-01-14T13:17:21.2814065Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2814170Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2814274Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2814379Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2814478Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2814569Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2814666Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2814736Z         ).to_numba(
2025-01-14T13:17:21.2814821Z             macro_atom_state,
2025-01-14T13:17:21.2814911Z             self.line_interaction_type,
2025-01-14T13:17:21.2814980Z         )
2025-01-14T13:17:21.2815085Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2815349Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2815418Z         ]
2025-01-14T13:17:21.2815716Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2815720Z 
2025-01-14T13:17:21.2815946Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2816122Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[1] _________
2025-01-14T13:17:21.2816126Z 
2025-01-14T13:17:21.2816790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2817140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2817145Z 
2025-01-14T13:17:21.2817231Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2817384Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2817480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2817654Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2817741Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2817819Z >       sim.run_final()
2025-01-14T13:17:21.2817823Z 
2025-01-14T13:17:21.2817908Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2818013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2818178Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2818357Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2818458Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2818608Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2818713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2818716Z 
2025-01-14T13:17:21.2818993Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2819209Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2819472Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2819750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2819915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2820052Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2820057Z 
2025-01-14T13:17:21.2820146Z     def initialize_transport_state(
2025-01-14T13:17:21.2820214Z         self,
2025-01-14T13:17:21.2820292Z         simulation_state,
2025-01-14T13:17:21.2820364Z         opacity_state,
2025-01-14T13:17:21.2820441Z         macro_atom_state,
2025-01-14T13:17:21.2820509Z         plasma,
2025-01-14T13:17:21.2820584Z         no_of_packets,
2025-01-14T13:17:21.2820662Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2820737Z         iteration=0,
2025-01-14T13:17:21.2820803Z     ):
2025-01-14T13:17:21.2820935Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2821030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2821102Z         else:
2025-01-14T13:17:21.2821183Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2821252Z     
2025-01-14T13:17:21.2821390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2821488Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2821655Z         )
2025-01-14T13:17:21.2821721Z     
2025-01-14T13:17:21.2821851Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2821962Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2822114Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2822180Z         else:
2025-01-14T13:17:21.2822265Z             continuum_state = None
2025-01-14T13:17:21.2822361Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2822471Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2822630Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2822739Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2822838Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2822932Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2823024Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2823095Z         ).to_numba(
2025-01-14T13:17:21.2823176Z             macro_atom_state,
2025-01-14T13:17:21.2823261Z             self.line_interaction_type,
2025-01-14T13:17:21.2823332Z         )
2025-01-14T13:17:21.2823430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2823700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2823766Z         ]
2025-01-14T13:17:21.2824066Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2824073Z 
2025-01-14T13:17:21.2824217Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2824397Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[20] ________
2025-01-14T13:17:21.2824465Z 
2025-01-14T13:17:21.2825179Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2825523Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2825527Z 
2025-01-14T13:17:21.2825619Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2825768Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2825870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2826103Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2826189Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2826270Z >       sim.run_final()
2025-01-14T13:17:21.2826274Z 
2025-01-14T13:17:21.2826351Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2826470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2826570Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2826713Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2826805Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2826959Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2827060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2827064Z 
2025-01-14T13:17:21.2827328Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2827532Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2827754Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2828027Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2828184Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2828324Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2828328Z 
2025-01-14T13:17:21.2828413Z     def initialize_transport_state(
2025-01-14T13:17:21.2828485Z         self,
2025-01-14T13:17:21.2828561Z         simulation_state,
2025-01-14T13:17:21.2828638Z         opacity_state,
2025-01-14T13:17:21.2828712Z         macro_atom_state,
2025-01-14T13:17:21.2828786Z         plasma,
2025-01-14T13:17:21.2828856Z         no_of_packets,
2025-01-14T13:17:21.2828941Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2829015Z         iteration=0,
2025-01-14T13:17:21.2829129Z     ):
2025-01-14T13:17:21.2829255Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2829346Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2829417Z         else:
2025-01-14T13:17:21.2829496Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2829566Z     
2025-01-14T13:17:21.2829696Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2829799Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2829866Z         )
2025-01-14T13:17:21.2829935Z     
2025-01-14T13:17:21.2830061Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2830173Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2830323Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2830393Z         else:
2025-01-14T13:17:21.2830473Z             continuum_state = None
2025-01-14T13:17:21.2830575Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2830689Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2830777Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2830887Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2831034Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2831131Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2831265Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2831342Z         ).to_numba(
2025-01-14T13:17:21.2831418Z             macro_atom_state,
2025-01-14T13:17:21.2831507Z             self.line_interaction_type,
2025-01-14T13:17:21.2831725Z         )
2025-01-14T13:17:21.2831878Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2832148Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2832221Z         ]
2025-01-14T13:17:21.2832592Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2832599Z 
2025-01-14T13:17:21.2832750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2832928Z _________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:17:21.2832936Z 
2025-01-14T13:17:21.2833598Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2833942Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2833947Z 
2025-01-14T13:17:21.2834040Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2834188Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2834288Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2834461Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2834550Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2834622Z >       sim.run_final()
2025-01-14T13:17:21.2834629Z 
2025-01-14T13:17:21.2834712Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2834818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2834919Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2835056Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2835154Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2835304Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2835411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2835415Z 
2025-01-14T13:17:21.2835685Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2835949Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2836172Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2836443Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2836602Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2836739Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2836743Z 
2025-01-14T13:17:21.2836835Z     def initialize_transport_state(
2025-01-14T13:17:21.2836908Z         self,
2025-01-14T13:17:21.2836983Z         simulation_state,
2025-01-14T13:17:21.2837061Z         opacity_state,
2025-01-14T13:17:21.2837134Z         macro_atom_state,
2025-01-14T13:17:21.2837206Z         plasma,
2025-01-14T13:17:21.2837277Z         no_of_packets,
2025-01-14T13:17:21.2837360Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2837435Z         iteration=0,
2025-01-14T13:17:21.2837507Z     ):
2025-01-14T13:17:21.2837625Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2837721Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2837849Z         else:
2025-01-14T13:17:21.2837929Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2837993Z     
2025-01-14T13:17:21.2838201Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2838296Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2838367Z         )
2025-01-14T13:17:21.2838431Z     
2025-01-14T13:17:21.2838561Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2838678Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2838824Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2838896Z         else:
2025-01-14T13:17:21.2838975Z             continuum_state = None
2025-01-14T13:17:21.2839121Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2839228Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2839321Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2839422Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2839524Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2839617Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2839712Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2839780Z         ).to_numba(
2025-01-14T13:17:21.2839860Z             macro_atom_state,
2025-01-14T13:17:21.2839944Z             self.line_interaction_type,
2025-01-14T13:17:21.2840014Z         )
2025-01-14T13:17:21.2840121Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2840384Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2840454Z         ]
2025-01-14T13:17:21.2840755Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2840760Z 
2025-01-14T13:17:21.2840910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2841088Z ________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[20-20] _________
2025-01-14T13:17:21.2841092Z 
2025-01-14T13:17:21.2841991Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2842346Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2842350Z 
2025-01-14T13:17:21.2842438Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2842593Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2842770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2842946Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2843032Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2843111Z >       sim.run_final()
2025-01-14T13:17:21.2843115Z 
2025-01-14T13:17:21.2843198Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2843309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2843411Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2843547Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2843642Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2843792Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2843898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2843902Z 
2025-01-14T13:17:21.2844162Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2844370Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2844588Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2844997Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2845209Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2845344Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2845348Z 
2025-01-14T13:17:21.2845438Z     def initialize_transport_state(
2025-01-14T13:17:21.2845504Z         self,
2025-01-14T13:17:21.2845584Z         simulation_state,
2025-01-14T13:17:21.2845655Z         opacity_state,
2025-01-14T13:17:21.2845733Z         macro_atom_state,
2025-01-14T13:17:21.2845801Z         plasma,
2025-01-14T13:17:21.2845876Z         no_of_packets,
2025-01-14T13:17:21.2846012Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2846089Z         iteration=0,
2025-01-14T13:17:21.2846154Z     ):
2025-01-14T13:17:21.2846281Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2846375Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2846446Z         else:
2025-01-14T13:17:21.2846521Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2846592Z     
2025-01-14T13:17:21.2846727Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2846820Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2846889Z         )
2025-01-14T13:17:21.2846955Z     
2025-01-14T13:17:21.2847085Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2847196Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2847348Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2847416Z         else:
2025-01-14T13:17:21.2847505Z             continuum_state = None
2025-01-14T13:17:21.2847603Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2847718Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2847806Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2847917Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2848014Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2848109Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2848203Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2848272Z         ).to_numba(
2025-01-14T13:17:21.2848351Z             macro_atom_state,
2025-01-14T13:17:21.2848436Z             self.line_interaction_type,
2025-01-14T13:17:21.2848506Z         )
2025-01-14T13:17:21.2848604Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2848872Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2848993Z         ]
2025-01-14T13:17:21.2849294Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2849298Z 
2025-01-14T13:17:21.2849441Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2849624Z _______ ERROR at setup of TestHDFShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:17:21.2849629Z 
2025-01-14T13:17:21.2850291Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2850632Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2850636Z 
2025-01-14T13:17:21.2850726Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2850879Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2850978Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2851147Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2851281Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2851358Z >       sim.run_final()
2025-01-14T13:17:21.2851362Z 
2025-01-14T13:17:21.2851480Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2851709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2851811Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2851956Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2852048Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2852202Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2852304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2852374Z 
2025-01-14T13:17:21.2852645Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2852843Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2853069Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2853348Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2853503Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2853640Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2853644Z 
2025-01-14T13:17:21.2853731Z     def initialize_transport_state(
2025-01-14T13:17:21.2853803Z         self,
2025-01-14T13:17:21.2853878Z         simulation_state,
2025-01-14T13:17:21.2853955Z         opacity_state,
2025-01-14T13:17:21.2854029Z         macro_atom_state,
2025-01-14T13:17:21.2854102Z         plasma,
2025-01-14T13:17:21.2854179Z         no_of_packets,
2025-01-14T13:17:21.2854263Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2854334Z         iteration=0,
2025-01-14T13:17:21.2854405Z     ):
2025-01-14T13:17:21.2854538Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2854635Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2854709Z         else:
2025-01-14T13:17:21.2854791Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2854863Z     
2025-01-14T13:17:21.2854996Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2855098Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2855165Z         )
2025-01-14T13:17:21.2855234Z     
2025-01-14T13:17:21.2855358Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2855476Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2855622Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2855769Z         else:
2025-01-14T13:17:21.2855854Z             continuum_state = None
2025-01-14T13:17:21.2855959Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2856072Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2856165Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2856276Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2856372Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2856472Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2856561Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2856636Z         ).to_numba(
2025-01-14T13:17:21.2856712Z             macro_atom_state,
2025-01-14T13:17:21.2856801Z             self.line_interaction_type,
2025-01-14T13:17:21.2856865Z         )
2025-01-14T13:17:21.2856968Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2857234Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2857308Z         ]
2025-01-14T13:17:21.2857605Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2857676Z 
2025-01-14T13:17:21.2857822Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2858063Z ______ ERROR at setup of TestHDFShellInfo.test_level_count_data[3-20-20] _______
2025-01-14T13:17:21.2858067Z 
2025-01-14T13:17:21.2858726Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2859071Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2859075Z 
2025-01-14T13:17:21.2859204Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2859362Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2859461Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2859633Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2859729Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2859802Z >       sim.run_final()
2025-01-14T13:17:21.2859808Z 
2025-01-14T13:17:21.2859893Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2859997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2860097Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2860232Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2860329Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2860479Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2860588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2860594Z 
2025-01-14T13:17:21.2860859Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2861056Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2861282Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2861652Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2861813Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2861950Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2861953Z 
2025-01-14T13:17:21.2862044Z     def initialize_transport_state(
2025-01-14T13:17:21.2862112Z         self,
2025-01-14T13:17:21.2862194Z         simulation_state,
2025-01-14T13:17:21.2862274Z         opacity_state,
2025-01-14T13:17:21.2862429Z         macro_atom_state,
2025-01-14T13:17:21.2862505Z         plasma,
2025-01-14T13:17:21.2862575Z         no_of_packets,
2025-01-14T13:17:21.2862661Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2862732Z         iteration=0,
2025-01-14T13:17:21.2862803Z     ):
2025-01-14T13:17:21.2862931Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2863030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2863099Z         else:
2025-01-14T13:17:21.2863182Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2863247Z     
2025-01-14T13:17:21.2863384Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2863476Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2863556Z         )
2025-01-14T13:17:21.2863622Z     
2025-01-14T13:17:21.2863752Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2863861Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2864018Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2864094Z         else:
2025-01-14T13:17:21.2864174Z             continuum_state = None
2025-01-14T13:17:21.2864277Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2864466Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2864564Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2864718Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2864825Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2864917Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2865014Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2865085Z         ).to_numba(
2025-01-14T13:17:21.2865168Z             macro_atom_state,
2025-01-14T13:17:21.2865254Z             self.line_interaction_type,
2025-01-14T13:17:21.2865328Z         )
2025-01-14T13:17:21.2865431Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2865762Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2865838Z         ]
2025-01-14T13:17:21.2866134Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2866141Z 
2025-01-14T13:17:21.2866292Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2866480Z _____ ERROR at setup of TestShellInfoWidget.test_selection_on_shells_table _____
2025-01-14T13:17:21.2866484Z 
2025-01-14T13:17:21.2867143Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2867490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2867501Z 
2025-01-14T13:17:21.2867589Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2867744Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2867838Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2868021Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2868107Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2868189Z >       sim.run_final()
2025-01-14T13:17:21.2868193Z 
2025-01-14T13:17:21.2868273Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2868387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2868486Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2868636Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2868735Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2868886Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2869045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2869049Z 
2025-01-14T13:17:21.2869313Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2869520Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2869745Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2870022Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2870178Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2870318Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2870322Z 
2025-01-14T13:17:21.2870414Z     def initialize_transport_state(
2025-01-14T13:17:21.2870481Z         self,
2025-01-14T13:17:21.2870562Z         simulation_state,
2025-01-14T13:17:21.2870640Z         opacity_state,
2025-01-14T13:17:21.2870722Z         macro_atom_state,
2025-01-14T13:17:21.2870792Z         plasma,
2025-01-14T13:17:21.2870870Z         no_of_packets,
2025-01-14T13:17:21.2870950Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2871074Z         iteration=0,
2025-01-14T13:17:21.2871142Z     ):
2025-01-14T13:17:21.2871277Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2871408Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2871481Z         else:
2025-01-14T13:17:21.2871697Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2871822Z     
2025-01-14T13:17:21.2871962Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2872063Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2872136Z         )
2025-01-14T13:17:21.2872223Z     
2025-01-14T13:17:21.2872356Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2872541Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2872705Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2872774Z         else:
2025-01-14T13:17:21.2872864Z             continuum_state = None
2025-01-14T13:17:21.2872963Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2873080Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2873173Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2873282Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2873378Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2873476Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2873564Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2873639Z         ).to_numba(
2025-01-14T13:17:21.2873721Z             macro_atom_state,
2025-01-14T13:17:21.2873806Z             self.line_interaction_type,
2025-01-14T13:17:21.2873878Z         )
2025-01-14T13:17:21.2873981Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2874257Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2874322Z         ]
2025-01-14T13:17:21.2874624Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2874631Z 
2025-01-14T13:17:21.2874776Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2874982Z _ ERROR at setup of TestShellInfoWidget.test_selection_on_element_count_table __
2025-01-14T13:17:21.2874986Z 
2025-01-14T13:17:21.2875652Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2875997Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2876064Z 
2025-01-14T13:17:21.2876160Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2876311Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2876413Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2876581Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2876675Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2876749Z >       sim.run_final()
2025-01-14T13:17:21.2876760Z 
2025-01-14T13:17:21.2876839Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2876951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2877046Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2877189Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2877282Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2877445Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2877550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2877554Z 
2025-01-14T13:17:21.2877822Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2878087Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2878364Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2878644Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2878800Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2878942Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2878946Z 
2025-01-14T13:17:21.2879032Z     def initialize_transport_state(
2025-01-14T13:17:21.2879105Z         self,
2025-01-14T13:17:21.2879225Z         simulation_state,
2025-01-14T13:17:21.2879306Z         opacity_state,
2025-01-14T13:17:21.2879381Z         macro_atom_state,
2025-01-14T13:17:21.2879456Z         plasma,
2025-01-14T13:17:21.2879529Z         no_of_packets,
2025-01-14T13:17:21.2879619Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2879690Z         iteration=0,
2025-01-14T13:17:21.2879762Z     ):
2025-01-14T13:17:21.2879888Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2879986Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2880058Z         else:
2025-01-14T13:17:21.2880134Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2880205Z     
2025-01-14T13:17:21.2880338Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2880435Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2880502Z         )
2025-01-14T13:17:21.2880571Z     
2025-01-14T13:17:21.2880696Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2880817Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2880965Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2881037Z         else:
2025-01-14T13:17:21.2881115Z             continuum_state = None
2025-01-14T13:17:21.2881221Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2881327Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2881423Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2881535Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2881728Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2881829Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2881918Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2881993Z         ).to_numba(
2025-01-14T13:17:21.2882068Z             macro_atom_state,
2025-01-14T13:17:21.2882162Z             self.line_interaction_type,
2025-01-14T13:17:21.2882299Z         )
2025-01-14T13:17:21.2882403Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2882669Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2882743Z         ]
2025-01-14T13:17:21.2883038Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2883044Z 
2025-01-14T13:17:21.2883194Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2883391Z ___ ERROR at setup of TestShellInfoWidget.test_selection_on_ion_count_table ____
2025-01-14T13:17:21.2883395Z 
2025-01-14T13:17:21.2884049Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:17:21.2884398Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:17:21.2884404Z 
2025-01-14T13:17:21.2884491Z     @pytest.fixture(scope="session")
2025-01-14T13:17:21.2884645Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:17:21.2884805Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2885029Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:17:21.2885122Z         sim.last_no_of_packets = 4000
2025-01-14T13:17:21.2885195Z >       sim.run_final()
2025-01-14T13:17:21.2885198Z 
2025-01-14T13:17:21.2885285Z tardis/conftest.py:233: 
2025-01-14T13:17:21.2885389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2885490Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2885625Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2885782Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2885936Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2886045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2886049Z 
2025-01-14T13:17:21.2886320Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37aabf5b20>
2025-01-14T13:17:21.2886521Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37aa9a66c0>
2025-01-14T13:17:21.2886747Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37b02f8c50>
2025-01-14T13:17:21.2887019Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37b0169340>
2025-01-14T13:17:21.2887179Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37b04ca930>
2025-01-14T13:17:21.2887311Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2887315Z 
2025-01-14T13:17:21.2887407Z     def initialize_transport_state(
2025-01-14T13:17:21.2887480Z         self,
2025-01-14T13:17:21.2887562Z         simulation_state,
2025-01-14T13:17:21.2887636Z         opacity_state,
2025-01-14T13:17:21.2887716Z         macro_atom_state,
2025-01-14T13:17:21.2887785Z         plasma,
2025-01-14T13:17:21.2887867Z         no_of_packets,
2025-01-14T13:17:21.2887950Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2888022Z         iteration=0,
2025-01-14T13:17:21.2888096Z     ):
2025-01-14T13:17:21.2888219Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2888322Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2888390Z         else:
2025-01-14T13:17:21.2888472Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2888538Z     
2025-01-14T13:17:21.2888677Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2888771Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2888846Z         )
2025-01-14T13:17:21.2888912Z     
2025-01-14T13:17:21.2889049Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2889226Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2889382Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2889454Z         else:
2025-01-14T13:17:21.2889544Z             continuum_state = None
2025-01-14T13:17:21.2889648Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2889757Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2889856Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2889960Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2890062Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2890154Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2890250Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2890321Z         ).to_numba(
2025-01-14T13:17:21.2890402Z             macro_atom_state,
2025-01-14T13:17:21.2890490Z             self.line_interaction_type,
2025-01-14T13:17:21.2890561Z         )
2025-01-14T13:17:21.2890662Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2890931Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2891049Z         ]
2025-01-14T13:17:21.2891386Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2891390Z 
2025-01-14T13:17:21.2891541Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2891736Z =================================== FAILURES ===================================
2025-01-14T13:17:21.2891889Z _______________________ test_run_tardis_from_config_obj ________________________
2025-01-14T13:17:21.2891893Z 
2025-01-14T13:17:21.2892257Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.2892517Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:21.2892522Z 
2025-01-14T13:17:21.2892618Z     def test_run_tardis_from_config_obj(
2025-01-14T13:17:21.2892740Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:17:21.2892814Z     ):
2025-01-14T13:17:21.2892880Z         """
2025-01-14T13:17:21.2893070Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:17:21.2893142Z         as arguments
2025-01-14T13:17:21.2893212Z         """
2025-01-14T13:17:21.2893303Z         config = Configuration.from_yaml(
2025-01-14T13:17:21.2893462Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:17:21.2893528Z         )
2025-01-14T13:17:21.2893628Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:21.2893692Z     
2025-01-14T13:17:21.2893767Z         try:
2025-01-14T13:17:21.2893847Z >           sim = run_tardis(config)
2025-01-14T13:17:21.2893853Z 
2025-01-14T13:17:21.2893951Z tardis/tests/test_tardis_full.py:28: 
2025-01-14T13:17:21.2894061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2894147Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.2894243Z     simulation.run_convergence()
2025-01-14T13:17:21.2894356Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.2894499Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2894591Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2894748Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2894852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2894855Z 
2025-01-14T13:17:21.2895121Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37960dc080>
2025-01-14T13:17:21.2895318Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379d3b2240>
2025-01-14T13:17:21.2895613Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f3795fd5880>
2025-01-14T13:17:21.2895889Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3795fd6630>
2025-01-14T13:17:21.2896049Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379d3eca70>
2025-01-14T13:17:21.2896194Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2896200Z 
2025-01-14T13:17:21.2896287Z     def initialize_transport_state(
2025-01-14T13:17:21.2896360Z         self,
2025-01-14T13:17:21.2896439Z         simulation_state,
2025-01-14T13:17:21.2896519Z         opacity_state,
2025-01-14T13:17:21.2896594Z         macro_atom_state,
2025-01-14T13:17:21.2896670Z         plasma,
2025-01-14T13:17:21.2896742Z         no_of_packets,
2025-01-14T13:17:21.2896829Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2896900Z         iteration=0,
2025-01-14T13:17:21.2896974Z     ):
2025-01-14T13:17:21.2897102Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2897203Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2897276Z         else:
2025-01-14T13:17:21.2897352Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2897422Z     
2025-01-14T13:17:21.2897622Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2897722Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2897844Z         )
2025-01-14T13:17:21.2897919Z     
2025-01-14T13:17:21.2898047Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2898169Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2898319Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2898390Z         else:
2025-01-14T13:17:21.2898469Z             continuum_state = None
2025-01-14T13:17:21.2898575Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2898680Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2898820Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2898931Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2899029Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2899131Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2899218Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2899294Z         ).to_numba(
2025-01-14T13:17:21.2899369Z             macro_atom_state,
2025-01-14T13:17:21.2899460Z             self.line_interaction_type,
2025-01-14T13:17:21.2899526Z         )
2025-01-14T13:17:21.2899630Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2899894Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2899964Z         ]
2025-01-14T13:17:21.2900258Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2900272Z 
2025-01-14T13:17:21.2900415Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2900419Z 
2025-01-14T13:17:21.2900588Z During handling of the above exception, another exception occurred:
2025-01-14T13:17:21.2900595Z 
2025-01-14T13:17:21.2900954Z atomic_data_fname = PosixPath('/home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:17:21.2901152Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:17:21.2901156Z 
2025-01-14T13:17:21.2901248Z     def test_run_tardis_from_config_obj(
2025-01-14T13:17:21.2901369Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:17:21.2901434Z     ):
2025-01-14T13:17:21.2901509Z         """
2025-01-14T13:17:21.2901788Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:17:21.2901865Z         as arguments
2025-01-14T13:17:21.2901935Z         """
2025-01-14T13:17:21.2902100Z         config = Configuration.from_yaml(
2025-01-14T13:17:21.2902261Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:17:21.2902326Z         )
2025-01-14T13:17:21.2902425Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:17:21.2902492Z     
2025-01-14T13:17:21.2902564Z         try:
2025-01-14T13:17:21.2902643Z             sim = run_tardis(config)
2025-01-14T13:17:21.2902731Z         except Exception as e:
2025-01-14T13:17:21.2902815Z >           pytest.fail(str(e.args[0]))
2025-01-14T13:17:21.2903074Z E           Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2903079Z 
2025-01-14T13:17:21.2903173Z tardis/tests/test_tardis_full.py:30: Failed
2025-01-14T13:17:21.2903330Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2903720Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2903791Z 	
2025-01-14T13:17:21.2904346Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:17:21.2904513Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2905007Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:17:21.2905227Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2905706Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:17:21.2905943Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2906377Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2906553Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2906816Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2906985Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2907053Z 	
2025-01-14T13:17:21.2907205Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2907356Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2907512Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:17:21.2907846Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:17:21.2908212Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:17:21.2908634Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:17:21.2909130Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2909352Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2909458Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2909547Z 	Starting iteration 1 of 5
2025-01-14T13:17:21.2909694Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-14T13:17:21.2909698Z 
2025-01-14T13:17:21.2910370Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.2910641Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f379dbb1220>
2025-01-14T13:17:21.2911032Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.2911036Z 
2025-01-14T13:17:21.2911128Z     def test_montecarlo_main_loop(
2025-01-14T13:17:21.2911214Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.2911294Z         regression_data,
2025-01-14T13:17:21.2911368Z         atomic_dataset,
2025-01-14T13:17:21.2911440Z     ):
2025-01-14T13:17:21.2911653Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2911884Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:17:21.2911979Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.2912066Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.2912153Z             virtual_packet_logging=False,
2025-01-14T13:17:21.2912240Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.2912316Z         )
2025-01-14T13:17:21.2912439Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:17:21.2912556Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:17:21.2912560Z 
2025-01-14T13:17:21.2912739Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:27: 
2025-01-14T13:17:21.2912856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2913028Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2913227Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2913319Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2913475Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2913578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2913587Z 
2025-01-14T13:17:21.2913849Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3787f75550>
2025-01-14T13:17:21.2914057Z simulation_state = <tardis.model.base.SimulationState object at 0x7f379dc7cfb0>
2025-01-14T13:17:21.2914351Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f379dc8c890>
2025-01-14T13:17:21.2914631Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f379dc8dbb0>
2025-01-14T13:17:21.2914789Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f379dc8eab0>
2025-01-14T13:17:21.2914931Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.2914938Z 
2025-01-14T13:17:21.2915024Z     def initialize_transport_state(
2025-01-14T13:17:21.2915097Z         self,
2025-01-14T13:17:21.2915175Z         simulation_state,
2025-01-14T13:17:21.2915253Z         opacity_state,
2025-01-14T13:17:21.2915331Z         macro_atom_state,
2025-01-14T13:17:21.2915399Z         plasma,
2025-01-14T13:17:21.2915476Z         no_of_packets,
2025-01-14T13:17:21.2915557Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2915632Z         iteration=0,
2025-01-14T13:17:21.2915697Z     ):
2025-01-14T13:17:21.2915829Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2915925Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2915998Z         else:
2025-01-14T13:17:21.2916073Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2916142Z     
2025-01-14T13:17:21.2916278Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2916378Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2916450Z         )
2025-01-14T13:17:21.2916519Z     
2025-01-14T13:17:21.2916645Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2916761Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2916914Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2916982Z         else:
2025-01-14T13:17:21.2917067Z             continuum_state = None
2025-01-14T13:17:21.2917165Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2917278Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2917434Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2917542Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2917639Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2917737Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2917825Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2917900Z         ).to_numba(
2025-01-14T13:17:21.2917976Z             macro_atom_state,
2025-01-14T13:17:21.2918066Z             self.line_interaction_type,
2025-01-14T13:17:21.2918130Z         )
2025-01-14T13:17:21.2918233Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2918507Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2918573Z         ]
2025-01-14T13:17:21.2918874Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2918883Z 
2025-01-14T13:17:21.2919027Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2919179Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2919478Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2919964Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2920139Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2920346Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2920514Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2920581Z 	
2025-01-14T13:17:21.2920679Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2920756Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2920863Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.2921071Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2921145Z 	
2025-01-14T13:17:21.2921296Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2921446Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2922054Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2922278Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2922381Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.2922475Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2922555Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2922559Z 
2025-01-14T13:17:21.2922658Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2922743Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.2922898Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-14T13:17:21.2922907Z 
2025-01-14T13:17:21.2923582Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.2923853Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f379dcf9400>
2025-01-14T13:17:21.2924197Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.2924201Z 
2025-01-14T13:17:21.2924305Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-14T13:17:21.2924387Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.2924467Z         regression_data,
2025-01-14T13:17:21.2924541Z         atomic_dataset,
2025-01-14T13:17:21.2924610Z     ):
2025-01-14T13:17:21.2924710Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.2924955Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-14T13:17:21.2925020Z     
2025-01-14T13:17:21.2925168Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:17:21.2925256Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.2925349Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.2925433Z             virtual_packet_logging=True,
2025-01-14T13:17:21.2925522Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.2925588Z         )
2025-01-14T13:17:21.2925715Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:17:21.2925824Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:17:21.2925828Z 
2025-01-14T13:17:21.2926008Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:80: 
2025-01-14T13:17:21.2926124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2926222Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.2926371Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.2926461Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.2926615Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.2926785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2926789Z 
2025-01-14T13:17:21.2927107Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f37a38f59a0>
2025-01-14T13:17:21.2927315Z simulation_state = <tardis.model.base.SimulationState object at 0x7f37a30effe0>
2025-01-14T13:17:21.2927534Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37889ac7d0>
2025-01-14T13:17:21.2927813Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37889af4a0>
2025-01-14T13:17:21.2927971Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f37a3a4a7e0>
2025-01-14T13:17:21.2928167Z no_of_packets = 100000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:17:21.2928173Z 
2025-01-14T13:17:21.2928262Z     def initialize_transport_state(
2025-01-14T13:17:21.2928334Z         self,
2025-01-14T13:17:21.2928410Z         simulation_state,
2025-01-14T13:17:21.2928491Z         opacity_state,
2025-01-14T13:17:21.2928565Z         macro_atom_state,
2025-01-14T13:17:21.2928638Z         plasma,
2025-01-14T13:17:21.2928710Z         no_of_packets,
2025-01-14T13:17:21.2928799Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.2928878Z         iteration=0,
2025-01-14T13:17:21.2928943Z     ):
2025-01-14T13:17:21.2929074Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.2929168Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.2929238Z         else:
2025-01-14T13:17:21.2929314Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.2929383Z     
2025-01-14T13:17:21.2929519Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.2929620Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.2929688Z         )
2025-01-14T13:17:21.2929757Z     
2025-01-14T13:17:21.2929886Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.2930001Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.2930154Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.2930226Z         else:
2025-01-14T13:17:21.2930315Z             continuum_state = None
2025-01-14T13:17:21.2930415Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.2930526Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.2930617Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.2930726Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.2930826Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.2930924Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.2931014Z             continuum_state=continuum_state,
2025-01-14T13:17:21.2931146Z         ).to_numba(
2025-01-14T13:17:21.2931222Z             macro_atom_state,
2025-01-14T13:17:21.2931312Z             self.line_interaction_type,
2025-01-14T13:17:21.2931377Z         )
2025-01-14T13:17:21.2931482Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.2931854Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.2931926Z         ]
2025-01-14T13:17:21.2932229Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.2932234Z 
2025-01-14T13:17:21.2932379Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.2932529Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.2932773Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.2933213Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.2933387Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2933591Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.2933831Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2933903Z 	
2025-01-14T13:17:21.2934054Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2934133Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2934241Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.2934395Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.2934465Z 	
2025-01-14T13:17:21.2934611Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.2934760Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.2935309Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.2935539Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.2935643Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.2935739Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.2935816Z 	Simulation took 0.00 s
2025-01-14T13:17:21.2935825Z 
2025-01-14T13:17:21.2935928Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.2936013Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.2936237Z _ test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] _
2025-01-14T13:17:21.2936242Z 
2025-01-14T13:17:21.2936428Z expected = 'interaction_type_in_use', obtained = 'interaction_type_to_check'
2025-01-14T13:17:21.2936769Z request = <FixtureRequest for <Function test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check]>>
2025-01-14T13:17:21.2936773Z 
2025-01-14T13:17:21.2936864Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.2936951Z         "expected,obtained",
2025-01-14T13:17:21.2937020Z         [
2025-01-14T13:17:21.2937085Z             (
2025-01-14T13:17:21.2937178Z                 "interaction_type_in_use",
2025-01-14T13:17:21.2937265Z                 "interaction_type_to_check",
2025-01-14T13:17:21.2937339Z             ),
2025-01-14T13:17:21.2937411Z             (
2025-01-14T13:17:21.2937488Z                 "shell_id_in_use",
2025-01-14T13:17:21.2937575Z                 "shell_id_to_check",
2025-01-14T13:17:21.2937641Z             ),
2025-01-14T13:17:21.2937710Z             (
2025-01-14T13:17:21.2937781Z                 "r_in_use",
2025-01-14T13:17:21.2937858Z                 "r_to_check",
2025-01-14T13:17:21.2937923Z             ),
2025-01-14T13:17:21.2938029Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.2938094Z         ],
2025-01-14T13:17:21.2938164Z     )
2025-01-14T13:17:21.2938328Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.2938523Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.2938527Z 
2025-01-14T13:17:21.2938745Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.2938856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.2939142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2939258Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2939551Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2939648Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2939897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2940022Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2940314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2940414Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2940654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2940773Z     raise exc
2025-01-14T13:17:21.2941061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2941155Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2941388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2941643Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2941877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2942072Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2942374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2942550Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2942884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2943003Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2943389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2943456Z     yield
2025-01-14T13:17:21.2943742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2943842Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2944096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2944162Z     yield
2025-01-14T13:17:21.2944447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2944521Z     return (yield)
2025-01-14T13:17:21.2944832Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2944940Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2945281Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2945353Z     yield
2025-01-14T13:17:21.2945624Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2945723Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2945950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2946023Z     raise exc
2025-01-14T13:17:21.2946246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2946386Z     col.setup()
2025-01-14T13:17:21.2946614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2946708Z     self._request._fillfixtures()
2025-01-14T13:17:21.2946973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2947107Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2947378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2947493Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2947786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2947882Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2948133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2948258Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2948544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2948700Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2948994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2949069Z     raise exc
2025-01-14T13:17:21.2949302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2949396Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2949627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2950203Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2956014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2956375Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2956666Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2956853Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2957203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2957326Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2957721Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2957798Z     yield
2025-01-14T13:17:21.2958085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2958194Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2958454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2958524Z     yield
2025-01-14T13:17:21.2958803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2958879Z     return (yield)
2025-01-14T13:17:21.2959193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2959296Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2959636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2959703Z     yield
2025-01-14T13:17:21.2959979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2960075Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2960311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2960453Z     raise exc
2025-01-14T13:17:21.2960678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2960756Z     col.setup()
2025-01-14T13:17:21.2960984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2961076Z     self._request._fillfixtures()
2025-01-14T13:17:21.2961334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2961475Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2961884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2962016Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2962307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2962417Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2962658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2962790Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2963161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2963313Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2963562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2963630Z     raise exc
2025-01-14T13:17:21.2963871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2963958Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2964194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2964417Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2964673Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2964870Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2965122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2965298Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2965650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2965769Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2966149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2966222Z     yield
2025-01-14T13:17:21.2966505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2966617Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2966873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2966945Z     yield
2025-01-14T13:17:21.2967225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2967298Z     return (yield)
2025-01-14T13:17:21.2967613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2967711Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2968055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2968120Z     yield
2025-01-14T13:17:21.2968408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2968568Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2968804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2968880Z     raise exc
2025-01-14T13:17:21.2969104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2969181Z     col.setup()
2025-01-14T13:17:21.2969409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2969502Z     self._request._fillfixtures()
2025-01-14T13:17:21.2969756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2969895Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2970159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2970284Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2970572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2970674Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2970971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2971142Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2971434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2971530Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2971870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2971940Z     raise exc
2025-01-14T13:17:21.2972178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2972294Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2972626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2972794Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2973035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2973233Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2973468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2973633Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2973957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2974072Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2974447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2974521Z     yield
2025-01-14T13:17:21.2974794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2974901Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2975156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2975220Z     yield
2025-01-14T13:17:21.2975499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2975571Z     return (yield)
2025-01-14T13:17:21.2975879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2975978Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2976323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2976452Z     yield
2025-01-14T13:17:21.2976730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2976825Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2977056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2977128Z     raise exc
2025-01-14T13:17:21.2977349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2977424Z     col.setup()
2025-01-14T13:17:21.2977650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2977738Z     self._request._fillfixtures()
2025-01-14T13:17:21.2977995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2978132Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2978397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2978517Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2978799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2978960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2979250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2979373Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2979660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2979752Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2979990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2980057Z     raise exc
2025-01-14T13:17:21.2980341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2980429Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2980660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2980829Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2981058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2981251Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2981486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2981743Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2982068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2982187Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2982555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2982632Z     yield
2025-01-14T13:17:21.2982913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2983013Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2983268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2983334Z     yield
2025-01-14T13:17:21.2983608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2983680Z     return (yield)
2025-01-14T13:17:21.2983991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2984159Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2984502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2984568Z     yield
2025-01-14T13:17:21.2984846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2984946Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2985174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2985248Z     raise exc
2025-01-14T13:17:21.2985467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2985541Z     col.setup()
2025-01-14T13:17:21.2985764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2985854Z     self._request._fillfixtures()
2025-01-14T13:17:21.2986107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2986244Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2986503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2986683Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2987020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2987116Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2987355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2987475Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2987760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2987853Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2988152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2988222Z     raise exc
2025-01-14T13:17:21.2988459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2988548Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2988780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2988944Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2989170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2989367Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2989611Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2989783Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2990112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2990228Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2990601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2990675Z     yield
2025-01-14T13:17:21.2990961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2991062Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2991315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2991382Z     yield
2025-01-14T13:17:21.2991896Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.2992035Z     return (yield)
2025-01-14T13:17:21.2992455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.2992560Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.2992908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.2992979Z     yield
2025-01-14T13:17:21.2993261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.2993362Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.2993590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.2993663Z     raise exc
2025-01-14T13:17:21.2993886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.2993962Z     col.setup()
2025-01-14T13:17:21.2994191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.2994286Z     self._request._fillfixtures()
2025-01-14T13:17:21.2994540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.2994746Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.2995061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.2995186Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.2995476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2995575Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2995821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.2995946Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.2996300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.2996400Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.2996644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.2996717Z     raise exc
2025-01-14T13:17:21.2996959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.2997052Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.2997282Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.2997454Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.2997686Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.2997879Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.2998118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.2998285Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.2998612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.2998732Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.2999114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.2999182Z     yield
2025-01-14T13:17:21.2999465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.2999566Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.2999819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.2999885Z     yield
2025-01-14T13:17:21.3000214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3000287Z     return (yield)
2025-01-14T13:17:21.3000597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3000700Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3001047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3001118Z     yield
2025-01-14T13:17:21.3001389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3001489Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3001936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3002016Z     raise exc
2025-01-14T13:17:21.3002242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3002320Z     col.setup()
2025-01-14T13:17:21.3002545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3002635Z     self._request._fillfixtures()
2025-01-14T13:17:21.3002971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3003185Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3003452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3003570Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3003862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3003958Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3004255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3004385Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3004672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3004769Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3005015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3005082Z     raise exc
2025-01-14T13:17:21.3005321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3005414Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3005642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3005805Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3006038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3006234Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3006468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3006636Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3006962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3007077Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3007450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3007518Z     yield
2025-01-14T13:17:21.3007796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3007896Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3008217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3008283Z     yield
2025-01-14T13:17:21.3008561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3008635Z     return (yield)
2025-01-14T13:17:21.3008946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3009045Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3009387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3009458Z     yield
2025-01-14T13:17:21.3009730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3009828Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3010052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3010127Z     raise exc
2025-01-14T13:17:21.3010347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3010422Z     col.setup()
2025-01-14T13:17:21.3010696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3010822Z     self._request._fillfixtures()
2025-01-14T13:17:21.3011077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3011214Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3011475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3011688Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3011977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3012136Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3012379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3012501Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3012791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3012885Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3013122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3013194Z     raise exc
2025-01-14T13:17:21.3013427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3013518Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3013744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3013915Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3014142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3014333Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3014568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3014736Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3015060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3015166Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3015541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3015608Z     yield
2025-01-14T13:17:21.3015887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3016050Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3016303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3016372Z     yield
2025-01-14T13:17:21.3016648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3016720Z     return (yield)
2025-01-14T13:17:21.3017027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3017131Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3017468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3017542Z     yield
2025-01-14T13:17:21.3017814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3017913Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3018135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3018282Z     raise exc
2025-01-14T13:17:21.3018503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3018630Z     col.setup()
2025-01-14T13:17:21.3018855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3018943Z     self._request._fillfixtures()
2025-01-14T13:17:21.3019199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3019331Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3019597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3019754Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3020041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3020134Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3020376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3020511Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3020795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3020887Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3021126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3021194Z     raise exc
2025-01-14T13:17:21.3021429Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3021519Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3021850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3022016Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3022252Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3022449Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3022683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3022849Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3023171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3023284Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3023653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3023793Z     yield
2025-01-14T13:17:21.3024067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3024171Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3024419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3024490Z     yield
2025-01-14T13:17:21.3024765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3024837Z     return (yield)
2025-01-14T13:17:21.3025145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3025244Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3025592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3025660Z     yield
2025-01-14T13:17:21.3025936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3026028Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3026317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3026441Z     raise exc
2025-01-14T13:17:21.3026667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3026742Z     col.setup()
2025-01-14T13:17:21.3026966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3027057Z     self._request._fillfixtures()
2025-01-14T13:17:21.3027308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3027441Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3027757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3027882Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3028163Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3028268Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3028511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3028632Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3028918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3029009Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3029247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3029314Z     raise exc
2025-01-14T13:17:21.3029556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3029642Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3029873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3030035Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3030268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3030458Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3030691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3030854Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3031174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3031337Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3031905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3031990Z     yield
2025-01-14T13:17:21.3032274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3032379Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3032631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3032697Z     yield
2025-01-14T13:17:21.3032971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3033042Z     return (yield)
2025-01-14T13:17:21.3033349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3033454Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3033794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3033860Z     yield
2025-01-14T13:17:21.3034230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3034376Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3034608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3034681Z     raise exc
2025-01-14T13:17:21.3034898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3034974Z     col.setup()
2025-01-14T13:17:21.3035197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3035286Z     self._request._fillfixtures()
2025-01-14T13:17:21.3035594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3035735Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3035993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3036112Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3036394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3036496Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3036738Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3036858Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3037145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3037237Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3037481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3037549Z     raise exc
2025-01-14T13:17:21.3037783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3037872Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3038105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3038259Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3038490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3038677Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3038911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3039080Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3039464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3039577Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3039947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3040021Z     yield
2025-01-14T13:17:21.3040292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3040392Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3040643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3040710Z     yield
2025-01-14T13:17:21.3040989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3041062Z     return (yield)
2025-01-14T13:17:21.3041372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3041469Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3042044Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3042114Z     yield
2025-01-14T13:17:21.3042461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3042563Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3042787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3042859Z     raise exc
2025-01-14T13:17:21.3043080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3043155Z     col.setup()
2025-01-14T13:17:21.3043434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3043527Z     self._request._fillfixtures()
2025-01-14T13:17:21.3043781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3043922Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3044184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3044301Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3044589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3044685Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3044928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3045049Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3045339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3045432Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3045673Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3045743Z     raise exc
2025-01-14T13:17:21.3045980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3046067Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3046298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3046458Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3046685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3046875Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3047178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3047346Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3047667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3047779Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3048155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3048227Z     yield
2025-01-14T13:17:21.3048517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3048615Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3048866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3048931Z     yield
2025-01-14T13:17:21.3049211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3049283Z     return (yield)
2025-01-14T13:17:21.3049590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3049756Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3050139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3050207Z     yield
2025-01-14T13:17:21.3050480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3050577Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3050800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3050872Z     raise exc
2025-01-14T13:17:21.3051134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3051214Z     col.setup()
2025-01-14T13:17:21.3051439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3051530Z     self._request._fillfixtures()
2025-01-14T13:17:21.3051879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3052018Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3052280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3052398Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3052685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3052780Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3053025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3053153Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3053440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3053539Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3053779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3053849Z     raise exc
2025-01-14T13:17:21.3054086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3054172Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3054403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3054566Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3054796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3055054Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3055292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3055458Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3055781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3055894Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3056263Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3056336Z     yield
2025-01-14T13:17:21.3056615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3056712Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3056967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3057035Z     yield
2025-01-14T13:17:21.3057313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3057449Z     return (yield)
2025-01-14T13:17:21.3057810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3057911Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3058261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3058333Z     yield
2025-01-14T13:17:21.3058602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3058701Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3058983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3059060Z     raise exc
2025-01-14T13:17:21.3059280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3059357Z     col.setup()
2025-01-14T13:17:21.3059580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3059670Z     self._request._fillfixtures()
2025-01-14T13:17:21.3059933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3060076Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3060350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3060466Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3060762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3060860Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3061100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3061224Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3061516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3061702Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3061943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3062011Z     raise exc
2025-01-14T13:17:21.3062247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3062339Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3062571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3062822Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3063051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3063244Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3063485Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3063649Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3063974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3064089Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3064464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3064534Z     yield
2025-01-14T13:17:21.3064816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3064915Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3065166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3065295Z     yield
2025-01-14T13:17:21.3065625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3065699Z     return (yield)
2025-01-14T13:17:21.3066009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3066112Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3066454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3066525Z     yield
2025-01-14T13:17:21.3066851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3066954Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3067177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3067253Z     raise exc
2025-01-14T13:17:21.3067477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3067554Z     col.setup()
2025-01-14T13:17:21.3067777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3067867Z     self._request._fillfixtures()
2025-01-14T13:17:21.3068119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3068256Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3068521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3068641Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3068928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3069020Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3069263Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3069386Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3069673Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3069763Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3070000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3070072Z     raise exc
2025-01-14T13:17:21.3070305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3070465Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3070694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3070854Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3071083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3071274Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3071509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3071871Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3072199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3072342Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3072722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3072792Z     yield
2025-01-14T13:17:21.3073069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3073244Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3073555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3073626Z     yield
2025-01-14T13:17:21.3073908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3073979Z     return (yield)
2025-01-14T13:17:21.3074284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3074388Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3074781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3074860Z     yield
2025-01-14T13:17:21.3075128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3075225Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3075451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3075526Z     raise exc
2025-01-14T13:17:21.3075751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3075827Z     col.setup()
2025-01-14T13:17:21.3076054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3076144Z     self._request._fillfixtures()
2025-01-14T13:17:21.3076399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3076530Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3076800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3076915Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3077204Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3077300Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3077546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3077615Z     raise exc
2025-01-14T13:17:21.3077851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3077937Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3078171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3078336Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3078632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3078823Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3079061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3079232Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3079552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3079663Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3080031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3080103Z     yield
2025-01-14T13:17:21.3080381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3080481Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3080732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3080799Z     yield
2025-01-14T13:17:21.3081123Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3081233Z     return (yield)
2025-01-14T13:17:21.3081543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3081824Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3082171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3082237Z     yield
2025-01-14T13:17:21.3082513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3082683Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3082910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3082984Z     raise exc
2025-01-14T13:17:21.3083203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3083281Z     col.setup()
2025-01-14T13:17:21.3083507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3083596Z     self._request._fillfixtures()
2025-01-14T13:17:21.3083846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3083987Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3084248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3084367Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3084669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3084766Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3085011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3085082Z     raise exc
2025-01-14T13:17:21.3085322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3085409Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3085642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3085801Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3086033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3086224Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3086532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3086706Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3087028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3087152Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3087526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3087600Z     yield
2025-01-14T13:17:21.3087875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3087978Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3088228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3088306Z     yield
2025-01-14T13:17:21.3088584Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3088655Z     return (yield)
2025-01-14T13:17:21.3088961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3089124Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3089519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3089588Z     yield
2025-01-14T13:17:21.3089863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3089956Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3090184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3090255Z     raise exc
2025-01-14T13:17:21.3090548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3090628Z     col.setup()
2025-01-14T13:17:21.3090853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3090945Z     self._request._fillfixtures()
2025-01-14T13:17:21.3091199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3091335Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3091688Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3091812Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3092104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3092208Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3092452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3092524Z     raise exc
2025-01-14T13:17:21.3092763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3092851Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3093088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3093245Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3093479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3093665Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3093907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3094066Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3094467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3094583Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3094952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3095030Z     yield
2025-01-14T13:17:21.3095310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3095415Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3095665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3095740Z     yield
2025-01-14T13:17:21.3096013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3096091Z     return (yield)
2025-01-14T13:17:21.3096402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3096502Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3096846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3096978Z     yield
2025-01-14T13:17:21.3097307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3097402Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3097631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3097699Z     raise exc
2025-01-14T13:17:21.3097929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3098003Z     col.setup()
2025-01-14T13:17:21.3098235Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3098385Z     self._request._fillfixtures()
2025-01-14T13:17:21.3098642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3098777Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3099038Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3099160Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3099445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3099546Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3099787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3099860Z     raise exc
2025-01-14T13:17:21.3100090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3100186Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3100432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3100591Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3100829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3101015Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3101259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3101421Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3101845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3101957Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3102335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3102473Z     yield
2025-01-14T13:17:21.3102751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3102861Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3103112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3103185Z     yield
2025-01-14T13:17:21.3103457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3103536Z     return (yield)
2025-01-14T13:17:21.3103840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3103948Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3104288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3104364Z     yield
2025-01-14T13:17:21.3104640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3104795Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3105023Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3105143Z     raise exc
2025-01-14T13:17:21.3105371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3105444Z     col.setup()
2025-01-14T13:17:21.3105670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3105754Z     self._request._fillfixtures()
2025-01-14T13:17:21.3106011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3106195Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3106463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3106581Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3106866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3106968Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3107207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3107280Z     raise exc
2025-01-14T13:17:21.3107509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3107600Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3107831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3107995Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3108222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3108413Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3108655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3108816Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3109141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3109249Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3109625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3109693Z     yield
2025-01-14T13:17:21.3109974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3110117Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3110369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3110443Z     yield
2025-01-14T13:17:21.3110715Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3110796Z     return (yield)
2025-01-14T13:17:21.3111098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3111206Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3111690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3111804Z     yield
2025-01-14T13:17:21.3112085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3112192Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3112417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3112490Z     raise exc
2025-01-14T13:17:21.3112719Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3112864Z     col.setup()
2025-01-14T13:17:21.3113150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3113236Z     self._request._fillfixtures()
2025-01-14T13:17:21.3113506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3113637Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3113907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3114020Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3114371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3114476Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3114714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3114848Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3115135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3115234Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3115469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3115545Z     raise exc
2025-01-14T13:17:21.3115777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3115870Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3116105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3116268Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3116499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3116690Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3116939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3117102Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3117435Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3117544Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3117923Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3118054Z     yield
2025-01-14T13:17:21.3118337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3118442Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3118694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3118772Z     yield
2025-01-14T13:17:21.3119045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3119122Z     return (yield)
2025-01-14T13:17:21.3119424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3119528Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3119868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3119946Z     yield
2025-01-14T13:17:21.3120214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3120313Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3120591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3120660Z     raise exc
2025-01-14T13:17:21.3120941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3121014Z     col.setup()
2025-01-14T13:17:21.3121243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3121325Z     self._request._fillfixtures()
2025-01-14T13:17:21.3121750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3121899Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3122248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3122374Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3122671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3122777Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3123022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3123151Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3123433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3123533Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3123768Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3123843Z     raise exc
2025-01-14T13:17:21.3124078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3124172Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3124399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3124564Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3124799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3124986Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3125225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3125387Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3125713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3125827Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3126269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3126336Z     yield
2025-01-14T13:17:21.3126617Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3126721Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3126969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3127042Z     yield
2025-01-14T13:17:21.3127314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3127391Z     return (yield)
2025-01-14T13:17:21.3127692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3127800Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3128145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3128221Z     yield
2025-01-14T13:17:21.3128496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3128654Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3128940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3129014Z     raise exc
2025-01-14T13:17:21.3129244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3129315Z     col.setup()
2025-01-14T13:17:21.3129546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3129631Z     self._request._fillfixtures()
2025-01-14T13:17:21.3129930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3130066Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3130330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3130464Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3130754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3130858Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3131091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3131221Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3131501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3131702Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3131944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3132020Z     raise exc
2025-01-14T13:17:21.3132251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3132347Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3132582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3132742Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3132976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3133167Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3133410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3133573Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3133976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3134088Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3134465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3134540Z     yield
2025-01-14T13:17:21.3134817Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3134924Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3135173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3135246Z     yield
2025-01-14T13:17:21.3135521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3135600Z     return (yield)
2025-01-14T13:17:21.3135910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3136022Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3136363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3136500Z     yield
2025-01-14T13:17:21.3136828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3136923Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3137155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3137222Z     raise exc
2025-01-14T13:17:21.3137450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3137522Z     col.setup()
2025-01-14T13:17:21.3137750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3137893Z     self._request._fillfixtures()
2025-01-14T13:17:21.3138151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3138280Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3138548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3138672Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3138954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3139054Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3139291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3139418Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3139700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3139805Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3140039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3140116Z     raise exc
2025-01-14T13:17:21.3140349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3140445Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3140684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3140841Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3141076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3141263Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3141510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3141829Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3142156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3142270Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3142643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3142715Z     yield
2025-01-14T13:17:21.3142989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3143092Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3143340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3143415Z     yield
2025-01-14T13:17:21.3143689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3143769Z     return (yield)
2025-01-14T13:17:21.3144071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3144243Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3144642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3144711Z     yield
2025-01-14T13:17:21.3144986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3145080Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3145312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3145381Z     raise exc
2025-01-14T13:17:21.3145610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3145742Z     col.setup()
2025-01-14T13:17:21.3145979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3146063Z     self._request._fillfixtures()
2025-01-14T13:17:21.3146325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3146463Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3146725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3146845Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3147127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3147228Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3147467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3147599Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3147880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3147980Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3148217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3148293Z     raise exc
2025-01-14T13:17:21.3148534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3148620Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3148853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3149010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3149242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3149494Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3149735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3149895Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3150225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3150339Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3150706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3150778Z     yield
2025-01-14T13:17:21.3151054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3151157Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3151403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3151476Z     yield
2025-01-14T13:17:21.3151938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3152116Z     return (yield)
2025-01-14T13:17:21.3152476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3152585Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3152927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3152994Z     yield
2025-01-14T13:17:21.3153268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3153359Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3153650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3153722Z     raise exc
2025-01-14T13:17:21.3153947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3154017Z     col.setup()
2025-01-14T13:17:21.3154247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3154330Z     self._request._fillfixtures()
2025-01-14T13:17:21.3154591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3154728Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3154988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3155107Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3155389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3155496Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3155729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3155857Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3156142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3156247Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3156488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3156560Z     raise exc
2025-01-14T13:17:21.3156796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3156883Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3157117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3157278Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3157584Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3157771Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3158013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3158174Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3158503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3158617Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3158983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3159055Z     yield
2025-01-14T13:17:21.3159330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3159436Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3159685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3159814Z     yield
2025-01-14T13:17:21.3160085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3160203Z     return (yield)
2025-01-14T13:17:21.3160515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3160614Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3160958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3161024Z     yield
2025-01-14T13:17:21.3161299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3161435Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3161858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3161932Z     raise exc
2025-01-14T13:17:21.3162173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3162243Z     col.setup()
2025-01-14T13:17:21.3162473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3162562Z     self._request._fillfixtures()
2025-01-14T13:17:21.3162815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3162953Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3163214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3163332Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3163623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3163724Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3163961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3164095Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3164379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3164478Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3164715Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3164783Z     raise exc
2025-01-14T13:17:21.3165020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3165106Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3165422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3165580Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3165814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3166004Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3166250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3166416Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3166739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3166854Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3167225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3167299Z     yield
2025-01-14T13:17:21.3167574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3167679Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3167988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3168111Z     yield
2025-01-14T13:17:21.3168386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3168465Z     return (yield)
2025-01-14T13:17:21.3168773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3168873Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3169214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3169336Z     yield
2025-01-14T13:17:21.3169672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3169764Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3170001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3170068Z     raise exc
2025-01-14T13:17:21.3170294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3170363Z     col.setup()
2025-01-14T13:17:21.3170593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3170683Z     self._request._fillfixtures()
2025-01-14T13:17:21.3170934Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3171071Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3171330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3171450Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3171831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3171935Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3172177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3172326Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3172620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3172713Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3172959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3173027Z     raise exc
2025-01-14T13:17:21.3173354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3173441Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3173684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3173846Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3174085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3174273Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3174513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3174678Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3175003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3175119Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3175490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3175563Z     yield
2025-01-14T13:17:21.3175901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3176056Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3176307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3176378Z     yield
2025-01-14T13:17:21.3176657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3176728Z     return (yield)
2025-01-14T13:17:21.3177035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3177188Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3177543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3177609Z     yield
2025-01-14T13:17:21.3177884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3177979Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3178209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3178277Z     raise exc
2025-01-14T13:17:21.3178505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3178581Z     col.setup()
2025-01-14T13:17:21.3178804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3178894Z     self._request._fillfixtures()
2025-01-14T13:17:21.3179151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3179291Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3179550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3179673Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3179957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3180059Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3180295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3180423Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3180707Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3180802Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3181111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3181181Z     raise exc
2025-01-14T13:17:21.3181416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3181506Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3181836Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3181993Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3182224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3182416Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3182653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3182821Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3183151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3183265Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3183634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3183774Z     yield
2025-01-14T13:17:21.3184100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3184205Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3184455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3184527Z     yield
2025-01-14T13:17:21.3184801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3184873Z     return (yield)
2025-01-14T13:17:21.3185239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3185338Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3185683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3185752Z     yield
2025-01-14T13:17:21.3186028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3186124Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3186353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3186420Z     raise exc
2025-01-14T13:17:21.3186643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3186719Z     col.setup()
2025-01-14T13:17:21.3186944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3187036Z     self._request._fillfixtures()
2025-01-14T13:17:21.3187291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3187427Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3187691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3187814Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3188096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3188195Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3188434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3188555Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3188842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3189004Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3189245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3189317Z     raise exc
2025-01-14T13:17:21.3189552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3189640Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3189872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3190032Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3190263Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3190452Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3190689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3190856Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3191176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3191340Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3191964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3192046Z     yield
2025-01-14T13:17:21.3192322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3192434Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3192687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3192752Z     yield
2025-01-14T13:17:21.3193089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3193167Z     return (yield)
2025-01-14T13:17:21.3193476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3193577Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3193920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3193986Z     yield
2025-01-14T13:17:21.3194259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3194351Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3194577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3194649Z     raise exc
2025-01-14T13:17:21.3194871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3194949Z     col.setup()
2025-01-14T13:17:21.3195178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3195266Z     self._request._fillfixtures()
2025-01-14T13:17:21.3195522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3195657Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3195914Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3196032Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3196313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3196414Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3196655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3196847Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3197135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3197230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3197469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3197641Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3197874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3198059Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3198446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3198654Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3198948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3199024Z     return (yield)
2025-01-14T13:17:21.3199304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3199520Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3199828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3199925Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3200139Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3200217Z     sim.iterate(10)
2025-01-14T13:17:21.3200310Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3200470Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3200583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3200647Z 
2025-01-14T13:17:21.3200915Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3201120Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3201343Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3201803Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3201975Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3202112Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3202117Z 
2025-01-14T13:17:21.3202210Z     def initialize_transport_state(
2025-01-14T13:17:21.3202277Z         self,
2025-01-14T13:17:21.3202361Z         simulation_state,
2025-01-14T13:17:21.3202435Z         opacity_state,
2025-01-14T13:17:21.3202514Z         macro_atom_state,
2025-01-14T13:17:21.3202588Z         plasma,
2025-01-14T13:17:21.3202663Z         no_of_packets,
2025-01-14T13:17:21.3202744Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3202819Z         iteration=0,
2025-01-14T13:17:21.3202886Z     ):
2025-01-14T13:17:21.3203021Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3203120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3203191Z         else:
2025-01-14T13:17:21.3203269Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3203339Z     
2025-01-14T13:17:21.3203474Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3203574Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3203642Z         )
2025-01-14T13:17:21.3203711Z     
2025-01-14T13:17:21.3203844Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3203957Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3204115Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3204508Z         else:
2025-01-14T13:17:21.3204595Z             continuum_state = None
2025-01-14T13:17:21.3204693Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3204802Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3204895Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3205007Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3205104Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3205201Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3205289Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3205362Z         ).to_numba(
2025-01-14T13:17:21.3205439Z             macro_atom_state,
2025-01-14T13:17:21.3205529Z             self.line_interaction_type,
2025-01-14T13:17:21.3205602Z         )
2025-01-14T13:17:21.3205702Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3205976Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3206045Z         ]
2025-01-14T13:17:21.3206353Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3206426Z 
2025-01-14T13:17:21.3206576Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3206826Z _____ test_last_interaction_properties[shell_id_in_use-shell_id_to_check] ______
2025-01-14T13:17:21.3206831Z 
2025-01-14T13:17:21.3206969Z expected = 'shell_id_in_use', obtained = 'shell_id_to_check'
2025-01-14T13:17:21.3207258Z request = <FixtureRequest for <Function test_last_interaction_properties[shell_id_in_use-shell_id_to_check]>>
2025-01-14T13:17:21.3207262Z 
2025-01-14T13:17:21.3207353Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3207435Z         "expected,obtained",
2025-01-14T13:17:21.3207506Z         [
2025-01-14T13:17:21.3207571Z             (
2025-01-14T13:17:21.3207746Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3207836Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3207907Z             ),
2025-01-14T13:17:21.3207972Z             (
2025-01-14T13:17:21.3208054Z                 "shell_id_in_use",
2025-01-14T13:17:21.3208136Z                 "shell_id_to_check",
2025-01-14T13:17:21.3208207Z             ),
2025-01-14T13:17:21.3208271Z             (
2025-01-14T13:17:21.3208350Z                 "r_in_use",
2025-01-14T13:17:21.3208423Z                 "r_to_check",
2025-01-14T13:17:21.3208494Z             ),
2025-01-14T13:17:21.3208594Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3208768Z         ],
2025-01-14T13:17:21.3213774Z     )
2025-01-14T13:17:21.3213997Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3214129Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3214134Z 
2025-01-14T13:17:21.3214386Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3214500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3214803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3214933Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3215260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3215364Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3215621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3215750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3216048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3216155Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3216522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3216603Z     raise exc
2025-01-14T13:17:21.3216847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3216945Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3217183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3217355Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3217589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3217788Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3218031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3218202Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3218520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3218623Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3218973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3219111Z     yield
2025-01-14T13:17:21.3219494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3219608Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3219988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3220055Z     yield
2025-01-14T13:17:21.3220337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3220502Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3220761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3220832Z     yield
2025-01-14T13:17:21.3221104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3221188Z     return (yield)
2025-01-14T13:17:21.3221468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3221670Z     return (yield)
2025-01-14T13:17:21.3221944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3222018Z     raise e
2025-01-14T13:17:21.3222284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3222363Z     item.runtest()
2025-01-14T13:17:21.3222605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3222724Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3222962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3223159Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3223409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3223574Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3223844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3223936Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3224277Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3224394Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3224735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3224862Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3225150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3225255Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3225496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3225628Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3225911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3226012Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3226248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3226324Z     raise exc
2025-01-14T13:17:21.3226570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3226662Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3226898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3227125Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3227416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3227610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3227857Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3228020Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3228349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3228524Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3228901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3228978Z     yield
2025-01-14T13:17:21.3229259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3229367Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3229621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3229697Z     yield
2025-01-14T13:17:21.3229972Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3230051Z     return (yield)
2025-01-14T13:17:21.3230354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3230465Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3230810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3230879Z     yield
2025-01-14T13:17:21.3231971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3232076Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3232313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3232383Z     raise exc
2025-01-14T13:17:21.3232610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3232682Z     col.setup()
2025-01-14T13:17:21.3232915Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3233006Z     self._request._fillfixtures()
2025-01-14T13:17:21.3233270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3233491Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3233756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3233881Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3234173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3234276Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3234513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3234645Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3234929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3235031Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3235275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3235344Z     raise exc
2025-01-14T13:17:21.3235583Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3235736Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3236023Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3236186Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3236418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3236605Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3236846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3237090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3237422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3237538Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3237913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3237987Z     yield
2025-01-14T13:17:21.3238264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3238369Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3238617Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3238694Z     yield
2025-01-14T13:17:21.3238970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3239048Z     return (yield)
2025-01-14T13:17:21.3239371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3239472Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3239821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3239892Z     yield
2025-01-14T13:17:21.3240170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3240265Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3240494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3240563Z     raise exc
2025-01-14T13:17:21.3240791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3240864Z     col.setup()
2025-01-14T13:17:21.3241102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3241243Z     self._request._fillfixtures()
2025-01-14T13:17:21.3241504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3241819Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3242091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3242216Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3242502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3242604Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3242843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3242973Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3243265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3243364Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3243605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3243749Z     raise exc
2025-01-14T13:17:21.3244042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3244132Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3244368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3244527Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3244760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3244948Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3245249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3245420Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3245744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3245868Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3246240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3246314Z     yield
2025-01-14T13:17:21.3246590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3246695Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3246942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3247017Z     yield
2025-01-14T13:17:21.3247303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3247376Z     return (yield)
2025-01-14T13:17:21.3247684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3247787Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3248136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3248204Z     yield
2025-01-14T13:17:21.3248480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3248573Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3248800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3248870Z     raise exc
2025-01-14T13:17:21.3249101Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3249242Z     col.setup()
2025-01-14T13:17:21.3249468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3249558Z     self._request._fillfixtures()
2025-01-14T13:17:21.3249833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3249978Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3250247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3250373Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3250665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3250768Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3251011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3251143Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3251433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3251666Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3251972Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3252044Z     raise exc
2025-01-14T13:17:21.3252290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3252380Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3252615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3252777Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3253067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3253265Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3253505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3253678Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3254005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3254122Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3254497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3254571Z     yield
2025-01-14T13:17:21.3254847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3254953Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3255207Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3255281Z     yield
2025-01-14T13:17:21.3255561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3255638Z     return (yield)
2025-01-14T13:17:21.3255953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3256051Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3256396Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3256463Z     yield
2025-01-14T13:17:21.3256741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3256835Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3257071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3257207Z     raise exc
2025-01-14T13:17:21.3257433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3257513Z     col.setup()
2025-01-14T13:17:21.3257742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3257836Z     self._request._fillfixtures()
2025-01-14T13:17:21.3258091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3258228Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3258488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3258611Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3258898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3259007Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3259250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3259374Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3259726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3259875Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3260119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3260188Z     raise exc
2025-01-14T13:17:21.3260425Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3260514Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3260747Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3260951Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3261186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3261382Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3261718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3261890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3262215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3262329Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3262701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3262773Z     yield
2025-01-14T13:17:21.3263050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3263163Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3263416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3263487Z     yield
2025-01-14T13:17:21.3263769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3263842Z     return (yield)
2025-01-14T13:17:21.3264151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3264256Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3264599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3264667Z     yield
2025-01-14T13:17:21.3264944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3265109Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3265336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3265414Z     raise exc
2025-01-14T13:17:21.3265635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3265714Z     col.setup()
2025-01-14T13:17:21.3265942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3266032Z     self._request._fillfixtures()
2025-01-14T13:17:21.3266286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3266423Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3266685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3266810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3267095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3267195Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3267503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3267701Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3267998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3268095Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3268335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3268404Z     raise exc
2025-01-14T13:17:21.3268641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3268783Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3269022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3269185Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3269418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3269611Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3269845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3270012Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3270331Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3270445Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3270820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3270898Z     yield
2025-01-14T13:17:21.3271174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3271281Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3271535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3271781Z     yield
2025-01-14T13:17:21.3272085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3272160Z     return (yield)
2025-01-14T13:17:21.3272508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3272609Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3272960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3273105Z     yield
2025-01-14T13:17:21.3273382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3273482Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3273711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3273788Z     raise exc
2025-01-14T13:17:21.3274010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3274086Z     col.setup()
2025-01-14T13:17:21.3274311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3274400Z     self._request._fillfixtures()
2025-01-14T13:17:21.3274652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3274791Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3275056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3275177Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3275464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3275623Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3275917Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3276042Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3276331Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3276426Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3276666Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3276738Z     raise exc
2025-01-14T13:17:21.3277032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3277122Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3277368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3277529Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3277763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3277949Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3278192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3278353Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3278679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3278797Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3279169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3279246Z     yield
2025-01-14T13:17:21.3279519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3279626Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3279877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3279949Z     yield
2025-01-14T13:17:21.3280220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3280298Z     return (yield)
2025-01-14T13:17:21.3280602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3280764Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3281102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3281176Z     yield
2025-01-14T13:17:21.3281455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3281699Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3281981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3282052Z     raise exc
2025-01-14T13:17:21.3282280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3282352Z     col.setup()
2025-01-14T13:17:21.3282580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3282666Z     self._request._fillfixtures()
2025-01-14T13:17:21.3282930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3283063Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3283328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3283530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3283874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3283979Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3284216Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3284344Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3284626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3284728Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3285034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3285111Z     raise exc
2025-01-14T13:17:21.3285350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3285440Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3285674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3285831Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3286062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3286249Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3286491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3286659Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3286989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3287103Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3287477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3287551Z     yield
2025-01-14T13:17:21.3287826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3287931Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3288175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3288248Z     yield
2025-01-14T13:17:21.3288521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3288664Z     return (yield)
2025-01-14T13:17:21.3288971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3289076Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3289421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3289488Z     yield
2025-01-14T13:17:21.3289771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3289863Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3290093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3290161Z     raise exc
2025-01-14T13:17:21.3290388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3290459Z     col.setup()
2025-01-14T13:17:21.3290689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3290777Z     self._request._fillfixtures()
2025-01-14T13:17:21.3291034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3291224Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3291535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3291762Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3292048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3292148Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3292385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3292512Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3292863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3292966Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3293208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3293282Z     raise exc
2025-01-14T13:17:21.3293541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3293641Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3293877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3294039Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3294272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3294460Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3294705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3294868Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3295194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3295313Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3295685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3295758Z     yield
2025-01-14T13:17:21.3296036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3296141Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3296389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3296525Z     yield
2025-01-14T13:17:21.3296801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3296880Z     return (yield)
2025-01-14T13:17:21.3297188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3297294Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3297638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3297709Z     yield
2025-01-14T13:17:21.3297983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3298076Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3298305Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3298374Z     raise exc
2025-01-14T13:17:21.3298603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3298678Z     col.setup()
2025-01-14T13:17:21.3298909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3299081Z     self._request._fillfixtures()
2025-01-14T13:17:21.3299346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3299538Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3299803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3299924Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3300211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3300315Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3300592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3300724Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3301006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3301112Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3301360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3301428Z     raise exc
2025-01-14T13:17:21.3301784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3301873Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3302119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3302277Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3302514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3302704Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3302947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3303117Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3303441Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3303557Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3303927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3304001Z     yield
2025-01-14T13:17:21.3304277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3304380Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3304702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3304776Z     yield
2025-01-14T13:17:21.3305048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3305130Z     return (yield)
2025-01-14T13:17:21.3305442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3305541Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3305886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3305954Z     yield
2025-01-14T13:17:21.3306229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3306322Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3306553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3306624Z     raise exc
2025-01-14T13:17:21.3306851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3306988Z     col.setup()
2025-01-14T13:17:21.3307220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3307362Z     self._request._fillfixtures()
2025-01-14T13:17:21.3307618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3307754Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3308018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3308136Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3308475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3308580Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3308818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3308948Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3309241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3309334Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3309578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3309647Z     raise exc
2025-01-14T13:17:21.3309883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3309970Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3310205Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3310369Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3310602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3310789Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3311035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3311200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3311524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3311838Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3312216Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3312289Z     yield
2025-01-14T13:17:21.3312655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3312763Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3313011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3313089Z     yield
2025-01-14T13:17:21.3313371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3313443Z     return (yield)
2025-01-14T13:17:21.3313751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3313849Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3314194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3314262Z     yield
2025-01-14T13:17:21.3314539Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3314635Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3314866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3315000Z     raise exc
2025-01-14T13:17:21.3315226Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3315364Z     col.setup()
2025-01-14T13:17:21.3315609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3315701Z     self._request._fillfixtures()
2025-01-14T13:17:21.3315954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3316092Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3316352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3316531Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3316818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3316918Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3317158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3317288Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3317575Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3317669Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3317912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3317980Z     raise exc
2025-01-14T13:17:21.3318221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3318312Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3318548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3318705Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3318940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3319126Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3319367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3319533Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3319855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3319971Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3320344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3320466Z     yield
2025-01-14T13:17:21.3320742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3320847Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3321098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3321170Z     yield
2025-01-14T13:17:21.3321453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3321525Z     return (yield)
2025-01-14T13:17:21.3322027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3322131Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3322479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3322549Z     yield
2025-01-14T13:17:21.3322826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3322994Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3323230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3323353Z     raise exc
2025-01-14T13:17:21.3323582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3323659Z     col.setup()
2025-01-14T13:17:21.3323886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3323977Z     self._request._fillfixtures()
2025-01-14T13:17:21.3324231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3324424Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3324691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3324811Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3325102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3325205Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3325447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3325568Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3325859Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3325956Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3326198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3326274Z     raise exc
2025-01-14T13:17:21.3326513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3326599Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3326831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3326991Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3327224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3327421Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3327657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3327826Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3328149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3328347Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3328720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3328796Z     yield
2025-01-14T13:17:21.3329072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3329183Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3329439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3329506Z     yield
2025-01-14T13:17:21.3329784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3329857Z     return (yield)
2025-01-14T13:17:21.3330170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3330273Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3330619Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3330686Z     yield
2025-01-14T13:17:21.3331009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3331140Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3331372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3331445Z     raise exc
2025-01-14T13:17:21.3331763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3331841Z     col.setup()
2025-01-14T13:17:21.3332066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3332155Z     self._request._fillfixtures()
2025-01-14T13:17:21.3332475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3332617Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3332883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3333007Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3333294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3333395Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3333639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3333760Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3334046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3334143Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3334386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3334455Z     raise exc
2025-01-14T13:17:21.3334692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3334783Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3335017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3335176Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3335411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3335600Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3335835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3336005Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3336399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3336512Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3336884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3336965Z     yield
2025-01-14T13:17:21.3337240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3337343Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3337596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3337664Z     yield
2025-01-14T13:17:21.3337942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3338020Z     return (yield)
2025-01-14T13:17:21.3338329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3338428Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3338837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3338905Z     yield
2025-01-14T13:17:21.3339232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3339326Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3339557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3339632Z     raise exc
2025-01-14T13:17:21.3339853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3339929Z     col.setup()
2025-01-14T13:17:21.3340195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3340288Z     self._request._fillfixtures()
2025-01-14T13:17:21.3340542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3340680Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3340943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3341061Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3341350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3341445Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3341780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3341904Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3342213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3342310Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3342556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3342630Z     raise exc
2025-01-14T13:17:21.3342883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3342975Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3343208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3343371Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3343599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3343795Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3344112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3344285Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3344608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3344731Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3345102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3345177Z     yield
2025-01-14T13:17:21.3345456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3345555Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3345812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3345884Z     yield
2025-01-14T13:17:21.3346168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3346245Z     return (yield)
2025-01-14T13:17:21.3346552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3346715Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3347114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3347183Z     yield
2025-01-14T13:17:21.3347458Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3347557Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3347784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3347858Z     raise exc
2025-01-14T13:17:21.3348135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3348213Z     col.setup()
2025-01-14T13:17:21.3348440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3348541Z     self._request._fillfixtures()
2025-01-14T13:17:21.3348802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3348941Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3349203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3349324Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3349615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3349710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3349957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3350081Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3350371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3350470Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3350710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3350779Z     raise exc
2025-01-14T13:17:21.3351018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3351106Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3351341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3351508Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3351937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3352212Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3352450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3352620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3352945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3353064Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3353434Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3353509Z     yield
2025-01-14T13:17:21.3353793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3353894Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3354154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3354224Z     yield
2025-01-14T13:17:21.3354504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3354640Z     return (yield)
2025-01-14T13:17:21.3355003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3355105Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3355448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3355523Z     yield
2025-01-14T13:17:21.3355795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3355896Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3356198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3356278Z     raise exc
2025-01-14T13:17:21.3356501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3356583Z     col.setup()
2025-01-14T13:17:21.3356809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3356903Z     self._request._fillfixtures()
2025-01-14T13:17:21.3357156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3357295Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3357561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3357676Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3357970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3358073Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3358323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3358398Z     raise exc
2025-01-14T13:17:21.3358640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3358734Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3358973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3359130Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3359369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3359561Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3359800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3360022Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3360346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3360467Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3360842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3360919Z     yield
2025-01-14T13:17:21.3361194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3361300Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3361695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3361803Z     yield
2025-01-14T13:17:21.3362091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3362167Z     return (yield)
2025-01-14T13:17:21.3362479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3362659Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3363061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3363133Z     yield
2025-01-14T13:17:21.3363409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3363502Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3363732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3363806Z     raise exc
2025-01-14T13:17:21.3364029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3364165Z     col.setup()
2025-01-14T13:17:21.3364394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3364484Z     self._request._fillfixtures()
2025-01-14T13:17:21.3364741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3364880Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3365145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3365265Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3365549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3365653Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3365893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3365966Z     raise exc
2025-01-14T13:17:21.3366203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3366291Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3366525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3366689Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3366920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3367107Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3367352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3367519Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3367849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3368030Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3368401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3368478Z     yield
2025-01-14T13:17:21.3368754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3368858Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3369104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3369178Z     yield
2025-01-14T13:17:21.3369451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3369530Z     return (yield)
2025-01-14T13:17:21.3369840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3369944Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3370288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3370402Z     yield
2025-01-14T13:17:21.3370680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3370812Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3371042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3371111Z     raise exc
2025-01-14T13:17:21.3371341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3371413Z     col.setup()
2025-01-14T13:17:21.3371739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3371832Z     self._request._fillfixtures()
2025-01-14T13:17:21.3372152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3372330Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3372598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3372725Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3373010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3373113Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3373351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3373427Z     raise exc
2025-01-14T13:17:21.3373660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3373753Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3373993Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3374151Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3374388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3374580Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3374827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3374991Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3375322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3375436Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3375816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3375957Z     yield
2025-01-14T13:17:21.3376234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3376340Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3376593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3376672Z     yield
2025-01-14T13:17:21.3376947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3377029Z     return (yield)
2025-01-14T13:17:21.3377337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3377445Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3377792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3377865Z     yield
2025-01-14T13:17:21.3378143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3378237Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3378535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3378603Z     raise exc
2025-01-14T13:17:21.3378880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3378953Z     col.setup()
2025-01-14T13:17:21.3379187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3379271Z     self._request._fillfixtures()
2025-01-14T13:17:21.3379529Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3379661Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3379971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3380095Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3380381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3380484Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3380724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3380799Z     raise exc
2025-01-14T13:17:21.3381030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3381121Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3381348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3381510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3381842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3382033Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3382280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3382445Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3382782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3382891Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3383268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3383337Z     yield
2025-01-14T13:17:21.3383618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3383728Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3384049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3384124Z     yield
2025-01-14T13:17:21.3384397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3384477Z     return (yield)
2025-01-14T13:17:21.3384783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3384888Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3385224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3385300Z     yield
2025-01-14T13:17:21.3385571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3385670Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3385904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3385975Z     raise exc
2025-01-14T13:17:21.3386204Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3386338Z     col.setup()
2025-01-14T13:17:21.3386570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3386725Z     self._request._fillfixtures()
2025-01-14T13:17:21.3386987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3387120Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3387389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3387511Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3387860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3387967Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3388202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3388281Z     raise exc
2025-01-14T13:17:21.3388519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3388616Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3388842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3389006Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3389233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3389425Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3389669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3389832Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3390160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3390271Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3390649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3390720Z     yield
2025-01-14T13:17:21.3391000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3391102Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3391359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3391428Z     yield
2025-01-14T13:17:21.3391902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3392060Z     return (yield)
2025-01-14T13:17:21.3392365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3392474Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3392823Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3392899Z     yield
2025-01-14T13:17:21.3393173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3393276Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3393500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3393576Z     raise exc
2025-01-14T13:17:21.3393804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3393885Z     col.setup()
2025-01-14T13:17:21.3394118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3394205Z     self._request._fillfixtures()
2025-01-14T13:17:21.3394531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3394716Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3394983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3395098Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3395385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3395480Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3395722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3395912Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3396199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3396301Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3396542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3396618Z     raise exc
2025-01-14T13:17:21.3396850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3396943Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3397168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3397330Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3397556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3397752Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3398004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3398165Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3398504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3398612Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3398987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3399056Z     yield
2025-01-14T13:17:21.3399336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3399433Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3399688Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3399807Z     yield
2025-01-14T13:17:21.3400081Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3400160Z     return (yield)
2025-01-14T13:17:21.3400465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3400569Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3400910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3400983Z     yield
2025-01-14T13:17:21.3401254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3401355Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3401752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3401850Z     raise exc
2025-01-14T13:17:21.3402080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3402153Z     col.setup()
2025-01-14T13:17:21.3402460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3402547Z     self._request._fillfixtures()
2025-01-14T13:17:21.3402864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3402997Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3403268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3403383Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3403678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3403832Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3404077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3404207Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3404491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3404596Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3404834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3404910Z     raise exc
2025-01-14T13:17:21.3405145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3405239Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3405469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3405647Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3405900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3406093Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3406337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3406501Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3406830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3406946Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3407324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3407392Z     yield
2025-01-14T13:17:21.3407672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3407835Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3408087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3408163Z     yield
2025-01-14T13:17:21.3408436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3408516Z     return (yield)
2025-01-14T13:17:21.3408822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3408929Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3409276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3409369Z     yield
2025-01-14T13:17:21.3409650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3409753Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3409980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3410054Z     raise exc
2025-01-14T13:17:21.3410338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3410410Z     col.setup()
2025-01-14T13:17:21.3410677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3410764Z     self._request._fillfixtures()
2025-01-14T13:17:21.3411021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3411151Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3411416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3411533Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3411982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3412089Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3412326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3412457Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3412741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3412841Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3413075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3413152Z     raise exc
2025-01-14T13:17:21.3413387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3413481Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3413715Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3413877Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3414107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3414303Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3414543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3414704Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3415028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3415137Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3415510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3415644Z     yield
2025-01-14T13:17:21.3415923Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3416026Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3416277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3416353Z     yield
2025-01-14T13:17:21.3416630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3416707Z     return (yield)
2025-01-14T13:17:21.3417011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3417116Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3417457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3417535Z     yield
2025-01-14T13:17:21.3417805Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3417903Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3418211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3418284Z     raise exc
2025-01-14T13:17:21.3418565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3418639Z     col.setup()
2025-01-14T13:17:21.3418869Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3418952Z     self._request._fillfixtures()
2025-01-14T13:17:21.3419211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3419346Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3419652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3419769Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3420059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3420164Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3420403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3420531Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3420813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3420912Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3421147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3421222Z     raise exc
2025-01-14T13:17:21.3421460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3421641Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3421870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3422038Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3422271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3422457Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3422700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3422869Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3423200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3423380Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3423756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3423824Z     yield
2025-01-14T13:17:21.3424104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3424210Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3424457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3424531Z     yield
2025-01-14T13:17:21.3424804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3424880Z     return (yield)
2025-01-14T13:17:21.3425185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3425292Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3425639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3425712Z     yield
2025-01-14T13:17:21.3425987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3426151Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3426432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3426504Z     raise exc
2025-01-14T13:17:21.3426735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3426806Z     col.setup()
2025-01-14T13:17:21.3427040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3427124Z     self._request._fillfixtures()
2025-01-14T13:17:21.3427442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3427579Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3427848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3427978Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3428265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3428367Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3428603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3428730Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3429009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3429113Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3429353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3429429Z     raise exc
2025-01-14T13:17:21.3429664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3429760Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3429996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3430151Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3430385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3430570Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3430810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3430974Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3431354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3431464Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3432036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3432116Z     yield
2025-01-14T13:17:21.3432394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3432499Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3432748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3432821Z     yield
2025-01-14T13:17:21.3433093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3433173Z     return (yield)
2025-01-14T13:17:21.3433481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3433585Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3433926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3434089Z     yield
2025-01-14T13:17:21.3434418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3434515Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3434746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3434815Z     raise exc
2025-01-14T13:17:21.3435048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3435120Z     col.setup()
2025-01-14T13:17:21.3435408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3435498Z     self._request._fillfixtures()
2025-01-14T13:17:21.3435758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3435890Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3436161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3436283Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3436568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3436669Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3436906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3437038Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3437324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3437428Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3437662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3437742Z     raise exc
2025-01-14T13:17:21.3437982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3438072Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3438307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3438463Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3438699Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3438885Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3439131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3439364Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3439694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3439806Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3440184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3440260Z     yield
2025-01-14T13:17:21.3440534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3440636Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3440887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3440964Z     yield
2025-01-14T13:17:21.3441243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3441328Z     return (yield)
2025-01-14T13:17:21.3441818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3442001Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3442400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3442472Z     yield
2025-01-14T13:17:21.3442751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3442845Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3443076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3443145Z     raise exc
2025-01-14T13:17:21.3443437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3443514Z     col.setup()
2025-01-14T13:17:21.3443746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3443830Z     self._request._fillfixtures()
2025-01-14T13:17:21.3444091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3444228Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3444488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3444610Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3444895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3444997Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3445234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3445368Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3445649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3445751Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3445986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3446062Z     raise exc
2025-01-14T13:17:21.3446298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3446385Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3446616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3446774Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3447008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3447283Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3447526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3447689Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3448022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3448135Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3448503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3448579Z     yield
2025-01-14T13:17:21.3448855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3448957Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3449211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3449289Z     yield
2025-01-14T13:17:21.3449565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3449692Z     return (yield)
2025-01-14T13:17:21.3450033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3450139Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3450483Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3450551Z     yield
2025-01-14T13:17:21.3450828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3450921Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3451191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3451265Z     raise exc
2025-01-14T13:17:21.3451492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3451661Z     col.setup()
2025-01-14T13:17:21.3451898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3451983Z     self._request._fillfixtures()
2025-01-14T13:17:21.3452240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3452378Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3452637Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3452761Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3453043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3453150Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3453386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3453513Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3453798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3453901Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3454140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3454209Z     raise exc
2025-01-14T13:17:21.3454449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3454535Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3454769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3454929Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3455231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3455416Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3455658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3455821Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3456148Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3456261Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3456631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3456705Z     yield
2025-01-14T13:17:21.3456983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3457089Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3457339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3457475Z     yield
2025-01-14T13:17:21.3457746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3457876Z     return (yield)
2025-01-14T13:17:21.3458189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3458287Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3458630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3458698Z     yield
2025-01-14T13:17:21.3459030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3459132Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3459364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3459434Z     raise exc
2025-01-14T13:17:21.3459663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3459736Z     col.setup()
2025-01-14T13:17:21.3459967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3460060Z     self._request._fillfixtures()
2025-01-14T13:17:21.3460312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3460448Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3460708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3460834Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3461120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3461221Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3461464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3461686Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3461970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3462069Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3462309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3462379Z     raise exc
2025-01-14T13:17:21.3462616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3462704Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3463012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3463170Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3463400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3463594Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3463833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3464001Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3464322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3464437Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3464808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3464884Z     yield
2025-01-14T13:17:21.3465159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3465333Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3465582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3465710Z     yield
2025-01-14T13:17:21.3465986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3466066Z     return (yield)
2025-01-14T13:17:21.3466376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3466475Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3466873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3466945Z     yield
2025-01-14T13:17:21.3467224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3467318Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3467555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3467624Z     raise exc
2025-01-14T13:17:21.3467851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3467923Z     col.setup()
2025-01-14T13:17:21.3468154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3468247Z     self._request._fillfixtures()
2025-01-14T13:17:21.3468503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3468643Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3468913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3469032Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3469316Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3469418Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3469656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3469783Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3470067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3470160Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3470405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3470473Z     raise exc
2025-01-14T13:17:21.3470764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3470852Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3471095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3471258Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3476596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3476855Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3477135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3477320Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3477681Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3477805Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3478239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3478314Z     yield
2025-01-14T13:17:21.3478754Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3478925Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3479208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3479277Z     yield
2025-01-14T13:17:21.3479567Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3479643Z     return (yield)
2025-01-14T13:17:21.3479962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3480156Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3480509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3480583Z     yield
2025-01-14T13:17:21.3480878Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3480986Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3481232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3481307Z     raise exc
2025-01-14T13:17:21.3481545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3481846Z     col.setup()
2025-01-14T13:17:21.3482085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3482182Z     self._request._fillfixtures()
2025-01-14T13:17:21.3482451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3482595Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3482868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3482990Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3483291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3483390Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3483636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3483761Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3484058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3484158Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3484492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3484671Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3484906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3485112Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3485356Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3485526Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3485813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3485892Z     return (yield)
2025-01-14T13:17:21.3486176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3486316Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3486590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3486682Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3486970Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3487046Z     sim.iterate(10)
2025-01-14T13:17:21.3487198Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3487358Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3487475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3487480Z 
2025-01-14T13:17:21.3487748Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3487955Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3488236Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3488512Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3488682Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3488821Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3488825Z 
2025-01-14T13:17:21.3488920Z     def initialize_transport_state(
2025-01-14T13:17:21.3488991Z         self,
2025-01-14T13:17:21.3489076Z         simulation_state,
2025-01-14T13:17:21.3489152Z         opacity_state,
2025-01-14T13:17:21.3489232Z         macro_atom_state,
2025-01-14T13:17:21.3489302Z         plasma,
2025-01-14T13:17:21.3489383Z         no_of_packets,
2025-01-14T13:17:21.3489466Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3489547Z         iteration=0,
2025-01-14T13:17:21.3489615Z     ):
2025-01-14T13:17:21.3489749Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3489857Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3489925Z         else:
2025-01-14T13:17:21.3490008Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3490075Z     
2025-01-14T13:17:21.3490218Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3490321Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3490393Z         )
2025-01-14T13:17:21.3490462Z     
2025-01-14T13:17:21.3490603Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3490719Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3490877Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3490946Z         else:
2025-01-14T13:17:21.3491035Z             continuum_state = None
2025-01-14T13:17:21.3491134Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3491242Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3491390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3491496Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3491709Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3491804Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3491898Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3491969Z         ).to_numba(
2025-01-14T13:17:21.3492054Z             macro_atom_state,
2025-01-14T13:17:21.3492143Z             self.line_interaction_type,
2025-01-14T13:17:21.3492214Z         )
2025-01-14T13:17:21.3492315Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3492594Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3492661Z         ]
2025-01-14T13:17:21.3492971Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3492975Z 
2025-01-14T13:17:21.3493134Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3493315Z ____________ test_last_interaction_properties[r_in_use-r_to_check] _____________
2025-01-14T13:17:21.3493319Z 
2025-01-14T13:17:21.3493430Z expected = 'r_in_use', obtained = 'r_to_check'
2025-01-14T13:17:21.3493747Z request = <FixtureRequest for <Function test_last_interaction_properties[r_in_use-r_to_check]>>
2025-01-14T13:17:21.3493751Z 
2025-01-14T13:17:21.3493909Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3493996Z         "expected,obtained",
2025-01-14T13:17:21.3494067Z         [
2025-01-14T13:17:21.3494139Z             (
2025-01-14T13:17:21.3494234Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3494322Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3494394Z             ),
2025-01-14T13:17:21.3494464Z             (
2025-01-14T13:17:21.3494544Z                 "shell_id_in_use",
2025-01-14T13:17:21.3494630Z                 "shell_id_to_check",
2025-01-14T13:17:21.3494760Z             ),
2025-01-14T13:17:21.3494834Z             (
2025-01-14T13:17:21.3494909Z                 "r_in_use",
2025-01-14T13:17:21.3494987Z                 "r_to_check",
2025-01-14T13:17:21.3495055Z             ),
2025-01-14T13:17:21.3495160Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3495230Z         ],
2025-01-14T13:17:21.3495302Z     )
2025-01-14T13:17:21.3495471Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3495589Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3495593Z 
2025-01-14T13:17:21.3495815Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3495927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3496211Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3496331Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3496636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3496736Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3496984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3497114Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3497405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3497499Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3497744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3497821Z     raise exc
2025-01-14T13:17:21.3498056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3498152Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3498454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3498623Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3498853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3499055Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3499290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3499460Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3499763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3499870Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3500223Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3500295Z     yield
2025-01-14T13:17:21.3500620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3500733Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3501193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3501263Z     yield
2025-01-14T13:17:21.3501637Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3501737Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3501994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3502068Z     yield
2025-01-14T13:17:21.3502339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3502482Z     return (yield)
2025-01-14T13:17:21.3502762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3502840Z     return (yield)
2025-01-14T13:17:21.3503108Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3503184Z     raise e
2025-01-14T13:17:21.3503452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3503531Z     item.runtest()
2025-01-14T13:17:21.3503762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3503881Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3504113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3504302Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3504549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3504714Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3504985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3505079Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3505422Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3505533Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3505802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3505925Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3506222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3506389Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3506625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3506781Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3507066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3507167Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3507403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3507478Z     raise exc
2025-01-14T13:17:21.3507712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3507804Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3508040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3508204Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3508439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3508626Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3508929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3509162Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3509474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3509575Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3509921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3509993Z     yield
2025-01-14T13:17:21.3510352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3510471Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3510842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3510918Z     yield
2025-01-14T13:17:21.3511192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3511293Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3511544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3511817Z     yield
2025-01-14T13:17:21.3512090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3512169Z     return (yield)
2025-01-14T13:17:21.3512455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3512530Z     return (yield)
2025-01-14T13:17:21.3512803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3512871Z     raise e
2025-01-14T13:17:21.3513146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3513218Z     item.runtest()
2025-01-14T13:17:21.3513455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3513567Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3513802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3513988Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3514230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3514477Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3514744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3514840Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3515178Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3515298Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3515563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3515683Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3515967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3516071Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3516314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3516440Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3516733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3516894Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3517264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3517337Z     raise exc
2025-01-14T13:17:21.3517575Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3517662Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3517895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3518056Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3518341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3518540Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3518776Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3518948Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3519280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3519393Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3519765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3519838Z     yield
2025-01-14T13:17:21.3520116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3520222Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3520481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3520548Z     yield
2025-01-14T13:17:21.3520830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3520905Z     return (yield)
2025-01-14T13:17:21.3521217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3521316Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3521853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3521926Z     yield
2025-01-14T13:17:21.3522206Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3522303Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3522540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3522688Z     raise exc
2025-01-14T13:17:21.3522912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3522989Z     col.setup()
2025-01-14T13:17:21.3523220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3523316Z     self._request._fillfixtures()
2025-01-14T13:17:21.3523574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3523715Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3523976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3524097Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3524381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3524488Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3524732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3524855Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3525210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3525362Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3525606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3525676Z     raise exc
2025-01-14T13:17:21.3525918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3526006Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3526241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3526463Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3526696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3526888Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3527126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3527296Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3527621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3527735Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3528105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3528178Z     yield
2025-01-14T13:17:21.3528461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3528567Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3528822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3528893Z     yield
2025-01-14T13:17:21.3529174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3529246Z     return (yield)
2025-01-14T13:17:21.3529556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3529655Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3529998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3530066Z     yield
2025-01-14T13:17:21.3530343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3530492Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3530720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3530794Z     raise exc
2025-01-14T13:17:21.3531017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3531095Z     col.setup()
2025-01-14T13:17:21.3531325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3531416Z     self._request._fillfixtures()
2025-01-14T13:17:21.3531774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3531913Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3532176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3532299Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3532589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3532687Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3533013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3533189Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3533478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3533573Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3533814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3533883Z     raise exc
2025-01-14T13:17:21.3534125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3534213Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3534507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3534673Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3534904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3535097Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3535332Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3535501Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3535827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3535956Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3536333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3536408Z     yield
2025-01-14T13:17:21.3536683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3536789Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3537040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3537113Z     yield
2025-01-14T13:17:21.3537386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3537464Z     return (yield)
2025-01-14T13:17:21.3537769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3537873Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3538217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3538356Z     yield
2025-01-14T13:17:21.3538630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3538727Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3538958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3539027Z     raise exc
2025-01-14T13:17:21.3539255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3539326Z     col.setup()
2025-01-14T13:17:21.3539556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3539641Z     self._request._fillfixtures()
2025-01-14T13:17:21.3539900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3540036Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3540303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3540426Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3540711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3540881Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3541155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3541285Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3541664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3541769Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3542012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3542082Z     raise exc
2025-01-14T13:17:21.3542385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3542476Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3542710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3542874Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3543106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3543294Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3543536Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3543699Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3544027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3544147Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3544516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3544591Z     yield
2025-01-14T13:17:21.3544864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3544969Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3545219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3545292Z     yield
2025-01-14T13:17:21.3545565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3545643Z     return (yield)
2025-01-14T13:17:21.3545948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3546120Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3546463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3546531Z     yield
2025-01-14T13:17:21.3546810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3546907Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3547140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3547210Z     raise exc
2025-01-14T13:17:21.3547437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3547509Z     col.setup()
2025-01-14T13:17:21.3547741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3547826Z     self._request._fillfixtures()
2025-01-14T13:17:21.3548088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3548227Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3548487Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3548673Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3549010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3549113Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3549352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3549479Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3549765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3549863Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3550156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3550227Z     raise exc
2025-01-14T13:17:21.3550465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3550555Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3550791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3550949Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3551182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3551368Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3551795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3551978Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3552304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3552420Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3552792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3552871Z     yield
2025-01-14T13:17:21.3553148Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3553251Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3553498Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3553571Z     yield
2025-01-14T13:17:21.3553845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3553923Z     return (yield)
2025-01-14T13:17:21.3554314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3554415Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3554757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3554828Z     yield
2025-01-14T13:17:21.3555106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3555198Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3555427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3555496Z     raise exc
2025-01-14T13:17:21.3555723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3555794Z     col.setup()
2025-01-14T13:17:21.3556028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3556120Z     self._request._fillfixtures()
2025-01-14T13:17:21.3556376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3556574Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3556887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3557014Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3557297Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3557397Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3557633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3557760Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3558102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3558200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3558442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3558514Z     raise exc
2025-01-14T13:17:21.3558756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3558843Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3559077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3559235Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3559469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3559655Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3559901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3560068Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3560391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3560507Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3560875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3560947Z     yield
2025-01-14T13:17:21.3561222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3561324Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3561733Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3561837Z     yield
2025-01-14T13:17:21.3562194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3562269Z     return (yield)
2025-01-14T13:17:21.3562579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3562679Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3563024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3563091Z     yield
2025-01-14T13:17:21.3563365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3563458Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3563685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3563759Z     raise exc
2025-01-14T13:17:21.3563986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3564065Z     col.setup()
2025-01-14T13:17:21.3564291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3564381Z     self._request._fillfixtures()
2025-01-14T13:17:21.3564698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3564888Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3565153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3565271Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3565555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3565655Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3565946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3566078Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3566369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3566465Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3566708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3566778Z     raise exc
2025-01-14T13:17:21.3567013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3567100Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3567335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3567494Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3567734Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3567927Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3568163Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3568334Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3568660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3568773Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3569138Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3569212Z     yield
2025-01-14T13:17:21.3569486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3569592Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3569921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3569994Z     yield
2025-01-14T13:17:21.3570278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3570355Z     return (yield)
2025-01-14T13:17:21.3570668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3570769Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3571115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3571183Z     yield
2025-01-14T13:17:21.3571458Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3571645Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3571880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3571951Z     raise exc
2025-01-14T13:17:21.3572178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3572253Z     col.setup()
2025-01-14T13:17:21.3572580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3572726Z     self._request._fillfixtures()
2025-01-14T13:17:21.3572985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3573123Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3573384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3573501Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3573838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3573948Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3574193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3574315Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3574608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3574704Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3574945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3575014Z     raise exc
2025-01-14T13:17:21.3575253Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3575339Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3575571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3575736Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3575970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3576163Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3576402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3576571Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3576893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3577006Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3577373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3577447Z     yield
2025-01-14T13:17:21.3577730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3577900Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3578156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3578227Z     yield
2025-01-14T13:17:21.3578512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3578585Z     return (yield)
2025-01-14T13:17:21.3578895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3578994Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3579335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3579402Z     yield
2025-01-14T13:17:21.3579679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3579775Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3580003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3580122Z     raise exc
2025-01-14T13:17:21.3580344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3580459Z     col.setup()
2025-01-14T13:17:21.3580689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3580783Z     self._request._fillfixtures()
2025-01-14T13:17:21.3581035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3581169Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3581428Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3581699Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3581996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3582099Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3582348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3582473Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3582762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3582856Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3583097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3583167Z     raise exc
2025-01-14T13:17:21.3583406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3583496Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3583731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3583891Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3584126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3584323Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3584557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3584723Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3585045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3585159Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3585530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3585672Z     yield
2025-01-14T13:17:21.3585951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3586056Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3586312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3586380Z     yield
2025-01-14T13:17:21.3586658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3586730Z     return (yield)
2025-01-14T13:17:21.3587040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3587139Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3587484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3587554Z     yield
2025-01-14T13:17:21.3587826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3587923Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3588208Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3588333Z     raise exc
2025-01-14T13:17:21.3588555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3588632Z     col.setup()
2025-01-14T13:17:21.3588857Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3588946Z     self._request._fillfixtures()
2025-01-14T13:17:21.3589200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3589336Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3589638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3589761Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3590050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3590152Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3590398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3590520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3590812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3590905Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3591145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3591216Z     raise exc
2025-01-14T13:17:21.3591457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3591544Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3591968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3592138Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3592369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3592560Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3592795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3592962Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3593287Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3593482Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3593870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3593945Z     yield
2025-01-14T13:17:21.3594231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3594332Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3594590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3594658Z     yield
2025-01-14T13:17:21.3594937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3595011Z     return (yield)
2025-01-14T13:17:21.3595323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3595427Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3595771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3595839Z     yield
2025-01-14T13:17:21.3596179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3596331Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3596561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3596635Z     raise exc
2025-01-14T13:17:21.3596867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3596944Z     col.setup()
2025-01-14T13:17:21.3597184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3597276Z     self._request._fillfixtures()
2025-01-14T13:17:21.3597609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3597753Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3598017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3598140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3598433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3598531Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3598773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3598896Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3599183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3599280Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3599524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3599595Z     raise exc
2025-01-14T13:17:21.3599835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3599926Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3600166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3600333Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3600566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3600760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3600998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3601169Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3601544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3601844Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3602232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3602305Z     yield
2025-01-14T13:17:21.3602591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3602692Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3602947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3603017Z     yield
2025-01-14T13:17:21.3603299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3603374Z     return (yield)
2025-01-14T13:17:21.3603690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3603790Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3604213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3604291Z     yield
2025-01-14T13:17:21.3604618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3604721Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3604947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3605021Z     raise exc
2025-01-14T13:17:21.3605241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3605320Z     col.setup()
2025-01-14T13:17:21.3605603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3605701Z     self._request._fillfixtures()
2025-01-14T13:17:21.3605955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3606097Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3606367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3606481Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3606771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3606866Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3607108Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3607230Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3607524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3607620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3607860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3607933Z     raise exc
2025-01-14T13:17:21.3608173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3608267Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3608492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3608658Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3608889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3609083Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3609392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3609558Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3609881Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3610003Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3610382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3610451Z     yield
2025-01-14T13:17:21.3610735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3610835Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3611089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3611160Z     yield
2025-01-14T13:17:21.3611442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3611514Z     return (yield)
2025-01-14T13:17:21.3611929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3612102Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3612502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3612580Z     yield
2025-01-14T13:17:21.3612852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3612953Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3613178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3613254Z     raise exc
2025-01-14T13:17:21.3613529Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3613613Z     col.setup()
2025-01-14T13:17:21.3613843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3613938Z     self._request._fillfixtures()
2025-01-14T13:17:21.3614193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3614333Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3614601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3614717Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3615011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3615108Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3615354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3615480Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3615772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3615869Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3616113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3616189Z     raise exc
2025-01-14T13:17:21.3616426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3616522Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3616751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3616919Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3617148Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3617407Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3617644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3617824Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3618151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3618267Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3618646Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3618715Z     yield
2025-01-14T13:17:21.3619003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3619108Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3619372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3619441Z     yield
2025-01-14T13:17:21.3619724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3619846Z     return (yield)
2025-01-14T13:17:21.3620201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3620312Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3620656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3620729Z     yield
2025-01-14T13:17:21.3621004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3621104Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3621371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3621454Z     raise exc
2025-01-14T13:17:21.3621773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3621856Z     col.setup()
2025-01-14T13:17:21.3622084Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3622179Z     self._request._fillfixtures()
2025-01-14T13:17:21.3622440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3622578Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3622848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3622966Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3623259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3623362Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3623610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3623738Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3624035Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3624130Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3624373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3624447Z     raise exc
2025-01-14T13:17:21.3624684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3624780Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3625012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3625252Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3625484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3625681Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3625924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3626095Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3626428Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3626543Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3626923Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3626992Z     yield
2025-01-14T13:17:21.3627278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3627380Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3627635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3627766Z     yield
2025-01-14T13:17:21.3628114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3628190Z     return (yield)
2025-01-14T13:17:21.3628501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3628610Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3628951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3629027Z     yield
2025-01-14T13:17:21.3629352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3629461Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3629687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3629765Z     raise exc
2025-01-14T13:17:21.3629986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3630067Z     col.setup()
2025-01-14T13:17:21.3630292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3630388Z     self._request._fillfixtures()
2025-01-14T13:17:21.3630647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3630782Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3631051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3631179Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3631470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3631753Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3632027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3632157Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3632447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3632550Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3632787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3632865Z     raise exc
2025-01-14T13:17:21.3633100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3633276Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3633507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3633673Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3633907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3634110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3634348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3634524Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3634857Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3634969Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3635351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3635422Z     yield
2025-01-14T13:17:21.3635706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3635871Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3636182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3636254Z     yield
2025-01-14T13:17:21.3636536Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3636616Z     return (yield)
2025-01-14T13:17:21.3636921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3637029Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3637419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3637498Z     yield
2025-01-14T13:17:21.3637768Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3637872Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3638099Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3638174Z     raise exc
2025-01-14T13:17:21.3638398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3638476Z     col.setup()
2025-01-14T13:17:21.3638709Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3638794Z     self._request._fillfixtures()
2025-01-14T13:17:21.3639059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3639196Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3639467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3639583Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3639875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3639976Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3640221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3640346Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3640635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3640741Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3640980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3641124Z     raise exc
2025-01-14T13:17:21.3641361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3641460Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3641957Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3642145Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3642381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3642584Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3642828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3642994Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3643330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3643449Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3643829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3644007Z     yield
2025-01-14T13:17:21.3644350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3644455Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3644709Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3644778Z     yield
2025-01-14T13:17:21.3645058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3645140Z     return (yield)
2025-01-14T13:17:21.3645447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3645622Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3645970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3646046Z     yield
2025-01-14T13:17:21.3646325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3646430Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3646656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3646737Z     raise exc
2025-01-14T13:17:21.3646959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3647037Z     col.setup()
2025-01-14T13:17:21.3647271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3647357Z     self._request._fillfixtures()
2025-01-14T13:17:21.3647630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3647765Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3648036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3648160Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3648456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3648554Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3648800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3648876Z     raise exc
2025-01-14T13:17:21.3649112Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3649216Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3649452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3649685Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3649918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3650119Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3650362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3650536Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3650864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3650985Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3651372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3651445Z     yield
2025-01-14T13:17:21.3651863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3651968Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3652308Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3652378Z     yield
2025-01-14T13:17:21.3652722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3652799Z     return (yield)
2025-01-14T13:17:21.3653115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3653227Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3653569Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3653714Z     yield
2025-01-14T13:17:21.3653991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3654096Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3654319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3654404Z     raise exc
2025-01-14T13:17:21.3654629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3654712Z     col.setup()
2025-01-14T13:17:21.3654942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3655035Z     self._request._fillfixtures()
2025-01-14T13:17:21.3655298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3655434Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3655705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3655826Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3656118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3656221Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3656466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3656539Z     raise exc
2025-01-14T13:17:21.3656796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3656889Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3657139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3657312Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3657552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3657823Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3658071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3658256Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3658594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3658717Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3659096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3659175Z     yield
2025-01-14T13:17:21.3659465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3659573Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3659840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3659911Z     yield
2025-01-14T13:17:21.3660198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3660359Z     return (yield)
2025-01-14T13:17:21.3660730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3660838Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3661196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3661267Z     yield
2025-01-14T13:17:21.3661655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3661767Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3662068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3662150Z     raise exc
2025-01-14T13:17:21.3662376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3662462Z     col.setup()
2025-01-14T13:17:21.3662695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3662798Z     self._request._fillfixtures()
2025-01-14T13:17:21.3663058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3663207Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3663475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3663606Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3663910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3664015Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3664266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3664345Z     raise exc
2025-01-14T13:17:21.3664596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3664689Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3664932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3665098Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3665345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3665550Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3665794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3666054Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3666384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3666509Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3666888Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3666967Z     yield
2025-01-14T13:17:21.3667245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3667350Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3667600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3667675Z     yield
2025-01-14T13:17:21.3667962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3668038Z     return (yield)
2025-01-14T13:17:21.3668353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3668522Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3668928Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3669001Z     yield
2025-01-14T13:17:21.3669281Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3669377Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3669610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3669683Z     raise exc
2025-01-14T13:17:21.3669912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3670035Z     col.setup()
2025-01-14T13:17:21.3670266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3670361Z     self._request._fillfixtures()
2025-01-14T13:17:21.3670621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3670766Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3671031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3671156Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3671446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3671695Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3672029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3672109Z     raise exc
2025-01-14T13:17:21.3672379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3672468Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3672707Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3672876Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3673115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3673306Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3673553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3673717Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3674056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3674255Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3674630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3674708Z     yield
2025-01-14T13:17:21.3674986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3675096Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3675346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3675421Z     yield
2025-01-14T13:17:21.3675695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3675776Z     return (yield)
2025-01-14T13:17:21.3676088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3676194Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3676537Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3676671Z     yield
2025-01-14T13:17:21.3676955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3677106Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3677343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3677418Z     raise exc
2025-01-14T13:17:21.3677649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3677722Z     col.setup()
2025-01-14T13:17:21.3677958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3678052Z     self._request._fillfixtures()
2025-01-14T13:17:21.3678371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3678512Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3678772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3678897Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3679190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3679294Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3679534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3679612Z     raise exc
2025-01-14T13:17:21.3679850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3679946Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3680188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3680347Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3680580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3680774Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3681025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3681188Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3681518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3681822Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3682213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3682375Z     yield
2025-01-14T13:17:21.3682651Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3682757Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3683009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3683087Z     yield
2025-01-14T13:17:21.3683371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3683450Z     return (yield)
2025-01-14T13:17:21.3683757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3683864Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3684202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3684279Z     yield
2025-01-14T13:17:21.3684554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3684648Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3684950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3685020Z     raise exc
2025-01-14T13:17:21.3685304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3685379Z     col.setup()
2025-01-14T13:17:21.3685614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3685700Z     self._request._fillfixtures()
2025-01-14T13:17:21.3685964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3686098Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3686427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3686553Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3686841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3686949Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3687191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3687323Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3687610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3687710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3687946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3688021Z     raise exc
2025-01-14T13:17:21.3688269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3688363Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3688599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3688762Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3688999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3689193Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3689436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3689602Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3689935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3690048Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3690496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3690576Z     yield
2025-01-14T13:17:21.3690856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3690964Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3691214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3691287Z     yield
2025-01-14T13:17:21.3691649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3691730Z     return (yield)
2025-01-14T13:17:21.3692037Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3692143Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3692492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3692560Z     yield
2025-01-14T13:17:21.3692836Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3693001Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3693284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3693363Z     raise exc
2025-01-14T13:17:21.3693590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3693662Z     col.setup()
2025-01-14T13:17:21.3693894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3693979Z     self._request._fillfixtures()
2025-01-14T13:17:21.3694295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3694438Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3694701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3694825Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3695111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3695213Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3695450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3695581Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3695861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3695962Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3696200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3696281Z     raise exc
2025-01-14T13:17:21.3696523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3696613Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3696848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3697010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3697244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3697434Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3697674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3697839Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3698237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3698353Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3698726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3698801Z     yield
2025-01-14T13:17:21.3699079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3699185Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3699433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3699508Z     yield
2025-01-14T13:17:21.3699784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3699862Z     return (yield)
2025-01-14T13:17:21.3700169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3700277Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3700620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3700735Z     yield
2025-01-14T13:17:21.3701048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3701144Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3701374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3701443Z     raise exc
2025-01-14T13:17:21.3701760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3701834Z     col.setup()
2025-01-14T13:17:21.3702066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3702213Z     self._request._fillfixtures()
2025-01-14T13:17:21.3702479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3702616Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3702883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3703005Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3703300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3703400Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3703638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3703770Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3704058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3704161Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3704404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3704478Z     raise exc
2025-01-14T13:17:21.3704715Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3704805Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3705040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3705198Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3705432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3705618Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3705862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3706088Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3706413Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3706533Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3706905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3706978Z     yield
2025-01-14T13:17:21.3707252Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3707355Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3707603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3707679Z     yield
2025-01-14T13:17:21.3707955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3708035Z     return (yield)
2025-01-14T13:17:21.3708344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3708957Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3709354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3709426Z     yield
2025-01-14T13:17:21.3709703Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3709798Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3710030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3710100Z     raise exc
2025-01-14T13:17:21.3710369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3710446Z     col.setup()
2025-01-14T13:17:21.3710679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3710771Z     self._request._fillfixtures()
2025-01-14T13:17:21.3711031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3711171Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3711432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3711692Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3712033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3712139Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3712377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3712514Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3712796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3712898Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3713144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3713217Z     raise exc
2025-01-14T13:17:21.3713460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3713549Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3713783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3713941Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3714175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3714448Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3714694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3714860Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3715192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3715308Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3715678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3715753Z     yield
2025-01-14T13:17:21.3716033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3716139Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3716390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3716466Z     yield
2025-01-14T13:17:21.3716744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3716886Z     return (yield)
2025-01-14T13:17:21.3717250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3717354Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3717704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3717772Z     yield
2025-01-14T13:17:21.3718049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3718143Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3718459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3718535Z     raise exc
2025-01-14T13:17:21.3718763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3718835Z     col.setup()
2025-01-14T13:17:21.3719070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3719160Z     self._request._fillfixtures()
2025-01-14T13:17:21.3719418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3719557Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3719818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3719937Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3720221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3720325Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3720560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3720689Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3720981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3721078Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3721320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3721390Z     raise exc
2025-01-14T13:17:21.3721814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3721909Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3722145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3722310Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3722625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3722814Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3723059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3723229Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3723550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3723666Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3724036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3724110Z     yield
2025-01-14T13:17:21.3724384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3724492Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3724739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3724876Z     yield
2025-01-14T13:17:21.3725154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3725280Z     return (yield)
2025-01-14T13:17:21.3725594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3725695Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3726036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3726107Z     yield
2025-01-14T13:17:21.3726383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3726535Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3726767Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3726837Z     raise exc
2025-01-14T13:17:21.3727067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3727145Z     col.setup()
2025-01-14T13:17:21.3727372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3727464Z     self._request._fillfixtures()
2025-01-14T13:17:21.3727720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3727857Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3728120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3728239Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3728526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3728629Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3728867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3728999Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3729289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3729388Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3729627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3729696Z     raise exc
2025-01-14T13:17:21.3729935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3730024Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3730317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3730475Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3730712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3730906Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3731143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3731309Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3731743Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3731876Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3732337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3732485Z     yield
2025-01-14T13:17:21.3732795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3732991Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3733550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3733734Z     yield
2025-01-14T13:17:21.3738866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3738959Z     return (yield)
2025-01-14T13:17:21.3739312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3739427Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3739790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3739978Z     yield
2025-01-14T13:17:21.3740277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3740382Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3740632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3740707Z     raise exc
2025-01-14T13:17:21.3740944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3741021Z     col.setup()
2025-01-14T13:17:21.3741250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3741343Z     self._request._fillfixtures()
2025-01-14T13:17:21.3741897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3742134Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3742446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3742568Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3742863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3742970Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3743215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3743342Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3743646Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3743751Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3743998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3744075Z     raise exc
2025-01-14T13:17:21.3744480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3744586Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3744820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3745001Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3745234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3745432Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3745670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3745841Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3746173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3746293Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3746676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3746744Z     yield
2025-01-14T13:17:21.3747128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3747283Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3747549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3747617Z     yield
2025-01-14T13:17:21.3747903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3747982Z     return (yield)
2025-01-14T13:17:21.3748288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3748454Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3748802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3748873Z     yield
2025-01-14T13:17:21.3749152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3749255Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3749486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3749561Z     raise exc
2025-01-14T13:17:21.3749781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3749858Z     col.setup()
2025-01-14T13:17:21.3750090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3750177Z     self._request._fillfixtures()
2025-01-14T13:17:21.3750443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3750584Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3750854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3750975Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3751270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3751366Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3751792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3751947Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3752240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3752340Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3752658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3752734Z     raise exc
2025-01-14T13:17:21.3752973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3753072Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3753307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3753476Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3753704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3753901Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3754142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3754307Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3754644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3754754Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3755133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3755297Z     yield
2025-01-14T13:17:21.3755631Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3755735Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3755989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3756059Z     yield
2025-01-14T13:17:21.3756338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3756413Z     return (yield)
2025-01-14T13:17:21.3756779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3756886Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3757226Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3757304Z     yield
2025-01-14T13:17:21.3757574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3757673Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3757897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3757969Z     raise exc
2025-01-14T13:17:21.3758194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3758265Z     col.setup()
2025-01-14T13:17:21.3758497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3758584Z     self._request._fillfixtures()
2025-01-14T13:17:21.3758844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3758978Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3759256Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3759374Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3759665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3759759Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3759999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3760127Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3760413Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3760574Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3760810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3760887Z     raise exc
2025-01-14T13:17:21.3761117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3761211Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3761440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3761837Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3762096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3762293Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3762542Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3762712Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3763047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3763263Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3763698Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3763771Z     yield
2025-01-14T13:17:21.3764053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3764152Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3764404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3764480Z     yield
2025-01-14T13:17:21.3764809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3764889Z     return (yield)
2025-01-14T13:17:21.3765194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3765302Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3765642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3765713Z     yield
2025-01-14T13:17:21.3765982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3766079Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3766301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3766375Z     raise exc
2025-01-14T13:17:21.3766603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3766675Z     col.setup()
2025-01-14T13:17:21.3766904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3766987Z     self._request._fillfixtures()
2025-01-14T13:17:21.3767248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3767380Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3767645Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3767759Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3768046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3768146Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3768383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3768582Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3768864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3768964Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3769198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3769276Z     raise exc
2025-01-14T13:17:21.3769514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3769608Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3769840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3770011Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3770246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3770440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3770689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3770913Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3771289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3771402Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3771930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3771999Z     yield
2025-01-14T13:17:21.3772286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3772420Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3772803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3772881Z     yield
2025-01-14T13:17:21.3773185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3773274Z     return (yield)
2025-01-14T13:17:21.3773588Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3773697Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3774037Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3774107Z     yield
2025-01-14T13:17:21.3774377Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3774476Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3774712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3774783Z     raise exc
2025-01-14T13:17:21.3775007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3775078Z     col.setup()
2025-01-14T13:17:21.3775312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3775397Z     self._request._fillfixtures()
2025-01-14T13:17:21.3775662Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3775796Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3776063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3776182Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3776476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3776649Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3776889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3777017Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3777301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3777405Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3777641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.3777818Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.3778047Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3778242Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3778483Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3778647Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3778935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.3779071Z     return (yield)
2025-01-14T13:17:21.3779426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.3779561Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.3779834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.3779926Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.3780146Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.3780218Z     sim.iterate(10)
2025-01-14T13:17:21.3780316Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.3780519Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.3780630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3780635Z 
2025-01-14T13:17:21.3780899Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.3781106Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.3781332Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.3781813Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.3782074Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.3782218Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.3782228Z 
2025-01-14T13:17:21.3782321Z     def initialize_transport_state(
2025-01-14T13:17:21.3782393Z         self,
2025-01-14T13:17:21.3782483Z         simulation_state,
2025-01-14T13:17:21.3782563Z         opacity_state,
2025-01-14T13:17:21.3782636Z         macro_atom_state,
2025-01-14T13:17:21.3782713Z         plasma,
2025-01-14T13:17:21.3782785Z         no_of_packets,
2025-01-14T13:17:21.3782874Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.3782945Z         iteration=0,
2025-01-14T13:17:21.3783017Z     ):
2025-01-14T13:17:21.3783146Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.3783249Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.3783315Z         else:
2025-01-14T13:17:21.3783397Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.3783462Z     
2025-01-14T13:17:21.3783603Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.3783699Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.3783771Z         )
2025-01-14T13:17:21.3783842Z     
2025-01-14T13:17:21.3783975Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.3784231Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.3784389Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.3784459Z         else:
2025-01-14T13:17:21.3784545Z             continuum_state = None
2025-01-14T13:17:21.3784649Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.3784758Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.3784852Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.3784956Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.3785056Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.3785148Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.3785244Z             continuum_state=continuum_state,
2025-01-14T13:17:21.3785311Z         ).to_numba(
2025-01-14T13:17:21.3785392Z             macro_atom_state,
2025-01-14T13:17:21.3785482Z             self.line_interaction_type,
2025-01-14T13:17:21.3785551Z         )
2025-01-14T13:17:21.3785656Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.3785927Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.3786069Z         ]
2025-01-14T13:17:21.3786424Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.3786429Z 
2025-01-14T13:17:21.3786585Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.3786775Z ______ test_last_interaction_properties[nu_packet_collection-nu_to_check] ______
2025-01-14T13:17:21.3786781Z 
2025-01-14T13:17:21.3786922Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:17:21.3787212Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:17:21.3787216Z 
2025-01-14T13:17:21.3787303Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.3787448Z         "expected,obtained",
2025-01-14T13:17:21.3787517Z         [
2025-01-14T13:17:21.3787587Z             (
2025-01-14T13:17:21.3787676Z                 "interaction_type_in_use",
2025-01-14T13:17:21.3787769Z                 "interaction_type_to_check",
2025-01-14T13:17:21.3787840Z             ),
2025-01-14T13:17:21.3787909Z             (
2025-01-14T13:17:21.3787988Z                 "shell_id_in_use",
2025-01-14T13:17:21.3788073Z                 "shell_id_to_check",
2025-01-14T13:17:21.3788138Z             ),
2025-01-14T13:17:21.3788210Z             (
2025-01-14T13:17:21.3788283Z                 "r_in_use",
2025-01-14T13:17:21.3788360Z                 "r_to_check",
2025-01-14T13:17:21.3788425Z             ),
2025-01-14T13:17:21.3788531Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:17:21.3788601Z         ],
2025-01-14T13:17:21.3788666Z     )
2025-01-14T13:17:21.3788834Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:17:21.3788951Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3788955Z 
2025-01-14T13:17:21.3789181Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:17:21.3789285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.3789572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3789687Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3789982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3790078Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3790327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3790459Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3790744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3790894Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3791128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3791202Z     raise exc
2025-01-14T13:17:21.3791440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3791534Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3792027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3792201Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3792440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3792629Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3792875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3793041Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3793351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3793532Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3793944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3794014Z     yield
2025-01-14T13:17:21.3794341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3794458Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3794827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3794900Z     yield
2025-01-14T13:17:21.3795236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3795339Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3795590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3795666Z     yield
2025-01-14T13:17:21.3795941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3796020Z     return (yield)
2025-01-14T13:17:21.3796296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3796372Z     return (yield)
2025-01-14T13:17:21.3796641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3796708Z     raise e
2025-01-14T13:17:21.3796980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3797053Z     item.runtest()
2025-01-14T13:17:21.3797290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3797401Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3797637Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3797828Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3798083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3798245Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3798517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3798606Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3798950Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3799126Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3799394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3799512Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3799804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3799905Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3800141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3800268Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3800552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3800651Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3800889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3800962Z     raise exc
2025-01-14T13:17:21.3801195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3801336Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3801882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3802071Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3802311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3802502Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3802743Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3802965Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3803279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3803380Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3803729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3803795Z     yield
2025-01-14T13:17:21.3804117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3804229Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3804599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3804669Z     yield
2025-01-14T13:17:21.3804942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3805046Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3805294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3805365Z     yield
2025-01-14T13:17:21.3805633Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3805713Z     return (yield)
2025-01-14T13:17:21.3805991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3806066Z     return (yield)
2025-01-14T13:17:21.3806334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3806403Z     raise e
2025-01-14T13:17:21.3806669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3806741Z     item.runtest()
2025-01-14T13:17:21.3806975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3807149Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3807380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3807565Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3807807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3807968Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3808236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3808328Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3808660Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3808777Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3809043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3809161Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3809445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3809611Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3809886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3810015Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3810301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3810395Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3810634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3810705Z     raise exc
2025-01-14T13:17:21.3811005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3811096Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3811328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3811491Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3811838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3812022Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3812264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3812430Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3812732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.3812841Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3813182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3813256Z     yield
2025-01-14T13:17:21.3813572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.3813687Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3814057Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3814129Z     yield
2025-01-14T13:17:21.3814405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.3814500Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.3814756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3814893Z     yield
2025-01-14T13:17:21.3815167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.3815237Z     return (yield)
2025-01-14T13:17:21.3815519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.3815590Z     return (yield)
2025-01-14T13:17:21.3815863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.3815930Z     raise e
2025-01-14T13:17:21.3816196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.3816273Z     item.runtest()
2025-01-14T13:17:21.3816502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.3816615Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.3816843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3817030Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3817267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3817494Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3817810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.3817904Z     result = testfunction(**testargs)
2025-01-14T13:17:21.3818238Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:17:21.3818346Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.3818612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3818783Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3819074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3819168Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3819409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3819532Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3819820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3819912Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3820151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3820224Z     raise exc
2025-01-14T13:17:21.3820456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3820554Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3820779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3820943Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3821174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3821364Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3821705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3821872Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3822201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3822309Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3822689Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3822836Z     yield
2025-01-14T13:17:21.3823117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3823218Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3823474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3823541Z     yield
2025-01-14T13:17:21.3823818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3823888Z     return (yield)
2025-01-14T13:17:21.3824198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3824300Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3824642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3824714Z     yield
2025-01-14T13:17:21.3824984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3825150Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3825380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3825508Z     raise exc
2025-01-14T13:17:21.3825735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3825812Z     col.setup()
2025-01-14T13:17:21.3826037Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3826127Z     self._request._fillfixtures()
2025-01-14T13:17:21.3826388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3826578Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3826850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3826965Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3827257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3827355Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3827595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3827715Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3828001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3828100Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3828334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3828411Z     raise exc
2025-01-14T13:17:21.3828642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3828733Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3828958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3829123Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3829349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3829545Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3829781Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3829946Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3830275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3830431Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3830807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3830876Z     yield
2025-01-14T13:17:21.3831158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3831258Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3831511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3831732Z     yield
2025-01-14T13:17:21.3832041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3832118Z     return (yield)
2025-01-14T13:17:21.3832423Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3832531Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3832868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3832939Z     yield
2025-01-14T13:17:21.3833284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3833439Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3833666Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3833742Z     raise exc
2025-01-14T13:17:21.3833961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3834037Z     col.setup()
2025-01-14T13:17:21.3834269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3834354Z     self._request._fillfixtures()
2025-01-14T13:17:21.3834671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3834806Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3835073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3835189Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3835480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3835574Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3835815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3835934Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3836219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3836320Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3836558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3836630Z     raise exc
2025-01-14T13:17:21.3836860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3836956Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3837183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3837347Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3837572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3837762Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3838002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3838166Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3838555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3838664Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3839040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3839108Z     yield
2025-01-14T13:17:21.3839389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3839486Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3839739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3839805Z     yield
2025-01-14T13:17:21.3840082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3840162Z     return (yield)
2025-01-14T13:17:21.3840470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3840574Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3840956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3841028Z     yield
2025-01-14T13:17:21.3841354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3841457Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3841865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3841942Z     raise exc
2025-01-14T13:17:21.3842167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3842239Z     col.setup()
2025-01-14T13:17:21.3842538Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3842627Z     self._request._fillfixtures()
2025-01-14T13:17:21.3842887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3843022Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3843288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3843401Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3843695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3843791Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3844033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3844158Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3844446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3844544Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3844779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3844855Z     raise exc
2025-01-14T13:17:21.3845090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3845182Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3845410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3845571Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3845802Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3845991Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3846298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3846461Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3846792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3846905Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3847284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3847349Z     yield
2025-01-14T13:17:21.3847629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3847726Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3847977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3848049Z     yield
2025-01-14T13:17:21.3848323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3848400Z     return (yield)
2025-01-14T13:17:21.3848704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3848869Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3849261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3849334Z     yield
2025-01-14T13:17:21.3849604Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3849703Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3849926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3849998Z     raise exc
2025-01-14T13:17:21.3850268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3850340Z     col.setup()
2025-01-14T13:17:21.3850568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3850654Z     self._request._fillfixtures()
2025-01-14T13:17:21.3850909Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3851043Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3851310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3851422Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3851806Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3851902Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3852145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3852272Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3852553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3852654Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3852890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3852962Z     raise exc
2025-01-14T13:17:21.3853194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3853286Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3853524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3853689Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3853925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3854179Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3854420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3854582Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3854911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3855020Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3855394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3855460Z     yield
2025-01-14T13:17:21.3855739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3855843Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3856092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3856162Z     yield
2025-01-14T13:17:21.3856431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3856572Z     return (yield)
2025-01-14T13:17:21.3856924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3857029Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3857365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3857436Z     yield
2025-01-14T13:17:21.3857704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3857802Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3858086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3858156Z     raise exc
2025-01-14T13:17:21.3858381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3858453Z     col.setup()
2025-01-14T13:17:21.3858684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3858768Z     self._request._fillfixtures()
2025-01-14T13:17:21.3859023Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3859152Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3859416Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3859530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3859818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3859923Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3860156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3860284Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3860566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3860665Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3860899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3860972Z     raise exc
2025-01-14T13:17:21.3861209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3861302Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3861528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3861841Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3862074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3862259Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3862505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3862665Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3863005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3863114Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3863501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3863568Z     yield
2025-01-14T13:17:21.3863852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3863957Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3864203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3864343Z     yield
2025-01-14T13:17:21.3864669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3864748Z     return (yield)
2025-01-14T13:17:21.3865056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3865162Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3865502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3865576Z     yield
2025-01-14T13:17:21.3865899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3866004Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3866234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3866305Z     raise exc
2025-01-14T13:17:21.3866532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3866603Z     col.setup()
2025-01-14T13:17:21.3866833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3866916Z     self._request._fillfixtures()
2025-01-14T13:17:21.3867172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3867301Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3867566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3867683Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3867973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3868075Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3868313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3868440Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3868720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3868822Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3869059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3869134Z     raise exc
2025-01-14T13:17:21.3869368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3869532Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3869765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3869925Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3870162Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3870350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3870597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3870757Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3871087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3871196Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3871723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3871836Z     yield
2025-01-14T13:17:21.3872114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3872314Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3872647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3872724Z     yield
2025-01-14T13:17:21.3872996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3873077Z     return (yield)
2025-01-14T13:17:21.3873380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3873484Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3873886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3873971Z     yield
2025-01-14T13:17:21.3874250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3874345Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3874579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3874653Z     raise exc
2025-01-14T13:17:21.3874882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3874954Z     col.setup()
2025-01-14T13:17:21.3875185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3875271Z     self._request._fillfixtures()
2025-01-14T13:17:21.3875531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3875666Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3875936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3876056Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3876344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3876449Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3876685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3876816Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3877099Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3877202Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3877439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3877580Z     raise exc
2025-01-14T13:17:21.3877815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3877909Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3878142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3878307Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3878543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3878728Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3878971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3879132Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3879466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3879578Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3879955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3880077Z     yield
2025-01-14T13:17:21.3880391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3880500Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3880749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3880823Z     yield
2025-01-14T13:17:21.3881099Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3881176Z     return (yield)
2025-01-14T13:17:21.3881479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3881859Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3882225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3882299Z     yield
2025-01-14T13:17:21.3882582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3882681Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3882914Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3882981Z     raise exc
2025-01-14T13:17:21.3883209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3883278Z     col.setup()
2025-01-14T13:17:21.3883516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3883602Z     self._request._fillfixtures()
2025-01-14T13:17:21.3883867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3884000Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3884268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3884391Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3884675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3884776Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3885013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3885140Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3885422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3885595Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3885833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3885908Z     raise exc
2025-01-14T13:17:21.3886146Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3886237Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3886474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3886631Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3886868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3887056Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3887302Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3887468Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3887798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3887917Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3888404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3888478Z     yield
2025-01-14T13:17:21.3888760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3888865Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3889115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3889188Z     yield
2025-01-14T13:17:21.3889460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3889581Z     return (yield)
2025-01-14T13:17:21.3889889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3889995Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3890341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3890410Z     yield
2025-01-14T13:17:21.3890690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3890782Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3891012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3891079Z     raise exc
2025-01-14T13:17:21.3891304Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3891378Z     col.setup()
2025-01-14T13:17:21.3891722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3891809Z     self._request._fillfixtures()
2025-01-14T13:17:21.3892074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3892220Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3892486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3892606Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3892892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3892995Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3893232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3893360Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3893722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3893824Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3894066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3894135Z     raise exc
2025-01-14T13:17:21.3894376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3894463Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3894696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3894853Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3895087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3895276Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3895525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3895690Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3896095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3896265Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3896639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3896714Z     yield
2025-01-14T13:17:21.3896991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3897098Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3897349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3897479Z     yield
2025-01-14T13:17:21.3897759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3897838Z     return (yield)
2025-01-14T13:17:21.3898144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3898256Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3898602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3898669Z     yield
2025-01-14T13:17:21.3898948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3899041Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3899274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3899342Z     raise exc
2025-01-14T13:17:21.3899574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3899645Z     col.setup()
2025-01-14T13:17:21.3899876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3899964Z     self._request._fillfixtures()
2025-01-14T13:17:21.3900224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3900361Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3900621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3900741Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3901023Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3901123Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3901361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3901645Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3901927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3902029Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3902272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3902340Z     raise exc
2025-01-14T13:17:21.3902576Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3902663Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3902897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3903054Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3903290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3903478Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3903726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3903959Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3904336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3904452Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3904823Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3904895Z     yield
2025-01-14T13:17:21.3905169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3905328Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3905580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3905653Z     yield
2025-01-14T13:17:21.3905927Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3906006Z     return (yield)
2025-01-14T13:17:21.3906315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3906413Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3906758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3906827Z     yield
2025-01-14T13:17:21.3907102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3907194Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3907427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3907497Z     raise exc
2025-01-14T13:17:21.3907725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3907798Z     col.setup()
2025-01-14T13:17:21.3908027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3908121Z     self._request._fillfixtures()
2025-01-14T13:17:21.3908375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3908513Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3908773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3908894Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3909182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3909349Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3909584Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3909711Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3910002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3910099Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3910342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3910410Z     raise exc
2025-01-14T13:17:21.3910649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3910734Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3910973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3911135Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3911369Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3911785Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3912115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3912290Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3912614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3912732Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3913100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3913173Z     yield
2025-01-14T13:17:21.3913505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3913614Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3913863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3913940Z     yield
2025-01-14T13:17:21.3914224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3914300Z     return (yield)
2025-01-14T13:17:21.3914611Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3914710Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3915056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3915124Z     yield
2025-01-14T13:17:21.3915404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3915501Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3915735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3915807Z     raise exc
2025-01-14T13:17:21.3916031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3916109Z     col.setup()
2025-01-14T13:17:21.3916334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3916423Z     self._request._fillfixtures()
2025-01-14T13:17:21.3916676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3916811Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3917073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3917258Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3917543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3917643Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3917877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3918006Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3918293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3918386Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3918626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3918694Z     raise exc
2025-01-14T13:17:21.3918932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3919023Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3919258Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3919414Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3919713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3919947Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3920182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3920347Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3920671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3920785Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3921197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3921272Z     yield
2025-01-14T13:17:21.3921546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3921839Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3922094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3922167Z     yield
2025-01-14T13:17:21.3922449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3922519Z     return (yield)
2025-01-14T13:17:21.3922829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3922928Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3923273Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3923341Z     yield
2025-01-14T13:17:21.3923618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3923715Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3923948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3924017Z     raise exc
2025-01-14T13:17:21.3924246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3924326Z     col.setup()
2025-01-14T13:17:21.3924549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3924642Z     self._request._fillfixtures()
2025-01-14T13:17:21.3924900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3925041Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3925397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3925518Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3925804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3925909Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3926150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3926270Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3926558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3926654Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3926896Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3926971Z     raise exc
2025-01-14T13:17:21.3927214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3927310Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3927612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3927820Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3928054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3928244Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3928478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3928643Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3929036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3929153Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3929523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3929597Z     yield
2025-01-14T13:17:21.3929871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3929971Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3930221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3930288Z     yield
2025-01-14T13:17:21.3930565Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3930636Z     return (yield)
2025-01-14T13:17:21.3930946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3931046Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3931388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3931456Z     yield
2025-01-14T13:17:21.3931845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3931940Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3932169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3932242Z     raise exc
2025-01-14T13:17:21.3932461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3932535Z     col.setup()
2025-01-14T13:17:21.3932756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3932846Z     self._request._fillfixtures()
2025-01-14T13:17:21.3933170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3933306Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3933563Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3933684Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3933969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3934070Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3934309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3934429Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3934714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3934811Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3935048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3935116Z     raise exc
2025-01-14T13:17:21.3935353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3935501Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3935786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3935952Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3936181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3936371Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3936606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3936831Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3937155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3937268Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3937640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3937710Z     yield
2025-01-14T13:17:21.3937987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3938089Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3938339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3938405Z     yield
2025-01-14T13:17:21.3938684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3938774Z     return (yield)
2025-01-14T13:17:21.3939085Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3939182Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3939527Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3939594Z     yield
2025-01-14T13:17:21.3939867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3939962Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3940184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3940256Z     raise exc
2025-01-14T13:17:21.3940481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3940555Z     col.setup()
2025-01-14T13:17:21.3940830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3940919Z     self._request._fillfixtures()
2025-01-14T13:17:21.3941169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3941303Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3941653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3941774Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3942060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3942155Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3942397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3942517Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3942811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3942907Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3943144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3943279Z     raise exc
2025-01-14T13:17:21.3943567Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3943662Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3943899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3944062Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3944290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3944536Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3944774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3944946Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3945271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3945385Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3945757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3945828Z     yield
2025-01-14T13:17:21.3946106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3946204Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3946455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3946524Z     yield
2025-01-14T13:17:21.3946799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3946870Z     return (yield)
2025-01-14T13:17:21.3947181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3947284Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3947628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3947696Z     yield
2025-01-14T13:17:21.3947969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3948067Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3948289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3948361Z     raise exc
2025-01-14T13:17:21.3948648Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3948725Z     col.setup()
2025-01-14T13:17:21.3948947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3949036Z     self._request._fillfixtures()
2025-01-14T13:17:21.3949290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3949423Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3949682Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3949801Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3950089Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3950186Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3950426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3950493Z     raise exc
2025-01-14T13:17:21.3950729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3950861Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3951130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3951286Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3951516Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3951908Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3952149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3952315Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3952710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3952830Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3953203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3953279Z     yield
2025-01-14T13:17:21.3953552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3953653Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3953902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3953973Z     yield
2025-01-14T13:17:21.3954249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3954319Z     return (yield)
2025-01-14T13:17:21.3954635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3954734Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3955077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3955149Z     yield
2025-01-14T13:17:21.3955424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3955514Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3955745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3955812Z     raise exc
2025-01-14T13:17:21.3956036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3956110Z     col.setup()
2025-01-14T13:17:21.3956337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3956494Z     self._request._fillfixtures()
2025-01-14T13:17:21.3956746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3956879Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3957143Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3957263Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3957549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3957648Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3957889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3957957Z     raise exc
2025-01-14T13:17:21.3958194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3958283Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3958514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3958671Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3958965Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3959219Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3959461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3959619Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3959945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3960056Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3960465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3960543Z     yield
2025-01-14T13:17:21.3960816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3960921Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3961167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3961238Z     yield
2025-01-14T13:17:21.3961513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3961761Z     return (yield)
2025-01-14T13:17:21.3962087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3962187Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3962532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3962600Z     yield
2025-01-14T13:17:21.3962876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3962972Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3963199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3963266Z     raise exc
2025-01-14T13:17:21.3963490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3963559Z     col.setup()
2025-01-14T13:17:21.3963789Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3963877Z     self._request._fillfixtures()
2025-01-14T13:17:21.3964126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3964339Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3964602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3964720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3965006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3965110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3965347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3965421Z     raise exc
2025-01-14T13:17:21.3965652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3965743Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3965977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3966135Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3966370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3966555Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3966861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3967081Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3967409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3967516Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3967890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3967962Z     yield
2025-01-14T13:17:21.3968286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3968390Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3968638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3968713Z     yield
2025-01-14T13:17:21.3968985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3969066Z     return (yield)
2025-01-14T13:17:21.3969368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3969470Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3969808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3969878Z     yield
2025-01-14T13:17:21.3970155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3970249Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3970477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3970544Z     raise exc
2025-01-14T13:17:21.3970773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3970842Z     col.setup()
2025-01-14T13:17:21.3971071Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3971154Z     self._request._fillfixtures()
2025-01-14T13:17:21.3971412Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3971540Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3971902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3972024Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3972407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3972507Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3972745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3972817Z     raise exc
2025-01-14T13:17:21.3973051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3973140Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3973365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3973526Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3973752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3973946Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3974188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3974347Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3974739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3974898Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3975274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3975340Z     yield
2025-01-14T13:17:21.3975618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3975714Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3975968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3976096Z     yield
2025-01-14T13:17:21.3976370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3976445Z     return (yield)
2025-01-14T13:17:21.3976751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3976859Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3977196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3977267Z     yield
2025-01-14T13:17:21.3977535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3977631Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3977852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3977924Z     raise exc
2025-01-14T13:17:21.3978154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3978224Z     col.setup()
2025-01-14T13:17:21.3978454Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3978540Z     self._request._fillfixtures()
2025-01-14T13:17:21.3978799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3978928Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3979191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3979302Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3979590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3979690Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3979977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3980052Z     raise exc
2025-01-14T13:17:21.3980283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3980373Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3980600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3980761Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3980987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3981174Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3981411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3981664Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3981997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3982103Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3982548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3982614Z     yield
2025-01-14T13:17:21.3982948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3983047Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3983298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3983363Z     yield
2025-01-14T13:17:21.3983641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3983716Z     return (yield)
2025-01-14T13:17:21.3984076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3984181Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3984518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3984593Z     yield
2025-01-14T13:17:21.3984863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3984961Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3985185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3985260Z     raise exc
2025-01-14T13:17:21.3985482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3985558Z     col.setup()
2025-01-14T13:17:21.3985782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3985879Z     self._request._fillfixtures()
2025-01-14T13:17:21.3986136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3986268Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.3986532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.3986644Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.3986932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3987026Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3987266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.3987391Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.3987678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.3987840Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.3988074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.3988148Z     raise exc
2025-01-14T13:17:21.3988383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.3988473Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.3988700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.3988861Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.3989086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.3989276Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.3989517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.3989679Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.3990007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.3990184Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.3990599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.3990667Z     yield
2025-01-14T13:17:21.3990947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.3991043Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.3991307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.3991375Z     yield
2025-01-14T13:17:21.3991920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.3992007Z     return (yield)
2025-01-14T13:17:21.3992321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.3992431Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.3992774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.3997988Z     yield
2025-01-14T13:17:21.3998344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.3998449Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.3998700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.3998773Z     raise exc
2025-01-14T13:17:21.3999018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.3999096Z     col.setup()
2025-01-14T13:17:21.3999331Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.3999421Z     self._request._fillfixtures()
2025-01-14T13:17:21.3999697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.3999845Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4000122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4000247Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4000540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4000645Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4000892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4001135Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4001430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4001536Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4002168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4002247Z     raise exc
2025-01-14T13:17:21.4002493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4002585Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4002821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4002989Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4003227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4003420Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4003664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4003925Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4004319Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4004442Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4004818Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4004892Z     yield
2025-01-14T13:17:21.4005174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4005284Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4005594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4005673Z     yield
2025-01-14T13:17:21.4005945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4006027Z     return (yield)
2025-01-14T13:17:21.4006345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4006447Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4006794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4006860Z     yield
2025-01-14T13:17:21.4007139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4007234Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4007469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4007540Z     raise exc
2025-01-14T13:17:21.4007765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4007840Z     col.setup()
2025-01-14T13:17:21.4008075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4008170Z     self._request._fillfixtures()
2025-01-14T13:17:21.4008426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4008570Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4008837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4008961Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4009251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4009422Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4009665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4009796Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4010082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4010186Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4010426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4010497Z     raise exc
2025-01-14T13:17:21.4010738Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4010826Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4011062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4011230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4011467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4011780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4012100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4012325Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4012654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4012769Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4013144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4013219Z     yield
2025-01-14T13:17:21.4013550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4013665Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4013912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4013987Z     yield
2025-01-14T13:17:21.4014262Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4014340Z     return (yield)
2025-01-14T13:17:21.4014649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4014749Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4015092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4015159Z     yield
2025-01-14T13:17:21.4015436Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4015532Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4015762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4015829Z     raise exc
2025-01-14T13:17:21.4016058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4016129Z     col.setup()
2025-01-14T13:17:21.4016362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4016455Z     self._request._fillfixtures()
2025-01-14T13:17:21.4016708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4016846Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4017106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4017229Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4017579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4017682Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4017921Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4018053Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4018344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4018437Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4018678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4018747Z     raise exc
2025-01-14T13:17:21.4018983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4019072Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4019313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4019475Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4019758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4019985Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4020233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4020403Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4020734Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4020848Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4021267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4021344Z     yield
2025-01-14T13:17:21.4021729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4021838Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4022088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4022160Z     yield
2025-01-14T13:17:21.4022440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4022512Z     return (yield)
2025-01-14T13:17:21.4022822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4022922Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4023271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4023342Z     yield
2025-01-14T13:17:21.4023615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4023709Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4023939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4024008Z     raise exc
2025-01-14T13:17:21.4024240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4024315Z     col.setup()
2025-01-14T13:17:21.4024539Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4024629Z     self._request._fillfixtures()
2025-01-14T13:17:21.4024887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4025025Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4025363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4025484Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4025769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4025870Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4026111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4026241Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4026528Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4026621Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4026861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4026928Z     raise exc
2025-01-14T13:17:21.4027168Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4027256Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4027490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4027724Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4028032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4028227Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4028463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4028631Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4028953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4029126Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4029496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4029573Z     yield
2025-01-14T13:17:21.4029845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4029950Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4030201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4030267Z     yield
2025-01-14T13:17:21.4030547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4030619Z     return (yield)
2025-01-14T13:17:21.4030948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4031053Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4031401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4031469Z     yield
2025-01-14T13:17:21.4032004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4032108Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4032351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4032425Z     raise exc
2025-01-14T13:17:21.4032650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4032727Z     col.setup()
2025-01-14T13:17:21.4032954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4033048Z     self._request._fillfixtures()
2025-01-14T13:17:21.4033315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4033532Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4033809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4033937Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4034232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4034335Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4034580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4034706Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4035001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4035100Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4035347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4035417Z     raise exc
2025-01-14T13:17:21.4035657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4035811Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4036100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4036268Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4036504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4036698Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4036936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4037160Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4037493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4037610Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4037985Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4038062Z     yield
2025-01-14T13:17:21.4038341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4038447Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4038706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4038775Z     yield
2025-01-14T13:17:21.4039056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4039129Z     return (yield)
2025-01-14T13:17:21.4039445Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4039547Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4039893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4039964Z     yield
2025-01-14T13:17:21.4040244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4040339Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4040570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4040644Z     raise exc
2025-01-14T13:17:21.4040867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4040945Z     col.setup()
2025-01-14T13:17:21.4041175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4041316Z     self._request._fillfixtures()
2025-01-14T13:17:21.4041748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4041993Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4042295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4042422Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4042708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4042809Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4043052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4043178Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4043472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4043568Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4043811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4043974Z     raise exc
2025-01-14T13:17:21.4044268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4044359Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4044595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4044765Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4044992Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4045185Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4045492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4045663Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4045991Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4046113Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4046486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4046564Z     yield
2025-01-14T13:17:21.4046845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4046944Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4047199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4047266Z     yield
2025-01-14T13:17:21.4047549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4047622Z     return (yield)
2025-01-14T13:17:21.4047932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4048036Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4048381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4048448Z     yield
2025-01-14T13:17:21.4048725Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4048826Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4049051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4049126Z     raise exc
2025-01-14T13:17:21.4049349Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4049490Z     col.setup()
2025-01-14T13:17:21.4049716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4049807Z     self._request._fillfixtures()
2025-01-14T13:17:21.4050067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4050209Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4050471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4050596Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4050885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4050980Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4051220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4051344Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4051800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4051983Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4052284Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4052355Z     raise exc
2025-01-14T13:17:21.4052594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4052682Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4052916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4053081Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4053363Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4053560Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4053799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4053969Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4054296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4054412Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4054786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4054860Z     yield
2025-01-14T13:17:21.4055144Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4055245Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4055506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4055574Z     yield
2025-01-14T13:17:21.4055853Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4055929Z     return (yield)
2025-01-14T13:17:21.4056240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4056340Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4056684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4056752Z     yield
2025-01-14T13:17:21.4057029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4057128Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4057354Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4057493Z     raise exc
2025-01-14T13:17:21.4057716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4057792Z     col.setup()
2025-01-14T13:17:21.4058019Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4058112Z     self._request._fillfixtures()
2025-01-14T13:17:21.4058368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4058508Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4058772Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4058894Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4059192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4059292Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4059541Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4059664Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4060033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4060166Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4060408Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4060477Z     raise exc
2025-01-14T13:17:21.4060716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4060810Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4061041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4061253Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4061482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4061803Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4062045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4062213Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4062560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4062680Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4063048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4063122Z     yield
2025-01-14T13:17:21.4063403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4063511Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4063762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4063841Z     yield
2025-01-14T13:17:21.4064118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4064196Z     return (yield)
2025-01-14T13:17:21.4064507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4064616Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4064968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4065037Z     yield
2025-01-14T13:17:21.4065320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4065485Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4065718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4065790Z     raise exc
2025-01-14T13:17:21.4066017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4066092Z     col.setup()
2025-01-14T13:17:21.4066323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4066410Z     self._request._fillfixtures()
2025-01-14T13:17:21.4066671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4066811Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4067073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4067201Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4067488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4067590Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4067893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4068078Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4068364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4068465Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4068704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4068773Z     raise exc
2025-01-14T13:17:21.4069012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4069157Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4069397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4069562Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4069799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4069991Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4070232Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4070400Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4070720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:17:21.4070834Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4071205Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4071281Z     yield
2025-01-14T13:17:21.4071663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:17:21.4071776Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:17:21.4072026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4072099Z     yield
2025-01-14T13:17:21.4072370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:17:21.4072480Z     return (yield)
2025-01-14T13:17:21.4072790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:17:21.4072890Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4073235Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4073371Z     yield
2025-01-14T13:17:21.4073649Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:17:21.4073748Z     item.session._setupstate.setup(item)
2025-01-14T13:17:21.4073983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:17:21.4074055Z     raise exc
2025-01-14T13:17:21.4074281Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:17:21.4074352Z     col.setup()
2025-01-14T13:17:21.4074581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:17:21.4074672Z     self._request._fillfixtures()
2025-01-14T13:17:21.4074930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:17:21.4075069Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:17:21.4075333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4075453Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4075739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4075904Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4076196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4076328Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4076614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4076708Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4076947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4077177Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4077414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4077601Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4077845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4078012Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4078300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4078373Z     return (yield)
2025-01-14T13:17:21.4078658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4078795Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4079066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4079162Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4079373Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:17:21.4079454Z     sim.iterate(10)
2025-01-14T13:17:21.4079548Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4079709Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4079823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4079829Z 
2025-01-14T13:17:21.4080093Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f378d34ff20>
2025-01-14T13:17:21.4080302Z simulation_state = <tardis.model.base.SimulationState object at 0x7f378d493200>
2025-01-14T13:17:21.4080523Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378d4c1850>
2025-01-14T13:17:21.4080798Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f378d558500>
2025-01-14T13:17:21.4081009Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f378d492b70>
2025-01-14T13:17:21.4081146Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4081152Z 
2025-01-14T13:17:21.4081241Z     def initialize_transport_state(
2025-01-14T13:17:21.4081316Z         self,
2025-01-14T13:17:21.4081395Z         simulation_state,
2025-01-14T13:17:21.4081477Z         opacity_state,
2025-01-14T13:17:21.4081708Z         macro_atom_state,
2025-01-14T13:17:21.4081832Z         plasma,
2025-01-14T13:17:21.4081910Z         no_of_packets,
2025-01-14T13:17:21.4081997Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4082074Z         iteration=0,
2025-01-14T13:17:21.4082143Z     ):
2025-01-14T13:17:21.4082276Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4082373Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4082448Z         else:
2025-01-14T13:17:21.4082528Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4082601Z     
2025-01-14T13:17:21.4082740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4082842Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4082908Z         )
2025-01-14T13:17:21.4083058Z     
2025-01-14T13:17:21.4083187Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4083364Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4083521Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4083597Z         else:
2025-01-14T13:17:21.4083695Z             continuum_state = None
2025-01-14T13:17:21.4083876Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4084050Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4084200Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4084384Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4084647Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4084813Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4084967Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4085100Z         ).to_numba(
2025-01-14T13:17:21.4085194Z             macro_atom_state,
2025-01-14T13:17:21.4085288Z             self.line_interaction_type,
2025-01-14T13:17:21.4085357Z         )
2025-01-14T13:17:21.4085467Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4085745Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4085821Z         ]
2025-01-14T13:17:21.4086138Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4086143Z 
2025-01-14T13:17:21.4086299Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4086621Z _ test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] _
2025-01-14T13:17:21.4086628Z 
2025-01-14T13:17:21.4086754Z expected = 'interaction_type_last_interaction_class'
2025-01-14T13:17:21.4086876Z obtained = 'last_interaction_type_rpacket_tracker'
2025-01-14T13:17:21.4087311Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker]>>
2025-01-14T13:17:21.4087318Z 
2025-01-14T13:17:21.4087412Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4087504Z         "expected,obtained",
2025-01-14T13:17:21.4087571Z         [
2025-01-14T13:17:21.4087643Z             (
2025-01-14T13:17:21.4087753Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4087863Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4087931Z             ),
2025-01-14T13:17:21.4088091Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4088314Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4088390Z         ],
2025-01-14T13:17:21.4088457Z     )
2025-01-14T13:17:21.4088628Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4088746Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4088750Z 
2025-01-14T13:17:21.4088925Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4089046Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4089327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4089450Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4089739Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4089845Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4090090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4090222Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4090507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4090655Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4090932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4091113Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4091351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4091542Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4091910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4092139Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4092440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4092515Z     return (yield)
2025-01-14T13:17:21.4092807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4092942Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4093215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4093313Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4093444Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4093526Z     sim = run_tardis(
2025-01-14T13:17:21.4093612Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4093701Z     simulation.run_convergence()
2025-01-14T13:17:21.4093825Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4093983Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4094076Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4094236Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4094349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4094353Z 
2025-01-14T13:17:21.4094624Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4094829Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4095052Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4095330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4095491Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4095638Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4095706Z 
2025-01-14T13:17:21.4095798Z     def initialize_transport_state(
2025-01-14T13:17:21.4095875Z         self,
2025-01-14T13:17:21.4095953Z         simulation_state,
2025-01-14T13:17:21.4096034Z         opacity_state,
2025-01-14T13:17:21.4096110Z         macro_atom_state,
2025-01-14T13:17:21.4096185Z         plasma,
2025-01-14T13:17:21.4096257Z         no_of_packets,
2025-01-14T13:17:21.4096346Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4096424Z         iteration=0,
2025-01-14T13:17:21.4096490Z     ):
2025-01-14T13:17:21.4096622Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4096717Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4096790Z         else:
2025-01-14T13:17:21.4096869Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4096942Z     
2025-01-14T13:17:21.4097079Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4097188Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4097257Z         )
2025-01-14T13:17:21.4097328Z     
2025-01-14T13:17:21.4097463Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4097583Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4097811Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4097884Z         else:
2025-01-14T13:17:21.4098033Z             continuum_state = None
2025-01-14T13:17:21.4098138Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4098253Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4098347Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4098458Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4098556Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4098656Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4098747Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4098880Z         ).to_numba(
2025-01-14T13:17:21.4098963Z             macro_atom_state,
2025-01-14T13:17:21.4099056Z             self.line_interaction_type,
2025-01-14T13:17:21.4099123Z         )
2025-01-14T13:17:21.4099229Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4099503Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4099576Z         ]
2025-01-14T13:17:21.4099883Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4099888Z 
2025-01-14T13:17:21.4100037Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4100196Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.4100632Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.4101080Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.4101265Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4101479Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.4101761Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4101837Z 	
2025-01-14T13:17:21.4101997Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:17:21.4102148Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.4102645Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.4102860Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.4102969Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.4103055Z 	Starting iteration 1 of 3
2025-01-14T13:17:21.4103398Z _ test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] _
2025-01-14T13:17:21.4103402Z 
2025-01-14T13:17:21.4103504Z expected = 'shell_id_last_interaction_class'
2025-01-14T13:17:21.4103604Z obtained = 'shell_id_rpacket_tracker'
2025-01-14T13:17:21.4103973Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker]>>
2025-01-14T13:17:21.4103978Z 
2025-01-14T13:17:21.4104067Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4104154Z         "expected,obtained",
2025-01-14T13:17:21.4104222Z         [
2025-01-14T13:17:21.4104296Z             (
2025-01-14T13:17:21.4104405Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4104514Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4104583Z             ),
2025-01-14T13:17:21.4104738Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4104862Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4104935Z         ],
2025-01-14T13:17:21.4105002Z     )
2025-01-14T13:17:21.4105171Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4105352Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4105362Z 
2025-01-14T13:17:21.4105584Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4105701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4105979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4106099Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4106394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4106500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4106804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4106938Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4107228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4107333Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4107584Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4107656Z     raise exc
2025-01-14T13:17:21.4107899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4107990Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4108229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4108393Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4108638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4108830Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4109074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4109252Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4109556Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4109662Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4110008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4110083Z     yield
2025-01-14T13:17:21.4110402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4110574Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4110947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4111023Z     yield
2025-01-14T13:17:21.4111300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4111405Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4111861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4111933Z     yield
2025-01-14T13:17:21.4112216Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4112290Z     return (yield)
2025-01-14T13:17:21.4112574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4112647Z     return (yield)
2025-01-14T13:17:21.4112925Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4112995Z     raise e
2025-01-14T13:17:21.4113264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4113413Z     item.runtest()
2025-01-14T13:17:21.4113708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4113837Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4114070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4114266Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4114507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4114676Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4115031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4115132Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4115403Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4115527Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4115800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4115918Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4116209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4116305Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4116547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4116672Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4116967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4117061Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4117310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4117485Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4117716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4117912Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4118149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4118321Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4118608Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4118755Z     return (yield)
2025-01-14T13:17:21.4119041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4119185Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4119474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4119567Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4119710Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4119785Z     sim = run_tardis(
2025-01-14T13:17:21.4119880Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4119967Z     simulation.run_convergence()
2025-01-14T13:17:21.4120086Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4120231Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4120336Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4120496Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4120616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4120620Z 
2025-01-14T13:17:21.4120931Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4121179Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4121410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4121861Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4122038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4122183Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4122188Z 
2025-01-14T13:17:21.4122285Z     def initialize_transport_state(
2025-01-14T13:17:21.4122429Z         self,
2025-01-14T13:17:21.4122520Z         simulation_state,
2025-01-14T13:17:21.4122595Z         opacity_state,
2025-01-14T13:17:21.4122680Z         macro_atom_state,
2025-01-14T13:17:21.4122751Z         plasma,
2025-01-14T13:17:21.4122832Z         no_of_packets,
2025-01-14T13:17:21.4122919Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4122993Z         iteration=0,
2025-01-14T13:17:21.4123064Z     ):
2025-01-14T13:17:21.4123193Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4123296Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4123363Z         else:
2025-01-14T13:17:21.4123445Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4123511Z     
2025-01-14T13:17:21.4123653Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4123749Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4123822Z         )
2025-01-14T13:17:21.4123888Z     
2025-01-14T13:17:21.4124028Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4124151Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4124308Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4124378Z         else:
2025-01-14T13:17:21.4124470Z             continuum_state = None
2025-01-14T13:17:21.4124576Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4124686Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4124784Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4124889Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4124993Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4125087Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4125184Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4125257Z         ).to_numba(
2025-01-14T13:17:21.4125343Z             macro_atom_state,
2025-01-14T13:17:21.4125500Z             self.line_interaction_type,
2025-01-14T13:17:21.4125576Z         )
2025-01-14T13:17:21.4125679Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4125955Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4126025Z         ]
2025-01-14T13:17:21.4126335Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4126339Z 
2025-01-14T13:17:21.4126496Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4126700Z _ test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] _
2025-01-14T13:17:21.4126704Z 
2025-01-14T13:17:21.4126872Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:17:21.4127196Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:17:21.4127202Z 
2025-01-14T13:17:21.4127298Z     @pytest.mark.parametrize(
2025-01-14T13:17:21.4127385Z         "expected,obtained",
2025-01-14T13:17:21.4127460Z         [
2025-01-14T13:17:21.4127528Z             (
2025-01-14T13:17:21.4127641Z                 "interaction_type_last_interaction_class",
2025-01-14T13:17:21.4127815Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:17:21.4127884Z             ),
2025-01-14T13:17:21.4128094Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:17:21.4128217Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:17:21.4128294Z         ],
2025-01-14T13:17:21.4128362Z     )
2025-01-14T13:17:21.4128530Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:17:21.4128646Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4128651Z 
2025-01-14T13:17:21.4128826Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:17:21.4128989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4129271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4129394Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4129686Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4129792Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4130034Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4130163Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4130449Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4130552Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4130792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4130872Z     raise exc
2025-01-14T13:17:21.4131110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4131210Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4131453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4131715Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4131955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4132143Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4132387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4132550Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4132870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4133043Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4133396Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4133477Z     yield
2025-01-14T13:17:21.4133798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4133918Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4134290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4134365Z     yield
2025-01-14T13:17:21.4134643Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4134748Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4135007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4135080Z     yield
2025-01-14T13:17:21.4135359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4135493Z     return (yield)
2025-01-14T13:17:21.4135828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4135903Z     return (yield)
2025-01-14T13:17:21.4136181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4136250Z     raise e
2025-01-14T13:17:21.4136522Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4136596Z     item.runtest()
2025-01-14T13:17:21.4136833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4137013Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4137251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4137448Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4137693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4137865Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4138130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4138225Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4138494Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4138611Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4138876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4139000Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4139286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4139389Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4139632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4139755Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4140046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4140143Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4140384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:17:21.4140455Z     raise exc
2025-01-14T13:17:21.4140695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:17:21.4140835Z     result: Optional[TResult] = func()
2025-01-14T13:17:21.4141070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:17:21.4141234Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:17:21.4141468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4141760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4141998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4142167Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4142471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:17:21.4142582Z     yield from thread_exception_runtest_hook()
2025-01-14T13:17:21.4142932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:17:21.4143007Z     yield
2025-01-14T13:17:21.4143326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:17:21.4143509Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:17:21.4143964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:17:21.4144036Z     yield
2025-01-14T13:17:21.4144317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:17:21.4144414Z     yield from self._runtest_for(item, "call")
2025-01-14T13:17:21.4144671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:17:21.4144739Z     yield
2025-01-14T13:17:21.4145079Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:17:21.4145155Z     return (yield)
2025-01-14T13:17:21.4145440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:17:21.4145522Z     return (yield)
2025-01-14T13:17:21.4145790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:17:21.4145865Z     raise e
2025-01-14T13:17:21.4146128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:17:21.4146207Z     item.runtest()
2025-01-14T13:17:21.4146437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:17:21.4146554Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:17:21.4146783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4146981Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4147222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4147395Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4147671Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:17:21.4147759Z     result = testfunction(**testargs)
2025-01-14T13:17:21.4148037Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:17:21.4148148Z     expected = request.getfixturevalue(expected)
2025-01-14T13:17:21.4148419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:17:21.4148535Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:17:21.4148828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4148990Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4149235Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:17:21.4149370Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:17:21.4149656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:17:21.4149757Z     fixturedef.execute(request=subrequest)
2025-01-14T13:17:21.4149994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:17:21.4150171Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:17:21.4150397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:17:21.4150593Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:17:21.4150834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:17:21.4151001Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:17:21.4151345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:17:21.4151417Z     return (yield)
2025-01-14T13:17:21.4151862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:17:21.4151999Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:17:21.4152279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:17:21.4152371Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:17:21.4152509Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:17:21.4152582Z     sim = run_tardis(
2025-01-14T13:17:21.4152731Z tardis/base.py:114: in run_tardis
2025-01-14T13:17:21.4152820Z     simulation.run_convergence()
2025-01-14T13:17:21.4152939Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:17:21.4153080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4153184Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4153344Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4153455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4153459Z 
2025-01-14T13:17:21.4153725Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3781eaeb10>
2025-01-14T13:17:21.4153925Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3794a44fb0>
2025-01-14T13:17:21.4154153Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f378165ba10>
2025-01-14T13:17:21.4154422Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f3777046120>
2025-01-14T13:17:21.4154589Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f377577ebd0>
2025-01-14T13:17:21.4154726Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4154737Z 
2025-01-14T13:17:21.4154827Z     def initialize_transport_state(
2025-01-14T13:17:21.4154899Z         self,
2025-01-14T13:17:21.4154979Z         simulation_state,
2025-01-14T13:17:21.4155060Z         opacity_state,
2025-01-14T13:17:21.4155137Z         macro_atom_state,
2025-01-14T13:17:21.4155214Z         plasma,
2025-01-14T13:17:21.4155288Z         no_of_packets,
2025-01-14T13:17:21.4155375Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4155448Z         iteration=0,
2025-01-14T13:17:21.4155524Z     ):
2025-01-14T13:17:21.4155649Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4155751Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4155821Z         else:
2025-01-14T13:17:21.4155907Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4156044Z     
2025-01-14T13:17:21.4156186Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4156279Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4156352Z         )
2025-01-14T13:17:21.4156428Z     
2025-01-14T13:17:21.4156555Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4156680Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4156833Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4156911Z         else:
2025-01-14T13:17:21.4156995Z             continuum_state = None
2025-01-14T13:17:21.4157100Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4157209Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4157309Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4157414Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4157523Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4157617Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4157721Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4157792Z         ).to_numba(
2025-01-14T13:17:21.4157940Z             macro_atom_state,
2025-01-14T13:17:21.4158033Z             self.line_interaction_type,
2025-01-14T13:17:21.4158102Z         )
2025-01-14T13:17:21.4158248Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4158530Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4158606Z         ]
2025-01-14T13:17:21.4158909Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4158913Z 
2025-01-14T13:17:21.4159066Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4159265Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-14T13:17:21.4159272Z 
2025-01-14T13:17:21.4159957Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:17:21.4160237Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f37a44387a0>
2025-01-14T13:17:21.4160583Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:17:21.4160981Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f378870b980>
2025-01-14T13:17:21.4160985Z 
2025-01-14T13:17:21.4161085Z     def test_montecarlo_main_loop_weighted(
2025-01-14T13:17:21.4161184Z         montecarlo_main_loop_config,
2025-01-14T13:17:21.4161262Z         regression_data,
2025-01-14T13:17:21.4161353Z         atomic_dataset,
2025-01-14T13:17:21.4161443Z         simple_weighted_packet_source,
2025-01-14T13:17:21.4161520Z     ):
2025-01-14T13:17:21.4161862Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:17:21.4162050Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-14T13:17:21.4162149Z             montecarlo_main_loop_config,
2025-01-14T13:17:21.4162238Z             atom_data=atomic_dataset,
2025-01-14T13:17:21.4162337Z             virtual_packet_logging=False,
2025-01-14T13:17:21.4162422Z             legacy_mode_enabled=True,
2025-01-14T13:17:21.4162498Z         )
2025-01-14T13:17:21.4162648Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-14T13:17:21.4162745Z             simple_weighted_packet_source
2025-01-14T13:17:21.4162814Z         )
2025-01-14T13:17:21.4162966Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-14T13:17:21.4163102Z >       montecarlo_main_loop_simulation_weighted.run_final()
2025-01-14T13:17:21.4163184Z 
2025-01-14T13:17:21.4163425Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:26: 
2025-01-14T13:17:21.4163546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4163647Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:17:21.4163794Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:17:21.4163887Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:17:21.4164044Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:17:21.4164149Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:17:21.4164153Z 
2025-01-14T13:17:21.4164421Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7f3777028710>
2025-01-14T13:17:21.4164620Z simulation_state = <tardis.model.base.SimulationState object at 0x7f3788795ac0>
2025-01-14T13:17:21.4164849Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x7f37a2a91bb0>
2025-01-14T13:17:21.4165128Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x7f37a2a92900>
2025-01-14T13:17:21.4165287Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f3781641790>
2025-01-14T13:17:21.4165496Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:17:21.4165501Z 
2025-01-14T13:17:21.4165640Z     def initialize_transport_state(
2025-01-14T13:17:21.4165717Z         self,
2025-01-14T13:17:21.4165795Z         simulation_state,
2025-01-14T13:17:21.4165876Z         opacity_state,
2025-01-14T13:17:21.4165951Z         macro_atom_state,
2025-01-14T13:17:21.4166028Z         plasma,
2025-01-14T13:17:21.4166103Z         no_of_packets,
2025-01-14T13:17:21.4166193Z         no_of_virtual_packets=0,
2025-01-14T13:17:21.4166265Z         iteration=0,
2025-01-14T13:17:21.4166340Z     ):
2025-01-14T13:17:21.4166469Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:17:21.4166633Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:17:21.4166711Z         else:
2025-01-14T13:17:21.4166793Z             gamma_shape = (0, 0)
2025-01-14T13:17:21.4166867Z     
2025-01-14T13:17:21.4167005Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:17:21.4167112Z             no_of_packets, seed_offset=iteration
2025-01-14T13:17:21.4167182Z         )
2025-01-14T13:17:21.4167256Z     
2025-01-14T13:17:21.4167383Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:17:21.4167503Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:17:21.4167656Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:17:21.4167730Z         else:
2025-01-14T13:17:21.4167815Z             continuum_state = None
2025-01-14T13:17:21.4167921Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:17:21.4168029Z             electron_density=plasma.electron_densities,
2025-01-14T13:17:21.4168132Z             t_electrons=plasma.t_electrons,
2025-01-14T13:17:21.4168246Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:17:21.4168347Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:17:21.4168447Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:17:21.4168540Z             continuum_state=continuum_state,
2025-01-14T13:17:21.4168620Z         ).to_numba(
2025-01-14T13:17:21.4168701Z             macro_atom_state,
2025-01-14T13:17:21.4168795Z             self.line_interaction_type,
2025-01-14T13:17:21.4168867Z         )
2025-01-14T13:17:21.4168975Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:17:21.4169248Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:17:21.4169328Z         ]
2025-01-14T13:17:21.4169634Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4169695Z 
2025-01-14T13:17:21.4169854Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:17:21.4170014Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:17:21.4170348Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:17:21.4170803Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:17:21.4170986Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4171200Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:17:21.4171362Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4171440Z 	
2025-01-14T13:17:21.4171534Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.4171741Z 	Simulation took 0.00 s
2025-01-14T13:17:21.4171852Z  ([1mbase.py[0m:542)
2025-01-14T13:17:21.4172020Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:17:21.4172097Z 	
2025-01-14T13:17:21.4172250Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:17:21.4172405Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:17:21.4172933Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:17:21.4173319Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:17:21.4173430Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:17:21.4173527Z 	Simulation finished in 0 iterations 
2025-01-14T13:17:21.4173606Z 	Simulation took 0.00 s
2025-01-14T13:17:21.4173609Z 
2025-01-14T13:17:21.4173716Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:17:21.4173799Z 	Starting iteration 1 of 1
2025-01-14T13:17:21.4173915Z =============================== warnings summary ===============================
2025-01-14T13:17:21.4174099Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:17:21.4174209Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:17:21.4174519Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-14T13:17:21.4174590Z   
2025-01-14T13:17:21.4175707Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-14T13:17:21.4175712Z 
2025-01-14T13:17:21.4175946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-14T13:17:21.4176300Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-14T13:17:21.4176376Z   
2025-01-14T13:17:21.4176524Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-14T13:17:21.4176679Z   given by the platformdirs library.  To remove this warning and
2025-01-14T13:17:21.4176841Z   see the appropriate new directories, set the environment variable
2025-01-14T13:17:21.4176991Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-14T13:17:21.4177143Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-14T13:17:21.4177147Z 
2025-01-14T13:17:21.4181945Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-14T13:17:21.4182184Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-14T13:17:21.4182259Z   
2025-01-14T13:17:21.4182325Z   
2025-01-14T13:17:21.4182554Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-14T13:17:21.4182817Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-14T13:17:21.4182949Z 
2025-01-14T13:17:21.4183165Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-14T13:17:21.4183392Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4183626Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4183820Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4184135Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-14T13:17:21.4184208Z   
2025-01-14T13:17:21.4184321Z   The current CMFGEN model parser is deprecated
2025-01-14T13:17:21.4184325Z 
2025-01-14T13:17:21.4184439Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-14T13:17:21.4184620Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-14T13:17:21.4184927Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-14T13:17:21.4185001Z   
2025-01-14T13:17:21.4185111Z   The current CMFGEN model parser is deprecated
2025-01-14T13:17:21.4185114Z 
2025-01-14T13:17:21.4185304Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:17:21.4185478Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:17:21.4185769Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4186049Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4186225Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4186494Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-14T13:17:21.4186566Z   
2025-01-14T13:17:21.4186676Z   v_inner_boundary < 0, assuming default value
2025-01-14T13:17:21.4186680Z 
2025-01-14T13:17:21.4186865Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:17:21.4187107Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:17:21.4187319Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:17:21.4187549Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:17:21.4187721Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:17:21.4187989Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-14T13:17:21.4188054Z   
2025-01-14T13:17:21.4188160Z   v_outer_boundary < 0, assuming default value
2025-01-14T13:17:21.4188164Z 
2025-01-14T13:17:21.4188617Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-14T13:17:21.4188909Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-14T13:17:21.4188979Z   
2025-01-14T13:17:21.4189251Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-14T13:17:21.4189691Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-14T13:17:21.4189759Z   
2025-01-14T13:17:21.4190285Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-14T13:17:21.4190290Z 
2025-01-14T13:17:21.4190441Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-14T13:17:21.4190721Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4190790Z   
2025-01-14T13:17:21.4190878Z   Property "atomic_mass" not found
2025-01-14T13:17:21.4190883Z 
2025-01-14T13:17:21.4191311Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-14T13:17:21.4191980Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-14T13:17:21.4192266Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4192330Z   
2025-01-14T13:17:21.4192434Z   Property "j_blues_norm_factor" not found
2025-01-14T13:17:21.4192439Z 
2025-01-14T13:17:21.4192847Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-14T13:17:21.4193204Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-14T13:17:21.4193470Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4193536Z   
2025-01-14T13:17:21.4193634Z   Property "j_blue_estimator" not found
2025-01-14T13:17:21.4193638Z 
2025-01-14T13:17:21.4194014Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-14T13:17:21.4194454Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-14T13:17:21.4194770Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4194842Z   
2025-01-14T13:17:21.4194932Z   Property "volume" not found
2025-01-14T13:17:21.4194936Z 
2025-01-14T13:17:21.4195313Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-14T13:17:21.4195646Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-14T13:17:21.4195964Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:17:21.4196037Z   
2025-01-14T13:17:21.4196121Z   Property "r_inner" not found
2025-01-14T13:17:21.4196125Z 
2025-01-14T13:17:21.4196334Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-14T13:17:21.4196532Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-14T13:17:21.4196732Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-14T13:17:21.4196966Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-14T13:17:21.4197031Z   
2025-01-14T13:17:21.4197225Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-14T13:17:21.4197229Z 
2025-01-14T13:17:21.4197572Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4197912Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198242Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198575Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4198913Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4199241Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4199588Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4199652Z   
2025-01-14T13:17:21.4199843Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-14T13:17:21.4200015Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4200335Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4200339Z 
2025-01-14T13:17:21.4200671Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4201012Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4201356Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4201421Z   
2025-01-14T13:17:21.4201775Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-14T13:17:21.4201985Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4202218Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4202221Z 
2025-01-14T13:17:21.4202567Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:17:21.4202909Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:17:21.4203054Z   
2025-01-14T13:17:21.4203229Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-14T13:17:21.4203459Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:17:21.4203689Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:17:21.4203692Z 
2025-01-14T13:17:21.4203897Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-14T13:17:21.4203901Z 
2025-01-14T13:17:21.4204064Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-14T13:17:21.4204188Z Coverage HTML written to dir coverage_html_report
2025-01-14T13:17:21.4204340Z Coverage XML written to file coverage.xml
2025-01-14T13:17:21.4204347Z 
2025-01-14T13:17:21.4204477Z =========================== short test summary info ============================
2025-01-14T13:17:21.4204989Z FAILED tardis/tests/test_tardis_full.py::test_run_tardis_from_config_obj - Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4205603Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4206246Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4207071Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4207830Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[shell_id_in_use-shell_id_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4208550Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[r_in_use-r_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4209308Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[nu_packet_collection-nu_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4210260Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4211056Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4211900Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4212594Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4213164Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4213838Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4214400Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4214970Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_time_explosion - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4215587Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4216146Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4216704Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4217262Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4217866Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4218468Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4219102Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4219726Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4220285Z ERROR tardis/model/tests/test_base.py::TestModelFromUniformDensity::test_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4220934Z ERROR tardis/model/tests/test_base.py::TestModelFromInitialTinner::test_initial_temperature - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4221693Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4222339Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4222970Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4223462Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_power_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4223979Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_exponential_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4224637Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[0-1.00977478e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4225188Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[10-1.98154804e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4225723Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[19-3.13361319e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4226377Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index0-539428198] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4226981Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index1-409675383] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4227568Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index2-314387928] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4228161Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index3-56066111] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4228747Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index4-42580098] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4229340Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index5-32676283] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4229934Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index6-841032262] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4230521Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index7-638732300] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4231120Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index8-490167906] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4231858Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index9-269136275] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4232451Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index10-204398856] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4233051Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index11-156857199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4233639Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index12-45482957] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4234234Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index13-34542591] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4234945Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index14-26508241] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4235538Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index15-34001569] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4236131Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index16-25822910] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4236770Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index17-19816693] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4237332Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index0-1.4471412e+31] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4237881Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index1-2.6820129e+30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4238422Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index2-1.3464444e+29] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4238991Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index0-1.67378172e-24] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4239564Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index1-9.51707707e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4240122Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index2-9.54725917e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4240742Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_atomic_mass - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4241398Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_elemental_number_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4242186Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_scalars[t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4242762Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4243290Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4243819Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_outer] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4244300Z ERROR tardis/model/tests/test_density.py::test_hdf_density_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4244768Z ERROR tardis/model/tests/test_density.py::test_hdf_time_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4245465Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4246043Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4246612Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4247281Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4247860Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4248462Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4249059Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4249660Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4250275Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4250878Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4251439Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4252071Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4252663Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4253168Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4253733Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[general_level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4254289Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4254847Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4255357Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_electrons] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4255989Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[wavelength_cm] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4256534Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4257112Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ionization_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4257613Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4258125Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[atomic_mass] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4258661Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4259199Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4259685Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4260194Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4260763Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[transition_probabilities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4261252Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[phi] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4261908Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4262464Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4262989Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[selected_atoms] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4263521Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ion_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4264065Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[partition_function] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4264573Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[abundance] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4265083Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4265678Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4266169Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4266651Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4267211Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4267708Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[j_blues] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4268237Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[metastability] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4268709Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4269239Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[excitation_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4269713Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_levels - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4270240Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[time_explosion] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4270778Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[link_t_rad_t_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4271281Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_helium_treatment - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4271967Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_atomic_data_uuid - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4272496Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4273061Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4273651Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4274240Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4274886Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4275483Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4276178Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4276739Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4277287Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4277911Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4278459Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4279030Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4279625Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_initialization - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4280237Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4280887Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4281453Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4282189Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4282726Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4283350Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4284049Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4284767Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4285444Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4286164Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4286980Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4287680Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4288415Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4289129Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4289815Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4290517Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4291191Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4291997Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4292693Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4293402Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4294087Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4294886Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4295462Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4296047Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4296634Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4297215Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4297928Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[emitted_packet_mask] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4298534Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4299142Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4299794Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4300426Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4301048Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4301759Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4302351Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4302952Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4303557Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_rs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4304169Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_mus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4304808Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4305514Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4306161Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4306813Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4307478Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4308139Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4308816Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_thomson_scatter - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4309374Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4309973Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4310535Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4311170Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet0-expected0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4311883Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet1-expected1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4312508Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet2-expected2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4313072Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1963-10015] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4313620Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4314187Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[2111963-17296] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4314747Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[10000-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4315399Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4316121Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4316772Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4317434Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4318082Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4318705Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_VPacketCollection_add_packet - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4319468Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-11-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4320110Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-1-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4320801Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-2-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4321468Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4322325Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4323019Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4323664Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132--1-199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4324335Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-0-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4324999Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-20-154] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4325596Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4326226Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_trackers_to_dataframe - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4326874Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_within_shell - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4327421Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4333769Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_bad_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4334516Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4335188Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4336080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4336802Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4337591Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4338342Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4339057Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4339772Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4340492Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4341196Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4342057Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4342773Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4343474Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4344263Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4344981Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4345697Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4346416Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4347237Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4347946Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4348716Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4349434Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4350143Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4350862Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4351750Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4352504Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4353220Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4353942Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4354714Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4355392Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4356070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4356743Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4357418Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4358206Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4358876Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4359603Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4360260Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4360912Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4361687Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4362398Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4363045Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4363701Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4364346Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4364997Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4365743Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4366418Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4367092Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4367763Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4368436Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4369223Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4369904Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4370636Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4371312Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_with_theta_init - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4372246Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4372966Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4373656Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4374289Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4374929Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4375557Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4376191Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4376922Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4377550Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4378175Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4378796Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4379416Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4380154Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4380778Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4381458Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[50] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4382233Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4382873Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4383515Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4384153Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4384785Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4385426Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4386088Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4386738Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4387452Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4388180Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4388911Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4389643Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4390363Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4391192Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4392016Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4392801Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4393532Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4394255Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4394993Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4395725Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4396453Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4397184Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4397913Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4398696Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4399427Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4400108Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4400793Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4401530Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4402448Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4403131Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4403878Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4404566Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4405251Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4405931Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4406609Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4407300Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4407977Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4408660Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4409405Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4410090Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4410774Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4411435Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4412194Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4412970Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4413629Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4414362Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4415026Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4415684Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4416342Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4416999Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4417655Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4418326Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4418980Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4419644Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4420363Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4421022Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4421766Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4422548Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4423365Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4424182Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4424907Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4425714Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4426474Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4427220Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4427932Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4428698Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4429454Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4430212Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4430988Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4431935Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4432695Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4433453Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4434160Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4434990Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4435700Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4436464Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4437229Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4437937Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4438643Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4439353Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4440053Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4440759Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4441466Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4442475Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4443192Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4443895Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4444620Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4445294Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4446089Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4446762Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4447537Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4448203Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4448869Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4449532Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4450143Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4450776Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4451409Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4452116Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4452740Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4453431Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4454069Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4454705Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4455364Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4456019Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4456784Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4457429Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4458127Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4458789Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4459404Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4460024Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4460652Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4461267Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4461971Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4462595Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4463215Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4463940Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_shells_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4464625Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_element_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4465279Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_ion_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:17:21.4465575Z = 11 failed, 1052 passed, 329 skipped, 2 deselected, 23 xfailed, 4 xpassed, 69 warnings, 375 errors in 528.20s (0:08:48) =
2025-01-14T13:17:22.8604958Z ##[error]Process completed with exit code 1.
2025-01-14T13:17:22.8683081Z Post job cleanup.
2025-01-14T13:17:22.8715349Z Post job cleanup.
2025-01-14T13:17:23.0111329Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-14T13:17:23.0119093Z Removing micromamba run shell ...
2025-01-14T13:17:23.0123641Z ##[group]Deinitialize micromamba for bash
2025-01-14T13:17:23.0142972Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:17:23.0245800Z Resetting RC file "/home/runner/.bashrc"
2025-01-14T13:17:23.0246389Z Deleting config for root prefix 
2025-01-14T13:17:23.0246881Z Clearing mamba executable environment variable
2025-01-14T13:17:23.0248336Z Removing the following in your "/home/runner/.bashrc" file
2025-01-14T13:17:23.0248895Z # >>> mamba initialize >>>
2025-01-14T13:17:23.0249227Z ...
2025-01-14T13:17:23.0249469Z # <<< mamba initialize <<<
2025-01-14T13:17:23.0279539Z Removing mamba initialize block from .bash_profile
2025-01-14T13:17:23.0295810Z ##[endgroup]
2025-01-14T13:17:23.0300595Z Removing environment tardis from auto-activate bash ...
2025-01-14T13:17:23.0425266Z Post job cleanup.
2025-01-14T13:17:23.0463371Z Post job cleanup.
2025-01-14T13:17:23.1475787Z [command]/usr/bin/git version
2025-01-14T13:17:23.1515131Z git version 2.47.1
2025-01-14T13:17:23.1568953Z Temporarily overriding HOME='/home/runner/work/_temp/1afcd59d-2a3d-4040-a9bd-f0bf0899ae26' before making global git config changes
2025-01-14T13:17:23.1570249Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:17:23.1576088Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:17:23.1621449Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:17:23.1666157Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:17:23.1928419Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:17:23.1953730Z http.https://github.com/.extraheader
2025-01-14T13:17:23.1967709Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-14T13:17:23.2003066Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:17:23.2377198Z Post job cleanup.
2025-01-14T13:17:23.3380936Z [command]/usr/bin/git version
2025-01-14T13:17:23.3418402Z git version 2.47.1
2025-01-14T13:17:23.3462980Z Temporarily overriding HOME='/home/runner/work/_temp/cea2e20e-6a2a-48ee-8061-b559693768b3' before making global git config changes
2025-01-14T13:17:23.3464312Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:17:23.3477336Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-14T13:17:23.3517519Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:17:23.3552970Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:17:23.3791779Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:17:23.3813795Z http.https://github.com/.extraheader
2025-01-14T13:17:23.3826813Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-14T13:17:23.3859134Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:17:23.4202148Z Cleaning up orphan processes
