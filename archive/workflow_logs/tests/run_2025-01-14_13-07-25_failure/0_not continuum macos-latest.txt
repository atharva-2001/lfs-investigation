2025-01-14T13:07:26.5819551Z Requested labels: macos-latest
2025-01-14T13:07:26.5820182Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2932/merge
2025-01-14T13:07:26.5820314Z Waiting for a runner to pick up this job...
2025-01-14T13:07:26.7556552Z Job is waiting for a hosted runner to come online.
2025-01-14T13:07:30.6894952Z Job is about to start running on the hosted runner: GitHub Actions 4 (hosted)
2025-01-14T13:07:31.6192510Z Current runner version: '2.321.0'
2025-01-14T13:07:31.6210060Z ##[group]Operating System
2025-01-14T13:07:31.6210490Z macOS
2025-01-14T13:07:31.6210790Z 14.7.2
2025-01-14T13:07:31.6211080Z 23H311
2025-01-14T13:07:31.6212380Z ##[endgroup]
2025-01-14T13:07:31.6212730Z ##[group]Runner Image
2025-01-14T13:07:31.6213090Z Image: macos-14-arm64
2025-01-14T13:07:31.6213410Z Version: 20250106.725
2025-01-14T13:07:31.6214100Z Included Software: https://github.com/actions/runner-images/blob/macos-14-arm64/20250106.725/images/macos/macos-14-arm64-Readme.md
2025-01-14T13:07:31.6215030Z Image Release: https://github.com/actions/runner-images/releases/tag/macos-14-arm64%2F20250106.725
2025-01-14T13:07:31.6215610Z ##[endgroup]
2025-01-14T13:07:31.6215920Z ##[group]Runner Image Provisioner
2025-01-14T13:07:31.6216320Z 2.0.404.1+573eac7f0cc07d6bb82d8b9bf5e1ffa69a554644
2025-01-14T13:07:31.6216710Z ##[endgroup]
2025-01-14T13:07:31.6218010Z ##[group]GITHUB_TOKEN Permissions
2025-01-14T13:07:31.6219270Z Actions: read
2025-01-14T13:07:31.6219570Z Attestations: read
2025-01-14T13:07:31.6219870Z Checks: read
2025-01-14T13:07:31.6220150Z Contents: read
2025-01-14T13:07:31.6220440Z Deployments: read
2025-01-14T13:07:31.6220740Z Discussions: read
2025-01-14T13:07:31.6221020Z Issues: read
2025-01-14T13:07:31.6221290Z Metadata: read
2025-01-14T13:07:31.6221580Z Packages: read
2025-01-14T13:07:31.6221860Z Pages: read
2025-01-14T13:07:31.6222130Z PullRequests: read
2025-01-14T13:07:31.6222440Z RepositoryProjects: read
2025-01-14T13:07:31.6222750Z SecurityEvents: read
2025-01-14T13:07:31.6223060Z Statuses: read
2025-01-14T13:07:31.6223350Z ##[endgroup]
2025-01-14T13:07:31.6225280Z Secret source: None
2025-01-14T13:07:31.6225730Z Prepare workflow directory
2025-01-14T13:07:31.6557550Z Prepare all required actions
2025-01-14T13:07:31.6582140Z Getting action download info
2025-01-14T13:07:31.8046560Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-14T13:07:32.2102910Z Download action repository 'actions/upload-artifact@v4' (SHA:65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08)
2025-01-14T13:07:33.5651670Z Complete job name: not continuum macos-latest 
2025-01-14T13:07:33.6059170Z ##[group]Run actions/checkout@v4
2025-01-14T13:07:33.6059820Z with:
2025-01-14T13:07:33.6060370Z   repository: tardis-sn/tardis
2025-01-14T13:07:33.6060930Z   token: ***
2025-01-14T13:07:33.6061220Z   ssh-strict: true
2025-01-14T13:07:33.6061530Z   ssh-user: git
2025-01-14T13:07:33.6061840Z   persist-credentials: true
2025-01-14T13:07:33.6062190Z   clean: true
2025-01-14T13:07:33.6062510Z   sparse-checkout-cone-mode: true
2025-01-14T13:07:33.6062880Z   fetch-depth: 1
2025-01-14T13:07:33.6063190Z   fetch-tags: false
2025-01-14T13:07:33.6063500Z   show-progress: true
2025-01-14T13:07:33.6063820Z   lfs: false
2025-01-14T13:07:33.6064130Z   submodules: false
2025-01-14T13:07:33.6064450Z   set-safe-directory: true
2025-01-14T13:07:33.6064930Z env:
2025-01-14T13:07:33.6065200Z   CACHE_NUMBER: 0
2025-01-14T13:07:33.6066090Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:33.6067000Z   CODECOV_TOKEN: 
2025-01-14T13:07:33.6067290Z ##[endgroup]
2025-01-14T13:07:33.9482730Z Syncing repository: tardis-sn/tardis
2025-01-14T13:07:33.9484430Z ##[group]Getting Git version info
2025-01-14T13:07:33.9485060Z Working directory is '/Users/runner/work/tardis/tardis'
2025-01-14T13:07:33.9485800Z [command]/opt/homebrew/bin/git version
2025-01-14T13:07:34.0446140Z git version 2.47.1
2025-01-14T13:07:34.0803860Z ##[endgroup]
2025-01-14T13:07:34.0846840Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/53aaa476-9af2-4212-8ed2-31c10705e6d9/.gitconfig'
2025-01-14T13:07:34.0848230Z Temporarily overriding HOME='/Users/runner/work/_temp/53aaa476-9af2-4212-8ed2-31c10705e6d9' before making global git config changes
2025-01-14T13:07:34.0849260Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:07:34.0850780Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-14T13:07:34.0973920Z Deleting the contents of '/Users/runner/work/tardis/tardis'
2025-01-14T13:07:34.0974870Z ##[group]Initializing the repository
2025-01-14T13:07:34.0975430Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis
2025-01-14T13:07:34.1226250Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-14T13:07:34.1227630Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-14T13:07:34.1228410Z hint: of your new repositories, which will suppress this warning, call:
2025-01-14T13:07:34.1228980Z hint:
2025-01-14T13:07:34.1229410Z hint: 	git config --global init.defaultBranch <name>
2025-01-14T13:07:34.1229870Z hint:
2025-01-14T13:07:34.1230320Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-14T13:07:34.1231060Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-14T13:07:34.1231670Z hint:
2025-01-14T13:07:34.1232620Z hint: 	git branch -m <name>
2025-01-14T13:07:34.1236210Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/.git/
2025-01-14T13:07:34.1249970Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-14T13:07:34.1332740Z ##[endgroup]
2025-01-14T13:07:34.1336730Z ##[group]Disabling automatic garbage collection
2025-01-14T13:07:34.1338500Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-14T13:07:34.1391640Z ##[endgroup]
2025-01-14T13:07:34.1393340Z ##[group]Setting up auth
2025-01-14T13:07:34.1395090Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:07:34.1453500Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:07:34.2291670Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:07:34.2296240Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:07:34.3019850Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-14T13:07:34.3116820Z ##[endgroup]
2025-01-14T13:07:34.3118780Z ##[group]Fetching the repository
2025-01-14T13:07:34.3123480Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +5e624b97b9dba72acfc4d10a106406c6b2c83673:refs/remotes/pull/2932/merge
2025-01-14T13:07:36.1575160Z From https://github.com/tardis-sn/tardis
2025-01-14T13:07:36.1576670Z  * [new ref]         5e624b97b9dba72acfc4d10a106406c6b2c83673 -> pull/2932/merge
2025-01-14T13:07:36.1672550Z ##[endgroup]
2025-01-14T13:07:36.1673530Z ##[group]Determining the checkout info
2025-01-14T13:07:36.1674370Z ##[endgroup]
2025-01-14T13:07:36.1674980Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-14T13:07:36.1743610Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-14T13:07:36.1798440Z ##[group]Checking out the ref
2025-01-14T13:07:36.1814950Z [command]/opt/homebrew/bin/git checkout --progress --force refs/remotes/pull/2932/merge
2025-01-14T13:07:36.4745020Z HEAD is now at 5e624b9 Merge 2b3dfd792246943c49c6c5deba46c01e3ba90810 into 2a06fdfb60190bbd9b49ff572d78772607138660
2025-01-14T13:07:36.4973800Z ##[endgroup]
2025-01-14T13:07:36.5030240Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-14T13:07:36.5037120Z 5e624b97b9dba72acfc4d10a106406c6b2c83673
2025-01-14T13:07:36.5242740Z Prepare all required actions
2025-01-14T13:07:36.5243640Z Getting action download info
2025-01-14T13:07:36.6653070Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-14T13:07:36.9754000Z ##[group]Run ./.github/actions/setup_lfs
2025-01-14T13:07:36.9754780Z with:
2025-01-14T13:07:36.9755450Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-14T13:07:36.9756270Z env:
2025-01-14T13:07:36.9756770Z   CACHE_NUMBER: 0
2025-01-14T13:07:36.9758340Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:36.9759980Z   CODECOV_TOKEN: 
2025-01-14T13:07:36.9760540Z ##[endgroup]
2025-01-14T13:07:36.9918810Z ##[group]Run actions/checkout@v4
2025-01-14T13:07:36.9919500Z with:
2025-01-14T13:07:36.9920080Z   repository: tardis-sn/tardis-regression-data
2025-01-14T13:07:36.9920850Z   path: tardis-regression-data
2025-01-14T13:07:36.9921830Z   token: ***
2025-01-14T13:07:36.9922360Z   ssh-strict: true
2025-01-14T13:07:36.9922910Z   ssh-user: git
2025-01-14T13:07:36.9923470Z   persist-credentials: true
2025-01-14T13:07:36.9924110Z   clean: true
2025-01-14T13:07:36.9924640Z   sparse-checkout-cone-mode: true
2025-01-14T13:07:36.9925310Z   fetch-depth: 1
2025-01-14T13:07:36.9925830Z   fetch-tags: false
2025-01-14T13:07:36.9926370Z   show-progress: true
2025-01-14T13:07:36.9926910Z   lfs: false
2025-01-14T13:07:36.9927410Z   submodules: false
2025-01-14T13:07:36.9927950Z   set-safe-directory: true
2025-01-14T13:07:36.9928520Z env:
2025-01-14T13:07:36.9929000Z   CACHE_NUMBER: 0
2025-01-14T13:07:36.9930500Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:36.9932290Z   CODECOV_TOKEN: 
2025-01-14T13:07:36.9932840Z ##[endgroup]
2025-01-14T13:07:37.1867910Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-14T13:07:37.1869680Z ##[group]Getting Git version info
2025-01-14T13:07:37.1870890Z Working directory is '/Users/runner/work/tardis/tardis/tardis-regression-data'
2025-01-14T13:07:37.1892700Z [command]/opt/homebrew/bin/git version
2025-01-14T13:07:37.1896020Z git version 2.47.1
2025-01-14T13:07:37.1902380Z ##[endgroup]
2025-01-14T13:07:37.1945900Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/4384e965-132f-4a55-b6e8-7ffc1b0cbc27/.gitconfig'
2025-01-14T13:07:37.2049890Z Temporarily overriding HOME='/Users/runner/work/_temp/4384e965-132f-4a55-b6e8-7ffc1b0cbc27' before making global git config changes
2025-01-14T13:07:37.2104470Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:07:37.2135170Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:07:37.2219480Z ##[group]Initializing the repository
2025-01-14T13:07:37.2220910Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:07:37.2224930Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-14T13:07:37.2230350Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-14T13:07:37.2236460Z hint: of your new repositories, which will suppress this warning, call:
2025-01-14T13:07:37.2251330Z hint:
2025-01-14T13:07:37.2258630Z hint: 	git config --global init.defaultBranch <name>
2025-01-14T13:07:37.2260550Z hint:
2025-01-14T13:07:37.2262380Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-14T13:07:37.2265340Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-14T13:07:37.2267750Z hint:
2025-01-14T13:07:37.2269120Z hint: 	git branch -m <name>
2025-01-14T13:07:37.2278830Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-14T13:07:37.2282490Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-14T13:07:37.2284790Z ##[endgroup]
2025-01-14T13:07:37.2285730Z ##[group]Disabling automatic garbage collection
2025-01-14T13:07:37.2286940Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-14T13:07:37.2288780Z ##[endgroup]
2025-01-14T13:07:37.2289650Z ##[group]Setting up auth
2025-01-14T13:07:37.2290610Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:07:37.2297990Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:07:37.2800620Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:07:37.2842210Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:07:37.3539570Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-14T13:07:37.3711690Z ##[endgroup]
2025-01-14T13:07:37.3712890Z ##[group]Determining the default branch
2025-01-14T13:07:37.3784830Z Retrieving the default branch name
2025-01-14T13:07:37.7623380Z Default branch 'main'
2025-01-14T13:07:37.7726000Z ##[endgroup]
2025-01-14T13:07:37.7829320Z ##[group]Fetching the repository
2025-01-14T13:07:37.7931830Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-14T13:07:39.8999710Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-14T13:07:39.9001030Z  * [new branch]      main       -> origin/main
2025-01-14T13:07:39.9071760Z ##[endgroup]
2025-01-14T13:07:39.9072610Z ##[group]Determining the checkout info
2025-01-14T13:07:39.9073550Z ##[endgroup]
2025-01-14T13:07:39.9076970Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-14T13:07:39.9151300Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-14T13:07:39.9214640Z ##[group]Checking out the ref
2025-01-14T13:07:39.9219340Z [command]/opt/homebrew/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-14T13:07:40.2052560Z Switched to a new branch 'main'
2025-01-14T13:07:40.2082250Z branch 'main' set up to track 'origin/main'.
2025-01-14T13:07:40.2925430Z ##[endgroup]
2025-01-14T13:07:40.2988690Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-14T13:07:40.3035150Z fa7729bc9c30e14b69acd641af8b692b56fcd416
2025-01-14T13:07:40.3137980Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-14T13:07:40.3138400Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-14T13:07:40.3213450Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:07:40.3213760Z env:
2025-01-14T13:07:40.3213930Z   CACHE_NUMBER: 0
2025-01-14T13:07:40.3214420Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:40.3214940Z   CODECOV_TOKEN: 
2025-01-14T13:07:40.3215150Z ##[endgroup]
2025-01-14T13:07:40.6437200Z ##[group]Run actions/cache/restore@v4
2025-01-14T13:07:40.6437510Z with:
2025-01-14T13:07:40.6437690Z   path: tardis-regression-data/.git/lfs
2025-01-14T13:07:40.6438040Z   key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-14T13:07:40.6438440Z   enableCrossOsArchive: false
2025-01-14T13:07:40.6438650Z   fail-on-cache-miss: false
2025-01-14T13:07:40.6438810Z   lookup-only: false
2025-01-14T13:07:40.6438980Z env:
2025-01-14T13:07:40.6439140Z   CACHE_NUMBER: 0
2025-01-14T13:07:40.6439920Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:07:40.6440450Z   CODECOV_TOKEN: 
2025-01-14T13:07:40.6440610Z ##[endgroup]
2025-01-14T13:07:42.2312300Z Received 33554432 of 1706796060 (2.0%), 32.0 MBs/sec
2025-01-14T13:07:43.2374620Z Received 104857600 of 1706796060 (6.1%), 49.9 MBs/sec
2025-01-14T13:07:44.2411510Z Received 167772160 of 1706796060 (9.8%), 53.2 MBs/sec
2025-01-14T13:07:45.2423920Z Received 230686720 of 1706796060 (13.5%), 54.8 MBs/sec
2025-01-14T13:07:46.2423640Z Received 281018368 of 1706796060 (16.5%), 53.5 MBs/sec
2025-01-14T13:07:47.2434960Z Received 335544320 of 1706796060 (19.7%), 53.2 MBs/sec
2025-01-14T13:07:48.2434450Z Received 406847488 of 1706796060 (23.8%), 55.3 MBs/sec
2025-01-14T13:07:49.2440350Z Received 478150656 of 1706796060 (28.0%), 56.9 MBs/sec
2025-01-14T13:07:50.2442430Z Received 536870912 of 1706796060 (31.5%), 56.8 MBs/sec
2025-01-14T13:07:51.2449980Z Received 591396864 of 1706796060 (34.6%), 56.3 MBs/sec
2025-01-14T13:07:52.2454640Z Received 666894336 of 1706796060 (39.1%), 57.7 MBs/sec
2025-01-14T13:07:53.2489330Z Received 759169024 of 1706796060 (44.5%), 60.2 MBs/sec
2025-01-14T13:07:54.2515300Z Received 801112064 of 1706796060 (46.9%), 58.7 MBs/sec
2025-01-14T13:07:55.2520120Z Received 880803840 of 1706796060 (51.6%), 59.9 MBs/sec
2025-01-14T13:07:56.2524600Z Received 956301312 of 1706796060 (56.0%), 60.7 MBs/sec
2025-01-14T13:07:57.2536580Z Received 1015021568 of 1706796060 (59.5%), 60.4 MBs/sec
2025-01-14T13:07:58.2543050Z Received 1103101952 of 1706796060 (64.6%), 61.8 MBs/sec
2025-01-14T13:07:59.2549430Z Received 1186988032 of 1706796060 (69.5%), 62.8 MBs/sec
2025-01-14T13:08:00.2566920Z Received 1258291200 of 1706796060 (73.7%), 63.1 MBs/sec
2025-01-14T13:08:01.2579560Z Received 1321205760 of 1706796060 (77.4%), 62.9 MBs/sec
2025-01-14T13:08:02.2616080Z Received 1371537408 of 1706796060 (80.4%), 62.2 MBs/sec
2025-01-14T13:08:03.2637250Z Received 1438646272 of 1706796060 (84.3%), 62.3 MBs/sec
2025-01-14T13:08:04.2639180Z Received 1497366528 of 1706796060 (87.7%), 62.0 MBs/sec
2025-01-14T13:08:05.2934210Z Received 1543503872 of 1706796060 (90.4%), 61.2 MBs/sec
2025-01-14T13:08:06.2894240Z Received 1593835520 of 1706796060 (93.4%), 60.7 MBs/sec
2025-01-14T13:08:07.2909250Z Received 1635778560 of 1706796060 (95.8%), 59.9 MBs/sec
2025-01-14T13:08:08.2946910Z Received 1706796060 of 1706796060 (100.0%), 60.1 MBs/sec
2025-01-14T13:08:08.8636600Z Cache Size: ~1628 MB (1706796060 B)
2025-01-14T13:08:08.8724440Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/dd163729-d95f-47f5-9f45-08e08234b118/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-14T13:08:17.6816340Z Cache restored successfully
2025-01-14T13:08:17.7496420Z Cache restored from key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-14T13:08:17.7731760Z ##[group]Run git lfs checkout
2025-01-14T13:08:17.7731930Z [36;1mgit lfs checkout[0m
2025-01-14T13:08:17.7799850Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:08:17.7800070Z env:
2025-01-14T13:08:17.7800290Z   CACHE_NUMBER: 0
2025-01-14T13:08:17.7800760Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:17.7801350Z   CODECOV_TOKEN: 
2025-01-14T13:08:17.7801560Z ##[endgroup]
2025-01-14T13:08:27.9873340Z Checking out LFS objects: 100% (204/204), 3.5 GB | 266 MB/s, done.
2025-01-14T13:08:37.1352810Z Prepare all required actions
2025-01-14T13:08:37.1353280Z Getting action download info
2025-01-14T13:08:37.2825280Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-14T13:08:38.4256040Z ##[group]Run ./.github/actions/setup_env
2025-01-14T13:08:38.4256510Z with:
2025-01-14T13:08:38.4256730Z   os-label: osx-arm64
2025-01-14T13:08:38.4257020Z env:
2025-01-14T13:08:38.4257200Z   CACHE_NUMBER: 0
2025-01-14T13:08:38.4257830Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:38.4258420Z   CODECOV_TOKEN: 
2025-01-14T13:08:38.4259500Z ##[endgroup]
2025-01-14T13:08:38.4283040Z ##[group]Run file_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-14T13:08:38.4283520Z [36;1mfile_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-14T13:08:38.4283950Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-14T13:08:38.4345140Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-14T13:08:38.4345430Z env:
2025-01-14T13:08:38.4345570Z   CACHE_NUMBER: 0
2025-01-14T13:08:38.4346080Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:38.4346600Z   CODECOV_TOKEN: 
2025-01-14T13:08:38.4346730Z ##[endgroup]
2025-01-14T13:08:38.5493560Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-14T13:08:38.5493850Z with:
2025-01-14T13:08:38.5494000Z   environment-file: conda-osx-arm64.lock
2025-01-14T13:08:38.5494370Z   cache-environment-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-14T13:08:38.5494880Z   cache-downloads-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-14T13:08:38.5495220Z   environment-name: tardis
2025-01-14T13:08:38.5495410Z   cache-environment: true
2025-01-14T13:08:38.5495600Z   cache-downloads: true
2025-01-14T13:08:38.5495760Z env:
2025-01-14T13:08:38.5495890Z   CACHE_NUMBER: 0
2025-01-14T13:08:38.5496370Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:08:38.5496890Z   CODECOV_TOKEN: 
2025-01-14T13:08:38.5497030Z ##[endgroup]
2025-01-14T13:08:38.8774530Z Will download micromamba to /Users/runner/micromamba-bin/micromamba
2025-01-14T13:08:38.8781410Z ##[group]Install micromamba
2025-01-14T13:08:39.5513420Z micromamba installed to /Users/runner/micromamba-bin/micromamba
2025-01-14T13:08:39.5533160Z ##[endgroup]
2025-01-14T13:08:39.5533620Z Adding conda-forge to condarc channels ...
2025-01-14T13:08:39.5535830Z ##[group]Initialize micromamba for bash.
2025-01-14T13:08:39.5544250Z [command]/Users/runner/micromamba-bin/micromamba shell init -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:08:39.5818800Z Modifying RC file "/Users/runner/.bash_profile"
2025-01-14T13:08:39.5820630Z Generating config for root prefix [1m"/Users/runner/micromamba"[0m
2025-01-14T13:08:39.5821070Z Setting mamba executable to: [1m"/Users/runner/micromamba-bin/micromamba"[0m
2025-01-14T13:08:39.5821440Z Adding (or replacing) the following in your "/Users/runner/.bash_profile" file
2025-01-14T13:08:39.5821660Z 
2025-01-14T13:08:39.5821720Z # >>> mamba initialize >>>
2025-01-14T13:08:39.5821940Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-14T13:08:39.5822260Z export MAMBA_EXE='/Users/runner/micromamba-bin/micromamba';
2025-01-14T13:08:39.5822530Z export MAMBA_ROOT_PREFIX='/Users/runner/micromamba';
2025-01-14T13:08:39.5822930Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-14T13:08:39.5823280Z if [ $? -eq 0 ]; then
2025-01-14T13:08:39.5823450Z     eval "$__mamba_setup"
2025-01-14T13:08:39.5824290Z else
2025-01-14T13:08:39.5824620Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-14T13:08:39.5825000Z fi
2025-01-14T13:08:39.5825160Z unset __mamba_setup
2025-01-14T13:08:39.5825340Z # <<< mamba initialize <<<
2025-01-14T13:08:39.5825450Z 
2025-01-14T13:08:39.5835900Z ##[endgroup]
2025-01-14T13:08:39.5837130Z ##[group]Restoring downloads from `/Users/runner/micromamba/pkgs` ...
2025-01-14T13:08:40.9698560Z Received 25165824 of 310595873 (8.1%), 23.9 MBs/sec
2025-01-14T13:08:41.9761780Z Received 88080384 of 310595873 (28.4%), 41.6 MBs/sec
2025-01-14T13:08:42.9765210Z Received 138412032 of 310595873 (44.6%), 43.7 MBs/sec
2025-01-14T13:08:43.9771710Z Received 192937984 of 310595873 (62.1%), 45.8 MBs/sec
2025-01-14T13:08:44.9788360Z Received 272629760 of 310595873 (87.8%), 51.8 MBs/sec
2025-01-14T13:08:45.6090590Z Cache Size: ~296 MB (310595873 B)
2025-01-14T13:08:45.6171710Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/3ffa2448-7277-4b3a-a37d-faa6e82f14c7/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-14T13:08:45.9815090Z Received 310595873 of 310595873 (100.0%), 49.2 MBs/sec
2025-01-14T13:08:46.6578250Z Cache restored successfully
2025-01-14T13:08:46.6626970Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64`
2025-01-14T13:08:46.6629620Z ##[endgroup]
2025-01-14T13:08:46.6659830Z ##[group]Restoring environment `tardis` from `/Users/runner/micromamba/envs/tardis` ...
2025-01-14T13:08:48.0735900Z Received 16777216 of 385775710 (4.3%), 16.0 MBs/sec
2025-01-14T13:08:49.0746850Z Received 75497472 of 385775710 (19.6%), 35.9 MBs/sec
2025-01-14T13:08:50.0754900Z Received 125829120 of 385775710 (32.6%), 39.9 MBs/sec
2025-01-14T13:08:51.0764310Z Received 192937984 of 385775710 (50.0%), 45.9 MBs/sec
2025-01-14T13:08:52.0809690Z Received 276824064 of 385775710 (71.8%), 52.7 MBs/sec
2025-01-14T13:08:53.0845740Z Received 343932928 of 385775710 (89.2%), 54.6 MBs/sec
2025-01-14T13:08:53.8085570Z Cache Size: ~368 MB (385775710 B)
2025-01-14T13:08:53.8186760Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/878d1741-74b6-4d27-aa6c-26b84a275ea6/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-14T13:08:54.0884450Z Received 385775710 of 385775710 (100.0%), 52.4 MBs/sec
2025-01-14T13:09:08.1558760Z Cache restored successfully
2025-01-14T13:09:08.1661370Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64-tardis-args-4f53cda-root-873f6fe-bin-[object Promise]-file-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824`
2025-01-14T13:09:08.1771380Z ##[endgroup]
2025-01-14T13:09:08.1773160Z Adding environment tardis to auto-activate bash ...
2025-01-14T13:09:08.2009540Z Generating micromamba run shell.
2025-01-14T13:09:08.2012810Z ##[endgroup]
2025-01-14T13:09:08.2037300Z Set environment variables.
2025-01-14T13:09:08.2039200Z ##[group]micromamba info
2025-01-14T13:09:08.2040680Z [command]/Users/runner/micromamba-bin/micromamba info -r /Users/runner/micromamba -n tardis
2025-01-14T13:09:08.6658350Z 
2025-01-14T13:09:08.6669210Z        libmamba version : 1.5.10
2025-01-14T13:09:08.6671340Z      micromamba version : 1.5.10
2025-01-14T13:09:08.6673450Z            curl version : libcurl/8.10.1 (OpenSSL/3.3.2) SecureTransport zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-14T13:09:08.6676260Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-14T13:09:08.6677540Z        envs directories : /Users/runner/micromamba/envs
2025-01-14T13:09:08.6678780Z           package cache : /Users/runner/micromamba/pkgs
2025-01-14T13:09:08.6680350Z                           /Users/runner/.mamba/pkgs
2025-01-14T13:09:08.6681710Z             environment : tardis
2025-01-14T13:09:08.6682620Z            env location : /Users/runner/micromamba/envs/tardis
2025-01-14T13:09:08.6688000Z       user config files : /Users/runner/.mambarc
2025-01-14T13:09:08.6688560Z  populated config files : /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:09:08.6688900Z        virtual packages : __unix=0=0
2025-01-14T13:09:08.6689180Z                           __osx=14.7.2=0
2025-01-14T13:09:08.6689420Z                           __archspec=1=arm64
2025-01-14T13:09:08.6689980Z                channels : https://conda.anaconda.org/conda-forge/osx-arm64
2025-01-14T13:09:08.6690330Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-14T13:09:08.6690670Z        base environment : /Users/runner/micromamba
2025-01-14T13:09:08.6691020Z                platform : osx-arm64
2025-01-14T13:09:08.6691490Z ##[endgroup]
2025-01-14T13:09:08.6695420Z ##[group]micromamba list
2025-01-14T13:09:08.6695950Z [command]/Users/runner/micromamba-bin/micromamba list -r /Users/runner/micromamba -n tardis
2025-01-14T13:09:09.0724720Z List of packages in environment: "/Users/runner/micromamba/envs/tardis"
2025-01-14T13:09:09.0725140Z 
2025-01-14T13:09:09.0725580Z   Name                           Version              Build                    Channel    
2025-01-14T13:09:09.0727660Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-14T13:09:09.0728430Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0728850Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0729320Z   appnope                        0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0729680Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0730260Z   argon2-cffi-bindings           21.2.0               py312h02f2b3b_4          conda-forge
2025-01-14T13:09:09.0730640Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0732080Z   astropy                        6.1.1                py312hbebd99a_0          conda-forge
2025-01-14T13:09:09.0732530Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0733110Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0733640Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0734050Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0734520Z   atk-1.0                        2.38.0               hd03087b_2               conda-forge
2025-01-14T13:09:09.0734860Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-14T13:09:09.0735280Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0735650Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-14T13:09:09.0736090Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0736450Z   blosc                          1.21.5               h9c252e8_1               conda-forge
2025-01-14T13:09:09.0736900Z   brotli                         1.1.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0738270Z   brotli-bin                     1.1.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0738760Z   brotli-python                  1.1.0                py312h9f69965_1          conda-forge
2025-01-14T13:09:09.0739120Z   bzip2                          1.0.8                h93a5062_5               conda-forge
2025-01-14T13:09:09.0739540Z   c-ares                         1.28.1               h93a5062_0               conda-forge
2025-01-14T13:09:09.0739970Z   c-blosc2                       2.14.4               ha57e6be_1               conda-forge
2025-01-14T13:09:09.0740840Z   ca-certificates                2024.6.2             hf0a4a13_0               conda-forge
2025-01-14T13:09:09.0741360Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-14T13:09:09.0741820Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-14T13:09:09.0742270Z   cairo                          1.18.0               hd1e100b_0               conda-forge
2025-01-14T13:09:09.0742850Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0743360Z   cffi                           1.16.0               py312h8e38eb3_0          conda-forge
2025-01-14T13:09:09.0743880Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0744600Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-14T13:09:09.0745120Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0745530Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0746020Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0746370Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-14T13:09:09.0746860Z   contourpy                      1.2.1                py312h0fef576_0          conda-forge
2025-01-14T13:09:09.0747310Z   coverage                       7.5.3                py312h7e5086c_0          conda-forge
2025-01-14T13:09:09.0747790Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0748340Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-14T13:09:09.0748790Z   debugpy                        1.8.1                py312h20a0b95_0          conda-forge
2025-01-14T13:09:09.0749330Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0749710Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0750180Z   docutils                       0.20.1               py312h81bd7bf_3          conda-forge
2025-01-14T13:09:09.0750610Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0751100Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0751520Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-14T13:09:09.0752060Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0752490Z   expat                          2.6.2                hebf3989_0               conda-forge
2025-01-14T13:09:09.0753320Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-14T13:09:09.0753850Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-14T13:09:09.0754300Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-14T13:09:09.0754790Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-14T13:09:09.0755150Z   fontconfig                     2.14.2               h82840c6_0               conda-forge
2025-01-14T13:09:09.0755640Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-14T13:09:09.0756050Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-14T13:09:09.0756510Z   fonttools                      4.53.0               py312h7e5086c_0          conda-forge
2025-01-14T13:09:09.0756850Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0757400Z   freetype                       2.12.1               hadb7bae_2               conda-forge
2025-01-14T13:09:09.0757760Z   fribidi                        1.0.10               h27ca646_0               conda-forge
2025-01-14T13:09:09.0758150Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0758500Z   gdk-pixbuf                     2.42.12              h7ddc832_0               conda-forge
2025-01-14T13:09:09.0758960Z   gettext                        0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0759700Z   gettext-tools                  0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0760270Z   giflib                         5.2.2                h93a5062_0               conda-forge
2025-01-14T13:09:09.0760900Z   git-lfs                        3.5.1                hce30654_0               conda-forge
2025-01-14T13:09:09.0761210Z   gmp                            6.3.0                hebf3989_1               conda-forge
2025-01-14T13:09:09.0761550Z   gmpy2                          2.1.5                py312hfa9fade_1          conda-forge
2025-01-14T13:09:09.0761900Z   graphite2                      1.3.13               hebf3989_1003            conda-forge
2025-01-14T13:09:09.0762330Z   graphviz                       11.0.0               h9bb9bc9_0               conda-forge
2025-01-14T13:09:09.0762710Z   gtk2                           2.24.33              h7895bb2_4               conda-forge
2025-01-14T13:09:09.0763160Z   gts                            0.7.6                he42f4ea_4               conda-forge
2025-01-14T13:09:09.0763530Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0763950Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0764860Z   h5py                           3.11.0               nompi_py312h903599c_102  conda-forge
2025-01-14T13:09:09.0765210Z   harfbuzz                       8.5.0                h1836168_0               conda-forge
2025-01-14T13:09:09.0765650Z   hdf5                           1.14.3               nompi_hec07895_105       conda-forge
2025-01-14T13:09:09.0766010Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-14T13:09:09.0766880Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0767290Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0767760Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0768110Z   icu                            73.2                 hc8870d7_0               conda-forge
2025-01-14T13:09:09.0768540Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0768880Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0769280Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-14T13:09:09.0769750Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-14T13:09:09.0770200Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0770580Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0771090Z   ipykernel                      6.29.4               pyh57ce528_0             conda-forge
2025-01-14T13:09:09.0771490Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-14T13:09:09.0772000Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0772440Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0773500Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0773860Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0774230Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0774550Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0774920Z   jsonpointer                    3.0.0                py312h81bd7bf_0          conda-forge
2025-01-14T13:09:09.0775250Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0775680Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0776350Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0776720Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0777140Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0777510Z   jupyter_core                   5.7.2                py312h81bd7bf_0          conda-forge
2025-01-14T13:09:09.0778180Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0779240Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0779800Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0780500Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0810630Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0811350Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0811890Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0812330Z   kiwisolver                     1.4.5                py312h389731b_1          conda-forge
2025-01-14T13:09:09.0812810Z   krb5                           1.21.2               h92f50d5_0               conda-forge
2025-01-14T13:09:09.0813270Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-14T13:09:09.0813790Z   lcms2                          2.16                 ha0e7c42_0               conda-forge
2025-01-14T13:09:09.0814240Z   lerc                           4.0.0                h9a09cb3_0               conda-forge
2025-01-14T13:09:09.0814700Z   libaec                         1.1.3                hebf3989_0               conda-forge
2025-01-14T13:09:09.0815100Z   libasprintf                    0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0815590Z   libasprintf-devel              0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0816020Z   libblas                        3.9.0                22_osxarm64_openblas     conda-forge
2025-01-14T13:09:09.0816400Z   libbrotlicommon                1.1.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0816770Z   libbrotlidec                   1.1.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0817160Z   libbrotlienc                   1.1.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0817510Z   libcblas                       3.9.0                22_osxarm64_openblas     conda-forge
2025-01-14T13:09:09.0817890Z   libcurl                        8.8.0                h7b6f9a7_0               conda-forge
2025-01-14T13:09:09.0818240Z   libcxx                         17.0.6               h5f092b4_0               conda-forge
2025-01-14T13:09:09.0818600Z   libdeflate                     1.20                 h93a5062_0               conda-forge
2025-01-14T13:09:09.0818920Z   libedit                        3.1.20191231         hc8eb9b7_2               conda-forge
2025-01-14T13:09:09.0819540Z   libev                          4.33                 h93a5062_2               conda-forge
2025-01-14T13:09:09.0819820Z   libexpat                       2.6.2                hebf3989_0               conda-forge
2025-01-14T13:09:09.0820130Z   libffi                         3.4.2                h3422bc3_5               conda-forge
2025-01-14T13:09:09.0820520Z   libgd                          2.3.3                hfdf3952_9               conda-forge
2025-01-14T13:09:09.0820850Z   libgettextpo                   0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0821310Z   libgettextpo-devel             0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0821820Z   libgfortran                    5.0.0                13_2_0_hd922786_3        conda-forge
2025-01-14T13:09:09.0822100Z   libgfortran5                   13.2.0               hf226fd6_3               conda-forge
2025-01-14T13:09:09.0822460Z   libglib                        2.80.2               h59d46d9_1               conda-forge
2025-01-14T13:09:09.0822770Z   libiconv                       1.17                 h0d3ecfb_2               conda-forge
2025-01-14T13:09:09.0823060Z   libintl                        0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0823460Z   libintl-devel                  0.22.5               h8fbad5d_2               conda-forge
2025-01-14T13:09:09.0823780Z   libjpeg-turbo                  3.0.0                hb547adb_1               conda-forge
2025-01-14T13:09:09.0824180Z   liblapack                      3.9.0                22_osxarm64_openblas     conda-forge
2025-01-14T13:09:09.0824460Z   libllvm14                      14.0.6               hd1a9a77_4               conda-forge
2025-01-14T13:09:09.0824810Z   libnghttp2                     1.58.0               ha4dd798_1               conda-forge
2025-01-14T13:09:09.0825120Z   libopenblas                    0.3.27               openmp_h6c19121_0        conda-forge
2025-01-14T13:09:09.0825520Z   libpng                         1.6.43               h091b4b1_0               conda-forge
2025-01-14T13:09:09.0825880Z   librsvg                        2.58.1               hbc281fb_0               conda-forge
2025-01-14T13:09:09.0826260Z   libsodium                      1.0.18               h27ca646_1               conda-forge
2025-01-14T13:09:09.0826650Z   libsqlite                      3.46.0               hfb93653_0               conda-forge
2025-01-14T13:09:09.0826910Z   libssh2                        1.11.0               h7a5bd25_0               conda-forge
2025-01-14T13:09:09.0827240Z   libtiff                        4.6.0                h07db509_3               conda-forge
2025-01-14T13:09:09.0827550Z   libwebp                        1.4.0                h54798ee_0               conda-forge
2025-01-14T13:09:09.0827860Z   libwebp-base                   1.4.0                h93a5062_0               conda-forge
2025-01-14T13:09:09.0828240Z   libxcb                         1.16                 hf2054a2_0               conda-forge
2025-01-14T13:09:09.0828540Z   libxml2                        2.12.7               ha661575_1               conda-forge
2025-01-14T13:09:09.0828870Z   libxslt                        1.1.39               h223e5b9_0               conda-forge
2025-01-14T13:09:09.0829170Z   libzlib                        1.3.1                hfb2fe0b_1               conda-forge
2025-01-14T13:09:09.0829550Z   llvm-openmp                    18.1.7               hde57baf_0               conda-forge
2025-01-14T13:09:09.0829920Z   llvmlite                       0.42.0               py312h17030e7_1          conda-forge
2025-01-14T13:09:09.0830250Z   lxml                           5.2.2                py312h0e5ab22_0          conda-forge
2025-01-14T13:09:09.0830580Z   lz4-c                          1.9.4                hb7217d7_0               conda-forge
2025-01-14T13:09:09.0830890Z   markupsafe                     2.1.5                py312he37b823_0          conda-forge
2025-01-14T13:09:09.0831340Z   matplotlib-base                3.8.4                py312h4479663_2          conda-forge
2025-01-14T13:09:09.0831690Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0831980Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0832270Z   mpc                            1.3.1                h91ba8db_0               conda-forge
2025-01-14T13:09:09.0832580Z   mpfr                           4.2.1                h41d338b_1               conda-forge
2025-01-14T13:09:09.0832870Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0833320Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-14T13:09:09.0833630Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-14T13:09:09.0834020Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0834320Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0834680Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-14T13:09:09.0835000Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0835340Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-14T13:09:09.0835660Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0836010Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0836350Z   ncurses                        6.5                  hb89a1cb_0               conda-forge
2025-01-14T13:09:09.0836670Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0837010Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0837310Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0837660Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0837970Z   numba                          0.59.1               py312hbaff935_0          conda-forge
2025-01-14T13:09:09.0838300Z   numexpr                        2.10.0               py312h8ae5369_0          conda-forge
2025-01-14T13:09:09.0838590Z   numpy                          1.26.4               py312h8442bc7_0          conda-forge
2025-01-14T13:09:09.0838930Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0839190Z   openjpeg                       2.5.2                h9f1df11_0               conda-forge
2025-01-14T13:09:09.0839450Z   openssl                        3.3.1                hfb2fe0b_0               conda-forge
2025-01-14T13:09:09.0839720Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0840080Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0840340Z   pandas                         2.2.2                py312h8ae5369_1          conda-forge
2025-01-14T13:09:09.0840590Z   pandoc                         3.2                  hce30654_0               conda-forge
2025-01-14T13:09:09.0840890Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0841160Z   pango                          1.54.0               h5cb9fbc_0               conda-forge
2025-01-14T13:09:09.0841420Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0841680Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0842070Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0842330Z   pcre2                          10.44                h297a79d_0               conda-forge
2025-01-14T13:09:09.0842590Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0842850Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-14T13:09:09.0843120Z   pillow                         10.3.0               py312h39b1d8d_1          conda-forge
2025-01-14T13:09:09.0843370Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0843620Z   pixman                         0.43.4               hebf3989_0               conda-forge
2025-01-14T13:09:09.0844170Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0844470Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0844750Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0845020Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0845300Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0845660Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-14T13:09:09.0845930Z   psutil                         5.9.8                py312he37b823_0          conda-forge
2025-01-14T13:09:09.0846310Z   pthread-stubs                  0.4                  h27ca646_1001            conda-forge
2025-01-14T13:09:09.0846600Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-14T13:09:09.0846870Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0847160Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0847420Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-14T13:09:09.0847700Z   pybtex-docutils                1.0.3                py312h81bd7bf_1          conda-forge
2025-01-14T13:09:09.0848000Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0848280Z   pyerfa                         2.0.1.4              py312hbebd99a_1          conda-forge
2025-01-14T13:09:09.0848560Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0848850Z   pygraphviz                     1.13                 py312h5f4d302_1          conda-forge
2025-01-14T13:09:09.0849150Z   pyobjc-core                    10.3.1               py312hbb55c70_0          conda-forge
2025-01-14T13:09:09.0849480Z   pyobjc-framework-cocoa         10.3.1               py312hbb55c70_0          conda-forge
2025-01-14T13:09:09.0849800Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0850090Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-14T13:09:09.0850370Z   pytables                       3.9.2                py312hb622ae1_2          conda-forge
2025-01-14T13:09:09.0850640Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0850930Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0851250Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0851570Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0851890Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0852500Z   python                         3.12.4               h30c5eda_0_cpython       conda-forge
2025-01-14T13:09:09.0852810Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0853150Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0853490Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0853810Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0854150Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-14T13:09:09.0854430Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0854820Z   pyyaml                         6.0.1                py312h02f2b3b_1          conda-forge
2025-01-14T13:09:09.0855090Z   pyzmq                          26.0.3               py312hfa13136_0          conda-forge
2025-01-14T13:09:09.0855360Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-14T13:09:09.0855660Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0855950Z   readline                       8.2                  h92ec313_1               conda-forge
2025-01-14T13:09:09.0856240Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0856550Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0856840Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0857150Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0857480Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-14T13:09:09.0857770Z   rpds-py                        0.18.1               py312h552d48e_0          conda-forge
2025-01-14T13:09:09.0858040Z   ruff                           0.4.9                py312h3402d49_0          conda-forge
2025-01-14T13:09:09.0858290Z   scipy                          1.13.1               py312h14ffa8f_0          conda-forge
2025-01-14T13:09:09.0858550Z   send2trash                     1.8.3                pyh31c8845_0             conda-forge
2025-01-14T13:09:09.0858830Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0859120Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0859400Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-14T13:09:09.0859670Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-14T13:09:09.0859930Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0860190Z   snappy                         1.2.0                hd04f947_1               conda-forge
2025-01-14T13:09:09.0860450Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0860720Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0861010Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0861280Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0861560Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0861910Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-14T13:09:09.0862210Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0862610Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0862930Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0863230Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-14T13:09:09.0863530Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-14T13:09:09.0863860Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0864210Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0864560Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0865010Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0865360Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0865710Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0866060Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0866430Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0866800Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0867080Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-14T13:09:09.0867380Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0867690Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0867970Z   terminado                      0.18.1               pyh31c8845_0             conda-forge
2025-01-14T13:09:09.0868260Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0868550Z   tk                             8.6.13               h5083fa2_1               conda-forge
2025-01-14T13:09:09.0868800Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0869070Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0869350Z   tornado                        6.4.1                py312h7e5086c_0          conda-forge
2025-01-14T13:09:09.0869620Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0869890Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0870190Z   typed-ast                      1.5.5                py312h02f2b3b_1          conda-forge
2025-01-14T13:09:09.0870510Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0870980Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-14T13:09:09.0871300Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-14T13:09:09.0871590Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0871860Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-14T13:09:09.0872130Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0872410Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0872670Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0872940Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0873350Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-14T13:09:09.0873650Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0873930Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-14T13:09:09.0874220Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0874510Z   xorg-libxau                    1.0.11               hb547adb_0               conda-forge
2025-01-14T13:09:09.0874790Z   xorg-libxdmcp                  1.1.3                h27ca646_0               conda-forge
2025-01-14T13:09:09.0875050Z   xz                             5.2.6                h57fd34a_0               conda-forge
2025-01-14T13:09:09.0875400Z   yaml                           0.2.5                h3422bc3_2               conda-forge
2025-01-14T13:09:09.0875650Z   zeromq                         4.3.5                hcc0f68c_4               conda-forge
2025-01-14T13:09:09.0875900Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-14T13:09:09.0876150Z   zlib                           1.3.1                hfb2fe0b_1               conda-forge
2025-01-14T13:09:09.0876400Z   zlib-ng                        2.0.7                h1a8c8d9_0               conda-forge
2025-01-14T13:09:09.0876650Z   zstd                           1.5.6                hb46c0d2_0               conda-forge
2025-01-14T13:09:09.0877270Z ##[endgroup]
2025-01-14T13:09:09.0943280Z ##[group]Run pip install -e . --user
2025-01-14T13:09:09.0943600Z [36;1mpip install -e . --user[0m
2025-01-14T13:09:09.2495750Z shell: /bin/bash -l {0}
2025-01-14T13:09:09.2495950Z env:
2025-01-14T13:09:09.2496090Z   CACHE_NUMBER: 0
2025-01-14T13:09:09.2496590Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:09:09.2497110Z   CODECOV_TOKEN: 
2025-01-14T13:09:09.2497280Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-14T13:09:09.2497530Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-14T13:09:09.2497810Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:09:09.2498040Z ##[endgroup]
2025-01-14T13:09:10.4409940Z Obtaining file:///Users/runner/work/tardis/tardis
2025-01-14T13:09:10.4441160Z   Installing build dependencies: started
2025-01-14T13:09:13.3203960Z   Installing build dependencies: finished with status 'done'
2025-01-14T13:09:13.3210310Z   Checking if build backend supports build_editable: started
2025-01-14T13:09:13.4206940Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-14T13:09:13.4220140Z   Getting requirements to build editable: started
2025-01-14T13:09:13.9343140Z   Getting requirements to build editable: finished with status 'done'
2025-01-14T13:09:13.9370490Z   Preparing editable metadata (pyproject.toml): started
2025-01-14T13:09:14.3951720Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-14T13:09:14.4489820Z Requirement already satisfied: astropy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-14T13:09:14.4856440Z Requirement already satisfied: numpy>=1.23 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-14T13:09:14.4956710Z Requirement already satisfied: pyerfa>=2.0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-14T13:09:14.5012730Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-14T13:09:14.5013810Z Requirement already satisfied: PyYAML>=3.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-14T13:09:14.5014730Z Requirement already satisfied: packaging>=19.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-14T13:09:14.5015300Z Building wheels for collected packages: tardis
2025-01-14T13:09:14.5015680Z   Building editable for tardis (pyproject.toml): started
2025-01-14T13:09:15.1806860Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-14T13:09:15.1817230Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8876 sha256=63240bb6b470f7bfa3af1e467d0617b0ba54b9349311fe9359c8417961d8e680
2025-01-14T13:09:15.1818590Z   Stored in directory: /private/var/folders/ml/x_tvfgn50_s7p67dm1ypcqqm0000gn/T/pip-ephem-wheel-cache-fw1x9jqi/wheels/bb/4f/6a/0829b918c1c10bc28535ce7f14be21eee54375bdd9cd0c306a
2025-01-14T13:09:15.1839730Z Successfully built tardis
2025-01-14T13:09:15.7620270Z Installing collected packages: tardis
2025-01-14T13:09:15.7720650Z Successfully installed tardis-0.0.0
2025-01-14T13:09:16.0694950Z ##[group]Run pip install qgridnext
2025-01-14T13:09:16.0695310Z [36;1mpip install qgridnext[0m
2025-01-14T13:09:16.0752700Z shell: /bin/bash -l {0}
2025-01-14T13:09:16.0752940Z env:
2025-01-14T13:09:16.0753110Z   CACHE_NUMBER: 0
2025-01-14T13:09:16.0753660Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:09:16.0754180Z   CODECOV_TOKEN: 
2025-01-14T13:09:16.0754430Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-14T13:09:16.0754710Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-14T13:09:16.0755060Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:09:16.0755420Z ##[endgroup]
2025-01-14T13:09:16.7970290Z Collecting qgridnext
2025-01-14T13:09:16.8389160Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-14T13:09:16.8543460Z Requirement already satisfied: pandas>=0.20.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-14T13:09:16.8548160Z Requirement already satisfied: ipywidgets>=7.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-14T13:09:16.8554330Z Requirement already satisfied: numpy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-14T13:09:16.8560800Z Requirement already satisfied: traitlets in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-14T13:09:16.8610470Z Requirement already satisfied: comm>=0.1.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-14T13:09:16.8616440Z Requirement already satisfied: ipython-genutils~=0.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-14T13:09:16.8626610Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-14T13:09:16.8636100Z Requirement already satisfied: ipython>=4.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-14T13:09:16.8645090Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-14T13:09:16.8917900Z Requirement already satisfied: python-dateutil>=2.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-14T13:09:16.8948420Z Requirement already satisfied: pytz>=2020.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-14T13:09:16.8949500Z Requirement already satisfied: tzdata>=2022.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-14T13:09:16.9136760Z Requirement already satisfied: decorator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-14T13:09:16.9148340Z Requirement already satisfied: jedi>=0.16 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-14T13:09:16.9153580Z Requirement already satisfied: matplotlib-inline in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-14T13:09:16.9159750Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-14T13:09:16.9165640Z Requirement already satisfied: pygments>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-14T13:09:16.9171900Z Requirement already satisfied: stack-data in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-14T13:09:16.9185350Z Requirement already satisfied: pexpect>4.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-14T13:09:16.9211770Z Requirement already satisfied: six>=1.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-14T13:09:16.9245500Z Requirement already satisfied: notebook>=4.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-14T13:09:16.9360250Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-14T13:09:16.9448640Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-14T13:09:16.9456130Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-14T13:09:16.9466000Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-14T13:09:16.9472140Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-14T13:09:16.9477590Z Requirement already satisfied: tornado>=6.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-14T13:09:16.9497430Z Requirement already satisfied: ptyprocess>=0.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-14T13:09:16.9517640Z Requirement already satisfied: wcwidth in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-14T13:09:16.9618380Z Requirement already satisfied: executing>=1.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-14T13:09:16.9719750Z Requirement already satisfied: asttokens>=2.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-14T13:09:16.9821780Z Requirement already satisfied: pure-eval in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-14T13:09:16.9921880Z Requirement already satisfied: anyio>=3.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-14T13:09:17.0024030Z Requirement already satisfied: argon2-cffi>=21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-14T13:09:17.0125570Z Requirement already satisfied: jinja2>=3.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-14T13:09:17.0226590Z Requirement already satisfied: jupyter-client>=7.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-14T13:09:17.0328370Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-14T13:09:17.0429290Z Requirement already satisfied: jupyter-events>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-14T13:09:17.0531070Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-14T13:09:17.0631700Z Requirement already satisfied: nbconvert>=6.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-14T13:09:17.0734120Z Requirement already satisfied: nbformat>=5.3.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-14T13:09:17.0834530Z Requirement already satisfied: overrides>=5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-14T13:09:17.0935240Z Requirement already satisfied: packaging>=22.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-14T13:09:17.1036820Z Requirement already satisfied: prometheus-client>=0.9 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-14T13:09:17.1137560Z Requirement already satisfied: pyzmq>=24 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-14T13:09:17.1240670Z Requirement already satisfied: send2trash>=1.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-14T13:09:17.1343160Z Requirement already satisfied: terminado>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-14T13:09:17.1442920Z Requirement already satisfied: websocket-client>=1.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-14T13:09:17.1543830Z Requirement already satisfied: async-lru>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-14T13:09:17.1645370Z Requirement already satisfied: httpx>=0.25.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-14T13:09:17.1746930Z Requirement already satisfied: ipykernel>=6.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-14T13:09:17.1847040Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-14T13:09:17.1949280Z Requirement already satisfied: setuptools>=40.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-14T13:09:17.2050270Z Requirement already satisfied: babel>=2.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-14T13:09:17.2157840Z Requirement already satisfied: json5>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-14T13:09:17.2261450Z Requirement already satisfied: jsonschema>=4.18.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-14T13:09:17.2364290Z Requirement already satisfied: requests>=2.31 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-14T13:09:17.2467960Z Requirement already satisfied: idna>=2.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-14T13:09:17.2571600Z Requirement already satisfied: sniffio>=1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-14T13:09:17.2671860Z Requirement already satisfied: argon2-cffi-bindings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-14T13:09:17.2773780Z Requirement already satisfied: certifi in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-14T13:09:17.2875750Z Requirement already satisfied: httpcore==1.* in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-14T13:09:17.2976590Z Requirement already satisfied: h11<0.15,>=0.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-14T13:09:17.3076940Z Requirement already satisfied: appnope in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-14T13:09:17.3179060Z Requirement already satisfied: debugpy>=1.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-14T13:09:17.3280100Z Requirement already satisfied: nest-asyncio in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-14T13:09:17.3382090Z Requirement already satisfied: psutil in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-14T13:09:17.3485410Z Requirement already satisfied: MarkupSafe>=2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-14T13:09:17.3593680Z Requirement already satisfied: attrs>=22.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-14T13:09:17.3697590Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-14T13:09:17.3797980Z Requirement already satisfied: referencing>=0.28.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-14T13:09:17.3899160Z Requirement already satisfied: rpds-py>=0.7.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-14T13:09:17.4001300Z Requirement already satisfied: platformdirs>=2.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-14T13:09:17.4101690Z Requirement already satisfied: python-json-logger>=2.0.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-14T13:09:17.4119570Z Requirement already satisfied: pyyaml>=5.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-14T13:09:17.4120950Z Requirement already satisfied: rfc3339-validator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-14T13:09:17.4122560Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-14T13:09:17.4124040Z Requirement already satisfied: beautifulsoup4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-14T13:09:17.4125410Z Requirement already satisfied: bleach!=5.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-14T13:09:17.4126730Z Requirement already satisfied: defusedxml in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-14T13:09:17.4128800Z Requirement already satisfied: jupyterlab-pygments in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-14T13:09:17.4130180Z Requirement already satisfied: mistune<4,>=2.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-14T13:09:17.4131490Z Requirement already satisfied: nbclient>=0.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-14T13:09:17.4132880Z Requirement already satisfied: pandocfilters>=1.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-14T13:09:17.4134310Z Requirement already satisfied: tinycss2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:09:17.4135630Z Requirement already satisfied: fastjsonschema>=2.15 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-14T13:09:17.4137060Z Requirement already satisfied: charset-normalizer<4,>=2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-14T13:09:17.4138410Z Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-14T13:09:17.4139920Z Requirement already satisfied: webencodings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-14T13:09:17.4141510Z Requirement already satisfied: fqdn in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-14T13:09:17.4143070Z Requirement already satisfied: isoduration in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-14T13:09:17.4144630Z Requirement already satisfied: jsonpointer>1.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-14T13:09:17.4146100Z Requirement already satisfied: uri-template in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:09:17.4147750Z Requirement already satisfied: webcolors>=1.11 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-14T13:09:17.4241050Z Requirement already satisfied: cffi>=1.0.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-14T13:09:17.4303910Z Requirement already satisfied: soupsieve>1.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-14T13:09:17.4620160Z Requirement already satisfied: pycparser in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-14T13:09:17.4910300Z Requirement already satisfied: arrow>=0.15.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-14T13:09:17.5095040Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-14T13:09:17.5380970Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-14T13:09:17.6560210Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 10.9 MB/s eta 0:00:00
2025-01-14T13:09:18.2595930Z Installing collected packages: qgridnext
2025-01-14T13:09:18.3024810Z Successfully installed qgridnext-2.0.4
2025-01-14T13:09:18.5182950Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-14T13:09:18.5183990Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-14T13:09:18.5283170Z shell: /bin/bash -l {0}
2025-01-14T13:09:18.5283390Z env:
2025-01-14T13:09:18.5283540Z   CACHE_NUMBER: 0
2025-01-14T13:09:18.5284050Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-14T13:09:18.5284580Z   CODECOV_TOKEN: 
2025-01-14T13:09:18.5284760Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-14T13:09:18.5285030Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-14T13:09:18.5285370Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:09:18.5285620Z ##[endgroup]
2025-01-14T13:09:32.9519080Z ============================= test session starts ==============================
2025-01-14T13:09:32.9520840Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-14T13:09:32.9525860Z rootdir: /Users/runner/work/tardis/tardis
2025-01-14T13:09:32.9527120Z configfile: pyproject.toml
2025-01-14T13:09:32.9527980Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-14T13:09:32.9531440Z collected 1796 items / 2 deselected / 1794 selected
2025-01-14T13:09:32.9533500Z 
2025-01-14T13:09:37.2880450Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-14T13:09:39.0529860Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-14T13:09:40.3507870Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-14T13:09:41.5934760Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-14T13:09:41.6035280Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-14T13:09:42.7317660Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-14T13:09:43.1158790Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-14T13:09:43.1169890Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-14T13:09:46.6914410Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-14T13:09:46.7004010Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-14T13:09:46.7229050Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-14T13:10:19.9258630Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-14T13:10:19.9855900Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-14T13:10:19.9993060Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-14T13:10:20.0234810Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-14T13:10:20.0397840Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-14T13:10:20.2584150Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-14T13:10:20.8779640Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-14T13:10:20.8956660Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-14T13:10:21.0796960Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-14T13:10:21.0863080Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-14T13:10:31.7154940Z tardis/model/tests/test_base.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 10%]
2025-01-14T13:10:33.9157120Z EEEEEEEEEEEE                                                             [ 10%]
2025-01-14T13:10:36.4557270Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-14T13:10:36.8203890Z tardis/model/tests/test_density.py EE                                    [ 11%]
2025-01-14T13:10:38.0973540Z tardis/opacities/tests/test_opacity_solver.py EEEEE                      [ 11%]
2025-01-14T13:10:39.6540590Z tardis/opacities/tests/test_opacity_state_numba.py EEEEE                 [ 11%]
2025-01-14T13:10:40.7609370Z tardis/opacities/tests/test_tau_sobolev.py EE                            [ 12%]
2025-01-14T13:10:43.2274090Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-14T13:11:27.2287590Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-14T13:11:37.5658920Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-14T13:11:39.2366270Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-14T13:11:41.4871000Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-14T13:11:42.8377760Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-14T13:11:45.6556150Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-14T13:11:48.4054910Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-14T13:11:49.1732880Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-14T13:11:51.7759980Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-14T13:11:54.2086740Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-14T13:11:56.5169900Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-14T13:11:58.3180920Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-14T13:12:01.2002750Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-14T13:12:03.9710720Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-14T13:12:04.2905920Z ...................s.....s....ssss.......                                [ 60%]
2025-01-14T13:12:14.1823770Z tardis/plasma/tests/test_hdf_plasma.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 62%]
2025-01-14T13:12:15.9448460Z EEEEEE                                                                   [ 62%]
2025-01-14T13:12:16.4049020Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-14T13:14:13.1917380Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-14T13:14:13.1960210Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-14T13:14:35.2325560Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-14T13:14:46.3373230Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-14T13:14:46.8608150Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-14T13:14:51.4773990Z tardis/simulation/tests/test_simulation.py EEEEEEEEEE...                 [ 65%]
2025-01-14T13:14:51.4879620Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-14T13:14:51.7214600Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-14T13:14:51.7255140Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-14T13:14:53.3889870Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-14T13:14:53.3999250Z ..........                                                               [ 69%]
2025-01-14T13:14:53.5483560Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-14T13:14:53.5799940Z .........                                                                [ 72%]
2025-01-14T13:14:56.2445780Z tardis/spectrum/tests/test_spectrum_solver.py EEEE                       [ 72%]
2025-01-14T13:15:00.8934340Z tardis/tests/test_tardis_full.py FEEE                                    [ 72%]
2025-01-14T13:15:10.8328300Z tardis/tests/test_tardis_full_formal_integral.py EEEEEEEEEEEEEEEE        [ 73%]
2025-01-14T13:15:10.8996580Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-14T13:15:15.1166850Z tardis/transport/montecarlo/tests/test_base.py xEEEEEEEEEEEEEEEEEEEEE    [ 77%]
2025-01-14T13:15:16.9547310Z tardis/transport/montecarlo/tests/test_interaction.py EEEEEEE            [ 77%]
2025-01-14T13:15:17.1118870Z tardis/transport/montecarlo/tests/test_macro_atom.py EEEE                [ 77%]
2025-01-14T13:15:17.1226370Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-14T13:15:17.1482540Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-14T13:15:20.7042510Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-14T13:15:20.7129470Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-14T13:15:21.0146780Z tardis/transport/montecarlo/tests/test_numba_interface.py EEEEExE        [ 82%]
2025-01-14T13:15:21.3342080Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-14T13:15:23.6399290Z tardis/transport/montecarlo/tests/test_packet.py .................xxxxxX [ 84%]
2025-01-14T13:15:24.4137390Z XXEEEEEEEEE                                                              [ 84%]
2025-01-14T13:15:24.4428490Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-14T13:15:24.6888530Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-14T13:15:49.0925040Z .FFFF                                                                    [ 85%]
2025-01-14T13:15:55.6646190Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py .FFFEE         [ 85%]
2025-01-14T13:15:55.7794660Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-14T13:15:57.0054910Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-14T13:15:57.4586670Z tardis/transport/montecarlo/tests/test_vpacket.py EExE                   [ 86%]
2025-01-14T13:15:57.4723940Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-14T13:15:59.0623000Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-14T13:15:59.0623440Z                                                                          [ 86%]
2025-01-14T13:15:59.6226270Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-14T13:16:01.2210000Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-14T13:16:02.6772510Z ......                                                                   [ 88%]
2025-01-14T13:16:04.8975990Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-14T13:16:06.3547140Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-14T13:16:07.5052050Z tardis/visualization/tools/tests/test_rpacket_plot.py EEEEEEEEEEEEEEEEEE [ 92%]
2025-01-14T13:16:07.8525750Z EEEE                                                                     [ 92%]
2025-01-14T13:16:10.3624920Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-14T13:16:11.9250760Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-14T13:16:12.2478190Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-14T13:16:12.2847100Z ....                                                                     [ 96%]
2025-01-14T13:16:17.1113720Z tardis/visualization/widgets/tests/test_line_info.py EEEEEEEEEEEEEEEEEEE [ 97%]
2025-01-14T13:16:23.4115480Z EEEEEEEEEEEEEEEEEE                                                       [ 98%]
2025-01-14T13:16:31.2877020Z tardis/visualization/widgets/tests/test_shell_info.py EEEEEEEEEEEEEEEEEE [ 99%]
2025-01-14T13:16:42.2931530Z EEEEEE                                                                   [100%]
2025-01-14T13:16:42.2933180Z 
2025-01-14T13:16:42.2934940Z ==================================== ERRORS ====================================
2025-01-14T13:16:42.2937320Z _________ ERROR at setup of TestModelFromPaper1Config.test_abundances __________
2025-01-14T13:16:42.2938990Z 
2025-01-14T13:16:42.2941400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.2946370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.2955410Z 
2025-01-14T13:16:42.2955970Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.2968030Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.2968830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.2969530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.2971140Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.2972850Z >       sim.run_final()
2025-01-14T13:16:42.2973250Z 
2025-01-14T13:16:42.2975060Z tardis/conftest.py:233: 
2025-01-14T13:16:42.2976520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.2983030Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.2983590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.2984620Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.2990570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.2991770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.2992390Z 
2025-01-14T13:16:42.2993470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.2997680Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.2998680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.2999220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.2999760Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3000130Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3000370Z 
2025-01-14T13:16:42.3000490Z     def initialize_transport_state(
2025-01-14T13:16:42.3000740Z         self,
2025-01-14T13:16:42.3001490Z         simulation_state,
2025-01-14T13:16:42.3001770Z         opacity_state,
2025-01-14T13:16:42.3002580Z         macro_atom_state,
2025-01-14T13:16:42.3002940Z         plasma,
2025-01-14T13:16:42.3003500Z         no_of_packets,
2025-01-14T13:16:42.3003740Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3004290Z         iteration=0,
2025-01-14T13:16:42.3005140Z     ):
2025-01-14T13:16:42.3005460Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3005810Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3006140Z         else:
2025-01-14T13:16:42.3006370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3006650Z     
2025-01-14T13:16:42.3006900Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3009250Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3009570Z         )
2025-01-14T13:16:42.3009760Z     
2025-01-14T13:16:42.3009990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3010430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3014430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3015720Z         else:
2025-01-14T13:16:42.3016370Z             continuum_state = None
2025-01-14T13:16:42.3016630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3017150Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3018040Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3019130Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3019790Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3020550Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3021390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3022170Z         ).to_numba(
2025-01-14T13:16:42.3022800Z             macro_atom_state,
2025-01-14T13:16:42.3025470Z             self.line_interaction_type,
2025-01-14T13:16:42.3025860Z         )
2025-01-14T13:16:42.3026180Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3026610Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3027050Z         ]
2025-01-14T13:16:42.3027410Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3027770Z 
2025-01-14T13:16:42.3027930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3028350Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.3033090Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.3045970Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.3047730Z ---------------------------- Captured stderr setup -----------------------------
2025-01-14T13:16:42.3064300Z OMP: Info #276: omp_set_nested routine deprecated, please use omp_set_max_active_levels instead.
2025-01-14T13:16:42.3064850Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.3065610Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.3067100Z _________ ERROR at setup of TestModelFromPaper1Config.test_velocities __________
2025-01-14T13:16:42.3068150Z 
2025-01-14T13:16:42.3069950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3073640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3074830Z 
2025-01-14T13:16:42.3075120Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3077700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3081200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3081820Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3083650Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3156910Z >       sim.run_final()
2025-01-14T13:16:42.3157240Z 
2025-01-14T13:16:42.3162780Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3163080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3163400Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3163670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3163950Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3164250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3165660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3165900Z 
2025-01-14T13:16:42.3166130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3166580Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3167020Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3167570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3167990Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3168310Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3168500Z 
2025-01-14T13:16:42.3168560Z     def initialize_transport_state(
2025-01-14T13:16:42.3168750Z         self,
2025-01-14T13:16:42.3168940Z         simulation_state,
2025-01-14T13:16:42.3169180Z         opacity_state,
2025-01-14T13:16:42.3169620Z         macro_atom_state,
2025-01-14T13:16:42.3169900Z         plasma,
2025-01-14T13:16:42.3170100Z         no_of_packets,
2025-01-14T13:16:42.3170370Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3170610Z         iteration=0,
2025-01-14T13:16:42.3170880Z     ):
2025-01-14T13:16:42.3171110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3171520Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3171780Z         else:
2025-01-14T13:16:42.3172020Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3172330Z     
2025-01-14T13:16:42.3172640Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3172890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3173760Z         )
2025-01-14T13:16:42.3173970Z     
2025-01-14T13:16:42.3174260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3174660Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3175560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3176390Z         else:
2025-01-14T13:16:42.3177040Z             continuum_state = None
2025-01-14T13:16:42.3177920Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3178670Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3179490Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3180210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3180990Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3181680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3182430Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3183250Z         ).to_numba(
2025-01-14T13:16:42.3183860Z             macro_atom_state,
2025-01-14T13:16:42.3184500Z             self.line_interaction_type,
2025-01-14T13:16:42.3184800Z         )
2025-01-14T13:16:42.3185120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3185540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3185990Z         ]
2025-01-14T13:16:42.3186370Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3186730Z 
2025-01-14T13:16:42.3186910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3187310Z __________ ERROR at setup of TestModelFromPaper1Config.test_densities __________
2025-01-14T13:16:42.3187580Z 
2025-01-14T13:16:42.3188170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3189110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3189510Z 
2025-01-14T13:16:42.3190100Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3190380Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3190720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3191010Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3191320Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3191510Z >       sim.run_final()
2025-01-14T13:16:42.3191610Z 
2025-01-14T13:16:42.3191670Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3191860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3192090Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3192350Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3192600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3192860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3193150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3193310Z 
2025-01-14T13:16:42.3193520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3193960Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3194370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3194850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3195270Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3195570Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3195750Z 
2025-01-14T13:16:42.3195810Z     def initialize_transport_state(
2025-01-14T13:16:42.3195980Z         self,
2025-01-14T13:16:42.3196110Z         simulation_state,
2025-01-14T13:16:42.3196480Z         opacity_state,
2025-01-14T13:16:42.3196630Z         macro_atom_state,
2025-01-14T13:16:42.3196780Z         plasma,
2025-01-14T13:16:42.3196900Z         no_of_packets,
2025-01-14T13:16:42.3197060Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3197220Z         iteration=0,
2025-01-14T13:16:42.3197350Z     ):
2025-01-14T13:16:42.3197510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3197750Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3197930Z         else:
2025-01-14T13:16:42.3198060Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3198220Z     
2025-01-14T13:16:42.3198380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3198640Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3198820Z         )
2025-01-14T13:16:42.3198930Z     
2025-01-14T13:16:42.3199090Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3199360Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3199630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3199870Z         else:
2025-01-14T13:16:42.3200000Z             continuum_state = None
2025-01-14T13:16:42.3200190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3200420Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3200640Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3200850Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3201070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3201300Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3201510Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3201690Z         ).to_numba(
2025-01-14T13:16:42.3201820Z             macro_atom_state,
2025-01-14T13:16:42.3201990Z             self.line_interaction_type,
2025-01-14T13:16:42.3202160Z         )
2025-01-14T13:16:42.3202300Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3202840Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3203190Z         ]
2025-01-14T13:16:42.3203510Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3203820Z 
2025-01-14T13:16:42.3203940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3205160Z _______ ERROR at setup of TestModelFromPaper1Config.test_time_explosion ________
2025-01-14T13:16:42.3205800Z 
2025-01-14T13:16:42.3207290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3211830Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3212240Z 
2025-01-14T13:16:42.3212310Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3212570Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3212850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3213140Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3213420Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3213610Z >       sim.run_final()
2025-01-14T13:16:42.3213710Z 
2025-01-14T13:16:42.3213770Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3213970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3214210Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3214470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3214720Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3217450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3217750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3217910Z 
2025-01-14T13:16:42.3218120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3218570Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3218970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3219440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3219850Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3220160Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3220330Z 
2025-01-14T13:16:42.3220400Z     def initialize_transport_state(
2025-01-14T13:16:42.3220570Z         self,
2025-01-14T13:16:42.3220710Z         simulation_state,
2025-01-14T13:16:42.3220870Z         opacity_state,
2025-01-14T13:16:42.3221020Z         macro_atom_state,
2025-01-14T13:16:42.3221170Z         plasma,
2025-01-14T13:16:42.3221290Z         no_of_packets,
2025-01-14T13:16:42.3221450Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3221620Z         iteration=0,
2025-01-14T13:16:42.3221750Z     ):
2025-01-14T13:16:42.3224790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3225030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3225220Z         else:
2025-01-14T13:16:42.3225350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3225510Z     
2025-01-14T13:16:42.3225680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3225920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3226110Z         )
2025-01-14T13:16:42.3226220Z     
2025-01-14T13:16:42.3226380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3227010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3227310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3227550Z         else:
2025-01-14T13:16:42.3227690Z             continuum_state = None
2025-01-14T13:16:42.3227890Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3228120Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3228340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3228560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3228790Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3229000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3229210Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3229400Z         ).to_numba(
2025-01-14T13:16:42.3229530Z             macro_atom_state,
2025-01-14T13:16:42.3229700Z             self.line_interaction_type,
2025-01-14T13:16:42.3229880Z         )
2025-01-14T13:16:42.3230030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3230410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3230750Z         ]
2025-01-14T13:16:42.3231060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3231370Z 
2025-01-14T13:16:42.3231490Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3231870Z _________ ERROR at setup of TestModelFromASCIIDensity.test_velocities __________
2025-01-14T13:16:42.3232100Z 
2025-01-14T13:16:42.3232620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3233690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3234050Z 
2025-01-14T13:16:42.3234110Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3234370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3234640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3234920Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3235190Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3235370Z >       sim.run_final()
2025-01-14T13:16:42.3235670Z 
2025-01-14T13:16:42.3235730Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3236070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3236640Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3237090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3237500Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3238010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3240150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3240800Z 
2025-01-14T13:16:42.3241370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3243210Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3243770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3244310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3244860Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3245240Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3245490Z 
2025-01-14T13:16:42.3245610Z     def initialize_transport_state(
2025-01-14T13:16:42.3245860Z         self,
2025-01-14T13:16:42.3246060Z         simulation_state,
2025-01-14T13:16:42.3247250Z         opacity_state,
2025-01-14T13:16:42.3247580Z         macro_atom_state,
2025-01-14T13:16:42.3247830Z         plasma,
2025-01-14T13:16:42.3248090Z         no_of_packets,
2025-01-14T13:16:42.3248320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3248640Z         iteration=0,
2025-01-14T13:16:42.3248820Z     ):
2025-01-14T13:16:42.3249110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3249420Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3249730Z         else:
2025-01-14T13:16:42.3250500Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3251480Z     
2025-01-14T13:16:42.3252260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3253450Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3254270Z         )
2025-01-14T13:16:42.3255080Z     
2025-01-14T13:16:42.3256030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3256990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3257940Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3272890Z         else:
2025-01-14T13:16:42.3273060Z             continuum_state = None
2025-01-14T13:16:42.3273380Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3273650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3273880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3274110Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3274330Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3274560Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3274770Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3274950Z         ).to_numba(
2025-01-14T13:16:42.3275100Z             macro_atom_state,
2025-01-14T13:16:42.3276540Z             self.line_interaction_type,
2025-01-14T13:16:42.3276750Z         )
2025-01-14T13:16:42.3276920Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3277300Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3277760Z         ]
2025-01-14T13:16:42.3278080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3278400Z 
2025-01-14T13:16:42.3278520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3278870Z _________ ERROR at setup of TestModelFromASCIIDensity.test_abundances __________
2025-01-14T13:16:42.3279090Z 
2025-01-14T13:16:42.3279620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3280530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3280880Z 
2025-01-14T13:16:42.3280960Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3281220Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3281510Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3281810Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3282210Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3282410Z >       sim.run_final()
2025-01-14T13:16:42.3282510Z 
2025-01-14T13:16:42.3282570Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3282760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3283000Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3283260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3283520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3284120Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3284420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3284580Z 
2025-01-14T13:16:42.3284800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3285240Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3285640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3286110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3286520Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3286830Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3287010Z 
2025-01-14T13:16:42.3287080Z     def initialize_transport_state(
2025-01-14T13:16:42.3287260Z         self,
2025-01-14T13:16:42.3287390Z         simulation_state,
2025-01-14T13:16:42.3287570Z         opacity_state,
2025-01-14T13:16:42.3287720Z         macro_atom_state,
2025-01-14T13:16:42.3287860Z         plasma,
2025-01-14T13:16:42.3287990Z         no_of_packets,
2025-01-14T13:16:42.3288150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3288320Z         iteration=0,
2025-01-14T13:16:42.3288450Z     ):
2025-01-14T13:16:42.3288620Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3288860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3289050Z         else:
2025-01-14T13:16:42.3289180Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3289340Z     
2025-01-14T13:16:42.3289510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3289750Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3289940Z         )
2025-01-14T13:16:42.3290170Z     
2025-01-14T13:16:42.3290370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3290620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3290900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3291140Z         else:
2025-01-14T13:16:42.3291270Z             continuum_state = None
2025-01-14T13:16:42.3291470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3291700Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3291920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3293090Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3293800Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3294400Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3295250Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3296020Z         ).to_numba(
2025-01-14T13:16:42.3296540Z             macro_atom_state,
2025-01-14T13:16:42.3297060Z             self.line_interaction_type,
2025-01-14T13:16:42.3297820Z         )
2025-01-14T13:16:42.3298290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3299360Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3300500Z         ]
2025-01-14T13:16:42.3301340Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3301670Z 
2025-01-14T13:16:42.3301800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3302140Z _________ ERROR at setup of TestModelFromArtisDensity.test_velocities __________
2025-01-14T13:16:42.3302370Z 
2025-01-14T13:16:42.3302920Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3304390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3304770Z 
2025-01-14T13:16:42.3304840Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3305110Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3305400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3305680Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3306150Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3306330Z >       sim.run_final()
2025-01-14T13:16:42.3306430Z 
2025-01-14T13:16:42.3306490Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3306690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3306950Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3307240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3307500Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3307760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3308050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3308200Z 
2025-01-14T13:16:42.3308440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3308920Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3310650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3311200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3311650Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3311980Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3312900Z 
2025-01-14T13:16:42.3313120Z     def initialize_transport_state(
2025-01-14T13:16:42.3313670Z         self,
2025-01-14T13:16:42.3314070Z         simulation_state,
2025-01-14T13:16:42.3314520Z         opacity_state,
2025-01-14T13:16:42.3315600Z         macro_atom_state,
2025-01-14T13:16:42.3316540Z         plasma,
2025-01-14T13:16:42.3316940Z         no_of_packets,
2025-01-14T13:16:42.3317530Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3318080Z         iteration=0,
2025-01-14T13:16:42.3318520Z     ):
2025-01-14T13:16:42.3319060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3319810Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3320410Z         else:
2025-01-14T13:16:42.3321250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3322510Z     
2025-01-14T13:16:42.3322700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3323290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3323740Z         )
2025-01-14T13:16:42.3323850Z     
2025-01-14T13:16:42.3324050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3324470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3325120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3325360Z         else:
2025-01-14T13:16:42.3325500Z             continuum_state = None
2025-01-14T13:16:42.3325740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3325990Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3326210Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3326550Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3326840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3327090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3327970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3328640Z         ).to_numba(
2025-01-14T13:16:42.3329140Z             macro_atom_state,
2025-01-14T13:16:42.3330460Z             self.line_interaction_type,
2025-01-14T13:16:42.3330930Z         )
2025-01-14T13:16:42.3331130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3331560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3332140Z         ]
2025-01-14T13:16:42.3332600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3333030Z 
2025-01-14T13:16:42.3333200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3333630Z _________ ERROR at setup of TestModelFromArtisDensity.test_abundances __________
2025-01-14T13:16:42.3333870Z 
2025-01-14T13:16:42.3334810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3337170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3338540Z 
2025-01-14T13:16:42.3338880Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3339900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3341630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3341980Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3342260Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3342480Z >       sim.run_final()
2025-01-14T13:16:42.3342670Z 
2025-01-14T13:16:42.3343130Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3344260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3344510Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3345080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3345370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3345870Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3346770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3347270Z 
2025-01-14T13:16:42.3348060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3348560Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3349160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3350040Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3350590Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3350980Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3351250Z 
2025-01-14T13:16:42.3351320Z     def initialize_transport_state(
2025-01-14T13:16:42.3351520Z         self,
2025-01-14T13:16:42.3351650Z         simulation_state,
2025-01-14T13:16:42.3351830Z         opacity_state,
2025-01-14T13:16:42.3351990Z         macro_atom_state,
2025-01-14T13:16:42.3352140Z         plasma,
2025-01-14T13:16:42.3352270Z         no_of_packets,
2025-01-14T13:16:42.3353640Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3353840Z         iteration=0,
2025-01-14T13:16:42.3353980Z     ):
2025-01-14T13:16:42.3354150Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3354420Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3355430Z         else:
2025-01-14T13:16:42.3355600Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3355780Z     
2025-01-14T13:16:42.3355960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3357220Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3357420Z         )
2025-01-14T13:16:42.3358420Z     
2025-01-14T13:16:42.3358620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3358900Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3359190Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3359440Z         else:
2025-01-14T13:16:42.3359580Z             continuum_state = None
2025-01-14T13:16:42.3359790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3360910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3361170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3363230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3363470Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3363710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3363940Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3364140Z         ).to_numba(
2025-01-14T13:16:42.3364300Z             macro_atom_state,
2025-01-14T13:16:42.3364480Z             self.line_interaction_type,
2025-01-14T13:16:42.3364670Z         )
2025-01-14T13:16:42.3364820Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3365230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3365630Z         ]
2025-01-14T13:16:42.3365990Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3366810Z 
2025-01-14T13:16:42.3366940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3367330Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_velocities _____
2025-01-14T13:16:42.3367590Z 
2025-01-14T13:16:42.3368150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3373220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3377210Z 
2025-01-14T13:16:42.3377290Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3378920Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3379330Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3379760Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3380940Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3381280Z >       sim.run_final()
2025-01-14T13:16:42.3382260Z 
2025-01-14T13:16:42.3382450Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3384020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3384530Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3384900Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3385730Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3386190Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3387240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3388330Z 
2025-01-14T13:16:42.3388950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3390470Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3392110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3392930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3397140Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3398810Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3405580Z 
2025-01-14T13:16:42.3406180Z     def initialize_transport_state(
2025-01-14T13:16:42.3407540Z         self,
2025-01-14T13:16:42.3408110Z         simulation_state,
2025-01-14T13:16:42.3440950Z         opacity_state,
2025-01-14T13:16:42.3441230Z         macro_atom_state,
2025-01-14T13:16:42.3441380Z         plasma,
2025-01-14T13:16:42.3441520Z         no_of_packets,
2025-01-14T13:16:42.3441680Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3441850Z         iteration=0,
2025-01-14T13:16:42.3441980Z     ):
2025-01-14T13:16:42.3442140Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3443200Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3443440Z         else:
2025-01-14T13:16:42.3443590Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3443780Z     
2025-01-14T13:16:42.3443950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3444250Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3444440Z         )
2025-01-14T13:16:42.3444560Z     
2025-01-14T13:16:42.3444720Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3444980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3445270Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3445520Z         else:
2025-01-14T13:16:42.3445670Z             continuum_state = None
2025-01-14T13:16:42.3446770Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3447040Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3447320Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3447690Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3448040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3448280Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3448930Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3449350Z         ).to_numba(
2025-01-14T13:16:42.3449600Z             macro_atom_state,
2025-01-14T13:16:42.3449790Z             self.line_interaction_type,
2025-01-14T13:16:42.3450020Z         )
2025-01-14T13:16:42.3450270Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3450700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3451260Z         ]
2025-01-14T13:16:42.3451630Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3451990Z 
2025-01-14T13:16:42.3452120Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3452500Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_abundances _____
2025-01-14T13:16:42.3452780Z 
2025-01-14T13:16:42.3453370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3454330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3454690Z 
2025-01-14T13:16:42.3454770Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3455040Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3455340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3455640Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3455920Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3456100Z >       sim.run_final()
2025-01-14T13:16:42.3456200Z 
2025-01-14T13:16:42.3456260Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3456460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3457200Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3457520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3457780Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3458050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3458330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3458500Z 
2025-01-14T13:16:42.3458720Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3459180Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3462050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3463600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3464720Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3465400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3466550Z 
2025-01-14T13:16:42.3466870Z     def initialize_transport_state(
2025-01-14T13:16:42.3467080Z         self,
2025-01-14T13:16:42.3467220Z         simulation_state,
2025-01-14T13:16:42.3467390Z         opacity_state,
2025-01-14T13:16:42.3467540Z         macro_atom_state,
2025-01-14T13:16:42.3467700Z         plasma,
2025-01-14T13:16:42.3467830Z         no_of_packets,
2025-01-14T13:16:42.3467990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3468160Z         iteration=0,
2025-01-14T13:16:42.3468290Z     ):
2025-01-14T13:16:42.3468460Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3468700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3469770Z         else:
2025-01-14T13:16:42.3469930Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3470110Z     
2025-01-14T13:16:42.3470300Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3470790Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3471080Z         )
2025-01-14T13:16:42.3471200Z     
2025-01-14T13:16:42.3471380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3471650Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3472580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3473440Z         else:
2025-01-14T13:16:42.3473710Z             continuum_state = None
2025-01-14T13:16:42.3473920Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3474170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3474410Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3474800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3475050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3477090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3477680Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3478260Z         ).to_numba(
2025-01-14T13:16:42.3479040Z             macro_atom_state,
2025-01-14T13:16:42.3480350Z             self.line_interaction_type,
2025-01-14T13:16:42.3480570Z         )
2025-01-14T13:16:42.3481710Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3483910Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3485730Z         ]
2025-01-14T13:16:42.3486060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3486400Z 
2025-01-14T13:16:42.3486780Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3487450Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_velocities __
2025-01-14T13:16:42.3489010Z 
2025-01-14T13:16:42.3490020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3491540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3491890Z 
2025-01-14T13:16:42.3491960Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3492220Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3492610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3493110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3493400Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3493580Z >       sim.run_final()
2025-01-14T13:16:42.3493680Z 
2025-01-14T13:16:42.3493740Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3493950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3494180Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3494440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3494810Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3496860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3497520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3497690Z 
2025-01-14T13:16:42.3497900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3498360Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3498960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3499440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3500310Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3500680Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3501300Z 
2025-01-14T13:16:42.3501590Z     def initialize_transport_state(
2025-01-14T13:16:42.3502200Z         self,
2025-01-14T13:16:42.3503270Z         simulation_state,
2025-01-14T13:16:42.3503780Z         opacity_state,
2025-01-14T13:16:42.3504420Z         macro_atom_state,
2025-01-14T13:16:42.3504570Z         plasma,
2025-01-14T13:16:42.3505300Z         no_of_packets,
2025-01-14T13:16:42.3505500Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3506500Z         iteration=0,
2025-01-14T13:16:42.3506660Z     ):
2025-01-14T13:16:42.3507250Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3507520Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3508610Z         else:
2025-01-14T13:16:42.3508770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3508950Z     
2025-01-14T13:16:42.3509130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3509400Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3509590Z         )
2025-01-14T13:16:42.3509720Z     
2025-01-14T13:16:42.3509900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3510190Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3510600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3510860Z         else:
2025-01-14T13:16:42.3511010Z             continuum_state = None
2025-01-14T13:16:42.3511210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3511760Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3512030Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3512260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3512510Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3512740Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3513700Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3513920Z         ).to_numba(
2025-01-14T13:16:42.3514240Z             macro_atom_state,
2025-01-14T13:16:42.3514450Z             self.line_interaction_type,
2025-01-14T13:16:42.3514630Z         )
2025-01-14T13:16:42.3514780Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3516350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3517310Z         ]
2025-01-14T13:16:42.3518230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3518770Z 
2025-01-14T13:16:42.3518900Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3519900Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_abundances __
2025-01-14T13:16:42.3520320Z 
2025-01-14T13:16:42.3520890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3522190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3522570Z 
2025-01-14T13:16:42.3523440Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3525290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3525610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3525900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3526980Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3527880Z >       sim.run_final()
2025-01-14T13:16:42.3528360Z 
2025-01-14T13:16:42.3528470Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3531800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3532190Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3532480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3532900Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3533440Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3533740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3533900Z 
2025-01-14T13:16:42.3534130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3534590Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3535490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3536010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3536440Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3538200Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3539440Z 
2025-01-14T13:16:42.3539520Z     def initialize_transport_state(
2025-01-14T13:16:42.3539690Z         self,
2025-01-14T13:16:42.3539820Z         simulation_state,
2025-01-14T13:16:42.3539970Z         opacity_state,
2025-01-14T13:16:42.3540970Z         macro_atom_state,
2025-01-14T13:16:42.3541520Z         plasma,
2025-01-14T13:16:42.3541910Z         no_of_packets,
2025-01-14T13:16:42.3542390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3542930Z         iteration=0,
2025-01-14T13:16:42.3543390Z     ):
2025-01-14T13:16:42.3543880Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3544550Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3545070Z         else:
2025-01-14T13:16:42.3545470Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3545980Z     
2025-01-14T13:16:42.3547180Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3548110Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3549510Z         )
2025-01-14T13:16:42.3549710Z     
2025-01-14T13:16:42.3549880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3550790Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3551090Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3551330Z         else:
2025-01-14T13:16:42.3551480Z             continuum_state = None
2025-01-14T13:16:42.3551710Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3553450Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3553690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3553910Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3555180Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3555890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3556540Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3557310Z         ).to_numba(
2025-01-14T13:16:42.3557470Z             macro_atom_state,
2025-01-14T13:16:42.3557910Z             self.line_interaction_type,
2025-01-14T13:16:42.3558090Z         )
2025-01-14T13:16:42.3558240Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3560680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3562220Z         ]
2025-01-14T13:16:42.3563130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3564370Z 
2025-01-14T13:16:42.3565200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3567880Z __________ ERROR at setup of TestModelFromUniformDensity.test_density __________
2025-01-14T13:16:42.3569880Z 
2025-01-14T13:16:42.3574060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3575770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3579000Z 
2025-01-14T13:16:42.3579790Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3580300Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3581030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3581460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3581950Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3583280Z >       sim.run_final()
2025-01-14T13:16:42.3586220Z 
2025-01-14T13:16:42.3588990Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3632340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3632700Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3632970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3633230Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3633490Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3633790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3634000Z 
2025-01-14T13:16:42.3634240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3634710Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3635140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3635610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3636500Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3636820Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3637000Z 
2025-01-14T13:16:42.3637070Z     def initialize_transport_state(
2025-01-14T13:16:42.3637240Z         self,
2025-01-14T13:16:42.3637370Z         simulation_state,
2025-01-14T13:16:42.3637530Z         opacity_state,
2025-01-14T13:16:42.3637670Z         macro_atom_state,
2025-01-14T13:16:42.3637820Z         plasma,
2025-01-14T13:16:42.3637950Z         no_of_packets,
2025-01-14T13:16:42.3638100Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3638270Z         iteration=0,
2025-01-14T13:16:42.3638400Z     ):
2025-01-14T13:16:42.3638580Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3638830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3639010Z         else:
2025-01-14T13:16:42.3639150Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3639300Z     
2025-01-14T13:16:42.3639470Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3639720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3639900Z         )
2025-01-14T13:16:42.3640010Z     
2025-01-14T13:16:42.3640170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3640430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3640730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3640990Z         else:
2025-01-14T13:16:42.3641120Z             continuum_state = None
2025-01-14T13:16:42.3641320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3641550Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3641770Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3641980Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3642370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3642590Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3642810Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3643000Z         ).to_numba(
2025-01-14T13:16:42.3643130Z             macro_atom_state,
2025-01-14T13:16:42.3643310Z             self.line_interaction_type,
2025-01-14T13:16:42.3643520Z         )
2025-01-14T13:16:42.3643670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3644050Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3644420Z         ]
2025-01-14T13:16:42.3644730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3645040Z 
2025-01-14T13:16:42.3645160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3645530Z ____ ERROR at setup of TestModelFromInitialTinner.test_initial_temperature _____
2025-01-14T13:16:42.3645800Z 
2025-01-14T13:16:42.3646330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3647240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3647620Z 
2025-01-14T13:16:42.3647690Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3647950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3648240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3648530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3648830Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3649030Z >       sim.run_final()
2025-01-14T13:16:42.3649140Z 
2025-01-14T13:16:42.3649200Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3649510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3649780Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3650040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3650290Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3650570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3650870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3651040Z 
2025-01-14T13:16:42.3651260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3651700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3652100Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3652600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3653040Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3653340Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3653520Z 
2025-01-14T13:16:42.3653590Z     def initialize_transport_state(
2025-01-14T13:16:42.3653760Z         self,
2025-01-14T13:16:42.3653890Z         simulation_state,
2025-01-14T13:16:42.3654060Z         opacity_state,
2025-01-14T13:16:42.3654200Z         macro_atom_state,
2025-01-14T13:16:42.3654350Z         plasma,
2025-01-14T13:16:42.3654470Z         no_of_packets,
2025-01-14T13:16:42.3654620Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3654840Z         iteration=0,
2025-01-14T13:16:42.3654980Z     ):
2025-01-14T13:16:42.3655180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3655450Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3655760Z         else:
2025-01-14T13:16:42.3655910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3656110Z     
2025-01-14T13:16:42.3656280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3656580Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3656800Z         )
2025-01-14T13:16:42.3656930Z     
2025-01-14T13:16:42.3657120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3657410Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3657740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3658140Z         else:
2025-01-14T13:16:42.3658300Z             continuum_state = None
2025-01-14T13:16:42.3658530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3658800Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3659020Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3659310Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3659580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3659840Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3660110Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3660340Z         ).to_numba(
2025-01-14T13:16:42.3660510Z             macro_atom_state,
2025-01-14T13:16:42.3660720Z             self.line_interaction_type,
2025-01-14T13:16:42.3660950Z         )
2025-01-14T13:16:42.3661110Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3661510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3661890Z         ]
2025-01-14T13:16:42.3662240Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3662590Z 
2025-01-14T13:16:42.3662740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3663640Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_velocities _
2025-01-14T13:16:42.3663970Z 
2025-01-14T13:16:42.3664530Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3665500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3665880Z 
2025-01-14T13:16:42.3665940Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3666230Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3666530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3666810Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3667110Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3667320Z >       sim.run_final()
2025-01-14T13:16:42.3667450Z 
2025-01-14T13:16:42.3667520Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3667740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3667990Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3668260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3668560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3668840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3669150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3669310Z 
2025-01-14T13:16:42.3669550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3670070Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3670540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3671430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3671860Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3672310Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3672520Z 
2025-01-14T13:16:42.3672590Z     def initialize_transport_state(
2025-01-14T13:16:42.3672830Z         self,
2025-01-14T13:16:42.3673020Z         simulation_state,
2025-01-14T13:16:42.3673230Z         opacity_state,
2025-01-14T13:16:42.3673450Z         macro_atom_state,
2025-01-14T13:16:42.3673630Z         plasma,
2025-01-14T13:16:42.3673750Z         no_of_packets,
2025-01-14T13:16:42.3673910Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3674080Z         iteration=0,
2025-01-14T13:16:42.3674210Z     ):
2025-01-14T13:16:42.3674380Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3674660Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3674880Z         else:
2025-01-14T13:16:42.3675020Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3675180Z     
2025-01-14T13:16:42.3675380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3675660Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3675870Z         )
2025-01-14T13:16:42.3676010Z     
2025-01-14T13:16:42.3676180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3676440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3676740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3677010Z         else:
2025-01-14T13:16:42.3677150Z             continuum_state = None
2025-01-14T13:16:42.3677360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3678770Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3679570Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3680270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3681840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3682490Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3683080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3683620Z         ).to_numba(
2025-01-14T13:16:42.3684060Z             macro_atom_state,
2025-01-14T13:16:42.3684630Z             self.line_interaction_type,
2025-01-14T13:16:42.3685200Z         )
2025-01-14T13:16:42.3685630Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3687270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3688300Z         ]
2025-01-14T13:16:42.3688950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3689290Z 
2025-01-14T13:16:42.3689410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3689810Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_abundances _
2025-01-14T13:16:42.3690080Z 
2025-01-14T13:16:42.3690610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3691510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3691860Z 
2025-01-14T13:16:42.3691920Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3692200Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3692480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3692790Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3693420Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3693640Z >       sim.run_final()
2025-01-14T13:16:42.3693750Z 
2025-01-14T13:16:42.3693810Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3694000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3694230Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3694510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3694770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3695070Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3695350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3695530Z 
2025-01-14T13:16:42.3695750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3696200Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3696640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3697120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3697540Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3697840Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3698030Z 
2025-01-14T13:16:42.3698100Z     def initialize_transport_state(
2025-01-14T13:16:42.3698280Z         self,
2025-01-14T13:16:42.3698420Z         simulation_state,
2025-01-14T13:16:42.3698580Z         opacity_state,
2025-01-14T13:16:42.3698730Z         macro_atom_state,
2025-01-14T13:16:42.3698880Z         plasma,
2025-01-14T13:16:42.3699000Z         no_of_packets,
2025-01-14T13:16:42.3699160Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3699330Z         iteration=0,
2025-01-14T13:16:42.3699470Z     ):
2025-01-14T13:16:42.3699650Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3699890Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3700230Z         else:
2025-01-14T13:16:42.3700370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3700530Z     
2025-01-14T13:16:42.3700700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3700940Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3701130Z         )
2025-01-14T13:16:42.3701240Z     
2025-01-14T13:16:42.3701740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3702120Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3702560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3702880Z         else:
2025-01-14T13:16:42.3703160Z             continuum_state = None
2025-01-14T13:16:42.3703430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3703880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3704250Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3704550Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3704950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3705280Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3705670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3705990Z         ).to_numba(
2025-01-14T13:16:42.3706270Z             macro_atom_state,
2025-01-14T13:16:42.3706610Z             self.line_interaction_type,
2025-01-14T13:16:42.3706920Z         )
2025-01-14T13:16:42.3707130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3707670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3722220Z         ]
2025-01-14T13:16:42.3722710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3723450Z 
2025-01-14T13:16:42.3723580Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3723970Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_densities _
2025-01-14T13:16:42.3724240Z 
2025-01-14T13:16:42.3724780Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3725670Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3726020Z 
2025-01-14T13:16:42.3726100Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3726350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3726620Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3726920Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3727200Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3727390Z >       sim.run_final()
2025-01-14T13:16:42.3727490Z 
2025-01-14T13:16:42.3727550Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3727740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3727970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3728220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3728460Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3728730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3729010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3729160Z 
2025-01-14T13:16:42.3729370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3729820Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3730380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3730860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3731280Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3731590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3731770Z 
2025-01-14T13:16:42.3731830Z     def initialize_transport_state(
2025-01-14T13:16:42.3732000Z         self,
2025-01-14T13:16:42.3732060Z         simulation_state,
2025-01-14T13:16:42.3732110Z         opacity_state,
2025-01-14T13:16:42.3732160Z         macro_atom_state,
2025-01-14T13:16:42.3732210Z         plasma,
2025-01-14T13:16:42.3732250Z         no_of_packets,
2025-01-14T13:16:42.3732310Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3732360Z         iteration=0,
2025-01-14T13:16:42.3732400Z     ):
2025-01-14T13:16:42.3732500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3732590Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3732640Z         else:
2025-01-14T13:16:42.3732700Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3732750Z     
2025-01-14T13:16:42.3732860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3732930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3732980Z         )
2025-01-14T13:16:42.3733030Z     
2025-01-14T13:16:42.3733130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3733230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3733350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3733400Z         else:
2025-01-14T13:16:42.3733450Z             continuum_state = None
2025-01-14T13:16:42.3733530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3733610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3733730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3733820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3733900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3733960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3734030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3734080Z         ).to_numba(
2025-01-14T13:16:42.3734130Z             macro_atom_state,
2025-01-14T13:16:42.3734190Z             self.line_interaction_type,
2025-01-14T13:16:42.3734240Z         )
2025-01-14T13:16:42.3734310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3734540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3734580Z         ]
2025-01-14T13:16:42.3734830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3734830Z 
2025-01-14T13:16:42.3734950Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3735080Z ________________ ERROR at setup of test_ascii_reader_power_law _________________
2025-01-14T13:16:42.3735090Z 
2025-01-14T13:16:42.3735610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3735900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3735900Z 
2025-01-14T13:16:42.3735970Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3736090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3736160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3736320Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3736670Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3736750Z >       sim.run_final()
2025-01-14T13:16:42.3736750Z 
2025-01-14T13:16:42.3736880Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3737010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3737090Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3737200Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3737270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3737390Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3737480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3737480Z 
2025-01-14T13:16:42.3737690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3737850Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3738040Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3738250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3738370Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3738480Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3738480Z 
2025-01-14T13:16:42.3738550Z     def initialize_transport_state(
2025-01-14T13:16:42.3738600Z         self,
2025-01-14T13:16:42.3738650Z         simulation_state,
2025-01-14T13:16:42.3738700Z         opacity_state,
2025-01-14T13:16:42.3738760Z         macro_atom_state,
2025-01-14T13:16:42.3738810Z         plasma,
2025-01-14T13:16:42.3738860Z         no_of_packets,
2025-01-14T13:16:42.3738920Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3738970Z         iteration=0,
2025-01-14T13:16:42.3739600Z     ):
2025-01-14T13:16:42.3739700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3739790Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3739840Z         else:
2025-01-14T13:16:42.3739890Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3739940Z     
2025-01-14T13:16:42.3740050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3740120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3740160Z         )
2025-01-14T13:16:42.3740210Z     
2025-01-14T13:16:42.3740310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3740400Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3740520Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3740570Z         else:
2025-01-14T13:16:42.3740630Z             continuum_state = None
2025-01-14T13:16:42.3740710Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3740790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3740870Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3740950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3741020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3741090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3741160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3741210Z         ).to_numba(
2025-01-14T13:16:42.3741260Z             macro_atom_state,
2025-01-14T13:16:42.3741320Z             self.line_interaction_type,
2025-01-14T13:16:42.3741370Z         )
2025-01-14T13:16:42.3741440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3742380Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3742440Z         ]
2025-01-14T13:16:42.3742690Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3742700Z 
2025-01-14T13:16:42.3742990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3743130Z _____________ ERROR at setup of test_ascii_reader_exponential_law ______________
2025-01-14T13:16:42.3743130Z 
2025-01-14T13:16:42.3743880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3744180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3744180Z 
2025-01-14T13:16:42.3744250Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3744380Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3745140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3748250Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3748450Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3748610Z >       sim.run_final()
2025-01-14T13:16:42.3748620Z 
2025-01-14T13:16:42.3748790Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3749050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3749270Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3749580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3749790Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3750130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3750380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3750380Z 
2025-01-14T13:16:42.3750950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3751970Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3752660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3753270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3753610Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3753920Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3753930Z 
2025-01-14T13:16:42.3754130Z     def initialize_transport_state(
2025-01-14T13:16:42.3754270Z         self,
2025-01-14T13:16:42.3754450Z         simulation_state,
2025-01-14T13:16:42.3754610Z         opacity_state,
2025-01-14T13:16:42.3754780Z         macro_atom_state,
2025-01-14T13:16:42.3754930Z         plasma,
2025-01-14T13:16:42.3755080Z         no_of_packets,
2025-01-14T13:16:42.3755260Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3755420Z         iteration=0,
2025-01-14T13:16:42.3755560Z     ):
2025-01-14T13:16:42.3755850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3756820Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3757000Z         else:
2025-01-14T13:16:42.3757170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3757310Z     
2025-01-14T13:16:42.3757630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3757830Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3757980Z         )
2025-01-14T13:16:42.3758110Z     
2025-01-14T13:16:42.3758400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3758640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3758980Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3759120Z         else:
2025-01-14T13:16:42.3759300Z             continuum_state = None
2025-01-14T13:16:42.3759520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3760210Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3760420Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3760660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3760890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3761090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3761300Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3761450Z         ).to_numba(
2025-01-14T13:16:42.3761620Z             macro_atom_state,
2025-01-14T13:16:42.3761810Z             self.line_interaction_type,
2025-01-14T13:16:42.3761960Z         )
2025-01-14T13:16:42.3762190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3762800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3763050Z         ]
2025-01-14T13:16:42.3763800Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3763840Z 
2025-01-14T13:16:42.3764160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3764550Z ______ ERROR at setup of test_radial_1D_geometry_volume[0-1.00977478e+45] ______
2025-01-14T13:16:42.3764550Z 
2025-01-14T13:16:42.3765990Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3766770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3766780Z 
2025-01-14T13:16:42.3766990Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3767350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3767980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3768360Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3768550Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3768720Z >       sim.run_final()
2025-01-14T13:16:42.3768730Z 
2025-01-14T13:16:42.3768900Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3769150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3769360Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3769670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3769870Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3770240Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3770490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3770500Z 
2025-01-14T13:16:42.3771080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3771520Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3771990Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3772590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3772910Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3773230Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3773240Z 
2025-01-14T13:16:42.3773420Z     def initialize_transport_state(
2025-01-14T13:16:42.3773580Z         self,
2025-01-14T13:16:42.3773770Z         simulation_state,
2025-01-14T13:16:42.3773940Z         opacity_state,
2025-01-14T13:16:42.3774110Z         macro_atom_state,
2025-01-14T13:16:42.3774280Z         plasma,
2025-01-14T13:16:42.3774430Z         no_of_packets,
2025-01-14T13:16:42.3778110Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3779420Z         iteration=0,
2025-01-14T13:16:42.3779510Z     ):
2025-01-14T13:16:42.3780360Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3780450Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3780500Z         else:
2025-01-14T13:16:42.3780560Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3780610Z     
2025-01-14T13:16:42.3780730Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3780810Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3780850Z         )
2025-01-14T13:16:42.3780900Z     
2025-01-14T13:16:42.3781010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3781100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3781230Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3781280Z         else:
2025-01-14T13:16:42.3781340Z             continuum_state = None
2025-01-14T13:16:42.3781430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3781520Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3781590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3781680Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3781760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3781830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3781900Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3781950Z         ).to_numba(
2025-01-14T13:16:42.3782010Z             macro_atom_state,
2025-01-14T13:16:42.3782070Z             self.line_interaction_type,
2025-01-14T13:16:42.3782120Z         )
2025-01-14T13:16:42.3782200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3782440Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3782490Z         ]
2025-01-14T13:16:42.3782890Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3782900Z 
2025-01-14T13:16:42.3783020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3783160Z _____ ERROR at setup of test_radial_1D_geometry_volume[10-1.98154804e+45] ______
2025-01-14T13:16:42.3783170Z 
2025-01-14T13:16:42.3783690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3783980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3783980Z 
2025-01-14T13:16:42.3784050Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3784170Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3784250Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3784400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3784470Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3784520Z >       sim.run_final()
2025-01-14T13:16:42.3784520Z 
2025-01-14T13:16:42.3784580Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3784690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3784770Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3784880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3784960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3785080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3785170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3785180Z 
2025-01-14T13:16:42.3785540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3786110Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3786310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3786530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3786660Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3786760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3786770Z 
2025-01-14T13:16:42.3786840Z     def initialize_transport_state(
2025-01-14T13:16:42.3786880Z         self,
2025-01-14T13:16:42.3786940Z         simulation_state,
2025-01-14T13:16:42.3787000Z         opacity_state,
2025-01-14T13:16:42.3787050Z         macro_atom_state,
2025-01-14T13:16:42.3787100Z         plasma,
2025-01-14T13:16:42.3787150Z         no_of_packets,
2025-01-14T13:16:42.3787210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3787260Z         iteration=0,
2025-01-14T13:16:42.3787310Z     ):
2025-01-14T13:16:42.3787420Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3787490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3787540Z         else:
2025-01-14T13:16:42.3787590Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3787630Z     
2025-01-14T13:16:42.3787740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3787810Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3787860Z         )
2025-01-14T13:16:42.3787900Z     
2025-01-14T13:16:42.3788010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3788100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3788230Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3788280Z         else:
2025-01-14T13:16:42.3788620Z             continuum_state = None
2025-01-14T13:16:42.3788700Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3788790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3788860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3788940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3789020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3789090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3789160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3789210Z         ).to_numba(
2025-01-14T13:16:42.3789270Z             macro_atom_state,
2025-01-14T13:16:42.3789330Z             self.line_interaction_type,
2025-01-14T13:16:42.3789380Z         )
2025-01-14T13:16:42.3789450Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3789680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3789730Z         ]
2025-01-14T13:16:42.3789990Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3789990Z 
2025-01-14T13:16:42.3790110Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3790250Z _____ ERROR at setup of test_radial_1D_geometry_volume[19-3.13361319e+45] ______
2025-01-14T13:16:42.3790250Z 
2025-01-14T13:16:42.3790790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3791100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3791100Z 
2025-01-14T13:16:42.3791170Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3791300Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3791460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3791610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3791680Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3791730Z >       sim.run_final()
2025-01-14T13:16:42.3791730Z 
2025-01-14T13:16:42.3791790Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3791880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3791960Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3792070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3792150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3792270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3792360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3792360Z 
2025-01-14T13:16:42.3792670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3792850Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3793030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3793250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3793370Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3793480Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3793480Z 
2025-01-14T13:16:42.3793550Z     def initialize_transport_state(
2025-01-14T13:16:42.3793590Z         self,
2025-01-14T13:16:42.3793660Z         simulation_state,
2025-01-14T13:16:42.3793710Z         opacity_state,
2025-01-14T13:16:42.3793770Z         macro_atom_state,
2025-01-14T13:16:42.3793810Z         plasma,
2025-01-14T13:16:42.3793960Z         no_of_packets,
2025-01-14T13:16:42.3794020Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3794080Z         iteration=0,
2025-01-14T13:16:42.3794120Z     ):
2025-01-14T13:16:42.3794220Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3794300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3794350Z         else:
2025-01-14T13:16:42.3794400Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3794450Z     
2025-01-14T13:16:42.3794550Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3794620Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3794680Z         )
2025-01-14T13:16:42.3794720Z     
2025-01-14T13:16:42.3794830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3794920Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3795040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3795090Z         else:
2025-01-14T13:16:42.3795160Z             continuum_state = None
2025-01-14T13:16:42.3795240Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3795320Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3795390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3795490Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3795560Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3795630Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3795700Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3795750Z         ).to_numba(
2025-01-14T13:16:42.3795810Z             macro_atom_state,
2025-01-14T13:16:42.3795870Z             self.line_interaction_type,
2025-01-14T13:16:42.3795930Z         )
2025-01-14T13:16:42.3796000Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3796250Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3796300Z         ]
2025-01-14T13:16:42.3796620Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3796620Z 
2025-01-14T13:16:42.3796740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3796910Z _ ERROR at setup of test_composition_elemental_number_density[index0-539428198] _
2025-01-14T13:16:42.3796910Z 
2025-01-14T13:16:42.3797460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3797750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3797750Z 
2025-01-14T13:16:42.3797820Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3797960Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3798030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3798170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3798240Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3798300Z >       sim.run_final()
2025-01-14T13:16:42.3798300Z 
2025-01-14T13:16:42.3798350Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3798440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3798510Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3798630Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3798700Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3798820Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3798910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3799000Z 
2025-01-14T13:16:42.3799220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3799380Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3799560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3799800Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3799930Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3800040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3800040Z 
2025-01-14T13:16:42.3800100Z     def initialize_transport_state(
2025-01-14T13:16:42.3800150Z         self,
2025-01-14T13:16:42.3800200Z         simulation_state,
2025-01-14T13:16:42.3800260Z         opacity_state,
2025-01-14T13:16:42.3800310Z         macro_atom_state,
2025-01-14T13:16:42.3800360Z         plasma,
2025-01-14T13:16:42.3800410Z         no_of_packets,
2025-01-14T13:16:42.3800480Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3800530Z         iteration=0,
2025-01-14T13:16:42.3800580Z     ):
2025-01-14T13:16:42.3800680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3800750Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3800790Z         else:
2025-01-14T13:16:42.3800850Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3800890Z     
2025-01-14T13:16:42.3800990Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3801070Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3801120Z         )
2025-01-14T13:16:42.3801160Z     
2025-01-14T13:16:42.3801270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3801360Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3801700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3801760Z         else:
2025-01-14T13:16:42.3802050Z             continuum_state = None
2025-01-14T13:16:42.3802240Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3802430Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3802580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3802670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3802840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3803000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3803160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3803210Z         ).to_numba(
2025-01-14T13:16:42.3804080Z             macro_atom_state,
2025-01-14T13:16:42.3804260Z             self.line_interaction_type,
2025-01-14T13:16:42.3804380Z         )
2025-01-14T13:16:42.3804550Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3805100Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3805430Z         ]
2025-01-14T13:16:42.3805810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3805820Z 
2025-01-14T13:16:42.3806090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3806330Z _ ERROR at setup of test_composition_elemental_number_density[index1-409675383] _
2025-01-14T13:16:42.3806330Z 
2025-01-14T13:16:42.3806930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3807220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3807360Z 
2025-01-14T13:16:42.3807490Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3807690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3807820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3807970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3818370Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3818470Z >       sim.run_final()
2025-01-14T13:16:42.3818480Z 
2025-01-14T13:16:42.3818540Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3818640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3818740Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3818860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3818930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3819060Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3819160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3819180Z 
2025-01-14T13:16:42.3819400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3819560Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3819740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3819960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3820090Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3820200Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3820200Z 
2025-01-14T13:16:42.3820270Z     def initialize_transport_state(
2025-01-14T13:16:42.3820320Z         self,
2025-01-14T13:16:42.3820380Z         simulation_state,
2025-01-14T13:16:42.3820430Z         opacity_state,
2025-01-14T13:16:42.3820510Z         macro_atom_state,
2025-01-14T13:16:42.3820560Z         plasma,
2025-01-14T13:16:42.3821220Z         no_of_packets,
2025-01-14T13:16:42.3821310Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3821370Z         iteration=0,
2025-01-14T13:16:42.3821410Z     ):
2025-01-14T13:16:42.3821510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3821580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3821630Z         else:
2025-01-14T13:16:42.3821680Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3821730Z     
2025-01-14T13:16:42.3821840Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3821920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3821960Z         )
2025-01-14T13:16:42.3822010Z     
2025-01-14T13:16:42.3822110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3822200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3822340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3822380Z         else:
2025-01-14T13:16:42.3822450Z             continuum_state = None
2025-01-14T13:16:42.3822530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3822610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3822680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3822760Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3822830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3822910Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3822970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3823020Z         ).to_numba(
2025-01-14T13:16:42.3823080Z             macro_atom_state,
2025-01-14T13:16:42.3823140Z             self.line_interaction_type,
2025-01-14T13:16:42.3823180Z         )
2025-01-14T13:16:42.3823260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3823800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3823850Z         ]
2025-01-14T13:16:42.3824100Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3824110Z 
2025-01-14T13:16:42.3824220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3824390Z _ ERROR at setup of test_composition_elemental_number_density[index2-314387928] _
2025-01-14T13:16:42.3824390Z 
2025-01-14T13:16:42.3824900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3825180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3825190Z 
2025-01-14T13:16:42.3825260Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3825380Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3825460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3825610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3825670Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3825720Z >       sim.run_final()
2025-01-14T13:16:42.3825720Z 
2025-01-14T13:16:42.3825780Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3825880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3825950Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3826070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3826130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3826260Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3826400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3826400Z 
2025-01-14T13:16:42.3826620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3826780Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3826960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3827200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3827330Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3827440Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3827440Z 
2025-01-14T13:16:42.3827510Z     def initialize_transport_state(
2025-01-14T13:16:42.3827560Z         self,
2025-01-14T13:16:42.3827620Z         simulation_state,
2025-01-14T13:16:42.3827700Z         opacity_state,
2025-01-14T13:16:42.3827760Z         macro_atom_state,
2025-01-14T13:16:42.3827810Z         plasma,
2025-01-14T13:16:42.3827860Z         no_of_packets,
2025-01-14T13:16:42.3827930Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3827980Z         iteration=0,
2025-01-14T13:16:42.3828020Z     ):
2025-01-14T13:16:42.3828120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3828190Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3828240Z         else:
2025-01-14T13:16:42.3828300Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3828350Z     
2025-01-14T13:16:42.3828460Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3828540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3828590Z         )
2025-01-14T13:16:42.3828640Z     
2025-01-14T13:16:42.3828750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3828840Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3829080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3829140Z         else:
2025-01-14T13:16:42.3829200Z             continuum_state = None
2025-01-14T13:16:42.3829280Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3829380Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3829450Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3829530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3829600Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3829680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3829740Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3829800Z         ).to_numba(
2025-01-14T13:16:42.3829850Z             macro_atom_state,
2025-01-14T13:16:42.3829910Z             self.line_interaction_type,
2025-01-14T13:16:42.3829960Z         )
2025-01-14T13:16:42.3830030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3830260Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3830320Z         ]
2025-01-14T13:16:42.3830590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3830600Z 
2025-01-14T13:16:42.3830710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3830870Z _ ERROR at setup of test_composition_elemental_number_density[index3-56066111] _
2025-01-14T13:16:42.3830870Z 
2025-01-14T13:16:42.3831400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3831690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3831700Z 
2025-01-14T13:16:42.3831850Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3831980Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3832050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3832200Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3832270Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3832320Z >       sim.run_final()
2025-01-14T13:16:42.3832320Z 
2025-01-14T13:16:42.3832380Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3832460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3832540Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3832650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3832720Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3832840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3832940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3832940Z 
2025-01-14T13:16:42.3833160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3833310Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3833490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3833710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3833830Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3833940Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3833940Z 
2025-01-14T13:16:42.3834010Z     def initialize_transport_state(
2025-01-14T13:16:42.3834050Z         self,
2025-01-14T13:16:42.3834100Z         simulation_state,
2025-01-14T13:16:42.3834220Z         opacity_state,
2025-01-14T13:16:42.3834280Z         macro_atom_state,
2025-01-14T13:16:42.3834330Z         plasma,
2025-01-14T13:16:42.3834370Z         no_of_packets,
2025-01-14T13:16:42.3834430Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3834480Z         iteration=0,
2025-01-14T13:16:42.3834530Z     ):
2025-01-14T13:16:42.3834630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3834700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3834740Z         else:
2025-01-14T13:16:42.3834800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3834840Z     
2025-01-14T13:16:42.3834950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3835020Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3835060Z         )
2025-01-14T13:16:42.3835100Z     
2025-01-14T13:16:42.3835200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3835300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3835420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3835470Z         else:
2025-01-14T13:16:42.3835520Z             continuum_state = None
2025-01-14T13:16:42.3835610Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3835690Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3835760Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3835840Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3835920Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3835990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3836060Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3836100Z         ).to_numba(
2025-01-14T13:16:42.3836160Z             macro_atom_state,
2025-01-14T13:16:42.3836220Z             self.line_interaction_type,
2025-01-14T13:16:42.3836270Z         )
2025-01-14T13:16:42.3836350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3836640Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3836690Z         ]
2025-01-14T13:16:42.3836950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3836950Z 
2025-01-14T13:16:42.3837070Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3837230Z _ ERROR at setup of test_composition_elemental_number_density[index4-42580098] _
2025-01-14T13:16:42.3837230Z 
2025-01-14T13:16:42.3837750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3838040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3838040Z 
2025-01-14T13:16:42.3838110Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3838240Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3838310Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3838450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3838510Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3838560Z >       sim.run_final()
2025-01-14T13:16:42.3838570Z 
2025-01-14T13:16:42.3838620Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3838710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3838780Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3838890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3838970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3839140Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3839230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3839230Z 
2025-01-14T13:16:42.3839440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3839600Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3839780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3840010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3840130Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3840240Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3840240Z 
2025-01-14T13:16:42.3840310Z     def initialize_transport_state(
2025-01-14T13:16:42.3840360Z         self,
2025-01-14T13:16:42.3840420Z         simulation_state,
2025-01-14T13:16:42.3840470Z         opacity_state,
2025-01-14T13:16:42.3840520Z         macro_atom_state,
2025-01-14T13:16:42.3840570Z         plasma,
2025-01-14T13:16:42.3840620Z         no_of_packets,
2025-01-14T13:16:42.3840680Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3840730Z         iteration=0,
2025-01-14T13:16:42.3840770Z     ):
2025-01-14T13:16:42.3840870Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3840930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3840990Z         else:
2025-01-14T13:16:42.3841040Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3841090Z     
2025-01-14T13:16:42.3841200Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3841270Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3841320Z         )
2025-01-14T13:16:42.3841360Z     
2025-01-14T13:16:42.3841470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3841570Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3842020Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3842080Z         else:
2025-01-14T13:16:42.3842150Z             continuum_state = None
2025-01-14T13:16:42.3842230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3842310Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3842370Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3842460Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3842530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3842600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3842670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3842730Z         ).to_numba(
2025-01-14T13:16:42.3842780Z             macro_atom_state,
2025-01-14T13:16:42.3842840Z             self.line_interaction_type,
2025-01-14T13:16:42.3842900Z         )
2025-01-14T13:16:42.3842970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3843200Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3843240Z         ]
2025-01-14T13:16:42.3843490Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3843500Z 
2025-01-14T13:16:42.3843610Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3843760Z _ ERROR at setup of test_composition_elemental_number_density[index5-32676283] _
2025-01-14T13:16:42.3843770Z 
2025-01-14T13:16:42.3844270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3844870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3844880Z 
2025-01-14T13:16:42.3844990Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3845130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3845210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3845350Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3845420Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3845470Z >       sim.run_final()
2025-01-14T13:16:42.3845470Z 
2025-01-14T13:16:42.3845530Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3845610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3845680Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3845800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3845870Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3846000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3846090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3846090Z 
2025-01-14T13:16:42.3846300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3846460Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3846640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3846860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3846980Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3847100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3847100Z 
2025-01-14T13:16:42.3847180Z     def initialize_transport_state(
2025-01-14T13:16:42.3847230Z         self,
2025-01-14T13:16:42.3847290Z         simulation_state,
2025-01-14T13:16:42.3847480Z         opacity_state,
2025-01-14T13:16:42.3847550Z         macro_atom_state,
2025-01-14T13:16:42.3847600Z         plasma,
2025-01-14T13:16:42.3847650Z         no_of_packets,
2025-01-14T13:16:42.3847720Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3847770Z         iteration=0,
2025-01-14T13:16:42.3847840Z     ):
2025-01-14T13:16:42.3847960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3848030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3848080Z         else:
2025-01-14T13:16:42.3848140Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3848180Z     
2025-01-14T13:16:42.3848280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3848360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3848400Z         )
2025-01-14T13:16:42.3848440Z     
2025-01-14T13:16:42.3850070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3850430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3850780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3850990Z         else:
2025-01-14T13:16:42.3851170Z             continuum_state = None
2025-01-14T13:16:42.3851400Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3851650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3853020Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3853290Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3853500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3853720Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3853920Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3854080Z         ).to_numba(
2025-01-14T13:16:42.3854240Z             macro_atom_state,
2025-01-14T13:16:42.3855220Z             self.line_interaction_type,
2025-01-14T13:16:42.3855360Z         )
2025-01-14T13:16:42.3855610Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3856230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3856380Z         ]
2025-01-14T13:16:42.3857060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3857080Z 
2025-01-14T13:16:42.3857400Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3857840Z _ ERROR at setup of test_composition_elemental_number_density[index6-841032262] _
2025-01-14T13:16:42.3857850Z 
2025-01-14T13:16:42.3859340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3860160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3860170Z 
2025-01-14T13:16:42.3860350Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3860700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3860920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3861300Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3861500Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3861650Z >       sim.run_final()
2025-01-14T13:16:42.3861660Z 
2025-01-14T13:16:42.3861840Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3862080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3862310Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3862610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3862830Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3863560Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3863840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3863850Z 
2025-01-14T13:16:42.3864430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3864860Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3865340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3865930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3866330Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3866640Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3866650Z 
2025-01-14T13:16:42.3867580Z     def initialize_transport_state(
2025-01-14T13:16:42.3867760Z         self,
2025-01-14T13:16:42.3867950Z         simulation_state,
2025-01-14T13:16:42.3868130Z         opacity_state,
2025-01-14T13:16:42.3868290Z         macro_atom_state,
2025-01-14T13:16:42.3868450Z         plasma,
2025-01-14T13:16:42.3868600Z         no_of_packets,
2025-01-14T13:16:42.3868780Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3868930Z         iteration=0,
2025-01-14T13:16:42.3869080Z     ):
2025-01-14T13:16:42.3869360Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3869570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3869720Z         else:
2025-01-14T13:16:42.3869890Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3870030Z     
2025-01-14T13:16:42.3870340Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3870540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3870690Z         )
2025-01-14T13:16:42.3871510Z     
2025-01-14T13:16:42.3871820Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3872060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3872410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3872560Z         else:
2025-01-14T13:16:42.3872740Z             continuum_state = None
2025-01-14T13:16:42.3872970Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3873200Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3873410Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3873660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3873900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3874100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3874310Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3874460Z         ).to_numba(
2025-01-14T13:16:42.3874650Z             macro_atom_state,
2025-01-14T13:16:42.3874840Z             self.line_interaction_type,
2025-01-14T13:16:42.3875000Z         )
2025-01-14T13:16:42.3875220Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3875860Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3876020Z         ]
2025-01-14T13:16:42.3877190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3877260Z 
2025-01-14T13:16:42.3877540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3877700Z _ ERROR at setup of test_composition_elemental_number_density[index7-638732300] _
2025-01-14T13:16:42.3877700Z 
2025-01-14T13:16:42.3878240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3878870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3878870Z 
2025-01-14T13:16:42.3878940Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3879070Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3879150Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3879300Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3879360Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3879420Z >       sim.run_final()
2025-01-14T13:16:42.3879420Z 
2025-01-14T13:16:42.3879490Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3879580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3879660Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3879780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3879850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3879980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3880070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3880070Z 
2025-01-14T13:16:42.3880290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3880450Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3880620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3880850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3880980Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3881090Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3881180Z 
2025-01-14T13:16:42.3881250Z     def initialize_transport_state(
2025-01-14T13:16:42.3881300Z         self,
2025-01-14T13:16:42.3881360Z         simulation_state,
2025-01-14T13:16:42.3881410Z         opacity_state,
2025-01-14T13:16:42.3881470Z         macro_atom_state,
2025-01-14T13:16:42.3881520Z         plasma,
2025-01-14T13:16:42.3881570Z         no_of_packets,
2025-01-14T13:16:42.3882300Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3882540Z         iteration=0,
2025-01-14T13:16:42.3882680Z     ):
2025-01-14T13:16:42.3882980Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3883200Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3883360Z         else:
2025-01-14T13:16:42.3883550Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3883710Z     
2025-01-14T13:16:42.3884020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3884230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3884410Z         )
2025-01-14T13:16:42.3884550Z     
2025-01-14T13:16:42.3884860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3885100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3885450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3885590Z         else:
2025-01-14T13:16:42.3885780Z             continuum_state = None
2025-01-14T13:16:42.3886000Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3886280Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3886480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3886720Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3886930Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3887180Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3887400Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3887560Z         ).to_numba(
2025-01-14T13:16:42.3887730Z             macro_atom_state,
2025-01-14T13:16:42.3889080Z             self.line_interaction_type,
2025-01-14T13:16:42.3889310Z         )
2025-01-14T13:16:42.3889550Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3890190Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3890340Z         ]
2025-01-14T13:16:42.3891020Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3891030Z 
2025-01-14T13:16:42.3891900Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3892330Z _ ERROR at setup of test_composition_elemental_number_density[index8-490167906] _
2025-01-14T13:16:42.3892340Z 
2025-01-14T13:16:42.3893870Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3895540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3895570Z 
2025-01-14T13:16:42.3896530Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3897590Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3898300Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3899230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3900230Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3900560Z >       sim.run_final()
2025-01-14T13:16:42.3900560Z 
2025-01-14T13:16:42.3900630Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3901130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3901730Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3903710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3904110Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3904720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3905010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3905050Z 
2025-01-14T13:16:42.3906470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3907700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3907930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3908970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3940740Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3941340Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3941400Z 
2025-01-14T13:16:42.3941750Z     def initialize_transport_state(
2025-01-14T13:16:42.3941900Z         self,
2025-01-14T13:16:42.3942080Z         simulation_state,
2025-01-14T13:16:42.3942240Z         opacity_state,
2025-01-14T13:16:42.3942420Z         macro_atom_state,
2025-01-14T13:16:42.3942580Z         plasma,
2025-01-14T13:16:42.3942980Z         no_of_packets,
2025-01-14T13:16:42.3943410Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3943570Z         iteration=0,
2025-01-14T13:16:42.3943950Z     ):
2025-01-14T13:16:42.3944460Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3944910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3946460Z         else:
2025-01-14T13:16:42.3946900Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3947060Z     
2025-01-14T13:16:42.3947390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3947710Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3947900Z         )
2025-01-14T13:16:42.3948040Z     
2025-01-14T13:16:42.3949580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3950000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3950420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3950530Z         else:
2025-01-14T13:16:42.3950600Z             continuum_state = None
2025-01-14T13:16:42.3950690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3950790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3950880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3951230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3951960Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3952300Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3953230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3953670Z         ).to_numba(
2025-01-14T13:16:42.3953780Z             macro_atom_state,
2025-01-14T13:16:42.3953850Z             self.line_interaction_type,
2025-01-14T13:16:42.3953900Z         )
2025-01-14T13:16:42.3953980Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3954550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3955510Z         ]
2025-01-14T13:16:42.3955830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3955830Z 
2025-01-14T13:16:42.3956410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3956990Z _ ERROR at setup of test_composition_elemental_number_density[index9-269136275] _
2025-01-14T13:16:42.3957000Z 
2025-01-14T13:16:42.3957540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3959550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3959580Z 
2025-01-14T13:16:42.3959800Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3960290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3960430Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3960580Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3960640Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3960690Z >       sim.run_final()
2025-01-14T13:16:42.3960700Z 
2025-01-14T13:16:42.3960760Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3960870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3960970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3961110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3961200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3961620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3961920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3961930Z 
2025-01-14T13:16:42.3962710Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3962910Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3963090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3963310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3963460Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3963580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3963830Z 
2025-01-14T13:16:42.3963920Z     def initialize_transport_state(
2025-01-14T13:16:42.3963970Z         self,
2025-01-14T13:16:42.3964250Z         simulation_state,
2025-01-14T13:16:42.3964480Z         opacity_state,
2025-01-14T13:16:42.3965270Z         macro_atom_state,
2025-01-14T13:16:42.3965490Z         plasma,
2025-01-14T13:16:42.3965670Z         no_of_packets,
2025-01-14T13:16:42.3965850Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3966840Z         iteration=0,
2025-01-14T13:16:42.3967180Z     ):
2025-01-14T13:16:42.3967330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3967400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3967450Z         else:
2025-01-14T13:16:42.3967950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3968170Z     
2025-01-14T13:16:42.3971060Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3971330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3971500Z         )
2025-01-14T13:16:42.3971670Z     
2025-01-14T13:16:42.3972810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3973160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3973590Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3973760Z         else:
2025-01-14T13:16:42.3973940Z             continuum_state = None
2025-01-14T13:16:42.3974200Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3974460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3974670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3975030Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3975170Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3975250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3975550Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3975610Z         ).to_numba(
2025-01-14T13:16:42.3975680Z             macro_atom_state,
2025-01-14T13:16:42.3975750Z             self.line_interaction_type,
2025-01-14T13:16:42.3975810Z         )
2025-01-14T13:16:42.3975900Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3976140Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3976190Z         ]
2025-01-14T13:16:42.3976470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3976470Z 
2025-01-14T13:16:42.3976600Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3976800Z _ ERROR at setup of test_composition_elemental_number_density[index10-204398856] _
2025-01-14T13:16:42.3976800Z 
2025-01-14T13:16:42.3977380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3977690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3977700Z 
2025-01-14T13:16:42.3977770Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3977920Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3978000Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3978190Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3978260Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3978520Z >       sim.run_final()
2025-01-14T13:16:42.3978540Z 
2025-01-14T13:16:42.3978830Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3979160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3979370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3979940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3980470Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3981190Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3981340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3981350Z 
2025-01-14T13:16:42.3981560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3981750Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3981940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3982160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.3982290Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.3982400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.3982410Z 
2025-01-14T13:16:42.3982730Z     def initialize_transport_state(
2025-01-14T13:16:42.3982930Z         self,
2025-01-14T13:16:42.3983270Z         simulation_state,
2025-01-14T13:16:42.3983440Z         opacity_state,
2025-01-14T13:16:42.3983620Z         macro_atom_state,
2025-01-14T13:16:42.3983770Z         plasma,
2025-01-14T13:16:42.3984140Z         no_of_packets,
2025-01-14T13:16:42.3985470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.3985570Z         iteration=0,
2025-01-14T13:16:42.3985610Z     ):
2025-01-14T13:16:42.3985720Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.3985940Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.3986190Z         else:
2025-01-14T13:16:42.3986380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.3986510Z     
2025-01-14T13:16:42.3986850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.3987540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.3987700Z         )
2025-01-14T13:16:42.3987850Z     
2025-01-14T13:16:42.3988150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.3988420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.3988860Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.3989300Z         else:
2025-01-14T13:16:42.3989580Z             continuum_state = None
2025-01-14T13:16:42.3989970Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.3990100Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.3990200Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.3990310Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.3990400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.3990470Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.3990560Z             continuum_state=continuum_state,
2025-01-14T13:16:42.3990620Z         ).to_numba(
2025-01-14T13:16:42.3990680Z             macro_atom_state,
2025-01-14T13:16:42.3990760Z             self.line_interaction_type,
2025-01-14T13:16:42.3990830Z         )
2025-01-14T13:16:42.3990930Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.3991180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.3991230Z         ]
2025-01-14T13:16:42.3991520Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.3991530Z 
2025-01-14T13:16:42.3991800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.3993530Z _ ERROR at setup of test_composition_elemental_number_density[index11-156857199] _
2025-01-14T13:16:42.3993550Z 
2025-01-14T13:16:42.3995840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.3996200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.3996200Z 
2025-01-14T13:16:42.3996280Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.3996440Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.3996530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.3996910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.3997200Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.3997390Z >       sim.run_final()
2025-01-14T13:16:42.3997400Z 
2025-01-14T13:16:42.3997620Z tardis/conftest.py:233: 
2025-01-14T13:16:42.3998060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3998190Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.3998300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.3998370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.3998500Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.3998590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.3998590Z 
2025-01-14T13:16:42.3998860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.3999070Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.3999280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.3999560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4001870Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4002010Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4002010Z 
2025-01-14T13:16:42.4002070Z     def initialize_transport_state(
2025-01-14T13:16:42.4002120Z         self,
2025-01-14T13:16:42.4002180Z         simulation_state,
2025-01-14T13:16:42.4002250Z         opacity_state,
2025-01-14T13:16:42.4002720Z         macro_atom_state,
2025-01-14T13:16:42.4002800Z         plasma,
2025-01-14T13:16:42.4002860Z         no_of_packets,
2025-01-14T13:16:42.4002940Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4003020Z         iteration=0,
2025-01-14T13:16:42.4003080Z     ):
2025-01-14T13:16:42.4003210Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4003290Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4003360Z         else:
2025-01-14T13:16:42.4003420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4003490Z     
2025-01-14T13:16:42.4003600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4003690Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4004180Z         )
2025-01-14T13:16:42.4004510Z     
2025-01-14T13:16:42.4008790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4009170Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4009570Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4009790Z         else:
2025-01-14T13:16:42.4010010Z             continuum_state = None
2025-01-14T13:16:42.4010310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4010980Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4011100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4011190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4012000Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4012370Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4013220Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4013640Z         ).to_numba(
2025-01-14T13:16:42.4013710Z             macro_atom_state,
2025-01-14T13:16:42.4013780Z             self.line_interaction_type,
2025-01-14T13:16:42.4013820Z         )
2025-01-14T13:16:42.4014440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4015450Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4016010Z         ]
2025-01-14T13:16:42.4016340Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4016350Z 
2025-01-14T13:16:42.4016490Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4016670Z _ ERROR at setup of test_composition_elemental_number_density[index12-45482957] _
2025-01-14T13:16:42.4016680Z 
2025-01-14T13:16:42.4017990Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4018330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4018330Z 
2025-01-14T13:16:42.4018410Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4018530Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4018610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4018750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4018820Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4018870Z >       sim.run_final()
2025-01-14T13:16:42.4018880Z 
2025-01-14T13:16:42.4018930Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4019240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4019330Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4019440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4021080Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4021260Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4021370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4021380Z 
2025-01-14T13:16:42.4021600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4022330Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4022580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4022840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4023010Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4023140Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4023150Z 
2025-01-14T13:16:42.4023220Z     def initialize_transport_state(
2025-01-14T13:16:42.4023730Z         self,
2025-01-14T13:16:42.4024100Z         simulation_state,
2025-01-14T13:16:42.4024320Z         opacity_state,
2025-01-14T13:16:42.4024510Z         macro_atom_state,
2025-01-14T13:16:42.4024730Z         plasma,
2025-01-14T13:16:42.4024890Z         no_of_packets,
2025-01-14T13:16:42.4025110Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4025270Z         iteration=0,
2025-01-14T13:16:42.4025490Z     ):
2025-01-14T13:16:42.4026340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4027020Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4027120Z         else:
2025-01-14T13:16:42.4027200Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4027260Z     
2025-01-14T13:16:42.4027660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4027770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4027820Z         )
2025-01-14T13:16:42.4028420Z     
2025-01-14T13:16:42.4029120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4029320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4029480Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4029530Z         else:
2025-01-14T13:16:42.4029590Z             continuum_state = None
2025-01-14T13:16:42.4029680Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4029770Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4029850Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4029930Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4030030Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4030110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4030190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4030230Z         ).to_numba(
2025-01-14T13:16:42.4030290Z             macro_atom_state,
2025-01-14T13:16:42.4030350Z             self.line_interaction_type,
2025-01-14T13:16:42.4030800Z         )
2025-01-14T13:16:42.4031610Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4032990Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4033240Z         ]
2025-01-14T13:16:42.4034220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4034230Z 
2025-01-14T13:16:42.4034420Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4034610Z _ ERROR at setup of test_composition_elemental_number_density[index13-34542591] _
2025-01-14T13:16:42.4034780Z 
2025-01-14T13:16:42.4036260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4037160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4037180Z 
2025-01-14T13:16:42.4037410Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4038950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4039240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4040030Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4040130Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4040190Z >       sim.run_final()
2025-01-14T13:16:42.4040200Z 
2025-01-14T13:16:42.4040260Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4040870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4041460Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4041640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4041750Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4041880Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4041970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4041980Z 
2025-01-14T13:16:42.4042220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4042880Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4043730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4044030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4044920Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4045060Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4045060Z 
2025-01-14T13:16:42.4045140Z     def initialize_transport_state(
2025-01-14T13:16:42.4045200Z         self,
2025-01-14T13:16:42.4045260Z         simulation_state,
2025-01-14T13:16:42.4045330Z         opacity_state,
2025-01-14T13:16:42.4045400Z         macro_atom_state,
2025-01-14T13:16:42.4045470Z         plasma,
2025-01-14T13:16:42.4045540Z         no_of_packets,
2025-01-14T13:16:42.4045590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4045650Z         iteration=0,
2025-01-14T13:16:42.4045700Z     ):
2025-01-14T13:16:42.4045820Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4045920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4045990Z         else:
2025-01-14T13:16:42.4046080Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4046140Z     
2025-01-14T13:16:42.4046280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4046360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4047140Z         )
2025-01-14T13:16:42.4047410Z     
2025-01-14T13:16:42.4048660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4048800Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4048930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4049200Z         else:
2025-01-14T13:16:42.4049330Z             continuum_state = None
2025-01-14T13:16:42.4049420Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4049510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4049590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4049710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4050230Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4050330Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4050440Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4050520Z         ).to_numba(
2025-01-14T13:16:42.4050580Z             macro_atom_state,
2025-01-14T13:16:42.4051190Z             self.line_interaction_type,
2025-01-14T13:16:42.4051280Z         )
2025-01-14T13:16:42.4051370Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4051740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4051810Z         ]
2025-01-14T13:16:42.4053000Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4053030Z 
2025-01-14T13:16:42.4053630Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4054190Z _ ERROR at setup of test_composition_elemental_number_density[index14-26508241] _
2025-01-14T13:16:42.4054210Z 
2025-01-14T13:16:42.4058270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4059380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4059390Z 
2025-01-14T13:16:42.4059480Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4060260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4060750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4060960Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4061040Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4061100Z >       sim.run_final()
2025-01-14T13:16:42.4061120Z 
2025-01-14T13:16:42.4061200Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4062000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4062560Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4062730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4062810Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4062950Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4063070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4063080Z 
2025-01-14T13:16:42.4063300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4063460Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4063670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4063910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4064040Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4064150Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4064150Z 
2025-01-14T13:16:42.4064220Z     def initialize_transport_state(
2025-01-14T13:16:42.4064560Z         self,
2025-01-14T13:16:42.4064640Z         simulation_state,
2025-01-14T13:16:42.4064700Z         opacity_state,
2025-01-14T13:16:42.4064750Z         macro_atom_state,
2025-01-14T13:16:42.4064800Z         plasma,
2025-01-14T13:16:42.4064850Z         no_of_packets,
2025-01-14T13:16:42.4064920Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4064970Z         iteration=0,
2025-01-14T13:16:42.4065020Z     ):
2025-01-14T13:16:42.4065120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4065220Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4065950Z         else:
2025-01-14T13:16:42.4066040Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4066090Z     
2025-01-14T13:16:42.4066210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4066290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4066330Z         )
2025-01-14T13:16:42.4066390Z     
2025-01-14T13:16:42.4066520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4066630Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4066790Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4066840Z         else:
2025-01-14T13:16:42.4066900Z             continuum_state = None
2025-01-14T13:16:42.4067000Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4067080Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4067170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4067270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4067350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4067430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4067490Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4067550Z         ).to_numba(
2025-01-14T13:16:42.4067600Z             macro_atom_state,
2025-01-14T13:16:42.4067680Z             self.line_interaction_type,
2025-01-14T13:16:42.4067730Z         )
2025-01-14T13:16:42.4067830Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4069140Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4070990Z         ]
2025-01-14T13:16:42.4072170Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4072180Z 
2025-01-14T13:16:42.4072720Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4073160Z _ ERROR at setup of test_composition_elemental_number_density[index15-34001569] _
2025-01-14T13:16:42.4073170Z 
2025-01-14T13:16:42.4079330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4084640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4084660Z 
2025-01-14T13:16:42.4085050Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4085580Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4085700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4086110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4086460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4086840Z >       sim.run_final()
2025-01-14T13:16:42.4086850Z 
2025-01-14T13:16:42.4086960Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4087370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4087620Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4087990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4088400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4093220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4096750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4096760Z 
2025-01-14T13:16:42.4098400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4098640Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4098890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4099630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4100910Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4101080Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4101090Z 
2025-01-14T13:16:42.4101200Z     def initialize_transport_state(
2025-01-14T13:16:42.4101250Z         self,
2025-01-14T13:16:42.4101350Z         simulation_state,
2025-01-14T13:16:42.4101470Z         opacity_state,
2025-01-14T13:16:42.4101590Z         macro_atom_state,
2025-01-14T13:16:42.4101640Z         plasma,
2025-01-14T13:16:42.4101730Z         no_of_packets,
2025-01-14T13:16:42.4102720Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4102890Z         iteration=0,
2025-01-14T13:16:42.4102940Z     ):
2025-01-14T13:16:42.4103100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4103770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4103880Z         else:
2025-01-14T13:16:42.4104000Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4104050Z     
2025-01-14T13:16:42.4104220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4104350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4104460Z         )
2025-01-14T13:16:42.4135830Z     
2025-01-14T13:16:42.4136070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4136170Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4136300Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4136350Z         else:
2025-01-14T13:16:42.4136420Z             continuum_state = None
2025-01-14T13:16:42.4136500Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4136590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4136660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4136780Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4137260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4137340Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4137410Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4137460Z         ).to_numba(
2025-01-14T13:16:42.4137520Z             macro_atom_state,
2025-01-14T13:16:42.4137580Z             self.line_interaction_type,
2025-01-14T13:16:42.4137630Z         )
2025-01-14T13:16:42.4137710Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4137940Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4137990Z         ]
2025-01-14T13:16:42.4138240Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4138240Z 
2025-01-14T13:16:42.4138360Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4138520Z _ ERROR at setup of test_composition_elemental_number_density[index16-25822910] _
2025-01-14T13:16:42.4138530Z 
2025-01-14T13:16:42.4139050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4139340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4139340Z 
2025-01-14T13:16:42.4139410Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4139540Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4139610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4139750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4139960Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4140020Z >       sim.run_final()
2025-01-14T13:16:42.4140020Z 
2025-01-14T13:16:42.4140080Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4140170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4140250Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4140360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4140430Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4140550Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4140640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4140650Z 
2025-01-14T13:16:42.4140860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4141020Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4141200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4141450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4141580Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4141690Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4141690Z 
2025-01-14T13:16:42.4141760Z     def initialize_transport_state(
2025-01-14T13:16:42.4141800Z         self,
2025-01-14T13:16:42.4141860Z         simulation_state,
2025-01-14T13:16:42.4141910Z         opacity_state,
2025-01-14T13:16:42.4141960Z         macro_atom_state,
2025-01-14T13:16:42.4142010Z         plasma,
2025-01-14T13:16:42.4142050Z         no_of_packets,
2025-01-14T13:16:42.4142110Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4142160Z         iteration=0,
2025-01-14T13:16:42.4142210Z     ):
2025-01-14T13:16:42.4142310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4142380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4142530Z         else:
2025-01-14T13:16:42.4142590Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4142630Z     
2025-01-14T13:16:42.4142740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4142820Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4142860Z         )
2025-01-14T13:16:42.4142900Z     
2025-01-14T13:16:42.4143000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4143090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4143220Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4143270Z         else:
2025-01-14T13:16:42.4143330Z             continuum_state = None
2025-01-14T13:16:42.4143410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4143500Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4143570Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4143660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4143740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4143810Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4143880Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4143920Z         ).to_numba(
2025-01-14T13:16:42.4143980Z             macro_atom_state,
2025-01-14T13:16:42.4144050Z             self.line_interaction_type,
2025-01-14T13:16:42.4144110Z         )
2025-01-14T13:16:42.4144190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4144410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4144450Z         ]
2025-01-14T13:16:42.4144710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4144760Z 
2025-01-14T13:16:42.4144910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4145080Z _ ERROR at setup of test_composition_elemental_number_density[index17-19816693] _
2025-01-14T13:16:42.4145080Z 
2025-01-14T13:16:42.4145620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4145900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4145910Z 
2025-01-14T13:16:42.4145980Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4146100Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4146170Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4146310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4146370Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4146430Z >       sim.run_final()
2025-01-14T13:16:42.4146430Z 
2025-01-14T13:16:42.4146490Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4146580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4146650Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4146760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4146840Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4146970Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4147060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4147060Z 
2025-01-14T13:16:42.4147300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4147460Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4147960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4148210Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4148340Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4148450Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4148450Z 
2025-01-14T13:16:42.4148520Z     def initialize_transport_state(
2025-01-14T13:16:42.4148580Z         self,
2025-01-14T13:16:42.4148660Z         simulation_state,
2025-01-14T13:16:42.4148710Z         opacity_state,
2025-01-14T13:16:42.4148760Z         macro_atom_state,
2025-01-14T13:16:42.4148810Z         plasma,
2025-01-14T13:16:42.4148860Z         no_of_packets,
2025-01-14T13:16:42.4148920Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4148970Z         iteration=0,
2025-01-14T13:16:42.4149010Z     ):
2025-01-14T13:16:42.4149110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4149180Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4149230Z         else:
2025-01-14T13:16:42.4149290Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4151620Z     
2025-01-14T13:16:42.4151740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4151810Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4151850Z         )
2025-01-14T13:16:42.4151900Z     
2025-01-14T13:16:42.4152000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4152090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4152210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4152250Z         else:
2025-01-14T13:16:42.4152310Z             continuum_state = None
2025-01-14T13:16:42.4152390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4152480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4152860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4152950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4153020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4153090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4153160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4153210Z         ).to_numba(
2025-01-14T13:16:42.4153260Z             macro_atom_state,
2025-01-14T13:16:42.4153330Z             self.line_interaction_type,
2025-01-14T13:16:42.4153380Z         )
2025-01-14T13:16:42.4153460Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4153690Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4156560Z         ]
2025-01-14T13:16:42.4156810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4156820Z 
2025-01-14T13:16:42.4156930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4157080Z ______ ERROR at setup of test_simulation_state_mass[index0-1.4471412e+31] ______
2025-01-14T13:16:42.4157080Z 
2025-01-14T13:16:42.4157610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4157900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4157900Z 
2025-01-14T13:16:42.4157970Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4158090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4158180Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4158320Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4158500Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4158560Z >       sim.run_final()
2025-01-14T13:16:42.4158570Z 
2025-01-14T13:16:42.4158630Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4158710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4158790Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4158900Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4158970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4159090Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4159180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4159180Z 
2025-01-14T13:16:42.4159390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4159550Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4159740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4159970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4160090Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4160200Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4160200Z 
2025-01-14T13:16:42.4160270Z     def initialize_transport_state(
2025-01-14T13:16:42.4160320Z         self,
2025-01-14T13:16:42.4160370Z         simulation_state,
2025-01-14T13:16:42.4160430Z         opacity_state,
2025-01-14T13:16:42.4160480Z         macro_atom_state,
2025-01-14T13:16:42.4160530Z         plasma,
2025-01-14T13:16:42.4160580Z         no_of_packets,
2025-01-14T13:16:42.4160640Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4160680Z         iteration=0,
2025-01-14T13:16:42.4161120Z     ):
2025-01-14T13:16:42.4161220Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4161300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4161360Z         else:
2025-01-14T13:16:42.4161420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4161460Z     
2025-01-14T13:16:42.4161570Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4161660Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4161720Z         )
2025-01-14T13:16:42.4161760Z     
2025-01-14T13:16:42.4161860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4161960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4162080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4162140Z         else:
2025-01-14T13:16:42.4162200Z             continuum_state = None
2025-01-14T13:16:42.4162280Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4162370Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4162440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4162520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4162600Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4162680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4162750Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4162800Z         ).to_numba(
2025-01-14T13:16:42.4162850Z             macro_atom_state,
2025-01-14T13:16:42.4162920Z             self.line_interaction_type,
2025-01-14T13:16:42.4162970Z         )
2025-01-14T13:16:42.4163040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4163270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4163320Z         ]
2025-01-14T13:16:42.4163580Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4163580Z 
2025-01-14T13:16:42.4163790Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4163940Z ______ ERROR at setup of test_simulation_state_mass[index1-2.6820129e+30] ______
2025-01-14T13:16:42.4163940Z 
2025-01-14T13:16:42.4164460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4164750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4164760Z 
2025-01-14T13:16:42.4164820Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4164950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4165020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4165170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4165230Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4165290Z >       sim.run_final()
2025-01-14T13:16:42.4165290Z 
2025-01-14T13:16:42.4165340Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4165440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4165510Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4165610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4165690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4165810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4165900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4165900Z 
2025-01-14T13:16:42.4166110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4166360Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4166540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4166760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4166880Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4166990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4166990Z 
2025-01-14T13:16:42.4167060Z     def initialize_transport_state(
2025-01-14T13:16:42.4167100Z         self,
2025-01-14T13:16:42.4167160Z         simulation_state,
2025-01-14T13:16:42.4167210Z         opacity_state,
2025-01-14T13:16:42.4167280Z         macro_atom_state,
2025-01-14T13:16:42.4167320Z         plasma,
2025-01-14T13:16:42.4167370Z         no_of_packets,
2025-01-14T13:16:42.4167430Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4167480Z         iteration=0,
2025-01-14T13:16:42.4167530Z     ):
2025-01-14T13:16:42.4167630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4167700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4167750Z         else:
2025-01-14T13:16:42.4167810Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4167850Z     
2025-01-14T13:16:42.4167960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4168030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4168080Z         )
2025-01-14T13:16:42.4168120Z     
2025-01-14T13:16:42.4168220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4168310Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4168440Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4168490Z         else:
2025-01-14T13:16:42.4168550Z             continuum_state = None
2025-01-14T13:16:42.4168630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4168820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4168910Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4168990Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4169070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4169140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4169210Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4169250Z         ).to_numba(
2025-01-14T13:16:42.4169310Z             macro_atom_state,
2025-01-14T13:16:42.4169370Z             self.line_interaction_type,
2025-01-14T13:16:42.4169420Z         )
2025-01-14T13:16:42.4169490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4169710Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4169760Z         ]
2025-01-14T13:16:42.4170010Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4170020Z 
2025-01-14T13:16:42.4170130Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4170290Z ______ ERROR at setup of test_simulation_state_mass[index2-1.3464444e+29] ______
2025-01-14T13:16:42.4170290Z 
2025-01-14T13:16:42.4170800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4171100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4171110Z 
2025-01-14T13:16:42.4171170Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4171300Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4171460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4171600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4171670Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4171730Z >       sim.run_final()
2025-01-14T13:16:42.4171740Z 
2025-01-14T13:16:42.4171810Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4171910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4171980Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4172100Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4172160Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4172290Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4172380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4172380Z 
2025-01-14T13:16:42.4172600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4172770Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4172940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4173170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4173290Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4173400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4173400Z 
2025-01-14T13:16:42.4173470Z     def initialize_transport_state(
2025-01-14T13:16:42.4173520Z         self,
2025-01-14T13:16:42.4173570Z         simulation_state,
2025-01-14T13:16:42.4173630Z         opacity_state,
2025-01-14T13:16:42.4173680Z         macro_atom_state,
2025-01-14T13:16:42.4173730Z         plasma,
2025-01-14T13:16:42.4173780Z         no_of_packets,
2025-01-14T13:16:42.4173840Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4173890Z         iteration=0,
2025-01-14T13:16:42.4173940Z     ):
2025-01-14T13:16:42.4174400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4174510Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4174560Z         else:
2025-01-14T13:16:42.4174620Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4174660Z     
2025-01-14T13:16:42.4174780Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4174870Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4174920Z         )
2025-01-14T13:16:42.4174970Z     
2025-01-14T13:16:42.4175070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4175160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4175290Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4175350Z         else:
2025-01-14T13:16:42.4175420Z             continuum_state = None
2025-01-14T13:16:42.4175510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4175620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4175690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4175770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4175850Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4175930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4176000Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4176050Z         ).to_numba(
2025-01-14T13:16:42.4176100Z             macro_atom_state,
2025-01-14T13:16:42.4176170Z             self.line_interaction_type,
2025-01-14T13:16:42.4176210Z         )
2025-01-14T13:16:42.4176290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4176530Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4177160Z         ]
2025-01-14T13:16:42.4177430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4177430Z 
2025-01-14T13:16:42.4177550Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4177690Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index0-1.67378172e-24] ___
2025-01-14T13:16:42.4177690Z 
2025-01-14T13:16:42.4178220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4178540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4178540Z 
2025-01-14T13:16:42.4178610Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4178730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4178830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4178980Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4179070Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4179120Z >       sim.run_final()
2025-01-14T13:16:42.4179130Z 
2025-01-14T13:16:42.4179200Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4179290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4179370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4179480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4179550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4179680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4179790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4179790Z 
2025-01-14T13:16:42.4180040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4180300Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4180500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4180740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4180880Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4180990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4181000Z 
2025-01-14T13:16:42.4181070Z     def initialize_transport_state(
2025-01-14T13:16:42.4181110Z         self,
2025-01-14T13:16:42.4181170Z         simulation_state,
2025-01-14T13:16:42.4181230Z         opacity_state,
2025-01-14T13:16:42.4181280Z         macro_atom_state,
2025-01-14T13:16:42.4181330Z         plasma,
2025-01-14T13:16:42.4181370Z         no_of_packets,
2025-01-14T13:16:42.4181430Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4181480Z         iteration=0,
2025-01-14T13:16:42.4181530Z     ):
2025-01-14T13:16:42.4181630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4181700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4181740Z         else:
2025-01-14T13:16:42.4181800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4181840Z     
2025-01-14T13:16:42.4181950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4182020Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4182070Z         )
2025-01-14T13:16:42.4182110Z     
2025-01-14T13:16:42.4182210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4182300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4182420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4182480Z         else:
2025-01-14T13:16:42.4182610Z             continuum_state = None
2025-01-14T13:16:42.4182720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4182810Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4182890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4182970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4183040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4183110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4183180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4183230Z         ).to_numba(
2025-01-14T13:16:42.4183280Z             macro_atom_state,
2025-01-14T13:16:42.4183350Z             self.line_interaction_type,
2025-01-14T13:16:42.4183390Z         )
2025-01-14T13:16:42.4183470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4183690Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4183740Z         ]
2025-01-14T13:16:42.4183990Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4183990Z 
2025-01-14T13:16:42.4184110Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4184260Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index1-9.51707707e-23] ___
2025-01-14T13:16:42.4184270Z 
2025-01-14T13:16:42.4184770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4185060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4185060Z 
2025-01-14T13:16:42.4185130Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4185250Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4185400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4185550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4185610Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4185670Z >       sim.run_final()
2025-01-14T13:16:42.4185670Z 
2025-01-14T13:16:42.4185720Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4185820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4185890Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4186010Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4186070Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4186400Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4186550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4186560Z 
2025-01-14T13:16:42.4186850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4187010Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4187330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4187710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4187920Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4188210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4188210Z 
2025-01-14T13:16:42.4188420Z     def initialize_transport_state(
2025-01-14T13:16:42.4188730Z         self,
2025-01-14T13:16:42.4188860Z         simulation_state,
2025-01-14T13:16:42.4188980Z         opacity_state,
2025-01-14T13:16:42.4189100Z         macro_atom_state,
2025-01-14T13:16:42.4189150Z         plasma,
2025-01-14T13:16:42.4189440Z         no_of_packets,
2025-01-14T13:16:42.4189560Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4189680Z         iteration=0,
2025-01-14T13:16:42.4189730Z     ):
2025-01-14T13:16:42.4189880Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4190030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4190150Z         else:
2025-01-14T13:16:42.4190290Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4190350Z     
2025-01-14T13:16:42.4190570Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4190720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4190840Z         )
2025-01-14T13:16:42.4190880Z     
2025-01-14T13:16:42.4191050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4191130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4191450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4191580Z         else:
2025-01-14T13:16:42.4191640Z             continuum_state = None
2025-01-14T13:16:42.4191790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4191960Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4192060Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4210050Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4210240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4210310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4210380Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4210440Z         ).to_numba(
2025-01-14T13:16:42.4210490Z             macro_atom_state,
2025-01-14T13:16:42.4210560Z             self.line_interaction_type,
2025-01-14T13:16:42.4210610Z         )
2025-01-14T13:16:42.4210690Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4210920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4211000Z         ]
2025-01-14T13:16:42.4211560Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4211570Z 
2025-01-14T13:16:42.4211690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4211850Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index2-9.54725917e-23] ___
2025-01-14T13:16:42.4211870Z 
2025-01-14T13:16:42.4212390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4212670Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4212680Z 
2025-01-14T13:16:42.4212740Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4212880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4212960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4213100Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4213170Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4213220Z >       sim.run_final()
2025-01-14T13:16:42.4213220Z 
2025-01-14T13:16:42.4213290Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4213400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4213480Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4213590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4213660Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4213780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4213870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4214010Z 
2025-01-14T13:16:42.4214230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4214390Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4214570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4214810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4214940Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4215050Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4215050Z 
2025-01-14T13:16:42.4215120Z     def initialize_transport_state(
2025-01-14T13:16:42.4215160Z         self,
2025-01-14T13:16:42.4215220Z         simulation_state,
2025-01-14T13:16:42.4215270Z         opacity_state,
2025-01-14T13:16:42.4215330Z         macro_atom_state,
2025-01-14T13:16:42.4215380Z         plasma,
2025-01-14T13:16:42.4215430Z         no_of_packets,
2025-01-14T13:16:42.4215490Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4215540Z         iteration=0,
2025-01-14T13:16:42.4215590Z     ):
2025-01-14T13:16:42.4215690Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4215760Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4215800Z         else:
2025-01-14T13:16:42.4215860Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4215910Z     
2025-01-14T13:16:42.4216010Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4216080Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4216130Z         )
2025-01-14T13:16:42.4216180Z     
2025-01-14T13:16:42.4216280Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4216370Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4216500Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4216540Z         else:
2025-01-14T13:16:42.4216870Z             continuum_state = None
2025-01-14T13:16:42.4216960Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4217050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4217120Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4217200Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4217280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4217350Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4217420Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4217470Z         ).to_numba(
2025-01-14T13:16:42.4217530Z             macro_atom_state,
2025-01-14T13:16:42.4217590Z             self.line_interaction_type,
2025-01-14T13:16:42.4217630Z         )
2025-01-14T13:16:42.4217710Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4217930Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4217980Z         ]
2025-01-14T13:16:42.4218240Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4218240Z 
2025-01-14T13:16:42.4218350Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4218530Z __ ERROR at setup of TestModelStateFromNonUniformAbundances.test_atomic_mass ___
2025-01-14T13:16:42.4218530Z 
2025-01-14T13:16:42.4219050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4219360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4219570Z 
2025-01-14T13:16:42.4219660Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4219790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4219860Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4220010Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4220070Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4220130Z >       sim.run_final()
2025-01-14T13:16:42.4220130Z 
2025-01-14T13:16:42.4220200Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4220330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4220420Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4220530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4220600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4220740Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4376440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4376530Z 
2025-01-14T13:16:42.4376870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4377050Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4377250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4377470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4377600Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4377710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4377710Z 
2025-01-14T13:16:42.4377780Z     def initialize_transport_state(
2025-01-14T13:16:42.4377830Z         self,
2025-01-14T13:16:42.4377880Z         simulation_state,
2025-01-14T13:16:42.4377940Z         opacity_state,
2025-01-14T13:16:42.4377990Z         macro_atom_state,
2025-01-14T13:16:42.4378040Z         plasma,
2025-01-14T13:16:42.4378580Z         no_of_packets,
2025-01-14T13:16:42.4378650Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4381750Z         iteration=0,
2025-01-14T13:16:42.4381840Z     ):
2025-01-14T13:16:42.4381960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4382040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4382110Z         else:
2025-01-14T13:16:42.4382170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4382220Z     
2025-01-14T13:16:42.4382330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4382400Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4382450Z         )
2025-01-14T13:16:42.4382500Z     
2025-01-14T13:16:42.4382610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4382700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4382840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4382900Z         else:
2025-01-14T13:16:42.4382980Z             continuum_state = None
2025-01-14T13:16:42.4383070Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4383160Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4383220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4558770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4559060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4559160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4559250Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4559330Z         ).to_numba(
2025-01-14T13:16:42.4559400Z             macro_atom_state,
2025-01-14T13:16:42.4562190Z             self.line_interaction_type,
2025-01-14T13:16:42.4562650Z         )
2025-01-14T13:16:42.4562970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4567460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4567650Z         ]
2025-01-14T13:16:42.4568470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4568480Z 
2025-01-14T13:16:42.4568910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4569530Z _ ERROR at setup of TestModelStateFromNonUniformAbundances.test_elemental_number_density _
2025-01-14T13:16:42.4569540Z 
2025-01-14T13:16:42.4571080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4571950Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4571970Z 
2025-01-14T13:16:42.4572240Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4572650Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4572960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4573460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4573700Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4573900Z >       sim.run_final()
2025-01-14T13:16:42.4573910Z 
2025-01-14T13:16:42.4574100Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4574340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4574550Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4574890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4575160Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4575580Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4576450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4576480Z 
2025-01-14T13:16:42.4577440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4580430Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4581580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4581860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4582010Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4582150Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4582170Z 
2025-01-14T13:16:42.4582260Z     def initialize_transport_state(
2025-01-14T13:16:42.4582320Z         self,
2025-01-14T13:16:42.4582380Z         simulation_state,
2025-01-14T13:16:42.4582460Z         opacity_state,
2025-01-14T13:16:42.4582510Z         macro_atom_state,
2025-01-14T13:16:42.4582580Z         plasma,
2025-01-14T13:16:42.4582650Z         no_of_packets,
2025-01-14T13:16:42.4582760Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4582840Z         iteration=0,
2025-01-14T13:16:42.4582930Z     ):
2025-01-14T13:16:42.4583060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4583170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4583240Z         else:
2025-01-14T13:16:42.4583330Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4583380Z     
2025-01-14T13:16:42.4583520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4584460Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4586490Z         )
2025-01-14T13:16:42.4586560Z     
2025-01-14T13:16:42.4586680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4586810Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4587430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4587510Z         else:
2025-01-14T13:16:42.4587570Z             continuum_state = None
2025-01-14T13:16:42.4587670Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4587770Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4590220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4590670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4590800Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4590880Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4590950Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4591000Z         ).to_numba(
2025-01-14T13:16:42.4591050Z             macro_atom_state,
2025-01-14T13:16:42.4591110Z             self.line_interaction_type,
2025-01-14T13:16:42.4591160Z         )
2025-01-14T13:16:42.4591270Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4591510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4592740Z         ]
2025-01-14T13:16:42.4593420Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4593430Z 
2025-01-14T13:16:42.4593580Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4593760Z _________ ERROR at setup of test_hdf_simulation_state_scalars[t_inner] _________
2025-01-14T13:16:42.4593760Z 
2025-01-14T13:16:42.4595380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4595720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4595730Z 
2025-01-14T13:16:42.4596910Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4597110Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4597220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4597390Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4597460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4597520Z >       sim.run_final()
2025-01-14T13:16:42.4597520Z 
2025-01-14T13:16:42.4597610Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4597730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4597840Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4597990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4598070Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4598230Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4598550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4598560Z 
2025-01-14T13:16:42.4598860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4599070Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4599280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4599570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4599730Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4599860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4599860Z 
2025-01-14T13:16:42.4599930Z     def initialize_transport_state(
2025-01-14T13:16:42.4599980Z         self,
2025-01-14T13:16:42.4600870Z         simulation_state,
2025-01-14T13:16:42.4600930Z         opacity_state,
2025-01-14T13:16:42.4600990Z         macro_atom_state,
2025-01-14T13:16:42.4601050Z         plasma,
2025-01-14T13:16:42.4601110Z         no_of_packets,
2025-01-14T13:16:42.4601170Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4601230Z         iteration=0,
2025-01-14T13:16:42.4601300Z     ):
2025-01-14T13:16:42.4601430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4601510Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4601560Z         else:
2025-01-14T13:16:42.4601650Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4601700Z     
2025-01-14T13:16:42.4601810Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4601880Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4601950Z         )
2025-01-14T13:16:42.4602000Z     
2025-01-14T13:16:42.4602130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4602240Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4602410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4602460Z         else:
2025-01-14T13:16:42.4602540Z             continuum_state = None
2025-01-14T13:16:42.4602620Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4602720Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4602800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4602890Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4602980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4603060Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4603130Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4603190Z         ).to_numba(
2025-01-14T13:16:42.4603290Z             macro_atom_state,
2025-01-14T13:16:42.4603390Z             self.line_interaction_type,
2025-01-14T13:16:42.4603460Z         )
2025-01-14T13:16:42.4603570Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4605470Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4605560Z         ]
2025-01-14T13:16:42.4605860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4605870Z 
2025-01-14T13:16:42.4606000Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4606170Z _____ ERROR at setup of test_hdf_simulation_state_nparray[dilution_factor] _____
2025-01-14T13:16:42.4606170Z 
2025-01-14T13:16:42.4606760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4607100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4607100Z 
2025-01-14T13:16:42.4607210Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4607370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4607460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4607610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4609080Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4609180Z >       sim.run_final()
2025-01-14T13:16:42.4609180Z 
2025-01-14T13:16:42.4609250Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4611130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4612110Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4612270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4615200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4619990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4620100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4620100Z 
2025-01-14T13:16:42.4620310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4620470Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4620640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4620860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4620980Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4621100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4621100Z 
2025-01-14T13:16:42.4621160Z     def initialize_transport_state(
2025-01-14T13:16:42.4621210Z         self,
2025-01-14T13:16:42.4621260Z         simulation_state,
2025-01-14T13:16:42.4621320Z         opacity_state,
2025-01-14T13:16:42.4621370Z         macro_atom_state,
2025-01-14T13:16:42.4623990Z         plasma,
2025-01-14T13:16:42.4624060Z         no_of_packets,
2025-01-14T13:16:42.4624130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4624720Z         iteration=0,
2025-01-14T13:16:42.4624770Z     ):
2025-01-14T13:16:42.4624900Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4624980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4625030Z         else:
2025-01-14T13:16:42.4625090Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4625140Z     
2025-01-14T13:16:42.4625510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4625610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4625670Z         )
2025-01-14T13:16:42.4625730Z     
2025-01-14T13:16:42.4625870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4626150Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4626700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4626780Z         else:
2025-01-14T13:16:42.4626850Z             continuum_state = None
2025-01-14T13:16:42.4626930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4627030Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4627100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4627190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4627280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4627380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4627470Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4628640Z         ).to_numba(
2025-01-14T13:16:42.4628750Z             macro_atom_state,
2025-01-14T13:16:42.4628850Z             self.line_interaction_type,
2025-01-14T13:16:42.4628920Z         )
2025-01-14T13:16:42.4629040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4629350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4629450Z         ]
2025-01-14T13:16:42.4629810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4629810Z 
2025-01-14T13:16:42.4630000Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4630200Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_inner] _________
2025-01-14T13:16:42.4630200Z 
2025-01-14T13:16:42.4630820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4634330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4634340Z 
2025-01-14T13:16:42.4634450Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4634840Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4635130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4635330Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4635430Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4635520Z >       sim.run_final()
2025-01-14T13:16:42.4635530Z 
2025-01-14T13:16:42.4635600Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4635690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4635800Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4635950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4637120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4639280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4639430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4639440Z 
2025-01-14T13:16:42.4639710Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4639930Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4640170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4644230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4644400Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4644560Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4644570Z 
2025-01-14T13:16:42.4644670Z     def initialize_transport_state(
2025-01-14T13:16:42.4644750Z         self,
2025-01-14T13:16:42.4645010Z         simulation_state,
2025-01-14T13:16:42.4645090Z         opacity_state,
2025-01-14T13:16:42.4645150Z         macro_atom_state,
2025-01-14T13:16:42.4645230Z         plasma,
2025-01-14T13:16:42.4645300Z         no_of_packets,
2025-01-14T13:16:42.4645380Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4645460Z         iteration=0,
2025-01-14T13:16:42.4645510Z     ):
2025-01-14T13:16:42.4645630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4645740Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4645810Z         else:
2025-01-14T13:16:42.4645890Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4645930Z     
2025-01-14T13:16:42.4646410Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4646490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4646560Z         )
2025-01-14T13:16:42.4646620Z     
2025-01-14T13:16:42.4646760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4646880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4647060Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4647120Z         else:
2025-01-14T13:16:42.4712880Z             continuum_state = None
2025-01-14T13:16:42.4713170Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4713260Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4713330Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4713410Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4713490Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4713560Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4713630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4713680Z         ).to_numba(
2025-01-14T13:16:42.4713730Z             macro_atom_state,
2025-01-14T13:16:42.4714290Z             self.line_interaction_type,
2025-01-14T13:16:42.4714350Z         )
2025-01-14T13:16:42.4714430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4714660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4714700Z         ]
2025-01-14T13:16:42.4714950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4714960Z 
2025-01-14T13:16:42.4715070Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4715210Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_outer] _________
2025-01-14T13:16:42.4715220Z 
2025-01-14T13:16:42.4715740Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4716040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4716040Z 
2025-01-14T13:16:42.4716100Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4716230Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4716300Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4716450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4716520Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4716590Z >       sim.run_final()
2025-01-14T13:16:42.4716590Z 
2025-01-14T13:16:42.4716650Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4716740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4716810Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4716930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4717000Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4717270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4717380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4717380Z 
2025-01-14T13:16:42.4717610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4717790Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4717970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4718190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4718320Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4718670Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4718670Z 
2025-01-14T13:16:42.4718840Z     def initialize_transport_state(
2025-01-14T13:16:42.4718980Z         self,
2025-01-14T13:16:42.4719120Z         simulation_state,
2025-01-14T13:16:42.4719170Z         opacity_state,
2025-01-14T13:16:42.4719290Z         macro_atom_state,
2025-01-14T13:16:42.4721790Z         plasma,
2025-01-14T13:16:42.4721900Z         no_of_packets,
2025-01-14T13:16:42.4722020Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4722130Z         iteration=0,
2025-01-14T13:16:42.4722180Z     ):
2025-01-14T13:16:42.4722390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4722530Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4722640Z         else:
2025-01-14T13:16:42.4722690Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4722820Z     
2025-01-14T13:16:42.4723020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4723100Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4723280Z         )
2025-01-14T13:16:42.4723450Z     
2025-01-14T13:16:42.4723620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4723780Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4723960Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4724010Z         else:
2025-01-14T13:16:42.4724120Z             continuum_state = None
2025-01-14T13:16:42.4724270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4724430Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4724580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4724670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4724800Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4724950Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4725060Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4725120Z         ).to_numba(
2025-01-14T13:16:42.4725290Z             macro_atom_state,
2025-01-14T13:16:42.4725420Z             self.line_interaction_type,
2025-01-14T13:16:42.4725530Z         )
2025-01-14T13:16:42.4725620Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4725940Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4726090Z         ]
2025-01-14T13:16:42.4726410Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4726410Z 
2025-01-14T13:16:42.4726590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4726720Z _____________________ ERROR at setup of test_hdf_density_0 _____________________
2025-01-14T13:16:42.4726720Z 
2025-01-14T13:16:42.4727410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4728020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4728030Z 
2025-01-14T13:16:42.4728170Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4728350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4728440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4728670Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4728800Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4728910Z >       sim.run_final()
2025-01-14T13:16:42.4728920Z 
2025-01-14T13:16:42.4728970Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4729120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4729260Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4729430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4729510Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4729700Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4729840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4729840Z 
2025-01-14T13:16:42.4730130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4730290Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4730550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4730850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4731050Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4731230Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4731460Z 
2025-01-14T13:16:42.4731580Z     def initialize_transport_state(
2025-01-14T13:16:42.4731630Z         self,
2025-01-14T13:16:42.4731740Z         simulation_state,
2025-01-14T13:16:42.4731840Z         opacity_state,
2025-01-14T13:16:42.4731950Z         macro_atom_state,
2025-01-14T13:16:42.4732000Z         plasma,
2025-01-14T13:16:42.4732100Z         no_of_packets,
2025-01-14T13:16:42.4732220Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4732340Z         iteration=0,
2025-01-14T13:16:42.4732400Z     ):
2025-01-14T13:16:42.4732580Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4732710Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4732820Z         else:
2025-01-14T13:16:42.4732870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4732980Z     
2025-01-14T13:16:42.4733150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4733230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4733420Z         )
2025-01-14T13:16:42.4733460Z     
2025-01-14T13:16:42.4733610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4733760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4733930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4733980Z         else:
2025-01-14T13:16:42.4734100Z             continuum_state = None
2025-01-14T13:16:42.4734230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4734390Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4734510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4734610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4734760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4734890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4735020Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4735070Z         ).to_numba(
2025-01-14T13:16:42.4735190Z             macro_atom_state,
2025-01-14T13:16:42.4735390Z             self.line_interaction_type,
2025-01-14T13:16:42.4735520Z         )
2025-01-14T13:16:42.4735600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4735920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4736050Z         ]
2025-01-14T13:16:42.4736350Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4736350Z 
2025-01-14T13:16:42.4736520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4736650Z ______________________ ERROR at setup of test_hdf_time_0 _______________________
2025-01-14T13:16:42.4736650Z 
2025-01-14T13:16:42.4737230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4737570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4737570Z 
2025-01-14T13:16:42.4737690Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4737880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4737950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4738140Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4738260Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4738370Z >       sim.run_final()
2025-01-14T13:16:42.4738370Z 
2025-01-14T13:16:42.4738720Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4738880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4739010Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4739300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4739370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4739910Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4740060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4740060Z 
2025-01-14T13:16:42.4740380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4740540Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4740830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4741140Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4741310Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4741470Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4741480Z 
2025-01-14T13:16:42.4741600Z     def initialize_transport_state(
2025-01-14T13:16:42.4741640Z         self,
2025-01-14T13:16:42.4741750Z         simulation_state,
2025-01-14T13:16:42.4741850Z         opacity_state,
2025-01-14T13:16:42.4741940Z         macro_atom_state,
2025-01-14T13:16:42.4742000Z         plasma,
2025-01-14T13:16:42.4742100Z         no_of_packets,
2025-01-14T13:16:42.4742220Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4742310Z         iteration=0,
2025-01-14T13:16:42.4742360Z     ):
2025-01-14T13:16:42.4742510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4742630Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4742730Z         else:
2025-01-14T13:16:42.4742790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4742890Z     
2025-01-14T13:16:42.4743050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4743130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4743300Z         )
2025-01-14T13:16:42.4743440Z     
2025-01-14T13:16:42.4743610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4743750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4743920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4743970Z         else:
2025-01-14T13:16:42.4744080Z             continuum_state = None
2025-01-14T13:16:42.4744220Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4744380Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4744510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4744590Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4744710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4744830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4744960Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4745010Z         ).to_numba(
2025-01-14T13:16:42.4745120Z             macro_atom_state,
2025-01-14T13:16:42.4745230Z             self.line_interaction_type,
2025-01-14T13:16:42.4745350Z         )
2025-01-14T13:16:42.4745420Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4745740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4745920Z         ]
2025-01-14T13:16:42.4746230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4746230Z 
2025-01-14T13:16:42.4746410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4746550Z _____________ ERROR at setup of test_opacity_solver[scatter-False] _____________
2025-01-14T13:16:42.4746550Z 
2025-01-14T13:16:42.4747110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4747540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4747550Z 
2025-01-14T13:16:42.4747670Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4747850Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4748020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4748220Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4748330Z >       sim.iterate(10)
2025-01-14T13:16:42.4748330Z 
2025-01-14T13:16:42.4748490Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4748600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4748740Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4748960Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4749110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4749110Z 
2025-01-14T13:16:42.4749430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11b3720f0>
2025-01-14T13:16:42.4749630Z simulation_state = <tardis.model.base.SimulationState object at 0x11b464890>
2025-01-14T13:16:42.4749910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14662ed50>
2025-01-14T13:16:42.4750130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3097f23f0>
2025-01-14T13:16:42.4750320Z plasma = <tardis.plasma.base.BasePlasma object at 0x1465682f0>
2025-01-14T13:16:42.4750480Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4750490Z 
2025-01-14T13:16:42.4750610Z     def initialize_transport_state(
2025-01-14T13:16:42.4750650Z         self,
2025-01-14T13:16:42.4750780Z         simulation_state,
2025-01-14T13:16:42.4750970Z         opacity_state,
2025-01-14T13:16:42.4751080Z         macro_atom_state,
2025-01-14T13:16:42.4751180Z         plasma,
2025-01-14T13:16:42.4751230Z         no_of_packets,
2025-01-14T13:16:42.4751350Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4751450Z         iteration=0,
2025-01-14T13:16:42.4751570Z     ):
2025-01-14T13:16:42.4751680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4751840Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4751950Z         else:
2025-01-14T13:16:42.4752070Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4752110Z     
2025-01-14T13:16:42.4752260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4752390Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4752490Z         )
2025-01-14T13:16:42.4752590Z     
2025-01-14T13:16:42.4752690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4752830Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4753000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4753050Z         else:
2025-01-14T13:16:42.4753180Z             continuum_state = None
2025-01-14T13:16:42.4753320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4753460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4753590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4753760Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4753840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4753970Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4754080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4754180Z         ).to_numba(
2025-01-14T13:16:42.4754230Z             macro_atom_state,
2025-01-14T13:16:42.4754340Z             self.line_interaction_type,
2025-01-14T13:16:42.4754520Z         )
2025-01-14T13:16:42.4754650Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4754870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4754960Z         ]
2025-01-14T13:16:42.4755250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4755260Z 
2025-01-14T13:16:42.4755430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4755640Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.4756010Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.4756440Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.4756580Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.4757170Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.4757390Z ____________ ERROR at setup of test_opacity_solver[macroatom-False] ____________
2025-01-14T13:16:42.4757390Z 
2025-01-14T13:16:42.4757910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4758270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4758280Z 
2025-01-14T13:16:42.4758390Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4758570Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4758650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4759090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4759210Z >       sim.iterate(10)
2025-01-14T13:16:42.4759210Z 
2025-01-14T13:16:42.4759340Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4759480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4759550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4759740Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4759890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4759890Z 
2025-01-14T13:16:42.4760170Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11b3720f0>
2025-01-14T13:16:42.4760330Z simulation_state = <tardis.model.base.SimulationState object at 0x11b464890>
2025-01-14T13:16:42.4760570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14662ed50>
2025-01-14T13:16:42.4760880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3097f23f0>
2025-01-14T13:16:42.4761070Z plasma = <tardis.plasma.base.BasePlasma object at 0x1465682f0>
2025-01-14T13:16:42.4761170Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4761180Z 
2025-01-14T13:16:42.4761320Z     def initialize_transport_state(
2025-01-14T13:16:42.4761430Z         self,
2025-01-14T13:16:42.4761540Z         simulation_state,
2025-01-14T13:16:42.4761660Z         opacity_state,
2025-01-14T13:16:42.4761710Z         macro_atom_state,
2025-01-14T13:16:42.4761820Z         plasma,
2025-01-14T13:16:42.4762810Z         no_of_packets,
2025-01-14T13:16:42.4762970Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4763090Z         iteration=0,
2025-01-14T13:16:42.4763180Z     ):
2025-01-14T13:16:42.4763340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4763910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4764060Z         else:
2025-01-14T13:16:42.4764170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4764280Z     
2025-01-14T13:16:42.4764390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4764530Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4764630Z         )
2025-01-14T13:16:42.4764740Z     
2025-01-14T13:16:42.4764840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4764990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4765170Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4765270Z         else:
2025-01-14T13:16:42.4765400Z             continuum_state = None
2025-01-14T13:16:42.4765480Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4765620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4765740Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4765880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4765960Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4766080Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4766210Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4766320Z         ).to_numba(
2025-01-14T13:16:42.4766370Z             macro_atom_state,
2025-01-14T13:16:42.4766570Z             self.line_interaction_type,
2025-01-14T13:16:42.4766680Z         )
2025-01-14T13:16:42.4766820Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4767090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4767130Z         ]
2025-01-14T13:16:42.4767430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4767440Z 
2025-01-14T13:16:42.4767630Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4767940Z ____________ ERROR at setup of test_opacity_solver[macroatom-True] _____________
2025-01-14T13:16:42.4767950Z 
2025-01-14T13:16:42.4768530Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4768820Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4768820Z 
2025-01-14T13:16:42.4768940Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4769140Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4769280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4769420Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4769550Z >       sim.iterate(10)
2025-01-14T13:16:42.4769560Z 
2025-01-14T13:16:42.4769690Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4769840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4769970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4770090Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4770240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4770240Z 
2025-01-14T13:16:42.4770440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11b3720f0>
2025-01-14T13:16:42.4770740Z simulation_state = <tardis.model.base.SimulationState object at 0x11b464890>
2025-01-14T13:16:42.4770970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14662ed50>
2025-01-14T13:16:42.4771190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3097f23f0>
2025-01-14T13:16:42.4771450Z plasma = <tardis.plasma.base.BasePlasma object at 0x1465682f0>
2025-01-14T13:16:42.4771610Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4771610Z 
2025-01-14T13:16:42.4771750Z     def initialize_transport_state(
2025-01-14T13:16:42.4771790Z         self,
2025-01-14T13:16:42.4771920Z         simulation_state,
2025-01-14T13:16:42.4772010Z         opacity_state,
2025-01-14T13:16:42.4772120Z         macro_atom_state,
2025-01-14T13:16:42.4772170Z         plasma,
2025-01-14T13:16:42.4772280Z         no_of_packets,
2025-01-14T13:16:42.4772690Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4772820Z         iteration=0,
2025-01-14T13:16:42.4772860Z     ):
2025-01-14T13:16:42.4773030Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4773170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4773280Z         else:
2025-01-14T13:16:42.4773420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4773470Z     
2025-01-14T13:16:42.4773720Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4773870Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4773980Z         )
2025-01-14T13:16:42.4774020Z     
2025-01-14T13:16:42.4774200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4774350Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4774540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4774690Z         else:
2025-01-14T13:16:42.4774770Z             continuum_state = None
2025-01-14T13:16:42.4774930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4775060Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4775200Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4775280Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4775420Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4775710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4775890Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4775960Z         ).to_numba(
2025-01-14T13:16:42.4776100Z             macro_atom_state,
2025-01-14T13:16:42.4776260Z             self.line_interaction_type,
2025-01-14T13:16:42.4776390Z         )
2025-01-14T13:16:42.4776480Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4776840Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4776970Z         ]
2025-01-14T13:16:42.4777280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4777290Z 
2025-01-14T13:16:42.4777490Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4777640Z ___________ ERROR at setup of test_opacity_solver[downbranch-False] ____________
2025-01-14T13:16:42.4777640Z 
2025-01-14T13:16:42.4778240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4778630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4778630Z 
2025-01-14T13:16:42.4778770Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4778950Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4779030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4779230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4779350Z >       sim.iterate(10)
2025-01-14T13:16:42.4779360Z 
2025-01-14T13:16:42.4779490Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4779710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4779850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4780040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4780190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4780200Z 
2025-01-14T13:16:42.4780490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11b3720f0>
2025-01-14T13:16:42.4780660Z simulation_state = <tardis.model.base.SimulationState object at 0x11b464890>
2025-01-14T13:16:42.4780890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14662ed50>
2025-01-14T13:16:42.4781110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3097f23f0>
2025-01-14T13:16:42.4781370Z plasma = <tardis.plasma.base.BasePlasma object at 0x1465682f0>
2025-01-14T13:16:42.4781530Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4781530Z 
2025-01-14T13:16:42.4781600Z     def initialize_transport_state(
2025-01-14T13:16:42.4781710Z         self,
2025-01-14T13:16:42.4781830Z         simulation_state,
2025-01-14T13:16:42.4781960Z         opacity_state,
2025-01-14T13:16:42.4782010Z         macro_atom_state,
2025-01-14T13:16:42.4782120Z         plasma,
2025-01-14T13:16:42.4782240Z         no_of_packets,
2025-01-14T13:16:42.4782370Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4782420Z         iteration=0,
2025-01-14T13:16:42.4782520Z     ):
2025-01-14T13:16:42.4782670Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4782800Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4782850Z         else:
2025-01-14T13:16:42.4782970Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4783070Z     
2025-01-14T13:16:42.4783240Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4783370Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4783410Z         )
2025-01-14T13:16:42.4783660Z     
2025-01-14T13:16:42.4783880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4784040Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4784160Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4784270Z         else:
2025-01-14T13:16:42.4784390Z             continuum_state = None
2025-01-14T13:16:42.4784530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4784720Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4784800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4785010Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4785190Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4785330Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4785400Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4785520Z         ).to_numba(
2025-01-14T13:16:42.4785640Z             macro_atom_state,
2025-01-14T13:16:42.4785790Z             self.line_interaction_type,
2025-01-14T13:16:42.4785840Z         )
2025-01-14T13:16:42.4786020Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4786320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4786450Z         ]
2025-01-14T13:16:42.4786700Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4786700Z 
2025-01-14T13:16:42.4786910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4787140Z ____________ ERROR at setup of test_opacity_solver[downbranch-True] ____________
2025-01-14T13:16:42.4787150Z 
2025-01-14T13:16:42.4787760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4788220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4788220Z 
2025-01-14T13:16:42.4788360Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4788490Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4788640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4788840Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4788960Z >       sim.iterate(10)
2025-01-14T13:16:42.4788970Z 
2025-01-14T13:16:42.4789040Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4805620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4805800Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4805970Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4806060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4806060Z 
2025-01-14T13:16:42.4806280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11b3720f0>
2025-01-14T13:16:42.4806440Z simulation_state = <tardis.model.base.SimulationState object at 0x11b464890>
2025-01-14T13:16:42.4806620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14662ed50>
2025-01-14T13:16:42.4806830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3097f23f0>
2025-01-14T13:16:42.4806950Z plasma = <tardis.plasma.base.BasePlasma object at 0x1465682f0>
2025-01-14T13:16:42.4807060Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4807060Z 
2025-01-14T13:16:42.4807120Z     def initialize_transport_state(
2025-01-14T13:16:42.4807180Z         self,
2025-01-14T13:16:42.4807230Z         simulation_state,
2025-01-14T13:16:42.4807790Z         opacity_state,
2025-01-14T13:16:42.4807850Z         macro_atom_state,
2025-01-14T13:16:42.4807900Z         plasma,
2025-01-14T13:16:42.4807950Z         no_of_packets,
2025-01-14T13:16:42.4808010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4808060Z         iteration=0,
2025-01-14T13:16:42.4808100Z     ):
2025-01-14T13:16:42.4808200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4808270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4808330Z         else:
2025-01-14T13:16:42.4808380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4808420Z     
2025-01-14T13:16:42.4808530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4808600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4808640Z         )
2025-01-14T13:16:42.4808680Z     
2025-01-14T13:16:42.4808790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4808890Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4809020Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4809060Z         else:
2025-01-14T13:16:42.4809120Z             continuum_state = None
2025-01-14T13:16:42.4809200Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4809280Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4809350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4809430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4809500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4809570Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4809640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4809680Z         ).to_numba(
2025-01-14T13:16:42.4809740Z             macro_atom_state,
2025-01-14T13:16:42.4809810Z             self.line_interaction_type,
2025-01-14T13:16:42.4810230Z         )
2025-01-14T13:16:42.4810310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4810560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4810620Z         ]
2025-01-14T13:16:42.4810870Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4810870Z 
2025-01-14T13:16:42.4810980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4811130Z _________ ERROR at setup of test_opacity_state_to_numba[scatter-False] _________
2025-01-14T13:16:42.4811130Z 
2025-01-14T13:16:42.4811700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4811990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4812000Z 
2025-01-14T13:16:42.4812060Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4812180Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4812260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4812410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4812470Z >       sim.iterate(10)
2025-01-14T13:16:42.4812470Z 
2025-01-14T13:16:42.4812530Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4812620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4812690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4812810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4812890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4812900Z 
2025-01-14T13:16:42.4813200Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c95fd10>
2025-01-14T13:16:42.4813360Z simulation_state = <tardis.model.base.SimulationState object at 0x30979d400>
2025-01-14T13:16:42.4813540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x11b34f6e0>
2025-01-14T13:16:42.4813750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1467ccd10>
2025-01-14T13:16:42.4813870Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b2c0e90>
2025-01-14T13:16:42.4813970Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4813980Z 
2025-01-14T13:16:42.4814040Z     def initialize_transport_state(
2025-01-14T13:16:42.4814080Z         self,
2025-01-14T13:16:42.4814130Z         simulation_state,
2025-01-14T13:16:42.4814180Z         opacity_state,
2025-01-14T13:16:42.4814230Z         macro_atom_state,
2025-01-14T13:16:42.4814280Z         plasma,
2025-01-14T13:16:42.4814330Z         no_of_packets,
2025-01-14T13:16:42.4814390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4814440Z         iteration=0,
2025-01-14T13:16:42.4814480Z     ):
2025-01-14T13:16:42.4814580Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4814640Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4814690Z         else:
2025-01-14T13:16:42.4814740Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4814780Z     
2025-01-14T13:16:42.4814890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4814960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4815000Z         )
2025-01-14T13:16:42.4815040Z     
2025-01-14T13:16:42.4815140Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4815220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4815340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4815450Z         else:
2025-01-14T13:16:42.4815510Z             continuum_state = None
2025-01-14T13:16:42.4815590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4815670Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4815730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4815820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4815890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4815960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4816020Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4816070Z         ).to_numba(
2025-01-14T13:16:42.4816120Z             macro_atom_state,
2025-01-14T13:16:42.4816180Z             self.line_interaction_type,
2025-01-14T13:16:42.4816220Z         )
2025-01-14T13:16:42.4816290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4816550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4816610Z         ]
2025-01-14T13:16:42.4816900Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4816910Z 
2025-01-14T13:16:42.4817050Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4817230Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.4817610Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.4818020Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.4818170Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.4818630Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.4818930Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-False] ________
2025-01-14T13:16:42.4818940Z 
2025-01-14T13:16:42.4819520Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4819830Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4819840Z 
2025-01-14T13:16:42.4819920Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4820070Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4820140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4820320Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4820380Z >       sim.iterate(10)
2025-01-14T13:16:42.4820380Z 
2025-01-14T13:16:42.4820460Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4820560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4820640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4820780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4820870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4820870Z 
2025-01-14T13:16:42.4821110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c95fd10>
2025-01-14T13:16:42.4821260Z simulation_state = <tardis.model.base.SimulationState object at 0x30979d400>
2025-01-14T13:16:42.4821460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x11b34f6e0>
2025-01-14T13:16:42.4821700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1467ccd10>
2025-01-14T13:16:42.4821900Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b2c0e90>
2025-01-14T13:16:42.4822030Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4822030Z 
2025-01-14T13:16:42.4822090Z     def initialize_transport_state(
2025-01-14T13:16:42.4822140Z         self,
2025-01-14T13:16:42.4822190Z         simulation_state,
2025-01-14T13:16:42.4822240Z         opacity_state,
2025-01-14T13:16:42.4822290Z         macro_atom_state,
2025-01-14T13:16:42.4822340Z         plasma,
2025-01-14T13:16:42.4822390Z         no_of_packets,
2025-01-14T13:16:42.4822450Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4822490Z         iteration=0,
2025-01-14T13:16:42.4822540Z     ):
2025-01-14T13:16:42.4822630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4822700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4822740Z         else:
2025-01-14T13:16:42.4822800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4822850Z     
2025-01-14T13:16:42.4828330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4828730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4828920Z         )
2025-01-14T13:16:42.4829090Z     
2025-01-14T13:16:42.4829390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4829670Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4830010Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4830160Z         else:
2025-01-14T13:16:42.4830340Z             continuum_state = None
2025-01-14T13:16:42.4830560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4830800Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4830990Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4831220Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4831500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4832390Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4832630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4832790Z         ).to_numba(
2025-01-14T13:16:42.4832950Z             macro_atom_state,
2025-01-14T13:16:42.4833140Z             self.line_interaction_type,
2025-01-14T13:16:42.4833280Z         )
2025-01-14T13:16:42.4833530Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4834140Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4834290Z         ]
2025-01-14T13:16:42.4834960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4834970Z 
2025-01-14T13:16:42.4837150Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4837380Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-True] _________
2025-01-14T13:16:42.4837400Z 
2025-01-14T13:16:42.4837960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4838280Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4838290Z 
2025-01-14T13:16:42.4838360Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4838500Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4838580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4838740Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4838800Z >       sim.iterate(10)
2025-01-14T13:16:42.4838810Z 
2025-01-14T13:16:42.4838880Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4839290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4839370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4839500Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4839590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4839590Z 
2025-01-14T13:16:42.4839820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c95fd10>
2025-01-14T13:16:42.4839980Z simulation_state = <tardis.model.base.SimulationState object at 0x30979d400>
2025-01-14T13:16:42.4840170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x11b34f6e0>
2025-01-14T13:16:42.4843230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1467ccd10>
2025-01-14T13:16:42.4843390Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b2c0e90>
2025-01-14T13:16:42.4843510Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4843510Z 
2025-01-14T13:16:42.4843580Z     def initialize_transport_state(
2025-01-14T13:16:42.4843630Z         self,
2025-01-14T13:16:42.4843690Z         simulation_state,
2025-01-14T13:16:42.4843740Z         opacity_state,
2025-01-14T13:16:42.4843790Z         macro_atom_state,
2025-01-14T13:16:42.4843840Z         plasma,
2025-01-14T13:16:42.4843890Z         no_of_packets,
2025-01-14T13:16:42.4843950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4844000Z         iteration=0,
2025-01-14T13:16:42.4849190Z     ):
2025-01-14T13:16:42.4849310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4849400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4849470Z         else:
2025-01-14T13:16:42.4849530Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4849580Z     
2025-01-14T13:16:42.4849690Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4849770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4849810Z         )
2025-01-14T13:16:42.4850450Z     
2025-01-14T13:16:42.4857520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4857640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4857780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4857820Z         else:
2025-01-14T13:16:42.4857880Z             continuum_state = None
2025-01-14T13:16:42.4857960Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4858050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4858110Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4858200Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4858270Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4858340Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4858410Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4858470Z         ).to_numba(
2025-01-14T13:16:42.4858530Z             macro_atom_state,
2025-01-14T13:16:42.4858590Z             self.line_interaction_type,
2025-01-14T13:16:42.4858640Z         )
2025-01-14T13:16:42.4858740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4858970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4859010Z         ]
2025-01-14T13:16:42.4859280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4859290Z 
2025-01-14T13:16:42.4859410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4859560Z _______ ERROR at setup of test_opacity_state_to_numba[downbranch-False] ________
2025-01-14T13:16:42.4859570Z 
2025-01-14T13:16:42.4860090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4860720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4860720Z 
2025-01-14T13:16:42.4860790Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4860910Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4860990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4861120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4861170Z >       sim.iterate(10)
2025-01-14T13:16:42.4861180Z 
2025-01-14T13:16:42.4861240Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4861330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4861400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4861530Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4861620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4861620Z 
2025-01-14T13:16:42.4861830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c95fd10>
2025-01-14T13:16:42.4861990Z simulation_state = <tardis.model.base.SimulationState object at 0x30979d400>
2025-01-14T13:16:42.4862160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x11b34f6e0>
2025-01-14T13:16:42.4862380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1467ccd10>
2025-01-14T13:16:42.4862510Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b2c0e90>
2025-01-14T13:16:42.4862610Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4862620Z 
2025-01-14T13:16:42.4862680Z     def initialize_transport_state(
2025-01-14T13:16:42.4862730Z         self,
2025-01-14T13:16:42.4862780Z         simulation_state,
2025-01-14T13:16:42.4862910Z         opacity_state,
2025-01-14T13:16:42.4862970Z         macro_atom_state,
2025-01-14T13:16:42.4863020Z         plasma,
2025-01-14T13:16:42.4863060Z         no_of_packets,
2025-01-14T13:16:42.4863120Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4863170Z         iteration=0,
2025-01-14T13:16:42.4863210Z     ):
2025-01-14T13:16:42.4863310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4863380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4863440Z         else:
2025-01-14T13:16:42.4863490Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4863540Z     
2025-01-14T13:16:42.4863650Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4863720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4863760Z         )
2025-01-14T13:16:42.4863800Z     
2025-01-14T13:16:42.4863900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4864000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4864130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4864190Z         else:
2025-01-14T13:16:42.4864250Z             continuum_state = None
2025-01-14T13:16:42.4864320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4864410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4864470Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4864560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4864630Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4864700Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4864760Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4864810Z         ).to_numba(
2025-01-14T13:16:42.4864860Z             macro_atom_state,
2025-01-14T13:16:42.4865010Z             self.line_interaction_type,
2025-01-14T13:16:42.4865060Z         )
2025-01-14T13:16:42.4865160Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4865390Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4865430Z         ]
2025-01-14T13:16:42.4865680Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4865690Z 
2025-01-14T13:16:42.4865800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4865940Z ________ ERROR at setup of test_opacity_state_to_numba[downbranch-True] ________
2025-01-14T13:16:42.4865950Z 
2025-01-14T13:16:42.4866450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4866750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4866750Z 
2025-01-14T13:16:42.4866810Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4866940Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4867020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4867150Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4867210Z >       sim.iterate(10)
2025-01-14T13:16:42.4867210Z 
2025-01-14T13:16:42.4867280Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4867370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4867430Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4867550Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4867640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4867640Z 
2025-01-14T13:16:42.4867940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c95fd10>
2025-01-14T13:16:42.4868110Z simulation_state = <tardis.model.base.SimulationState object at 0x30979d400>
2025-01-14T13:16:42.4868280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x11b34f6e0>
2025-01-14T13:16:42.4868500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1467ccd10>
2025-01-14T13:16:42.4868620Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b2c0e90>
2025-01-14T13:16:42.4868730Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4868730Z 
2025-01-14T13:16:42.4868800Z     def initialize_transport_state(
2025-01-14T13:16:42.4868840Z         self,
2025-01-14T13:16:42.4868890Z         simulation_state,
2025-01-14T13:16:42.4868940Z         opacity_state,
2025-01-14T13:16:42.4868990Z         macro_atom_state,
2025-01-14T13:16:42.4869040Z         plasma,
2025-01-14T13:16:42.4869090Z         no_of_packets,
2025-01-14T13:16:42.4869150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4869200Z         iteration=0,
2025-01-14T13:16:42.4869240Z     ):
2025-01-14T13:16:42.4869340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4869400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4869450Z         else:
2025-01-14T13:16:42.4869510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4869550Z     
2025-01-14T13:16:42.4869650Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4869720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4869760Z         )
2025-01-14T13:16:42.4869810Z     
2025-01-14T13:16:42.4869900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4869990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4870110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4870230Z         else:
2025-01-14T13:16:42.4870290Z             continuum_state = None
2025-01-14T13:16:42.4870390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4870480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4870540Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4870620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4870710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4870780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4870850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4870890Z         ).to_numba(
2025-01-14T13:16:42.4870940Z             macro_atom_state,
2025-01-14T13:16:42.4871000Z             self.line_interaction_type,
2025-01-14T13:16:42.4871050Z         )
2025-01-14T13:16:42.4871120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4871340Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4871390Z         ]
2025-01-14T13:16:42.4871640Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4871640Z 
2025-01-14T13:16:42.4871770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4871920Z ____________ ERROR at setup of test_calculate_sobolev_line_opacity _____________
2025-01-14T13:16:42.4871920Z 
2025-01-14T13:16:42.4872420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4872710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4872720Z 
2025-01-14T13:16:42.4872790Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4873020Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4873120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4873260Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4873310Z >       sim.iterate(10)
2025-01-14T13:16:42.4873310Z 
2025-01-14T13:16:42.4873370Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4873460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4873530Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4873650Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4873730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4873740Z 
2025-01-14T13:16:42.4873950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31baceff0>
2025-01-14T13:16:42.4874110Z simulation_state = <tardis.model.base.SimulationState object at 0x11b3fac30>
2025-01-14T13:16:42.4874290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31dc592b0>
2025-01-14T13:16:42.4874500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310e547d0>
2025-01-14T13:16:42.4874620Z plasma = <tardis.plasma.base.BasePlasma object at 0x3097c5580>
2025-01-14T13:16:42.4874730Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4874730Z 
2025-01-14T13:16:42.4874790Z     def initialize_transport_state(
2025-01-14T13:16:42.4874840Z         self,
2025-01-14T13:16:42.4874890Z         simulation_state,
2025-01-14T13:16:42.4874950Z         opacity_state,
2025-01-14T13:16:42.4875010Z         macro_atom_state,
2025-01-14T13:16:42.4875050Z         plasma,
2025-01-14T13:16:42.4875100Z         no_of_packets,
2025-01-14T13:16:42.4875160Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4875270Z         iteration=0,
2025-01-14T13:16:42.4875310Z     ):
2025-01-14T13:16:42.4875400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4875470Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4875520Z         else:
2025-01-14T13:16:42.4875570Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4875610Z     
2025-01-14T13:16:42.4875720Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4875800Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4875840Z         )
2025-01-14T13:16:42.4875880Z     
2025-01-14T13:16:42.4875980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4876070Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4876190Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4876230Z         else:
2025-01-14T13:16:42.4876300Z             continuum_state = None
2025-01-14T13:16:42.4876370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4876460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4876520Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4876610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4876680Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4876750Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4876810Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4876850Z         ).to_numba(
2025-01-14T13:16:42.4876900Z             macro_atom_state,
2025-01-14T13:16:42.4876970Z             self.line_interaction_type,
2025-01-14T13:16:42.4877010Z         )
2025-01-14T13:16:42.4877080Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4877300Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4877340Z         ]
2025-01-14T13:16:42.4877830Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4877840Z 
2025-01-14T13:16:42.4877970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4878100Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.4878470Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.4878820Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.4878940Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.4879350Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.4879480Z ________________ ERROR at setup of test_calculate_beta_sobolevs ________________
2025-01-14T13:16:42.4879490Z 
2025-01-14T13:16:42.4880000Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4880290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4880290Z 
2025-01-14T13:16:42.4880370Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.4880490Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4880560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4880700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4880750Z >       sim.iterate(10)
2025-01-14T13:16:42.4880750Z 
2025-01-14T13:16:42.4880820Z tardis/opacities/tests/conftest.py:10: 
2025-01-14T13:16:42.4881210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4881280Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4881410Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4881490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4881490Z 
2025-01-14T13:16:42.4881710Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31baceff0>
2025-01-14T13:16:42.4881870Z simulation_state = <tardis.model.base.SimulationState object at 0x11b3fac30>
2025-01-14T13:16:42.4882040Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31dc592b0>
2025-01-14T13:16:42.4882270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310e547d0>
2025-01-14T13:16:42.4882380Z plasma = <tardis.plasma.base.BasePlasma object at 0x3097c5580>
2025-01-14T13:16:42.4882490Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.4882490Z 
2025-01-14T13:16:42.4882560Z     def initialize_transport_state(
2025-01-14T13:16:42.4882610Z         self,
2025-01-14T13:16:42.4882660Z         simulation_state,
2025-01-14T13:16:42.4882710Z         opacity_state,
2025-01-14T13:16:42.4882760Z         macro_atom_state,
2025-01-14T13:16:42.4882800Z         plasma,
2025-01-14T13:16:42.4882850Z         no_of_packets,
2025-01-14T13:16:42.4882910Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4882950Z         iteration=0,
2025-01-14T13:16:42.4882990Z     ):
2025-01-14T13:16:42.4883200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4883270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4883310Z         else:
2025-01-14T13:16:42.4883360Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4883410Z     
2025-01-14T13:16:42.4883510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4883590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4883630Z         )
2025-01-14T13:16:42.4883760Z     
2025-01-14T13:16:42.4883870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4883950Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4884070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4884120Z         else:
2025-01-14T13:16:42.4884180Z             continuum_state = None
2025-01-14T13:16:42.4884250Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4884330Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4884400Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4884480Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4884550Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4884620Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4884680Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4884730Z         ).to_numba(
2025-01-14T13:16:42.4884780Z             macro_atom_state,
2025-01-14T13:16:42.4884840Z             self.line_interaction_type,
2025-01-14T13:16:42.4884880Z         )
2025-01-14T13:16:42.4884960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4885170Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4885220Z         ]
2025-01-14T13:16:42.4885460Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4885470Z 
2025-01-14T13:16:42.4885590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4885720Z ______________ ERROR at setup of test_hdf_plasma[number_density] _______________
2025-01-14T13:16:42.4885730Z 
2025-01-14T13:16:42.4886230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4886570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4886580Z 
2025-01-14T13:16:42.4886640Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4886770Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4886840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4886980Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4887040Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4887090Z >       sim.run_final()
2025-01-14T13:16:42.4887090Z 
2025-01-14T13:16:42.4887150Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4887240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4887320Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4887430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4907360Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4907560Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4907660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4907660Z 
2025-01-14T13:16:42.4907890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4908060Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4908250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4908480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4908620Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4908760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4909110Z 
2025-01-14T13:16:42.4909190Z     def initialize_transport_state(
2025-01-14T13:16:42.4909240Z         self,
2025-01-14T13:16:42.4909300Z         simulation_state,
2025-01-14T13:16:42.4909350Z         opacity_state,
2025-01-14T13:16:42.4909400Z         macro_atom_state,
2025-01-14T13:16:42.4909450Z         plasma,
2025-01-14T13:16:42.4909500Z         no_of_packets,
2025-01-14T13:16:42.4909570Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.4909620Z         iteration=0,
2025-01-14T13:16:42.4909660Z     ):
2025-01-14T13:16:42.4909770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.4909850Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.4909890Z         else:
2025-01-14T13:16:42.4909950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.4910000Z     
2025-01-14T13:16:42.4910110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.4910200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.4910250Z         )
2025-01-14T13:16:42.4910300Z     
2025-01-14T13:16:42.4910420Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.4910510Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.4910640Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.4910690Z         else:
2025-01-14T13:16:42.4910740Z             continuum_state = None
2025-01-14T13:16:42.4910820Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.4910910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.4910990Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.4911080Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.4911160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.4911230Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.4911450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.4911500Z         ).to_numba(
2025-01-14T13:16:42.4911560Z             macro_atom_state,
2025-01-14T13:16:42.4911620Z             self.line_interaction_type,
2025-01-14T13:16:42.4911670Z         )
2025-01-14T13:16:42.4911750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.4911970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.4912020Z         ]
2025-01-14T13:16:42.4912260Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.4912270Z 
2025-01-14T13:16:42.4912390Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.4912510Z _________________ ERROR at setup of test_hdf_plasma[beta_rad] __________________
2025-01-14T13:16:42.4912520Z 
2025-01-14T13:16:42.4913040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.4913340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.4913350Z 
2025-01-14T13:16:42.4913410Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.4913540Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.4913610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.4913760Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.4913820Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.4913880Z >       sim.run_final()
2025-01-14T13:16:42.4913880Z 
2025-01-14T13:16:42.4913940Z tardis/conftest.py:233: 
2025-01-14T13:16:42.4914030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4914180Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.4914320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.4914390Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.4914510Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.4914610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.4914610Z 
2025-01-14T13:16:42.4914820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.4914990Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.4915160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.4915380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.4915500Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.4915620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.4915620Z 
2025-01-14T13:16:42.4915690Z     def initialize_transport_state(
2025-01-14T13:16:42.4915740Z         self,
2025-01-14T13:16:42.5062440Z         simulation_state,
2025-01-14T13:16:42.5062770Z         opacity_state,
2025-01-14T13:16:42.5062830Z         macro_atom_state,
2025-01-14T13:16:42.5062880Z         plasma,
2025-01-14T13:16:42.5062930Z         no_of_packets,
2025-01-14T13:16:42.5062990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5063050Z         iteration=0,
2025-01-14T13:16:42.5063090Z     ):
2025-01-14T13:16:42.5063210Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5063290Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5063340Z         else:
2025-01-14T13:16:42.5063400Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5063440Z     
2025-01-14T13:16:42.5063950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5064040Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5064080Z         )
2025-01-14T13:16:42.5064120Z     
2025-01-14T13:16:42.5064230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5064320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5064450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5064500Z         else:
2025-01-14T13:16:42.5064560Z             continuum_state = None
2025-01-14T13:16:42.5064640Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5064730Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5064790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5064880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5064950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5065030Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5065100Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5065160Z         ).to_numba(
2025-01-14T13:16:42.5065230Z             macro_atom_state,
2025-01-14T13:16:42.5065300Z             self.line_interaction_type,
2025-01-14T13:16:42.5065360Z         )
2025-01-14T13:16:42.5065440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5065680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5065720Z         ]
2025-01-14T13:16:42.5065980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5065980Z 
2025-01-14T13:16:42.5066100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5066240Z ______ ERROR at setup of test_hdf_plasma[general_level_boltzmann_factor] _______
2025-01-14T13:16:42.5066250Z 
2025-01-14T13:16:42.5067140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5067450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5067450Z 
2025-01-14T13:16:42.5067520Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5067640Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5067720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5067860Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5067930Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5067980Z >       sim.run_final()
2025-01-14T13:16:42.5067990Z 
2025-01-14T13:16:42.5068050Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5068140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5068230Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5068340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5068410Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5068540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5068620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5068630Z 
2025-01-14T13:16:42.5068840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5069000Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5069180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5069400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5069950Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5070060Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5070070Z 
2025-01-14T13:16:42.5070130Z     def initialize_transport_state(
2025-01-14T13:16:42.5070180Z         self,
2025-01-14T13:16:42.5070240Z         simulation_state,
2025-01-14T13:16:42.5070290Z         opacity_state,
2025-01-14T13:16:42.5070340Z         macro_atom_state,
2025-01-14T13:16:42.5070390Z         plasma,
2025-01-14T13:16:42.5070430Z         no_of_packets,
2025-01-14T13:16:42.5070500Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5070540Z         iteration=0,
2025-01-14T13:16:42.5070600Z     ):
2025-01-14T13:16:42.5070700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5070770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5070820Z         else:
2025-01-14T13:16:42.5070870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5070920Z     
2025-01-14T13:16:42.5071030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5071110Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5071150Z         )
2025-01-14T13:16:42.5071200Z     
2025-01-14T13:16:42.5071300Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5071380Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5071500Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5071560Z         else:
2025-01-14T13:16:42.5071610Z             continuum_state = None
2025-01-14T13:16:42.5071690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5071820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5071890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5071980Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5072050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5072120Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5072330Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5072400Z         ).to_numba(
2025-01-14T13:16:42.5072460Z             macro_atom_state,
2025-01-14T13:16:42.5072550Z             self.line_interaction_type,
2025-01-14T13:16:42.5072620Z         )
2025-01-14T13:16:42.5072720Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5072970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5073040Z         ]
2025-01-14T13:16:42.5073340Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5073350Z 
2025-01-14T13:16:42.5073510Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5073670Z __________ ERROR at setup of test_hdf_plasma[level_boltzmann_factor] ___________
2025-01-14T13:16:42.5073690Z 
2025-01-14T13:16:42.5090230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5090690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5090710Z 
2025-01-14T13:16:42.5090810Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5090970Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5091060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5091230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5091340Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5091420Z >       sim.run_final()
2025-01-14T13:16:42.5091420Z 
2025-01-14T13:16:42.5092120Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5092240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5092340Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5092470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5092550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5092720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5092820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5092830Z 
2025-01-14T13:16:42.5093060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5093270Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5093460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5093700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5093880Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5094000Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5094000Z 
2025-01-14T13:16:42.5094070Z     def initialize_transport_state(
2025-01-14T13:16:42.5094130Z         self,
2025-01-14T13:16:42.5094200Z         simulation_state,
2025-01-14T13:16:42.5094240Z         opacity_state,
2025-01-14T13:16:42.5094300Z         macro_atom_state,
2025-01-14T13:16:42.5094350Z         plasma,
2025-01-14T13:16:42.5094400Z         no_of_packets,
2025-01-14T13:16:42.5094470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5094530Z         iteration=0,
2025-01-14T13:16:42.5094570Z     ):
2025-01-14T13:16:42.5094680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5094770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5094820Z         else:
2025-01-14T13:16:42.5094910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5094980Z     
2025-01-14T13:16:42.5095340Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5095440Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5095530Z         )
2025-01-14T13:16:42.5095570Z     
2025-01-14T13:16:42.5095710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5095800Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5095960Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5096010Z         else:
2025-01-14T13:16:42.5096100Z             continuum_state = None
2025-01-14T13:16:42.5096180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5096280Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5096380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5096480Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5096590Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5096690Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5096790Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5096860Z         ).to_numba(
2025-01-14T13:16:42.5096930Z             macro_atom_state,
2025-01-14T13:16:42.5097010Z             self.line_interaction_type,
2025-01-14T13:16:42.5097050Z         )
2025-01-14T13:16:42.5097150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5097400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5097440Z         ]
2025-01-14T13:16:42.5097720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5097730Z 
2025-01-14T13:16:42.5097860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5098010Z ________ ERROR at setup of test_hdf_plasma[stimulated_emission_factor] _________
2025-01-14T13:16:42.5098110Z 
2025-01-14T13:16:42.5098700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5099210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5099220Z 
2025-01-14T13:16:42.5099300Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5099430Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5099500Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5099640Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5099700Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5099750Z >       sim.run_final()
2025-01-14T13:16:42.5099760Z 
2025-01-14T13:16:42.5099810Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5099910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5099980Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5100100Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5100160Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5100290Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5100380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5100380Z 
2025-01-14T13:16:42.5100590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5100750Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5100930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5101150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5101400Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5101510Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5101520Z 
2025-01-14T13:16:42.5101590Z     def initialize_transport_state(
2025-01-14T13:16:42.5101640Z         self,
2025-01-14T13:16:42.5101690Z         simulation_state,
2025-01-14T13:16:42.5101760Z         opacity_state,
2025-01-14T13:16:42.5101830Z         macro_atom_state,
2025-01-14T13:16:42.5101900Z         plasma,
2025-01-14T13:16:42.5101950Z         no_of_packets,
2025-01-14T13:16:42.5102010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5102060Z         iteration=0,
2025-01-14T13:16:42.5102100Z     ):
2025-01-14T13:16:42.5102480Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5102560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5102610Z         else:
2025-01-14T13:16:42.5102670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5102730Z     
2025-01-14T13:16:42.5102870Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5102950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5102990Z         )
2025-01-14T13:16:42.5103040Z     
2025-01-14T13:16:42.5103140Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5103230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5103350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5103400Z         else:
2025-01-14T13:16:42.5103460Z             continuum_state = None
2025-01-14T13:16:42.5103530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5103620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5103690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5103770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5103940Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5104020Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5104110Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5104170Z         ).to_numba(
2025-01-14T13:16:42.5104230Z             macro_atom_state,
2025-01-14T13:16:42.5104310Z             self.line_interaction_type,
2025-01-14T13:16:42.5104350Z         )
2025-01-14T13:16:42.5104430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5104670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5104720Z         ]
2025-01-14T13:16:42.5105010Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5105020Z 
2025-01-14T13:16:42.5105140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5105300Z ________________ ERROR at setup of test_hdf_plasma[t_electrons] ________________
2025-01-14T13:16:42.5105310Z 
2025-01-14T13:16:42.5105840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5106160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5106170Z 
2025-01-14T13:16:42.5106230Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5106370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5106460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5106600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5106660Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5106720Z >       sim.run_final()
2025-01-14T13:16:42.5106720Z 
2025-01-14T13:16:42.5107120Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5107270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5107360Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5107460Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5107540Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5107690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5107780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5107780Z 
2025-01-14T13:16:42.5108030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5108210Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5108400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5108660Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5108790Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5108900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5108910Z 
2025-01-14T13:16:42.5108990Z     def initialize_transport_state(
2025-01-14T13:16:42.5109050Z         self,
2025-01-14T13:16:42.5109110Z         simulation_state,
2025-01-14T13:16:42.5109190Z         opacity_state,
2025-01-14T13:16:42.5109240Z         macro_atom_state,
2025-01-14T13:16:42.5109300Z         plasma,
2025-01-14T13:16:42.5109370Z         no_of_packets,
2025-01-14T13:16:42.5109440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5109500Z         iteration=0,
2025-01-14T13:16:42.5109570Z     ):
2025-01-14T13:16:42.5109680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5109770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5110120Z         else:
2025-01-14T13:16:42.5110180Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5110240Z     
2025-01-14T13:16:42.5110350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5110440Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5110510Z         )
2025-01-14T13:16:42.5110560Z     
2025-01-14T13:16:42.5110680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5110790Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5110930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5111000Z         else:
2025-01-14T13:16:42.5111050Z             continuum_state = None
2025-01-14T13:16:42.5111130Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5111210Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5111300Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5111390Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5111480Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5111550Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5111640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5111690Z         ).to_numba(
2025-01-14T13:16:42.5111760Z             macro_atom_state,
2025-01-14T13:16:42.5111820Z             self.line_interaction_type,
2025-01-14T13:16:42.5111860Z         )
2025-01-14T13:16:42.5111960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5112220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5112270Z         ]
2025-01-14T13:16:42.5112550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5112560Z 
2025-01-14T13:16:42.5112690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5112970Z _______________ ERROR at setup of test_hdf_plasma[wavelength_cm] _______________
2025-01-14T13:16:42.5112970Z 
2025-01-14T13:16:42.5113540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5113860Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5113870Z 
2025-01-14T13:16:42.5113940Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5114090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5114180Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5114350Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5114420Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5114490Z >       sim.run_final()
2025-01-14T13:16:42.5114490Z 
2025-01-14T13:16:42.5114550Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5114650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5114720Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5114840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5114930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5115050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5115140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5115140Z 
2025-01-14T13:16:42.5115360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5115540Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5115750Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5116120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5116280Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5116380Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5116390Z 
2025-01-14T13:16:42.5160840Z     def initialize_transport_state(
2025-01-14T13:16:42.5161040Z         self,
2025-01-14T13:16:42.5161100Z         simulation_state,
2025-01-14T13:16:42.5161150Z         opacity_state,
2025-01-14T13:16:42.5161200Z         macro_atom_state,
2025-01-14T13:16:42.5161250Z         plasma,
2025-01-14T13:16:42.5161310Z         no_of_packets,
2025-01-14T13:16:42.5161360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5161410Z         iteration=0,
2025-01-14T13:16:42.5161450Z     ):
2025-01-14T13:16:42.5161560Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5161660Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5161710Z         else:
2025-01-14T13:16:42.5161770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5161810Z     
2025-01-14T13:16:42.5161920Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5161990Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5162040Z         )
2025-01-14T13:16:42.5162080Z     
2025-01-14T13:16:42.5162180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5162270Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5162400Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5162440Z         else:
2025-01-14T13:16:42.5162510Z             continuum_state = None
2025-01-14T13:16:42.5162580Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5162670Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5162730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5163280Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5163360Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5163430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5163500Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5163540Z         ).to_numba(
2025-01-14T13:16:42.5163600Z             macro_atom_state,
2025-01-14T13:16:42.5163660Z             self.line_interaction_type,
2025-01-14T13:16:42.5163710Z         )
2025-01-14T13:16:42.5163780Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5164010Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5164050Z         ]
2025-01-14T13:16:42.5164300Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5164310Z 
2025-01-14T13:16:42.5164430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5164570Z __________ ERROR at setup of test_hdf_plasma[lines_lower_level_index] __________
2025-01-14T13:16:42.5164580Z 
2025-01-14T13:16:42.5165090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5165380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5165380Z 
2025-01-14T13:16:42.5165450Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5165570Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5165640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5165780Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5165980Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5166040Z >       sim.run_final()
2025-01-14T13:16:42.5166050Z 
2025-01-14T13:16:42.5166100Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5166200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5166270Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5166380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5166450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5166570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5166660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5166660Z 
2025-01-14T13:16:42.5166870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5167030Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5167200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5167430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5167540Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5167650Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5167660Z 
2025-01-14T13:16:42.5167720Z     def initialize_transport_state(
2025-01-14T13:16:42.5167770Z         self,
2025-01-14T13:16:42.5167820Z         simulation_state,
2025-01-14T13:16:42.5167870Z         opacity_state,
2025-01-14T13:16:42.5167920Z         macro_atom_state,
2025-01-14T13:16:42.5167960Z         plasma,
2025-01-14T13:16:42.5168010Z         no_of_packets,
2025-01-14T13:16:42.5168070Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5168120Z         iteration=0,
2025-01-14T13:16:42.5168160Z     ):
2025-01-14T13:16:42.5168260Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5168340Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5168450Z         else:
2025-01-14T13:16:42.5168510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5168550Z     
2025-01-14T13:16:42.5168660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5168730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5168770Z         )
2025-01-14T13:16:42.5168810Z     
2025-01-14T13:16:42.5168910Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5169000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5169110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5169160Z         else:
2025-01-14T13:16:42.5169220Z             continuum_state = None
2025-01-14T13:16:42.5169300Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5169380Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5169440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5169530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5196710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5197020Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5197110Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5197160Z         ).to_numba(
2025-01-14T13:16:42.5197220Z             macro_atom_state,
2025-01-14T13:16:42.5197280Z             self.line_interaction_type,
2025-01-14T13:16:42.5197320Z         )
2025-01-14T13:16:42.5197400Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5197670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5197730Z         ]
2025-01-14T13:16:42.5197980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5198550Z 
2025-01-14T13:16:42.5198690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5198860Z ______________ ERROR at setup of test_hdf_plasma[ionization_data] ______________
2025-01-14T13:16:42.5198860Z 
2025-01-14T13:16:42.5199420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5199730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5199730Z 
2025-01-14T13:16:42.5199820Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5199980Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5200070Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5200230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5200340Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5200390Z >       sim.run_final()
2025-01-14T13:16:42.5200400Z 
2025-01-14T13:16:42.5200460Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5200560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5200820Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5200940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5201010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5201150Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5201240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5201240Z 
2025-01-14T13:16:42.5201460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5201620Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5202380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5202630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5202750Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5202860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5202870Z 
2025-01-14T13:16:42.5202930Z     def initialize_transport_state(
2025-01-14T13:16:42.5202970Z         self,
2025-01-14T13:16:42.5203030Z         simulation_state,
2025-01-14T13:16:42.5203080Z         opacity_state,
2025-01-14T13:16:42.5203130Z         macro_atom_state,
2025-01-14T13:16:42.5203180Z         plasma,
2025-01-14T13:16:42.5203220Z         no_of_packets,
2025-01-14T13:16:42.5203290Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5203330Z         iteration=0,
2025-01-14T13:16:42.5203380Z     ):
2025-01-14T13:16:42.5203480Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5203560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5203600Z         else:
2025-01-14T13:16:42.5203660Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5203710Z     
2025-01-14T13:16:42.5203840Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5203950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5204010Z         )
2025-01-14T13:16:42.5204060Z     
2025-01-14T13:16:42.5204160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5204250Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5204370Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5204420Z         else:
2025-01-14T13:16:42.5204470Z             continuum_state = None
2025-01-14T13:16:42.5204550Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5204630Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5204950Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5205040Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5205110Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5205180Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5205250Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5205300Z         ).to_numba(
2025-01-14T13:16:42.5205350Z             macro_atom_state,
2025-01-14T13:16:42.5205410Z             self.line_interaction_type,
2025-01-14T13:16:42.5205450Z         )
2025-01-14T13:16:42.5205530Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5205750Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5205800Z         ]
2025-01-14T13:16:42.5206050Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5206060Z 
2025-01-14T13:16:42.5206180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5206310Z __________________ ERROR at setup of test_hdf_plasma[density] __________________
2025-01-14T13:16:42.5206310Z 
2025-01-14T13:16:42.5206830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5207120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5207120Z 
2025-01-14T13:16:42.5207180Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5207310Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5207380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5207540Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5207690Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5207770Z >       sim.run_final()
2025-01-14T13:16:42.5207780Z 
2025-01-14T13:16:42.5207840Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5207930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5208000Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5208110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5208180Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5208320Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5208410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5208420Z 
2025-01-14T13:16:42.5208650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5208840Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5209040Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5209280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5209420Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5209540Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5209540Z 
2025-01-14T13:16:42.5209630Z     def initialize_transport_state(
2025-01-14T13:16:42.5209670Z         self,
2025-01-14T13:16:42.5209740Z         simulation_state,
2025-01-14T13:16:42.5209790Z         opacity_state,
2025-01-14T13:16:42.5209840Z         macro_atom_state,
2025-01-14T13:16:42.5209890Z         plasma,
2025-01-14T13:16:42.5209950Z         no_of_packets,
2025-01-14T13:16:42.5210010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5210070Z         iteration=0,
2025-01-14T13:16:42.5210210Z     ):
2025-01-14T13:16:42.5210310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5210380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5210420Z         else:
2025-01-14T13:16:42.5210480Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5210520Z     
2025-01-14T13:16:42.5210630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5210700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5210740Z         )
2025-01-14T13:16:42.5210790Z     
2025-01-14T13:16:42.5210900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5210990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5211120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5211170Z         else:
2025-01-14T13:16:42.5211230Z             continuum_state = None
2025-01-14T13:16:42.5211320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5211430Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5211500Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5211600Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5211700Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5211770Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5211840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5211890Z         ).to_numba(
2025-01-14T13:16:42.5211970Z             macro_atom_state,
2025-01-14T13:16:42.5212050Z             self.line_interaction_type,
2025-01-14T13:16:42.5212120Z         )
2025-01-14T13:16:42.5212200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5212410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5212460Z         ]
2025-01-14T13:16:42.5212730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5212740Z 
2025-01-14T13:16:42.5212980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5213140Z ________________ ERROR at setup of test_hdf_plasma[atomic_mass] ________________
2025-01-14T13:16:42.5213140Z 
2025-01-14T13:16:42.5213650Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5215030Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5215050Z 
2025-01-14T13:16:42.5215140Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5215260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5215340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5215520Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5215580Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5215640Z >       sim.run_final()
2025-01-14T13:16:42.5215640Z 
2025-01-14T13:16:42.5215720Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5215810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5215900Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5216020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5216110Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5216240Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5216330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5216330Z 
2025-01-14T13:16:42.5216570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5216960Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5217160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5217380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5217500Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5217630Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5217630Z 
2025-01-14T13:16:42.5217710Z     def initialize_transport_state(
2025-01-14T13:16:42.5217770Z         self,
2025-01-14T13:16:42.5217830Z         simulation_state,
2025-01-14T13:16:42.5217900Z         opacity_state,
2025-01-14T13:16:42.5217960Z         macro_atom_state,
2025-01-14T13:16:42.5218000Z         plasma,
2025-01-14T13:16:42.5218050Z         no_of_packets,
2025-01-14T13:16:42.5218110Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5218160Z         iteration=0,
2025-01-14T13:16:42.5218200Z     ):
2025-01-14T13:16:42.5218320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5218390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5218440Z         else:
2025-01-14T13:16:42.5218500Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5218550Z     
2025-01-14T13:16:42.5218660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5218730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5218770Z         )
2025-01-14T13:16:42.5218820Z     
2025-01-14T13:16:42.5218930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5219020Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5219160Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5219210Z         else:
2025-01-14T13:16:42.5219270Z             continuum_state = None
2025-01-14T13:16:42.5219350Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5219520Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5219580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5219670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5219760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5219830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5219920Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5219970Z         ).to_numba(
2025-01-14T13:16:42.5220020Z             macro_atom_state,
2025-01-14T13:16:42.5220100Z             self.line_interaction_type,
2025-01-14T13:16:42.5220150Z         )
2025-01-14T13:16:42.5220220Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5220440Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5220490Z         ]
2025-01-14T13:16:42.5220760Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5220770Z 
2025-01-14T13:16:42.5220880Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5221040Z ___________ ERROR at setup of test_hdf_plasma[level_number_density] ____________
2025-01-14T13:16:42.5221050Z 
2025-01-14T13:16:42.5221570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5221910Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5221920Z 
2025-01-14T13:16:42.5221990Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5222130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5222280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5222440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5222500Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5222560Z >       sim.run_final()
2025-01-14T13:16:42.5222570Z 
2025-01-14T13:16:42.5222630Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5222720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5222790Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5222890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5222980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5223100Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5223190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5223200Z 
2025-01-14T13:16:42.5223430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5223600Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5223780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5224010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5224140Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5224240Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5224250Z 
2025-01-14T13:16:42.5224310Z     def initialize_transport_state(
2025-01-14T13:16:42.5224370Z         self,
2025-01-14T13:16:42.5224450Z         simulation_state,
2025-01-14T13:16:42.5224500Z         opacity_state,
2025-01-14T13:16:42.5224550Z         macro_atom_state,
2025-01-14T13:16:42.5224600Z         plasma,
2025-01-14T13:16:42.5224650Z         no_of_packets,
2025-01-14T13:16:42.5224710Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5224760Z         iteration=0,
2025-01-14T13:16:42.5225080Z     ):
2025-01-14T13:16:42.5225190Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5225260Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5225300Z         else:
2025-01-14T13:16:42.5225370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5225410Z     
2025-01-14T13:16:42.5225530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5225610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5225650Z         )
2025-01-14T13:16:42.5225690Z     
2025-01-14T13:16:42.5225800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5225880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5226000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5226050Z         else:
2025-01-14T13:16:42.5226100Z             continuum_state = None
2025-01-14T13:16:42.5226180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5226270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5226330Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5226410Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5226490Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5226550Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5226620Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5226660Z         ).to_numba(
2025-01-14T13:16:42.5226720Z             macro_atom_state,
2025-01-14T13:16:42.5226770Z             self.line_interaction_type,
2025-01-14T13:16:42.5226820Z         )
2025-01-14T13:16:42.5226900Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5227110Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5227410Z         ]
2025-01-14T13:16:42.5227670Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5227670Z 
2025-01-14T13:16:42.5227780Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5227920Z __________ ERROR at setup of test_hdf_plasma[lines_upper_level_index] __________
2025-01-14T13:16:42.5227920Z 
2025-01-14T13:16:42.5228430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5228720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5228720Z 
2025-01-14T13:16:42.5228790Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5228910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5228990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5229130Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5229190Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5229240Z >       sim.run_final()
2025-01-14T13:16:42.5229250Z 
2025-01-14T13:16:42.5229300Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5229390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5229460Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5229570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5229640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5229760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5229850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5229850Z 
2025-01-14T13:16:42.5230060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5230290Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5230460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5230680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5230800Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5230900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5230910Z 
2025-01-14T13:16:42.5230970Z     def initialize_transport_state(
2025-01-14T13:16:42.5231020Z         self,
2025-01-14T13:16:42.5231070Z         simulation_state,
2025-01-14T13:16:42.5232130Z         opacity_state,
2025-01-14T13:16:42.5232250Z         macro_atom_state,
2025-01-14T13:16:42.5232330Z         plasma,
2025-01-14T13:16:42.5232390Z         no_of_packets,
2025-01-14T13:16:42.5232470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5232530Z         iteration=0,
2025-01-14T13:16:42.5232570Z     ):
2025-01-14T13:16:42.5232680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5232760Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5232810Z         else:
2025-01-14T13:16:42.5232860Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5232910Z     
2025-01-14T13:16:42.5233050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5233130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5233190Z         )
2025-01-14T13:16:42.5233240Z     
2025-01-14T13:16:42.5233360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5233470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5233630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5233690Z         else:
2025-01-14T13:16:42.5234080Z             continuum_state = None
2025-01-14T13:16:42.5234190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5234290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5234380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5234490Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5234580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5234670Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5234760Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5234830Z         ).to_numba(
2025-01-14T13:16:42.5234910Z             macro_atom_state,
2025-01-14T13:16:42.5234980Z             self.line_interaction_type,
2025-01-14T13:16:42.5235040Z         )
2025-01-14T13:16:42.5235120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5235370Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5235440Z         ]
2025-01-14T13:16:42.5235730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5235740Z 
2025-01-14T13:16:42.5235870Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5236010Z ____________________ ERROR at setup of test_hdf_plasma[nu] _____________________
2025-01-14T13:16:42.5236010Z 
2025-01-14T13:16:42.5236580Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5236900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5236900Z 
2025-01-14T13:16:42.5236990Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5237140Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5237320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5237490Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5237580Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5237630Z >       sim.run_final()
2025-01-14T13:16:42.5237640Z 
2025-01-14T13:16:42.5237690Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5237790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5237860Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5237970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5238040Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5238180Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5238270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5238280Z 
2025-01-14T13:16:42.5238530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5238720Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5238930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5239190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5239310Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5239450Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5239450Z 
2025-01-14T13:16:42.5239530Z     def initialize_transport_state(
2025-01-14T13:16:42.5239600Z         self,
2025-01-14T13:16:42.5239680Z         simulation_state,
2025-01-14T13:16:42.5239740Z         opacity_state,
2025-01-14T13:16:42.5239790Z         macro_atom_state,
2025-01-14T13:16:42.5239870Z         plasma,
2025-01-14T13:16:42.5240070Z         no_of_packets,
2025-01-14T13:16:42.5240130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5240200Z         iteration=0,
2025-01-14T13:16:42.5240270Z     ):
2025-01-14T13:16:42.5240390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5240460Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5240510Z         else:
2025-01-14T13:16:42.5240580Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5240630Z     
2025-01-14T13:16:42.5240760Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5240850Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5240900Z         )
2025-01-14T13:16:42.5240960Z     
2025-01-14T13:16:42.5241090Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5241200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5241370Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5241440Z         else:
2025-01-14T13:16:42.5241500Z             continuum_state = None
2025-01-14T13:16:42.5241580Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5241670Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5241730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5241810Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5241880Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5241950Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5242010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5242060Z         ).to_numba(
2025-01-14T13:16:42.5242120Z             macro_atom_state,
2025-01-14T13:16:42.5242180Z             self.line_interaction_type,
2025-01-14T13:16:42.5242220Z         )
2025-01-14T13:16:42.5242310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5242530Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5242580Z         ]
2025-01-14T13:16:42.5242910Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5242920Z 
2025-01-14T13:16:42.5243040Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5243170Z _______________ ERROR at setup of test_hdf_plasma[beta_sobolev] ________________
2025-01-14T13:16:42.5243170Z 
2025-01-14T13:16:42.5243690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5243970Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5243970Z 
2025-01-14T13:16:42.5244040Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5244170Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5244240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5244370Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5244460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5244510Z >       sim.run_final()
2025-01-14T13:16:42.5244510Z 
2025-01-14T13:16:42.5244590Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5244690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5244770Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5244890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5244970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5245110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5245200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5245280Z 
2025-01-14T13:16:42.5245520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5245700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5245890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5246130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5246260Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5246370Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5246370Z 
2025-01-14T13:16:42.5246440Z     def initialize_transport_state(
2025-01-14T13:16:42.5246480Z         self,
2025-01-14T13:16:42.5246540Z         simulation_state,
2025-01-14T13:16:42.5246590Z         opacity_state,
2025-01-14T13:16:42.5246640Z         macro_atom_state,
2025-01-14T13:16:42.5246690Z         plasma,
2025-01-14T13:16:42.5246750Z         no_of_packets,
2025-01-14T13:16:42.5246820Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5246880Z         iteration=0,
2025-01-14T13:16:42.5246940Z     ):
2025-01-14T13:16:42.5247030Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5247120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5247170Z         else:
2025-01-14T13:16:42.5247220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5247270Z     
2025-01-14T13:16:42.5247380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5247450Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5247500Z         )
2025-01-14T13:16:42.5247540Z     
2025-01-14T13:16:42.5247640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5247740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5247890Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5247970Z         else:
2025-01-14T13:16:42.5248390Z             continuum_state = None
2025-01-14T13:16:42.5248510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5248590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5248660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5248740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5248820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5248880Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5248970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5249030Z         ).to_numba(
2025-01-14T13:16:42.5249080Z             macro_atom_state,
2025-01-14T13:16:42.5249150Z             self.line_interaction_type,
2025-01-14T13:16:42.5249210Z         )
2025-01-14T13:16:42.5249280Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5249540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5249600Z         ]
2025-01-14T13:16:42.5249850Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5249850Z 
2025-01-14T13:16:42.5249970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5250130Z _________ ERROR at setup of test_hdf_plasma[transition_probabilities] __________
2025-01-14T13:16:42.5250130Z 
2025-01-14T13:16:42.5250690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5250990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5251520Z 
2025-01-14T13:16:42.5251610Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5251740Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5251820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5251960Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5252030Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5252100Z >       sim.run_final()
2025-01-14T13:16:42.5252100Z 
2025-01-14T13:16:42.5252190Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5252280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5252350Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5252480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5252570Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5252690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5252820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5252820Z 
2025-01-14T13:16:42.5253040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5253230Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5253430Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5253680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5253820Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5253960Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5253960Z 
2025-01-14T13:16:42.5254030Z     def initialize_transport_state(
2025-01-14T13:16:42.5254070Z         self,
2025-01-14T13:16:42.5254150Z         simulation_state,
2025-01-14T13:16:42.5254210Z         opacity_state,
2025-01-14T13:16:42.5254260Z         macro_atom_state,
2025-01-14T13:16:42.5254320Z         plasma,
2025-01-14T13:16:42.5254510Z         no_of_packets,
2025-01-14T13:16:42.5254600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5254650Z         iteration=0,
2025-01-14T13:16:42.5254700Z     ):
2025-01-14T13:16:42.5254800Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5254980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5255040Z         else:
2025-01-14T13:16:42.5255100Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5255150Z     
2025-01-14T13:16:42.5255260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5255360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5255400Z         )
2025-01-14T13:16:42.5255450Z     
2025-01-14T13:16:42.5255570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5255670Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5255810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5255860Z         else:
2025-01-14T13:16:42.5255930Z             continuum_state = None
2025-01-14T13:16:42.5256010Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5256100Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5256160Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5256260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5262250Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5262380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5262450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5262500Z         ).to_numba(
2025-01-14T13:16:42.5262560Z             macro_atom_state,
2025-01-14T13:16:42.5262620Z             self.line_interaction_type,
2025-01-14T13:16:42.5262670Z         )
2025-01-14T13:16:42.5262740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5263250Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5263300Z         ]
2025-01-14T13:16:42.5263550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5263560Z 
2025-01-14T13:16:42.5263670Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5263800Z ____________________ ERROR at setup of test_hdf_plasma[phi] ____________________
2025-01-14T13:16:42.5263810Z 
2025-01-14T13:16:42.5264320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5264620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5264620Z 
2025-01-14T13:16:42.5264690Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5264810Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5264890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5265030Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5265100Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5265150Z >       sim.run_final()
2025-01-14T13:16:42.5265160Z 
2025-01-14T13:16:42.5265220Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5265310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5265380Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5265500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5265570Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5265690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5265860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5265870Z 
2025-01-14T13:16:42.5266090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5266250Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5266440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5266660Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5266780Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5266890Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5266890Z 
2025-01-14T13:16:42.5266950Z     def initialize_transport_state(
2025-01-14T13:16:42.5267000Z         self,
2025-01-14T13:16:42.5267060Z         simulation_state,
2025-01-14T13:16:42.5267110Z         opacity_state,
2025-01-14T13:16:42.5267160Z         macro_atom_state,
2025-01-14T13:16:42.5267220Z         plasma,
2025-01-14T13:16:42.5267260Z         no_of_packets,
2025-01-14T13:16:42.5267330Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5267370Z         iteration=0,
2025-01-14T13:16:42.5267420Z     ):
2025-01-14T13:16:42.5267510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5267580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5267620Z         else:
2025-01-14T13:16:42.5267680Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5267740Z     
2025-01-14T13:16:42.5267840Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5267920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5267960Z         )
2025-01-14T13:16:42.5268000Z     
2025-01-14T13:16:42.5268100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5268190Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5268380Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5268440Z         else:
2025-01-14T13:16:42.5268490Z             continuum_state = None
2025-01-14T13:16:42.5268570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5268650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5268720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5268800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5268880Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5268950Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5269020Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5269070Z         ).to_numba(
2025-01-14T13:16:42.5269120Z             macro_atom_state,
2025-01-14T13:16:42.5269190Z             self.line_interaction_type,
2025-01-14T13:16:42.5269230Z         )
2025-01-14T13:16:42.5269310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5269540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5269590Z         ]
2025-01-14T13:16:42.5269840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5269850Z 
2025-01-14T13:16:42.5269970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5270110Z ____________ ERROR at setup of test_hdf_plasma[electron_densities] _____________
2025-01-14T13:16:42.5270110Z 
2025-01-14T13:16:42.5270630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5270920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5270930Z 
2025-01-14T13:16:42.5271060Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5271190Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5271260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5271410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5271470Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5271520Z >       sim.run_final()
2025-01-14T13:16:42.5271520Z 
2025-01-14T13:16:42.5271580Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5271680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5271750Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5271860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5271930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5272040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5272140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5272140Z 
2025-01-14T13:16:42.5272360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5272520Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5272690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5272900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5273030Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5273140Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5273140Z 
2025-01-14T13:16:42.5273210Z     def initialize_transport_state(
2025-01-14T13:16:42.5273260Z         self,
2025-01-14T13:16:42.5273360Z         simulation_state,
2025-01-14T13:16:42.5273420Z         opacity_state,
2025-01-14T13:16:42.5273480Z         macro_atom_state,
2025-01-14T13:16:42.5273520Z         plasma,
2025-01-14T13:16:42.5273580Z         no_of_packets,
2025-01-14T13:16:42.5273640Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5273690Z         iteration=0,
2025-01-14T13:16:42.5273740Z     ):
2025-01-14T13:16:42.5273840Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5273910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5273950Z         else:
2025-01-14T13:16:42.5274010Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5274050Z     
2025-01-14T13:16:42.5274150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5274220Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5274260Z         )
2025-01-14T13:16:42.5274310Z     
2025-01-14T13:16:42.5274410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5274500Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5274630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5274680Z         else:
2025-01-14T13:16:42.5274750Z             continuum_state = None
2025-01-14T13:16:42.5274830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5274920Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5274990Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5275070Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5275160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5275220Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5275290Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5275330Z         ).to_numba(
2025-01-14T13:16:42.5275390Z             macro_atom_state,
2025-01-14T13:16:42.5275450Z             self.line_interaction_type,
2025-01-14T13:16:42.5275510Z         )
2025-01-14T13:16:42.5275590Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5276080Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5276140Z         ]
2025-01-14T13:16:42.5276400Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5276400Z 
2025-01-14T13:16:42.5276520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5276650Z ___________________ ERROR at setup of test_hdf_plasma[t_rad] ___________________
2025-01-14T13:16:42.5276650Z 
2025-01-14T13:16:42.5277170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5277470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5277470Z 
2025-01-14T13:16:42.5277540Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5277680Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5277760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5277900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5277970Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5278020Z >       sim.run_final()
2025-01-14T13:16:42.5278020Z 
2025-01-14T13:16:42.5278080Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5278170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5278240Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5278370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5278440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5278820Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5278920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5278920Z 
2025-01-14T13:16:42.5279210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5279400Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5279580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5279810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5279930Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5280040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5280040Z 
2025-01-14T13:16:42.5280110Z     def initialize_transport_state(
2025-01-14T13:16:42.5280160Z         self,
2025-01-14T13:16:42.5280220Z         simulation_state,
2025-01-14T13:16:42.5280270Z         opacity_state,
2025-01-14T13:16:42.5280320Z         macro_atom_state,
2025-01-14T13:16:42.5280360Z         plasma,
2025-01-14T13:16:42.5280410Z         no_of_packets,
2025-01-14T13:16:42.5280470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5280510Z         iteration=0,
2025-01-14T13:16:42.5280560Z     ):
2025-01-14T13:16:42.5280660Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5280730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5280780Z         else:
2025-01-14T13:16:42.5280830Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5280880Z     
2025-01-14T13:16:42.5280980Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5281050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5281100Z         )
2025-01-14T13:16:42.5281140Z     
2025-01-14T13:16:42.5281240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5281490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5281620Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5281670Z         else:
2025-01-14T13:16:42.5281750Z             continuum_state = None
2025-01-14T13:16:42.5281830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5281910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5281980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5282060Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5282130Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5282200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5282280Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5282340Z         ).to_numba(
2025-01-14T13:16:42.5282390Z             macro_atom_state,
2025-01-14T13:16:42.5282600Z             self.line_interaction_type,
2025-01-14T13:16:42.5282660Z         )
2025-01-14T13:16:42.5282740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5282960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5283000Z         ]
2025-01-14T13:16:42.5283250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5283250Z 
2025-01-14T13:16:42.5283360Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5283500Z ______________ ERROR at setup of test_hdf_plasma[selected_atoms] _______________
2025-01-14T13:16:42.5283500Z 
2025-01-14T13:16:42.5284000Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5284430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5284440Z 
2025-01-14T13:16:42.5284520Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5284710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5284830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5285030Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5285140Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5285220Z >       sim.run_final()
2025-01-14T13:16:42.5285230Z 
2025-01-14T13:16:42.5285340Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5285470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5285600Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5285760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5285880Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5286060Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5286190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5286200Z 
2025-01-14T13:16:42.5286480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5286690Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5286910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5287180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5287340Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5287490Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5287500Z 
2025-01-14T13:16:42.5287590Z     def initialize_transport_state(
2025-01-14T13:16:42.5287680Z         self,
2025-01-14T13:16:42.5287930Z         simulation_state,
2025-01-14T13:16:42.5288020Z         opacity_state,
2025-01-14T13:16:42.5288110Z         macro_atom_state,
2025-01-14T13:16:42.5288200Z         plasma,
2025-01-14T13:16:42.5288280Z         no_of_packets,
2025-01-14T13:16:42.5288380Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5288470Z         iteration=0,
2025-01-14T13:16:42.5288540Z     ):
2025-01-14T13:16:42.5288670Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5288770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5288830Z         else:
2025-01-14T13:16:42.5288910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5288970Z     
2025-01-14T13:16:42.5289110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5289190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5289230Z         )
2025-01-14T13:16:42.5289270Z     
2025-01-14T13:16:42.5289400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5289540Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5289700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5290680Z         else:
2025-01-14T13:16:42.5290810Z             continuum_state = None
2025-01-14T13:16:42.5290930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5291030Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5294380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5294530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5294660Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5294760Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5294880Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5295070Z         ).to_numba(
2025-01-14T13:16:42.5295160Z             macro_atom_state,
2025-01-14T13:16:42.5296050Z             self.line_interaction_type,
2025-01-14T13:16:42.5296120Z         )
2025-01-14T13:16:42.5296240Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5296550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5296640Z         ]
2025-01-14T13:16:42.5296970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5296990Z 
2025-01-14T13:16:42.5297190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5297400Z ____________ ERROR at setup of test_hdf_plasma[ion_number_density] _____________
2025-01-14T13:16:42.5297420Z 
2025-01-14T13:16:42.5298050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5298430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5298440Z 
2025-01-14T13:16:42.5298520Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5299150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5299260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5299460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5299550Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5299600Z >       sim.run_final()
2025-01-14T13:16:42.5299620Z 
2025-01-14T13:16:42.5299700Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5299820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5299920Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5300790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5300910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5301230Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5301360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5301380Z 
2025-01-14T13:16:42.5301640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5301850Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5302080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5302380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5305690Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5305850Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5305850Z 
2025-01-14T13:16:42.5305950Z     def initialize_transport_state(
2025-01-14T13:16:42.5306020Z         self,
2025-01-14T13:16:42.5306110Z         simulation_state,
2025-01-14T13:16:42.5306200Z         opacity_state,
2025-01-14T13:16:42.5306270Z         macro_atom_state,
2025-01-14T13:16:42.5306320Z         plasma,
2025-01-14T13:16:42.5306400Z         no_of_packets,
2025-01-14T13:16:42.5306490Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5306570Z         iteration=0,
2025-01-14T13:16:42.5306640Z     ):
2025-01-14T13:16:42.5306770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5306880Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5306940Z         else:
2025-01-14T13:16:42.5307030Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5307100Z     
2025-01-14T13:16:42.5307250Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5307360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5307440Z         )
2025-01-14T13:16:42.5307650Z     
2025-01-14T13:16:42.5307820Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5307930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5308100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5308170Z         else:
2025-01-14T13:16:42.5308250Z             continuum_state = None
2025-01-14T13:16:42.5308350Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5308480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5308590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5308710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5308810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5308890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5308970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5309010Z         ).to_numba(
2025-01-14T13:16:42.5309090Z             macro_atom_state,
2025-01-14T13:16:42.5309180Z             self.line_interaction_type,
2025-01-14T13:16:42.5309260Z         )
2025-01-14T13:16:42.5309370Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5309640Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5309700Z         ]
2025-01-14T13:16:42.5310040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5310040Z 
2025-01-14T13:16:42.5310200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5310400Z ____________ ERROR at setup of test_hdf_plasma[partition_function] _____________
2025-01-14T13:16:42.5310410Z 
2025-01-14T13:16:42.5311050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5314900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5314930Z 
2025-01-14T13:16:42.5315090Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5315270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5315380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5315580Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5315660Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5315740Z >       sim.run_final()
2025-01-14T13:16:42.5315740Z 
2025-01-14T13:16:42.5315820Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5315960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5316060Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5316240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5316330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5316530Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5316650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5316650Z 
2025-01-14T13:16:42.5316920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5317140Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5317360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5317670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5317840Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5317990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5329970Z 
2025-01-14T13:16:42.5330530Z     def initialize_transport_state(
2025-01-14T13:16:42.5330730Z         self,
2025-01-14T13:16:42.5330940Z         simulation_state,
2025-01-14T13:16:42.5331170Z         opacity_state,
2025-01-14T13:16:42.5331770Z         macro_atom_state,
2025-01-14T13:16:42.5331920Z         plasma,
2025-01-14T13:16:42.5331980Z         no_of_packets,
2025-01-14T13:16:42.5332050Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5332150Z         iteration=0,
2025-01-14T13:16:42.5332210Z     ):
2025-01-14T13:16:42.5332330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5332430Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5332500Z         else:
2025-01-14T13:16:42.5332580Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5332660Z     
2025-01-14T13:16:42.5332790Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5334020Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5334110Z         )
2025-01-14T13:16:42.5334180Z     
2025-01-14T13:16:42.5334330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5334440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5338370Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5338670Z         else:
2025-01-14T13:16:42.5338950Z             continuum_state = None
2025-01-14T13:16:42.5339260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5339570Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5339880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5340020Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5340140Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5340240Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5340360Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5340460Z         ).to_numba(
2025-01-14T13:16:42.5340550Z             macro_atom_state,
2025-01-14T13:16:42.5341010Z             self.line_interaction_type,
2025-01-14T13:16:42.5341070Z         )
2025-01-14T13:16:42.5341170Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5341460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5341550Z         ]
2025-01-14T13:16:42.5341880Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5341890Z 
2025-01-14T13:16:42.5342050Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5342610Z _________________ ERROR at setup of test_hdf_plasma[abundance] _________________
2025-01-14T13:16:42.5342620Z 
2025-01-14T13:16:42.5343250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5343630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5343630Z 
2025-01-14T13:16:42.5343730Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5343910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5344020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5345440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5345760Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5346000Z >       sim.run_final()
2025-01-14T13:16:42.5346030Z 
2025-01-14T13:16:42.5346290Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5346630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5346940Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5347640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5347760Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5347920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5348050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5348050Z 
2025-01-14T13:16:42.5348310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5348510Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5348720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5348990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5349160Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5349310Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5349330Z 
2025-01-14T13:16:42.5349430Z     def initialize_transport_state(
2025-01-14T13:16:42.5349510Z         self,
2025-01-14T13:16:42.5349590Z         simulation_state,
2025-01-14T13:16:42.5349680Z         opacity_state,
2025-01-14T13:16:42.5349750Z         macro_atom_state,
2025-01-14T13:16:42.5349840Z         plasma,
2025-01-14T13:16:42.5349910Z         no_of_packets,
2025-01-14T13:16:42.5350010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5350080Z         iteration=0,
2025-01-14T13:16:42.5350150Z     ):
2025-01-14T13:16:42.5350280Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5350400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5350480Z         else:
2025-01-14T13:16:42.5350590Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5350660Z     
2025-01-14T13:16:42.5350830Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5350960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5351050Z         )
2025-01-14T13:16:42.5351300Z     
2025-01-14T13:16:42.5351470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5351620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5351800Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5351890Z         else:
2025-01-14T13:16:42.5351990Z             continuum_state = None
2025-01-14T13:16:42.5352080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5352160Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5352260Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5352390Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5352500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5352610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5352690Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5352740Z         ).to_numba(
2025-01-14T13:16:42.5352800Z             macro_atom_state,
2025-01-14T13:16:42.5352880Z             self.line_interaction_type,
2025-01-14T13:16:42.5352950Z         )
2025-01-14T13:16:42.5353070Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5353380Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5353460Z         ]
2025-01-14T13:16:42.5353780Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5353790Z 
2025-01-14T13:16:42.5353970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5354150Z ________________ ERROR at setup of test_hdf_plasma[g_electron] _________________
2025-01-14T13:16:42.5354160Z 
2025-01-14T13:16:42.5354770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5355360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5355370Z 
2025-01-14T13:16:42.5355480Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5355670Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5355780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5355970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5356040Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5356090Z >       sim.run_final()
2025-01-14T13:16:42.5356100Z 
2025-01-14T13:16:42.5356150Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5356300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5356410Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5356570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5356680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5356850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5357010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5357020Z 
2025-01-14T13:16:42.5357310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5357510Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5358490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5358800Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5358970Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5359130Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5359320Z 
2025-01-14T13:16:42.5359430Z     def initialize_transport_state(
2025-01-14T13:16:42.5359500Z         self,
2025-01-14T13:16:42.5359580Z         simulation_state,
2025-01-14T13:16:42.5359630Z         opacity_state,
2025-01-14T13:16:42.5362540Z         macro_atom_state,
2025-01-14T13:16:42.5362620Z         plasma,
2025-01-14T13:16:42.5362680Z         no_of_packets,
2025-01-14T13:16:42.5362750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5362830Z         iteration=0,
2025-01-14T13:16:42.5362890Z     ):
2025-01-14T13:16:42.5363180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5363300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5363380Z         else:
2025-01-14T13:16:42.5363460Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5363520Z     
2025-01-14T13:16:42.5363670Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5363770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5363850Z         )
2025-01-14T13:16:42.5363910Z     
2025-01-14T13:16:42.5364050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5364140Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5364290Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5364370Z         else:
2025-01-14T13:16:42.5364460Z             continuum_state = None
2025-01-14T13:16:42.5364570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5364700Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5364800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5364940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5381530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5381670Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5382070Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5382140Z         ).to_numba(
2025-01-14T13:16:42.5382190Z             macro_atom_state,
2025-01-14T13:16:42.5382260Z             self.line_interaction_type,
2025-01-14T13:16:42.5382300Z         )
2025-01-14T13:16:42.5382380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5382630Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5382700Z         ]
2025-01-14T13:16:42.5382980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5382990Z 
2025-01-14T13:16:42.5383100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5383250Z _____________________ ERROR at setup of test_hdf_plasma[g] _____________________
2025-01-14T13:16:42.5383250Z 
2025-01-14T13:16:42.5383800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5384110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5384120Z 
2025-01-14T13:16:42.5384210Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5384360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5384450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5384610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5384700Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5384780Z >       sim.run_final()
2025-01-14T13:16:42.5384780Z 
2025-01-14T13:16:42.5384850Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5384960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5393290Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5393510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5393610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5393780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5393910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5393920Z 
2025-01-14T13:16:42.5394210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5394420Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5394660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5394960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5395150Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5396470Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5396480Z 
2025-01-14T13:16:42.5396580Z     def initialize_transport_state(
2025-01-14T13:16:42.5396660Z         self,
2025-01-14T13:16:42.5396730Z         simulation_state,
2025-01-14T13:16:42.5396810Z         opacity_state,
2025-01-14T13:16:42.5396890Z         macro_atom_state,
2025-01-14T13:16:42.5396980Z         plasma,
2025-01-14T13:16:42.5397050Z         no_of_packets,
2025-01-14T13:16:42.5397140Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5397220Z         iteration=0,
2025-01-14T13:16:42.5397280Z     ):
2025-01-14T13:16:42.5397430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5397540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5397610Z         else:
2025-01-14T13:16:42.5397710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5397790Z     
2025-01-14T13:16:42.5397940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5400280Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5400350Z         )
2025-01-14T13:16:42.5400430Z     
2025-01-14T13:16:42.5400570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5400700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5400870Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5400960Z         else:
2025-01-14T13:16:42.5401060Z             continuum_state = None
2025-01-14T13:16:42.5401190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5401350Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5401440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5401520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5403870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5404270Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5404640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5404850Z         ).to_numba(
2025-01-14T13:16:42.5406470Z             macro_atom_state,
2025-01-14T13:16:42.5406640Z             self.line_interaction_type,
2025-01-14T13:16:42.5406700Z         )
2025-01-14T13:16:42.5406850Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5407090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5407180Z         ]
2025-01-14T13:16:42.5407520Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5407530Z 
2025-01-14T13:16:42.5407650Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5408980Z ___________________ ERROR at setup of test_hdf_plasma[lines] ___________________
2025-01-14T13:16:42.5408990Z 
2025-01-14T13:16:42.5409830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5410230Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5410240Z 
2025-01-14T13:16:42.5410340Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5410530Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5410640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5410850Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5410950Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5411020Z >       sim.run_final()
2025-01-14T13:16:42.5411030Z 
2025-01-14T13:16:42.5411110Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5411240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5411360Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5411520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5411650Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5411810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5411950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5411960Z 
2025-01-14T13:16:42.5412240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5412410Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5412840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5413150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5413420Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5413590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5413600Z 
2025-01-14T13:16:42.5413720Z     def initialize_transport_state(
2025-01-14T13:16:42.5413790Z         self,
2025-01-14T13:16:42.5413880Z         simulation_state,
2025-01-14T13:16:42.5413950Z         opacity_state,
2025-01-14T13:16:42.5414050Z         macro_atom_state,
2025-01-14T13:16:42.5414130Z         plasma,
2025-01-14T13:16:42.5414220Z         no_of_packets,
2025-01-14T13:16:42.5414290Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5414340Z         iteration=0,
2025-01-14T13:16:42.5414380Z     ):
2025-01-14T13:16:42.5414500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5414620Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5414700Z         else:
2025-01-14T13:16:42.5414790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5414870Z     
2025-01-14T13:16:42.5415030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5415130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5415220Z         )
2025-01-14T13:16:42.5415290Z     
2025-01-14T13:16:42.5415450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5415580Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5472580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5472650Z         else:
2025-01-14T13:16:42.5472700Z             continuum_state = None
2025-01-14T13:16:42.5472780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5472890Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5472980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5473100Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5473210Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5473360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5473980Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5474070Z         ).to_numba(
2025-01-14T13:16:42.5474130Z             macro_atom_state,
2025-01-14T13:16:42.5474190Z             self.line_interaction_type,
2025-01-14T13:16:42.5474270Z         )
2025-01-14T13:16:42.5474390Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5474680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5474750Z         ]
2025-01-14T13:16:42.5475020Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5475030Z 
2025-01-14T13:16:42.5475170Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5475330Z ___________________ ERROR at setup of test_hdf_plasma[f_lu] ____________________
2025-01-14T13:16:42.5475340Z 
2025-01-14T13:16:42.5475860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5476150Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5476150Z 
2025-01-14T13:16:42.5476210Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5476350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5476440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5476590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5476650Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5476700Z >       sim.run_final()
2025-01-14T13:16:42.5476700Z 
2025-01-14T13:16:42.5476760Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5477080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5477150Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5477270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5477340Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5477450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5477540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5477540Z 
2025-01-14T13:16:42.5477780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5477960Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5478170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5478500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5478690Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5478820Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5478830Z 
2025-01-14T13:16:42.5478930Z     def initialize_transport_state(
2025-01-14T13:16:42.5478980Z         self,
2025-01-14T13:16:42.5479040Z         simulation_state,
2025-01-14T13:16:42.5479120Z         opacity_state,
2025-01-14T13:16:42.5479200Z         macro_atom_state,
2025-01-14T13:16:42.5479260Z         plasma,
2025-01-14T13:16:42.5479310Z         no_of_packets,
2025-01-14T13:16:42.5479360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5479410Z         iteration=0,
2025-01-14T13:16:42.5479450Z     ):
2025-01-14T13:16:42.5479550Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5479620Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5479660Z         else:
2025-01-14T13:16:42.5479720Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5479760Z     
2025-01-14T13:16:42.5479950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5480030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5480070Z         )
2025-01-14T13:16:42.5480110Z     
2025-01-14T13:16:42.5480210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5480320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5480470Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5480520Z         else:
2025-01-14T13:16:42.5480600Z             continuum_state = None
2025-01-14T13:16:42.5480680Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5480790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5480860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5480940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5481010Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5481090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5481160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5481200Z         ).to_numba(
2025-01-14T13:16:42.5481250Z             macro_atom_state,
2025-01-14T13:16:42.5481310Z             self.line_interaction_type,
2025-01-14T13:16:42.5481360Z         )
2025-01-14T13:16:42.5481430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5481670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5481740Z         ]
2025-01-14T13:16:42.5488250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5489500Z 
2025-01-14T13:16:42.5489700Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5489900Z _______________ ERROR at setup of test_hdf_plasma[tau_sobolevs] ________________
2025-01-14T13:16:42.5490120Z 
2025-01-14T13:16:42.5493090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5493400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5493400Z 
2025-01-14T13:16:42.5493470Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5493600Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5493680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5493830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5493890Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5493940Z >       sim.run_final()
2025-01-14T13:16:42.5493950Z 
2025-01-14T13:16:42.5494010Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5494110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5494180Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5494330Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5494400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5494550Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5494640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5494650Z 
2025-01-14T13:16:42.5494860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5495010Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5495190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5495410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5497080Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5497220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5497220Z 
2025-01-14T13:16:42.5497290Z     def initialize_transport_state(
2025-01-14T13:16:42.5497350Z         self,
2025-01-14T13:16:42.5497410Z         simulation_state,
2025-01-14T13:16:42.5497490Z         opacity_state,
2025-01-14T13:16:42.5497540Z         macro_atom_state,
2025-01-14T13:16:42.5497590Z         plasma,
2025-01-14T13:16:42.5497640Z         no_of_packets,
2025-01-14T13:16:42.5497700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5497760Z         iteration=0,
2025-01-14T13:16:42.5497820Z     ):
2025-01-14T13:16:42.5497940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5498040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5498110Z         else:
2025-01-14T13:16:42.5498190Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5498240Z     
2025-01-14T13:16:42.5498350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5498420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5498460Z         )
2025-01-14T13:16:42.5498510Z     
2025-01-14T13:16:42.5498630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5498740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5498910Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5498980Z         else:
2025-01-14T13:16:42.5499050Z             continuum_state = None
2025-01-14T13:16:42.5499140Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5499250Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5499320Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5499410Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5500130Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5500220Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5500280Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5500330Z         ).to_numba(
2025-01-14T13:16:42.5500390Z             macro_atom_state,
2025-01-14T13:16:42.5500450Z             self.line_interaction_type,
2025-01-14T13:16:42.5500490Z         )
2025-01-14T13:16:42.5500560Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5500780Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5500830Z         ]
2025-01-14T13:16:42.5501070Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5501070Z 
2025-01-14T13:16:42.5501180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5501310Z __________________ ERROR at setup of test_hdf_plasma[j_blues] __________________
2025-01-14T13:16:42.5501320Z 
2025-01-14T13:16:42.5501840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5502130Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5502140Z 
2025-01-14T13:16:42.5502200Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5502320Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5502390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5502530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5502590Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5502650Z >       sim.run_final()
2025-01-14T13:16:42.5502650Z 
2025-01-14T13:16:42.5502700Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5502860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5502940Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5503060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5503130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5503250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5503330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5503340Z 
2025-01-14T13:16:42.5503550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5503700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5503880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5504100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5504220Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5504320Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5504330Z 
2025-01-14T13:16:42.5504390Z     def initialize_transport_state(
2025-01-14T13:16:42.5504440Z         self,
2025-01-14T13:16:42.5504490Z         simulation_state,
2025-01-14T13:16:42.5504540Z         opacity_state,
2025-01-14T13:16:42.5504600Z         macro_atom_state,
2025-01-14T13:16:42.5504640Z         plasma,
2025-01-14T13:16:42.5504690Z         no_of_packets,
2025-01-14T13:16:42.5504750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5504790Z         iteration=0,
2025-01-14T13:16:42.5504830Z     ):
2025-01-14T13:16:42.5504930Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5505080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5505190Z         else:
2025-01-14T13:16:42.5505250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5505290Z     
2025-01-14T13:16:42.5505400Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5505470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5505510Z         )
2025-01-14T13:16:42.5505550Z     
2025-01-14T13:16:42.5505650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5505740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5505860Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5505910Z         else:
2025-01-14T13:16:42.5505970Z             continuum_state = None
2025-01-14T13:16:42.5506040Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5506120Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5506200Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5506290Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5506370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5506450Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5506520Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5506570Z         ).to_numba(
2025-01-14T13:16:42.5506630Z             macro_atom_state,
2025-01-14T13:16:42.5506690Z             self.line_interaction_type,
2025-01-14T13:16:42.5506740Z         )
2025-01-14T13:16:42.5506820Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5507060Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5507100Z         ]
2025-01-14T13:16:42.5507360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5507360Z 
2025-01-14T13:16:42.5507480Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5507670Z _______________ ERROR at setup of test_hdf_plasma[metastability] _______________
2025-01-14T13:16:42.5507680Z 
2025-01-14T13:16:42.5508220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5508520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5508530Z 
2025-01-14T13:16:42.5508600Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5508720Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5508790Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5508940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5509000Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5509060Z >       sim.run_final()
2025-01-14T13:16:42.5509060Z 
2025-01-14T13:16:42.5509110Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5509200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5513370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5513690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5513800Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5514000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5514140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5514150Z 
2025-01-14T13:16:42.5515250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5515470Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5515680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5518290Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5518470Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5518610Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5518620Z 
2025-01-14T13:16:42.5518710Z     def initialize_transport_state(
2025-01-14T13:16:42.5518760Z         self,
2025-01-14T13:16:42.5518820Z         simulation_state,
2025-01-14T13:16:42.5518870Z         opacity_state,
2025-01-14T13:16:42.5518970Z         macro_atom_state,
2025-01-14T13:16:42.5519480Z         plasma,
2025-01-14T13:16:42.5519560Z         no_of_packets,
2025-01-14T13:16:42.5519620Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5519680Z         iteration=0,
2025-01-14T13:16:42.5519720Z     ):
2025-01-14T13:16:42.5519820Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5519890Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5519940Z         else:
2025-01-14T13:16:42.5520000Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5520050Z     
2025-01-14T13:16:42.5520150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5520230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5520270Z         )
2025-01-14T13:16:42.5520310Z     
2025-01-14T13:16:42.5520410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5520500Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5520630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5520670Z         else:
2025-01-14T13:16:42.5520730Z             continuum_state = None
2025-01-14T13:16:42.5520810Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5520900Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5520960Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5521050Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5521250Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5521320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5521390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5521440Z         ).to_numba(
2025-01-14T13:16:42.5521490Z             macro_atom_state,
2025-01-14T13:16:42.5521550Z             self.line_interaction_type,
2025-01-14T13:16:42.5521600Z         )
2025-01-14T13:16:42.5521670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5521900Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5521940Z         ]
2025-01-14T13:16:42.5522200Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5522200Z 
2025-01-14T13:16:42.5522320Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5522450Z _____________________ ERROR at setup of test_hdf_plasma[w] _____________________
2025-01-14T13:16:42.5522460Z 
2025-01-14T13:16:42.5522980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5523260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5523260Z 
2025-01-14T13:16:42.5523330Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5523460Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5523530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5523670Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5523800Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5523850Z >       sim.run_final()
2025-01-14T13:16:42.5523860Z 
2025-01-14T13:16:42.5523920Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5524010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5524080Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5524190Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5524260Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5524390Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5524470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5524480Z 
2025-01-14T13:16:42.5524690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5524850Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5525030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5526930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5527060Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5527170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5527170Z 
2025-01-14T13:16:42.5527230Z     def initialize_transport_state(
2025-01-14T13:16:42.5527290Z         self,
2025-01-14T13:16:42.5527340Z         simulation_state,
2025-01-14T13:16:42.5527390Z         opacity_state,
2025-01-14T13:16:42.5527440Z         macro_atom_state,
2025-01-14T13:16:42.5527480Z         plasma,
2025-01-14T13:16:42.5527530Z         no_of_packets,
2025-01-14T13:16:42.5527590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5527640Z         iteration=0,
2025-01-14T13:16:42.5527680Z     ):
2025-01-14T13:16:42.5527770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5527850Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5528190Z         else:
2025-01-14T13:16:42.5528260Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5528310Z     
2025-01-14T13:16:42.5528410Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5528490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5528530Z         )
2025-01-14T13:16:42.5528580Z     
2025-01-14T13:16:42.5528680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5528770Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5528890Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5528940Z         else:
2025-01-14T13:16:42.5528990Z             continuum_state = None
2025-01-14T13:16:42.5529070Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5529150Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5529220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5529300Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5529380Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5529460Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5529520Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5529570Z         ).to_numba(
2025-01-14T13:16:42.5529620Z             macro_atom_state,
2025-01-14T13:16:42.5529680Z             self.line_interaction_type,
2025-01-14T13:16:42.5529720Z         )
2025-01-14T13:16:42.5529800Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5530020Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5530060Z         ]
2025-01-14T13:16:42.5530300Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5530530Z 
2025-01-14T13:16:42.5530650Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5530790Z _____________ ERROR at setup of test_hdf_plasma[excitation_energy] _____________
2025-01-14T13:16:42.5530790Z 
2025-01-14T13:16:42.5531300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5531600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5531600Z 
2025-01-14T13:16:42.5531660Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5531790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5531860Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5532000Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5532060Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5532110Z >       sim.run_final()
2025-01-14T13:16:42.5532120Z 
2025-01-14T13:16:42.5532180Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5532270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5532350Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5532460Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5532520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5532640Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5532730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5532730Z 
2025-01-14T13:16:42.5532940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5533110Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5533350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5533580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5533710Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5533820Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5533820Z 
2025-01-14T13:16:42.5533890Z     def initialize_transport_state(
2025-01-14T13:16:42.5533930Z         self,
2025-01-14T13:16:42.5533990Z         simulation_state,
2025-01-14T13:16:42.5534040Z         opacity_state,
2025-01-14T13:16:42.5534090Z         macro_atom_state,
2025-01-14T13:16:42.5534140Z         plasma,
2025-01-14T13:16:42.5534180Z         no_of_packets,
2025-01-14T13:16:42.5534240Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5534290Z         iteration=0,
2025-01-14T13:16:42.5534330Z     ):
2025-01-14T13:16:42.5534430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5534510Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5534560Z         else:
2025-01-14T13:16:42.5534620Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5534660Z     
2025-01-14T13:16:42.5534770Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5534840Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5540340Z         )
2025-01-14T13:16:42.5540410Z     
2025-01-14T13:16:42.5540540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5540650Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5540810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5540880Z         else:
2025-01-14T13:16:42.5540970Z             continuum_state = None
2025-01-14T13:16:42.5541050Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5541140Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5541350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5541450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5541530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5541600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5541700Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5541760Z         ).to_numba(
2025-01-14T13:16:42.5541820Z             macro_atom_state,
2025-01-14T13:16:42.5541900Z             self.line_interaction_type,
2025-01-14T13:16:42.5541950Z         )
2025-01-14T13:16:42.5542040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5542280Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5542330Z         ]
2025-01-14T13:16:42.5542600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5542610Z 
2025-01-14T13:16:42.5542730Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5542880Z ______________________ ERROR at setup of test_hdf_levels _______________________
2025-01-14T13:16:42.5542880Z 
2025-01-14T13:16:42.5543440Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5543750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5543760Z 
2025-01-14T13:16:42.5543830Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5543960Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5544050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5544210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5544400Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5544480Z >       sim.run_final()
2025-01-14T13:16:42.5544480Z 
2025-01-14T13:16:42.5544550Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5544670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5544740Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5544860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5544920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5545170Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5545260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5545260Z 
2025-01-14T13:16:42.5545470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5545630Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5545810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5546060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5546180Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5546290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5546290Z 
2025-01-14T13:16:42.5546360Z     def initialize_transport_state(
2025-01-14T13:16:42.5546400Z         self,
2025-01-14T13:16:42.5546450Z         simulation_state,
2025-01-14T13:16:42.5546510Z         opacity_state,
2025-01-14T13:16:42.5546560Z         macro_atom_state,
2025-01-14T13:16:42.5546610Z         plasma,
2025-01-14T13:16:42.5546660Z         no_of_packets,
2025-01-14T13:16:42.5546710Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5546760Z         iteration=0,
2025-01-14T13:16:42.5546900Z     ):
2025-01-14T13:16:42.5547010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5547080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5547130Z         else:
2025-01-14T13:16:42.5547180Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5547230Z     
2025-01-14T13:16:42.5547350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5547430Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5547470Z         )
2025-01-14T13:16:42.5547520Z     
2025-01-14T13:16:42.5547620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5547710Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5547830Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5547880Z         else:
2025-01-14T13:16:42.5547940Z             continuum_state = None
2025-01-14T13:16:42.5548010Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5548110Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5548180Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5548260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5548330Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5548400Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5548470Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5548510Z         ).to_numba(
2025-01-14T13:16:42.5548560Z             macro_atom_state,
2025-01-14T13:16:42.5548620Z             self.line_interaction_type,
2025-01-14T13:16:42.5548660Z         )
2025-01-14T13:16:42.5548740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5548950Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5549000Z         ]
2025-01-14T13:16:42.5549240Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5549250Z 
2025-01-14T13:16:42.5549440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5549580Z ______________ ERROR at setup of test_hdf_scalars[time_explosion] ______________
2025-01-14T13:16:42.5549580Z 
2025-01-14T13:16:42.5550090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5550370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5550370Z 
2025-01-14T13:16:42.5550440Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5550560Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5550650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5550800Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5550870Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5550920Z >       sim.run_final()
2025-01-14T13:16:42.5550920Z 
2025-01-14T13:16:42.5550980Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5551070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5551150Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5551260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5551330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5551460Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5551540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5551550Z 
2025-01-14T13:16:42.5551750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5551980Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5552160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5552380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5552510Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5552610Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5552620Z 
2025-01-14T13:16:42.5552680Z     def initialize_transport_state(
2025-01-14T13:16:42.5552730Z         self,
2025-01-14T13:16:42.5552780Z         simulation_state,
2025-01-14T13:16:42.5552830Z         opacity_state,
2025-01-14T13:16:42.5552880Z         macro_atom_state,
2025-01-14T13:16:42.5552930Z         plasma,
2025-01-14T13:16:42.5552980Z         no_of_packets,
2025-01-14T13:16:42.5553040Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5553090Z         iteration=0,
2025-01-14T13:16:42.5553130Z     ):
2025-01-14T13:16:42.5553230Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5553300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5553350Z         else:
2025-01-14T13:16:42.5553410Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5553450Z     
2025-01-14T13:16:42.5553550Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5553620Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5553670Z         )
2025-01-14T13:16:42.5553720Z     
2025-01-14T13:16:42.5553810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5553910Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5554030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5554070Z         else:
2025-01-14T13:16:42.5554130Z             continuum_state = None
2025-01-14T13:16:42.5554210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5554750Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5554840Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5554940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5555020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5555110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5555190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5555230Z         ).to_numba(
2025-01-14T13:16:42.5555290Z             macro_atom_state,
2025-01-14T13:16:42.5555350Z             self.line_interaction_type,
2025-01-14T13:16:42.5555390Z         )
2025-01-14T13:16:42.5555470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5555680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5555730Z         ]
2025-01-14T13:16:42.5555970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5555980Z 
2025-01-14T13:16:42.5556090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5556230Z __________ ERROR at setup of test_hdf_scalars[link_t_rad_t_electron] ___________
2025-01-14T13:16:42.5556240Z 
2025-01-14T13:16:42.5556750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5557060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5557070Z 
2025-01-14T13:16:42.5557130Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5557260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5557570Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5557730Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5557790Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5557840Z >       sim.run_final()
2025-01-14T13:16:42.5557850Z 
2025-01-14T13:16:42.5557900Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5557990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5558070Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5558180Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5558250Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5558370Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5558450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5558460Z 
2025-01-14T13:16:42.5558670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5558840Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5559010Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5559240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5559360Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5559470Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5559470Z 
2025-01-14T13:16:42.5559540Z     def initialize_transport_state(
2025-01-14T13:16:42.5559580Z         self,
2025-01-14T13:16:42.5559640Z         simulation_state,
2025-01-14T13:16:42.5559690Z         opacity_state,
2025-01-14T13:16:42.5559740Z         macro_atom_state,
2025-01-14T13:16:42.5559780Z         plasma,
2025-01-14T13:16:42.5559830Z         no_of_packets,
2025-01-14T13:16:42.5559880Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5559930Z         iteration=0,
2025-01-14T13:16:42.5559970Z     ):
2025-01-14T13:16:42.5560120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5560210Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5563160Z         else:
2025-01-14T13:16:42.5563710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5563850Z     
2025-01-14T13:16:42.5564190Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5564390Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5564540Z         )
2025-01-14T13:16:42.5564670Z     
2025-01-14T13:16:42.5564990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5565260Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5565600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5565740Z         else:
2025-01-14T13:16:42.5565910Z             continuum_state = None
2025-01-14T13:16:42.5566190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5566480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5566710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5566950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5567160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5567350Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5567550Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5567690Z         ).to_numba(
2025-01-14T13:16:42.5567870Z             macro_atom_state,
2025-01-14T13:16:42.5568100Z             self.line_interaction_type,
2025-01-14T13:16:42.5568280Z         )
2025-01-14T13:16:42.5568500Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5569190Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5569370Z         ]
2025-01-14T13:16:42.5570960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5570980Z 
2025-01-14T13:16:42.5571360Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5572770Z _________________ ERROR at setup of test_hdf_helium_treatment __________________
2025-01-14T13:16:42.5572800Z 
2025-01-14T13:16:42.5576900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5577810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5577820Z 
2025-01-14T13:16:42.5578050Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5578440Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5578910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5579380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5579570Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5579730Z >       sim.run_final()
2025-01-14T13:16:42.5579740Z 
2025-01-14T13:16:42.5579930Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5580210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5580460Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5580780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5581030Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5581440Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5581690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5581700Z 
2025-01-14T13:16:42.5582330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5583340Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5585080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5590480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5590700Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5590820Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5590820Z 
2025-01-14T13:16:42.5590880Z     def initialize_transport_state(
2025-01-14T13:16:42.5590940Z         self,
2025-01-14T13:16:42.5590990Z         simulation_state,
2025-01-14T13:16:42.5591050Z         opacity_state,
2025-01-14T13:16:42.5591100Z         macro_atom_state,
2025-01-14T13:16:42.5591140Z         plasma,
2025-01-14T13:16:42.5591190Z         no_of_packets,
2025-01-14T13:16:42.5591270Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5591320Z         iteration=0,
2025-01-14T13:16:42.5591370Z     ):
2025-01-14T13:16:42.5591480Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5591550Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5591600Z         else:
2025-01-14T13:16:42.5591650Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5591700Z     
2025-01-14T13:16:42.5591810Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5591880Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5591920Z         )
2025-01-14T13:16:42.5591970Z     
2025-01-14T13:16:42.5592070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5592170Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5592300Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5592350Z         else:
2025-01-14T13:16:42.5592700Z             continuum_state = None
2025-01-14T13:16:42.5592790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5592880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5592950Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5593040Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5593120Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5593190Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5593260Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5593320Z         ).to_numba(
2025-01-14T13:16:42.5593370Z             macro_atom_state,
2025-01-14T13:16:42.5593440Z             self.line_interaction_type,
2025-01-14T13:16:42.5593490Z         )
2025-01-14T13:16:42.5593570Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5593800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5593850Z         ]
2025-01-14T13:16:42.5594110Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5594110Z 
2025-01-14T13:16:42.5594230Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5594360Z ___________________ ERROR at setup of test_atomic_data_uuid ____________________
2025-01-14T13:16:42.5594360Z 
2025-01-14T13:16:42.5594880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5595170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5595170Z 
2025-01-14T13:16:42.5595240Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5595360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5595540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5595690Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5595760Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5595810Z >       sim.run_final()
2025-01-14T13:16:42.5595810Z 
2025-01-14T13:16:42.5595880Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5595970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5596050Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5596160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5596230Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5596350Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5596440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5596450Z 
2025-01-14T13:16:42.5596700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5596890Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5597060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5597280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5597420Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5597530Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5597540Z 
2025-01-14T13:16:42.5597610Z     def initialize_transport_state(
2025-01-14T13:16:42.5597660Z         self,
2025-01-14T13:16:42.5597730Z         simulation_state,
2025-01-14T13:16:42.5597800Z         opacity_state,
2025-01-14T13:16:42.5597860Z         macro_atom_state,
2025-01-14T13:16:42.5597900Z         plasma,
2025-01-14T13:16:42.5598030Z         no_of_packets,
2025-01-14T13:16:42.5598100Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5598150Z         iteration=0,
2025-01-14T13:16:42.5598190Z     ):
2025-01-14T13:16:42.5598300Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5598380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5598420Z         else:
2025-01-14T13:16:42.5598490Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5598540Z     
2025-01-14T13:16:42.5598650Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5598720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5598760Z         )
2025-01-14T13:16:42.5598810Z     
2025-01-14T13:16:42.5598910Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5599010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5599150Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5599230Z         else:
2025-01-14T13:16:42.5599300Z             continuum_state = None
2025-01-14T13:16:42.5599390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5599490Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5599570Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5599650Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5599720Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5599790Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5599860Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5599920Z         ).to_numba(
2025-01-14T13:16:42.5599980Z             macro_atom_state,
2025-01-14T13:16:42.5600060Z             self.line_interaction_type,
2025-01-14T13:16:42.5600120Z         )
2025-01-14T13:16:42.5600220Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5600460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5600540Z         ]
2025-01-14T13:16:42.5601220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5601230Z 
2025-01-14T13:16:42.5601390Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5601540Z ___________________ ERROR at setup of test_collection[t_rad] ___________________
2025-01-14T13:16:42.5601540Z 
2025-01-14T13:16:42.5602300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5602600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5602600Z 
2025-01-14T13:16:42.5602660Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5602800Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5602880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5603040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5603110Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5603160Z >       sim.run_final()
2025-01-14T13:16:42.5603160Z 
2025-01-14T13:16:42.5603220Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5603320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5603390Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5603500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5603570Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5603690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5603790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5604150Z 
2025-01-14T13:16:42.5604380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5604550Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5604730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5604980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5605440Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5605600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5605600Z 
2025-01-14T13:16:42.5605670Z     def initialize_transport_state(
2025-01-14T13:16:42.5605730Z         self,
2025-01-14T13:16:42.5605790Z         simulation_state,
2025-01-14T13:16:42.5605840Z         opacity_state,
2025-01-14T13:16:42.5605900Z         macro_atom_state,
2025-01-14T13:16:42.5605970Z         plasma,
2025-01-14T13:16:42.5606050Z         no_of_packets,
2025-01-14T13:16:42.5606110Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5606170Z         iteration=0,
2025-01-14T13:16:42.5606210Z     ):
2025-01-14T13:16:42.5606320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5606390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5606430Z         else:
2025-01-14T13:16:42.5606490Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5606550Z     
2025-01-14T13:16:42.5606660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5606740Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5606780Z         )
2025-01-14T13:16:42.5606820Z     
2025-01-14T13:16:42.5606930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5607010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5607140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5607190Z         else:
2025-01-14T13:16:42.5607430Z             continuum_state = None
2025-01-14T13:16:42.5607540Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5607630Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5607710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5607800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5607870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5607940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5608010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5608060Z         ).to_numba(
2025-01-14T13:16:42.5608110Z             macro_atom_state,
2025-01-14T13:16:42.5608170Z             self.line_interaction_type,
2025-01-14T13:16:42.5608220Z         )
2025-01-14T13:16:42.5608290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5608520Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5608560Z         ]
2025-01-14T13:16:42.5608820Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5608820Z 
2025-01-14T13:16:42.5608940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5609070Z _____________________ ERROR at setup of test_collection[w] _____________________
2025-01-14T13:16:42.5609070Z 
2025-01-14T13:16:42.5609620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5609950Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.5609960Z 
2025-01-14T13:16:42.5610120Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.5610250Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.5610320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.5610460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.5610530Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.5610570Z >       sim.run_final()
2025-01-14T13:16:42.5610590Z 
2025-01-14T13:16:42.5610640Z tardis/conftest.py:233: 
2025-01-14T13:16:42.5610740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5610810Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5610920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5610990Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5611110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5611200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5611210Z 
2025-01-14T13:16:42.5611450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.5611620Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.5611820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.5612040Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.5612160Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.5612270Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5612280Z 
2025-01-14T13:16:42.5612340Z     def initialize_transport_state(
2025-01-14T13:16:42.5612390Z         self,
2025-01-14T13:16:42.5612440Z         simulation_state,
2025-01-14T13:16:42.5612490Z         opacity_state,
2025-01-14T13:16:42.5612540Z         macro_atom_state,
2025-01-14T13:16:42.5612600Z         plasma,
2025-01-14T13:16:42.5612750Z         no_of_packets,
2025-01-14T13:16:42.5612810Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5612860Z         iteration=0,
2025-01-14T13:16:42.5612900Z     ):
2025-01-14T13:16:42.5613000Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5613090Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5613140Z         else:
2025-01-14T13:16:42.5613210Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5613260Z     
2025-01-14T13:16:42.5613380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5613460Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5613520Z         )
2025-01-14T13:16:42.5613580Z     
2025-01-14T13:16:42.5613700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5613810Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5613960Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5614020Z         else:
2025-01-14T13:16:42.5614090Z             continuum_state = None
2025-01-14T13:16:42.5614190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5614280Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5614350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5614430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5614500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5614570Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5614640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5614690Z         ).to_numba(
2025-01-14T13:16:42.5614740Z             macro_atom_state,
2025-01-14T13:16:42.5614810Z             self.line_interaction_type,
2025-01-14T13:16:42.5614850Z         )
2025-01-14T13:16:42.5614930Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5615230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5615290Z         ]
2025-01-14T13:16:42.5615560Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5615560Z 
2025-01-14T13:16:42.5615680Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5615820Z _________ ERROR at setup of test_plasma_state_iterations[iterations_w] _________
2025-01-14T13:16:42.5615830Z 
2025-01-14T13:16:42.5616310Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5616650Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5616660Z 
2025-01-14T13:16:42.5616720Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5616820Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5616890Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5616970Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5617050Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5617150Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5617200Z     
2025-01-14T13:16:42.5617280Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5617350Z >       sim.run_convergence()
2025-01-14T13:16:42.5617350Z 
2025-01-14T13:16:42.5617430Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5617540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5617640Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5617750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5617820Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5618040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5618140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5618150Z 
2025-01-14T13:16:42.5618390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5618570Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5618740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5618970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5619090Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5619220Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5619220Z 
2025-01-14T13:16:42.5619300Z     def initialize_transport_state(
2025-01-14T13:16:42.5619350Z         self,
2025-01-14T13:16:42.5619410Z         simulation_state,
2025-01-14T13:16:42.5619460Z         opacity_state,
2025-01-14T13:16:42.5619510Z         macro_atom_state,
2025-01-14T13:16:42.5619560Z         plasma,
2025-01-14T13:16:42.5619600Z         no_of_packets,
2025-01-14T13:16:42.5619660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5619710Z         iteration=0,
2025-01-14T13:16:42.5619750Z     ):
2025-01-14T13:16:42.5619840Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5619910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5619960Z         else:
2025-01-14T13:16:42.5620020Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5625110Z     
2025-01-14T13:16:42.5625250Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5625320Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5625370Z         )
2025-01-14T13:16:42.5625600Z     
2025-01-14T13:16:42.5625700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5625960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5626100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5626140Z         else:
2025-01-14T13:16:42.5626220Z             continuum_state = None
2025-01-14T13:16:42.5626300Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5626400Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5626470Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5626570Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5626640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5626710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5626780Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5626830Z         ).to_numba(
2025-01-14T13:16:42.5626880Z             macro_atom_state,
2025-01-14T13:16:42.5626950Z             self.line_interaction_type,
2025-01-14T13:16:42.5627000Z         )
2025-01-14T13:16:42.5627070Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5627320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5627370Z         ]
2025-01-14T13:16:42.5627640Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5627650Z 
2025-01-14T13:16:42.5627780Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5627920Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5628290Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5628660Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5629170Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5629610Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5629780Z _______ ERROR at setup of test_plasma_state_iterations[iterations_t_rad] _______
2025-01-14T13:16:42.5629790Z 
2025-01-14T13:16:42.5630330Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5630670Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5630670Z 
2025-01-14T13:16:42.5630740Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5630840Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5630930Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5631000Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5631090Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5631190Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5631250Z     
2025-01-14T13:16:42.5631330Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5631410Z >       sim.run_convergence()
2025-01-14T13:16:42.5631420Z 
2025-01-14T13:16:42.5631510Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5631620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5631720Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5631830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5631900Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5632530Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5632640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5632640Z 
2025-01-14T13:16:42.5632860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5633020Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5633210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5633460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5633580Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5633700Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5633700Z 
2025-01-14T13:16:42.5633760Z     def initialize_transport_state(
2025-01-14T13:16:42.5633810Z         self,
2025-01-14T13:16:42.5633870Z         simulation_state,
2025-01-14T13:16:42.5633920Z         opacity_state,
2025-01-14T13:16:42.5633970Z         macro_atom_state,
2025-01-14T13:16:42.5634010Z         plasma,
2025-01-14T13:16:42.5634070Z         no_of_packets,
2025-01-14T13:16:42.5634130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5634170Z         iteration=0,
2025-01-14T13:16:42.5634210Z     ):
2025-01-14T13:16:42.5634310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5634380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5634440Z         else:
2025-01-14T13:16:42.5634520Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5634570Z     
2025-01-14T13:16:42.5634680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5634750Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5634790Z         )
2025-01-14T13:16:42.5634840Z     
2025-01-14T13:16:42.5634950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5635070Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5635290Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5635340Z         else:
2025-01-14T13:16:42.5635400Z             continuum_state = None
2025-01-14T13:16:42.5635480Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5635590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5635670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5635750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5635820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5635890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5635970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5636030Z         ).to_numba(
2025-01-14T13:16:42.5636090Z             macro_atom_state,
2025-01-14T13:16:42.5636150Z             self.line_interaction_type,
2025-01-14T13:16:42.5636200Z         )
2025-01-14T13:16:42.5636270Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5636510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5636560Z         ]
2025-01-14T13:16:42.5636810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5636810Z 
2025-01-14T13:16:42.5636930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5637080Z _ ERROR at setup of test_plasma_state_iterations[iterations_electron_densities] _
2025-01-14T13:16:42.5637090Z 
2025-01-14T13:16:42.5637570Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5637880Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5637990Z 
2025-01-14T13:16:42.5638070Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5638170Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5638240Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5638300Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5638380Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5638470Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5638520Z     
2025-01-14T13:16:42.5638590Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5638640Z >       sim.run_convergence()
2025-01-14T13:16:42.5638650Z 
2025-01-14T13:16:42.5638730Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5638820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5638910Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5639020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5639100Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5639230Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5639330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5639330Z 
2025-01-14T13:16:42.5639560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5639740Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5639940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5640190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5640320Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5640450Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5640460Z 
2025-01-14T13:16:42.5640630Z     def initialize_transport_state(
2025-01-14T13:16:42.5640690Z         self,
2025-01-14T13:16:42.5640750Z         simulation_state,
2025-01-14T13:16:42.5640800Z         opacity_state,
2025-01-14T13:16:42.5640870Z         macro_atom_state,
2025-01-14T13:16:42.5640930Z         plasma,
2025-01-14T13:16:42.5640970Z         no_of_packets,
2025-01-14T13:16:42.5641050Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5641110Z         iteration=0,
2025-01-14T13:16:42.5641170Z     ):
2025-01-14T13:16:42.5641290Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5641390Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5641440Z         else:
2025-01-14T13:16:42.5641510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5641570Z     
2025-01-14T13:16:42.5641680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5641770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5641820Z         )
2025-01-14T13:16:42.5641860Z     
2025-01-14T13:16:42.5641960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5642070Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5642210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5642260Z         else:
2025-01-14T13:16:42.5642320Z             continuum_state = None
2025-01-14T13:16:42.5642400Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5642480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5642560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5642660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5642750Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5642820Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5642900Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5643070Z         ).to_numba(
2025-01-14T13:16:42.5643140Z             macro_atom_state,
2025-01-14T13:16:42.5643200Z             self.line_interaction_type,
2025-01-14T13:16:42.5643250Z         )
2025-01-14T13:16:42.5643330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5643570Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5643620Z         ]
2025-01-14T13:16:42.5643860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5643870Z 
2025-01-14T13:16:42.5643980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5644120Z ______ ERROR at setup of test_plasma_state_iterations[iterations_t_inner] ______
2025-01-14T13:16:42.5644120Z 
2025-01-14T13:16:42.5644620Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5644920Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5644930Z 
2025-01-14T13:16:42.5644990Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5645080Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5645150Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5645220Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5645310Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5645410Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5645450Z     
2025-01-14T13:16:42.5645520Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5645580Z >       sim.run_convergence()
2025-01-14T13:16:42.5645580Z 
2025-01-14T13:16:42.5645660Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5645820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5645920Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5646030Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5646100Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5646220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5646320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5646330Z 
2025-01-14T13:16:42.5646550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5646710Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5646920Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5647170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5647300Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5647410Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5647420Z 
2025-01-14T13:16:42.5647480Z     def initialize_transport_state(
2025-01-14T13:16:42.5647530Z         self,
2025-01-14T13:16:42.5647590Z         simulation_state,
2025-01-14T13:16:42.5647630Z         opacity_state,
2025-01-14T13:16:42.5647680Z         macro_atom_state,
2025-01-14T13:16:42.5647740Z         plasma,
2025-01-14T13:16:42.5647800Z         no_of_packets,
2025-01-14T13:16:42.5647850Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5647900Z         iteration=0,
2025-01-14T13:16:42.5647940Z     ):
2025-01-14T13:16:42.5648040Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5648110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5648170Z         else:
2025-01-14T13:16:42.5648330Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5648390Z     
2025-01-14T13:16:42.5648530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5648610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5648670Z         )
2025-01-14T13:16:42.5648720Z     
2025-01-14T13:16:42.5648840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5648940Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5649070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5649110Z         else:
2025-01-14T13:16:42.5649170Z             continuum_state = None
2025-01-14T13:16:42.5649260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5649360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5649440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5649540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5649650Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5649750Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5649840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5649890Z         ).to_numba(
2025-01-14T13:16:42.5649970Z             macro_atom_state,
2025-01-14T13:16:42.5650030Z             self.line_interaction_type,
2025-01-14T13:16:42.5650080Z         )
2025-01-14T13:16:42.5650150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5650400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5650470Z         ]
2025-01-14T13:16:42.5650760Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5650760Z 
2025-01-14T13:16:42.5650900Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5651060Z __________ ERROR at setup of test_plasma_estimates[nu_bar_estimator] ___________
2025-01-14T13:16:42.5651070Z 
2025-01-14T13:16:42.5651930Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5652300Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5652320Z 
2025-01-14T13:16:42.5652400Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5652520Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5652590Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5652670Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5652760Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5652880Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5652940Z     
2025-01-14T13:16:42.5653030Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5653090Z >       sim.run_convergence()
2025-01-14T13:16:42.5653090Z 
2025-01-14T13:16:42.5653200Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5653300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5653390Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5653530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5653610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5653740Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5653840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5653850Z 
2025-01-14T13:16:42.5654070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5654240Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5654720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5654980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5655120Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5655250Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5655250Z 
2025-01-14T13:16:42.5655310Z     def initialize_transport_state(
2025-01-14T13:16:42.5655360Z         self,
2025-01-14T13:16:42.5655410Z         simulation_state,
2025-01-14T13:16:42.5655480Z         opacity_state,
2025-01-14T13:16:42.5655540Z         macro_atom_state,
2025-01-14T13:16:42.5655590Z         plasma,
2025-01-14T13:16:42.5655640Z         no_of_packets,
2025-01-14T13:16:42.5655700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5655750Z         iteration=0,
2025-01-14T13:16:42.5655800Z     ):
2025-01-14T13:16:42.5655910Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5655990Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5656040Z         else:
2025-01-14T13:16:42.5656090Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5656150Z     
2025-01-14T13:16:42.5656260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5656330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5656370Z         )
2025-01-14T13:16:42.5656420Z     
2025-01-14T13:16:42.5656510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5656600Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5656720Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5656770Z         else:
2025-01-14T13:16:42.5656820Z             continuum_state = None
2025-01-14T13:16:42.5656900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5656990Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5657170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5657270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5657340Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5657410Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5657470Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5657520Z         ).to_numba(
2025-01-14T13:16:42.5657570Z             macro_atom_state,
2025-01-14T13:16:42.5657630Z             self.line_interaction_type,
2025-01-14T13:16:42.5657680Z         )
2025-01-14T13:16:42.5657770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5658010Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5658070Z         ]
2025-01-14T13:16:42.5658310Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5658310Z 
2025-01-14T13:16:42.5658430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5658560Z _____________ ERROR at setup of test_plasma_estimates[j_estimator] _____________
2025-01-14T13:16:42.5658570Z 
2025-01-14T13:16:42.5659070Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5659400Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5659410Z 
2025-01-14T13:16:42.5659480Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5659580Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5659670Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5659850Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5659930Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5660020Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5660070Z     
2025-01-14T13:16:42.5660140Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5660200Z >       sim.run_convergence()
2025-01-14T13:16:42.5660200Z 
2025-01-14T13:16:42.5660280Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5660370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5660460Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5660590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5660660Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5660790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5660870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5660880Z 
2025-01-14T13:16:42.5661090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5661280Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5661490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5661710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5661820Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5661940Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5661940Z 
2025-01-14T13:16:42.5662000Z     def initialize_transport_state(
2025-01-14T13:16:42.5662040Z         self,
2025-01-14T13:16:42.5662090Z         simulation_state,
2025-01-14T13:16:42.5662150Z         opacity_state,
2025-01-14T13:16:42.5662200Z         macro_atom_state,
2025-01-14T13:16:42.5662240Z         plasma,
2025-01-14T13:16:42.5662300Z         no_of_packets,
2025-01-14T13:16:42.5662440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5662490Z         iteration=0,
2025-01-14T13:16:42.5662540Z     ):
2025-01-14T13:16:42.5662630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5662700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5662750Z         else:
2025-01-14T13:16:42.5662810Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5662850Z     
2025-01-14T13:16:42.5662950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5663030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5663070Z         )
2025-01-14T13:16:42.5663110Z     
2025-01-14T13:16:42.5663210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5663290Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5663410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5663460Z         else:
2025-01-14T13:16:42.5663520Z             continuum_state = None
2025-01-14T13:16:42.5663590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5663680Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5663750Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5663820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5663890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5663960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5664030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5664070Z         ).to_numba(
2025-01-14T13:16:42.5664120Z             macro_atom_state,
2025-01-14T13:16:42.5664180Z             self.line_interaction_type,
2025-01-14T13:16:42.5664230Z         )
2025-01-14T13:16:42.5664300Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5664530Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5664680Z         ]
2025-01-14T13:16:42.5664950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5664950Z 
2025-01-14T13:16:42.5665070Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5665220Z _____________ ERROR at setup of test_plasma_estimates[t_radiative] _____________
2025-01-14T13:16:42.5665220Z 
2025-01-14T13:16:42.5665720Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5666170Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5666180Z 
2025-01-14T13:16:42.5666270Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5666380Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5666460Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5666520Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5666610Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5666710Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5666760Z     
2025-01-14T13:16:42.5666840Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5666910Z >       sim.run_convergence()
2025-01-14T13:16:42.5666910Z 
2025-01-14T13:16:42.5666990Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5667270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5667380Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5667490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5667560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5667880Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5668000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5668010Z 
2025-01-14T13:16:42.5668230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5668400Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5668560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5668780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5668900Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5669030Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5669040Z 
2025-01-14T13:16:42.5669120Z     def initialize_transport_state(
2025-01-14T13:16:42.5669170Z         self,
2025-01-14T13:16:42.5669240Z         simulation_state,
2025-01-14T13:16:42.5669300Z         opacity_state,
2025-01-14T13:16:42.5669370Z         macro_atom_state,
2025-01-14T13:16:42.5669420Z         plasma,
2025-01-14T13:16:42.5669470Z         no_of_packets,
2025-01-14T13:16:42.5669520Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5669570Z         iteration=0,
2025-01-14T13:16:42.5669610Z     ):
2025-01-14T13:16:42.5669710Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5669770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5669820Z         else:
2025-01-14T13:16:42.5669870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5669910Z     
2025-01-14T13:16:42.5670020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5670090Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5670130Z         )
2025-01-14T13:16:42.5670170Z     
2025-01-14T13:16:42.5670340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5670440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5670560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5670600Z         else:
2025-01-14T13:16:42.5670660Z             continuum_state = None
2025-01-14T13:16:42.5670730Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5670820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5670890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5670970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5671040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5671110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5671170Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5671220Z         ).to_numba(
2025-01-14T13:16:42.5671270Z             macro_atom_state,
2025-01-14T13:16:42.5671330Z             self.line_interaction_type,
2025-01-14T13:16:42.5671380Z         )
2025-01-14T13:16:42.5671450Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5671670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5671710Z         ]
2025-01-14T13:16:42.5671950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5671960Z 
2025-01-14T13:16:42.5672070Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5672220Z ___________ ERROR at setup of test_plasma_estimates[dilution_factor] ___________
2025-01-14T13:16:42.5672230Z 
2025-01-14T13:16:42.5672700Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5673430Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5673440Z 
2025-01-14T13:16:42.5673530Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5673620Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5673700Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5673760Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5673840Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5673930Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5673970Z     
2025-01-14T13:16:42.5674040Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5674090Z >       sim.run_convergence()
2025-01-14T13:16:42.5674100Z 
2025-01-14T13:16:42.5674200Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5674290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5674370Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5674500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5674600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5674720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5674820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5674830Z 
2025-01-14T13:16:42.5675030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5675190Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5675360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5675570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5675690Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5676020Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5676030Z 
2025-01-14T13:16:42.5676090Z     def initialize_transport_state(
2025-01-14T13:16:42.5676140Z         self,
2025-01-14T13:16:42.5676190Z         simulation_state,
2025-01-14T13:16:42.5676260Z         opacity_state,
2025-01-14T13:16:42.5676330Z         macro_atom_state,
2025-01-14T13:16:42.5676390Z         plasma,
2025-01-14T13:16:42.5676460Z         no_of_packets,
2025-01-14T13:16:42.5676530Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5676580Z         iteration=0,
2025-01-14T13:16:42.5676620Z     ):
2025-01-14T13:16:42.5676730Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5676800Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5676850Z         else:
2025-01-14T13:16:42.5676900Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5676940Z     
2025-01-14T13:16:42.5677050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5677120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5677170Z         )
2025-01-14T13:16:42.5677210Z     
2025-01-14T13:16:42.5677310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5677390Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5677540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5677600Z         else:
2025-01-14T13:16:42.5677670Z             continuum_state = None
2025-01-14T13:16:42.5677740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5677820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5677890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5677970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5678040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5678110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5678170Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5678300Z         ).to_numba(
2025-01-14T13:16:42.5678360Z             macro_atom_state,
2025-01-14T13:16:42.5678430Z             self.line_interaction_type,
2025-01-14T13:16:42.5678480Z         )
2025-01-14T13:16:42.5678550Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5678770Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5678820Z         ]
2025-01-14T13:16:42.5679080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5679080Z 
2025-01-14T13:16:42.5679200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5679330Z _____________ ERROR at setup of test_plasma_estimates[output_nus] ______________
2025-01-14T13:16:42.5679330Z 
2025-01-14T13:16:42.5679810Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5680110Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5680120Z 
2025-01-14T13:16:42.5680190Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5680300Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5680370Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5680440Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5680510Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5680600Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5680640Z     
2025-01-14T13:16:42.5685130Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5685210Z >       sim.run_convergence()
2025-01-14T13:16:42.5685350Z 
2025-01-14T13:16:42.5685450Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5685530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5685620Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5685730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5685790Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5685920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5686000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5686000Z 
2025-01-14T13:16:42.5686210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5686370Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5686540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5686780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5686910Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5687030Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5687040Z 
2025-01-14T13:16:42.5687110Z     def initialize_transport_state(
2025-01-14T13:16:42.5687150Z         self,
2025-01-14T13:16:42.5687210Z         simulation_state,
2025-01-14T13:16:42.5687270Z         opacity_state,
2025-01-14T13:16:42.5687320Z         macro_atom_state,
2025-01-14T13:16:42.5687370Z         plasma,
2025-01-14T13:16:42.5687420Z         no_of_packets,
2025-01-14T13:16:42.5687470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5687520Z         iteration=0,
2025-01-14T13:16:42.5687560Z     ):
2025-01-14T13:16:42.5687660Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5687730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5687780Z         else:
2025-01-14T13:16:42.5687920Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5687960Z     
2025-01-14T13:16:42.5688070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5688140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5688190Z         )
2025-01-14T13:16:42.5688230Z     
2025-01-14T13:16:42.5688330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5688420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5688550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5688610Z         else:
2025-01-14T13:16:42.5688660Z             continuum_state = None
2025-01-14T13:16:42.5688740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5688820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5688890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5688970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5689070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5689140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5689220Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5689270Z         ).to_numba(
2025-01-14T13:16:42.5689320Z             macro_atom_state,
2025-01-14T13:16:42.5689380Z             self.line_interaction_type,
2025-01-14T13:16:42.5689430Z         )
2025-01-14T13:16:42.5689510Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5689720Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5689760Z         ]
2025-01-14T13:16:42.5690020Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5690030Z 
2025-01-14T13:16:42.5690140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5690360Z ___________ ERROR at setup of test_plasma_estimates[output_energies] ___________
2025-01-14T13:16:42.5690360Z 
2025-01-14T13:16:42.5690840Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5691140Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5691140Z 
2025-01-14T13:16:42.5691220Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.5691350Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-14T13:16:42.5691420Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5691490Z         config.montecarlo.iterations = 2
2025-01-14T13:16:42.5691570Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-14T13:16:42.5691660Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-14T13:16:42.5691700Z     
2025-01-14T13:16:42.5691780Z         sim = Simulation.from_config(config)
2025-01-14T13:16:42.5691830Z >       sim.run_convergence()
2025-01-14T13:16:42.5691840Z 
2025-01-14T13:16:42.5691920Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-14T13:16:42.5692010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5692090Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5692210Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5692280Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5692410Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5692490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5692490Z 
2025-01-14T13:16:42.5692700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1591c8560>
2025-01-14T13:16:42.5692940Z simulation_state = <tardis.model.base.SimulationState object at 0x154983f80>
2025-01-14T13:16:42.5693130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17491d3a0>
2025-01-14T13:16:42.5693350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17491eb40>
2025-01-14T13:16:42.5693470Z plasma = <tardis.plasma.base.BasePlasma object at 0x154a14950>
2025-01-14T13:16:42.5693580Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5693580Z 
2025-01-14T13:16:42.5693650Z     def initialize_transport_state(
2025-01-14T13:16:42.5693700Z         self,
2025-01-14T13:16:42.5693750Z         simulation_state,
2025-01-14T13:16:42.5693800Z         opacity_state,
2025-01-14T13:16:42.5693850Z         macro_atom_state,
2025-01-14T13:16:42.5693900Z         plasma,
2025-01-14T13:16:42.5693940Z         no_of_packets,
2025-01-14T13:16:42.5694000Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5694050Z         iteration=0,
2025-01-14T13:16:42.5694100Z     ):
2025-01-14T13:16:42.5694200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5694270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5694320Z         else:
2025-01-14T13:16:42.5694380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5694430Z     
2025-01-14T13:16:42.5694530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5694600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5694640Z         )
2025-01-14T13:16:42.5694690Z     
2025-01-14T13:16:42.5694790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5694870Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5694990Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5695040Z         else:
2025-01-14T13:16:42.5695090Z             continuum_state = None
2025-01-14T13:16:42.5695230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5695310Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5695380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5695470Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5695540Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5695610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5695680Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5695720Z         ).to_numba(
2025-01-14T13:16:42.5695780Z             macro_atom_state,
2025-01-14T13:16:42.5695840Z             self.line_interaction_type,
2025-01-14T13:16:42.5695890Z         )
2025-01-14T13:16:42.5695960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5696180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5696230Z         ]
2025-01-14T13:16:42.5696470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5696480Z 
2025-01-14T13:16:42.5696600Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5696750Z ___________ ERROR at setup of TestSpectrumSolver.test_initialization ___________
2025-01-14T13:16:42.5696750Z 
2025-01-14T13:16:42.5696980Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a2fe390>
2025-01-14T13:16:42.5697120Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:16:42.5697420Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5697480Z generate_reference = False
2025-01-14T13:16:42.5697660Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5697670Z 
2025-01-14T13:16:42.5697730Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5697790Z     def simulation(
2025-01-14T13:16:42.5697830Z         self,
2025-01-14T13:16:42.5698130Z         request,
2025-01-14T13:16:42.5698190Z         atomic_data_fname,
2025-01-14T13:16:42.5698250Z         generate_reference,
2025-01-14T13:16:42.5698320Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5698360Z     ):
2025-01-14T13:16:42.5698430Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5698560Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5698600Z         )
2025-01-14T13:16:42.5698690Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5698740Z     
2025-01-14T13:16:42.5698820Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5698880Z >       simulation.run_final()
2025-01-14T13:16:42.5698880Z 
2025-01-14T13:16:42.5698970Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:16:42.5699050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5699130Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5699240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5699310Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5699430Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5699520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5699520Z 
2025-01-14T13:16:42.5699730Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x305580980>
2025-01-14T13:16:42.5699880Z simulation_state = <tardis.model.base.SimulationState object at 0x305594e90>
2025-01-14T13:16:42.5700050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31639d1c0>
2025-01-14T13:16:42.5700260Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x31639fb60>
2025-01-14T13:16:42.5700390Z plasma = <tardis.plasma.base.BasePlasma object at 0x3054a1790>
2025-01-14T13:16:42.5700770Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5700780Z 
2025-01-14T13:16:42.5700850Z     def initialize_transport_state(
2025-01-14T13:16:42.5700920Z         self,
2025-01-14T13:16:42.5700980Z         simulation_state,
2025-01-14T13:16:42.5701030Z         opacity_state,
2025-01-14T13:16:42.5701080Z         macro_atom_state,
2025-01-14T13:16:42.5701120Z         plasma,
2025-01-14T13:16:42.5701170Z         no_of_packets,
2025-01-14T13:16:42.5701240Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5701290Z         iteration=0,
2025-01-14T13:16:42.5701340Z     ):
2025-01-14T13:16:42.5701430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5701500Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5701540Z         else:
2025-01-14T13:16:42.5701600Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5701640Z     
2025-01-14T13:16:42.5701750Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5701830Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5701870Z         )
2025-01-14T13:16:42.5701910Z     
2025-01-14T13:16:42.5702010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5702100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5702220Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5702260Z         else:
2025-01-14T13:16:42.5702330Z             continuum_state = None
2025-01-14T13:16:42.5702410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5702490Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5702560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5702640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5702720Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5702790Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5702850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5702990Z         ).to_numba(
2025-01-14T13:16:42.5703050Z             macro_atom_state,
2025-01-14T13:16:42.5703110Z             self.line_interaction_type,
2025-01-14T13:16:42.5703150Z         )
2025-01-14T13:16:42.5703230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5703440Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5703490Z         ]
2025-01-14T13:16:42.5703740Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5703740Z 
2025-01-14T13:16:42.5703860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5703980Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5704310Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5704690Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5704820Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5705230Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5705380Z _______ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets ________
2025-01-14T13:16:42.5705380Z 
2025-01-14T13:16:42.5705580Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a2fe390>
2025-01-14T13:16:42.5705720Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:16:42.5706250Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5706460Z generate_reference = False
2025-01-14T13:16:42.5706610Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5706610Z 
2025-01-14T13:16:42.5706680Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5706730Z     def simulation(
2025-01-14T13:16:42.5706770Z         self,
2025-01-14T13:16:42.5706810Z         request,
2025-01-14T13:16:42.5706870Z         atomic_data_fname,
2025-01-14T13:16:42.5706920Z         generate_reference,
2025-01-14T13:16:42.5706990Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5707030Z     ):
2025-01-14T13:16:42.5707100Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5707240Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5707290Z         )
2025-01-14T13:16:42.5707360Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5707400Z     
2025-01-14T13:16:42.5707480Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5707540Z >       simulation.run_final()
2025-01-14T13:16:42.5707540Z 
2025-01-14T13:16:42.5707640Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:16:42.5707720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5707800Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5707910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5707980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5708100Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5708190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5708190Z 
2025-01-14T13:16:42.5708400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x305580980>
2025-01-14T13:16:42.5708560Z simulation_state = <tardis.model.base.SimulationState object at 0x305594e90>
2025-01-14T13:16:42.5708730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31639d1c0>
2025-01-14T13:16:42.5709010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x31639fb60>
2025-01-14T13:16:42.5709140Z plasma = <tardis.plasma.base.BasePlasma object at 0x3054a1790>
2025-01-14T13:16:42.5709250Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5709260Z 
2025-01-14T13:16:42.5709320Z     def initialize_transport_state(
2025-01-14T13:16:42.5709370Z         self,
2025-01-14T13:16:42.5709420Z         simulation_state,
2025-01-14T13:16:42.5709470Z         opacity_state,
2025-01-14T13:16:42.5709520Z         macro_atom_state,
2025-01-14T13:16:42.5709560Z         plasma,
2025-01-14T13:16:42.5709610Z         no_of_packets,
2025-01-14T13:16:42.5709670Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5709710Z         iteration=0,
2025-01-14T13:16:42.5709760Z     ):
2025-01-14T13:16:42.5709850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5709920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5709970Z         else:
2025-01-14T13:16:42.5710030Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5710070Z     
2025-01-14T13:16:42.5710170Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5710240Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5710290Z         )
2025-01-14T13:16:42.5710330Z     
2025-01-14T13:16:42.5710430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5710510Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5710640Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5710680Z         else:
2025-01-14T13:16:42.5710750Z             continuum_state = None
2025-01-14T13:16:42.5710830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5710910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5710990Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5711170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5711250Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5711320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5711390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5711430Z         ).to_numba(
2025-01-14T13:16:42.5711490Z             macro_atom_state,
2025-01-14T13:16:42.5711550Z             self.line_interaction_type,
2025-01-14T13:16:42.5711600Z         )
2025-01-14T13:16:42.5711670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5711890Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5711940Z         ]
2025-01-14T13:16:42.5712200Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5712200Z 
2025-01-14T13:16:42.5712320Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5712480Z __ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets_reabsorbed __
2025-01-14T13:16:42.5712480Z 
2025-01-14T13:16:42.5712680Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a2fe390>
2025-01-14T13:16:42.5712820Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:16:42.5713130Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5713190Z generate_reference = False
2025-01-14T13:16:42.5713350Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5713360Z 
2025-01-14T13:16:42.5713430Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5713490Z     def simulation(
2025-01-14T13:16:42.5713540Z         self,
2025-01-14T13:16:42.5713580Z         request,
2025-01-14T13:16:42.5713640Z         atomic_data_fname,
2025-01-14T13:16:42.5713690Z         generate_reference,
2025-01-14T13:16:42.5713840Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5713890Z     ):
2025-01-14T13:16:42.5713970Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5714120Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5714170Z         )
2025-01-14T13:16:42.5714240Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5714290Z     
2025-01-14T13:16:42.5714380Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5714460Z >       simulation.run_final()
2025-01-14T13:16:42.5714470Z 
2025-01-14T13:16:42.5714560Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:16:42.5714640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5714730Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5714870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5714950Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5715070Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5715180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5715190Z 
2025-01-14T13:16:42.5715430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x305580980>
2025-01-14T13:16:42.5715630Z simulation_state = <tardis.model.base.SimulationState object at 0x305594e90>
2025-01-14T13:16:42.5715830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31639d1c0>
2025-01-14T13:16:42.5716050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x31639fb60>
2025-01-14T13:16:42.5716200Z plasma = <tardis.plasma.base.BasePlasma object at 0x3054a1790>
2025-01-14T13:16:42.5716320Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5716320Z 
2025-01-14T13:16:42.5716500Z     def initialize_transport_state(
2025-01-14T13:16:42.5716570Z         self,
2025-01-14T13:16:42.5716640Z         simulation_state,
2025-01-14T13:16:42.5716710Z         opacity_state,
2025-01-14T13:16:42.5716790Z         macro_atom_state,
2025-01-14T13:16:42.5716860Z         plasma,
2025-01-14T13:16:42.5716920Z         no_of_packets,
2025-01-14T13:16:42.5716970Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5717030Z         iteration=0,
2025-01-14T13:16:42.5717090Z     ):
2025-01-14T13:16:42.5717210Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5717310Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5717370Z         else:
2025-01-14T13:16:42.5717450Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5717520Z     
2025-01-14T13:16:42.5717660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5717760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5717810Z         )
2025-01-14T13:16:42.5717860Z     
2025-01-14T13:16:42.5718000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5718110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5718260Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5718320Z         else:
2025-01-14T13:16:42.5718400Z             continuum_state = None
2025-01-14T13:16:42.5718480Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5718580Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5718660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5718750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5718850Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5718930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5719020Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5719090Z         ).to_numba(
2025-01-14T13:16:42.5719160Z             macro_atom_state,
2025-01-14T13:16:42.5719240Z             self.line_interaction_type,
2025-01-14T13:16:42.5719580Z         )
2025-01-14T13:16:42.5719690Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5719960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5720000Z         ]
2025-01-14T13:16:42.5720290Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5720300Z 
2025-01-14T13:16:42.5720440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5720600Z _______________ ERROR at setup of TestSpectrumSolver.test_solve ________________
2025-01-14T13:16:42.5720610Z 
2025-01-14T13:16:42.5720810Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a2fe390>
2025-01-14T13:16:42.5720980Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-14T13:16:42.5721330Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5721410Z generate_reference = False
2025-01-14T13:16:42.5721580Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5721580Z 
2025-01-14T13:16:42.5721640Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5721720Z     def simulation(
2025-01-14T13:16:42.5721780Z         self,
2025-01-14T13:16:42.5721840Z         request,
2025-01-14T13:16:42.5721910Z         atomic_data_fname,
2025-01-14T13:16:42.5721990Z         generate_reference,
2025-01-14T13:16:42.5722090Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5722140Z     ):
2025-01-14T13:16:42.5722220Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5722380Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5722440Z         )
2025-01-14T13:16:42.5722520Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5723110Z     
2025-01-14T13:16:42.5723220Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5723290Z >       simulation.run_final()
2025-01-14T13:16:42.5723290Z 
2025-01-14T13:16:42.5723400Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-14T13:16:42.5723520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5723610Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.5723750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5723840Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5723990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5724100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5724110Z 
2025-01-14T13:16:42.5724350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x305580980>
2025-01-14T13:16:42.5724540Z simulation_state = <tardis.model.base.SimulationState object at 0x305594e90>
2025-01-14T13:16:42.5724760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x31639d1c0>
2025-01-14T13:16:42.5725020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x31639fb60>
2025-01-14T13:16:42.5725160Z plasma = <tardis.plasma.base.BasePlasma object at 0x3054a1790>
2025-01-14T13:16:42.5725310Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.5725310Z 
2025-01-14T13:16:42.5725390Z     def initialize_transport_state(
2025-01-14T13:16:42.5725440Z         self,
2025-01-14T13:16:42.5725520Z         simulation_state,
2025-01-14T13:16:42.5725580Z         opacity_state,
2025-01-14T13:16:42.5725640Z         macro_atom_state,
2025-01-14T13:16:42.5725680Z         plasma,
2025-01-14T13:16:42.5725740Z         no_of_packets,
2025-01-14T13:16:42.5725810Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5725880Z         iteration=0,
2025-01-14T13:16:42.5725950Z     ):
2025-01-14T13:16:42.5726200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5726300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5726360Z         else:
2025-01-14T13:16:42.5726440Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5726490Z     
2025-01-14T13:16:42.5726630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5726730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5726780Z         )
2025-01-14T13:16:42.5726840Z     
2025-01-14T13:16:42.5726970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5727080Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5727230Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5727300Z         else:
2025-01-14T13:16:42.5727370Z             continuum_state = None
2025-01-14T13:16:42.5727450Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5727580Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5727670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5727770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5727870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5727940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5728030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5728090Z         ).to_numba(
2025-01-14T13:16:42.5728160Z             macro_atom_state,
2025-01-14T13:16:42.5728240Z             self.line_interaction_type,
2025-01-14T13:16:42.5728310Z         )
2025-01-14T13:16:42.5728400Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5728660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5728710Z         ]
2025-01-14T13:16:42.5728980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5729090Z 
2025-01-14T13:16:42.5729230Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5730570Z _________ ERROR at setup of TestTransportSimple.test_j_blue_estimators _________
2025-01-14T13:16:42.5730650Z 
2025-01-14T13:16:42.5731290Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x118c14560>
2025-01-14T13:16:42.5731770Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:16:42.5732720Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5732940Z generate_reference = False
2025-01-14T13:16:42.5733440Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5733460Z 
2025-01-14T13:16:42.5733680Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5733880Z     def simulation(
2025-01-14T13:16:42.5734100Z         self,
2025-01-14T13:16:42.5734290Z         request,
2025-01-14T13:16:42.5734510Z         atomic_data_fname,
2025-01-14T13:16:42.5734730Z         generate_reference,
2025-01-14T13:16:42.5734980Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5735150Z     ):
2025-01-14T13:16:42.5735390Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5735830Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5736020Z         )
2025-01-14T13:16:42.5736230Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5736370Z     
2025-01-14T13:16:42.5736590Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5736780Z >       simulation.run_convergence()
2025-01-14T13:16:42.5736790Z 
2025-01-14T13:16:42.5736980Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:16:42.5737260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5737550Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5738920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5739130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5739270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5739370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5739370Z 
2025-01-14T13:16:42.5739590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ec42930>
2025-01-14T13:16:42.5739750Z simulation_state = <tardis.model.base.SimulationState object at 0x31bd20d70>
2025-01-14T13:16:42.5739940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310c2e300>
2025-01-14T13:16:42.5740170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e353e60>
2025-01-14T13:16:42.5740300Z plasma = <tardis.plasma.base.BasePlasma object at 0x312a20650>
2025-01-14T13:16:42.5740430Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5740430Z 
2025-01-14T13:16:42.5740500Z     def initialize_transport_state(
2025-01-14T13:16:42.5740550Z         self,
2025-01-14T13:16:42.5740610Z         simulation_state,
2025-01-14T13:16:42.5740660Z         opacity_state,
2025-01-14T13:16:42.5740710Z         macro_atom_state,
2025-01-14T13:16:42.5740760Z         plasma,
2025-01-14T13:16:42.5740810Z         no_of_packets,
2025-01-14T13:16:42.5740870Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5740920Z         iteration=0,
2025-01-14T13:16:42.5740960Z     ):
2025-01-14T13:16:42.5741070Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5741140Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5741190Z         else:
2025-01-14T13:16:42.5741250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5741290Z     
2025-01-14T13:16:42.5741400Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5741610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5741650Z         )
2025-01-14T13:16:42.5741700Z     
2025-01-14T13:16:42.5741810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5741890Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5742020Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5742070Z         else:
2025-01-14T13:16:42.5742130Z             continuum_state = None
2025-01-14T13:16:42.5742210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5742290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5742360Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5742450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5742530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5742600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5742670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5742720Z         ).to_numba(
2025-01-14T13:16:42.5742780Z             macro_atom_state,
2025-01-14T13:16:42.5742840Z             self.line_interaction_type,
2025-01-14T13:16:42.5742890Z         )
2025-01-14T13:16:42.5742980Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5743230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5743270Z         ]
2025-01-14T13:16:42.5743550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5743560Z 
2025-01-14T13:16:42.5743670Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5743800Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5744210Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5749800Z 	
2025-01-14T13:16:42.5750560Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.5750760Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5751150Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.5751310Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5751770Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.5752000Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5752410Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5752590Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5752800Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.5752980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5753040Z 	
2025-01-14T13:16:42.5753190Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.5753340Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5753490Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.5753810Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.5754150Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.5754560Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.5755140Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5755360Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.5755450Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.5755530Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.5755710Z _____________ ERROR at setup of TestTransportSimple.test_spectrum ______________
2025-01-14T13:16:42.5755710Z 
2025-01-14T13:16:42.5755890Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x118c14560>
2025-01-14T13:16:42.5756060Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:16:42.5756400Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5756470Z generate_reference = False
2025-01-14T13:16:42.5756660Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5756670Z 
2025-01-14T13:16:42.5756740Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5756810Z     def simulation(
2025-01-14T13:16:42.5756860Z         self,
2025-01-14T13:16:42.5756910Z         request,
2025-01-14T13:16:42.5756960Z         atomic_data_fname,
2025-01-14T13:16:42.5757020Z         generate_reference,
2025-01-14T13:16:42.5757100Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5757140Z     ):
2025-01-14T13:16:42.5757220Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5757370Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5757420Z         )
2025-01-14T13:16:42.5757490Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5757530Z     
2025-01-14T13:16:42.5757610Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5757670Z >       simulation.run_convergence()
2025-01-14T13:16:42.5757680Z 
2025-01-14T13:16:42.5757740Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:16:42.5758100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5758200Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5758320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5758390Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5758510Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5758620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5758620Z 
2025-01-14T13:16:42.5758840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ec42930>
2025-01-14T13:16:42.5759010Z simulation_state = <tardis.model.base.SimulationState object at 0x31bd20d70>
2025-01-14T13:16:42.5759190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310c2e300>
2025-01-14T13:16:42.5759410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e353e60>
2025-01-14T13:16:42.5759540Z plasma = <tardis.plasma.base.BasePlasma object at 0x312a20650>
2025-01-14T13:16:42.5759660Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5759660Z 
2025-01-14T13:16:42.5759730Z     def initialize_transport_state(
2025-01-14T13:16:42.5759780Z         self,
2025-01-14T13:16:42.5759840Z         simulation_state,
2025-01-14T13:16:42.5759900Z         opacity_state,
2025-01-14T13:16:42.5759980Z         macro_atom_state,
2025-01-14T13:16:42.5760030Z         plasma,
2025-01-14T13:16:42.5760090Z         no_of_packets,
2025-01-14T13:16:42.5760160Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5760230Z         iteration=0,
2025-01-14T13:16:42.5760280Z     ):
2025-01-14T13:16:42.5760380Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5760450Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5760730Z         else:
2025-01-14T13:16:42.5760790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5760830Z     
2025-01-14T13:16:42.5760940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5761010Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5761060Z         )
2025-01-14T13:16:42.5761100Z     
2025-01-14T13:16:42.5761200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5761290Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5761410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5761460Z         else:
2025-01-14T13:16:42.5761520Z             continuum_state = None
2025-01-14T13:16:42.5761590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5761680Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5761750Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5761830Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5761910Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5761980Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5762050Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5762090Z         ).to_numba(
2025-01-14T13:16:42.5762140Z             macro_atom_state,
2025-01-14T13:16:42.5762200Z             self.line_interaction_type,
2025-01-14T13:16:42.5762250Z         )
2025-01-14T13:16:42.5762320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5762550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5762590Z         ]
2025-01-14T13:16:42.5762840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5762840Z 
2025-01-14T13:16:42.5762970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5763280Z _________ ERROR at setup of TestTransportSimple.test_virtual_spectrum __________
2025-01-14T13:16:42.5763290Z 
2025-01-14T13:16:42.5763460Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x118c14560>
2025-01-14T13:16:42.5763610Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-14T13:16:42.5763910Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5763980Z generate_reference = False
2025-01-14T13:16:42.5764150Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.5764150Z 
2025-01-14T13:16:42.5764210Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5764270Z     def simulation(
2025-01-14T13:16:42.5764310Z         self,
2025-01-14T13:16:42.5764360Z         request,
2025-01-14T13:16:42.5764410Z         atomic_data_fname,
2025-01-14T13:16:42.5764470Z         generate_reference,
2025-01-14T13:16:42.5764540Z         example_configuration_dir: Path,
2025-01-14T13:16:42.5764580Z     ):
2025-01-14T13:16:42.5764650Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.5764790Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-14T13:16:42.5764830Z         )
2025-01-14T13:16:42.5764900Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.5764950Z     
2025-01-14T13:16:42.5765030Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5765090Z >       simulation.run_convergence()
2025-01-14T13:16:42.5765090Z 
2025-01-14T13:16:42.5765160Z tardis/tests/test_tardis_full.py:54: 
2025-01-14T13:16:42.5765250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5765340Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5765450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5765520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5765730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5766680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5766690Z 
2025-01-14T13:16:42.5766930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ec42930>
2025-01-14T13:16:42.5767090Z simulation_state = <tardis.model.base.SimulationState object at 0x31bd20d70>
2025-01-14T13:16:42.5767270Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310c2e300>
2025-01-14T13:16:42.5767500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e353e60>
2025-01-14T13:16:42.5767620Z plasma = <tardis.plasma.base.BasePlasma object at 0x312a20650>
2025-01-14T13:16:42.5767740Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5767740Z 
2025-01-14T13:16:42.5767800Z     def initialize_transport_state(
2025-01-14T13:16:42.5767850Z         self,
2025-01-14T13:16:42.5767910Z         simulation_state,
2025-01-14T13:16:42.5767960Z         opacity_state,
2025-01-14T13:16:42.5768010Z         macro_atom_state,
2025-01-14T13:16:42.5768060Z         plasma,
2025-01-14T13:16:42.5768110Z         no_of_packets,
2025-01-14T13:16:42.5768170Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5768220Z         iteration=0,
2025-01-14T13:16:42.5768260Z     ):
2025-01-14T13:16:42.5768360Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5768430Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5768480Z         else:
2025-01-14T13:16:42.5768530Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5768590Z     
2025-01-14T13:16:42.5768700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5768770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5768820Z         )
2025-01-14T13:16:42.5768860Z     
2025-01-14T13:16:42.5768990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5769080Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5769360Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5769410Z         else:
2025-01-14T13:16:42.5769470Z             continuum_state = None
2025-01-14T13:16:42.5769550Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5769630Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5769700Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5769790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5769880Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5769960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5770030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5770080Z         ).to_numba(
2025-01-14T13:16:42.5770130Z             macro_atom_state,
2025-01-14T13:16:42.5770200Z             self.line_interaction_type,
2025-01-14T13:16:42.5770250Z         )
2025-01-14T13:16:42.5770320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5770540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5770580Z         ]
2025-01-14T13:16:42.5770840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5770840Z 
2025-01-14T13:16:42.5770950Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5774410Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-downbranch] _
2025-01-14T13:16:42.5774430Z 
2025-01-14T13:16:42.5774730Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5775270Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5775780Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5775790Z 
2025-01-14T13:16:42.5775850Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5775950Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5776020Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5776070Z     
2025-01-14T13:16:42.5776210Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5776340Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5776400Z             self.name += "_interp"
2025-01-14T13:16:42.5776450Z     
2025-01-14T13:16:42.5776550Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5776620Z >       simulation.run_convergence()
2025-01-14T13:16:42.5776630Z 
2025-01-14T13:16:42.5776730Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5776830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5776920Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5777060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5777140Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5777260Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5777360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5777360Z 
2025-01-14T13:16:42.5777570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155f6a5a0>
2025-01-14T13:16:42.5777730Z simulation_state = <tardis.model.base.SimulationState object at 0x309d34b30>
2025-01-14T13:16:42.5777940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x155f56c60>
2025-01-14T13:16:42.5778260Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x155f56960>
2025-01-14T13:16:42.5778400Z plasma = <tardis.plasma.base.BasePlasma object at 0x146ccb1a0>
2025-01-14T13:16:42.5778510Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5778510Z 
2025-01-14T13:16:42.5778570Z     def initialize_transport_state(
2025-01-14T13:16:42.5778620Z         self,
2025-01-14T13:16:42.5778680Z         simulation_state,
2025-01-14T13:16:42.5778730Z         opacity_state,
2025-01-14T13:16:42.5778780Z         macro_atom_state,
2025-01-14T13:16:42.5778830Z         plasma,
2025-01-14T13:16:42.5778870Z         no_of_packets,
2025-01-14T13:16:42.5778950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5779000Z         iteration=0,
2025-01-14T13:16:42.5779050Z     ):
2025-01-14T13:16:42.5779140Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5779220Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5779270Z         else:
2025-01-14T13:16:42.5779340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5779390Z     
2025-01-14T13:16:42.5779500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5779570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5779630Z         )
2025-01-14T13:16:42.5779670Z     
2025-01-14T13:16:42.5779770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5779890Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5780040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5780090Z         else:
2025-01-14T13:16:42.5780140Z             continuum_state = None
2025-01-14T13:16:42.5780220Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5780300Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5780370Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5780540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5780650Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5780730Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5780790Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5780840Z         ).to_numba(
2025-01-14T13:16:42.5780900Z             macro_atom_state,
2025-01-14T13:16:42.5780970Z             self.line_interaction_type,
2025-01-14T13:16:42.5781030Z         )
2025-01-14T13:16:42.5781110Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5781360Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5781430Z         ]
2025-01-14T13:16:42.5781700Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5781700Z 
2025-01-14T13:16:42.5781830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5781990Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5787990Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5788460Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5788520Z 	
2025-01-14T13:16:42.5789000Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.5789430Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5789780Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.5789910Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5790290Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.5790530Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5790900Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5791080Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5791260Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.5791390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5791430Z 	
2025-01-14T13:16:42.5791560Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.5791700Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5791850Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.5792130Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.5792470Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.5792860Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.5793300Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5793630Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.5793730Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.5793790Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.5794020Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] _
2025-01-14T13:16:42.5794030Z 
2025-01-14T13:16:42.5794290Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5794770Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5795100Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5795110Z 
2025-01-14T13:16:42.5795170Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5795260Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5795340Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5795380Z     
2025-01-14T13:16:42.5795520Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5795630Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5795680Z             self.name += "_interp"
2025-01-14T13:16:42.5795730Z     
2025-01-14T13:16:42.5795800Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5795880Z >       simulation.run_convergence()
2025-01-14T13:16:42.5795880Z 
2025-01-14T13:16:42.5795990Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5796090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5796170Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5796390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5796460Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5796590Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5796680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5796680Z 
2025-01-14T13:16:42.5796910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155f6a5a0>
2025-01-14T13:16:42.5797080Z simulation_state = <tardis.model.base.SimulationState object at 0x309d34b30>
2025-01-14T13:16:42.5797250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x155f56c60>
2025-01-14T13:16:42.5797470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x155f56960>
2025-01-14T13:16:42.5797590Z plasma = <tardis.plasma.base.BasePlasma object at 0x146ccb1a0>
2025-01-14T13:16:42.5797720Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5797730Z 
2025-01-14T13:16:42.5797800Z     def initialize_transport_state(
2025-01-14T13:16:42.5797850Z         self,
2025-01-14T13:16:42.5797910Z         simulation_state,
2025-01-14T13:16:42.5797960Z         opacity_state,
2025-01-14T13:16:42.5798010Z         macro_atom_state,
2025-01-14T13:16:42.5798060Z         plasma,
2025-01-14T13:16:42.5798110Z         no_of_packets,
2025-01-14T13:16:42.5798180Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5798220Z         iteration=0,
2025-01-14T13:16:42.5798270Z     ):
2025-01-14T13:16:42.5798360Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5798430Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5798480Z         else:
2025-01-14T13:16:42.5798530Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5798580Z     
2025-01-14T13:16:42.5798680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5798760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5798810Z         )
2025-01-14T13:16:42.5798850Z     
2025-01-14T13:16:42.5799030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5799130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5799260Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5799310Z         else:
2025-01-14T13:16:42.5799370Z             continuum_state = None
2025-01-14T13:16:42.5799440Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5799530Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5799590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5799680Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5799750Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5799820Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5799880Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5799930Z         ).to_numba(
2025-01-14T13:16:42.5799990Z             macro_atom_state,
2025-01-14T13:16:42.5800050Z             self.line_interaction_type,
2025-01-14T13:16:42.5800090Z         )
2025-01-14T13:16:42.5800170Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5800400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5800440Z         ]
2025-01-14T13:16:42.5800690Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5800700Z 
2025-01-14T13:16:42.5800810Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5801000Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] _
2025-01-14T13:16:42.5801010Z 
2025-01-14T13:16:42.5806400Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5807300Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5807600Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5807610Z 
2025-01-14T13:16:42.5807670Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5807750Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5807840Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5807890Z     
2025-01-14T13:16:42.5808030Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5808140Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5808200Z             self.name += "_interp"
2025-01-14T13:16:42.5808240Z     
2025-01-14T13:16:42.5808330Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5808400Z >       simulation.run_convergence()
2025-01-14T13:16:42.5808400Z 
2025-01-14T13:16:42.5808500Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5808590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5808680Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5808790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5808860Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5808980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5809070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5809080Z 
2025-01-14T13:16:42.5809290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155f6a5a0>
2025-01-14T13:16:42.5809460Z simulation_state = <tardis.model.base.SimulationState object at 0x309d34b30>
2025-01-14T13:16:42.5809780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x155f56c60>
2025-01-14T13:16:42.5810020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x155f56960>
2025-01-14T13:16:42.5810150Z plasma = <tardis.plasma.base.BasePlasma object at 0x146ccb1a0>
2025-01-14T13:16:42.5810270Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5810270Z 
2025-01-14T13:16:42.5810340Z     def initialize_transport_state(
2025-01-14T13:16:42.5810380Z         self,
2025-01-14T13:16:42.5810440Z         simulation_state,
2025-01-14T13:16:42.5810490Z         opacity_state,
2025-01-14T13:16:42.5810540Z         macro_atom_state,
2025-01-14T13:16:42.5810580Z         plasma,
2025-01-14T13:16:42.5810640Z         no_of_packets,
2025-01-14T13:16:42.5810700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5810750Z         iteration=0,
2025-01-14T13:16:42.5810790Z     ):
2025-01-14T13:16:42.5810890Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5810970Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5811030Z         else:
2025-01-14T13:16:42.5811090Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5811140Z     
2025-01-14T13:16:42.5811240Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5811330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5811380Z         )
2025-01-14T13:16:42.5811420Z     
2025-01-14T13:16:42.5811530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5811620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5811750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5811800Z         else:
2025-01-14T13:16:42.5811860Z             continuum_state = None
2025-01-14T13:16:42.5811940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5812020Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5812170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5812260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5812820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5812900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5812970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5813020Z         ).to_numba(
2025-01-14T13:16:42.5813070Z             macro_atom_state,
2025-01-14T13:16:42.5813130Z             self.line_interaction_type,
2025-01-14T13:16:42.5813180Z         )
2025-01-14T13:16:42.5813250Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5813490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5813530Z         ]
2025-01-14T13:16:42.5813800Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5813810Z 
2025-01-14T13:16:42.5813930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5814150Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] _
2025-01-14T13:16:42.5814150Z 
2025-01-14T13:16:42.5814440Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5814930Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5815230Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5815240Z 
2025-01-14T13:16:42.5815300Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5815390Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5815460Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5815860Z     
2025-01-14T13:16:42.5816010Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5816120Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5816180Z             self.name += "_interp"
2025-01-14T13:16:42.5816220Z     
2025-01-14T13:16:42.5816300Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5816360Z >       simulation.run_convergence()
2025-01-14T13:16:42.5816360Z 
2025-01-14T13:16:42.5816490Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5816580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5816680Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5816790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5816860Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5816990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5817080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5817080Z 
2025-01-14T13:16:42.5817300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155f6a5a0>
2025-01-14T13:16:42.5817460Z simulation_state = <tardis.model.base.SimulationState object at 0x309d34b30>
2025-01-14T13:16:42.5817640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x155f56c60>
2025-01-14T13:16:42.5817880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x155f56960>
2025-01-14T13:16:42.5818010Z plasma = <tardis.plasma.base.BasePlasma object at 0x146ccb1a0>
2025-01-14T13:16:42.5818120Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5818120Z 
2025-01-14T13:16:42.5818190Z     def initialize_transport_state(
2025-01-14T13:16:42.5818500Z         self,
2025-01-14T13:16:42.5818550Z         simulation_state,
2025-01-14T13:16:42.5818610Z         opacity_state,
2025-01-14T13:16:42.5818660Z         macro_atom_state,
2025-01-14T13:16:42.5818710Z         plasma,
2025-01-14T13:16:42.5818750Z         no_of_packets,
2025-01-14T13:16:42.5818820Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5818860Z         iteration=0,
2025-01-14T13:16:42.5818910Z     ):
2025-01-14T13:16:42.5819000Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5819080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5819120Z         else:
2025-01-14T13:16:42.5819180Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5819220Z     
2025-01-14T13:16:42.5819330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5819400Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5819440Z         )
2025-01-14T13:16:42.5819480Z     
2025-01-14T13:16:42.5819580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5819680Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5819800Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5819850Z         else:
2025-01-14T13:16:42.5819900Z             continuum_state = None
2025-01-14T13:16:42.5819980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5820060Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5820130Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5820210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5820280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5820350Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5820410Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5820460Z         ).to_numba(
2025-01-14T13:16:42.5820510Z             macro_atom_state,
2025-01-14T13:16:42.5820570Z             self.line_interaction_type,
2025-01-14T13:16:42.5820610Z         )
2025-01-14T13:16:42.5820750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5820970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5821020Z         ]
2025-01-14T13:16:42.5821280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5821290Z 
2025-01-14T13:16:42.5821400Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5821590Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-macroatom] _
2025-01-14T13:16:42.5821590Z 
2025-01-14T13:16:42.5821840Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5822320Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5822640Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5822650Z 
2025-01-14T13:16:42.5822710Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5822800Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5822870Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5822920Z     
2025-01-14T13:16:42.5823070Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5823180Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5823230Z             self.name += "_interp"
2025-01-14T13:16:42.5823280Z     
2025-01-14T13:16:42.5823360Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5823430Z >       simulation.run_convergence()
2025-01-14T13:16:42.5823530Z 
2025-01-14T13:16:42.5823630Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5823720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5823810Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5823940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5824000Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5824130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5824210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5824210Z 
2025-01-14T13:16:42.5824420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306ed20>
2025-01-14T13:16:42.5824600Z simulation_state = <tardis.model.base.SimulationState object at 0x1718e0560>
2025-01-14T13:16:42.5824770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17314b800>
2025-01-14T13:16:42.5825000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17314b200>
2025-01-14T13:16:42.5825130Z plasma = <tardis.plasma.base.BasePlasma object at 0x155fe5fa0>
2025-01-14T13:16:42.5825240Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5825240Z 
2025-01-14T13:16:42.5825300Z     def initialize_transport_state(
2025-01-14T13:16:42.5825350Z         self,
2025-01-14T13:16:42.5825400Z         simulation_state,
2025-01-14T13:16:42.5825450Z         opacity_state,
2025-01-14T13:16:42.5825510Z         macro_atom_state,
2025-01-14T13:16:42.5831060Z         plasma,
2025-01-14T13:16:42.5831160Z         no_of_packets,
2025-01-14T13:16:42.5831220Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5831270Z         iteration=0,
2025-01-14T13:16:42.5831320Z     ):
2025-01-14T13:16:42.5831420Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5831490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5831550Z         else:
2025-01-14T13:16:42.5831850Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5831910Z     
2025-01-14T13:16:42.5832020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5832090Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5832130Z         )
2025-01-14T13:16:42.5832170Z     
2025-01-14T13:16:42.5832270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5832360Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5832490Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5832530Z         else:
2025-01-14T13:16:42.5832590Z             continuum_state = None
2025-01-14T13:16:42.5832670Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5832750Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5832820Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5832900Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5832980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5833050Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5833120Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5833160Z         ).to_numba(
2025-01-14T13:16:42.5833220Z             macro_atom_state,
2025-01-14T13:16:42.5833280Z             self.line_interaction_type,
2025-01-14T13:16:42.5833320Z         )
2025-01-14T13:16:42.5833400Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5833620Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5833660Z         ]
2025-01-14T13:16:42.5833930Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5833940Z 
2025-01-14T13:16:42.5834050Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5834310Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5839740Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'macroatom', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5840100Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5840150Z 	
2025-01-14T13:16:42.5840600Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.5840750Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5841090Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.5841220Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5841610Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.5841810Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5842170Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5842330Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5842530Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.5842670Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5842820Z 	
2025-01-14T13:16:42.5842950Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.5843080Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5843200Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.5843490Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.5843800Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.5844170Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.5844610Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5844820Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.5844910Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.5844970Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.5845190Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] _
2025-01-14T13:16:42.5845190Z 
2025-01-14T13:16:42.5845440Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5845950Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5846260Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5846270Z 
2025-01-14T13:16:42.5846350Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5846760Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5846850Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5846900Z     
2025-01-14T13:16:42.5847030Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5847150Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5847200Z             self.name += "_interp"
2025-01-14T13:16:42.5847240Z     
2025-01-14T13:16:42.5847330Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5847390Z >       simulation.run_convergence()
2025-01-14T13:16:42.5847390Z 
2025-01-14T13:16:42.5847490Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5847590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5847690Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5847800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5847880Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5848010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5848100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5848100Z 
2025-01-14T13:16:42.5848310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306ed20>
2025-01-14T13:16:42.5848460Z simulation_state = <tardis.model.base.SimulationState object at 0x1718e0560>
2025-01-14T13:16:42.5848640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17314b800>
2025-01-14T13:16:42.5848860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17314b200>
2025-01-14T13:16:42.5849000Z plasma = <tardis.plasma.base.BasePlasma object at 0x155fe5fa0>
2025-01-14T13:16:42.5849130Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5849630Z 
2025-01-14T13:16:42.5849730Z     def initialize_transport_state(
2025-01-14T13:16:42.5849780Z         self,
2025-01-14T13:16:42.5849830Z         simulation_state,
2025-01-14T13:16:42.5849880Z         opacity_state,
2025-01-14T13:16:42.5849940Z         macro_atom_state,
2025-01-14T13:16:42.5849980Z         plasma,
2025-01-14T13:16:42.5850030Z         no_of_packets,
2025-01-14T13:16:42.5850090Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5850140Z         iteration=0,
2025-01-14T13:16:42.5850180Z     ):
2025-01-14T13:16:42.5850280Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5850350Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5850400Z         else:
2025-01-14T13:16:42.5850450Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5850490Z     
2025-01-14T13:16:42.5850600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5850670Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5850720Z         )
2025-01-14T13:16:42.5850760Z     
2025-01-14T13:16:42.5851270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5851940Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5852840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5853030Z         else:
2025-01-14T13:16:42.5853230Z             continuum_state = None
2025-01-14T13:16:42.5853690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5854050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5854260Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5854730Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5854970Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5855330Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5855530Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5855690Z         ).to_numba(
2025-01-14T13:16:42.5856590Z             macro_atom_state,
2025-01-14T13:16:42.5856790Z             self.line_interaction_type,
2025-01-14T13:16:42.5856940Z         )
2025-01-14T13:16:42.5857160Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5857790Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5857930Z         ]
2025-01-14T13:16:42.5858620Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5858630Z 
2025-01-14T13:16:42.5858960Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5859450Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _
2025-01-14T13:16:42.5859460Z 
2025-01-14T13:16:42.5860140Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5861480Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5862290Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5862300Z 
2025-01-14T13:16:42.5862490Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5862730Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5862930Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5863060Z     
2025-01-14T13:16:42.5863420Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5863720Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5863890Z             self.name += "_interp"
2025-01-14T13:16:42.5864030Z     
2025-01-14T13:16:42.5864500Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5864690Z >       simulation.run_convergence()
2025-01-14T13:16:42.5864700Z 
2025-01-14T13:16:42.5864990Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5865240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5865950Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5866960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5867170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5867540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5867780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5867790Z 
2025-01-14T13:16:42.5868380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306ed20>
2025-01-14T13:16:42.5868800Z simulation_state = <tardis.model.base.SimulationState object at 0x1718e0560>
2025-01-14T13:16:42.5869300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17314b800>
2025-01-14T13:16:42.5869880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17314b200>
2025-01-14T13:16:42.5870210Z plasma = <tardis.plasma.base.BasePlasma object at 0x155fe5fa0>
2025-01-14T13:16:42.5872050Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5872080Z 
2025-01-14T13:16:42.5872220Z     def initialize_transport_state(
2025-01-14T13:16:42.5872270Z         self,
2025-01-14T13:16:42.5872330Z         simulation_state,
2025-01-14T13:16:42.5872380Z         opacity_state,
2025-01-14T13:16:42.5872430Z         macro_atom_state,
2025-01-14T13:16:42.5872520Z         plasma,
2025-01-14T13:16:42.5872590Z         no_of_packets,
2025-01-14T13:16:42.5872660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5872710Z         iteration=0,
2025-01-14T13:16:42.5872750Z     ):
2025-01-14T13:16:42.5872890Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5873370Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5873440Z         else:
2025-01-14T13:16:42.5873510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5873550Z     
2025-01-14T13:16:42.5873680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5873770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5873820Z         )
2025-01-14T13:16:42.5873870Z     
2025-01-14T13:16:42.5873980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5874130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5874260Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5874310Z         else:
2025-01-14T13:16:42.5874410Z             continuum_state = None
2025-01-14T13:16:42.5874540Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5874650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5874720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5874810Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5874900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5875000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5875070Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5875990Z         ).to_numba(
2025-01-14T13:16:42.5876450Z             macro_atom_state,
2025-01-14T13:16:42.5877130Z             self.line_interaction_type,
2025-01-14T13:16:42.5877770Z         )
2025-01-14T13:16:42.5878830Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5880100Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5880400Z         ]
2025-01-14T13:16:42.5881600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5882850Z 
2025-01-14T13:16:42.5883790Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5884730Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] _
2025-01-14T13:16:42.5884760Z 
2025-01-14T13:16:42.5886230Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5888260Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5889200Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5889220Z 
2025-01-14T13:16:42.5889460Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5889770Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5890070Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5890380Z     
2025-01-14T13:16:42.5890590Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5890710Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5890770Z             self.name += "_interp"
2025-01-14T13:16:42.5890820Z     
2025-01-14T13:16:42.5890930Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5891020Z >       simulation.run_convergence()
2025-01-14T13:16:42.5891030Z 
2025-01-14T13:16:42.5891170Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5891290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5891380Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5892610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5892890Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5894960Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5896120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5896150Z 
2025-01-14T13:16:42.5896830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306ed20>
2025-01-14T13:16:42.5897780Z simulation_state = <tardis.model.base.SimulationState object at 0x1718e0560>
2025-01-14T13:16:42.5898490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17314b800>
2025-01-14T13:16:42.5898790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17314b200>
2025-01-14T13:16:42.5898960Z plasma = <tardis.plasma.base.BasePlasma object at 0x155fe5fa0>
2025-01-14T13:16:42.5899140Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5899150Z 
2025-01-14T13:16:42.5899230Z     def initialize_transport_state(
2025-01-14T13:16:42.5899300Z         self,
2025-01-14T13:16:42.5899590Z         simulation_state,
2025-01-14T13:16:42.5899690Z         opacity_state,
2025-01-14T13:16:42.5899760Z         macro_atom_state,
2025-01-14T13:16:42.5899810Z         plasma,
2025-01-14T13:16:42.5899880Z         no_of_packets,
2025-01-14T13:16:42.5899980Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5900060Z         iteration=0,
2025-01-14T13:16:42.5900140Z     ):
2025-01-14T13:16:42.5900270Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5900380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5900460Z         else:
2025-01-14T13:16:42.5900520Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5900570Z     
2025-01-14T13:16:42.5900700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5900780Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5900830Z         )
2025-01-14T13:16:42.5900870Z     
2025-01-14T13:16:42.5901010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5901460Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5902040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5902120Z         else:
2025-01-14T13:16:42.5902200Z             continuum_state = None
2025-01-14T13:16:42.5902310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5902410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5903400Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5903550Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5903630Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5903740Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5903850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5903910Z         ).to_numba(
2025-01-14T13:16:42.5903960Z             macro_atom_state,
2025-01-14T13:16:42.5904040Z             self.line_interaction_type,
2025-01-14T13:16:42.5904080Z         )
2025-01-14T13:16:42.5904190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5905570Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5905800Z         ]
2025-01-14T13:16:42.5906580Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5906600Z 
2025-01-14T13:16:42.5907720Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5908690Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-macroatom] _
2025-01-14T13:16:42.5908710Z 
2025-01-14T13:16:42.5909790Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5912790Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5913220Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5913230Z 
2025-01-14T13:16:42.5913620Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5914120Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5914260Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5914340Z     
2025-01-14T13:16:42.5915760Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5916230Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5916560Z             self.name += "_interp"
2025-01-14T13:16:42.5916610Z     
2025-01-14T13:16:42.5916710Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5916820Z >       simulation.run_convergence()
2025-01-14T13:16:42.5916840Z 
2025-01-14T13:16:42.5916960Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5917460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5917880Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5918270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5918530Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5919720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5919850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5919850Z 
2025-01-14T13:16:42.5921150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303068ef0>
2025-01-14T13:16:42.5921430Z simulation_state = <tardis.model.base.SimulationState object at 0x17309be00>
2025-01-14T13:16:42.5921690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030698e0>
2025-01-14T13:16:42.5922970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x303062780>
2025-01-14T13:16:42.5923150Z plasma = <tardis.plasma.base.BasePlasma object at 0x173095280>
2025-01-14T13:16:42.5923790Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5923830Z 
2025-01-14T13:16:42.5924260Z     def initialize_transport_state(
2025-01-14T13:16:42.5924380Z         self,
2025-01-14T13:16:42.5924450Z         simulation_state,
2025-01-14T13:16:42.5924780Z         opacity_state,
2025-01-14T13:16:42.5924890Z         macro_atom_state,
2025-01-14T13:16:42.5924990Z         plasma,
2025-01-14T13:16:42.5925050Z         no_of_packets,
2025-01-14T13:16:42.5925160Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5925240Z         iteration=0,
2025-01-14T13:16:42.5925290Z     ):
2025-01-14T13:16:42.5925390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5925490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5925580Z         else:
2025-01-14T13:16:42.5925700Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5925770Z     
2025-01-14T13:16:42.5925930Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5926050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5926130Z         )
2025-01-14T13:16:42.5926210Z     
2025-01-14T13:16:42.5926330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5926930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5927870Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5928150Z         else:
2025-01-14T13:16:42.5928470Z             continuum_state = None
2025-01-14T13:16:42.5930230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5930410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5930550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5930700Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5932200Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5932700Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5933640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5933720Z         ).to_numba(
2025-01-14T13:16:42.5934120Z             macro_atom_state,
2025-01-14T13:16:42.5934220Z             self.line_interaction_type,
2025-01-14T13:16:42.5934290Z         )
2025-01-14T13:16:42.5934600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5935830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5936090Z         ]
2025-01-14T13:16:42.5937730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5937780Z 
2025-01-14T13:16:42.5939280Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5939500Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.5940350Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5940440Z 	
2025-01-14T13:16:42.5941030Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.5941260Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5941740Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.5941950Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5943030Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.5944490Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.5945730Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.5947260Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5948420Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.5949110Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.5949360Z 	
2025-01-14T13:16:42.5949800Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.5949990Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.5950190Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.5950560Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.5950960Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.5951440Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.5952640Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.5952880Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.5952990Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.5953090Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.5953960Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] _
2025-01-14T13:16:42.5953980Z 
2025-01-14T13:16:42.5954290Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5955730Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5957520Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5957580Z 
2025-01-14T13:16:42.5957900Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5958190Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5958420Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5958630Z     
2025-01-14T13:16:42.5959570Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5959960Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5960070Z             self.name += "_interp"
2025-01-14T13:16:42.5960130Z     
2025-01-14T13:16:42.5960220Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5960290Z >       simulation.run_convergence()
2025-01-14T13:16:42.5960290Z 
2025-01-14T13:16:42.5960420Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5960570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5960690Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5960850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5960960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5961160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5961290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5961300Z 
2025-01-14T13:16:42.5961570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303068ef0>
2025-01-14T13:16:42.5961790Z simulation_state = <tardis.model.base.SimulationState object at 0x17309be00>
2025-01-14T13:16:42.5962270Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030698e0>
2025-01-14T13:16:42.5962590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x303062780>
2025-01-14T13:16:42.5962710Z plasma = <tardis.plasma.base.BasePlasma object at 0x173095280>
2025-01-14T13:16:42.5962850Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5962860Z 
2025-01-14T13:16:42.5962960Z     def initialize_transport_state(
2025-01-14T13:16:42.5963040Z         self,
2025-01-14T13:16:42.5963130Z         simulation_state,
2025-01-14T13:16:42.5963200Z         opacity_state,
2025-01-14T13:16:42.5963300Z         macro_atom_state,
2025-01-14T13:16:42.5963360Z         plasma,
2025-01-14T13:16:42.5964080Z         no_of_packets,
2025-01-14T13:16:42.5964330Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5965010Z         iteration=0,
2025-01-14T13:16:42.5965150Z     ):
2025-01-14T13:16:42.5965340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5965460Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5965530Z         else:
2025-01-14T13:16:42.5965620Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5965710Z     
2025-01-14T13:16:42.5965890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5966010Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5966070Z         )
2025-01-14T13:16:42.5966750Z     
2025-01-14T13:16:42.5966900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5967060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5967240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5967310Z         else:
2025-01-14T13:16:42.5967410Z             continuum_state = None
2025-01-14T13:16:42.5967520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5967620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5967940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5968090Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5968200Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5968310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5968420Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5968520Z         ).to_numba(
2025-01-14T13:16:42.5968610Z             macro_atom_state,
2025-01-14T13:16:42.5968730Z             self.line_interaction_type,
2025-01-14T13:16:42.5968810Z         )
2025-01-14T13:16:42.5968940Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5969270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5969350Z         ]
2025-01-14T13:16:42.5970420Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5970430Z 
2025-01-14T13:16:42.5970590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5970860Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _
2025-01-14T13:16:42.5970870Z 
2025-01-14T13:16:42.5971460Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5972110Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5973380Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5973400Z 
2025-01-14T13:16:42.5973490Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5973620Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5973860Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5973940Z     
2025-01-14T13:16:42.5974120Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.5974300Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.5974390Z             self.name += "_interp"
2025-01-14T13:16:42.5974460Z     
2025-01-14T13:16:42.5974570Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.5974670Z >       simulation.run_convergence()
2025-01-14T13:16:42.5974680Z 
2025-01-14T13:16:42.5974790Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.5975510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5976600Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.5977030Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.5977380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.5977860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.5978170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.5978190Z 
2025-01-14T13:16:42.5978830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303068ef0>
2025-01-14T13:16:42.5979500Z simulation_state = <tardis.model.base.SimulationState object at 0x17309be00>
2025-01-14T13:16:42.5979720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030698e0>
2025-01-14T13:16:42.5979990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x303062780>
2025-01-14T13:16:42.5980170Z plasma = <tardis.plasma.base.BasePlasma object at 0x173095280>
2025-01-14T13:16:42.5980830Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.5980860Z 
2025-01-14T13:16:42.5982360Z     def initialize_transport_state(
2025-01-14T13:16:42.5982460Z         self,
2025-01-14T13:16:42.5982990Z         simulation_state,
2025-01-14T13:16:42.5985490Z         opacity_state,
2025-01-14T13:16:42.5985620Z         macro_atom_state,
2025-01-14T13:16:42.5985710Z         plasma,
2025-01-14T13:16:42.5985800Z         no_of_packets,
2025-01-14T13:16:42.5985870Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.5985950Z         iteration=0,
2025-01-14T13:16:42.5986020Z     ):
2025-01-14T13:16:42.5986160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.5986250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.5986300Z         else:
2025-01-14T13:16:42.5986390Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.5986460Z     
2025-01-14T13:16:42.5986610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.5986710Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.5986790Z         )
2025-01-14T13:16:42.5986850Z     
2025-01-14T13:16:42.5986990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.5987120Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.5988840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.5988930Z         else:
2025-01-14T13:16:42.5989020Z             continuum_state = None
2025-01-14T13:16:42.5989140Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.5989270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.5989400Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.5989540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.5989640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.5989750Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.5989820Z             continuum_state=continuum_state,
2025-01-14T13:16:42.5989870Z         ).to_numba(
2025-01-14T13:16:42.5989950Z             macro_atom_state,
2025-01-14T13:16:42.5990060Z             self.line_interaction_type,
2025-01-14T13:16:42.5992340Z         )
2025-01-14T13:16:42.5992470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.5993700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.5993770Z         ]
2025-01-14T13:16:42.5994090Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.5994100Z 
2025-01-14T13:16:42.5994260Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.5994510Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] _
2025-01-14T13:16:42.5994530Z 
2025-01-14T13:16:42.5994870Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.5995460Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.5997470Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.5997490Z 
2025-01-14T13:16:42.5997610Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.5997760Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.5997890Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.5997970Z     
2025-01-14T13:16:42.5998140Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.6019310Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.6020010Z             self.name += "_interp"
2025-01-14T13:16:42.6020200Z     
2025-01-14T13:16:42.6020460Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.6021580Z >       simulation.run_convergence()
2025-01-14T13:16:42.6021650Z 
2025-01-14T13:16:42.6021980Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.6023060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6023350Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6023680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6023890Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6024240Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6024480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6024490Z 
2025-01-14T13:16:42.6025060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303068ef0>
2025-01-14T13:16:42.6025480Z simulation_state = <tardis.model.base.SimulationState object at 0x17309be00>
2025-01-14T13:16:42.6025970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030698e0>
2025-01-14T13:16:42.6026600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x303062780>
2025-01-14T13:16:42.6026950Z plasma = <tardis.plasma.base.BasePlasma object at 0x173095280>
2025-01-14T13:16:42.6027260Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6027490Z 
2025-01-14T13:16:42.6027700Z     def initialize_transport_state(
2025-01-14T13:16:42.6027860Z         self,
2025-01-14T13:16:42.6028020Z         simulation_state,
2025-01-14T13:16:42.6028180Z         opacity_state,
2025-01-14T13:16:42.6028340Z         macro_atom_state,
2025-01-14T13:16:42.6028490Z         plasma,
2025-01-14T13:16:42.6028640Z         no_of_packets,
2025-01-14T13:16:42.6028820Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6028980Z         iteration=0,
2025-01-14T13:16:42.6029140Z     ):
2025-01-14T13:16:42.6029410Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6029610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6030560Z         else:
2025-01-14T13:16:42.6030770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6030950Z     
2025-01-14T13:16:42.6031460Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6031840Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6031990Z         )
2025-01-14T13:16:42.6032130Z     
2025-01-14T13:16:42.6032410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6032660Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6033000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6033150Z         else:
2025-01-14T13:16:42.6033320Z             continuum_state = None
2025-01-14T13:16:42.6033560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6033800Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6034000Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6034280Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6034510Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6034730Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6034940Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6035090Z         ).to_numba(
2025-01-14T13:16:42.6035250Z             macro_atom_state,
2025-01-14T13:16:42.6035450Z             self.line_interaction_type,
2025-01-14T13:16:42.6035950Z         )
2025-01-14T13:16:42.6036200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6037560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6038630Z         ]
2025-01-14T13:16:42.6040460Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6040490Z 
2025-01-14T13:16:42.6040890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6041970Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-downbranch] _
2025-01-14T13:16:42.6042000Z 
2025-01-14T13:16:42.6042850Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.6044260Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6045070Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.6045080Z 
2025-01-14T13:16:42.6045270Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.6045520Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.6045720Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.6045860Z     
2025-01-14T13:16:42.6046230Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.6046540Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.6046710Z             self.name += "_interp"
2025-01-14T13:16:42.6046850Z     
2025-01-14T13:16:42.6047070Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.6047260Z >       simulation.run_convergence()
2025-01-14T13:16:42.6047270Z 
2025-01-14T13:16:42.6047550Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.6047800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6048220Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6048800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6049420Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6049790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6050030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6050460Z 
2025-01-14T13:16:42.6051050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30e82e900>
2025-01-14T13:16:42.6051490Z simulation_state = <tardis.model.base.SimulationState object at 0x303100d10>
2025-01-14T13:16:42.6052130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e869190>
2025-01-14T13:16:42.6052820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e869bb0>
2025-01-14T13:16:42.6053170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30316d910>
2025-01-14T13:16:42.6053930Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6053950Z 
2025-01-14T13:16:42.6054150Z     def initialize_transport_state(
2025-01-14T13:16:42.6054320Z         self,
2025-01-14T13:16:42.6054500Z         simulation_state,
2025-01-14T13:16:42.6054660Z         opacity_state,
2025-01-14T13:16:42.6054830Z         macro_atom_state,
2025-01-14T13:16:42.6054980Z         plasma,
2025-01-14T13:16:42.6055140Z         no_of_packets,
2025-01-14T13:16:42.6055310Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6055460Z         iteration=0,
2025-01-14T13:16:42.6055600Z     ):
2025-01-14T13:16:42.6055910Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6056110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6056260Z         else:
2025-01-14T13:16:42.6056420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6056560Z     
2025-01-14T13:16:42.6056850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6057060Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6057390Z         )
2025-01-14T13:16:42.6057550Z     
2025-01-14T13:16:42.6057850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6058110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6058460Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6058980Z         else:
2025-01-14T13:16:42.6059180Z             continuum_state = None
2025-01-14T13:16:42.6059390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6059630Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6059830Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6060260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6060420Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6060500Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6060560Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6060610Z         ).to_numba(
2025-01-14T13:16:42.6060670Z             macro_atom_state,
2025-01-14T13:16:42.6060730Z             self.line_interaction_type,
2025-01-14T13:16:42.6060780Z         )
2025-01-14T13:16:42.6060870Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6061120Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6061170Z         ]
2025-01-14T13:16:42.6061430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6061430Z 
2025-01-14T13:16:42.6061560Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6061700Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.6067720Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6068230Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6068290Z 	
2025-01-14T13:16:42.6068740Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.6068900Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6069240Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.6069370Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6069760Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.6069960Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.6070330Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.6070460Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6070630Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.6070750Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6070790Z 	
2025-01-14T13:16:42.6070900Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.6071030Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.6071150Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.6071430Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.6071740Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.6072350Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.6072760Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.6072940Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.6073020Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.6073080Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.6073290Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] _
2025-01-14T13:16:42.6073300Z 
2025-01-14T13:16:42.6073550Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.6074040Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6074360Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.6074360Z 
2025-01-14T13:16:42.6074430Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.6074520Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.6074590Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.6074640Z     
2025-01-14T13:16:42.6074780Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.6074890Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.6074950Z             self.name += "_interp"
2025-01-14T13:16:42.6074990Z     
2025-01-14T13:16:42.6075080Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.6075240Z >       simulation.run_convergence()
2025-01-14T13:16:42.6075250Z 
2025-01-14T13:16:42.6075360Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.6075450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6075540Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6075650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6075720Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6075840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6075930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6075930Z 
2025-01-14T13:16:42.6076140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30e82e900>
2025-01-14T13:16:42.6076300Z simulation_state = <tardis.model.base.SimulationState object at 0x303100d10>
2025-01-14T13:16:42.6076490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e869190>
2025-01-14T13:16:42.6076720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e869bb0>
2025-01-14T13:16:42.6076840Z plasma = <tardis.plasma.base.BasePlasma object at 0x30316d910>
2025-01-14T13:16:42.6076960Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6076960Z 
2025-01-14T13:16:42.6077030Z     def initialize_transport_state(
2025-01-14T13:16:42.6077080Z         self,
2025-01-14T13:16:42.6077130Z         simulation_state,
2025-01-14T13:16:42.6077180Z         opacity_state,
2025-01-14T13:16:42.6077230Z         macro_atom_state,
2025-01-14T13:16:42.6077280Z         plasma,
2025-01-14T13:16:42.6077330Z         no_of_packets,
2025-01-14T13:16:42.6077390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6077430Z         iteration=0,
2025-01-14T13:16:42.6077480Z     ):
2025-01-14T13:16:42.6077640Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6077720Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6077760Z         else:
2025-01-14T13:16:42.6077820Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6077860Z     
2025-01-14T13:16:42.6077960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6078030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6078090Z         )
2025-01-14T13:16:42.6078130Z     
2025-01-14T13:16:42.6078230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6078310Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6078440Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6078490Z         else:
2025-01-14T13:16:42.6078540Z             continuum_state = None
2025-01-14T13:16:42.6078620Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6078700Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6078780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6078860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6078940Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6079000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6079070Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6079130Z         ).to_numba(
2025-01-14T13:16:42.6079180Z             macro_atom_state,
2025-01-14T13:16:42.6079240Z             self.line_interaction_type,
2025-01-14T13:16:42.6079290Z         )
2025-01-14T13:16:42.6079370Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6079600Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6079650Z         ]
2025-01-14T13:16:42.6079900Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6079910Z 
2025-01-14T13:16:42.6080080Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6080270Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] _
2025-01-14T13:16:42.6080270Z 
2025-01-14T13:16:42.6080520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.6081020Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6081320Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.6081320Z 
2025-01-14T13:16:42.6081390Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.6081480Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.6081550Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.6081600Z     
2025-01-14T13:16:42.6081730Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.6081840Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.6081900Z             self.name += "_interp"
2025-01-14T13:16:42.6081940Z     
2025-01-14T13:16:42.6082020Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.6082090Z >       simulation.run_convergence()
2025-01-14T13:16:42.6082090Z 
2025-01-14T13:16:42.6082190Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.6082280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6082370Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6082480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6082550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6082770Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6082860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6082860Z 
2025-01-14T13:16:42.6083070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30e82e900>
2025-01-14T13:16:42.6083230Z simulation_state = <tardis.model.base.SimulationState object at 0x303100d10>
2025-01-14T13:16:42.6083400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e869190>
2025-01-14T13:16:42.6083630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e869bb0>
2025-01-14T13:16:42.6083750Z plasma = <tardis.plasma.base.BasePlasma object at 0x30316d910>
2025-01-14T13:16:42.6083860Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6083860Z 
2025-01-14T13:16:42.6083920Z     def initialize_transport_state(
2025-01-14T13:16:42.6083970Z         self,
2025-01-14T13:16:42.6084020Z         simulation_state,
2025-01-14T13:16:42.6084080Z         opacity_state,
2025-01-14T13:16:42.6084130Z         macro_atom_state,
2025-01-14T13:16:42.6084180Z         plasma,
2025-01-14T13:16:42.6084220Z         no_of_packets,
2025-01-14T13:16:42.6084280Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6084330Z         iteration=0,
2025-01-14T13:16:42.6084370Z     ):
2025-01-14T13:16:42.6084470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6084540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6084590Z         else:
2025-01-14T13:16:42.6084640Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6084690Z     
2025-01-14T13:16:42.6084800Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6084870Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6084910Z         )
2025-01-14T13:16:42.6084950Z     
2025-01-14T13:16:42.6085050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6085200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6085330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6085380Z         else:
2025-01-14T13:16:42.6085430Z             continuum_state = None
2025-01-14T13:16:42.6085510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6085600Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6085670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6085750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6085820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6085890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6085960Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6086000Z         ).to_numba(
2025-01-14T13:16:42.6086050Z             macro_atom_state,
2025-01-14T13:16:42.6086130Z             self.line_interaction_type,
2025-01-14T13:16:42.6086180Z         )
2025-01-14T13:16:42.6086260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6086480Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6086530Z         ]
2025-01-14T13:16:42.6086770Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6086780Z 
2025-01-14T13:16:42.6086890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6087100Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] _
2025-01-14T13:16:42.6087110Z 
2025-01-14T13:16:42.6087350Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a2f5640>
2025-01-14T13:16:42.6087840Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6088210Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.6088220Z 
2025-01-14T13:16:42.6088290Z     @pytest.fixture(scope="class")
2025-01-14T13:16:42.6088380Z     def simulation(self, config, atomic_data_fname):
2025-01-14T13:16:42.6088440Z         config.atom_data = atomic_data_fname
2025-01-14T13:16:42.6088490Z     
2025-01-14T13:16:42.6088620Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-14T13:16:42.6088730Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-14T13:16:42.6088790Z             self.name += "_interp"
2025-01-14T13:16:42.6088840Z     
2025-01-14T13:16:42.6088920Z         simulation = Simulation.from_config(config)
2025-01-14T13:16:42.6088980Z >       simulation.run_convergence()
2025-01-14T13:16:42.6088990Z 
2025-01-14T13:16:42.6089090Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-14T13:16:42.6089190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6089270Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6089380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6089450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6089570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6089650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6089650Z 
2025-01-14T13:16:42.6089860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30e82e900>
2025-01-14T13:16:42.6090020Z simulation_state = <tardis.model.base.SimulationState object at 0x303100d10>
2025-01-14T13:16:42.6090190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e869190>
2025-01-14T13:16:42.6090650Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e869bb0>
2025-01-14T13:16:42.6090790Z plasma = <tardis.plasma.base.BasePlasma object at 0x30316d910>
2025-01-14T13:16:42.6090900Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6090910Z 
2025-01-14T13:16:42.6090970Z     def initialize_transport_state(
2025-01-14T13:16:42.6091010Z         self,
2025-01-14T13:16:42.6091070Z         simulation_state,
2025-01-14T13:16:42.6091120Z         opacity_state,
2025-01-14T13:16:42.6091170Z         macro_atom_state,
2025-01-14T13:16:42.6091210Z         plasma,
2025-01-14T13:16:42.6091260Z         no_of_packets,
2025-01-14T13:16:42.6091320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6091370Z         iteration=0,
2025-01-14T13:16:42.6091410Z     ):
2025-01-14T13:16:42.6091510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6091570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6091630Z         else:
2025-01-14T13:16:42.6091690Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6091730Z     
2025-01-14T13:16:42.6091840Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6091910Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6091960Z         )
2025-01-14T13:16:42.6092000Z     
2025-01-14T13:16:42.6092100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6092180Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6092310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6092360Z         else:
2025-01-14T13:16:42.6092410Z             continuum_state = None
2025-01-14T13:16:42.6092490Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6092570Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6092640Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6093230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6093310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6093380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6093440Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6093490Z         ).to_numba(
2025-01-14T13:16:42.6093550Z             macro_atom_state,
2025-01-14T13:16:42.6093610Z             self.line_interaction_type,
2025-01-14T13:16:42.6093660Z         )
2025-01-14T13:16:42.6093730Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6093960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6094010Z         ]
2025-01-14T13:16:42.6094260Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6094260Z 
2025-01-14T13:16:42.6094380Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6094530Z ____________ ERROR at setup of test_hdf_transport_state[output_nu] _____________
2025-01-14T13:16:42.6094530Z 
2025-01-14T13:16:42.6095070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6095370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6095370Z 
2025-01-14T13:16:42.6095440Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6095600Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6095680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6095740Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6095880Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6095920Z         )
2025-01-14T13:16:42.6096090Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6096150Z >       sim.run_final()
2025-01-14T13:16:42.6096150Z 
2025-01-14T13:16:42.6096210Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6096300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6096370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6096490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6096560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6096690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6096780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6096780Z 
2025-01-14T13:16:42.6097000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6097160Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6097340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6097570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6097690Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6097800Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6097810Z 
2025-01-14T13:16:42.6097880Z     def initialize_transport_state(
2025-01-14T13:16:42.6097930Z         self,
2025-01-14T13:16:42.6097990Z         simulation_state,
2025-01-14T13:16:42.6098050Z         opacity_state,
2025-01-14T13:16:42.6098100Z         macro_atom_state,
2025-01-14T13:16:42.6098150Z         plasma,
2025-01-14T13:16:42.6098190Z         no_of_packets,
2025-01-14T13:16:42.6098250Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6098300Z         iteration=0,
2025-01-14T13:16:42.6098430Z     ):
2025-01-14T13:16:42.6098530Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6098600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6098640Z         else:
2025-01-14T13:16:42.6098700Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6098740Z     
2025-01-14T13:16:42.6098850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6098920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6098970Z         )
2025-01-14T13:16:42.6099010Z     
2025-01-14T13:16:42.6099110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6099200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6099330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6099380Z         else:
2025-01-14T13:16:42.6099430Z             continuum_state = None
2025-01-14T13:16:42.6099510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6099610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6099680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6099770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6099840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6099910Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6099970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6100020Z         ).to_numba(
2025-01-14T13:16:42.6100070Z             macro_atom_state,
2025-01-14T13:16:42.6100140Z             self.line_interaction_type,
2025-01-14T13:16:42.6100180Z         )
2025-01-14T13:16:42.6100270Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6100500Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6100550Z         ]
2025-01-14T13:16:42.6100800Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6100810Z 
2025-01-14T13:16:42.6101020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6101170Z __________ ERROR at setup of test_hdf_transport_state[output_energy] ___________
2025-01-14T13:16:42.6101170Z 
2025-01-14T13:16:42.6101670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6101960Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6101960Z 
2025-01-14T13:16:42.6102030Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6102200Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6102270Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6102340Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6102480Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6102520Z         )
2025-01-14T13:16:42.6102590Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6102640Z >       sim.run_final()
2025-01-14T13:16:42.6102640Z 
2025-01-14T13:16:42.6102700Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6102790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6102860Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6102970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6103030Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6103160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6103240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6103310Z 
2025-01-14T13:16:42.6103530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6103680Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6103860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6104070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6104200Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6104310Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6104310Z 
2025-01-14T13:16:42.6104370Z     def initialize_transport_state(
2025-01-14T13:16:42.6104420Z         self,
2025-01-14T13:16:42.6104470Z         simulation_state,
2025-01-14T13:16:42.6104520Z         opacity_state,
2025-01-14T13:16:42.6104570Z         macro_atom_state,
2025-01-14T13:16:42.6104620Z         plasma,
2025-01-14T13:16:42.6104670Z         no_of_packets,
2025-01-14T13:16:42.6104740Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6104790Z         iteration=0,
2025-01-14T13:16:42.6104830Z     ):
2025-01-14T13:16:42.6104940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6105020Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6105060Z         else:
2025-01-14T13:16:42.6105120Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6105160Z     
2025-01-14T13:16:42.6105270Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6105330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6105380Z         )
2025-01-14T13:16:42.6105420Z     
2025-01-14T13:16:42.6105520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6105610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6105730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6105790Z         else:
2025-01-14T13:16:42.6105840Z             continuum_state = None
2025-01-14T13:16:42.6105990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6106070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6106150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6106230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6106300Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6106370Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6106430Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6106480Z         ).to_numba(
2025-01-14T13:16:42.6106530Z             macro_atom_state,
2025-01-14T13:16:42.6106590Z             self.line_interaction_type,
2025-01-14T13:16:42.6106630Z         )
2025-01-14T13:16:42.6106710Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6106930Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6106980Z         ]
2025-01-14T13:16:42.6107220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6107230Z 
2025-01-14T13:16:42.6107340Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6107480Z _________ ERROR at setup of test_hdf_transport_state[nu_bar_estimator] _________
2025-01-14T13:16:42.6107480Z 
2025-01-14T13:16:42.6108110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6108400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6108410Z 
2025-01-14T13:16:42.6108470Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6108730Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6108810Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6108870Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6109000Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6109050Z         )
2025-01-14T13:16:42.6109110Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6109160Z >       sim.run_final()
2025-01-14T13:16:42.6109160Z 
2025-01-14T13:16:42.6109220Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6109310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6109380Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6109490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6109560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6114860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6115020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6115030Z 
2025-01-14T13:16:42.6115250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6115420Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6115600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6115830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6115960Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6116070Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6116080Z 
2025-01-14T13:16:42.6116140Z     def initialize_transport_state(
2025-01-14T13:16:42.6116190Z         self,
2025-01-14T13:16:42.6116240Z         simulation_state,
2025-01-14T13:16:42.6116300Z         opacity_state,
2025-01-14T13:16:42.6116780Z         macro_atom_state,
2025-01-14T13:16:42.6116850Z         plasma,
2025-01-14T13:16:42.6116900Z         no_of_packets,
2025-01-14T13:16:42.6116960Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6117010Z         iteration=0,
2025-01-14T13:16:42.6117060Z     ):
2025-01-14T13:16:42.6117160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6117240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6117290Z         else:
2025-01-14T13:16:42.6117350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6117390Z     
2025-01-14T13:16:42.6117500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6117580Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6117630Z         )
2025-01-14T13:16:42.6117670Z     
2025-01-14T13:16:42.6117780Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6117870Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6118000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6118050Z         else:
2025-01-14T13:16:42.6118110Z             continuum_state = None
2025-01-14T13:16:42.6118180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6118270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6118340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6118420Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6118490Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6118560Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6118630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6118670Z         ).to_numba(
2025-01-14T13:16:42.6118740Z             macro_atom_state,
2025-01-14T13:16:42.6118790Z             self.line_interaction_type,
2025-01-14T13:16:42.6119100Z         )
2025-01-14T13:16:42.6119180Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6119410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6119450Z         ]
2025-01-14T13:16:42.6119700Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6119710Z 
2025-01-14T13:16:42.6119820Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6119970Z ___________ ERROR at setup of test_hdf_transport_state[j_estimator] ____________
2025-01-14T13:16:42.6119970Z 
2025-01-14T13:16:42.6120490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6120790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6120800Z 
2025-01-14T13:16:42.6120870Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6121050Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6121140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6121200Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6121350Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6121400Z         )
2025-01-14T13:16:42.6121460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6121510Z >       sim.run_final()
2025-01-14T13:16:42.6121520Z 
2025-01-14T13:16:42.6121570Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6121660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6121730Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6121850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6122010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6122140Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6122220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6122230Z 
2025-01-14T13:16:42.6122440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6122600Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6122780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6123010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6123130Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6123240Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6123250Z 
2025-01-14T13:16:42.6123310Z     def initialize_transport_state(
2025-01-14T13:16:42.6123360Z         self,
2025-01-14T13:16:42.6123420Z         simulation_state,
2025-01-14T13:16:42.6123470Z         opacity_state,
2025-01-14T13:16:42.6123520Z         macro_atom_state,
2025-01-14T13:16:42.6123570Z         plasma,
2025-01-14T13:16:42.6123620Z         no_of_packets,
2025-01-14T13:16:42.6123670Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6123720Z         iteration=0,
2025-01-14T13:16:42.6123770Z     ):
2025-01-14T13:16:42.6123860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6123930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6123980Z         else:
2025-01-14T13:16:42.6124040Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6124080Z     
2025-01-14T13:16:42.6124190Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6124260Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6124380Z         )
2025-01-14T13:16:42.6124430Z     
2025-01-14T13:16:42.6124530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6124630Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6124750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6124800Z         else:
2025-01-14T13:16:42.6124860Z             continuum_state = None
2025-01-14T13:16:42.6124930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6125040Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6125110Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6125190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6125260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6125330Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6125400Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6125450Z         ).to_numba(
2025-01-14T13:16:42.6125510Z             macro_atom_state,
2025-01-14T13:16:42.6125570Z             self.line_interaction_type,
2025-01-14T13:16:42.6125620Z         )
2025-01-14T13:16:42.6125700Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6125920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6125960Z         ]
2025-01-14T13:16:42.6126230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6126240Z 
2025-01-14T13:16:42.6126350Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6126500Z _______ ERROR at setup of test_hdf_transport_state[emitted_packet_mask] ________
2025-01-14T13:16:42.6126510Z 
2025-01-14T13:16:42.6127540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6127870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6127880Z 
2025-01-14T13:16:42.6127960Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6128130Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6128210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6128270Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6128440Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6128490Z         )
2025-01-14T13:16:42.6128560Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6128610Z >       sim.run_final()
2025-01-14T13:16:42.6128610Z 
2025-01-14T13:16:42.6128670Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6128760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6128850Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6128970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6129040Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6129160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6129250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6129260Z 
2025-01-14T13:16:42.6129480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6129640Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6129840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6130070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6130300Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6130430Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6130430Z 
2025-01-14T13:16:42.6130500Z     def initialize_transport_state(
2025-01-14T13:16:42.6130550Z         self,
2025-01-14T13:16:42.6130600Z         simulation_state,
2025-01-14T13:16:42.6130660Z         opacity_state,
2025-01-14T13:16:42.6130710Z         macro_atom_state,
2025-01-14T13:16:42.6130750Z         plasma,
2025-01-14T13:16:42.6130800Z         no_of_packets,
2025-01-14T13:16:42.6130870Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6130910Z         iteration=0,
2025-01-14T13:16:42.6130960Z     ):
2025-01-14T13:16:42.6131060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6132730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6132800Z         else:
2025-01-14T13:16:42.6132860Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6132900Z     
2025-01-14T13:16:42.6133040Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6133130Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6133180Z         )
2025-01-14T13:16:42.6133230Z     
2025-01-14T13:16:42.6133330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6133420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6133550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6133600Z         else:
2025-01-14T13:16:42.6133650Z             continuum_state = None
2025-01-14T13:16:42.6133740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6133820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6133890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6133980Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6134050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6134130Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6134340Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6134390Z         ).to_numba(
2025-01-14T13:16:42.6134450Z             macro_atom_state,
2025-01-14T13:16:42.6134520Z             self.line_interaction_type,
2025-01-14T13:16:42.6134560Z         )
2025-01-14T13:16:42.6134640Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6134870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6134920Z         ]
2025-01-14T13:16:42.6135170Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6135180Z 
2025-01-14T13:16:42.6135300Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6135450Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_type] _______
2025-01-14T13:16:42.6135450Z 
2025-01-14T13:16:42.6136000Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6136290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6136300Z 
2025-01-14T13:16:42.6136360Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6136540Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6136610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6136680Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6136820Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6136870Z         )
2025-01-14T13:16:42.6136930Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6137050Z >       sim.run_final()
2025-01-14T13:16:42.6137060Z 
2025-01-14T13:16:42.6137120Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6137210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6137290Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6137410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6137480Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6137600Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6137690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6137690Z 
2025-01-14T13:16:42.6137900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6138060Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6138250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6138480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6138610Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6138710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6138720Z 
2025-01-14T13:16:42.6138780Z     def initialize_transport_state(
2025-01-14T13:16:42.6138830Z         self,
2025-01-14T13:16:42.6138890Z         simulation_state,
2025-01-14T13:16:42.6138940Z         opacity_state,
2025-01-14T13:16:42.6138990Z         macro_atom_state,
2025-01-14T13:16:42.6139040Z         plasma,
2025-01-14T13:16:42.6139100Z         no_of_packets,
2025-01-14T13:16:42.6139150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6139200Z         iteration=0,
2025-01-14T13:16:42.6139240Z     ):
2025-01-14T13:16:42.6139340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6139410Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6139460Z         else:
2025-01-14T13:16:42.6139990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6140050Z     
2025-01-14T13:16:42.6140170Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6140240Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6140280Z         )
2025-01-14T13:16:42.6140320Z     
2025-01-14T13:16:42.6140430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6140520Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6140650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6140690Z         else:
2025-01-14T13:16:42.6140760Z             continuum_state = None
2025-01-14T13:16:42.6140830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6140920Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6140980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6141070Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6141150Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6141250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6141330Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6141380Z         ).to_numba(
2025-01-14T13:16:42.6141430Z             macro_atom_state,
2025-01-14T13:16:42.6141490Z             self.line_interaction_type,
2025-01-14T13:16:42.6141540Z         )
2025-01-14T13:16:42.6141620Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6141840Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6141890Z         ]
2025-01-14T13:16:42.6142140Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6142140Z 
2025-01-14T13:16:42.6142260Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6142650Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_nu] ______
2025-01-14T13:16:42.6142650Z 
2025-01-14T13:16:42.6144710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6145710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6145740Z 
2025-01-14T13:16:42.6145980Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6146450Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6146660Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6146850Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6147230Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6147410Z         )
2025-01-14T13:16:42.6147600Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6148030Z >       sim.run_final()
2025-01-14T13:16:42.6148040Z 
2025-01-14T13:16:42.6148210Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6148450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6148660Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6148980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6149180Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6149520Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6149770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6149780Z 
2025-01-14T13:16:42.6150340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6151070Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6152330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6152960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6154030Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6154420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6154430Z 
2025-01-14T13:16:42.6154620Z     def initialize_transport_state(
2025-01-14T13:16:42.6154780Z         self,
2025-01-14T13:16:42.6154950Z         simulation_state,
2025-01-14T13:16:42.6155100Z         opacity_state,
2025-01-14T13:16:42.6155280Z         macro_atom_state,
2025-01-14T13:16:42.6155440Z         plasma,
2025-01-14T13:16:42.6155600Z         no_of_packets,
2025-01-14T13:16:42.6155770Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6155930Z         iteration=0,
2025-01-14T13:16:42.6156230Z     ):
2025-01-14T13:16:42.6156690Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6156910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6157060Z         else:
2025-01-14T13:16:42.6157230Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6157370Z     
2025-01-14T13:16:42.6158590Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6159240Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6159790Z         )
2025-01-14T13:16:42.6159960Z     
2025-01-14T13:16:42.6160250Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6160500Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6160840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6160980Z         else:
2025-01-14T13:16:42.6161160Z             continuum_state = None
2025-01-14T13:16:42.6161370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6162890Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6163110Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6163580Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6164050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6164400Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6164610Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6164760Z         ).to_numba(
2025-01-14T13:16:42.6164930Z             macro_atom_state,
2025-01-14T13:16:42.6165130Z             self.line_interaction_type,
2025-01-14T13:16:42.6165270Z         )
2025-01-14T13:16:42.6165500Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6166180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6167010Z         ]
2025-01-14T13:16:42.6169810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6169860Z 
2025-01-14T13:16:42.6170030Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6170190Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_r] _______
2025-01-14T13:16:42.6170190Z 
2025-01-14T13:16:42.6170820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6171140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6171150Z 
2025-01-14T13:16:42.6171220Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6171390Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6171470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6171540Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6173380Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6173460Z         )
2025-01-14T13:16:42.6173530Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6173580Z >       sim.run_final()
2025-01-14T13:16:42.6173580Z 
2025-01-14T13:16:42.6173650Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6173740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6173810Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6173930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6174000Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6174130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6174220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6174230Z 
2025-01-14T13:16:42.6174440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6174600Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6174780Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6175000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6175120Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6175240Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6175240Z 
2025-01-14T13:16:42.6175310Z     def initialize_transport_state(
2025-01-14T13:16:42.6175360Z         self,
2025-01-14T13:16:42.6175420Z         simulation_state,
2025-01-14T13:16:42.6175470Z         opacity_state,
2025-01-14T13:16:42.6175520Z         macro_atom_state,
2025-01-14T13:16:42.6175570Z         plasma,
2025-01-14T13:16:42.6175760Z         no_of_packets,
2025-01-14T13:16:42.6175830Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6175880Z         iteration=0,
2025-01-14T13:16:42.6175920Z     ):
2025-01-14T13:16:42.6176020Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6176110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6176160Z         else:
2025-01-14T13:16:42.6176220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6176260Z     
2025-01-14T13:16:42.6176370Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6176440Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6176480Z         )
2025-01-14T13:16:42.6176540Z     
2025-01-14T13:16:42.6176650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6176740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6176870Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6176920Z         else:
2025-01-14T13:16:42.6176970Z             continuum_state = None
2025-01-14T13:16:42.6177060Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6177140Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6177210Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6177290Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6177370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6177430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6177500Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6177540Z         ).to_numba(
2025-01-14T13:16:42.6177600Z             macro_atom_state,
2025-01-14T13:16:42.6177660Z             self.line_interaction_type,
2025-01-14T13:16:42.6177700Z         )
2025-01-14T13:16:42.6177770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6178000Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6178050Z         ]
2025-01-14T13:16:42.6178400Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6178410Z 
2025-01-14T13:16:42.6178540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6178700Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_out_id] ___
2025-01-14T13:16:42.6178700Z 
2025-01-14T13:16:42.6179210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6179530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6179530Z 
2025-01-14T13:16:42.6179600Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6179790Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6179880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6179950Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6180090Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6180130Z         )
2025-01-14T13:16:42.6180200Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6180260Z >       sim.run_final()
2025-01-14T13:16:42.6180260Z 
2025-01-14T13:16:42.6180320Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6180410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6180500Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6180610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6180680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6180810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6180980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6180990Z 
2025-01-14T13:16:42.6181210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6181370Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6181550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6181780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6181910Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6182010Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6182010Z 
2025-01-14T13:16:42.6182080Z     def initialize_transport_state(
2025-01-14T13:16:42.6182120Z         self,
2025-01-14T13:16:42.6182180Z         simulation_state,
2025-01-14T13:16:42.6182230Z         opacity_state,
2025-01-14T13:16:42.6182290Z         macro_atom_state,
2025-01-14T13:16:42.6182340Z         plasma,
2025-01-14T13:16:42.6182390Z         no_of_packets,
2025-01-14T13:16:42.6182450Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6182500Z         iteration=0,
2025-01-14T13:16:42.6182540Z     ):
2025-01-14T13:16:42.6182630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6182700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6182750Z         else:
2025-01-14T13:16:42.6182800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6182840Z     
2025-01-14T13:16:42.6182950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6183020Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6183070Z         )
2025-01-14T13:16:42.6183120Z     
2025-01-14T13:16:42.6183220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6183310Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6183700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6183780Z         else:
2025-01-14T13:16:42.6183830Z             continuum_state = None
2025-01-14T13:16:42.6183920Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6184000Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6184080Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6184160Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6184240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6184310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6184380Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6184430Z         ).to_numba(
2025-01-14T13:16:42.6184490Z             macro_atom_state,
2025-01-14T13:16:42.6184550Z             self.line_interaction_type,
2025-01-14T13:16:42.6184590Z         )
2025-01-14T13:16:42.6184670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6184900Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6184940Z         ]
2025-01-14T13:16:42.6185190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6185190Z 
2025-01-14T13:16:42.6185310Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6185450Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_in_id] ____
2025-01-14T13:16:42.6185460Z 
2025-01-14T13:16:42.6185960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6186250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6186460Z 
2025-01-14T13:16:42.6186530Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6186700Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6186770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6186840Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6186980Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6187030Z         )
2025-01-14T13:16:42.6187090Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6187140Z >       sim.run_final()
2025-01-14T13:16:42.6187150Z 
2025-01-14T13:16:42.6187200Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6187290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6187370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6187490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6187560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6187700Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6187790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6187790Z 
2025-01-14T13:16:42.6188110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6188280Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6188450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6188680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6188800Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6188910Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6188920Z 
2025-01-14T13:16:42.6188980Z     def initialize_transport_state(
2025-01-14T13:16:42.6189110Z         self,
2025-01-14T13:16:42.6189170Z         simulation_state,
2025-01-14T13:16:42.6189230Z         opacity_state,
2025-01-14T13:16:42.6189280Z         macro_atom_state,
2025-01-14T13:16:42.6189320Z         plasma,
2025-01-14T13:16:42.6189380Z         no_of_packets,
2025-01-14T13:16:42.6189440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6189480Z         iteration=0,
2025-01-14T13:16:42.6189530Z     ):
2025-01-14T13:16:42.6189630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6189700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6189760Z         else:
2025-01-14T13:16:42.6189820Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6189860Z     
2025-01-14T13:16:42.6189970Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6190040Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6190100Z         )
2025-01-14T13:16:42.6190140Z     
2025-01-14T13:16:42.6190250Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6190340Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6190470Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6190520Z         else:
2025-01-14T13:16:42.6190580Z             continuum_state = None
2025-01-14T13:16:42.6190650Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6190740Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6190810Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6190900Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6190970Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6191050Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6191110Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6191160Z         ).to_numba(
2025-01-14T13:16:42.6191270Z             macro_atom_state,
2025-01-14T13:16:42.6191330Z             self.line_interaction_type,
2025-01-14T13:16:42.6191380Z         )
2025-01-14T13:16:42.6191450Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6191680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6191730Z         ]
2025-01-14T13:16:42.6191980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6191980Z 
2025-01-14T13:16:42.6192100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6197000Z __ ERROR at setup of test_hdf_transport_state[last_line_interaction_shell_id] __
2025-01-14T13:16:42.6197020Z 
2025-01-14T13:16:42.6197600Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6197930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6197940Z 
2025-01-14T13:16:42.6198010Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6198180Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6198250Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6198310Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6198460Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6198510Z         )
2025-01-14T13:16:42.6198570Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6198620Z >       sim.run_final()
2025-01-14T13:16:42.6198620Z 
2025-01-14T13:16:42.6198680Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6198770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6199090Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6199220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6199290Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6199420Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6199520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6199520Z 
2025-01-14T13:16:42.6199750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6199900Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6200110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6200330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6200450Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6200570Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6200570Z 
2025-01-14T13:16:42.6200630Z     def initialize_transport_state(
2025-01-14T13:16:42.6200680Z         self,
2025-01-14T13:16:42.6200730Z         simulation_state,
2025-01-14T13:16:42.6200780Z         opacity_state,
2025-01-14T13:16:42.6200840Z         macro_atom_state,
2025-01-14T13:16:42.6200880Z         plasma,
2025-01-14T13:16:42.6200930Z         no_of_packets,
2025-01-14T13:16:42.6200990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6201040Z         iteration=0,
2025-01-14T13:16:42.6201080Z     ):
2025-01-14T13:16:42.6201180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6201250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6201300Z         else:
2025-01-14T13:16:42.6201350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6201400Z     
2025-01-14T13:16:42.6201630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6201710Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6201760Z         )
2025-01-14T13:16:42.6201810Z     
2025-01-14T13:16:42.6201910Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6202000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6202120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6202170Z         else:
2025-01-14T13:16:42.6202230Z             continuum_state = None
2025-01-14T13:16:42.6202310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6202390Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6202460Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6202540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6202620Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6202690Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6202760Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6202810Z         ).to_numba(
2025-01-14T13:16:42.6202870Z             macro_atom_state,
2025-01-14T13:16:42.6202930Z             self.line_interaction_type,
2025-01-14T13:16:42.6202970Z         )
2025-01-14T13:16:42.6203050Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6203270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6203320Z         ]
2025-01-14T13:16:42.6203560Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6203570Z 
2025-01-14T13:16:42.6203690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6203840Z _________ ERROR at setup of test_hdf_transport_state[virt_packet_nus] __________
2025-01-14T13:16:42.6203840Z 
2025-01-14T13:16:42.6204470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6204770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6204780Z 
2025-01-14T13:16:42.6204840Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6205010Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6205080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6205140Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6205280Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6205330Z         )
2025-01-14T13:16:42.6205390Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6205440Z >       sim.run_final()
2025-01-14T13:16:42.6205450Z 
2025-01-14T13:16:42.6205510Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6205600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6205680Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6205790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6205850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6205980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6206060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6206070Z 
2025-01-14T13:16:42.6206290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6206450Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6206630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6206920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6207050Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6207170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6207170Z 
2025-01-14T13:16:42.6207240Z     def initialize_transport_state(
2025-01-14T13:16:42.6207290Z         self,
2025-01-14T13:16:42.6207350Z         simulation_state,
2025-01-14T13:16:42.6207400Z         opacity_state,
2025-01-14T13:16:42.6207450Z         macro_atom_state,
2025-01-14T13:16:42.6207490Z         plasma,
2025-01-14T13:16:42.6207550Z         no_of_packets,
2025-01-14T13:16:42.6207610Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6207650Z         iteration=0,
2025-01-14T13:16:42.6207700Z     ):
2025-01-14T13:16:42.6207790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6207880Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6207920Z         else:
2025-01-14T13:16:42.6207990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6208030Z     
2025-01-14T13:16:42.6208130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6208200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6208250Z         )
2025-01-14T13:16:42.6208300Z     
2025-01-14T13:16:42.6208400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6208490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6208610Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6208660Z         else:
2025-01-14T13:16:42.6208710Z             continuum_state = None
2025-01-14T13:16:42.6208790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6208870Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6208940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6209030Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6209350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6209440Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6209510Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6209560Z         ).to_numba(
2025-01-14T13:16:42.6209620Z             macro_atom_state,
2025-01-14T13:16:42.6209680Z             self.line_interaction_type,
2025-01-14T13:16:42.6209730Z         )
2025-01-14T13:16:42.6209810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6210030Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6210080Z         ]
2025-01-14T13:16:42.6210320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6210320Z 
2025-01-14T13:16:42.6210440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6210590Z _______ ERROR at setup of test_hdf_transport_state[virt_packet_energies] _______
2025-01-14T13:16:42.6210590Z 
2025-01-14T13:16:42.6211110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6211410Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6211410Z 
2025-01-14T13:16:42.6211480Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6211650Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6211720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6211790Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6211930Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6212470Z         )
2025-01-14T13:16:42.6212540Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6212600Z >       sim.run_final()
2025-01-14T13:16:42.6212600Z 
2025-01-14T13:16:42.6212660Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6212750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6212820Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6212930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6213000Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6213130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6213220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6213220Z 
2025-01-14T13:16:42.6213430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6213590Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6213770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6214000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6214130Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6214230Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6214240Z 
2025-01-14T13:16:42.6214310Z     def initialize_transport_state(
2025-01-14T13:16:42.6214350Z         self,
2025-01-14T13:16:42.6214410Z         simulation_state,
2025-01-14T13:16:42.6214460Z         opacity_state,
2025-01-14T13:16:42.6214510Z         macro_atom_state,
2025-01-14T13:16:42.6214560Z         plasma,
2025-01-14T13:16:42.6214610Z         no_of_packets,
2025-01-14T13:16:42.6214680Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6214730Z         iteration=0,
2025-01-14T13:16:42.6214780Z     ):
2025-01-14T13:16:42.6214880Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6215030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6215090Z         else:
2025-01-14T13:16:42.6215150Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6215190Z     
2025-01-14T13:16:42.6215310Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6215380Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6215430Z         )
2025-01-14T13:16:42.6215480Z     
2025-01-14T13:16:42.6215580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6215670Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6215800Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6215850Z         else:
2025-01-14T13:16:42.6215910Z             continuum_state = None
2025-01-14T13:16:42.6215990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6216080Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6216150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6216240Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6216320Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6216390Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6216460Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6216500Z         ).to_numba(
2025-01-14T13:16:42.6216560Z             macro_atom_state,
2025-01-14T13:16:42.6216620Z             self.line_interaction_type,
2025-01-14T13:16:42.6216660Z         )
2025-01-14T13:16:42.6216730Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6216960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6217010Z         ]
2025-01-14T13:16:42.6217270Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6217340Z 
2025-01-14T13:16:42.6217460Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6217620Z ______ ERROR at setup of test_hdf_transport_state[virt_packet_initial_rs] ______
2025-01-14T13:16:42.6217620Z 
2025-01-14T13:16:42.6218160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6218440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6218450Z 
2025-01-14T13:16:42.6218520Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6218690Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6218760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6218830Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6218980Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6219020Z         )
2025-01-14T13:16:42.6219090Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6219140Z >       sim.run_final()
2025-01-14T13:16:42.6219140Z 
2025-01-14T13:16:42.6219200Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6219290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6219370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6219480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6219550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6219680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6219760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6219770Z 
2025-01-14T13:16:42.6220040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6220210Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6220390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6220620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6220750Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6220850Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6220860Z 
2025-01-14T13:16:42.6220920Z     def initialize_transport_state(
2025-01-14T13:16:42.6220970Z         self,
2025-01-14T13:16:42.6221020Z         simulation_state,
2025-01-14T13:16:42.6221070Z         opacity_state,
2025-01-14T13:16:42.6221120Z         macro_atom_state,
2025-01-14T13:16:42.6221170Z         plasma,
2025-01-14T13:16:42.6221220Z         no_of_packets,
2025-01-14T13:16:42.6221280Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6221340Z         iteration=0,
2025-01-14T13:16:42.6221380Z     ):
2025-01-14T13:16:42.6221480Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6221550Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6221600Z         else:
2025-01-14T13:16:42.6221660Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6221710Z     
2025-01-14T13:16:42.6221810Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6221890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6221930Z         )
2025-01-14T13:16:42.6221980Z     
2025-01-14T13:16:42.6222090Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6222180Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6222310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6222410Z         else:
2025-01-14T13:16:42.6222470Z             continuum_state = None
2025-01-14T13:16:42.6222550Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6222640Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6222710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6222800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6222880Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6222940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6223010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6223060Z         ).to_numba(
2025-01-14T13:16:42.6223110Z             macro_atom_state,
2025-01-14T13:16:42.6223180Z             self.line_interaction_type,
2025-01-14T13:16:42.6223230Z         )
2025-01-14T13:16:42.6223320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6223540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6223590Z         ]
2025-01-14T13:16:42.6223850Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6223850Z 
2025-01-14T13:16:42.6223980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6224130Z _____ ERROR at setup of test_hdf_transport_state[virt_packet_initial_mus] ______
2025-01-14T13:16:42.6224130Z 
2025-01-14T13:16:42.6224650Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6224940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6224940Z 
2025-01-14T13:16:42.6225010Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6225220Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6225310Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6225370Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6225520Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6225560Z         )
2025-01-14T13:16:42.6225630Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6225680Z >       sim.run_final()
2025-01-14T13:16:42.6225680Z 
2025-01-14T13:16:42.6225740Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6225830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6225900Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6226010Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6226080Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6226210Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6226300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6226300Z 
2025-01-14T13:16:42.6226520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6226680Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6226860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6227080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6227210Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6227310Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6227320Z 
2025-01-14T13:16:42.6227380Z     def initialize_transport_state(
2025-01-14T13:16:42.6227430Z         self,
2025-01-14T13:16:42.6227480Z         simulation_state,
2025-01-14T13:16:42.6227580Z         opacity_state,
2025-01-14T13:16:42.6227640Z         macro_atom_state,
2025-01-14T13:16:42.6227690Z         plasma,
2025-01-14T13:16:42.6227740Z         no_of_packets,
2025-01-14T13:16:42.6227790Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6227840Z         iteration=0,
2025-01-14T13:16:42.6227880Z     ):
2025-01-14T13:16:42.6228100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6228170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6228220Z         else:
2025-01-14T13:16:42.6228280Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6228330Z     
2025-01-14T13:16:42.6228440Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6228510Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6228560Z         )
2025-01-14T13:16:42.6228600Z     
2025-01-14T13:16:42.6228700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6228790Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6228920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6228960Z         else:
2025-01-14T13:16:42.6229020Z             continuum_state = None
2025-01-14T13:16:42.6229100Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6229180Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6229240Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6229320Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6229400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6229460Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6229530Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6229570Z         ).to_numba(
2025-01-14T13:16:42.6229620Z             macro_atom_state,
2025-01-14T13:16:42.6229690Z             self.line_interaction_type,
2025-01-14T13:16:42.6229730Z         )
2025-01-14T13:16:42.6229810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6230320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6230380Z         ]
2025-01-14T13:16:42.6230630Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6230630Z 
2025-01-14T13:16:42.6230750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6230900Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_nu] _
2025-01-14T13:16:42.6230910Z 
2025-01-14T13:16:42.6231420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6231810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6231850Z 
2025-01-14T13:16:42.6231930Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6232100Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6232160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6232230Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6232370Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6232420Z         )
2025-01-14T13:16:42.6232480Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6232530Z >       sim.run_final()
2025-01-14T13:16:42.6232530Z 
2025-01-14T13:16:42.6232590Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6232690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6232770Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6232880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6233330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6233450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6233540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6233540Z 
2025-01-14T13:16:42.6233770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6233940Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6234120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6234340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6234460Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6234560Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6234570Z 
2025-01-14T13:16:42.6234640Z     def initialize_transport_state(
2025-01-14T13:16:42.6234680Z         self,
2025-01-14T13:16:42.6234730Z         simulation_state,
2025-01-14T13:16:42.6234780Z         opacity_state,
2025-01-14T13:16:42.6234840Z         macro_atom_state,
2025-01-14T13:16:42.6234880Z         plasma,
2025-01-14T13:16:42.6234940Z         no_of_packets,
2025-01-14T13:16:42.6234990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6235040Z         iteration=0,
2025-01-14T13:16:42.6235080Z     ):
2025-01-14T13:16:42.6235170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6235250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6235290Z         else:
2025-01-14T13:16:42.6235350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6235390Z     
2025-01-14T13:16:42.6235500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6235560Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6235620Z         )
2025-01-14T13:16:42.6235660Z     
2025-01-14T13:16:42.6235880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6235970Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6236100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6236140Z         else:
2025-01-14T13:16:42.6236200Z             continuum_state = None
2025-01-14T13:16:42.6236280Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6236360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6236440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6236530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6236600Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6236660Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6236730Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6236770Z         ).to_numba(
2025-01-14T13:16:42.6236830Z             macro_atom_state,
2025-01-14T13:16:42.6236890Z             self.line_interaction_type,
2025-01-14T13:16:42.6236940Z         )
2025-01-14T13:16:42.6237010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6237240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6237280Z         ]
2025-01-14T13:16:42.6237530Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6237530Z 
2025-01-14T13:16:42.6237650Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6237800Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_r] _
2025-01-14T13:16:42.6237800Z 
2025-01-14T13:16:42.6238310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6238700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6238700Z 
2025-01-14T13:16:42.6238770Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6238940Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6239010Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6239070Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6239210Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6239250Z         )
2025-01-14T13:16:42.6239310Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6239370Z >       sim.run_final()
2025-01-14T13:16:42.6239370Z 
2025-01-14T13:16:42.6239430Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6239510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6239590Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6239700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6239770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6239890Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6239980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6239980Z 
2025-01-14T13:16:42.6240190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6240350Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6240520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6240750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6240880Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6241050Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6241060Z 
2025-01-14T13:16:42.6241120Z     def initialize_transport_state(
2025-01-14T13:16:42.6241170Z         self,
2025-01-14T13:16:42.6241230Z         simulation_state,
2025-01-14T13:16:42.6241280Z         opacity_state,
2025-01-14T13:16:42.6241330Z         macro_atom_state,
2025-01-14T13:16:42.6241370Z         plasma,
2025-01-14T13:16:42.6241420Z         no_of_packets,
2025-01-14T13:16:42.6241480Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6241540Z         iteration=0,
2025-01-14T13:16:42.6241580Z     ):
2025-01-14T13:16:42.6241680Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6241740Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6241800Z         else:
2025-01-14T13:16:42.6241850Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6241900Z     
2025-01-14T13:16:42.6242000Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6242080Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6242130Z         )
2025-01-14T13:16:42.6242170Z     
2025-01-14T13:16:42.6242270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6242360Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6242490Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6242530Z         else:
2025-01-14T13:16:42.6242600Z             continuum_state = None
2025-01-14T13:16:42.6242670Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6242770Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6242850Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6242930Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6243010Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6243170Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6243240Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6243290Z         ).to_numba(
2025-01-14T13:16:42.6243340Z             macro_atom_state,
2025-01-14T13:16:42.6243410Z             self.line_interaction_type,
2025-01-14T13:16:42.6243450Z         )
2025-01-14T13:16:42.6243530Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6243750Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6243790Z         ]
2025-01-14T13:16:42.6244040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6244050Z 
2025-01-14T13:16:42.6244160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6244320Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_type] _
2025-01-14T13:16:42.6244320Z 
2025-01-14T13:16:42.6244830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6245130Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6245130Z 
2025-01-14T13:16:42.6245200Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6245370Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6245430Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6245500Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6245650Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6245690Z         )
2025-01-14T13:16:42.6245760Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6245810Z >       sim.run_final()
2025-01-14T13:16:42.6245820Z 
2025-01-14T13:16:42.6245940Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6246040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6246110Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6246240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6246310Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6246430Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6246510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6246510Z 
2025-01-14T13:16:42.6246730Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6246880Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6247060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6247290Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6247410Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6247530Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6247530Z 
2025-01-14T13:16:42.6247590Z     def initialize_transport_state(
2025-01-14T13:16:42.6247640Z         self,
2025-01-14T13:16:42.6247690Z         simulation_state,
2025-01-14T13:16:42.6247740Z         opacity_state,
2025-01-14T13:16:42.6247790Z         macro_atom_state,
2025-01-14T13:16:42.6247840Z         plasma,
2025-01-14T13:16:42.6247880Z         no_of_packets,
2025-01-14T13:16:42.6247950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6247990Z         iteration=0,
2025-01-14T13:16:42.6248040Z     ):
2025-01-14T13:16:42.6248130Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6248210Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6248310Z         else:
2025-01-14T13:16:42.6248370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6248420Z     
2025-01-14T13:16:42.6248520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6248600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6248640Z         )
2025-01-14T13:16:42.6248680Z     
2025-01-14T13:16:42.6248780Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6248870Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6248990Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6249030Z         else:
2025-01-14T13:16:42.6249090Z             continuum_state = None
2025-01-14T13:16:42.6253680Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6253820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6253890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6253990Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6254070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6254140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6254200Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6254250Z         ).to_numba(
2025-01-14T13:16:42.6254310Z             macro_atom_state,
2025-01-14T13:16:42.6254370Z             self.line_interaction_type,
2025-01-14T13:16:42.6254410Z         )
2025-01-14T13:16:42.6254490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6254710Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6254760Z         ]
2025-01-14T13:16:42.6255010Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6255010Z 
2025-01-14T13:16:42.6255120Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6255860Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_in_id] _
2025-01-14T13:16:42.6255870Z 
2025-01-14T13:16:42.6256400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6256680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6256680Z 
2025-01-14T13:16:42.6256750Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6256920Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6256990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6257050Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6257200Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6257240Z         )
2025-01-14T13:16:42.6257310Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6257360Z >       sim.run_final()
2025-01-14T13:16:42.6257370Z 
2025-01-14T13:16:42.6257430Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6257520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6257590Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6257700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6257770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6257900Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6257980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6257990Z 
2025-01-14T13:16:42.6258200Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6258780Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6258960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6259180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6259300Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6259410Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6259410Z 
2025-01-14T13:16:42.6259480Z     def initialize_transport_state(
2025-01-14T13:16:42.6259520Z         self,
2025-01-14T13:16:42.6259580Z         simulation_state,
2025-01-14T13:16:42.6259630Z         opacity_state,
2025-01-14T13:16:42.6259680Z         macro_atom_state,
2025-01-14T13:16:42.6259720Z         plasma,
2025-01-14T13:16:42.6259770Z         no_of_packets,
2025-01-14T13:16:42.6259830Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6259890Z         iteration=0,
2025-01-14T13:16:42.6259940Z     ):
2025-01-14T13:16:42.6260040Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6260110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6260150Z         else:
2025-01-14T13:16:42.6260210Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6260250Z     
2025-01-14T13:16:42.6260350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6260420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6260470Z         )
2025-01-14T13:16:42.6260510Z     
2025-01-14T13:16:42.6260620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6260700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6260830Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6260880Z         else:
2025-01-14T13:16:42.6260930Z             continuum_state = None
2025-01-14T13:16:42.6261980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6262450Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6263310Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6263540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6263760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6264190Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6264460Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6264610Z         ).to_numba(
2025-01-14T13:16:42.6264790Z             macro_atom_state,
2025-01-14T13:16:42.6264970Z             self.line_interaction_type,
2025-01-14T13:16:42.6265130Z         )
2025-01-14T13:16:42.6265350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6266410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6266560Z         ]
2025-01-14T13:16:42.6267230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6267270Z 
2025-01-14T13:16:42.6267430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6267610Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_out_id] _
2025-01-14T13:16:42.6267620Z 
2025-01-14T13:16:42.6268300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6268590Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6268600Z 
2025-01-14T13:16:42.6268670Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6268840Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6269150Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6269220Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6269370Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6269420Z         )
2025-01-14T13:16:42.6269480Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6269540Z >       sim.run_final()
2025-01-14T13:16:42.6269540Z 
2025-01-14T13:16:42.6269600Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6269700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6269770Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6269880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6269960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6270080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6270170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6270170Z 
2025-01-14T13:16:42.6270390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6270560Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6270750Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6270970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6271100Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6271210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6271210Z 
2025-01-14T13:16:42.6271280Z     def initialize_transport_state(
2025-01-14T13:16:42.6271330Z         self,
2025-01-14T13:16:42.6271390Z         simulation_state,
2025-01-14T13:16:42.6271440Z         opacity_state,
2025-01-14T13:16:42.6271500Z         macro_atom_state,
2025-01-14T13:16:42.6271540Z         plasma,
2025-01-14T13:16:42.6271600Z         no_of_packets,
2025-01-14T13:16:42.6271750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6271810Z         iteration=0,
2025-01-14T13:16:42.6271850Z     ):
2025-01-14T13:16:42.6271960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6272040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6272090Z         else:
2025-01-14T13:16:42.6272150Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6272190Z     
2025-01-14T13:16:42.6272300Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6272370Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6272430Z         )
2025-01-14T13:16:42.6272470Z     
2025-01-14T13:16:42.6272570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6272660Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6272790Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6272840Z         else:
2025-01-14T13:16:42.6272900Z             continuum_state = None
2025-01-14T13:16:42.6272980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6273060Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6273130Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6273230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6273300Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6273370Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6273440Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6273480Z         ).to_numba(
2025-01-14T13:16:42.6273540Z             macro_atom_state,
2025-01-14T13:16:42.6273600Z             self.line_interaction_type,
2025-01-14T13:16:42.6273650Z         )
2025-01-14T13:16:42.6273720Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6273950Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6274100Z         ]
2025-01-14T13:16:42.6274360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6274360Z 
2025-01-14T13:16:42.6274470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6274650Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] _
2025-01-14T13:16:42.6274660Z 
2025-01-14T13:16:42.6275180Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6275460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6275470Z 
2025-01-14T13:16:42.6275540Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.6275710Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6275780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6275840Z         sim = Simulation.from_config(
2025-01-14T13:16:42.6275990Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-14T13:16:42.6276030Z         )
2025-01-14T13:16:42.6276090Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.6276140Z >       sim.run_final()
2025-01-14T13:16:42.6276140Z 
2025-01-14T13:16:42.6276200Z tardis/conftest.py:244: 
2025-01-14T13:16:42.6276290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6276360Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.6276480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6276550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6276680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6276830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6276830Z 
2025-01-14T13:16:42.6277070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30ee72c30>
2025-01-14T13:16:42.6277230Z simulation_state = <tardis.model.base.SimulationState object at 0x30e896480>
2025-01-14T13:16:42.6277410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30e876780>
2025-01-14T13:16:42.6277640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30e8774a0>
2025-01-14T13:16:42.6277760Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e8b7bf0>
2025-01-14T13:16:42.6277880Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.6277880Z 
2025-01-14T13:16:42.6277940Z     def initialize_transport_state(
2025-01-14T13:16:42.6277990Z         self,
2025-01-14T13:16:42.6278050Z         simulation_state,
2025-01-14T13:16:42.6278100Z         opacity_state,
2025-01-14T13:16:42.6278160Z         macro_atom_state,
2025-01-14T13:16:42.6278200Z         plasma,
2025-01-14T13:16:42.6278250Z         no_of_packets,
2025-01-14T13:16:42.6278310Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6278360Z         iteration=0,
2025-01-14T13:16:42.6278400Z     ):
2025-01-14T13:16:42.6278500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6278570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6278620Z         else:
2025-01-14T13:16:42.6278670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6278720Z     
2025-01-14T13:16:42.6278820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6278890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6278940Z         )
2025-01-14T13:16:42.6278980Z     
2025-01-14T13:16:42.6279080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6279220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6279350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6279390Z         else:
2025-01-14T13:16:42.6279450Z             continuum_state = None
2025-01-14T13:16:42.6279530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6279620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6279680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6279770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6279840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6279900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6279970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6280020Z         ).to_numba(
2025-01-14T13:16:42.6280070Z             macro_atom_state,
2025-01-14T13:16:42.6280130Z             self.line_interaction_type,
2025-01-14T13:16:42.6280180Z         )
2025-01-14T13:16:42.6280260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6280490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6280530Z         ]
2025-01-14T13:16:42.6280780Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6280780Z 
2025-01-14T13:16:42.6280900Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6281030Z ____________________ ERROR at setup of test_thomson_scatter ____________________
2025-01-14T13:16:42.6281030Z 
2025-01-14T13:16:42.6281540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6282090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6282110Z 
2025-01-14T13:16:42.6282190Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6282330Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6282400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6282550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6282600Z >       sim.iterate(10)
2025-01-14T13:16:42.6282600Z 
2025-01-14T13:16:42.6282700Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6282790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6282860Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6282980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6283070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6283070Z 
2025-01-14T13:16:42.6283290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6283460Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6283630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6283850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6284210Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6284330Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6284330Z 
2025-01-14T13:16:42.6284390Z     def initialize_transport_state(
2025-01-14T13:16:42.6284440Z         self,
2025-01-14T13:16:42.6284490Z         simulation_state,
2025-01-14T13:16:42.6284540Z         opacity_state,
2025-01-14T13:16:42.6284590Z         macro_atom_state,
2025-01-14T13:16:42.6284970Z         plasma,
2025-01-14T13:16:42.6285030Z         no_of_packets,
2025-01-14T13:16:42.6285090Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6285140Z         iteration=0,
2025-01-14T13:16:42.6285180Z     ):
2025-01-14T13:16:42.6285280Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6285350Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6285400Z         else:
2025-01-14T13:16:42.6285460Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6285500Z     
2025-01-14T13:16:42.6285610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6285680Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6285720Z         )
2025-01-14T13:16:42.6285760Z     
2025-01-14T13:16:42.6285860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6285960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6286080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6286130Z         else:
2025-01-14T13:16:42.6286190Z             continuum_state = None
2025-01-14T13:16:42.6286270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6286360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6286430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6286520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6286590Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6286670Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6286730Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6286780Z         ).to_numba(
2025-01-14T13:16:42.6286840Z             macro_atom_state,
2025-01-14T13:16:42.6286910Z             self.line_interaction_type,
2025-01-14T13:16:42.6286950Z         )
2025-01-14T13:16:42.6287030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6287250Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6287370Z         ]
2025-01-14T13:16:42.6287620Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6287630Z 
2025-01-14T13:16:42.6287740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6287870Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.6288290Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.6288640Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.6288780Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6288950Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.6289080Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6289140Z 	
2025-01-14T13:16:42.6289250Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.6289380Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.6289780Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.6289960Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.6290040Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.6290100Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.6290230Z ____________________ ERROR at setup of test_line_scatter[0] ____________________
2025-01-14T13:16:42.6290230Z 
2025-01-14T13:16:42.6290750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6291120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6291120Z 
2025-01-14T13:16:42.6291200Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6291320Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6291400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6291540Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6291590Z >       sim.iterate(10)
2025-01-14T13:16:42.6291600Z 
2025-01-14T13:16:42.6291690Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6291780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6291850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6291970Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6292070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6292070Z 
2025-01-14T13:16:42.6292280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6292450Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6292620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6292850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6292980Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6293090Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6293090Z 
2025-01-14T13:16:42.6293150Z     def initialize_transport_state(
2025-01-14T13:16:42.6293200Z         self,
2025-01-14T13:16:42.6293250Z         simulation_state,
2025-01-14T13:16:42.6293310Z         opacity_state,
2025-01-14T13:16:42.6293360Z         macro_atom_state,
2025-01-14T13:16:42.6293470Z         plasma,
2025-01-14T13:16:42.6293530Z         no_of_packets,
2025-01-14T13:16:42.6293590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6293630Z         iteration=0,
2025-01-14T13:16:42.6293670Z     ):
2025-01-14T13:16:42.6293770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6293830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6293880Z         else:
2025-01-14T13:16:42.6293930Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6293980Z     
2025-01-14T13:16:42.6294080Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6294150Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6294190Z         )
2025-01-14T13:16:42.6294240Z     
2025-01-14T13:16:42.6294350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6294430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6294570Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6294610Z         else:
2025-01-14T13:16:42.6294680Z             continuum_state = None
2025-01-14T13:16:42.6294750Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6294850Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6294920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6295000Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6295070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6295140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6295210Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6295260Z         ).to_numba(
2025-01-14T13:16:42.6295380Z             macro_atom_state,
2025-01-14T13:16:42.6295500Z             self.line_interaction_type,
2025-01-14T13:16:42.6295550Z         )
2025-01-14T13:16:42.6295830Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6296060Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6296110Z         ]
2025-01-14T13:16:42.6296380Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6296380Z 
2025-01-14T13:16:42.6296490Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6296620Z ____________________ ERROR at setup of test_line_scatter[1] ____________________
2025-01-14T13:16:42.6296620Z 
2025-01-14T13:16:42.6297150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6297440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6297450Z 
2025-01-14T13:16:42.6297520Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6297640Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6297720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6297860Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6297910Z >       sim.iterate(10)
2025-01-14T13:16:42.6297910Z 
2025-01-14T13:16:42.6298000Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6298090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6298170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6298290Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6298380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6298390Z 
2025-01-14T13:16:42.6298690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6298870Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6299050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6299280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6299410Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6299510Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6299520Z 
2025-01-14T13:16:42.6299580Z     def initialize_transport_state(
2025-01-14T13:16:42.6299630Z         self,
2025-01-14T13:16:42.6299690Z         simulation_state,
2025-01-14T13:16:42.6299740Z         opacity_state,
2025-01-14T13:16:42.6299790Z         macro_atom_state,
2025-01-14T13:16:42.6299840Z         plasma,
2025-01-14T13:16:42.6299900Z         no_of_packets,
2025-01-14T13:16:42.6299950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6300010Z         iteration=0,
2025-01-14T13:16:42.6300050Z     ):
2025-01-14T13:16:42.6300160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6300230Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6300300Z         else:
2025-01-14T13:16:42.6300360Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6300400Z     
2025-01-14T13:16:42.6300510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6300590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6300640Z         )
2025-01-14T13:16:42.6300680Z     
2025-01-14T13:16:42.6300790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6300880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6301120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6301270Z         else:
2025-01-14T13:16:42.6301330Z             continuum_state = None
2025-01-14T13:16:42.6301410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6301510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6301570Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6301660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6301730Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6301810Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6301870Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6301920Z         ).to_numba(
2025-01-14T13:16:42.6301980Z             macro_atom_state,
2025-01-14T13:16:42.6302040Z             self.line_interaction_type,
2025-01-14T13:16:42.6302080Z         )
2025-01-14T13:16:42.6302150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6302380Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6302420Z         ]
2025-01-14T13:16:42.6302680Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6302680Z 
2025-01-14T13:16:42.6302800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6302920Z ____________________ ERROR at setup of test_line_scatter[2] ____________________
2025-01-14T13:16:42.6302920Z 
2025-01-14T13:16:42.6303440Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6303730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6303730Z 
2025-01-14T13:16:42.6303800Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6304190Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6304290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6304440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6304500Z >       sim.iterate(10)
2025-01-14T13:16:42.6304500Z 
2025-01-14T13:16:42.6304590Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6304680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6304750Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6304880Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6304970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6304970Z 
2025-01-14T13:16:42.6305180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6305360Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6305540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6305770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6307060Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6307720Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6307740Z 
2025-01-14T13:16:42.6307830Z     def initialize_transport_state(
2025-01-14T13:16:42.6307870Z         self,
2025-01-14T13:16:42.6307930Z         simulation_state,
2025-01-14T13:16:42.6307980Z         opacity_state,
2025-01-14T13:16:42.6308040Z         macro_atom_state,
2025-01-14T13:16:42.6308090Z         plasma,
2025-01-14T13:16:42.6308280Z         no_of_packets,
2025-01-14T13:16:42.6308340Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6308390Z         iteration=0,
2025-01-14T13:16:42.6309070Z     ):
2025-01-14T13:16:42.6309180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6309250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6309300Z         else:
2025-01-14T13:16:42.6309350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6309390Z     
2025-01-14T13:16:42.6309500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6309570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6309620Z         )
2025-01-14T13:16:42.6309660Z     
2025-01-14T13:16:42.6309760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6309850Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6309980Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6310030Z         else:
2025-01-14T13:16:42.6310090Z             continuum_state = None
2025-01-14T13:16:42.6310170Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6310270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6310340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6310430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6310500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6310580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6310640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6310690Z         ).to_numba(
2025-01-14T13:16:42.6310740Z             macro_atom_state,
2025-01-14T13:16:42.6310800Z             self.line_interaction_type,
2025-01-14T13:16:42.6310850Z         )
2025-01-14T13:16:42.6310930Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6311150Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6311190Z         ]
2025-01-14T13:16:42.6311450Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6311540Z 
2025-01-14T13:16:42.6311660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6311810Z _________ ERROR at setup of test_line_emission[test_packet0-expected0] _________
2025-01-14T13:16:42.6311810Z 
2025-01-14T13:16:42.6312330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6312620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6312620Z 
2025-01-14T13:16:42.6312690Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6312820Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6312900Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6313050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6313100Z >       sim.iterate(10)
2025-01-14T13:16:42.6313110Z 
2025-01-14T13:16:42.6313200Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6313290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6313370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6313490Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6313580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6313580Z 
2025-01-14T13:16:42.6313790Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6313950Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6314150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6314480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6314610Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6314720Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6314720Z 
2025-01-14T13:16:42.6314790Z     def initialize_transport_state(
2025-01-14T13:16:42.6314830Z         self,
2025-01-14T13:16:42.6314900Z         simulation_state,
2025-01-14T13:16:42.6314950Z         opacity_state,
2025-01-14T13:16:42.6315000Z         macro_atom_state,
2025-01-14T13:16:42.6315050Z         plasma,
2025-01-14T13:16:42.6315100Z         no_of_packets,
2025-01-14T13:16:42.6315160Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6315210Z         iteration=0,
2025-01-14T13:16:42.6315250Z     ):
2025-01-14T13:16:42.6315350Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6315420Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6315480Z         else:
2025-01-14T13:16:42.6315540Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6315580Z     
2025-01-14T13:16:42.6315690Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6315760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6315810Z         )
2025-01-14T13:16:42.6315860Z     
2025-01-14T13:16:42.6315960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6321230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6321400Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6321450Z         else:
2025-01-14T13:16:42.6321510Z             continuum_state = None
2025-01-14T13:16:42.6321590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6321680Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6321750Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6321840Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6322120Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6322200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6322260Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6322310Z         ).to_numba(
2025-01-14T13:16:42.6322370Z             macro_atom_state,
2025-01-14T13:16:42.6322430Z             self.line_interaction_type,
2025-01-14T13:16:42.6322480Z         )
2025-01-14T13:16:42.6322550Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6322770Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6322810Z         ]
2025-01-14T13:16:42.6323060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6323070Z 
2025-01-14T13:16:42.6323180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6323340Z _________ ERROR at setup of test_line_emission[test_packet1-expected1] _________
2025-01-14T13:16:42.6323340Z 
2025-01-14T13:16:42.6323860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6324140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6324140Z 
2025-01-14T13:16:42.6324210Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6324340Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6324410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6324550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6324690Z >       sim.iterate(10)
2025-01-14T13:16:42.6324690Z 
2025-01-14T13:16:42.6324790Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6324880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6324960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6325080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6325160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6325170Z 
2025-01-14T13:16:42.6325370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6325540Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6325710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6325930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6326060Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6326160Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6326160Z 
2025-01-14T13:16:42.6326240Z     def initialize_transport_state(
2025-01-14T13:16:42.6326280Z         self,
2025-01-14T13:16:42.6326330Z         simulation_state,
2025-01-14T13:16:42.6326380Z         opacity_state,
2025-01-14T13:16:42.6326440Z         macro_atom_state,
2025-01-14T13:16:42.6326490Z         plasma,
2025-01-14T13:16:42.6326540Z         no_of_packets,
2025-01-14T13:16:42.6326600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6326640Z         iteration=0,
2025-01-14T13:16:42.6326690Z     ):
2025-01-14T13:16:42.6326790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6326860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6326910Z         else:
2025-01-14T13:16:42.6326960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6327010Z     
2025-01-14T13:16:42.6327130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6327270Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6327330Z         )
2025-01-14T13:16:42.6327370Z     
2025-01-14T13:16:42.6327480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6327570Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6327700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6327750Z         else:
2025-01-14T13:16:42.6327810Z             continuum_state = None
2025-01-14T13:16:42.6327880Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6327970Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6328030Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6328140Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6328230Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6328300Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6328380Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6328420Z         ).to_numba(
2025-01-14T13:16:42.6328490Z             macro_atom_state,
2025-01-14T13:16:42.6328550Z             self.line_interaction_type,
2025-01-14T13:16:42.6328590Z         )
2025-01-14T13:16:42.6328670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6328890Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6328940Z         ]
2025-01-14T13:16:42.6329200Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6329200Z 
2025-01-14T13:16:42.6329310Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6329460Z _________ ERROR at setup of test_line_emission[test_packet2-expected2] _________
2025-01-14T13:16:42.6329560Z 
2025-01-14T13:16:42.6330100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6330400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6330400Z 
2025-01-14T13:16:42.6330480Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6330610Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6330680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6330820Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6330880Z >       sim.iterate(10)
2025-01-14T13:16:42.6330880Z 
2025-01-14T13:16:42.6330970Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6331060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6331140Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6331270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6331350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6331360Z 
2025-01-14T13:16:42.6331570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6331730Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6331900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6332120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6332250Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6332350Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6332350Z 
2025-01-14T13:16:42.6332750Z     def initialize_transport_state(
2025-01-14T13:16:42.6332820Z         self,
2025-01-14T13:16:42.6332870Z         simulation_state,
2025-01-14T13:16:42.6332930Z         opacity_state,
2025-01-14T13:16:42.6332990Z         macro_atom_state,
2025-01-14T13:16:42.6333030Z         plasma,
2025-01-14T13:16:42.6333080Z         no_of_packets,
2025-01-14T13:16:42.6333140Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6333190Z         iteration=0,
2025-01-14T13:16:42.6333230Z     ):
2025-01-14T13:16:42.6333330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6333400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6333450Z         else:
2025-01-14T13:16:42.6333500Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6333540Z     
2025-01-14T13:16:42.6333650Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6333720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6333770Z         )
2025-01-14T13:16:42.6333820Z     
2025-01-14T13:16:42.6333920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6334010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6334140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6334190Z         else:
2025-01-14T13:16:42.6334260Z             continuum_state = None
2025-01-14T13:16:42.6334330Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6334410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6334480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6334560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6334630Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6334700Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6334770Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6335060Z         ).to_numba(
2025-01-14T13:16:42.6335130Z             macro_atom_state,
2025-01-14T13:16:42.6335190Z             self.line_interaction_type,
2025-01-14T13:16:42.6335240Z         )
2025-01-14T13:16:42.6335310Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6335540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6335590Z         ]
2025-01-14T13:16:42.6335840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6335840Z 
2025-01-14T13:16:42.6335950Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6336080Z ________________ ERROR at setup of test_macro_atom[1963-10015] _________________
2025-01-14T13:16:42.6336090Z 
2025-01-14T13:16:42.6336600Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6336890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6336890Z 
2025-01-14T13:16:42.6336960Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6337090Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6337160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6337300Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6337350Z >       sim.iterate(10)
2025-01-14T13:16:42.6337350Z 
2025-01-14T13:16:42.6337440Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6337530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6337600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6337730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6337890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6337890Z 
2025-01-14T13:16:42.6338100Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6338260Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6338440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6338670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6338800Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6338900Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6338910Z 
2025-01-14T13:16:42.6338970Z     def initialize_transport_state(
2025-01-14T13:16:42.6339020Z         self,
2025-01-14T13:16:42.6339080Z         simulation_state,
2025-01-14T13:16:42.6339130Z         opacity_state,
2025-01-14T13:16:42.6339180Z         macro_atom_state,
2025-01-14T13:16:42.6339230Z         plasma,
2025-01-14T13:16:42.6339280Z         no_of_packets,
2025-01-14T13:16:42.6339340Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6339390Z         iteration=0,
2025-01-14T13:16:42.6339430Z     ):
2025-01-14T13:16:42.6339520Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6339600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6339640Z         else:
2025-01-14T13:16:42.6339690Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6339740Z     
2025-01-14T13:16:42.6339840Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6339910Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6339960Z         )
2025-01-14T13:16:42.6340010Z     
2025-01-14T13:16:42.6340110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6340260Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6340380Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6340420Z         else:
2025-01-14T13:16:42.6340490Z             continuum_state = None
2025-01-14T13:16:42.6340560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6340650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6340720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6340800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6340870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6340940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6341010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6341050Z         ).to_numba(
2025-01-14T13:16:42.6341110Z             macro_atom_state,
2025-01-14T13:16:42.6341170Z             self.line_interaction_type,
2025-01-14T13:16:42.6341210Z         )
2025-01-14T13:16:42.6341290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6341510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6341550Z         ]
2025-01-14T13:16:42.6341810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6341810Z 
2025-01-14T13:16:42.6341930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6342050Z __________________ ERROR at setup of test_macro_atom[1-9993] ___________________
2025-01-14T13:16:42.6342050Z 
2025-01-14T13:16:42.6342560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6342890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6342890Z 
2025-01-14T13:16:42.6342960Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6343090Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6343170Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6343310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6343360Z >       sim.iterate(10)
2025-01-14T13:16:42.6343360Z 
2025-01-14T13:16:42.6343460Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6343550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6343620Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6343730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6343820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6343830Z 
2025-01-14T13:16:42.6344040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6344210Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6344390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6344600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6344730Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6344830Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6344830Z 
2025-01-14T13:16:42.6344900Z     def initialize_transport_state(
2025-01-14T13:16:42.6344940Z         self,
2025-01-14T13:16:42.6345000Z         simulation_state,
2025-01-14T13:16:42.6345050Z         opacity_state,
2025-01-14T13:16:42.6345100Z         macro_atom_state,
2025-01-14T13:16:42.6345200Z         plasma,
2025-01-14T13:16:42.6345260Z         no_of_packets,
2025-01-14T13:16:42.6345310Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6345370Z         iteration=0,
2025-01-14T13:16:42.6345410Z     ):
2025-01-14T13:16:42.6345500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6345580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6345630Z         else:
2025-01-14T13:16:42.6345680Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6345750Z     
2025-01-14T13:16:42.6345890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6345950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6346000Z         )
2025-01-14T13:16:42.6346040Z     
2025-01-14T13:16:42.6346150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6346230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6346360Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6346420Z         else:
2025-01-14T13:16:42.6346480Z             continuum_state = None
2025-01-14T13:16:42.6346560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6346650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6346720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6346800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6346870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6346940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6347000Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6347050Z         ).to_numba(
2025-01-14T13:16:42.6347100Z             macro_atom_state,
2025-01-14T13:16:42.6347160Z             self.line_interaction_type,
2025-01-14T13:16:42.6347210Z         )
2025-01-14T13:16:42.6347290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6347650Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6347700Z         ]
2025-01-14T13:16:42.6347940Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6347940Z 
2025-01-14T13:16:42.6348060Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6348190Z _______________ ERROR at setup of test_macro_atom[2111963-17296] _______________
2025-01-14T13:16:42.6348190Z 
2025-01-14T13:16:42.6348840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6349130Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6349140Z 
2025-01-14T13:16:42.6349200Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6349330Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6349410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6349550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6349600Z >       sim.iterate(10)
2025-01-14T13:16:42.6349600Z 
2025-01-14T13:16:42.6349700Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6349780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6349860Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6349980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6350070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6350070Z 
2025-01-14T13:16:42.6350280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6350560Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6351000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6351230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6351360Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6351460Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6351460Z 
2025-01-14T13:16:42.6351530Z     def initialize_transport_state(
2025-01-14T13:16:42.6351570Z         self,
2025-01-14T13:16:42.6351630Z         simulation_state,
2025-01-14T13:16:42.6351670Z         opacity_state,
2025-01-14T13:16:42.6351730Z         macro_atom_state,
2025-01-14T13:16:42.6351780Z         plasma,
2025-01-14T13:16:42.6351830Z         no_of_packets,
2025-01-14T13:16:42.6351890Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6351940Z         iteration=0,
2025-01-14T13:16:42.6351990Z     ):
2025-01-14T13:16:42.6352090Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6352170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6352210Z         else:
2025-01-14T13:16:42.6352270Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6352310Z     
2025-01-14T13:16:42.6352420Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6352480Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6352530Z         )
2025-01-14T13:16:42.6352580Z     
2025-01-14T13:16:42.6352680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6352760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6352890Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6352940Z         else:
2025-01-14T13:16:42.6353000Z             continuum_state = None
2025-01-14T13:16:42.6353080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6353780Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6353880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6353960Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6354040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6354110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6354170Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6354220Z         ).to_numba(
2025-01-14T13:16:42.6354280Z             macro_atom_state,
2025-01-14T13:16:42.6354360Z             self.line_interaction_type,
2025-01-14T13:16:42.6354410Z         )
2025-01-14T13:16:42.6354480Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6354700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6354750Z         ]
2025-01-14T13:16:42.6355000Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6355000Z 
2025-01-14T13:16:42.6355120Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6355250Z ________________ ERROR at setup of test_macro_atom[10000-9993] _________________
2025-01-14T13:16:42.6355250Z 
2025-01-14T13:16:42.6355760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6356030Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6356040Z 
2025-01-14T13:16:42.6356100Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6356230Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6356600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6356750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6356800Z >       sim.iterate(10)
2025-01-14T13:16:42.6356800Z 
2025-01-14T13:16:42.6356900Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6356980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6357060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6357180Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6357260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6357270Z 
2025-01-14T13:16:42.6357490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6357650Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6357830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6358050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6358170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6358270Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6358270Z 
2025-01-14T13:16:42.6358340Z     def initialize_transport_state(
2025-01-14T13:16:42.6358390Z         self,
2025-01-14T13:16:42.6358440Z         simulation_state,
2025-01-14T13:16:42.6358490Z         opacity_state,
2025-01-14T13:16:42.6358540Z         macro_atom_state,
2025-01-14T13:16:42.6358590Z         plasma,
2025-01-14T13:16:42.6358630Z         no_of_packets,
2025-01-14T13:16:42.6358700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6358740Z         iteration=0,
2025-01-14T13:16:42.6358790Z     ):
2025-01-14T13:16:42.6358880Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6358970Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6359110Z         else:
2025-01-14T13:16:42.6359170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6359220Z     
2025-01-14T13:16:42.6359320Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6359390Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6359430Z         )
2025-01-14T13:16:42.6359480Z     
2025-01-14T13:16:42.6359580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6359660Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6359790Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6359830Z         else:
2025-01-14T13:16:42.6359900Z             continuum_state = None
2025-01-14T13:16:42.6359980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6360070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6360150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6360240Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6360310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6360370Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6360440Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6360490Z         ).to_numba(
2025-01-14T13:16:42.6360560Z             macro_atom_state,
2025-01-14T13:16:42.6360630Z             self.line_interaction_type,
2025-01-14T13:16:42.6360680Z         )
2025-01-14T13:16:42.6360750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6360970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6361020Z         ]
2025-01-14T13:16:42.6361260Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6361350Z 
2025-01-14T13:16:42.6361470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6361620Z ________ ERROR at setup of test_opacity_state_initialize[scatter-False] ________
2025-01-14T13:16:42.6361620Z 
2025-01-14T13:16:42.6362120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6362400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6362410Z 
2025-01-14T13:16:42.6362470Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6362610Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6362680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6362820Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6362870Z >       sim.iterate(10)
2025-01-14T13:16:42.6362880Z 
2025-01-14T13:16:42.6362980Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6363060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6363140Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6364450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6364810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6364820Z 
2025-01-14T13:16:42.6365410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6365830Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6366300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6366890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6367960Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6368270Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6368270Z 
2025-01-14T13:16:42.6368470Z     def initialize_transport_state(
2025-01-14T13:16:42.6368610Z         self,
2025-01-14T13:16:42.6368790Z         simulation_state,
2025-01-14T13:16:42.6368940Z         opacity_state,
2025-01-14T13:16:42.6369100Z         macro_atom_state,
2025-01-14T13:16:42.6369250Z         plasma,
2025-01-14T13:16:42.6369400Z         no_of_packets,
2025-01-14T13:16:42.6369570Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6369720Z         iteration=0,
2025-01-14T13:16:42.6369860Z     ):
2025-01-14T13:16:42.6370130Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6370340Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6370480Z         else:
2025-01-14T13:16:42.6370660Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6370790Z     
2025-01-14T13:16:42.6371100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6371300Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6371450Z         )
2025-01-14T13:16:42.6372300Z     
2025-01-14T13:16:42.6372750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6372990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6373330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6373480Z         else:
2025-01-14T13:16:42.6373650Z             continuum_state = None
2025-01-14T13:16:42.6373870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6374100Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6374390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6374610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6375240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6375440Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6375650Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6375790Z         ).to_numba(
2025-01-14T13:16:42.6375970Z             macro_atom_state,
2025-01-14T13:16:42.6376150Z             self.line_interaction_type,
2025-01-14T13:16:42.6376290Z         )
2025-01-14T13:16:42.6376500Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6377110Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6377260Z         ]
2025-01-14T13:16:42.6377920Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6377930Z 
2025-01-14T13:16:42.6378250Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6378650Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-False] _______
2025-01-14T13:16:42.6378660Z 
2025-01-14T13:16:42.6380090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6380870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6380890Z 
2025-01-14T13:16:42.6381090Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6381440Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6381630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6382130Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6382300Z >       sim.iterate(10)
2025-01-14T13:16:42.6382310Z 
2025-01-14T13:16:42.6382600Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6383190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6383430Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6383770Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6384020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6384020Z 
2025-01-14T13:16:42.6384600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6385020Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6385500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6386340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6386840Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6387160Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6387180Z 
2025-01-14T13:16:42.6387380Z     def initialize_transport_state(
2025-01-14T13:16:42.6387520Z         self,
2025-01-14T13:16:42.6387690Z         simulation_state,
2025-01-14T13:16:42.6387850Z         opacity_state,
2025-01-14T13:16:42.6388170Z         macro_atom_state,
2025-01-14T13:16:42.6388530Z         plasma,
2025-01-14T13:16:42.6388690Z         no_of_packets,
2025-01-14T13:16:42.6388870Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6389020Z         iteration=0,
2025-01-14T13:16:42.6389170Z     ):
2025-01-14T13:16:42.6389430Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6389650Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6390360Z         else:
2025-01-14T13:16:42.6390570Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6390710Z     
2025-01-14T13:16:42.6391030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6391750Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6391900Z         )
2025-01-14T13:16:42.6392050Z     
2025-01-14T13:16:42.6392360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6392600Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6392930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6393080Z         else:
2025-01-14T13:16:42.6393280Z             continuum_state = None
2025-01-14T13:16:42.6393510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6393740Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6393940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6394190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6394410Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6394630Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6394860Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6395040Z         ).to_numba(
2025-01-14T13:16:42.6395230Z             macro_atom_state,
2025-01-14T13:16:42.6395410Z             self.line_interaction_type,
2025-01-14T13:16:42.6395560Z         )
2025-01-14T13:16:42.6395770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6396370Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6396520Z         ]
2025-01-14T13:16:42.6397180Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6397190Z 
2025-01-14T13:16:42.6397520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6397920Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-True] ________
2025-01-14T13:16:42.6397930Z 
2025-01-14T13:16:42.6400130Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6401010Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6401020Z 
2025-01-14T13:16:42.6401210Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6417580Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6418340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6418770Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6418930Z >       sim.iterate(10)
2025-01-14T13:16:42.6418940Z 
2025-01-14T13:16:42.6419680Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6419950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6420070Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6420210Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6420300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6420300Z 
2025-01-14T13:16:42.6420520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6420680Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6420860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6421080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6421210Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6421320Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6421320Z 
2025-01-14T13:16:42.6421390Z     def initialize_transport_state(
2025-01-14T13:16:42.6422210Z         self,
2025-01-14T13:16:42.6422280Z         simulation_state,
2025-01-14T13:16:42.6422340Z         opacity_state,
2025-01-14T13:16:42.6422390Z         macro_atom_state,
2025-01-14T13:16:42.6422440Z         plasma,
2025-01-14T13:16:42.6422490Z         no_of_packets,
2025-01-14T13:16:42.6422550Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6422600Z         iteration=0,
2025-01-14T13:16:42.6422640Z     ):
2025-01-14T13:16:42.6422750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6422820Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6422860Z         else:
2025-01-14T13:16:42.6422920Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6422960Z     
2025-01-14T13:16:42.6423070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6423140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6423190Z         )
2025-01-14T13:16:42.6423240Z     
2025-01-14T13:16:42.6423340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6423430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6423560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6423610Z         else:
2025-01-14T13:16:42.6423670Z             continuum_state = None
2025-01-14T13:16:42.6423740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6423820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6423900Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6423980Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6424050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6424120Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6424190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6424240Z         ).to_numba(
2025-01-14T13:16:42.6424290Z             macro_atom_state,
2025-01-14T13:16:42.6424360Z             self.line_interaction_type,
2025-01-14T13:16:42.6424570Z         )
2025-01-14T13:16:42.6424810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6425040Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6425090Z         ]
2025-01-14T13:16:42.6425350Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6425350Z 
2025-01-14T13:16:42.6425470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6425620Z ______ ERROR at setup of test_opacity_state_initialize[downbranch-False] _______
2025-01-14T13:16:42.6425620Z 
2025-01-14T13:16:42.6426150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6426450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6426450Z 
2025-01-14T13:16:42.6426520Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6426660Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6426730Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6426880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6426930Z >       sim.iterate(10)
2025-01-14T13:16:42.6426930Z 
2025-01-14T13:16:42.6427030Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6427120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6427190Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6427320Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6427480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6427490Z 
2025-01-14T13:16:42.6427700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6427850Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6428030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6428240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6428370Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6428470Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6428470Z 
2025-01-14T13:16:42.6428620Z     def initialize_transport_state(
2025-01-14T13:16:42.6428670Z         self,
2025-01-14T13:16:42.6428730Z         simulation_state,
2025-01-14T13:16:42.6428780Z         opacity_state,
2025-01-14T13:16:42.6428830Z         macro_atom_state,
2025-01-14T13:16:42.6428880Z         plasma,
2025-01-14T13:16:42.6428930Z         no_of_packets,
2025-01-14T13:16:42.6428990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6429040Z         iteration=0,
2025-01-14T13:16:42.6429080Z     ):
2025-01-14T13:16:42.6429180Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6429250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6429290Z         else:
2025-01-14T13:16:42.6429350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6429390Z     
2025-01-14T13:16:42.6429500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6429570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6429620Z         )
2025-01-14T13:16:42.6429660Z     
2025-01-14T13:16:42.6429760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6429840Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6430030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6430090Z         else:
2025-01-14T13:16:42.6430150Z             continuum_state = None
2025-01-14T13:16:42.6430230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6430310Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6430380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6430460Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6430540Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6430610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6430670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6430720Z         ).to_numba(
2025-01-14T13:16:42.6430770Z             macro_atom_state,
2025-01-14T13:16:42.6430830Z             self.line_interaction_type,
2025-01-14T13:16:42.6430870Z         )
2025-01-14T13:16:42.6430950Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6431180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6431220Z         ]
2025-01-14T13:16:42.6431470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6431470Z 
2025-01-14T13:16:42.6431590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6431740Z _______ ERROR at setup of test_opacity_state_initialize[downbranch-True] _______
2025-01-14T13:16:42.6431740Z 
2025-01-14T13:16:42.6432260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6432550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6432600Z 
2025-01-14T13:16:42.6432670Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6432810Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6432880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6433030Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6433080Z >       sim.iterate(10)
2025-01-14T13:16:42.6433080Z 
2025-01-14T13:16:42.6433190Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6433270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6433350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6433620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6433710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6433710Z 
2025-01-14T13:16:42.6433930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6434090Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6434280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6434500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6434640Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6434740Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6434740Z 
2025-01-14T13:16:42.6434810Z     def initialize_transport_state(
2025-01-14T13:16:42.6434860Z         self,
2025-01-14T13:16:42.6434910Z         simulation_state,
2025-01-14T13:16:42.6434970Z         opacity_state,
2025-01-14T13:16:42.6435020Z         macro_atom_state,
2025-01-14T13:16:42.6435060Z         plasma,
2025-01-14T13:16:42.6435110Z         no_of_packets,
2025-01-14T13:16:42.6435180Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6435310Z         iteration=0,
2025-01-14T13:16:42.6435360Z     ):
2025-01-14T13:16:42.6435460Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6435530Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6435580Z         else:
2025-01-14T13:16:42.6435630Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6435670Z     
2025-01-14T13:16:42.6435780Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6435850Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6435900Z         )
2025-01-14T13:16:42.6435940Z     
2025-01-14T13:16:42.6436040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6436130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6436250Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6436290Z         else:
2025-01-14T13:16:42.6436350Z             continuum_state = None
2025-01-14T13:16:42.6436430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6436520Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6436590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6436670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6436740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6436800Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6436870Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6436920Z         ).to_numba(
2025-01-14T13:16:42.6436970Z             macro_atom_state,
2025-01-14T13:16:42.6437030Z             self.line_interaction_type,
2025-01-14T13:16:42.6437070Z         )
2025-01-14T13:16:42.6437150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6437370Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6437470Z         ]
2025-01-14T13:16:42.6437720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6437720Z 
2025-01-14T13:16:42.6437830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6437970Z _____________ ERROR at setup of test_VPacketCollection_add_packet ______________
2025-01-14T13:16:42.6437970Z 
2025-01-14T13:16:42.6438480Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6438850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6438870Z 
2025-01-14T13:16:42.6438940Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6439070Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6439150Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6439290Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6439340Z >       sim.iterate(10)
2025-01-14T13:16:42.6439340Z 
2025-01-14T13:16:42.6439450Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6439530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6439610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6439730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6439810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6439820Z 
2025-01-14T13:16:42.6440030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6440190Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6440730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6441000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6441130Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6441230Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6441240Z 
2025-01-14T13:16:42.6441310Z     def initialize_transport_state(
2025-01-14T13:16:42.6441350Z         self,
2025-01-14T13:16:42.6441400Z         simulation_state,
2025-01-14T13:16:42.6441460Z         opacity_state,
2025-01-14T13:16:42.6441510Z         macro_atom_state,
2025-01-14T13:16:42.6441560Z         plasma,
2025-01-14T13:16:42.6441610Z         no_of_packets,
2025-01-14T13:16:42.6441690Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6441740Z         iteration=0,
2025-01-14T13:16:42.6441780Z     ):
2025-01-14T13:16:42.6441880Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6441960Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6442010Z         else:
2025-01-14T13:16:42.6442070Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6442110Z     
2025-01-14T13:16:42.6442220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6442290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6442330Z         )
2025-01-14T13:16:42.6442370Z     
2025-01-14T13:16:42.6442470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6442560Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6442690Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6442730Z         else:
2025-01-14T13:16:42.6442790Z             continuum_state = None
2025-01-14T13:16:42.6442870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6443520Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6443600Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6443680Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6443760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6443830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6443900Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6443950Z         ).to_numba(
2025-01-14T13:16:42.6444000Z             macro_atom_state,
2025-01-14T13:16:42.6444070Z             self.line_interaction_type,
2025-01-14T13:16:42.6444110Z         )
2025-01-14T13:16:42.6444190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6444410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6444470Z         ]
2025-01-14T13:16:42.6444720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6444720Z 
2025-01-14T13:16:42.6444850Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6445000Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-11-132] _
2025-01-14T13:16:42.6445010Z 
2025-01-14T13:16:42.6445550Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6445840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6445850Z 
2025-01-14T13:16:42.6445920Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6446050Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6446120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6446380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6446430Z >       sim.iterate(10)
2025-01-14T13:16:42.6446440Z 
2025-01-14T13:16:42.6446530Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6446630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6446700Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6446820Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6446910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6446910Z 
2025-01-14T13:16:42.6447130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6447280Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6447460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6447690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6447810Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6447920Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6447920Z 
2025-01-14T13:16:42.6447980Z     def initialize_transport_state(
2025-01-14T13:16:42.6448030Z         self,
2025-01-14T13:16:42.6448080Z         simulation_state,
2025-01-14T13:16:42.6448130Z         opacity_state,
2025-01-14T13:16:42.6448180Z         macro_atom_state,
2025-01-14T13:16:42.6448240Z         plasma,
2025-01-14T13:16:42.6448280Z         no_of_packets,
2025-01-14T13:16:42.6448340Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6448390Z         iteration=0,
2025-01-14T13:16:42.6448430Z     ):
2025-01-14T13:16:42.6448530Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6448600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6448710Z         else:
2025-01-14T13:16:42.6448770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6448810Z     
2025-01-14T13:16:42.6448920Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6448990Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6449040Z         )
2025-01-14T13:16:42.6449080Z     
2025-01-14T13:16:42.6449190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6449300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6449420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6449470Z         else:
2025-01-14T13:16:42.6449530Z             continuum_state = None
2025-01-14T13:16:42.6449600Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6449680Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6449760Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6449840Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6449920Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6449990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6450060Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6450110Z         ).to_numba(
2025-01-14T13:16:42.6450160Z             macro_atom_state,
2025-01-14T13:16:42.6450220Z             self.line_interaction_type,
2025-01-14T13:16:42.6450270Z         )
2025-01-14T13:16:42.6450350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6450570Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6450640Z         ]
2025-01-14T13:16:42.6450890Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6450890Z 
2025-01-14T13:16:42.6451010Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6451270Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-1-133] __
2025-01-14T13:16:42.6451280Z 
2025-01-14T13:16:42.6451790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6452080Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6452080Z 
2025-01-14T13:16:42.6452150Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6452280Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6452550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6452700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6452760Z >       sim.iterate(10)
2025-01-14T13:16:42.6452760Z 
2025-01-14T13:16:42.6452860Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6452950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6453020Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6453160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6453250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6453250Z 
2025-01-14T13:16:42.6453470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6453620Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6453810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6454020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6454360Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6454460Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6454470Z 
2025-01-14T13:16:42.6454530Z     def initialize_transport_state(
2025-01-14T13:16:42.6454580Z         self,
2025-01-14T13:16:42.6454630Z         simulation_state,
2025-01-14T13:16:42.6454680Z         opacity_state,
2025-01-14T13:16:42.6454730Z         macro_atom_state,
2025-01-14T13:16:42.6454780Z         plasma,
2025-01-14T13:16:42.6454820Z         no_of_packets,
2025-01-14T13:16:42.6454880Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6454930Z         iteration=0,
2025-01-14T13:16:42.6454970Z     ):
2025-01-14T13:16:42.6455060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6455140Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6455180Z         else:
2025-01-14T13:16:42.6455240Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6455280Z     
2025-01-14T13:16:42.6455390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6455470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6455510Z         )
2025-01-14T13:16:42.6455560Z     
2025-01-14T13:16:42.6455660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6455740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6455870Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6455910Z         else:
2025-01-14T13:16:42.6455970Z             continuum_state = None
2025-01-14T13:16:42.6456040Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6456130Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6456190Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6456270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6456350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6456430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6456560Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6456620Z         ).to_numba(
2025-01-14T13:16:42.6456670Z             macro_atom_state,
2025-01-14T13:16:42.6456730Z             self.line_interaction_type,
2025-01-14T13:16:42.6456770Z         )
2025-01-14T13:16:42.6456850Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6458640Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6458760Z         ]
2025-01-14T13:16:42.6459040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6459040Z 
2025-01-14T13:16:42.6459170Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6459330Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-2-133] __
2025-01-14T13:16:42.6459340Z 
2025-01-14T13:16:42.6459890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6460190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6460200Z 
2025-01-14T13:16:42.6460270Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6460400Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6460860Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6461090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6461190Z >       sim.iterate(10)
2025-01-14T13:16:42.6461200Z 
2025-01-14T13:16:42.6461310Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6461670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6462230Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6462410Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6462540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6462550Z 
2025-01-14T13:16:42.6462810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6463040Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6464390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6465430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6466610Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6467020Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6467090Z 
2025-01-14T13:16:42.6467390Z     def initialize_transport_state(
2025-01-14T13:16:42.6467640Z         self,
2025-01-14T13:16:42.6467910Z         simulation_state,
2025-01-14T13:16:42.6468540Z         opacity_state,
2025-01-14T13:16:42.6468790Z         macro_atom_state,
2025-01-14T13:16:42.6469020Z         plasma,
2025-01-14T13:16:42.6469250Z         no_of_packets,
2025-01-14T13:16:42.6469440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6469590Z         iteration=0,
2025-01-14T13:16:42.6469830Z     ):
2025-01-14T13:16:42.6470220Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6470500Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6470680Z         else:
2025-01-14T13:16:42.6471160Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6471340Z     
2025-01-14T13:16:42.6471760Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6471910Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6472000Z         )
2025-01-14T13:16:42.6472090Z     
2025-01-14T13:16:42.6473070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6473240Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6473410Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6473750Z         else:
2025-01-14T13:16:42.6474070Z             continuum_state = None
2025-01-14T13:16:42.6474560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6474710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6474800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6474910Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6475020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6475140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6475230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6475320Z         ).to_numba(
2025-01-14T13:16:42.6475410Z             macro_atom_state,
2025-01-14T13:16:42.6475530Z             self.line_interaction_type,
2025-01-14T13:16:42.6475600Z         )
2025-01-14T13:16:42.6475910Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6476190Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6476240Z         ]
2025-01-14T13:16:42.6476550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6476550Z 
2025-01-14T13:16:42.6476940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6477180Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-132] _
2025-01-14T13:16:42.6477190Z 
2025-01-14T13:16:42.6477790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6480320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6480330Z 
2025-01-14T13:16:42.6480620Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6480780Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6480870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6481050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6481130Z >       sim.iterate(10)
2025-01-14T13:16:42.6481130Z 
2025-01-14T13:16:42.6481240Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6481350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6482350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6483470Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6483630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6483640Z 
2025-01-14T13:16:42.6483900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6484110Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6484320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6485860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6486040Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6486180Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6486180Z 
2025-01-14T13:16:42.6486250Z     def initialize_transport_state(
2025-01-14T13:16:42.6486320Z         self,
2025-01-14T13:16:42.6486380Z         simulation_state,
2025-01-14T13:16:42.6486440Z         opacity_state,
2025-01-14T13:16:42.6486830Z         macro_atom_state,
2025-01-14T13:16:42.6486920Z         plasma,
2025-01-14T13:16:42.6486990Z         no_of_packets,
2025-01-14T13:16:42.6487060Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6487130Z         iteration=0,
2025-01-14T13:16:42.6487190Z     ):
2025-01-14T13:16:42.6487320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6487400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6487450Z         else:
2025-01-14T13:16:42.6487530Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6487580Z     
2025-01-14T13:16:42.6487710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6487810Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6487870Z         )
2025-01-14T13:16:42.6487910Z     
2025-01-14T13:16:42.6488230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6488400Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6488580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6488670Z         else:
2025-01-14T13:16:42.6488750Z             continuum_state = None
2025-01-14T13:16:42.6488840Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6489050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6489150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6489260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6489370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6489480Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6489580Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6489640Z         ).to_numba(
2025-01-14T13:16:42.6489710Z             macro_atom_state,
2025-01-14T13:16:42.6489810Z             self.line_interaction_type,
2025-01-14T13:16:42.6490040Z         )
2025-01-14T13:16:42.6490130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6491090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6491350Z         ]
2025-01-14T13:16:42.6492160Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6492180Z 
2025-01-14T13:16:42.6492620Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6493180Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-133] _
2025-01-14T13:16:42.6493220Z 
2025-01-14T13:16:42.6495200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6496310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6496340Z 
2025-01-14T13:16:42.6496650Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6497140Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6497400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6498650Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6499070Z >       sim.iterate(10)
2025-01-14T13:16:42.6499100Z 
2025-01-14T13:16:42.6500180Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6500330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6500400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6500560Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6500660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6500670Z 
2025-01-14T13:16:42.6501350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6501560Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6501790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6502050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6502220Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6502340Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6502340Z 
2025-01-14T13:16:42.6502400Z     def initialize_transport_state(
2025-01-14T13:16:42.6502480Z         self,
2025-01-14T13:16:42.6502570Z         simulation_state,
2025-01-14T13:16:42.6502630Z         opacity_state,
2025-01-14T13:16:42.6502680Z         macro_atom_state,
2025-01-14T13:16:42.6502980Z         plasma,
2025-01-14T13:16:42.6503370Z         no_of_packets,
2025-01-14T13:16:42.6503940Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6504050Z         iteration=0,
2025-01-14T13:16:42.6519990Z     ):
2025-01-14T13:16:42.6520600Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6520730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6520790Z         else:
2025-01-14T13:16:42.6520870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6520950Z     
2025-01-14T13:16:42.6521110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6521220Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6521300Z         )
2025-01-14T13:16:42.6521370Z     
2025-01-14T13:16:42.6521510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6521610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6521760Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6522240Z         else:
2025-01-14T13:16:42.6522340Z             continuum_state = None
2025-01-14T13:16:42.6522430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6523140Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6523800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6524300Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6524580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6524980Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6525100Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6525190Z         ).to_numba(
2025-01-14T13:16:42.6525270Z             macro_atom_state,
2025-01-14T13:16:42.6525390Z             self.line_interaction_type,
2025-01-14T13:16:42.6525440Z         )
2025-01-14T13:16:42.6525540Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6525800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6525870Z         ]
2025-01-14T13:16:42.6526150Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6526170Z 
2025-01-14T13:16:42.6526280Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6526500Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] _
2025-01-14T13:16:42.6526510Z 
2025-01-14T13:16:42.6527500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6527860Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6527870Z 
2025-01-14T13:16:42.6527950Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6528310Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6528410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6528580Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6528660Z >       sim.iterate(10)
2025-01-14T13:16:42.6528670Z 
2025-01-14T13:16:42.6528770Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6529440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6529540Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6529700Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6529810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6529810Z 
2025-01-14T13:16:42.6530060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6531220Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6531410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6531690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6531840Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6531980Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6531990Z 
2025-01-14T13:16:42.6532050Z     def initialize_transport_state(
2025-01-14T13:16:42.6532100Z         self,
2025-01-14T13:16:42.6532480Z         simulation_state,
2025-01-14T13:16:42.6532560Z         opacity_state,
2025-01-14T13:16:42.6532610Z         macro_atom_state,
2025-01-14T13:16:42.6532670Z         plasma,
2025-01-14T13:16:42.6532750Z         no_of_packets,
2025-01-14T13:16:42.6532830Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6533050Z         iteration=0,
2025-01-14T13:16:42.6533100Z     ):
2025-01-14T13:16:42.6533230Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6533320Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6533370Z         else:
2025-01-14T13:16:42.6533420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6533470Z     
2025-01-14T13:16:42.6533610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6533700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6533750Z         )
2025-01-14T13:16:42.6533800Z     
2025-01-14T13:16:42.6533900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6534020Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6534180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6534240Z         else:
2025-01-14T13:16:42.6534290Z             continuum_state = None
2025-01-14T13:16:42.6534380Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6534480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6534550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6534660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6534760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6534850Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6534920Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6535350Z         ).to_numba(
2025-01-14T13:16:42.6536140Z             macro_atom_state,
2025-01-14T13:16:42.6537420Z             self.line_interaction_type,
2025-01-14T13:16:42.6537510Z         )
2025-01-14T13:16:42.6537630Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6537920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6537990Z         ]
2025-01-14T13:16:42.6540650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6540720Z 
2025-01-14T13:16:42.6541180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6541610Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132--1-199] _
2025-01-14T13:16:42.6541620Z 
2025-01-14T13:16:42.6542570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6542940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6542950Z 
2025-01-14T13:16:42.6543030Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6543160Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6543280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6543450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6543510Z >       sim.iterate(10)
2025-01-14T13:16:42.6543510Z 
2025-01-14T13:16:42.6543820Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6543930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6544020Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6544170Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6544270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6544270Z 
2025-01-14T13:16:42.6544520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6544740Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6546200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6546500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6546670Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6546820Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6546820Z 
2025-01-14T13:16:42.6546900Z     def initialize_transport_state(
2025-01-14T13:16:42.6546990Z         self,
2025-01-14T13:16:42.6547080Z         simulation_state,
2025-01-14T13:16:42.6547150Z         opacity_state,
2025-01-14T13:16:42.6547240Z         macro_atom_state,
2025-01-14T13:16:42.6547300Z         plasma,
2025-01-14T13:16:42.6547380Z         no_of_packets,
2025-01-14T13:16:42.6547450Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6547500Z         iteration=0,
2025-01-14T13:16:42.6547540Z     ):
2025-01-14T13:16:42.6548100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6548240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6548310Z         else:
2025-01-14T13:16:42.6548370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6548410Z     
2025-01-14T13:16:42.6548550Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6548640Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6548720Z         )
2025-01-14T13:16:42.6548800Z     
2025-01-14T13:16:42.6548940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6549080Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6549240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6549310Z         else:
2025-01-14T13:16:42.6549380Z             continuum_state = None
2025-01-14T13:16:42.6549470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6549570Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6549640Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6549910Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6550020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6550120Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6550220Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6550300Z         ).to_numba(
2025-01-14T13:16:42.6550380Z             macro_atom_state,
2025-01-14T13:16:42.6550470Z             self.line_interaction_type,
2025-01-14T13:16:42.6550510Z         )
2025-01-14T13:16:42.6550590Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6550880Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6550940Z         ]
2025-01-14T13:16:42.6552310Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6552320Z 
2025-01-14T13:16:42.6552500Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6552700Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-0-132] _
2025-01-14T13:16:42.6552700Z 
2025-01-14T13:16:42.6553280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6553630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6553630Z 
2025-01-14T13:16:42.6554380Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6554540Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6554620Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6556480Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6558040Z >       sim.iterate(10)
2025-01-14T13:16:42.6558060Z 
2025-01-14T13:16:42.6558750Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6558910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6559330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6559920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6560020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6560030Z 
2025-01-14T13:16:42.6560240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6560660Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6561710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6561970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6562130Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6562240Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6562240Z 
2025-01-14T13:16:42.6562320Z     def initialize_transport_state(
2025-01-14T13:16:42.6562610Z         self,
2025-01-14T13:16:42.6562690Z         simulation_state,
2025-01-14T13:16:42.6562740Z         opacity_state,
2025-01-14T13:16:42.6562790Z         macro_atom_state,
2025-01-14T13:16:42.6562840Z         plasma,
2025-01-14T13:16:42.6562910Z         no_of_packets,
2025-01-14T13:16:42.6562980Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6563720Z         iteration=0,
2025-01-14T13:16:42.6563970Z     ):
2025-01-14T13:16:42.6564320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6564560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6564710Z         else:
2025-01-14T13:16:42.6564930Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6565080Z     
2025-01-14T13:16:42.6566050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6566200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6566250Z         )
2025-01-14T13:16:42.6566290Z     
2025-01-14T13:16:42.6566410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6566510Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6566650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6566720Z         else:
2025-01-14T13:16:42.6566790Z             continuum_state = None
2025-01-14T13:16:42.6566860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6566970Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6567050Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6567140Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6568830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6570450Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6572230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6572330Z         ).to_numba(
2025-01-14T13:16:42.6572390Z             macro_atom_state,
2025-01-14T13:16:42.6572460Z             self.line_interaction_type,
2025-01-14T13:16:42.6572510Z         )
2025-01-14T13:16:42.6572600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6572830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6572880Z         ]
2025-01-14T13:16:42.6573800Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6573840Z 
2025-01-14T13:16:42.6574270Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6574780Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-20-154] _
2025-01-14T13:16:42.6575850Z 
2025-01-14T13:16:42.6577460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-14T13:16:42.6578010Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6578010Z 
2025-01-14T13:16:42.6578120Z     @pytest.fixture(scope="package")
2025-01-14T13:16:42.6578300Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6578420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6578610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.6578690Z >       sim.iterate(10)
2025-01-14T13:16:42.6578700Z 
2025-01-14T13:16:42.6578830Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-14T13:16:42.6578990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6579070Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6579440Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6579560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6579580Z 
2025-01-14T13:16:42.6579850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6580240Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6580490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6581030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6581730Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6582130Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6582690Z 
2025-01-14T13:16:42.6582990Z     def initialize_transport_state(
2025-01-14T13:16:42.6583200Z         self,
2025-01-14T13:16:42.6583430Z         simulation_state,
2025-01-14T13:16:42.6583650Z         opacity_state,
2025-01-14T13:16:42.6583930Z         macro_atom_state,
2025-01-14T13:16:42.6584150Z         plasma,
2025-01-14T13:16:42.6584330Z         no_of_packets,
2025-01-14T13:16:42.6584500Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6584690Z         iteration=0,
2025-01-14T13:16:42.6584840Z     ):
2025-01-14T13:16:42.6585170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6585420Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6585590Z         else:
2025-01-14T13:16:42.6585770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6585910Z     
2025-01-14T13:16:42.6586260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6586610Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6586810Z         )
2025-01-14T13:16:42.6586970Z     
2025-01-14T13:16:42.6587290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6587620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6588040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6588260Z         else:
2025-01-14T13:16:42.6588490Z             continuum_state = None
2025-01-14T13:16:42.6588760Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6589500Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6590220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6590630Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6591190Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6591320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6591630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6591730Z         ).to_numba(
2025-01-14T13:16:42.6591820Z             macro_atom_state,
2025-01-14T13:16:42.6591910Z             self.line_interaction_type,
2025-01-14T13:16:42.6591980Z         )
2025-01-14T13:16:42.6592100Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6592380Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6592450Z         ]
2025-01-14T13:16:42.6592750Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6592760Z 
2025-01-14T13:16:42.6592880Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6593040Z _________________ ERROR at setup of test_boundary_interactions _________________
2025-01-14T13:16:42.6593050Z 
2025-01-14T13:16:42.6593220Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.6595930Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.6595940Z 
2025-01-14T13:16:42.6596050Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.6596140Z         "expected,obtained",
2025-01-14T13:16:42.6596190Z         [
2025-01-14T13:16:42.6596230Z             (
2025-01-14T13:16:42.6596340Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.6596460Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.6596510Z             ),
2025-01-14T13:16:42.6597550Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.6598090Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.6598250Z         ],
2025-01-14T13:16:42.6598430Z     )
2025-01-14T13:16:42.6598850Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.6599190Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6599210Z 
2025-01-14T13:16:42.6601120Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.6601300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6601610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6601730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6602030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6602110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6602350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6602460Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6602980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6603120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6603400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.6603470Z     raise exc
2025-01-14T13:16:42.6603700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.6603780Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.6604000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.6604180Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.6604420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6604650Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6604900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6605760Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6606080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.6606180Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.6606520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.6606600Z     yield
2025-01-14T13:16:42.6606950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.6607040Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.6608260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.6608320Z     yield
2025-01-14T13:16:42.6608580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.6608670Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.6609540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.6609760Z     yield
2025-01-14T13:16:42.6610500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.6610680Z     return (yield)
2025-01-14T13:16:42.6611750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.6611990Z     return (yield)
2025-01-14T13:16:42.6613110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.6613220Z     raise e
2025-01-14T13:16:42.6613490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.6613590Z     item.runtest()
2025-01-14T13:16:42.6614070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.6614210Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.6614460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6614670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6614930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6615100Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6615400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.6615500Z     result = testfunction(**testargs)
2025-01-14T13:16:42.6615790Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.6615910Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6616170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6616290Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6616570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6616690Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6616910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6618080Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6618920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6619230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6619500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.6619750Z     raise exc
2025-01-14T13:16:42.6620280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.6620590Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.6621080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.6621280Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.6621530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6621720Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6621960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6622100Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6622920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.6623260Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.6624190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.6624350Z     yield
2025-01-14T13:16:42.6625870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.6626240Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.6627520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.6627810Z     yield
2025-01-14T13:16:42.6628620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.6628910Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.6630070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.6630160Z     yield
2025-01-14T13:16:42.6630470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.6630550Z     return (yield)
2025-01-14T13:16:42.6630990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.6631420Z     return (yield)
2025-01-14T13:16:42.6631700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.6631770Z     raise e
2025-01-14T13:16:42.6632060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.6632130Z     item.runtest()
2025-01-14T13:16:42.6632370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.6632480Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.6633960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6634140Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6634340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6634490Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6634710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.6634780Z     result = testfunction(**testargs)
2025-01-14T13:16:42.6635000Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.6635100Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6635310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6635560Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6635800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6635880Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6636080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6636180Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6636420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6636490Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6636690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:42.6636820Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:42.6637020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6637180Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6637370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6637500Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6637880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:42.6637940Z     return (yield)
2025-01-14T13:16:42.6638180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:42.6638290Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:42.6638510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:42.6638590Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:42.6638770Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.6639080Z     sim = run_tardis(
2025-01-14T13:16:42.6639610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6640020Z     simulation.run_convergence()
2025-01-14T13:16:42.6640390Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6640700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6640910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6641780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6642180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6642190Z 
2025-01-14T13:16:42.6642450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.6642620Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.6642800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.6643030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.6643160Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.6643280Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6643290Z 
2025-01-14T13:16:42.6643360Z     def initialize_transport_state(
2025-01-14T13:16:42.6643400Z         self,
2025-01-14T13:16:42.6643460Z         simulation_state,
2025-01-14T13:16:42.6643510Z         opacity_state,
2025-01-14T13:16:42.6643560Z         macro_atom_state,
2025-01-14T13:16:42.6643600Z         plasma,
2025-01-14T13:16:42.6643650Z         no_of_packets,
2025-01-14T13:16:42.6644300Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6644480Z         iteration=0,
2025-01-14T13:16:42.6644620Z     ):
2025-01-14T13:16:42.6644910Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6646110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6646270Z         else:
2025-01-14T13:16:42.6646440Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6646580Z     
2025-01-14T13:16:42.6646910Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6647350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6647740Z         )
2025-01-14T13:16:42.6647900Z     
2025-01-14T13:16:42.6649900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6650180Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6650530Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6650670Z         else:
2025-01-14T13:16:42.6650850Z             continuum_state = None
2025-01-14T13:16:42.6651060Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6651300Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6651510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6651740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6651950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6652150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6652350Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6652500Z         ).to_numba(
2025-01-14T13:16:42.6652740Z             macro_atom_state,
2025-01-14T13:16:42.6652920Z             self.line_interaction_type,
2025-01-14T13:16:42.6653360Z         )
2025-01-14T13:16:42.6654000Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6654260Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6654320Z         ]
2025-01-14T13:16:42.6654570Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6654590Z 
2025-01-14T13:16:42.6656170Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6656360Z _____________ ERROR at setup of test_rpacket_trackers_to_dataframe _____________
2025-01-14T13:16:42.6656370Z 
2025-01-14T13:16:42.6656510Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.6656780Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.6656780Z 
2025-01-14T13:16:42.6656850Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.6656910Z         "expected,obtained",
2025-01-14T13:16:42.6656960Z         [
2025-01-14T13:16:42.6657000Z             (
2025-01-14T13:16:42.6657080Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.6657160Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.6657220Z             ),
2025-01-14T13:16:42.6657340Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.6657450Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.6657490Z         ],
2025-01-14T13:16:42.6657540Z     )
2025-01-14T13:16:42.6657670Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.6657760Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6657760Z 
2025-01-14T13:16:42.6657900Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.6657990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6658210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6658300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6658550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6658620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6660900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6662340Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6662630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6662710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6662910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.6662970Z     raise exc
2025-01-14T13:16:42.6663160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.6663230Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.6663430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.6663570Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.6663790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6663950Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6664150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6664280Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6664540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.6664620Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.6664910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.6670190Z     yield
2025-01-14T13:16:42.6670640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.6670740Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.6671250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.6671310Z     yield
2025-01-14T13:16:42.6671540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.6671610Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.6671820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.6671860Z     yield
2025-01-14T13:16:42.6672090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.6672140Z     return (yield)
2025-01-14T13:16:42.6672370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.6672430Z     return (yield)
2025-01-14T13:16:42.6672680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.6672750Z     raise e
2025-01-14T13:16:42.6672980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.6673030Z     item.runtest()
2025-01-14T13:16:42.6673230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.6673330Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.6673520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6673680Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6673900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6674040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6674430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.6674500Z     result = testfunction(**testargs)
2025-01-14T13:16:42.6674730Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.6674820Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6675070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6675180Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6675410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6675500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6675690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6675810Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6676050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6676120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6676310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.6676360Z     raise exc
2025-01-14T13:16:42.6676550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.6676620Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.6676810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.6676940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.6677140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6677300Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6677580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6677720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6677980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.6678050Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.6678330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.6678390Z     yield
2025-01-14T13:16:42.6678650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.6678740Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.6679040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.6679100Z     yield
2025-01-14T13:16:42.6679330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.6679430Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.6679650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.6679690Z     yield
2025-01-14T13:16:42.6679920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.6679970Z     return (yield)
2025-01-14T13:16:42.6680200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.6680250Z     return (yield)
2025-01-14T13:16:42.6680470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.6680600Z     raise e
2025-01-14T13:16:42.6680830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.6680880Z     item.runtest()
2025-01-14T13:16:42.6681080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.6681170Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.6681350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6681670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6681900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6682040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6682260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.6682330Z     result = testfunction(**testargs)
2025-01-14T13:16:42.6682560Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.6682650Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6682860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.6682960Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.6683200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6683270Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6683480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.6683580Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.6683820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.6683890Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.6684240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:42.6684380Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:42.6684580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.6684860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.6685060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.6685200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.6685440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:42.6685500Z     return (yield)
2025-01-14T13:16:42.6685750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:42.6685860Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:42.6686080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:42.6686150Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:42.6686260Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.6686300Z     sim = run_tardis(
2025-01-14T13:16:42.6686370Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6686440Z     simulation.run_convergence()
2025-01-14T13:16:42.6686530Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6686640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6686710Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6686830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6686920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6687030Z 
2025-01-14T13:16:42.6687250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.6687420Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.6687600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.6687830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.6687950Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.6688060Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6688060Z 
2025-01-14T13:16:42.6688130Z     def initialize_transport_state(
2025-01-14T13:16:42.6688180Z         self,
2025-01-14T13:16:42.6688240Z         simulation_state,
2025-01-14T13:16:42.6688290Z         opacity_state,
2025-01-14T13:16:42.6688350Z         macro_atom_state,
2025-01-14T13:16:42.6688400Z         plasma,
2025-01-14T13:16:42.6688450Z         no_of_packets,
2025-01-14T13:16:42.6688510Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6688560Z         iteration=0,
2025-01-14T13:16:42.6688610Z     ):
2025-01-14T13:16:42.6688700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6688780Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6688830Z         else:
2025-01-14T13:16:42.6688890Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6688930Z     
2025-01-14T13:16:42.6689040Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6689100Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6689150Z         )
2025-01-14T13:16:42.6689200Z     
2025-01-14T13:16:42.6689440Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6689530Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6689660Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6689710Z         else:
2025-01-14T13:16:42.6690090Z             continuum_state = None
2025-01-14T13:16:42.6690200Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6690290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6690360Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6690440Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6690520Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6690580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6690650Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6690690Z         ).to_numba(
2025-01-14T13:16:42.6690760Z             macro_atom_state,
2025-01-14T13:16:42.6690810Z             self.line_interaction_type,
2025-01-14T13:16:42.6690870Z         )
2025-01-14T13:16:42.6690940Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6691330Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6691380Z         ]
2025-01-14T13:16:42.6691650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6691660Z 
2025-01-14T13:16:42.6691770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6691910Z ______________ ERROR at setup of test_trace_vpacket_within_shell _______________
2025-01-14T13:16:42.6691910Z 
2025-01-14T13:16:42.6692020Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:16:42.6692260Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:16:42.6692260Z 
2025-01-14T13:16:42.6692320Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.6692380Z         "expected,obtained",
2025-01-14T13:16:42.6692430Z         [
2025-01-14T13:16:42.6692470Z             (
2025-01-14T13:16:42.6692830Z                 "interaction_type_in_use",
2025-01-14T13:16:42.6692920Z                 "interaction_type_to_check",
2025-01-14T13:16:42.6693020Z             ),
2025-01-14T13:16:42.6693070Z             (
2025-01-14T13:16:42.6693120Z                 "shell_id_in_use",
2025-01-14T13:16:42.6693180Z                 "shell_id_to_check",
2025-01-14T13:16:42.6693220Z             ),
2025-01-14T13:16:42.6693270Z             (
2025-01-14T13:16:42.6693320Z                 "r_in_use",
2025-01-14T13:16:42.6693370Z                 "r_to_check",
2025-01-14T13:16:42.6693410Z             ),
2025-01-14T13:16:42.6693490Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.6693530Z         ],
2025-01-14T13:16:42.6693580Z     )
2025-01-14T13:16:42.6694590Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.6694930Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6694940Z 
2025-01-14T13:16:42.6695630Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.6695780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6696070Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6696150Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6696430Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6696520Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6696790Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6696870Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6697060Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:42.6697110Z     sim.iterate(10)
2025-01-14T13:16:42.6697190Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6697480Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6697570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6697580Z 
2025-01-14T13:16:42.6697800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6697970Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6698150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6698370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6698500Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6698620Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6698620Z 
2025-01-14T13:16:42.6698690Z     def initialize_transport_state(
2025-01-14T13:16:42.6698740Z         self,
2025-01-14T13:16:42.6698800Z         simulation_state,
2025-01-14T13:16:42.6698860Z         opacity_state,
2025-01-14T13:16:42.6698920Z         macro_atom_state,
2025-01-14T13:16:42.6698960Z         plasma,
2025-01-14T13:16:42.6699010Z         no_of_packets,
2025-01-14T13:16:42.6699070Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6699120Z         iteration=0,
2025-01-14T13:16:42.6699160Z     ):
2025-01-14T13:16:42.6699260Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6699340Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6699380Z         else:
2025-01-14T13:16:42.6699440Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6699490Z     
2025-01-14T13:16:42.6699600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6699670Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6699720Z         )
2025-01-14T13:16:42.6699770Z     
2025-01-14T13:16:42.6699950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6700040Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6700170Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6700230Z         else:
2025-01-14T13:16:42.6700290Z             continuum_state = None
2025-01-14T13:16:42.6700370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6700460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6700530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6700610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6700690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6700760Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6700860Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6700910Z         ).to_numba(
2025-01-14T13:16:42.6700970Z             macro_atom_state,
2025-01-14T13:16:42.6701030Z             self.line_interaction_type,
2025-01-14T13:16:42.6701080Z         )
2025-01-14T13:16:42.6701160Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6701390Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6701450Z         ]
2025-01-14T13:16:42.6701700Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6701700Z 
2025-01-14T13:16:42.6701830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6701950Z _____________________ ERROR at setup of test_trace_vpacket _____________________
2025-01-14T13:16:42.6701960Z 
2025-01-14T13:16:42.6702070Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:16:42.6702300Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:16:42.6702310Z 
2025-01-14T13:16:42.6702390Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.6702540Z         "expected,obtained",
2025-01-14T13:16:42.6702590Z         [
2025-01-14T13:16:42.6702640Z             (
2025-01-14T13:16:42.6702710Z                 "interaction_type_in_use",
2025-01-14T13:16:42.6702780Z                 "interaction_type_to_check",
2025-01-14T13:16:42.6702820Z             ),
2025-01-14T13:16:42.6702870Z             (
2025-01-14T13:16:42.6702920Z                 "shell_id_in_use",
2025-01-14T13:16:42.6702980Z                 "shell_id_to_check",
2025-01-14T13:16:42.6703020Z             ),
2025-01-14T13:16:42.6703070Z             (
2025-01-14T13:16:42.6703120Z                 "r_in_use",
2025-01-14T13:16:42.6703170Z                 "r_to_check",
2025-01-14T13:16:42.6703210Z             ),
2025-01-14T13:16:42.6703290Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.6703330Z         ],
2025-01-14T13:16:42.6703380Z     )
2025-01-14T13:16:42.6703510Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.6703610Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6703610Z 
2025-01-14T13:16:42.6703790Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.6703880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6704160Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6704240Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6704510Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6704600Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6704870Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6704960Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6705200Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:42.6705260Z     sim.iterate(10)
2025-01-14T13:16:42.6705330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6705450Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6705530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6705530Z 
2025-01-14T13:16:42.6705750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6705900Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6706090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6706310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6706430Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6706550Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6706550Z 
2025-01-14T13:16:42.6706610Z     def initialize_transport_state(
2025-01-14T13:16:42.6706660Z         self,
2025-01-14T13:16:42.6706710Z         simulation_state,
2025-01-14T13:16:42.6706770Z         opacity_state,
2025-01-14T13:16:42.6706820Z         macro_atom_state,
2025-01-14T13:16:42.6706880Z         plasma,
2025-01-14T13:16:42.6706930Z         no_of_packets,
2025-01-14T13:16:42.6706980Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6707030Z         iteration=0,
2025-01-14T13:16:42.6707070Z     ):
2025-01-14T13:16:42.6707170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6707240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6707290Z         else:
2025-01-14T13:16:42.6707340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6707380Z     
2025-01-14T13:16:42.6707480Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6707570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6707660Z         )
2025-01-14T13:16:42.6707710Z     
2025-01-14T13:16:42.6707820Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6707910Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6708030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6708080Z         else:
2025-01-14T13:16:42.6708140Z             continuum_state = None
2025-01-14T13:16:42.6708220Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6708300Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6708370Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6708450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6708530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6708590Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6708660Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6708720Z         ).to_numba(
2025-01-14T13:16:42.6708770Z             macro_atom_state,
2025-01-14T13:16:42.6708840Z             self.line_interaction_type,
2025-01-14T13:16:42.6708880Z         )
2025-01-14T13:16:42.6708960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6709170Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6709220Z         ]
2025-01-14T13:16:42.6709470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6709470Z 
2025-01-14T13:16:42.6709590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6709720Z ___________________ ERROR at setup of test_trace_bad_vpacket ___________________
2025-01-14T13:16:42.6709730Z 
2025-01-14T13:16:42.6709860Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:16:42.6710210Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:16:42.6710210Z 
2025-01-14T13:16:42.6710280Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.6710340Z         "expected,obtained",
2025-01-14T13:16:42.6710390Z         [
2025-01-14T13:16:42.6710430Z             (
2025-01-14T13:16:42.6710500Z                 "interaction_type_in_use",
2025-01-14T13:16:42.6710560Z                 "interaction_type_to_check",
2025-01-14T13:16:42.6710600Z             ),
2025-01-14T13:16:42.6710650Z             (
2025-01-14T13:16:42.6710700Z                 "shell_id_in_use",
2025-01-14T13:16:42.6710760Z                 "shell_id_to_check",
2025-01-14T13:16:42.6710810Z             ),
2025-01-14T13:16:42.6710850Z             (
2025-01-14T13:16:42.6710900Z                 "r_in_use",
2025-01-14T13:16:42.6710950Z                 "r_to_check",
2025-01-14T13:16:42.6711000Z             ),
2025-01-14T13:16:42.6711080Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.6711130Z         ],
2025-01-14T13:16:42.6711170Z     )
2025-01-14T13:16:42.6711310Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.6711400Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6711410Z 
2025-01-14T13:16:42.6711590Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.6713480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6714370Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6714730Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6715060Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6715150Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6716280Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.6716400Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.6716570Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:42.6716630Z     sim.iterate(10)
2025-01-14T13:16:42.6716690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6716820Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6716910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6716920Z 
2025-01-14T13:16:42.6717130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.6717310Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.6717490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.6717730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.6717860Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.6717970Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6717970Z 
2025-01-14T13:16:42.6718030Z     def initialize_transport_state(
2025-01-14T13:16:42.6718090Z         self,
2025-01-14T13:16:42.6718140Z         simulation_state,
2025-01-14T13:16:42.6718190Z         opacity_state,
2025-01-14T13:16:42.6718240Z         macro_atom_state,
2025-01-14T13:16:42.6718280Z         plasma,
2025-01-14T13:16:42.6718340Z         no_of_packets,
2025-01-14T13:16:42.6718390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6718480Z         iteration=0,
2025-01-14T13:16:42.6718520Z     ):
2025-01-14T13:16:42.6718620Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6718690Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6719020Z         else:
2025-01-14T13:16:42.6719080Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6719130Z     
2025-01-14T13:16:42.6719230Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6719310Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6719350Z         )
2025-01-14T13:16:42.6719400Z     
2025-01-14T13:16:42.6719500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6719590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6719710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6719760Z         else:
2025-01-14T13:16:42.6719820Z             continuum_state = None
2025-01-14T13:16:42.6719900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6719990Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6720060Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6720150Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6720220Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6720300Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6720380Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6720440Z         ).to_numba(
2025-01-14T13:16:42.6720490Z             macro_atom_state,
2025-01-14T13:16:42.6720550Z             self.line_interaction_type,
2025-01-14T13:16:42.6720600Z         )
2025-01-14T13:16:42.6720670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6720890Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6720940Z         ]
2025-01-14T13:16:42.6721180Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6721180Z 
2025-01-14T13:16:42.6721300Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6721460Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-14T13:16:42.6721560Z 
2025-01-14T13:16:42.6722120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6722410Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6722420Z 
2025-01-14T13:16:42.6722480Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6722590Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6722640Z         """
2025-01-14T13:16:42.6722720Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6722770Z     
2025-01-14T13:16:42.6722820Z         Parameters:
2025-01-14T13:16:42.6722880Z         -----------
2025-01-14T13:16:42.6722990Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6723110Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6723150Z     
2025-01-14T13:16:42.6723200Z         Returns:
2025-01-14T13:16:42.6723250Z         --------
2025-01-14T13:16:42.6723320Z         A TARDIS simulation object.
2025-01-14T13:16:42.6723360Z         """
2025-01-14T13:16:42.6723450Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6723540Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6723640Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6723790Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6723900Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6723970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6724020Z >       sim = run_tardis(
2025-01-14T13:16:42.6724140Z             config_verysimple,
2025-01-14T13:16:42.6724200Z             atom_data=atomic_data,
2025-01-14T13:16:42.6724260Z         )
2025-01-14T13:16:42.6724260Z 
2025-01-14T13:16:42.6724360Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6724450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6724510Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6724580Z     simulation.run_convergence()
2025-01-14T13:16:42.6724670Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6724780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6724850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6724980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6725060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6725070Z 
2025-01-14T13:16:42.6725280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6725450Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6725630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6725860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6725990Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6726090Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6726100Z 
2025-01-14T13:16:42.6726160Z     def initialize_transport_state(
2025-01-14T13:16:42.6726210Z         self,
2025-01-14T13:16:42.6726420Z         simulation_state,
2025-01-14T13:16:42.6726470Z         opacity_state,
2025-01-14T13:16:42.6726530Z         macro_atom_state,
2025-01-14T13:16:42.6726570Z         plasma,
2025-01-14T13:16:42.6726620Z         no_of_packets,
2025-01-14T13:16:42.6726680Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6726730Z         iteration=0,
2025-01-14T13:16:42.6726920Z     ):
2025-01-14T13:16:42.6727040Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6727120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6727170Z         else:
2025-01-14T13:16:42.6727230Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6727270Z     
2025-01-14T13:16:42.6727380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6727460Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6727520Z         )
2025-01-14T13:16:42.6727560Z     
2025-01-14T13:16:42.6727670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6727750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6727880Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6727930Z         else:
2025-01-14T13:16:42.6728000Z             continuum_state = None
2025-01-14T13:16:42.6728080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6728170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6728240Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6728320Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6728400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6728470Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6728530Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6728580Z         ).to_numba(
2025-01-14T13:16:42.6728630Z             macro_atom_state,
2025-01-14T13:16:42.6728690Z             self.line_interaction_type,
2025-01-14T13:16:42.6728740Z         )
2025-01-14T13:16:42.6728810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6729050Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6729210Z         ]
2025-01-14T13:16:42.6729610Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6729620Z 
2025-01-14T13:16:42.6729750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6729890Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.6730320Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.6730680Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.6730840Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6731010Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.6731140Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.6731200Z 	
2025-01-14T13:16:42.6731320Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:16:42.6731460Z ------------------------------ Captured log setup ------------------------------
2025-01-14T13:16:42.6731870Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.6732040Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.6732130Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.6732190Z 	Starting iteration 1 of 3
2025-01-14T13:16:42.6732340Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:16:42.6732340Z 
2025-01-14T13:16:42.6732910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6733330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6733340Z 
2025-01-14T13:16:42.6733410Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6733520Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6741880Z         """
2025-01-14T13:16:42.6742050Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6742100Z     
2025-01-14T13:16:42.6742140Z         Parameters:
2025-01-14T13:16:42.6742210Z         -----------
2025-01-14T13:16:42.6742320Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6742430Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6742480Z     
2025-01-14T13:16:42.6742520Z         Returns:
2025-01-14T13:16:42.6742570Z         --------
2025-01-14T13:16:42.6742640Z         A TARDIS simulation object.
2025-01-14T13:16:42.6742680Z         """
2025-01-14T13:16:42.6742780Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6742890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6742990Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6743140Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6743240Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6743310Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6743370Z >       sim = run_tardis(
2025-01-14T13:16:42.6743420Z             config_verysimple,
2025-01-14T13:16:42.6743480Z             atom_data=atomic_data,
2025-01-14T13:16:42.6743520Z         )
2025-01-14T13:16:42.6743520Z 
2025-01-14T13:16:42.6743630Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6743710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6743780Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6744080Z     simulation.run_convergence()
2025-01-14T13:16:42.6744170Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6744280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6744350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6744480Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6744570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6744570Z 
2025-01-14T13:16:42.6744790Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6744940Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6745120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6745340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6745470Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6745580Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6745580Z 
2025-01-14T13:16:42.6745650Z     def initialize_transport_state(
2025-01-14T13:16:42.6745700Z         self,
2025-01-14T13:16:42.6745750Z         simulation_state,
2025-01-14T13:16:42.6745800Z         opacity_state,
2025-01-14T13:16:42.6745850Z         macro_atom_state,
2025-01-14T13:16:42.6745900Z         plasma,
2025-01-14T13:16:42.6745950Z         no_of_packets,
2025-01-14T13:16:42.6746010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6746050Z         iteration=0,
2025-01-14T13:16:42.6746090Z     ):
2025-01-14T13:16:42.6746190Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6746270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6746320Z         else:
2025-01-14T13:16:42.6746380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6746420Z     
2025-01-14T13:16:42.6746530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6746940Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6747030Z         )
2025-01-14T13:16:42.6747080Z     
2025-01-14T13:16:42.6747190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6747280Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6747400Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6747450Z         else:
2025-01-14T13:16:42.6747510Z             continuum_state = None
2025-01-14T13:16:42.6747590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6747680Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6748980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6749080Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6749160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6749230Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6749310Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6749360Z         ).to_numba(
2025-01-14T13:16:42.6749410Z             macro_atom_state,
2025-01-14T13:16:42.6749480Z             self.line_interaction_type,
2025-01-14T13:16:42.6749520Z         )
2025-01-14T13:16:42.6749600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6749820Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6749870Z         ]
2025-01-14T13:16:42.6750130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6750130Z 
2025-01-14T13:16:42.6750260Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6750420Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-14T13:16:42.6750420Z 
2025-01-14T13:16:42.6751440Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6751740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6751740Z 
2025-01-14T13:16:42.6751810Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6751930Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6751970Z         """
2025-01-14T13:16:42.6752070Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6752110Z     
2025-01-14T13:16:42.6752170Z         Parameters:
2025-01-14T13:16:42.6752220Z         -----------
2025-01-14T13:16:42.6752330Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6752440Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6752500Z     
2025-01-14T13:16:42.6752550Z         Returns:
2025-01-14T13:16:42.6752600Z         --------
2025-01-14T13:16:42.6752670Z         A TARDIS simulation object.
2025-01-14T13:16:42.6752710Z         """
2025-01-14T13:16:42.6752800Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6752890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6753000Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6753140Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6753250Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6753320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6753380Z >       sim = run_tardis(
2025-01-14T13:16:42.6753430Z             config_verysimple,
2025-01-14T13:16:42.6753490Z             atom_data=atomic_data,
2025-01-14T13:16:42.6753540Z         )
2025-01-14T13:16:42.6753540Z 
2025-01-14T13:16:42.6753720Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6753820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6754000Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6754100Z     simulation.run_convergence()
2025-01-14T13:16:42.6754210Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6754330Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6754400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6754550Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6754640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6754650Z 
2025-01-14T13:16:42.6754870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6755040Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6755230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6755460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6755580Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6755700Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6755710Z 
2025-01-14T13:16:42.6755770Z     def initialize_transport_state(
2025-01-14T13:16:42.6755820Z         self,
2025-01-14T13:16:42.6755870Z         simulation_state,
2025-01-14T13:16:42.6755930Z         opacity_state,
2025-01-14T13:16:42.6755980Z         macro_atom_state,
2025-01-14T13:16:42.6756020Z         plasma,
2025-01-14T13:16:42.6756070Z         no_of_packets,
2025-01-14T13:16:42.6756130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6756180Z         iteration=0,
2025-01-14T13:16:42.6756230Z     ):
2025-01-14T13:16:42.6756470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6756560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6756620Z         else:
2025-01-14T13:16:42.6756670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6756720Z     
2025-01-14T13:16:42.6756830Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6756910Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6756960Z         )
2025-01-14T13:16:42.6757000Z     
2025-01-14T13:16:42.6757110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6757200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6757320Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6757380Z         else:
2025-01-14T13:16:42.6757430Z             continuum_state = None
2025-01-14T13:16:42.6757520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6757600Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6757670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6757760Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6757830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6757910Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6757980Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6758030Z         ).to_numba(
2025-01-14T13:16:42.6758080Z             macro_atom_state,
2025-01-14T13:16:42.6758150Z             self.line_interaction_type,
2025-01-14T13:16:42.6758190Z         )
2025-01-14T13:16:42.6758430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6758670Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6758710Z         ]
2025-01-14T13:16:42.6758960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6758970Z 
2025-01-14T13:16:42.6759160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6759380Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-14T13:16:42.6759390Z 
2025-01-14T13:16:42.6759940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6760220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6760220Z 
2025-01-14T13:16:42.6760290Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6760400Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6760450Z         """
2025-01-14T13:16:42.6760530Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6760580Z     
2025-01-14T13:16:42.6760630Z         Parameters:
2025-01-14T13:16:42.6760690Z         -----------
2025-01-14T13:16:42.6760800Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6760920Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6760960Z     
2025-01-14T13:16:42.6761000Z         Returns:
2025-01-14T13:16:42.6761050Z         --------
2025-01-14T13:16:42.6761110Z         A TARDIS simulation object.
2025-01-14T13:16:42.6761150Z         """
2025-01-14T13:16:42.6761240Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6761350Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6761470Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6761610Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6761740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6761910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6761960Z >       sim = run_tardis(
2025-01-14T13:16:42.6762030Z             config_verysimple,
2025-01-14T13:16:42.6762080Z             atom_data=atomic_data,
2025-01-14T13:16:42.6762130Z         )
2025-01-14T13:16:42.6762130Z 
2025-01-14T13:16:42.6762240Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6762330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6762390Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6762460Z     simulation.run_convergence()
2025-01-14T13:16:42.6762540Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6762650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6762720Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6762850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6762940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6762940Z 
2025-01-14T13:16:42.6763160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6763320Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6763500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6763720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6763840Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6763950Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6763950Z 
2025-01-14T13:16:42.6764020Z     def initialize_transport_state(
2025-01-14T13:16:42.6764070Z         self,
2025-01-14T13:16:42.6764120Z         simulation_state,
2025-01-14T13:16:42.6764170Z         opacity_state,
2025-01-14T13:16:42.6764220Z         macro_atom_state,
2025-01-14T13:16:42.6764270Z         plasma,
2025-01-14T13:16:42.6764380Z         no_of_packets,
2025-01-14T13:16:42.6764440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6764500Z         iteration=0,
2025-01-14T13:16:42.6764540Z     ):
2025-01-14T13:16:42.6764640Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6764710Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6764760Z         else:
2025-01-14T13:16:42.6764820Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6764870Z     
2025-01-14T13:16:42.6764970Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6765050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6765090Z         )
2025-01-14T13:16:42.6765130Z     
2025-01-14T13:16:42.6765230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6765320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6765450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6765500Z         else:
2025-01-14T13:16:42.6765560Z             continuum_state = None
2025-01-14T13:16:42.6765630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6765720Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6765790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6765870Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6765950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6766010Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6766080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6766120Z         ).to_numba(
2025-01-14T13:16:42.6766180Z             macro_atom_state,
2025-01-14T13:16:42.6766240Z             self.line_interaction_type,
2025-01-14T13:16:42.6766290Z         )
2025-01-14T13:16:42.6766360Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6766640Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6766680Z         ]
2025-01-14T13:16:42.6766930Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6766940Z 
2025-01-14T13:16:42.6767050Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6767270Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-14T13:16:42.6767270Z 
2025-01-14T13:16:42.6767840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6768130Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6768130Z 
2025-01-14T13:16:42.6768210Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6768310Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6768360Z         """
2025-01-14T13:16:42.6768450Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6768500Z     
2025-01-14T13:16:42.6768540Z         Parameters:
2025-01-14T13:16:42.6768590Z         -----------
2025-01-14T13:16:42.6768700Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6768810Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6768850Z     
2025-01-14T13:16:42.6768900Z         Returns:
2025-01-14T13:16:42.6768950Z         --------
2025-01-14T13:16:42.6769010Z         A TARDIS simulation object.
2025-01-14T13:16:42.6769050Z         """
2025-01-14T13:16:42.6769140Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6769240Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6770130Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6770360Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6770470Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6770550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6770600Z >       sim = run_tardis(
2025-01-14T13:16:42.6770660Z             config_verysimple,
2025-01-14T13:16:42.6770720Z             atom_data=atomic_data,
2025-01-14T13:16:42.6770770Z         )
2025-01-14T13:16:42.6770770Z 
2025-01-14T13:16:42.6770880Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6770980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6771050Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6771110Z     simulation.run_convergence()
2025-01-14T13:16:42.6771200Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6771330Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6771400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6771530Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6771640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6771640Z 
2025-01-14T13:16:42.6771850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6772020Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6772200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6772430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6772550Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6772910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6772910Z 
2025-01-14T13:16:42.6772980Z     def initialize_transport_state(
2025-01-14T13:16:42.6773020Z         self,
2025-01-14T13:16:42.6773080Z         simulation_state,
2025-01-14T13:16:42.6773150Z         opacity_state,
2025-01-14T13:16:42.6773210Z         macro_atom_state,
2025-01-14T13:16:42.6773250Z         plasma,
2025-01-14T13:16:42.6773300Z         no_of_packets,
2025-01-14T13:16:42.6773360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6773400Z         iteration=0,
2025-01-14T13:16:42.6773450Z     ):
2025-01-14T13:16:42.6773550Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6773620Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6773670Z         else:
2025-01-14T13:16:42.6773730Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6773770Z     
2025-01-14T13:16:42.6773880Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6773960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6774010Z         )
2025-01-14T13:16:42.6774050Z     
2025-01-14T13:16:42.6774160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6774250Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6774380Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6774420Z         else:
2025-01-14T13:16:42.6774480Z             continuum_state = None
2025-01-14T13:16:42.6774560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6774640Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6774710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6774790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6774870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6774940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6775010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6775060Z         ).to_numba(
2025-01-14T13:16:42.6775200Z             macro_atom_state,
2025-01-14T13:16:42.6775260Z             self.line_interaction_type,
2025-01-14T13:16:42.6775310Z         )
2025-01-14T13:16:42.6775380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6775610Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6775650Z         ]
2025-01-14T13:16:42.6776070Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6776080Z 
2025-01-14T13:16:42.6776200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6776420Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-14T13:16:42.6776420Z 
2025-01-14T13:16:42.6777010Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6777310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6777310Z 
2025-01-14T13:16:42.6777380Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6777490Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6777540Z         """
2025-01-14T13:16:42.6777630Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6777670Z     
2025-01-14T13:16:42.6777720Z         Parameters:
2025-01-14T13:16:42.6777770Z         -----------
2025-01-14T13:16:42.6777880Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6778000Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6778160Z     
2025-01-14T13:16:42.6778210Z         Returns:
2025-01-14T13:16:42.6778260Z         --------
2025-01-14T13:16:42.6778320Z         A TARDIS simulation object.
2025-01-14T13:16:42.6778370Z         """
2025-01-14T13:16:42.6778460Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6778560Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6778660Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6778800Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6778910Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6778980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6779040Z >       sim = run_tardis(
2025-01-14T13:16:42.6779090Z             config_verysimple,
2025-01-14T13:16:42.6779150Z             atom_data=atomic_data,
2025-01-14T13:16:42.6779190Z         )
2025-01-14T13:16:42.6779200Z 
2025-01-14T13:16:42.6779300Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6779400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6779460Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6779530Z     simulation.run_convergence()
2025-01-14T13:16:42.6779620Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6779850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6779930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6780060Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6780140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6780140Z 
2025-01-14T13:16:42.6780370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6780530Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6780740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6781060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6781180Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6781290Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6781300Z 
2025-01-14T13:16:42.6781360Z     def initialize_transport_state(
2025-01-14T13:16:42.6781410Z         self,
2025-01-14T13:16:42.6781460Z         simulation_state,
2025-01-14T13:16:42.6781510Z         opacity_state,
2025-01-14T13:16:42.6781560Z         macro_atom_state,
2025-01-14T13:16:42.6781630Z         plasma,
2025-01-14T13:16:42.6781680Z         no_of_packets,
2025-01-14T13:16:42.6781740Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6781780Z         iteration=0,
2025-01-14T13:16:42.6781830Z     ):
2025-01-14T13:16:42.6781930Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6782010Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6782050Z         else:
2025-01-14T13:16:42.6782110Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6782160Z     
2025-01-14T13:16:42.6782270Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6782340Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6782380Z         )
2025-01-14T13:16:42.6782420Z     
2025-01-14T13:16:42.6782530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6782610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6782730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6782790Z         else:
2025-01-14T13:16:42.6782840Z             continuum_state = None
2025-01-14T13:16:42.6782910Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6783000Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6783160Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6783250Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6783320Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6783390Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6783460Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6783510Z         ).to_numba(
2025-01-14T13:16:42.6783570Z             macro_atom_state,
2025-01-14T13:16:42.6783630Z             self.line_interaction_type,
2025-01-14T13:16:42.6783680Z         )
2025-01-14T13:16:42.6783750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6783970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6784020Z         ]
2025-01-14T13:16:42.6784590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6784600Z 
2025-01-14T13:16:42.6784730Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6784940Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-14T13:16:42.6784940Z 
2025-01-14T13:16:42.6785500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6785790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6785790Z 
2025-01-14T13:16:42.6785850Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6785970Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6786010Z         """
2025-01-14T13:16:42.6786100Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6786140Z     
2025-01-14T13:16:42.6786200Z         Parameters:
2025-01-14T13:16:42.6786240Z         -----------
2025-01-14T13:16:42.6786500Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6786620Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6786660Z     
2025-01-14T13:16:42.6786710Z         Returns:
2025-01-14T13:16:42.6786760Z         --------
2025-01-14T13:16:42.6786820Z         A TARDIS simulation object.
2025-01-14T13:16:42.6786860Z         """
2025-01-14T13:16:42.6786950Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6787050Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6787150Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6787300Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6787410Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6787480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6787530Z >       sim = run_tardis(
2025-01-14T13:16:42.6787590Z             config_verysimple,
2025-01-14T13:16:42.6787650Z             atom_data=atomic_data,
2025-01-14T13:16:42.6787690Z         )
2025-01-14T13:16:42.6787690Z 
2025-01-14T13:16:42.6787810Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6787900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6787960Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6788020Z     simulation.run_convergence()
2025-01-14T13:16:42.6788110Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6788220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6788290Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6788420Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6788500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6790050Z 
2025-01-14T13:16:42.6790730Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6790910Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6791090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6791330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6791460Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6791570Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6791570Z 
2025-01-14T13:16:42.6792360Z     def initialize_transport_state(
2025-01-14T13:16:42.6792870Z         self,
2025-01-14T13:16:42.6793050Z         simulation_state,
2025-01-14T13:16:42.6793210Z         opacity_state,
2025-01-14T13:16:42.6793370Z         macro_atom_state,
2025-01-14T13:16:42.6793570Z         plasma,
2025-01-14T13:16:42.6793720Z         no_of_packets,
2025-01-14T13:16:42.6794890Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6795090Z         iteration=0,
2025-01-14T13:16:42.6795230Z     ):
2025-01-14T13:16:42.6795780Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6796050Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6796200Z         else:
2025-01-14T13:16:42.6796360Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6796510Z     
2025-01-14T13:16:42.6796900Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6797140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6797290Z         )
2025-01-14T13:16:42.6797430Z     
2025-01-14T13:16:42.6798340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6799450Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6800010Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6800180Z         else:
2025-01-14T13:16:42.6801310Z             continuum_state = None
2025-01-14T13:16:42.6801570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6801960Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6802430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6803170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6803390Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6803790Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6805250Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6805430Z         ).to_numba(
2025-01-14T13:16:42.6805600Z             macro_atom_state,
2025-01-14T13:16:42.6807060Z             self.line_interaction_type,
2025-01-14T13:16:42.6807580Z         )
2025-01-14T13:16:42.6807820Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6809450Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6809810Z         ]
2025-01-14T13:16:42.6810320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6810330Z 
2025-01-14T13:16:42.6810440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6810660Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-14T13:16:42.6810660Z 
2025-01-14T13:16:42.6811360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6811650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6812190Z 
2025-01-14T13:16:42.6812260Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6812400Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6812450Z         """
2025-01-14T13:16:42.6812540Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6812580Z     
2025-01-14T13:16:42.6812630Z         Parameters:
2025-01-14T13:16:42.6812680Z         -----------
2025-01-14T13:16:42.6819820Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6820020Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6820080Z     
2025-01-14T13:16:42.6820120Z         Returns:
2025-01-14T13:16:42.6820170Z         --------
2025-01-14T13:16:42.6820230Z         A TARDIS simulation object.
2025-01-14T13:16:42.6820280Z         """
2025-01-14T13:16:42.6820370Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6820460Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6820580Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6820730Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6820850Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6820920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6820980Z >       sim = run_tardis(
2025-01-14T13:16:42.6821030Z             config_verysimple,
2025-01-14T13:16:42.6821090Z             atom_data=atomic_data,
2025-01-14T13:16:42.6821130Z         )
2025-01-14T13:16:42.6821130Z 
2025-01-14T13:16:42.6821250Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6821360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6821410Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6821480Z     simulation.run_convergence()
2025-01-14T13:16:42.6821570Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6821690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6822010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6822150Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6822240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6822240Z 
2025-01-14T13:16:42.6822450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6822620Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6822790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6823010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6823130Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6823240Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6823240Z 
2025-01-14T13:16:42.6823310Z     def initialize_transport_state(
2025-01-14T13:16:42.6823360Z         self,
2025-01-14T13:16:42.6823420Z         simulation_state,
2025-01-14T13:16:42.6823470Z         opacity_state,
2025-01-14T13:16:42.6823520Z         macro_atom_state,
2025-01-14T13:16:42.6823570Z         plasma,
2025-01-14T13:16:42.6823610Z         no_of_packets,
2025-01-14T13:16:42.6823670Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6823720Z         iteration=0,
2025-01-14T13:16:42.6823760Z     ):
2025-01-14T13:16:42.6823860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6823930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6823980Z         else:
2025-01-14T13:16:42.6824030Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6824080Z     
2025-01-14T13:16:42.6824180Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6824260Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6824410Z         )
2025-01-14T13:16:42.6824460Z     
2025-01-14T13:16:42.6824560Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6824650Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6824780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6824830Z         else:
2025-01-14T13:16:42.6824880Z             continuum_state = None
2025-01-14T13:16:42.6824960Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6825050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6825110Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6825200Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6825270Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6825340Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6825410Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6825460Z         ).to_numba(
2025-01-14T13:16:42.6825520Z             macro_atom_state,
2025-01-14T13:16:42.6825580Z             self.line_interaction_type,
2025-01-14T13:16:42.6825630Z         )
2025-01-14T13:16:42.6825700Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6825920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6825960Z         ]
2025-01-14T13:16:42.6826210Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6826220Z 
2025-01-14T13:16:42.6826330Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6827350Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-14T13:16:42.6827400Z 
2025-01-14T13:16:42.6830890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6831770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6831790Z 
2025-01-14T13:16:42.6831880Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6831990Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6832040Z         """
2025-01-14T13:16:42.6832130Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6832180Z     
2025-01-14T13:16:42.6832230Z         Parameters:
2025-01-14T13:16:42.6832280Z         -----------
2025-01-14T13:16:42.6832380Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6832500Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6832540Z     
2025-01-14T13:16:42.6832590Z         Returns:
2025-01-14T13:16:42.6832650Z         --------
2025-01-14T13:16:42.6832710Z         A TARDIS simulation object.
2025-01-14T13:16:42.6832760Z         """
2025-01-14T13:16:42.6832840Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6832940Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6833040Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6833190Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6833290Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6833360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6833410Z >       sim = run_tardis(
2025-01-14T13:16:42.6833470Z             config_verysimple,
2025-01-14T13:16:42.6833530Z             atom_data=atomic_data,
2025-01-14T13:16:42.6833570Z         )
2025-01-14T13:16:42.6833580Z 
2025-01-14T13:16:42.6833680Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6833770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6834030Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6834090Z     simulation.run_convergence()
2025-01-14T13:16:42.6834170Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6834280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6834350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6834470Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6834560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6834560Z 
2025-01-14T13:16:42.6834760Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6834930Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6835110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6835330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6835450Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6835550Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6835550Z 
2025-01-14T13:16:42.6835620Z     def initialize_transport_state(
2025-01-14T13:16:42.6835670Z         self,
2025-01-14T13:16:42.6835720Z         simulation_state,
2025-01-14T13:16:42.6835770Z         opacity_state,
2025-01-14T13:16:42.6835830Z         macro_atom_state,
2025-01-14T13:16:42.6835870Z         plasma,
2025-01-14T13:16:42.6836050Z         no_of_packets,
2025-01-14T13:16:42.6836150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6836200Z         iteration=0,
2025-01-14T13:16:42.6836240Z     ):
2025-01-14T13:16:42.6836360Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6836440Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6836500Z         else:
2025-01-14T13:16:42.6836560Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6836740Z     
2025-01-14T13:16:42.6836870Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6836940Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6836990Z         )
2025-01-14T13:16:42.6837040Z     
2025-01-14T13:16:42.6837150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6837240Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6837370Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6837420Z         else:
2025-01-14T13:16:42.6837490Z             continuum_state = None
2025-01-14T13:16:42.6837570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6837660Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6837730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6837810Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6837900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6837970Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6838040Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6838090Z         ).to_numba(
2025-01-14T13:16:42.6838150Z             macro_atom_state,
2025-01-14T13:16:42.6838210Z             self.line_interaction_type,
2025-01-14T13:16:42.6838250Z         )
2025-01-14T13:16:42.6838330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6838560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6838610Z         ]
2025-01-14T13:16:42.6838860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6838860Z 
2025-01-14T13:16:42.6838980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6839380Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-14T13:16:42.6839390Z 
2025-01-14T13:16:42.6839950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6840260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6840260Z 
2025-01-14T13:16:42.6840330Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6840450Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6840500Z         """
2025-01-14T13:16:42.6840600Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6840640Z     
2025-01-14T13:16:42.6840690Z         Parameters:
2025-01-14T13:16:42.6840740Z         -----------
2025-01-14T13:16:42.6840860Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6840970Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6841020Z     
2025-01-14T13:16:42.6841070Z         Returns:
2025-01-14T13:16:42.6841110Z         --------
2025-01-14T13:16:42.6841180Z         A TARDIS simulation object.
2025-01-14T13:16:42.6841220Z         """
2025-01-14T13:16:42.6841310Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6841420Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6841520Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6841670Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6841780Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6841850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6841910Z >       sim = run_tardis(
2025-01-14T13:16:42.6841970Z             config_verysimple,
2025-01-14T13:16:42.6842520Z             atom_data=atomic_data,
2025-01-14T13:16:42.6842580Z         )
2025-01-14T13:16:42.6842580Z 
2025-01-14T13:16:42.6842700Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6842790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6842860Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6842920Z     simulation.run_convergence()
2025-01-14T13:16:42.6843010Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6843120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6843190Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6843320Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6843410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6843410Z 
2025-01-14T13:16:42.6843630Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6843790Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6843970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6844190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6844320Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6844420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6844430Z 
2025-01-14T13:16:42.6844500Z     def initialize_transport_state(
2025-01-14T13:16:42.6844540Z         self,
2025-01-14T13:16:42.6844590Z         simulation_state,
2025-01-14T13:16:42.6844650Z         opacity_state,
2025-01-14T13:16:42.6844700Z         macro_atom_state,
2025-01-14T13:16:42.6844740Z         plasma,
2025-01-14T13:16:42.6844790Z         no_of_packets,
2025-01-14T13:16:42.6845080Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6845130Z         iteration=0,
2025-01-14T13:16:42.6845180Z     ):
2025-01-14T13:16:42.6845280Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6845360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6845400Z         else:
2025-01-14T13:16:42.6845450Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6845490Z     
2025-01-14T13:16:42.6845600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6845670Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6845720Z         )
2025-01-14T13:16:42.6845760Z     
2025-01-14T13:16:42.6845870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6845950Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6846070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6846130Z         else:
2025-01-14T13:16:42.6846190Z             continuum_state = None
2025-01-14T13:16:42.6846280Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6846360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6846850Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6846950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6847030Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6847100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6847160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6847210Z         ).to_numba(
2025-01-14T13:16:42.6847280Z             macro_atom_state,
2025-01-14T13:16:42.6847350Z             self.line_interaction_type,
2025-01-14T13:16:42.6847400Z         )
2025-01-14T13:16:42.6847470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6847700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6847770Z         ]
2025-01-14T13:16:42.6848300Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6848310Z 
2025-01-14T13:16:42.6848440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6848660Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-14T13:16:42.6848660Z 
2025-01-14T13:16:42.6849230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6849520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6849520Z 
2025-01-14T13:16:42.6849590Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6849720Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6849770Z         """
2025-01-14T13:16:42.6849880Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6849920Z     
2025-01-14T13:16:42.6850810Z         Parameters:
2025-01-14T13:16:42.6850880Z         -----------
2025-01-14T13:16:42.6851000Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6851110Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6851160Z     
2025-01-14T13:16:42.6851210Z         Returns:
2025-01-14T13:16:42.6851250Z         --------
2025-01-14T13:16:42.6851320Z         A TARDIS simulation object.
2025-01-14T13:16:42.6851360Z         """
2025-01-14T13:16:42.6851470Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6851570Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6851680Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6851940Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6852050Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6852120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6852180Z >       sim = run_tardis(
2025-01-14T13:16:42.6852230Z             config_verysimple,
2025-01-14T13:16:42.6852290Z             atom_data=atomic_data,
2025-01-14T13:16:42.6852330Z         )
2025-01-14T13:16:42.6852330Z 
2025-01-14T13:16:42.6852450Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6852640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6852700Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6852760Z     simulation.run_convergence()
2025-01-14T13:16:42.6852850Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6852980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6853060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6853190Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6853280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6853280Z 
2025-01-14T13:16:42.6853510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6853700Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6853910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6854130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6854250Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6854360Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6854360Z 
2025-01-14T13:16:42.6854420Z     def initialize_transport_state(
2025-01-14T13:16:42.6854470Z         self,
2025-01-14T13:16:42.6854530Z         simulation_state,
2025-01-14T13:16:42.6854710Z         opacity_state,
2025-01-14T13:16:42.6854780Z         macro_atom_state,
2025-01-14T13:16:42.6854850Z         plasma,
2025-01-14T13:16:42.6854900Z         no_of_packets,
2025-01-14T13:16:42.6854960Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6855020Z         iteration=0,
2025-01-14T13:16:42.6855070Z     ):
2025-01-14T13:16:42.6855170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6855240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6855280Z         else:
2025-01-14T13:16:42.6855340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6855380Z     
2025-01-14T13:16:42.6855490Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6855560Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6855610Z         )
2025-01-14T13:16:42.6855650Z     
2025-01-14T13:16:42.6855770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6855870Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6856000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6856050Z         else:
2025-01-14T13:16:42.6856110Z             continuum_state = None
2025-01-14T13:16:42.6856190Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6856270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6856340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6856430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6856500Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6856560Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6856650Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6856700Z         ).to_numba(
2025-01-14T13:16:42.6856760Z             macro_atom_state,
2025-01-14T13:16:42.6856910Z             self.line_interaction_type,
2025-01-14T13:16:42.6856950Z         )
2025-01-14T13:16:42.6857040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6857280Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6857330Z         ]
2025-01-14T13:16:42.6857570Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6857580Z 
2025-01-14T13:16:42.6857710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6857960Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-14T13:16:42.6857970Z 
2025-01-14T13:16:42.6858540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6858880Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6858890Z 
2025-01-14T13:16:42.6858960Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6859100Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6859160Z         """
2025-01-14T13:16:42.6859270Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6859330Z     
2025-01-14T13:16:42.6859370Z         Parameters:
2025-01-14T13:16:42.6859430Z         -----------
2025-01-14T13:16:42.6859540Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6859660Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6859710Z     
2025-01-14T13:16:42.6859790Z         Returns:
2025-01-14T13:16:42.6859840Z         --------
2025-01-14T13:16:42.6859900Z         A TARDIS simulation object.
2025-01-14T13:16:42.6859960Z         """
2025-01-14T13:16:42.6860150Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6860260Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6860370Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6860540Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6860650Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6860720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6860770Z >       sim = run_tardis(
2025-01-14T13:16:42.6860830Z             config_verysimple,
2025-01-14T13:16:42.6860890Z             atom_data=atomic_data,
2025-01-14T13:16:42.6860940Z         )
2025-01-14T13:16:42.6860940Z 
2025-01-14T13:16:42.6861050Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6861140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6861210Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6861280Z     simulation.run_convergence()
2025-01-14T13:16:42.6861370Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6861480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6861560Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6861680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6861770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6861780Z 
2025-01-14T13:16:42.6862000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6862190Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6862380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6862620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6862840Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6862960Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6862960Z 
2025-01-14T13:16:42.6863050Z     def initialize_transport_state(
2025-01-14T13:16:42.6863100Z         self,
2025-01-14T13:16:42.6863160Z         simulation_state,
2025-01-14T13:16:42.6863210Z         opacity_state,
2025-01-14T13:16:42.6863260Z         macro_atom_state,
2025-01-14T13:16:42.6863310Z         plasma,
2025-01-14T13:16:42.6863360Z         no_of_packets,
2025-01-14T13:16:42.6863420Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6863490Z         iteration=0,
2025-01-14T13:16:42.6863550Z     ):
2025-01-14T13:16:42.6863660Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6863730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6863780Z         else:
2025-01-14T13:16:42.6863840Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6863900Z     
2025-01-14T13:16:42.6864100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6864200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6864240Z         )
2025-01-14T13:16:42.6864290Z     
2025-01-14T13:16:42.6864390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6864480Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6864610Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6864660Z         else:
2025-01-14T13:16:42.6864710Z             continuum_state = None
2025-01-14T13:16:42.6864790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6864880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6864950Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6865040Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6865140Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6865720Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6865850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6865920Z         ).to_numba(
2025-01-14T13:16:42.6865980Z             macro_atom_state,
2025-01-14T13:16:42.6866040Z             self.line_interaction_type,
2025-01-14T13:16:42.6866100Z         )
2025-01-14T13:16:42.6866180Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6866410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6866460Z         ]
2025-01-14T13:16:42.6866730Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6866740Z 
2025-01-14T13:16:42.6866870Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6867100Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-14T13:16:42.6867100Z 
2025-01-14T13:16:42.6867690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6868000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6868010Z 
2025-01-14T13:16:42.6868080Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6868190Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6868240Z         """
2025-01-14T13:16:42.6868330Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6868390Z     
2025-01-14T13:16:42.6868440Z         Parameters:
2025-01-14T13:16:42.6868500Z         -----------
2025-01-14T13:16:42.6868600Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6869010Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6869060Z     
2025-01-14T13:16:42.6869110Z         Returns:
2025-01-14T13:16:42.6869170Z         --------
2025-01-14T13:16:42.6869240Z         A TARDIS simulation object.
2025-01-14T13:16:42.6869310Z         """
2025-01-14T13:16:42.6869400Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6869510Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6869620Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6869780Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6869900Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6869990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6870040Z >       sim = run_tardis(
2025-01-14T13:16:42.6870100Z             config_verysimple,
2025-01-14T13:16:42.6870160Z             atom_data=atomic_data,
2025-01-14T13:16:42.6870220Z         )
2025-01-14T13:16:42.6870230Z 
2025-01-14T13:16:42.6870350Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6870450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6870510Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6870570Z     simulation.run_convergence()
2025-01-14T13:16:42.6870660Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6870770Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6870850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6870990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6871090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6871090Z 
2025-01-14T13:16:42.6871310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6871470Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6871750Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6871990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6872120Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6872220Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6872230Z 
2025-01-14T13:16:42.6872290Z     def initialize_transport_state(
2025-01-14T13:16:42.6872350Z         self,
2025-01-14T13:16:42.6872420Z         simulation_state,
2025-01-14T13:16:42.6872460Z         opacity_state,
2025-01-14T13:16:42.6872520Z         macro_atom_state,
2025-01-14T13:16:42.6872570Z         plasma,
2025-01-14T13:16:42.6872620Z         no_of_packets,
2025-01-14T13:16:42.6872680Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6872730Z         iteration=0,
2025-01-14T13:16:42.6872780Z     ):
2025-01-14T13:16:42.6872870Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6872950Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6872990Z         else:
2025-01-14T13:16:42.6873050Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6873090Z     
2025-01-14T13:16:42.6873220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6873300Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6873340Z         )
2025-01-14T13:16:42.6873390Z     
2025-01-14T13:16:42.6873500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6873610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6873740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6873790Z         else:
2025-01-14T13:16:42.6873840Z             continuum_state = None
2025-01-14T13:16:42.6873930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6874130Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6874210Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6874290Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6874370Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6874440Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6874520Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6874570Z         ).to_numba(
2025-01-14T13:16:42.6874630Z             macro_atom_state,
2025-01-14T13:16:42.6874700Z             self.line_interaction_type,
2025-01-14T13:16:42.6874740Z         )
2025-01-14T13:16:42.6874820Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6875060Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6875110Z         ]
2025-01-14T13:16:42.6875400Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6875420Z 
2025-01-14T13:16:42.6875560Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6875790Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-14T13:16:42.6875800Z 
2025-01-14T13:16:42.6876360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6876670Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6876680Z 
2025-01-14T13:16:42.6876760Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6876890Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6876940Z         """
2025-01-14T13:16:42.6877140Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6877190Z     
2025-01-14T13:16:42.6877240Z         Parameters:
2025-01-14T13:16:42.6877280Z         -----------
2025-01-14T13:16:42.6877410Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6877530Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6877570Z     
2025-01-14T13:16:42.6877620Z         Returns:
2025-01-14T13:16:42.6877670Z         --------
2025-01-14T13:16:42.6882510Z         A TARDIS simulation object.
2025-01-14T13:16:42.6882590Z         """
2025-01-14T13:16:42.6882690Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6882790Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6882890Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6883030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6883150Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6883220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6883280Z >       sim = run_tardis(
2025-01-14T13:16:42.6883340Z             config_verysimple,
2025-01-14T13:16:42.6883400Z             atom_data=atomic_data,
2025-01-14T13:16:42.6883440Z         )
2025-01-14T13:16:42.6883450Z 
2025-01-14T13:16:42.6883550Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6883640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6883700Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6883760Z     simulation.run_convergence()
2025-01-14T13:16:42.6883850Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6883960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6884030Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6884160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6884460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6884460Z 
2025-01-14T13:16:42.6884680Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6884850Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6885030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6885250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6885380Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6885490Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6885500Z 
2025-01-14T13:16:42.6885560Z     def initialize_transport_state(
2025-01-14T13:16:42.6885610Z         self,
2025-01-14T13:16:42.6886740Z         simulation_state,
2025-01-14T13:16:42.6887190Z         opacity_state,
2025-01-14T13:16:42.6888460Z         macro_atom_state,
2025-01-14T13:16:42.6888690Z         plasma,
2025-01-14T13:16:42.6888850Z         no_of_packets,
2025-01-14T13:16:42.6889790Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6890020Z         iteration=0,
2025-01-14T13:16:42.6890200Z     ):
2025-01-14T13:16:42.6891440Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6891690Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6891820Z         else:
2025-01-14T13:16:42.6891990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6892150Z     
2025-01-14T13:16:42.6892510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6892740Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6892900Z         )
2025-01-14T13:16:42.6893560Z     
2025-01-14T13:16:42.6893900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6894220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6895050Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6895210Z         else:
2025-01-14T13:16:42.6895980Z             continuum_state = None
2025-01-14T13:16:42.6896650Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6897110Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6897320Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6898250Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6899670Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6899900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6900120Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6900260Z         ).to_numba(
2025-01-14T13:16:42.6900430Z             macro_atom_state,
2025-01-14T13:16:42.6900650Z             self.line_interaction_type,
2025-01-14T13:16:42.6900820Z         )
2025-01-14T13:16:42.6901040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6901660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6901800Z         ]
2025-01-14T13:16:42.6902470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6902480Z 
2025-01-14T13:16:42.6902810Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6903390Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-14T13:16:42.6903390Z 
2025-01-14T13:16:42.6907780Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6910530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6910550Z 
2025-01-14T13:16:42.6910740Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6911160Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6911460Z         """
2025-01-14T13:16:42.6911730Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6911870Z     
2025-01-14T13:16:42.6912040Z         Parameters:
2025-01-14T13:16:42.6912190Z         -----------
2025-01-14T13:16:42.6912490Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6912790Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6913280Z     
2025-01-14T13:16:42.6913480Z         Returns:
2025-01-14T13:16:42.6913620Z         --------
2025-01-14T13:16:42.6913810Z         A TARDIS simulation object.
2025-01-14T13:16:42.6914100Z         """
2025-01-14T13:16:42.6914570Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6914840Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6915140Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6915510Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6915810Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6916010Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6916180Z >       sim = run_tardis(
2025-01-14T13:16:42.6916360Z             config_verysimple,
2025-01-14T13:16:42.6916540Z             atom_data=atomic_data,
2025-01-14T13:16:42.6916680Z         )
2025-01-14T13:16:42.6916690Z 
2025-01-14T13:16:42.6916990Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6917290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6917500Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6917700Z     simulation.run_convergence()
2025-01-14T13:16:42.6918780Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6919130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6919330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6920750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6921000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6921010Z 
2025-01-14T13:16:42.6921610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6922060Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6922570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6923170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6923500Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6924570Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6924600Z 
2025-01-14T13:16:42.6924810Z     def initialize_transport_state(
2025-01-14T13:16:42.6924960Z         self,
2025-01-14T13:16:42.6925130Z         simulation_state,
2025-01-14T13:16:42.6925300Z         opacity_state,
2025-01-14T13:16:42.6925650Z         macro_atom_state,
2025-01-14T13:16:42.6925850Z         plasma,
2025-01-14T13:16:42.6926310Z         no_of_packets,
2025-01-14T13:16:42.6926520Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6926690Z         iteration=0,
2025-01-14T13:16:42.6926820Z     ):
2025-01-14T13:16:42.6927120Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6927330Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6928750Z         else:
2025-01-14T13:16:42.6929310Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6929460Z     
2025-01-14T13:16:42.6929780Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6931490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6933220Z         )
2025-01-14T13:16:42.6933390Z     
2025-01-14T13:16:42.6934150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6935000Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6936030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6936190Z         else:
2025-01-14T13:16:42.6936360Z             continuum_state = None
2025-01-14T13:16:42.6936580Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6936830Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6937020Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6937540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6937750Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6937980Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6938320Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6938480Z         ).to_numba(
2025-01-14T13:16:42.6938640Z             macro_atom_state,
2025-01-14T13:16:42.6938830Z             self.line_interaction_type,
2025-01-14T13:16:42.6938960Z         )
2025-01-14T13:16:42.6939230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6940300Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6940590Z         ]
2025-01-14T13:16:42.6941330Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6941340Z 
2025-01-14T13:16:42.6941680Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6942270Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-14T13:16:42.6942280Z 
2025-01-14T13:16:42.6944630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6945650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6945660Z 
2025-01-14T13:16:42.6945850Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6946170Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6946310Z         """
2025-01-14T13:16:42.6946550Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6946700Z     
2025-01-14T13:16:42.6946870Z         Parameters:
2025-01-14T13:16:42.6947040Z         -----------
2025-01-14T13:16:42.6947330Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6950850Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6951040Z     
2025-01-14T13:16:42.6951110Z         Returns:
2025-01-14T13:16:42.6951160Z         --------
2025-01-14T13:16:42.6951230Z         A TARDIS simulation object.
2025-01-14T13:16:42.6951280Z         """
2025-01-14T13:16:42.6951380Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6951480Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6951600Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6951740Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6951850Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6951930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6951980Z >       sim = run_tardis(
2025-01-14T13:16:42.6952050Z             config_verysimple,
2025-01-14T13:16:42.6952100Z             atom_data=atomic_data,
2025-01-14T13:16:42.6952150Z         )
2025-01-14T13:16:42.6952390Z 
2025-01-14T13:16:42.6952520Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6952610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6952670Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6952740Z     simulation.run_convergence()
2025-01-14T13:16:42.6952830Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6952940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6953010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6953130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6953220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6953220Z 
2025-01-14T13:16:42.6953440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6953610Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6953790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6954020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6954140Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6954270Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6954280Z 
2025-01-14T13:16:42.6954350Z     def initialize_transport_state(
2025-01-14T13:16:42.6954400Z         self,
2025-01-14T13:16:42.6954450Z         simulation_state,
2025-01-14T13:16:42.6954500Z         opacity_state,
2025-01-14T13:16:42.6954550Z         macro_atom_state,
2025-01-14T13:16:42.6954600Z         plasma,
2025-01-14T13:16:42.6954650Z         no_of_packets,
2025-01-14T13:16:42.6954710Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6954760Z         iteration=0,
2025-01-14T13:16:42.6954800Z     ):
2025-01-14T13:16:42.6954920Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6955120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6955180Z         else:
2025-01-14T13:16:42.6955240Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6955280Z     
2025-01-14T13:16:42.6955390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6955470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6955510Z         )
2025-01-14T13:16:42.6955550Z     
2025-01-14T13:16:42.6955660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6955750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6955880Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6955930Z         else:
2025-01-14T13:16:42.6956000Z             continuum_state = None
2025-01-14T13:16:42.6956080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6956170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6956250Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6956340Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6956410Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6956480Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6956550Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6956600Z         ).to_numba(
2025-01-14T13:16:42.6956650Z             macro_atom_state,
2025-01-14T13:16:42.6956720Z             self.line_interaction_type,
2025-01-14T13:16:42.6956760Z         )
2025-01-14T13:16:42.6956840Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6957070Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6957110Z         ]
2025-01-14T13:16:42.6957380Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6957470Z 
2025-01-14T13:16:42.6957600Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6957820Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-14T13:16:42.6957830Z 
2025-01-14T13:16:42.6959820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6961190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6961220Z 
2025-01-14T13:16:42.6961840Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6962180Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6962320Z         """
2025-01-14T13:16:42.6962560Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6962740Z     
2025-01-14T13:16:42.6962900Z         Parameters:
2025-01-14T13:16:42.6963240Z         -----------
2025-01-14T13:16:42.6964030Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6964380Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6964520Z     
2025-01-14T13:16:42.6964660Z         Returns:
2025-01-14T13:16:42.6964820Z         --------
2025-01-14T13:16:42.6965010Z         A TARDIS simulation object.
2025-01-14T13:16:42.6965170Z         """
2025-01-14T13:16:42.6966030Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6966240Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6966360Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6966510Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6966620Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6966720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6966980Z >       sim = run_tardis(
2025-01-14T13:16:42.6967050Z             config_verysimple,
2025-01-14T13:16:42.6967110Z             atom_data=atomic_data,
2025-01-14T13:16:42.6967170Z         )
2025-01-14T13:16:42.6967180Z 
2025-01-14T13:16:42.6967300Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6967400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6967470Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6967540Z     simulation.run_convergence()
2025-01-14T13:16:42.6967630Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6967740Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6967830Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6967950Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6968060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6968060Z 
2025-01-14T13:16:42.6968280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6968450Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6968630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6968860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6968980Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6969090Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6969100Z 
2025-01-14T13:16:42.6969160Z     def initialize_transport_state(
2025-01-14T13:16:42.6969210Z         self,
2025-01-14T13:16:42.6969260Z         simulation_state,
2025-01-14T13:16:42.6969330Z         opacity_state,
2025-01-14T13:16:42.6969490Z         macro_atom_state,
2025-01-14T13:16:42.6969540Z         plasma,
2025-01-14T13:16:42.6969600Z         no_of_packets,
2025-01-14T13:16:42.6969650Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6969710Z         iteration=0,
2025-01-14T13:16:42.6969750Z     ):
2025-01-14T13:16:42.6969850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6969930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6969980Z         else:
2025-01-14T13:16:42.6970030Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6970070Z     
2025-01-14T13:16:42.6970180Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6970250Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6970300Z         )
2025-01-14T13:16:42.6970350Z     
2025-01-14T13:16:42.6970450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6970540Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6970670Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6970710Z         else:
2025-01-14T13:16:42.6970770Z             continuum_state = None
2025-01-14T13:16:42.6970860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6970940Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6971010Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6971090Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6971160Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6971230Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6971300Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6971350Z         ).to_numba(
2025-01-14T13:16:42.6971400Z             macro_atom_state,
2025-01-14T13:16:42.6971460Z             self.line_interaction_type,
2025-01-14T13:16:42.6971500Z         )
2025-01-14T13:16:42.6971590Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6972120Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6972180Z         ]
2025-01-14T13:16:42.6972440Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6972440Z 
2025-01-14T13:16:42.6972570Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6972790Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-14T13:16:42.6972790Z 
2025-01-14T13:16:42.6974870Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6975280Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6975290Z 
2025-01-14T13:16:42.6975370Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6975510Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6975570Z         """
2025-01-14T13:16:42.6975660Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6975710Z     
2025-01-14T13:16:42.6975770Z         Parameters:
2025-01-14T13:16:42.6975820Z         -----------
2025-01-14T13:16:42.6975950Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6976060Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6976110Z     
2025-01-14T13:16:42.6976160Z         Returns:
2025-01-14T13:16:42.6976210Z         --------
2025-01-14T13:16:42.6976270Z         A TARDIS simulation object.
2025-01-14T13:16:42.6976310Z         """
2025-01-14T13:16:42.6976410Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6977180Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6977300Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6977450Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6977560Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6977630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6977690Z >       sim = run_tardis(
2025-01-14T13:16:42.6977750Z             config_verysimple,
2025-01-14T13:16:42.6977810Z             atom_data=atomic_data,
2025-01-14T13:16:42.6977860Z         )
2025-01-14T13:16:42.6977860Z 
2025-01-14T13:16:42.6977970Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6978070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6978140Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6978200Z     simulation.run_convergence()
2025-01-14T13:16:42.6978290Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6978440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6978520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6978650Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6978730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6978730Z 
2025-01-14T13:16:42.6978950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6979120Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6979300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6979520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6979650Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6980410Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6980480Z 
2025-01-14T13:16:42.6981680Z     def initialize_transport_state(
2025-01-14T13:16:42.6981900Z         self,
2025-01-14T13:16:42.6982070Z         simulation_state,
2025-01-14T13:16:42.6982240Z         opacity_state,
2025-01-14T13:16:42.6982400Z         macro_atom_state,
2025-01-14T13:16:42.6982550Z         plasma,
2025-01-14T13:16:42.6982700Z         no_of_packets,
2025-01-14T13:16:42.6982880Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6983040Z         iteration=0,
2025-01-14T13:16:42.6983180Z     ):
2025-01-14T13:16:42.6983460Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6983670Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6983810Z         else:
2025-01-14T13:16:42.6983980Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6984120Z     
2025-01-14T13:16:42.6984420Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6984650Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6985710Z         )
2025-01-14T13:16:42.6985820Z     
2025-01-14T13:16:42.6985950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6986050Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6986170Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6986220Z         else:
2025-01-14T13:16:42.6986280Z             continuum_state = None
2025-01-14T13:16:42.6986360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6986460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6986530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6986610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6986700Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6986770Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6986830Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6987080Z         ).to_numba(
2025-01-14T13:16:42.6987140Z             macro_atom_state,
2025-01-14T13:16:42.6987210Z             self.line_interaction_type,
2025-01-14T13:16:42.6987260Z         )
2025-01-14T13:16:42.6987340Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6987560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6987620Z         ]
2025-01-14T13:16:42.6987870Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6987870Z 
2025-01-14T13:16:42.6987990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6988210Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-14T13:16:42.6988210Z 
2025-01-14T13:16:42.6988770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6989170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6989170Z 
2025-01-14T13:16:42.6989240Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6989360Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6989400Z         """
2025-01-14T13:16:42.6989490Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6989540Z     
2025-01-14T13:16:42.6989590Z         Parameters:
2025-01-14T13:16:42.6989640Z         -----------
2025-01-14T13:16:42.6989750Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6989860Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6989910Z     
2025-01-14T13:16:42.6989960Z         Returns:
2025-01-14T13:16:42.6990000Z         --------
2025-01-14T13:16:42.6990170Z         A TARDIS simulation object.
2025-01-14T13:16:42.6990220Z         """
2025-01-14T13:16:42.6990320Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6990420Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6990530Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.6990670Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.6990790Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.6990880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.6990940Z >       sim = run_tardis(
2025-01-14T13:16:42.6990990Z             config_verysimple,
2025-01-14T13:16:42.6991050Z             atom_data=atomic_data,
2025-01-14T13:16:42.6991090Z         )
2025-01-14T13:16:42.6991100Z 
2025-01-14T13:16:42.6991210Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.6991310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6991370Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.6991450Z     simulation.run_convergence()
2025-01-14T13:16:42.6991530Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.6991650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.6991710Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.6991840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.6991920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.6991930Z 
2025-01-14T13:16:42.6992140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.6992310Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.6992490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.6992820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.6992940Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.6993050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.6993060Z 
2025-01-14T13:16:42.6993120Z     def initialize_transport_state(
2025-01-14T13:16:42.6993170Z         self,
2025-01-14T13:16:42.6993220Z         simulation_state,
2025-01-14T13:16:42.6993280Z         opacity_state,
2025-01-14T13:16:42.6993330Z         macro_atom_state,
2025-01-14T13:16:42.6993380Z         plasma,
2025-01-14T13:16:42.6993430Z         no_of_packets,
2025-01-14T13:16:42.6993490Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.6993540Z         iteration=0,
2025-01-14T13:16:42.6993600Z     ):
2025-01-14T13:16:42.6993700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.6993770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.6993830Z         else:
2025-01-14T13:16:42.6993880Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.6993930Z     
2025-01-14T13:16:42.6994040Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.6994120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.6994160Z         )
2025-01-14T13:16:42.6994200Z     
2025-01-14T13:16:42.6994300Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.6994400Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.6994520Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.6994640Z         else:
2025-01-14T13:16:42.6994700Z             continuum_state = None
2025-01-14T13:16:42.6994780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.6994880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.6994950Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.6995120Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.6995200Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.6995270Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.6995340Z             continuum_state=continuum_state,
2025-01-14T13:16:42.6995390Z         ).to_numba(
2025-01-14T13:16:42.6995440Z             macro_atom_state,
2025-01-14T13:16:42.6995500Z             self.line_interaction_type,
2025-01-14T13:16:42.6995550Z         )
2025-01-14T13:16:42.6995630Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.6995860Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.6995900Z         ]
2025-01-14T13:16:42.6996150Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.6996160Z 
2025-01-14T13:16:42.6996280Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.6996500Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-14T13:16:42.6996500Z 
2025-01-14T13:16:42.6997050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.6997340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.6997340Z 
2025-01-14T13:16:42.6997410Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.6997520Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.6997570Z         """
2025-01-14T13:16:42.6997650Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.6997700Z     
2025-01-14T13:16:42.6997810Z         Parameters:
2025-01-14T13:16:42.6997870Z         -----------
2025-01-14T13:16:42.6997980Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.6998090Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.6998140Z     
2025-01-14T13:16:42.6998190Z         Returns:
2025-01-14T13:16:42.6998240Z         --------
2025-01-14T13:16:42.6998300Z         A TARDIS simulation object.
2025-01-14T13:16:42.6998340Z         """
2025-01-14T13:16:42.6998440Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.6998530Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.6998650Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7004260Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7004470Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7004550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7004630Z >       sim = run_tardis(
2025-01-14T13:16:42.7004700Z             config_verysimple,
2025-01-14T13:16:42.7004750Z             atom_data=atomic_data,
2025-01-14T13:16:42.7004800Z         )
2025-01-14T13:16:42.7004810Z 
2025-01-14T13:16:42.7004930Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7005030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7005090Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7005160Z     simulation.run_convergence()
2025-01-14T13:16:42.7005250Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7005360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7005440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7005570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7005660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7005670Z 
2025-01-14T13:16:42.7006300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7006490Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7006660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7006890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7007010Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7007120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7007120Z 
2025-01-14T13:16:42.7007190Z     def initialize_transport_state(
2025-01-14T13:16:42.7007230Z         self,
2025-01-14T13:16:42.7007280Z         simulation_state,
2025-01-14T13:16:42.7007330Z         opacity_state,
2025-01-14T13:16:42.7007390Z         macro_atom_state,
2025-01-14T13:16:42.7007470Z         plasma,
2025-01-14T13:16:42.7007520Z         no_of_packets,
2025-01-14T13:16:42.7007580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7007640Z         iteration=0,
2025-01-14T13:16:42.7007680Z     ):
2025-01-14T13:16:42.7007790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7007860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7007910Z         else:
2025-01-14T13:16:42.7007960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7008020Z     
2025-01-14T13:16:42.7008120Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7008190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7008240Z         )
2025-01-14T13:16:42.7008280Z     
2025-01-14T13:16:42.7008480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7008570Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7008700Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7008990Z         else:
2025-01-14T13:16:42.7009050Z             continuum_state = None
2025-01-14T13:16:42.7009130Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7009220Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7009290Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7009390Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7009460Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7009530Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7009590Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7009640Z         ).to_numba(
2025-01-14T13:16:42.7009700Z             macro_atom_state,
2025-01-14T13:16:42.7009760Z             self.line_interaction_type,
2025-01-14T13:16:42.7009810Z         )
2025-01-14T13:16:42.7009880Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7010130Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7010180Z         ]
2025-01-14T13:16:42.7010440Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7010440Z 
2025-01-14T13:16:42.7010560Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7010780Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-14T13:16:42.7010790Z 
2025-01-14T13:16:42.7011340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7011620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7011630Z 
2025-01-14T13:16:42.7011690Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7011870Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7011930Z         """
2025-01-14T13:16:42.7012020Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7012060Z     
2025-01-14T13:16:42.7012110Z         Parameters:
2025-01-14T13:16:42.7012160Z         -----------
2025-01-14T13:16:42.7012270Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7012380Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7012430Z     
2025-01-14T13:16:42.7012470Z         Returns:
2025-01-14T13:16:42.7012520Z         --------
2025-01-14T13:16:42.7012580Z         A TARDIS simulation object.
2025-01-14T13:16:42.7012630Z         """
2025-01-14T13:16:42.7012720Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7012810Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7012920Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7013070Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7018140Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7018950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7019050Z >       sim = run_tardis(
2025-01-14T13:16:42.7019160Z             config_verysimple,
2025-01-14T13:16:42.7019270Z             atom_data=atomic_data,
2025-01-14T13:16:42.7019330Z         )
2025-01-14T13:16:42.7019330Z 
2025-01-14T13:16:42.7019470Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7019610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7019700Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7019760Z     simulation.run_convergence()
2025-01-14T13:16:42.7020150Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7020560Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7020930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7021080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7021220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7021230Z 
2025-01-14T13:16:42.7021510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7022600Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7023500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7023780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7023990Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7024180Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7024200Z 
2025-01-14T13:16:42.7024320Z     def initialize_transport_state(
2025-01-14T13:16:42.7024410Z         self,
2025-01-14T13:16:42.7024530Z         simulation_state,
2025-01-14T13:16:42.7024620Z         opacity_state,
2025-01-14T13:16:42.7024680Z         macro_atom_state,
2025-01-14T13:16:42.7024730Z         plasma,
2025-01-14T13:16:42.7024780Z         no_of_packets,
2025-01-14T13:16:42.7025120Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7025210Z         iteration=0,
2025-01-14T13:16:42.7025300Z     ):
2025-01-14T13:16:42.7025450Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7025580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7025660Z         else:
2025-01-14T13:16:42.7025750Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7025810Z     
2025-01-14T13:16:42.7025960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7026060Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7026130Z         )
2025-01-14T13:16:42.7026180Z     
2025-01-14T13:16:42.7026490Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7026600Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7027180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7027270Z         else:
2025-01-14T13:16:42.7027370Z             continuum_state = None
2025-01-14T13:16:42.7027490Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7027610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7027710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7027820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7028170Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7028320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7028430Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7028510Z         ).to_numba(
2025-01-14T13:16:42.7028630Z             macro_atom_state,
2025-01-14T13:16:42.7028740Z             self.line_interaction_type,
2025-01-14T13:16:42.7028830Z         )
2025-01-14T13:16:42.7028940Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7029560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7029620Z         ]
2025-01-14T13:16:42.7030190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7030190Z 
2025-01-14T13:16:42.7030330Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7030780Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-14T13:16:42.7030790Z 
2025-01-14T13:16:42.7031450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7031950Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7031970Z 
2025-01-14T13:16:42.7032050Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7032210Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7032270Z         """
2025-01-14T13:16:42.7032430Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7032500Z     
2025-01-14T13:16:42.7032590Z         Parameters:
2025-01-14T13:16:42.7032690Z         -----------
2025-01-14T13:16:42.7033240Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7034560Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7034810Z     
2025-01-14T13:16:42.7035000Z         Returns:
2025-01-14T13:16:42.7035260Z         --------
2025-01-14T13:16:42.7035530Z         A TARDIS simulation object.
2025-01-14T13:16:42.7035750Z         """
2025-01-14T13:16:42.7036100Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7036440Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7036820Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7037300Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7037480Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7037580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7037670Z >       sim = run_tardis(
2025-01-14T13:16:42.7037760Z             config_verysimple,
2025-01-14T13:16:42.7037860Z             atom_data=atomic_data,
2025-01-14T13:16:42.7037950Z         )
2025-01-14T13:16:42.7037950Z 
2025-01-14T13:16:42.7038070Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7038180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7038430Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7038500Z     simulation.run_convergence()
2025-01-14T13:16:42.7039310Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7039460Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7039540Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7039710Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7039800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7039810Z 
2025-01-14T13:16:42.7040930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7041720Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7041950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7042200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7042670Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7042810Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7042820Z 
2025-01-14T13:16:42.7042910Z     def initialize_transport_state(
2025-01-14T13:16:42.7042990Z         self,
2025-01-14T13:16:42.7043070Z         simulation_state,
2025-01-14T13:16:42.7043140Z         opacity_state,
2025-01-14T13:16:42.7043190Z         macro_atom_state,
2025-01-14T13:16:42.7043250Z         plasma,
2025-01-14T13:16:42.7043320Z         no_of_packets,
2025-01-14T13:16:42.7043410Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7043480Z         iteration=0,
2025-01-14T13:16:42.7043550Z     ):
2025-01-14T13:16:42.7043710Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7043790Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7043960Z         else:
2025-01-14T13:16:42.7044030Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7044070Z     
2025-01-14T13:16:42.7044220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7044310Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7044360Z         )
2025-01-14T13:16:42.7044420Z     
2025-01-14T13:16:42.7044570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7044720Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7044930Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7045030Z         else:
2025-01-14T13:16:42.7045120Z             continuum_state = None
2025-01-14T13:16:42.7045260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7045640Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7045740Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7045830Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7045970Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7046080Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7046210Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7046290Z         ).to_numba(
2025-01-14T13:16:42.7046980Z             macro_atom_state,
2025-01-14T13:16:42.7047290Z             self.line_interaction_type,
2025-01-14T13:16:42.7047920Z         )
2025-01-14T13:16:42.7048210Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7048490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7048550Z         ]
2025-01-14T13:16:42.7048810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7048820Z 
2025-01-14T13:16:42.7048940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7053350Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-14T13:16:42.7053360Z 
2025-01-14T13:16:42.7054080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7054400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7054410Z 
2025-01-14T13:16:42.7054470Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7055230Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7055460Z         """
2025-01-14T13:16:42.7055740Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7055880Z     
2025-01-14T13:16:42.7056060Z         Parameters:
2025-01-14T13:16:42.7056230Z         -----------
2025-01-14T13:16:42.7056570Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7056890Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7057030Z     
2025-01-14T13:16:42.7057190Z         Returns:
2025-01-14T13:16:42.7063230Z         --------
2025-01-14T13:16:42.7063360Z         A TARDIS simulation object.
2025-01-14T13:16:42.7063410Z         """
2025-01-14T13:16:42.7064700Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7064850Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7064980Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7065150Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7065280Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7065910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7065990Z >       sim = run_tardis(
2025-01-14T13:16:42.7067140Z             config_verysimple,
2025-01-14T13:16:42.7067210Z             atom_data=atomic_data,
2025-01-14T13:16:42.7067260Z         )
2025-01-14T13:16:42.7067260Z 
2025-01-14T13:16:42.7067370Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7067460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7067530Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7067600Z     simulation.run_convergence()
2025-01-14T13:16:42.7067680Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7067800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7067870Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7068010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7068110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7068110Z 
2025-01-14T13:16:42.7070540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7070740Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7070930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7074710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7074850Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7074970Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7074970Z 
2025-01-14T13:16:42.7075040Z     def initialize_transport_state(
2025-01-14T13:16:42.7075090Z         self,
2025-01-14T13:16:42.7075150Z         simulation_state,
2025-01-14T13:16:42.7075200Z         opacity_state,
2025-01-14T13:16:42.7075260Z         macro_atom_state,
2025-01-14T13:16:42.7075300Z         plasma,
2025-01-14T13:16:42.7075350Z         no_of_packets,
2025-01-14T13:16:42.7075420Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7075480Z         iteration=0,
2025-01-14T13:16:42.7076410Z     ):
2025-01-14T13:16:42.7076550Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7076630Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7076680Z         else:
2025-01-14T13:16:42.7076740Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7076810Z     
2025-01-14T13:16:42.7078100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7078200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7078250Z         )
2025-01-14T13:16:42.7078290Z     
2025-01-14T13:16:42.7078400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7078490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7078620Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7078670Z         else:
2025-01-14T13:16:42.7078730Z             continuum_state = None
2025-01-14T13:16:42.7078820Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7078910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7078970Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7079060Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7079140Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7079220Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7079290Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7079340Z         ).to_numba(
2025-01-14T13:16:42.7079400Z             macro_atom_state,
2025-01-14T13:16:42.7079470Z             self.line_interaction_type,
2025-01-14T13:16:42.7079510Z         )
2025-01-14T13:16:42.7079580Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7079800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7080010Z         ]
2025-01-14T13:16:42.7080280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7080280Z 
2025-01-14T13:16:42.7080410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7080630Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-14T13:16:42.7080630Z 
2025-01-14T13:16:42.7081200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7085380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7085390Z 
2025-01-14T13:16:42.7085470Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7085600Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7085650Z         """
2025-01-14T13:16:42.7085740Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7085790Z     
2025-01-14T13:16:42.7085840Z         Parameters:
2025-01-14T13:16:42.7085890Z         -----------
2025-01-14T13:16:42.7087020Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7090660Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7090740Z     
2025-01-14T13:16:42.7090790Z         Returns:
2025-01-14T13:16:42.7090840Z         --------
2025-01-14T13:16:42.7090910Z         A TARDIS simulation object.
2025-01-14T13:16:42.7090960Z         """
2025-01-14T13:16:42.7091060Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7091580Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7091710Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7092700Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7094840Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7095080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7095240Z >       sim = run_tardis(
2025-01-14T13:16:42.7095430Z             config_verysimple,
2025-01-14T13:16:42.7095590Z             atom_data=atomic_data,
2025-01-14T13:16:42.7095740Z         )
2025-01-14T13:16:42.7095740Z 
2025-01-14T13:16:42.7096040Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7096300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7096480Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7096670Z     simulation.run_convergence()
2025-01-14T13:16:42.7096930Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7097230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7097450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7097830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7098080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7098090Z 
2025-01-14T13:16:42.7098650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7099110Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7099600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7100200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7100530Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7100870Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7100880Z 
2025-01-14T13:16:42.7101100Z     def initialize_transport_state(
2025-01-14T13:16:42.7101530Z         self,
2025-01-14T13:16:42.7101700Z         simulation_state,
2025-01-14T13:16:42.7101860Z         opacity_state,
2025-01-14T13:16:42.7102030Z         macro_atom_state,
2025-01-14T13:16:42.7102180Z         plasma,
2025-01-14T13:16:42.7102330Z         no_of_packets,
2025-01-14T13:16:42.7102500Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7102670Z         iteration=0,
2025-01-14T13:16:42.7102820Z     ):
2025-01-14T13:16:42.7103090Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7103540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7103680Z         else:
2025-01-14T13:16:42.7103850Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7104000Z     
2025-01-14T13:16:42.7104320Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7104590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7104750Z         )
2025-01-14T13:16:42.7104900Z     
2025-01-14T13:16:42.7105190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7105520Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7105900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7106060Z         else:
2025-01-14T13:16:42.7106240Z             continuum_state = None
2025-01-14T13:16:42.7136930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7138170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7138450Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7138580Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7138650Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7138730Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7138810Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7138860Z         ).to_numba(
2025-01-14T13:16:42.7138920Z             macro_atom_state,
2025-01-14T13:16:42.7139020Z             self.line_interaction_type,
2025-01-14T13:16:42.7139070Z         )
2025-01-14T13:16:42.7139640Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7139890Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7139940Z         ]
2025-01-14T13:16:42.7140210Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7140210Z 
2025-01-14T13:16:42.7140330Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7140550Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-14T13:16:42.7140550Z 
2025-01-14T13:16:42.7141120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7141750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7141760Z 
2025-01-14T13:16:42.7141840Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7141960Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7142010Z         """
2025-01-14T13:16:42.7142100Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7142150Z     
2025-01-14T13:16:42.7142200Z         Parameters:
2025-01-14T13:16:42.7142260Z         -----------
2025-01-14T13:16:42.7142360Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7142890Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7142960Z     
2025-01-14T13:16:42.7143010Z         Returns:
2025-01-14T13:16:42.7143060Z         --------
2025-01-14T13:16:42.7143120Z         A TARDIS simulation object.
2025-01-14T13:16:42.7143360Z         """
2025-01-14T13:16:42.7143450Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7143800Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7144340Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7145010Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7145150Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7145220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7145280Z >       sim = run_tardis(
2025-01-14T13:16:42.7145340Z             config_verysimple,
2025-01-14T13:16:42.7145400Z             atom_data=atomic_data,
2025-01-14T13:16:42.7145450Z         )
2025-01-14T13:16:42.7145450Z 
2025-01-14T13:16:42.7145570Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7145660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7145740Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7145810Z     simulation.run_convergence()
2025-01-14T13:16:42.7146930Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7147070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7147150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7147280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7147380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7147380Z 
2025-01-14T13:16:42.7147610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7147770Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7147970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7148200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7150680Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7151130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7151140Z 
2025-01-14T13:16:42.7151220Z     def initialize_transport_state(
2025-01-14T13:16:42.7151520Z         self,
2025-01-14T13:16:42.7151610Z         simulation_state,
2025-01-14T13:16:42.7151670Z         opacity_state,
2025-01-14T13:16:42.7151730Z         macro_atom_state,
2025-01-14T13:16:42.7151780Z         plasma,
2025-01-14T13:16:42.7151830Z         no_of_packets,
2025-01-14T13:16:42.7151900Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7151950Z         iteration=0,
2025-01-14T13:16:42.7152000Z     ):
2025-01-14T13:16:42.7152110Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7152180Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7152230Z         else:
2025-01-14T13:16:42.7152290Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7152340Z     
2025-01-14T13:16:42.7152460Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7152540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7152590Z         )
2025-01-14T13:16:42.7152630Z     
2025-01-14T13:16:42.7152750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7152840Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7152980Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7153030Z         else:
2025-01-14T13:16:42.7153090Z             continuum_state = None
2025-01-14T13:16:42.7153180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7153260Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7153350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7153750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7153850Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7154930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7155010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7155060Z         ).to_numba(
2025-01-14T13:16:42.7155120Z             macro_atom_state,
2025-01-14T13:16:42.7155190Z             self.line_interaction_type,
2025-01-14T13:16:42.7155250Z         )
2025-01-14T13:16:42.7155330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7155550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7155610Z         ]
2025-01-14T13:16:42.7155870Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7155870Z 
2025-01-14T13:16:42.7155990Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7156220Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-14T13:16:42.7156230Z 
2025-01-14T13:16:42.7156800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7157100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7157110Z 
2025-01-14T13:16:42.7157180Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7157290Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7157330Z         """
2025-01-14T13:16:42.7157420Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7157460Z     
2025-01-14T13:16:42.7157510Z         Parameters:
2025-01-14T13:16:42.7157560Z         -----------
2025-01-14T13:16:42.7157680Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7157900Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7157950Z     
2025-01-14T13:16:42.7158000Z         Returns:
2025-01-14T13:16:42.7158050Z         --------
2025-01-14T13:16:42.7158110Z         A TARDIS simulation object.
2025-01-14T13:16:42.7158150Z         """
2025-01-14T13:16:42.7158240Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7158340Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7158440Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7158580Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7158690Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7158760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7158810Z >       sim = run_tardis(
2025-01-14T13:16:42.7158870Z             config_verysimple,
2025-01-14T13:16:42.7163340Z             atom_data=atomic_data,
2025-01-14T13:16:42.7163390Z         )
2025-01-14T13:16:42.7163400Z 
2025-01-14T13:16:42.7163510Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7163590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7163660Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7163720Z     simulation.run_convergence()
2025-01-14T13:16:42.7163800Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7163910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7163980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7164100Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7164180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7164190Z 
2025-01-14T13:16:42.7164400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7164640Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7164820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7165040Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7165160Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7165270Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7165280Z 
2025-01-14T13:16:42.7165340Z     def initialize_transport_state(
2025-01-14T13:16:42.7165380Z         self,
2025-01-14T13:16:42.7165430Z         simulation_state,
2025-01-14T13:16:42.7165490Z         opacity_state,
2025-01-14T13:16:42.7165540Z         macro_atom_state,
2025-01-14T13:16:42.7165580Z         plasma,
2025-01-14T13:16:42.7165630Z         no_of_packets,
2025-01-14T13:16:42.7165690Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7165740Z         iteration=0,
2025-01-14T13:16:42.7165790Z     ):
2025-01-14T13:16:42.7165890Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7165960Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7166000Z         else:
2025-01-14T13:16:42.7166070Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7166110Z     
2025-01-14T13:16:42.7166210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7166290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7166330Z         )
2025-01-14T13:16:42.7166380Z     
2025-01-14T13:16:42.7166470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7166560Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7166690Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7166730Z         else:
2025-01-14T13:16:42.7166790Z             continuum_state = None
2025-01-14T13:16:42.7166860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7167000Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7167070Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7167150Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7167220Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7167290Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7167350Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7167410Z         ).to_numba(
2025-01-14T13:16:42.7167460Z             macro_atom_state,
2025-01-14T13:16:42.7167520Z             self.line_interaction_type,
2025-01-14T13:16:42.7167560Z         )
2025-01-14T13:16:42.7167640Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7167860Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7167900Z         ]
2025-01-14T13:16:42.7168150Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7168150Z 
2025-01-14T13:16:42.7168270Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7168480Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-14T13:16:42.7168490Z 
2025-01-14T13:16:42.7169020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7169300Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7169300Z 
2025-01-14T13:16:42.7169360Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7169480Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7169570Z         """
2025-01-14T13:16:42.7169660Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7169700Z     
2025-01-14T13:16:42.7169750Z         Parameters:
2025-01-14T13:16:42.7169800Z         -----------
2025-01-14T13:16:42.7169900Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7170020Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7170060Z     
2025-01-14T13:16:42.7170100Z         Returns:
2025-01-14T13:16:42.7170150Z         --------
2025-01-14T13:16:42.7170200Z         A TARDIS simulation object.
2025-01-14T13:16:42.7170250Z         """
2025-01-14T13:16:42.7170330Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7170430Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7170530Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7170670Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7170780Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7170850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7170900Z >       sim = run_tardis(
2025-01-14T13:16:42.7170960Z             config_verysimple,
2025-01-14T13:16:42.7171010Z             atom_data=atomic_data,
2025-01-14T13:16:42.7171060Z         )
2025-01-14T13:16:42.7171060Z 
2025-01-14T13:16:42.7171160Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7171250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7171310Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7171370Z     simulation.run_convergence()
2025-01-14T13:16:42.7171460Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7171570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7171630Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7171750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7171890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7171900Z 
2025-01-14T13:16:42.7172120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7172280Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7172450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7172670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7172790Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7172910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7172910Z 
2025-01-14T13:16:42.7172970Z     def initialize_transport_state(
2025-01-14T13:16:42.7173010Z         self,
2025-01-14T13:16:42.7173060Z         simulation_state,
2025-01-14T13:16:42.7173120Z         opacity_state,
2025-01-14T13:16:42.7173170Z         macro_atom_state,
2025-01-14T13:16:42.7173210Z         plasma,
2025-01-14T13:16:42.7173260Z         no_of_packets,
2025-01-14T13:16:42.7173320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7173360Z         iteration=0,
2025-01-14T13:16:42.7173400Z     ):
2025-01-14T13:16:42.7173500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7173570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7173620Z         else:
2025-01-14T13:16:42.7173670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7173720Z     
2025-01-14T13:16:42.7173820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7173890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7173930Z         )
2025-01-14T13:16:42.7173970Z     
2025-01-14T13:16:42.7174070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7174200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7174330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7174370Z         else:
2025-01-14T13:16:42.7174430Z             continuum_state = None
2025-01-14T13:16:42.7174510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7174590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7174660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7174740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7174810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7174880Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7174940Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7174990Z         ).to_numba(
2025-01-14T13:16:42.7175050Z             macro_atom_state,
2025-01-14T13:16:42.7175110Z             self.line_interaction_type,
2025-01-14T13:16:42.7175160Z         )
2025-01-14T13:16:42.7175230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7175450Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7175500Z         ]
2025-01-14T13:16:42.7175750Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7175750Z 
2025-01-14T13:16:42.7175860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7176040Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-14T13:16:42.7176050Z 
2025-01-14T13:16:42.7176570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7181270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7181350Z 
2025-01-14T13:16:42.7199950Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7200200Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7200250Z         """
2025-01-14T13:16:42.7200340Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7200390Z     
2025-01-14T13:16:42.7200440Z         Parameters:
2025-01-14T13:16:42.7200490Z         -----------
2025-01-14T13:16:42.7200600Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7200740Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7200780Z     
2025-01-14T13:16:42.7200830Z         Returns:
2025-01-14T13:16:42.7200870Z         --------
2025-01-14T13:16:42.7200940Z         A TARDIS simulation object.
2025-01-14T13:16:42.7200980Z         """
2025-01-14T13:16:42.7201070Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7201190Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7201310Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7201450Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7201550Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7201630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7201680Z >       sim = run_tardis(
2025-01-14T13:16:42.7201740Z             config_verysimple,
2025-01-14T13:16:42.7201790Z             atom_data=atomic_data,
2025-01-14T13:16:42.7201840Z         )
2025-01-14T13:16:42.7201840Z 
2025-01-14T13:16:42.7201950Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7202040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7202100Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7202170Z     simulation.run_convergence()
2025-01-14T13:16:42.7202780Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7202900Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7202970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7203090Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7203180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7203190Z 
2025-01-14T13:16:42.7203400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7203550Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7203730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7203960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7204080Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7204200Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7204200Z 
2025-01-14T13:16:42.7204260Z     def initialize_transport_state(
2025-01-14T13:16:42.7204310Z         self,
2025-01-14T13:16:42.7204360Z         simulation_state,
2025-01-14T13:16:42.7204410Z         opacity_state,
2025-01-14T13:16:42.7204460Z         macro_atom_state,
2025-01-14T13:16:42.7204500Z         plasma,
2025-01-14T13:16:42.7204550Z         no_of_packets,
2025-01-14T13:16:42.7204610Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7204650Z         iteration=0,
2025-01-14T13:16:42.7204700Z     ):
2025-01-14T13:16:42.7204790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7204860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7204910Z         else:
2025-01-14T13:16:42.7204960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7205000Z     
2025-01-14T13:16:42.7205110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7205330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7205390Z         )
2025-01-14T13:16:42.7205430Z     
2025-01-14T13:16:42.7205530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7205610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7205740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7205790Z         else:
2025-01-14T13:16:42.7205850Z             continuum_state = None
2025-01-14T13:16:42.7205920Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7206010Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7206070Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7206180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7206250Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7206320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7206390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7206440Z         ).to_numba(
2025-01-14T13:16:42.7206500Z             macro_atom_state,
2025-01-14T13:16:42.7207440Z             self.line_interaction_type,
2025-01-14T13:16:42.7208000Z         )
2025-01-14T13:16:42.7208380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7209490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7209630Z         ]
2025-01-14T13:16:42.7211250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7211280Z 
2025-01-14T13:16:42.7211860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7212730Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-14T13:16:42.7212740Z 
2025-01-14T13:16:42.7216080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7217040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7217060Z 
2025-01-14T13:16:42.7217270Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7217580Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7217720Z         """
2025-01-14T13:16:42.7217960Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7218100Z     
2025-01-14T13:16:42.7218250Z         Parameters:
2025-01-14T13:16:42.7218410Z         -----------
2025-01-14T13:16:42.7218700Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7219010Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7219170Z     
2025-01-14T13:16:42.7219310Z         Returns:
2025-01-14T13:16:42.7219460Z         --------
2025-01-14T13:16:42.7219640Z         A TARDIS simulation object.
2025-01-14T13:16:42.7219780Z         """
2025-01-14T13:16:42.7220010Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7220280Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7220560Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7220940Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7221220Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7221430Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7221580Z >       sim = run_tardis(
2025-01-14T13:16:42.7221750Z             config_verysimple,
2025-01-14T13:16:42.7221920Z             atom_data=atomic_data,
2025-01-14T13:16:42.7222070Z         )
2025-01-14T13:16:42.7222080Z 
2025-01-14T13:16:42.7222390Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7223110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7223320Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7223500Z     simulation.run_convergence()
2025-01-14T13:16:42.7223750Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7226240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7226680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7227030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7227320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7227330Z 
2025-01-14T13:16:42.7227980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7228450Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7228990Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7229600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7229970Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7230600Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7230620Z 
2025-01-14T13:16:42.7231010Z     def initialize_transport_state(
2025-01-14T13:16:42.7231330Z         self,
2025-01-14T13:16:42.7231700Z         simulation_state,
2025-01-14T13:16:42.7232000Z         opacity_state,
2025-01-14T13:16:42.7232420Z         macro_atom_state,
2025-01-14T13:16:42.7233110Z         plasma,
2025-01-14T13:16:42.7233490Z         no_of_packets,
2025-01-14T13:16:42.7233630Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7233700Z         iteration=0,
2025-01-14T13:16:42.7233750Z     ):
2025-01-14T13:16:42.7233860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7234310Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7234360Z         else:
2025-01-14T13:16:42.7234420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7234460Z     
2025-01-14T13:16:42.7234580Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7234690Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7234750Z         )
2025-01-14T13:16:42.7234790Z     
2025-01-14T13:16:42.7234890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7234980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7235110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7235160Z         else:
2025-01-14T13:16:42.7235230Z             continuum_state = None
2025-01-14T13:16:42.7235320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7235410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7235480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7235570Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7235650Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7235710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7235780Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7235830Z         ).to_numba(
2025-01-14T13:16:42.7235880Z             macro_atom_state,
2025-01-14T13:16:42.7235950Z             self.line_interaction_type,
2025-01-14T13:16:42.7236010Z         )
2025-01-14T13:16:42.7236090Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7236600Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7236670Z         ]
2025-01-14T13:16:42.7236940Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7236950Z 
2025-01-14T13:16:42.7237240Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7237440Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-14T13:16:42.7237450Z 
2025-01-14T13:16:42.7238040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7238360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7238370Z 
2025-01-14T13:16:42.7238440Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7238560Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7238600Z         """
2025-01-14T13:16:42.7238700Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7238750Z     
2025-01-14T13:16:42.7238800Z         Parameters:
2025-01-14T13:16:42.7238850Z         -----------
2025-01-14T13:16:42.7238970Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7239090Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7239130Z     
2025-01-14T13:16:42.7239180Z         Returns:
2025-01-14T13:16:42.7239240Z         --------
2025-01-14T13:16:42.7239300Z         A TARDIS simulation object.
2025-01-14T13:16:42.7239340Z         """
2025-01-14T13:16:42.7239430Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7239530Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7239640Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7239790Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7239920Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7240080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7240140Z >       sim = run_tardis(
2025-01-14T13:16:42.7240200Z             config_verysimple,
2025-01-14T13:16:42.7240270Z             atom_data=atomic_data,
2025-01-14T13:16:42.7240320Z         )
2025-01-14T13:16:42.7240320Z 
2025-01-14T13:16:42.7240430Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7240540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7240610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7240670Z     simulation.run_convergence()
2025-01-14T13:16:42.7240780Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7240890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7240960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7241200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7241300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7241300Z 
2025-01-14T13:16:42.7241540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7241710Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7241900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7242130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7242280Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7242390Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7242400Z 
2025-01-14T13:16:42.7242460Z     def initialize_transport_state(
2025-01-14T13:16:42.7242510Z         self,
2025-01-14T13:16:42.7242560Z         simulation_state,
2025-01-14T13:16:42.7242610Z         opacity_state,
2025-01-14T13:16:42.7242660Z         macro_atom_state,
2025-01-14T13:16:42.7242710Z         plasma,
2025-01-14T13:16:42.7243050Z         no_of_packets,
2025-01-14T13:16:42.7243120Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7243170Z         iteration=0,
2025-01-14T13:16:42.7243210Z     ):
2025-01-14T13:16:42.7243300Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7243380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7243420Z         else:
2025-01-14T13:16:42.7243480Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7243520Z     
2025-01-14T13:16:42.7243630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7243710Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7243750Z         )
2025-01-14T13:16:42.7243790Z     
2025-01-14T13:16:42.7243890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7243980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7244100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7244150Z         else:
2025-01-14T13:16:42.7244220Z             continuum_state = None
2025-01-14T13:16:42.7244300Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7244390Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7244460Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7244540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7244610Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7244680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7244740Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7244790Z         ).to_numba(
2025-01-14T13:16:42.7244840Z             macro_atom_state,
2025-01-14T13:16:42.7244900Z             self.line_interaction_type,
2025-01-14T13:16:42.7244950Z         )
2025-01-14T13:16:42.7245030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7245520Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7245570Z         ]
2025-01-14T13:16:42.7245820Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7245820Z 
2025-01-14T13:16:42.7245940Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7246120Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-14T13:16:42.7246130Z 
2025-01-14T13:16:42.7246670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7246960Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7246960Z 
2025-01-14T13:16:42.7247030Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7247140Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7247190Z         """
2025-01-14T13:16:42.7247280Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7247320Z     
2025-01-14T13:16:42.7247370Z         Parameters:
2025-01-14T13:16:42.7247410Z         -----------
2025-01-14T13:16:42.7247530Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7247640Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7247680Z     
2025-01-14T13:16:42.7247740Z         Returns:
2025-01-14T13:16:42.7247780Z         --------
2025-01-14T13:16:42.7247840Z         A TARDIS simulation object.
2025-01-14T13:16:42.7247880Z         """
2025-01-14T13:16:42.7247970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7248060Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7248170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7248370Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7248480Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7248550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7248610Z >       sim = run_tardis(
2025-01-14T13:16:42.7248670Z             config_verysimple,
2025-01-14T13:16:42.7248730Z             atom_data=atomic_data,
2025-01-14T13:16:42.7248770Z         )
2025-01-14T13:16:42.7248770Z 
2025-01-14T13:16:42.7248880Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7248970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7249030Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7249090Z     simulation.run_convergence()
2025-01-14T13:16:42.7249180Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7249290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7249360Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7249490Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7249580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7249580Z 
2025-01-14T13:16:42.7249800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7250470Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7250650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7250870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7250990Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7251100Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7251220Z 
2025-01-14T13:16:42.7251290Z     def initialize_transport_state(
2025-01-14T13:16:42.7251330Z         self,
2025-01-14T13:16:42.7251380Z         simulation_state,
2025-01-14T13:16:42.7251440Z         opacity_state,
2025-01-14T13:16:42.7251490Z         macro_atom_state,
2025-01-14T13:16:42.7251550Z         plasma,
2025-01-14T13:16:42.7251590Z         no_of_packets,
2025-01-14T13:16:42.7251660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7251710Z         iteration=0,
2025-01-14T13:16:42.7251750Z     ):
2025-01-14T13:16:42.7251850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7251910Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7251960Z         else:
2025-01-14T13:16:42.7252010Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7252050Z     
2025-01-14T13:16:42.7252150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7252230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7252270Z         )
2025-01-14T13:16:42.7252320Z     
2025-01-14T13:16:42.7252420Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7252510Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7252630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7252680Z         else:
2025-01-14T13:16:42.7252740Z             continuum_state = None
2025-01-14T13:16:42.7252810Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7252900Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7252960Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7253040Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7253110Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7253180Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7253250Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7253300Z         ).to_numba(
2025-01-14T13:16:42.7253350Z             macro_atom_state,
2025-01-14T13:16:42.7253460Z             self.line_interaction_type,
2025-01-14T13:16:42.7253510Z         )
2025-01-14T13:16:42.7253590Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7253810Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7253850Z         ]
2025-01-14T13:16:42.7254100Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7254100Z 
2025-01-14T13:16:42.7254220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7254390Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-14T13:16:42.7254400Z 
2025-01-14T13:16:42.7254960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7255260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7255260Z 
2025-01-14T13:16:42.7255330Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7255440Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7255480Z         """
2025-01-14T13:16:42.7255560Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7255600Z     
2025-01-14T13:16:42.7255650Z         Parameters:
2025-01-14T13:16:42.7255700Z         -----------
2025-01-14T13:16:42.7255810Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7255920Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7255970Z     
2025-01-14T13:16:42.7256020Z         Returns:
2025-01-14T13:16:42.7256170Z         --------
2025-01-14T13:16:42.7256240Z         A TARDIS simulation object.
2025-01-14T13:16:42.7256280Z         """
2025-01-14T13:16:42.7256370Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7256470Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7256570Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7256710Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7256820Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7256890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7256940Z >       sim = run_tardis(
2025-01-14T13:16:42.7256990Z             config_verysimple,
2025-01-14T13:16:42.7257060Z             atom_data=atomic_data,
2025-01-14T13:16:42.7257110Z         )
2025-01-14T13:16:42.7257120Z 
2025-01-14T13:16:42.7257220Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7257310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7257370Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7262370Z     simulation.run_convergence()
2025-01-14T13:16:42.7262460Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7262580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7262650Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7262770Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7262870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7262870Z 
2025-01-14T13:16:42.7263070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7263240Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7263410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7263760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7263880Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7263990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7264000Z 
2025-01-14T13:16:42.7264060Z     def initialize_transport_state(
2025-01-14T13:16:42.7264450Z         self,
2025-01-14T13:16:42.7264540Z         simulation_state,
2025-01-14T13:16:42.7264600Z         opacity_state,
2025-01-14T13:16:42.7264650Z         macro_atom_state,
2025-01-14T13:16:42.7264700Z         plasma,
2025-01-14T13:16:42.7264760Z         no_of_packets,
2025-01-14T13:16:42.7264830Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7264880Z         iteration=0,
2025-01-14T13:16:42.7264930Z     ):
2025-01-14T13:16:42.7265040Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7265110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7265170Z         else:
2025-01-14T13:16:42.7265220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7265270Z     
2025-01-14T13:16:42.7265390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7265470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7265520Z         )
2025-01-14T13:16:42.7265560Z     
2025-01-14T13:16:42.7265670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7265750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7265880Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7265930Z         else:
2025-01-14T13:16:42.7265990Z             continuum_state = None
2025-01-14T13:16:42.7266070Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7266150Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7266220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7266440Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7266520Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7266600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7266660Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7266710Z         ).to_numba(
2025-01-14T13:16:42.7266770Z             macro_atom_state,
2025-01-14T13:16:42.7266830Z             self.line_interaction_type,
2025-01-14T13:16:42.7266870Z         )
2025-01-14T13:16:42.7266950Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7267180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7267220Z         ]
2025-01-14T13:16:42.7267470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7267480Z 
2025-01-14T13:16:42.7267600Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7267790Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-14T13:16:42.7267800Z 
2025-01-14T13:16:42.7268350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7268640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7268640Z 
2025-01-14T13:16:42.7268700Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7268810Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7268860Z         """
2025-01-14T13:16:42.7268940Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7268990Z     
2025-01-14T13:16:42.7269030Z         Parameters:
2025-01-14T13:16:42.7269090Z         -----------
2025-01-14T13:16:42.7269480Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7269630Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7269680Z     
2025-01-14T13:16:42.7269720Z         Returns:
2025-01-14T13:16:42.7269770Z         --------
2025-01-14T13:16:42.7269830Z         A TARDIS simulation object.
2025-01-14T13:16:42.7269870Z         """
2025-01-14T13:16:42.7269970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7270070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7270350Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7270500Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7270630Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7270700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7270750Z >       sim = run_tardis(
2025-01-14T13:16:42.7270820Z             config_verysimple,
2025-01-14T13:16:42.7270870Z             atom_data=atomic_data,
2025-01-14T13:16:42.7270930Z         )
2025-01-14T13:16:42.7270930Z 
2025-01-14T13:16:42.7271040Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7271130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7271190Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7271260Z     simulation.run_convergence()
2025-01-14T13:16:42.7271340Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7271450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7271520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7271630Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7271730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7271730Z 
2025-01-14T13:16:42.7272190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7272360Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7272540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7272760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7272890Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7272990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7273000Z 
2025-01-14T13:16:42.7273060Z     def initialize_transport_state(
2025-01-14T13:16:42.7273110Z         self,
2025-01-14T13:16:42.7273160Z         simulation_state,
2025-01-14T13:16:42.7273210Z         opacity_state,
2025-01-14T13:16:42.7273260Z         macro_atom_state,
2025-01-14T13:16:42.7273310Z         plasma,
2025-01-14T13:16:42.7273360Z         no_of_packets,
2025-01-14T13:16:42.7273420Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7273460Z         iteration=0,
2025-01-14T13:16:42.7273530Z     ):
2025-01-14T13:16:42.7273630Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7273700Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7273740Z         else:
2025-01-14T13:16:42.7273800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7273840Z     
2025-01-14T13:16:42.7273950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7274020Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7274060Z         )
2025-01-14T13:16:42.7274100Z     
2025-01-14T13:16:42.7274210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7274290Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7274590Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7274640Z         else:
2025-01-14T13:16:42.7274700Z             continuum_state = None
2025-01-14T13:16:42.7274870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7274960Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7275030Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7275110Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7275180Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7275250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7275320Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7275370Z         ).to_numba(
2025-01-14T13:16:42.7275420Z             macro_atom_state,
2025-01-14T13:16:42.7275480Z             self.line_interaction_type,
2025-01-14T13:16:42.7275530Z         )
2025-01-14T13:16:42.7275600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7275820Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7275870Z         ]
2025-01-14T13:16:42.7276120Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7276130Z 
2025-01-14T13:16:42.7276240Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7276410Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-14T13:16:42.7276420Z 
2025-01-14T13:16:42.7276960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7277240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7277250Z 
2025-01-14T13:16:42.7277310Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7277480Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7277520Z         """
2025-01-14T13:16:42.7277610Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7277650Z     
2025-01-14T13:16:42.7277700Z         Parameters:
2025-01-14T13:16:42.7277740Z         -----------
2025-01-14T13:16:42.7277850Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7277960Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7278010Z     
2025-01-14T13:16:42.7278050Z         Returns:
2025-01-14T13:16:42.7278100Z         --------
2025-01-14T13:16:42.7278150Z         A TARDIS simulation object.
2025-01-14T13:16:42.7278200Z         """
2025-01-14T13:16:42.7278280Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7278380Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7278480Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7278630Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7278740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7278810Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7278860Z >       sim = run_tardis(
2025-01-14T13:16:42.7278910Z             config_verysimple,
2025-01-14T13:16:42.7278970Z             atom_data=atomic_data,
2025-01-14T13:16:42.7279010Z         )
2025-01-14T13:16:42.7279010Z 
2025-01-14T13:16:42.7279120Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7279200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7279270Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7279330Z     simulation.run_convergence()
2025-01-14T13:16:42.7279410Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7279520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7279590Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7279760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7279850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7279850Z 
2025-01-14T13:16:42.7280060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7280220Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7280400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7280620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7280740Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7280850Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7280850Z 
2025-01-14T13:16:42.7280910Z     def initialize_transport_state(
2025-01-14T13:16:42.7280960Z         self,
2025-01-14T13:16:42.7281010Z         simulation_state,
2025-01-14T13:16:42.7281070Z         opacity_state,
2025-01-14T13:16:42.7281120Z         macro_atom_state,
2025-01-14T13:16:42.7281280Z         plasma,
2025-01-14T13:16:42.7281330Z         no_of_packets,
2025-01-14T13:16:42.7281390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7281440Z         iteration=0,
2025-01-14T13:16:42.7281490Z     ):
2025-01-14T13:16:42.7281580Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7281660Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7281700Z         else:
2025-01-14T13:16:42.7281750Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7281790Z     
2025-01-14T13:16:42.7281900Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7281970Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7282010Z         )
2025-01-14T13:16:42.7282060Z     
2025-01-14T13:16:42.7282150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7282320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7282450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7282500Z         else:
2025-01-14T13:16:42.7282550Z             continuum_state = None
2025-01-14T13:16:42.7282620Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7282710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7282780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7282860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7282930Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7282990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7283060Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7283100Z         ).to_numba(
2025-01-14T13:16:42.7283160Z             macro_atom_state,
2025-01-14T13:16:42.7283220Z             self.line_interaction_type,
2025-01-14T13:16:42.7283260Z         )
2025-01-14T13:16:42.7283340Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7283560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7283610Z         ]
2025-01-14T13:16:42.7283860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7283860Z 
2025-01-14T13:16:42.7283970Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7284150Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-14T13:16:42.7284150Z 
2025-01-14T13:16:42.7284710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7285070Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7285070Z 
2025-01-14T13:16:42.7285140Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7285250Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7285290Z         """
2025-01-14T13:16:42.7285390Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7285430Z     
2025-01-14T13:16:42.7285480Z         Parameters:
2025-01-14T13:16:42.7285520Z         -----------
2025-01-14T13:16:42.7285630Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7285740Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7285780Z     
2025-01-14T13:16:42.7285830Z         Returns:
2025-01-14T13:16:42.7285870Z         --------
2025-01-14T13:16:42.7285930Z         A TARDIS simulation object.
2025-01-14T13:16:42.7285980Z         """
2025-01-14T13:16:42.7286210Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7286340Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7286440Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7286580Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7286690Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7286760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7286810Z >       sim = run_tardis(
2025-01-14T13:16:42.7286870Z             config_verysimple,
2025-01-14T13:16:42.7286920Z             atom_data=atomic_data,
2025-01-14T13:16:42.7286970Z         )
2025-01-14T13:16:42.7286970Z 
2025-01-14T13:16:42.7287070Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7287160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7287340Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7287410Z     simulation.run_convergence()
2025-01-14T13:16:42.7287490Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7287600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7287670Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7287800Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7287880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7287880Z 
2025-01-14T13:16:42.7288090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7288250Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7288440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7288670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7288800Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7288910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7288920Z 
2025-01-14T13:16:42.7288980Z     def initialize_transport_state(
2025-01-14T13:16:42.7289030Z         self,
2025-01-14T13:16:42.7289080Z         simulation_state,
2025-01-14T13:16:42.7289130Z         opacity_state,
2025-01-14T13:16:42.7289180Z         macro_atom_state,
2025-01-14T13:16:42.7289230Z         plasma,
2025-01-14T13:16:42.7289280Z         no_of_packets,
2025-01-14T13:16:42.7289340Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7289940Z         iteration=0,
2025-01-14T13:16:42.7290000Z     ):
2025-01-14T13:16:42.7290100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7290170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7290210Z         else:
2025-01-14T13:16:42.7290270Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7290330Z     
2025-01-14T13:16:42.7290710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7290800Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7290840Z         )
2025-01-14T13:16:42.7290890Z     
2025-01-14T13:16:42.7290990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7291070Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7291240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7291290Z         else:
2025-01-14T13:16:42.7291340Z             continuum_state = None
2025-01-14T13:16:42.7291420Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7291510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7291580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7291670Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7291740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7291820Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7291890Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7291940Z         ).to_numba(
2025-01-14T13:16:42.7291990Z             macro_atom_state,
2025-01-14T13:16:42.7292060Z             self.line_interaction_type,
2025-01-14T13:16:42.7292100Z         )
2025-01-14T13:16:42.7292180Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7292410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7292450Z         ]
2025-01-14T13:16:42.7292710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7292710Z 
2025-01-14T13:16:42.7292830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7292990Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-14T13:16:42.7293230Z 
2025-01-14T13:16:42.7293790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7294080Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7294080Z 
2025-01-14T13:16:42.7294140Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7294260Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7294300Z         """
2025-01-14T13:16:42.7294380Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7294430Z     
2025-01-14T13:16:42.7294480Z         Parameters:
2025-01-14T13:16:42.7294520Z         -----------
2025-01-14T13:16:42.7294630Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7294750Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7294790Z     
2025-01-14T13:16:42.7294840Z         Returns:
2025-01-14T13:16:42.7294890Z         --------
2025-01-14T13:16:42.7294950Z         A TARDIS simulation object.
2025-01-14T13:16:42.7294990Z         """
2025-01-14T13:16:42.7295080Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7295170Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7295280Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7295430Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7295530Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7295610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7295650Z >       sim = run_tardis(
2025-01-14T13:16:42.7295710Z             config_verysimple,
2025-01-14T13:16:42.7295770Z             atom_data=atomic_data,
2025-01-14T13:16:42.7295810Z         )
2025-01-14T13:16:42.7295820Z 
2025-01-14T13:16:42.7295970Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7296070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7296130Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7296190Z     simulation.run_convergence()
2025-01-14T13:16:42.7296270Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7296380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7296450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7296570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7296660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7296660Z 
2025-01-14T13:16:42.7296870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7297030Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7297210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7297450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7297580Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7297680Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7297690Z 
2025-01-14T13:16:42.7297770Z     def initialize_transport_state(
2025-01-14T13:16:42.7297820Z         self,
2025-01-14T13:16:42.7297870Z         simulation_state,
2025-01-14T13:16:42.7297920Z         opacity_state,
2025-01-14T13:16:42.7297970Z         macro_atom_state,
2025-01-14T13:16:42.7298020Z         plasma,
2025-01-14T13:16:42.7298070Z         no_of_packets,
2025-01-14T13:16:42.7298120Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7298170Z         iteration=0,
2025-01-14T13:16:42.7298290Z     ):
2025-01-14T13:16:42.7298390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7298460Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7298510Z         else:
2025-01-14T13:16:42.7298560Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7298610Z     
2025-01-14T13:16:42.7298710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7298790Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7298830Z         )
2025-01-14T13:16:42.7298870Z     
2025-01-14T13:16:42.7298970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7299060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7299180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7299220Z         else:
2025-01-14T13:16:42.7299290Z             continuum_state = None
2025-01-14T13:16:42.7299360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7299450Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7299510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7299600Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7299680Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7299770Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7299840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7299890Z         ).to_numba(
2025-01-14T13:16:42.7299940Z             macro_atom_state,
2025-01-14T13:16:42.7300000Z             self.line_interaction_type,
2025-01-14T13:16:42.7300050Z         )
2025-01-14T13:16:42.7300120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7300330Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7300390Z         ]
2025-01-14T13:16:42.7300640Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7300650Z 
2025-01-14T13:16:42.7300840Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7301000Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-14T13:16:42.7301010Z 
2025-01-14T13:16:42.7301540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7301820Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7301820Z 
2025-01-14T13:16:42.7301880Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7301990Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7302040Z         """
2025-01-14T13:16:42.7302120Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7302170Z     
2025-01-14T13:16:42.7302220Z         Parameters:
2025-01-14T13:16:42.7302270Z         -----------
2025-01-14T13:16:42.7302370Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7302490Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7302530Z     
2025-01-14T13:16:42.7302570Z         Returns:
2025-01-14T13:16:42.7302620Z         --------
2025-01-14T13:16:42.7302670Z         A TARDIS simulation object.
2025-01-14T13:16:42.7302720Z         """
2025-01-14T13:16:42.7302800Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7302900Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7303010Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7303150Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7303250Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7303390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7303440Z >       sim = run_tardis(
2025-01-14T13:16:42.7303500Z             config_verysimple,
2025-01-14T13:16:42.7303560Z             atom_data=atomic_data,
2025-01-14T13:16:42.7303610Z         )
2025-01-14T13:16:42.7303610Z 
2025-01-14T13:16:42.7303720Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7303800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7303870Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7303920Z     simulation.run_convergence()
2025-01-14T13:16:42.7304010Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7304120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7304200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7304320Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7304410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7304420Z 
2025-01-14T13:16:42.7304620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7304790Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7304960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7305200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7305320Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7305450Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7305450Z 
2025-01-14T13:16:42.7305520Z     def initialize_transport_state(
2025-01-14T13:16:42.7305560Z         self,
2025-01-14T13:16:42.7305610Z         simulation_state,
2025-01-14T13:16:42.7305660Z         opacity_state,
2025-01-14T13:16:42.7305730Z         macro_atom_state,
2025-01-14T13:16:42.7305850Z         plasma,
2025-01-14T13:16:42.7305910Z         no_of_packets,
2025-01-14T13:16:42.7305970Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7306020Z         iteration=0,
2025-01-14T13:16:42.7306060Z     ):
2025-01-14T13:16:42.7306150Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7306230Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7306280Z         else:
2025-01-14T13:16:42.7306330Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7306370Z     
2025-01-14T13:16:42.7306480Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7306550Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7306600Z         )
2025-01-14T13:16:42.7306640Z     
2025-01-14T13:16:42.7306750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7306840Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7306980Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7307020Z         else:
2025-01-14T13:16:42.7307080Z             continuum_state = None
2025-01-14T13:16:42.7307160Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7307240Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7307330Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7307410Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7307490Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7307550Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7307630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7307670Z         ).to_numba(
2025-01-14T13:16:42.7307740Z             macro_atom_state,
2025-01-14T13:16:42.7307800Z             self.line_interaction_type,
2025-01-14T13:16:42.7307850Z         )
2025-01-14T13:16:42.7307920Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7308220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7308260Z         ]
2025-01-14T13:16:42.7308510Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7308520Z 
2025-01-14T13:16:42.7308630Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7308790Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-14T13:16:42.7308790Z 
2025-01-14T13:16:42.7309360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7309640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7309650Z 
2025-01-14T13:16:42.7309720Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7309830Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7309870Z         """
2025-01-14T13:16:42.7309960Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7310000Z     
2025-01-14T13:16:42.7310050Z         Parameters:
2025-01-14T13:16:42.7310100Z         -----------
2025-01-14T13:16:42.7310200Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7310330Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7310380Z     
2025-01-14T13:16:42.7310420Z         Returns:
2025-01-14T13:16:42.7310470Z         --------
2025-01-14T13:16:42.7310520Z         A TARDIS simulation object.
2025-01-14T13:16:42.7310570Z         """
2025-01-14T13:16:42.7310740Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7310850Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7311180Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7311350Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7311460Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7311520Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7311580Z >       sim = run_tardis(
2025-01-14T13:16:42.7311630Z             config_verysimple,
2025-01-14T13:16:42.7311690Z             atom_data=atomic_data,
2025-01-14T13:16:42.7311730Z         )
2025-01-14T13:16:42.7311730Z 
2025-01-14T13:16:42.7311840Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7311920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7311980Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7312040Z     simulation.run_convergence()
2025-01-14T13:16:42.7312130Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7312270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7312350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7317130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7317260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7317260Z 
2025-01-14T13:16:42.7318580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7319170Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7319650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7320640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7321080Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7323520Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7323540Z 
2025-01-14T13:16:42.7323970Z     def initialize_transport_state(
2025-01-14T13:16:42.7324220Z         self,
2025-01-14T13:16:42.7324310Z         simulation_state,
2025-01-14T13:16:42.7324360Z         opacity_state,
2025-01-14T13:16:42.7324410Z         macro_atom_state,
2025-01-14T13:16:42.7324470Z         plasma,
2025-01-14T13:16:42.7324520Z         no_of_packets,
2025-01-14T13:16:42.7324580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7324630Z         iteration=0,
2025-01-14T13:16:42.7324670Z     ):
2025-01-14T13:16:42.7324770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7324840Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7324890Z         else:
2025-01-14T13:16:42.7324950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7324990Z     
2025-01-14T13:16:42.7325100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7325190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7325230Z         )
2025-01-14T13:16:42.7325290Z     
2025-01-14T13:16:42.7325390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7325480Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7325600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7325660Z         else:
2025-01-14T13:16:42.7325720Z             continuum_state = None
2025-01-14T13:16:42.7325820Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7325900Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7325970Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7326050Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7326130Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7326200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7326270Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7326320Z         ).to_numba(
2025-01-14T13:16:42.7326580Z             macro_atom_state,
2025-01-14T13:16:42.7326660Z             self.line_interaction_type,
2025-01-14T13:16:42.7326710Z         )
2025-01-14T13:16:42.7326790Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7327030Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7327080Z         ]
2025-01-14T13:16:42.7327320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7327330Z 
2025-01-14T13:16:42.7327450Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7327610Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-14T13:16:42.7327610Z 
2025-01-14T13:16:42.7328170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7328460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7328470Z 
2025-01-14T13:16:42.7328540Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7328650Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7328710Z         """
2025-01-14T13:16:42.7328810Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7328850Z     
2025-01-14T13:16:42.7328910Z         Parameters:
2025-01-14T13:16:42.7328950Z         -----------
2025-01-14T13:16:42.7329060Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7329180Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7329220Z     
2025-01-14T13:16:42.7329390Z         Returns:
2025-01-14T13:16:42.7329430Z         --------
2025-01-14T13:16:42.7329490Z         A TARDIS simulation object.
2025-01-14T13:16:42.7329530Z         """
2025-01-14T13:16:42.7329620Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7329720Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7329830Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7329970Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7330070Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7330140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7330190Z >       sim = run_tardis(
2025-01-14T13:16:42.7330250Z             config_verysimple,
2025-01-14T13:16:42.7330300Z             atom_data=atomic_data,
2025-01-14T13:16:42.7330340Z         )
2025-01-14T13:16:42.7330350Z 
2025-01-14T13:16:42.7330450Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7330550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7330610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7330680Z     simulation.run_convergence()
2025-01-14T13:16:42.7330760Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7330870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7330940Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7331060Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7331150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7331150Z 
2025-01-14T13:16:42.7331360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7331520Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7331690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7331970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7332100Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7332210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7332210Z 
2025-01-14T13:16:42.7332270Z     def initialize_transport_state(
2025-01-14T13:16:42.7332320Z         self,
2025-01-14T13:16:42.7332380Z         simulation_state,
2025-01-14T13:16:42.7332430Z         opacity_state,
2025-01-14T13:16:42.7332490Z         macro_atom_state,
2025-01-14T13:16:42.7332550Z         plasma,
2025-01-14T13:16:42.7332600Z         no_of_packets,
2025-01-14T13:16:42.7332650Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7332700Z         iteration=0,
2025-01-14T13:16:42.7332760Z     ):
2025-01-14T13:16:42.7332860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7332930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7332980Z         else:
2025-01-14T13:16:42.7333040Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7333080Z     
2025-01-14T13:16:42.7333180Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7333260Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7333310Z         )
2025-01-14T13:16:42.7333350Z     
2025-01-14T13:16:42.7333450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7333540Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7333660Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7333710Z         else:
2025-01-14T13:16:42.7333760Z             continuum_state = None
2025-01-14T13:16:42.7333850Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7333930Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7334000Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7334170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7334240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7334310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7334380Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7334430Z         ).to_numba(
2025-01-14T13:16:42.7334480Z             macro_atom_state,
2025-01-14T13:16:42.7334540Z             self.line_interaction_type,
2025-01-14T13:16:42.7334580Z         )
2025-01-14T13:16:42.7334660Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7334880Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7334930Z         ]
2025-01-14T13:16:42.7335180Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7335180Z 
2025-01-14T13:16:42.7335310Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7335490Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-14T13:16:42.7335490Z 
2025-01-14T13:16:42.7336050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7336340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7336340Z 
2025-01-14T13:16:42.7336400Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7336510Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7336560Z         """
2025-01-14T13:16:42.7336650Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7336690Z     
2025-01-14T13:16:42.7336740Z         Parameters:
2025-01-14T13:16:42.7336800Z         -----------
2025-01-14T13:16:42.7336980Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7337110Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7337150Z     
2025-01-14T13:16:42.7337200Z         Returns:
2025-01-14T13:16:42.7337250Z         --------
2025-01-14T13:16:42.7337310Z         A TARDIS simulation object.
2025-01-14T13:16:42.7337350Z         """
2025-01-14T13:16:42.7337440Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7337540Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7337650Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7337790Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7337900Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7337970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7338020Z >       sim = run_tardis(
2025-01-14T13:16:42.7338100Z             config_verysimple,
2025-01-14T13:16:42.7338170Z             atom_data=atomic_data,
2025-01-14T13:16:42.7338220Z         )
2025-01-14T13:16:42.7338220Z 
2025-01-14T13:16:42.7338320Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7338610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7338680Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7338740Z     simulation.run_convergence()
2025-01-14T13:16:42.7338820Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7338930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7339000Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7339120Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7339210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7339330Z 
2025-01-14T13:16:42.7339550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7339710Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7339880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7340100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7340220Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7340330Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7340330Z 
2025-01-14T13:16:42.7340400Z     def initialize_transport_state(
2025-01-14T13:16:42.7340450Z         self,
2025-01-14T13:16:42.7340500Z         simulation_state,
2025-01-14T13:16:42.7340550Z         opacity_state,
2025-01-14T13:16:42.7340600Z         macro_atom_state,
2025-01-14T13:16:42.7340640Z         plasma,
2025-01-14T13:16:42.7340700Z         no_of_packets,
2025-01-14T13:16:42.7340750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7340810Z         iteration=0,
2025-01-14T13:16:42.7340850Z     ):
2025-01-14T13:16:42.7340940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7341010Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7341330Z         else:
2025-01-14T13:16:42.7342420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7342590Z     
2025-01-14T13:16:42.7343380Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7343870Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7344020Z         )
2025-01-14T13:16:42.7344160Z     
2025-01-14T13:16:42.7344470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7344730Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7345070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7345240Z         else:
2025-01-14T13:16:42.7345420Z             continuum_state = None
2025-01-14T13:16:42.7346940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7347260Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7348590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7348860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7349080Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7349290Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7349950Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7350390Z         ).to_numba(
2025-01-14T13:16:42.7350500Z             macro_atom_state,
2025-01-14T13:16:42.7350560Z             self.line_interaction_type,
2025-01-14T13:16:42.7350610Z         )
2025-01-14T13:16:42.7350690Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7350910Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7350970Z         ]
2025-01-14T13:16:42.7351230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7351240Z 
2025-01-14T13:16:42.7351350Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7351520Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-14T13:16:42.7351520Z 
2025-01-14T13:16:42.7352070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7352360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7352360Z 
2025-01-14T13:16:42.7352430Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7352960Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7353010Z         """
2025-01-14T13:16:42.7353100Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7353170Z     
2025-01-14T13:16:42.7353230Z         Parameters:
2025-01-14T13:16:42.7353270Z         -----------
2025-01-14T13:16:42.7353380Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7353490Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7353540Z     
2025-01-14T13:16:42.7353580Z         Returns:
2025-01-14T13:16:42.7353630Z         --------
2025-01-14T13:16:42.7353690Z         A TARDIS simulation object.
2025-01-14T13:16:42.7353730Z         """
2025-01-14T13:16:42.7353840Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7353970Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7354080Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7354230Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7354340Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7354420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7354470Z >       sim = run_tardis(
2025-01-14T13:16:42.7354530Z             config_verysimple,
2025-01-14T13:16:42.7354590Z             atom_data=atomic_data,
2025-01-14T13:16:42.7354630Z         )
2025-01-14T13:16:42.7354640Z 
2025-01-14T13:16:42.7354750Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7354840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7354920Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7354980Z     simulation.run_convergence()
2025-01-14T13:16:42.7355070Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7355180Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7355260Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7355510Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7355600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7355610Z 
2025-01-14T13:16:42.7355820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7356000Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7356180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7357100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7358180Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7358510Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7358520Z 
2025-01-14T13:16:42.7358710Z     def initialize_transport_state(
2025-01-14T13:16:42.7358870Z         self,
2025-01-14T13:16:42.7359590Z         simulation_state,
2025-01-14T13:16:42.7359680Z         opacity_state,
2025-01-14T13:16:42.7359740Z         macro_atom_state,
2025-01-14T13:16:42.7359790Z         plasma,
2025-01-14T13:16:42.7359840Z         no_of_packets,
2025-01-14T13:16:42.7359900Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7359950Z         iteration=0,
2025-01-14T13:16:42.7359990Z     ):
2025-01-14T13:16:42.7360090Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7360170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7360230Z         else:
2025-01-14T13:16:42.7360290Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7360330Z     
2025-01-14T13:16:42.7360440Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7360510Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7360570Z         )
2025-01-14T13:16:42.7360610Z     
2025-01-14T13:16:42.7360870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7360970Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7361090Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7361140Z         else:
2025-01-14T13:16:42.7361190Z             continuum_state = None
2025-01-14T13:16:42.7361270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7361490Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7361560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7361640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7361710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7361780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7361850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7361890Z         ).to_numba(
2025-01-14T13:16:42.7362100Z             macro_atom_state,
2025-01-14T13:16:42.7362180Z             self.line_interaction_type,
2025-01-14T13:16:42.7362240Z         )
2025-01-14T13:16:42.7362320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7362560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7362610Z         ]
2025-01-14T13:16:42.7362850Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7362860Z 
2025-01-14T13:16:42.7362980Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7363160Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-14T13:16:42.7363160Z 
2025-01-14T13:16:42.7363720Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7364120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7364120Z 
2025-01-14T13:16:42.7364190Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7364310Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7364350Z         """
2025-01-14T13:16:42.7364430Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7364480Z     
2025-01-14T13:16:42.7364530Z         Parameters:
2025-01-14T13:16:42.7364590Z         -----------
2025-01-14T13:16:42.7364700Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7364820Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7364860Z     
2025-01-14T13:16:42.7364910Z         Returns:
2025-01-14T13:16:42.7364960Z         --------
2025-01-14T13:16:42.7365020Z         A TARDIS simulation object.
2025-01-14T13:16:42.7365060Z         """
2025-01-14T13:16:42.7365150Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7365260Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7365360Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7365500Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7365600Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7365670Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7365730Z >       sim = run_tardis(
2025-01-14T13:16:42.7365780Z             config_verysimple,
2025-01-14T13:16:42.7365840Z             atom_data=atomic_data,
2025-01-14T13:16:42.7365880Z         )
2025-01-14T13:16:42.7365880Z 
2025-01-14T13:16:42.7366000Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7366090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7366250Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7366320Z     simulation.run_convergence()
2025-01-14T13:16:42.7366410Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7366510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7366580Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7366700Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7366790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7366790Z 
2025-01-14T13:16:42.7367000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7367160Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7367340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7367550Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7367680Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7367790Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7367800Z 
2025-01-14T13:16:42.7367860Z     def initialize_transport_state(
2025-01-14T13:16:42.7367900Z         self,
2025-01-14T13:16:42.7367960Z         simulation_state,
2025-01-14T13:16:42.7368010Z         opacity_state,
2025-01-14T13:16:42.7368050Z         macro_atom_state,
2025-01-14T13:16:42.7368100Z         plasma,
2025-01-14T13:16:42.7368150Z         no_of_packets,
2025-01-14T13:16:42.7368200Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7368250Z         iteration=0,
2025-01-14T13:16:42.7368290Z     ):
2025-01-14T13:16:42.7368390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7368470Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7368510Z         else:
2025-01-14T13:16:42.7368560Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7368610Z     
2025-01-14T13:16:42.7368770Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7368850Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7368900Z         )
2025-01-14T13:16:42.7368940Z     
2025-01-14T13:16:42.7369040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7369130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7369250Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7369290Z         else:
2025-01-14T13:16:42.7369350Z             continuum_state = None
2025-01-14T13:16:42.7369430Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7369510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7369580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7369660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7369730Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7369800Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7369860Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7369900Z         ).to_numba(
2025-01-14T13:16:42.7369960Z             macro_atom_state,
2025-01-14T13:16:42.7370020Z             self.line_interaction_type,
2025-01-14T13:16:42.7370060Z         )
2025-01-14T13:16:42.7370140Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7370360Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7370400Z         ]
2025-01-14T13:16:42.7370650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7370650Z 
2025-01-14T13:16:42.7370770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7370930Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-14T13:16:42.7370970Z 
2025-01-14T13:16:42.7371510Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7371790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7371790Z 
2025-01-14T13:16:42.7371850Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7371970Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7372020Z         """
2025-01-14T13:16:42.7372110Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7372150Z     
2025-01-14T13:16:42.7372200Z         Parameters:
2025-01-14T13:16:42.7372240Z         -----------
2025-01-14T13:16:42.7372350Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7372470Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7372520Z     
2025-01-14T13:16:42.7372570Z         Returns:
2025-01-14T13:16:42.7372610Z         --------
2025-01-14T13:16:42.7372670Z         A TARDIS simulation object.
2025-01-14T13:16:42.7372970Z         """
2025-01-14T13:16:42.7373630Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7373900Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7374200Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7375120Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7375460Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7375690Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7375870Z >       sim = run_tardis(
2025-01-14T13:16:42.7376030Z             config_verysimple,
2025-01-14T13:16:42.7376250Z             atom_data=atomic_data,
2025-01-14T13:16:42.7376400Z         )
2025-01-14T13:16:42.7376420Z 
2025-01-14T13:16:42.7377960Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7378730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7378940Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7379270Z     simulation.run_convergence()
2025-01-14T13:16:42.7379410Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7379520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7379590Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7379720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7379800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7379810Z 
2025-01-14T13:16:42.7380020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7380210Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7380390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7380630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7380760Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7380880Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7380890Z 
2025-01-14T13:16:42.7380950Z     def initialize_transport_state(
2025-01-14T13:16:42.7381010Z         self,
2025-01-14T13:16:42.7381060Z         simulation_state,
2025-01-14T13:16:42.7381110Z         opacity_state,
2025-01-14T13:16:42.7381160Z         macro_atom_state,
2025-01-14T13:16:42.7381210Z         plasma,
2025-01-14T13:16:42.7381260Z         no_of_packets,
2025-01-14T13:16:42.7381320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7381370Z         iteration=0,
2025-01-14T13:16:42.7381860Z     ):
2025-01-14T13:16:42.7381960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7382030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7382080Z         else:
2025-01-14T13:16:42.7382140Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7382180Z     
2025-01-14T13:16:42.7382280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7382360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7382400Z         )
2025-01-14T13:16:42.7382440Z     
2025-01-14T13:16:42.7382540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7382630Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7382750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7382800Z         else:
2025-01-14T13:16:42.7382850Z             continuum_state = None
2025-01-14T13:16:42.7382930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7383020Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7383090Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7383170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7383240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7383310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7383370Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7383420Z         ).to_numba(
2025-01-14T13:16:42.7383470Z             macro_atom_state,
2025-01-14T13:16:42.7383530Z             self.line_interaction_type,
2025-01-14T13:16:42.7383570Z         )
2025-01-14T13:16:42.7383650Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7383870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7383910Z         ]
2025-01-14T13:16:42.7384150Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7384250Z 
2025-01-14T13:16:42.7384360Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7384550Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-14T13:16:42.7384560Z 
2025-01-14T13:16:42.7385090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7385370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7385380Z 
2025-01-14T13:16:42.7385440Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7385550Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7385610Z         """
2025-01-14T13:16:42.7385690Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7385740Z     
2025-01-14T13:16:42.7385800Z         Parameters:
2025-01-14T13:16:42.7385860Z         -----------
2025-01-14T13:16:42.7385960Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7386090Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7386130Z     
2025-01-14T13:16:42.7386180Z         Returns:
2025-01-14T13:16:42.7386220Z         --------
2025-01-14T13:16:42.7386290Z         A TARDIS simulation object.
2025-01-14T13:16:42.7386330Z         """
2025-01-14T13:16:42.7386420Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7386510Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7386610Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7386760Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7386950Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7387030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7387080Z >       sim = run_tardis(
2025-01-14T13:16:42.7387140Z             config_verysimple,
2025-01-14T13:16:42.7387190Z             atom_data=atomic_data,
2025-01-14T13:16:42.7387250Z         )
2025-01-14T13:16:42.7387260Z 
2025-01-14T13:16:42.7387370Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7387460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7387520Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7387590Z     simulation.run_convergence()
2025-01-14T13:16:42.7387670Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7387790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7387860Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7387980Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7388080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7388080Z 
2025-01-14T13:16:42.7388290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7388450Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7388630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7394160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7394330Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7394450Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7394450Z 
2025-01-14T13:16:42.7394510Z     def initialize_transport_state(
2025-01-14T13:16:42.7394560Z         self,
2025-01-14T13:16:42.7394610Z         simulation_state,
2025-01-14T13:16:42.7394670Z         opacity_state,
2025-01-14T13:16:42.7394720Z         macro_atom_state,
2025-01-14T13:16:42.7394940Z         plasma,
2025-01-14T13:16:42.7395000Z         no_of_packets,
2025-01-14T13:16:42.7395060Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7395100Z         iteration=0,
2025-01-14T13:16:42.7395140Z     ):
2025-01-14T13:16:42.7395240Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7395310Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7395360Z         else:
2025-01-14T13:16:42.7395410Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7395460Z     
2025-01-14T13:16:42.7395560Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7395630Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7395670Z         )
2025-01-14T13:16:42.7395720Z     
2025-01-14T13:16:42.7395820Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7395900Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7396030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7396080Z         else:
2025-01-14T13:16:42.7396140Z             continuum_state = None
2025-01-14T13:16:42.7396220Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7396300Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7396370Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7396450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7396520Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7396600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7396660Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7396710Z         ).to_numba(
2025-01-14T13:16:42.7396760Z             macro_atom_state,
2025-01-14T13:16:42.7396830Z             self.line_interaction_type,
2025-01-14T13:16:42.7396890Z         )
2025-01-14T13:16:42.7397070Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7397290Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7397340Z         ]
2025-01-14T13:16:42.7397590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7397600Z 
2025-01-14T13:16:42.7397710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7397900Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-14T13:16:42.7397900Z 
2025-01-14T13:16:42.7398630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7398940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7398950Z 
2025-01-14T13:16:42.7399030Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7399140Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7399190Z         """
2025-01-14T13:16:42.7399280Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7399330Z     
2025-01-14T13:16:42.7399380Z         Parameters:
2025-01-14T13:16:42.7399430Z         -----------
2025-01-14T13:16:42.7399530Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7399640Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7399690Z     
2025-01-14T13:16:42.7399730Z         Returns:
2025-01-14T13:16:42.7399790Z         --------
2025-01-14T13:16:42.7399840Z         A TARDIS simulation object.
2025-01-14T13:16:42.7399890Z         """
2025-01-14T13:16:42.7399970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7400080Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7400290Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7400440Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7400570Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7400640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7400690Z >       sim = run_tardis(
2025-01-14T13:16:42.7400750Z             config_verysimple,
2025-01-14T13:16:42.7400800Z             atom_data=atomic_data,
2025-01-14T13:16:42.7400850Z         )
2025-01-14T13:16:42.7400850Z 
2025-01-14T13:16:42.7400970Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7401090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7401160Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7401220Z     simulation.run_convergence()
2025-01-14T13:16:42.7401310Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7401430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7401630Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7401920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7402020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7402030Z 
2025-01-14T13:16:42.7402250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7402420Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7402590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7402810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7402940Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7403140Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7403150Z 
2025-01-14T13:16:42.7403210Z     def initialize_transport_state(
2025-01-14T13:16:42.7403260Z         self,
2025-01-14T13:16:42.7403310Z         simulation_state,
2025-01-14T13:16:42.7403370Z         opacity_state,
2025-01-14T13:16:42.7403430Z         macro_atom_state,
2025-01-14T13:16:42.7403470Z         plasma,
2025-01-14T13:16:42.7403520Z         no_of_packets,
2025-01-14T13:16:42.7403580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7403620Z         iteration=0,
2025-01-14T13:16:42.7403670Z     ):
2025-01-14T13:16:42.7403760Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7403830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7403880Z         else:
2025-01-14T13:16:42.7403940Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7403980Z     
2025-01-14T13:16:42.7404090Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7404160Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7404210Z         )
2025-01-14T13:16:42.7404250Z     
2025-01-14T13:16:42.7404360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7404450Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7404570Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7404620Z         else:
2025-01-14T13:16:42.7404680Z             continuum_state = None
2025-01-14T13:16:42.7404760Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7404850Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7404920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7405000Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7405080Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7405150Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7405230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7405600Z         ).to_numba(
2025-01-14T13:16:42.7405680Z             macro_atom_state,
2025-01-14T13:16:42.7405750Z             self.line_interaction_type,
2025-01-14T13:16:42.7405800Z         )
2025-01-14T13:16:42.7405890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7406130Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7406180Z         ]
2025-01-14T13:16:42.7406430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7406430Z 
2025-01-14T13:16:42.7406540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7406720Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-14T13:16:42.7406720Z 
2025-01-14T13:16:42.7407280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7407560Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7407570Z 
2025-01-14T13:16:42.7407630Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7407750Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7407790Z         """
2025-01-14T13:16:42.7407880Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7407920Z     
2025-01-14T13:16:42.7407970Z         Parameters:
2025-01-14T13:16:42.7408020Z         -----------
2025-01-14T13:16:42.7408130Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7408240Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7408620Z     
2025-01-14T13:16:42.7408670Z         Returns:
2025-01-14T13:16:42.7408720Z         --------
2025-01-14T13:16:42.7408800Z         A TARDIS simulation object.
2025-01-14T13:16:42.7408850Z         """
2025-01-14T13:16:42.7408950Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7409060Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7409160Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7409320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7409450Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7409540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7409610Z >       sim = run_tardis(
2025-01-14T13:16:42.7409660Z             config_verysimple,
2025-01-14T13:16:42.7409720Z             atom_data=atomic_data,
2025-01-14T13:16:42.7409760Z         )
2025-01-14T13:16:42.7409760Z 
2025-01-14T13:16:42.7409890Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7409990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7410050Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7410110Z     simulation.run_convergence()
2025-01-14T13:16:42.7410200Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7410310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7410380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7410500Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7410590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7410590Z 
2025-01-14T13:16:42.7411090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7411250Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7411450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7411790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7411930Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7412050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7412050Z 
2025-01-14T13:16:42.7412110Z     def initialize_transport_state(
2025-01-14T13:16:42.7412160Z         self,
2025-01-14T13:16:42.7412240Z         simulation_state,
2025-01-14T13:16:42.7412300Z         opacity_state,
2025-01-14T13:16:42.7412350Z         macro_atom_state,
2025-01-14T13:16:42.7412410Z         plasma,
2025-01-14T13:16:42.7412460Z         no_of_packets,
2025-01-14T13:16:42.7412510Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7412560Z         iteration=0,
2025-01-14T13:16:42.7412600Z     ):
2025-01-14T13:16:42.7412700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7412800Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7412850Z         else:
2025-01-14T13:16:42.7412900Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7412950Z     
2025-01-14T13:16:42.7413050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7413120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7413170Z         )
2025-01-14T13:16:42.7413220Z     
2025-01-14T13:16:42.7413330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7413420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7413540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7413590Z         else:
2025-01-14T13:16:42.7413640Z             continuum_state = None
2025-01-14T13:16:42.7413720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7413800Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7413960Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7414050Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7414130Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7414200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7414270Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7414310Z         ).to_numba(
2025-01-14T13:16:42.7414380Z             macro_atom_state,
2025-01-14T13:16:42.7414450Z             self.line_interaction_type,
2025-01-14T13:16:42.7414490Z         )
2025-01-14T13:16:42.7414570Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7414820Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7414880Z         ]
2025-01-14T13:16:42.7415130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7415140Z 
2025-01-14T13:16:42.7415250Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7415430Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-14T13:16:42.7415430Z 
2025-01-14T13:16:42.7415980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7416290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7416290Z 
2025-01-14T13:16:42.7416360Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7416480Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7416520Z         """
2025-01-14T13:16:42.7416610Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7416660Z     
2025-01-14T13:16:42.7416730Z         Parameters:
2025-01-14T13:16:42.7416870Z         -----------
2025-01-14T13:16:42.7416980Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7417090Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7417140Z     
2025-01-14T13:16:42.7417180Z         Returns:
2025-01-14T13:16:42.7417230Z         --------
2025-01-14T13:16:42.7417280Z         A TARDIS simulation object.
2025-01-14T13:16:42.7417330Z         """
2025-01-14T13:16:42.7417410Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7417510Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7417610Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7417750Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7417860Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7417930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7417990Z >       sim = run_tardis(
2025-01-14T13:16:42.7418040Z             config_verysimple,
2025-01-14T13:16:42.7418100Z             atom_data=atomic_data,
2025-01-14T13:16:42.7418140Z         )
2025-01-14T13:16:42.7418150Z 
2025-01-14T13:16:42.7418250Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7418340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7418400Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7418460Z     simulation.run_convergence()
2025-01-14T13:16:42.7418550Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7418660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7418730Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7418860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7418940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7419010Z 
2025-01-14T13:16:42.7419240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7419400Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7419580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7420710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7421180Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7421520Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7421530Z 
2025-01-14T13:16:42.7421720Z     def initialize_transport_state(
2025-01-14T13:16:42.7421940Z         self,
2025-01-14T13:16:42.7422100Z         simulation_state,
2025-01-14T13:16:42.7422410Z         opacity_state,
2025-01-14T13:16:42.7422510Z         macro_atom_state,
2025-01-14T13:16:42.7422580Z         plasma,
2025-01-14T13:16:42.7422630Z         no_of_packets,
2025-01-14T13:16:42.7422700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7422740Z         iteration=0,
2025-01-14T13:16:42.7422950Z     ):
2025-01-14T13:16:42.7423060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7423120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7423180Z         else:
2025-01-14T13:16:42.7423230Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7423280Z     
2025-01-14T13:16:42.7423390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7423460Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7423510Z         )
2025-01-14T13:16:42.7423560Z     
2025-01-14T13:16:42.7423650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7423740Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7423870Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7423920Z         else:
2025-01-14T13:16:42.7424190Z             continuum_state = None
2025-01-14T13:16:42.7424280Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7424360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7424430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7424530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7424600Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7424670Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7424730Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7424780Z         ).to_numba(
2025-01-14T13:16:42.7424830Z             macro_atom_state,
2025-01-14T13:16:42.7424890Z             self.line_interaction_type,
2025-01-14T13:16:42.7424940Z         )
2025-01-14T13:16:42.7425020Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7425240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7425300Z         ]
2025-01-14T13:16:42.7425550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7425550Z 
2025-01-14T13:16:42.7425680Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7425890Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-14T13:16:42.7425890Z 
2025-01-14T13:16:42.7426490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7426810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7426910Z 
2025-01-14T13:16:42.7426980Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7427110Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7427150Z         """
2025-01-14T13:16:42.7427240Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7427290Z     
2025-01-14T13:16:42.7427340Z         Parameters:
2025-01-14T13:16:42.7427400Z         -----------
2025-01-14T13:16:42.7427500Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7427620Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7427670Z     
2025-01-14T13:16:42.7427710Z         Returns:
2025-01-14T13:16:42.7427760Z         --------
2025-01-14T13:16:42.7427820Z         A TARDIS simulation object.
2025-01-14T13:16:42.7427870Z         """
2025-01-14T13:16:42.7427960Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7428050Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7428170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7428310Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7428420Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7428490Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7428550Z >       sim = run_tardis(
2025-01-14T13:16:42.7428600Z             config_verysimple,
2025-01-14T13:16:42.7428660Z             atom_data=atomic_data,
2025-01-14T13:16:42.7428700Z         )
2025-01-14T13:16:42.7428710Z 
2025-01-14T13:16:42.7428810Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7428910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7428980Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7429050Z     simulation.run_convergence()
2025-01-14T13:16:42.7429130Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7429240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7429600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7429730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7429820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7429820Z 
2025-01-14T13:16:42.7430030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7430190Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7430360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7430580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7430700Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7430810Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7430820Z 
2025-01-14T13:16:42.7430880Z     def initialize_transport_state(
2025-01-14T13:16:42.7430930Z         self,
2025-01-14T13:16:42.7430980Z         simulation_state,
2025-01-14T13:16:42.7431030Z         opacity_state,
2025-01-14T13:16:42.7431080Z         macro_atom_state,
2025-01-14T13:16:42.7431120Z         plasma,
2025-01-14T13:16:42.7431170Z         no_of_packets,
2025-01-14T13:16:42.7431230Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7431280Z         iteration=0,
2025-01-14T13:16:42.7431320Z     ):
2025-01-14T13:16:42.7431410Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7431480Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7431530Z         else:
2025-01-14T13:16:42.7431580Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7431630Z     
2025-01-14T13:16:42.7431730Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7431800Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7432060Z         )
2025-01-14T13:16:42.7432110Z     
2025-01-14T13:16:42.7432210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7432300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7432430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7432470Z         else:
2025-01-14T13:16:42.7432530Z             continuum_state = None
2025-01-14T13:16:42.7432610Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7432690Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7432770Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7432850Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7432920Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7432990Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7433050Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7433100Z         ).to_numba(
2025-01-14T13:16:42.7433170Z             macro_atom_state,
2025-01-14T13:16:42.7433240Z             self.line_interaction_type,
2025-01-14T13:16:42.7433300Z         )
2025-01-14T13:16:42.7433380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7433620Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7433660Z         ]
2025-01-14T13:16:42.7433930Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7433940Z 
2025-01-14T13:16:42.7434060Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7434260Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-14T13:16:42.7434260Z 
2025-01-14T13:16:42.7434910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7435200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7435210Z 
2025-01-14T13:16:42.7435270Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7435380Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7435430Z         """
2025-01-14T13:16:42.7435650Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7435700Z     
2025-01-14T13:16:42.7435750Z         Parameters:
2025-01-14T13:16:42.7435800Z         -----------
2025-01-14T13:16:42.7435900Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7436020Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7436060Z     
2025-01-14T13:16:42.7436110Z         Returns:
2025-01-14T13:16:42.7436160Z         --------
2025-01-14T13:16:42.7436210Z         A TARDIS simulation object.
2025-01-14T13:16:42.7436260Z         """
2025-01-14T13:16:42.7436350Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7436450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7436550Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7436700Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7436800Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7436870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7436920Z >       sim = run_tardis(
2025-01-14T13:16:42.7436970Z             config_verysimple,
2025-01-14T13:16:42.7437030Z             atom_data=atomic_data,
2025-01-14T13:16:42.7437070Z         )
2025-01-14T13:16:42.7437070Z 
2025-01-14T13:16:42.7437180Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7437270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7437450Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7437510Z     simulation.run_convergence()
2025-01-14T13:16:42.7437600Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7437720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7437800Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7437920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7438010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7438010Z 
2025-01-14T13:16:42.7438220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7438380Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7438560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7438780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7438910Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7439010Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7439020Z 
2025-01-14T13:16:42.7439080Z     def initialize_transport_state(
2025-01-14T13:16:42.7439240Z         self,
2025-01-14T13:16:42.7439300Z         simulation_state,
2025-01-14T13:16:42.7439360Z         opacity_state,
2025-01-14T13:16:42.7439410Z         macro_atom_state,
2025-01-14T13:16:42.7439450Z         plasma,
2025-01-14T13:16:42.7439520Z         no_of_packets,
2025-01-14T13:16:42.7439580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7439630Z         iteration=0,
2025-01-14T13:16:42.7439670Z     ):
2025-01-14T13:16:42.7439770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7439850Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7439900Z         else:
2025-01-14T13:16:42.7439960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7440100Z     
2025-01-14T13:16:42.7440220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7440290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7440330Z         )
2025-01-14T13:16:42.7440370Z     
2025-01-14T13:16:42.7440480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7440560Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7440690Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7440730Z         else:
2025-01-14T13:16:42.7440800Z             continuum_state = None
2025-01-14T13:16:42.7440880Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7440970Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7441040Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7441120Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7441200Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7441260Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7441340Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7441390Z         ).to_numba(
2025-01-14T13:16:42.7441440Z             macro_atom_state,
2025-01-14T13:16:42.7441500Z             self.line_interaction_type,
2025-01-14T13:16:42.7441820Z         )
2025-01-14T13:16:42.7441910Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7442130Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7442180Z         ]
2025-01-14T13:16:42.7442430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7442430Z 
2025-01-14T13:16:42.7442540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7442860Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-14T13:16:42.7442860Z 
2025-01-14T13:16:42.7443400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7443680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7443680Z 
2025-01-14T13:16:42.7443750Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7443860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7443900Z         """
2025-01-14T13:16:42.7443990Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7444030Z     
2025-01-14T13:16:42.7444080Z         Parameters:
2025-01-14T13:16:42.7444130Z         -----------
2025-01-14T13:16:42.7444250Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7444380Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7444430Z     
2025-01-14T13:16:42.7444480Z         Returns:
2025-01-14T13:16:42.7444530Z         --------
2025-01-14T13:16:42.7444590Z         A TARDIS simulation object.
2025-01-14T13:16:42.7444630Z         """
2025-01-14T13:16:42.7444720Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7444840Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7444940Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7445080Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7445200Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7445260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7445320Z >       sim = run_tardis(
2025-01-14T13:16:42.7445380Z             config_verysimple,
2025-01-14T13:16:42.7445440Z             atom_data=atomic_data,
2025-01-14T13:16:42.7445580Z         )
2025-01-14T13:16:42.7445580Z 
2025-01-14T13:16:42.7445690Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7445780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7445840Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7445900Z     simulation.run_convergence()
2025-01-14T13:16:42.7445990Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7446090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7446170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7446300Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7446380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7446390Z 
2025-01-14T13:16:42.7446600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7446920Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7447100Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7447320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7447440Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7447550Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7447560Z 
2025-01-14T13:16:42.7447620Z     def initialize_transport_state(
2025-01-14T13:16:42.7447670Z         self,
2025-01-14T13:16:42.7453060Z         simulation_state,
2025-01-14T13:16:42.7453160Z         opacity_state,
2025-01-14T13:16:42.7453210Z         macro_atom_state,
2025-01-14T13:16:42.7453250Z         plasma,
2025-01-14T13:16:42.7453300Z         no_of_packets,
2025-01-14T13:16:42.7453560Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7453610Z         iteration=0,
2025-01-14T13:16:42.7453660Z     ):
2025-01-14T13:16:42.7453750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7453830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7453870Z         else:
2025-01-14T13:16:42.7454070Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7454120Z     
2025-01-14T13:16:42.7454220Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7454290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7454340Z         )
2025-01-14T13:16:42.7454380Z     
2025-01-14T13:16:42.7454480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7454570Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7454690Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7454740Z         else:
2025-01-14T13:16:42.7454790Z             continuum_state = None
2025-01-14T13:16:42.7454870Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7454960Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7455030Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7455110Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7455190Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7455250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7455340Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7455390Z         ).to_numba(
2025-01-14T13:16:42.7455440Z             macro_atom_state,
2025-01-14T13:16:42.7455500Z             self.line_interaction_type,
2025-01-14T13:16:42.7455540Z         )
2025-01-14T13:16:42.7455620Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7455830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7455880Z         ]
2025-01-14T13:16:42.7456440Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7456450Z 
2025-01-14T13:16:42.7456570Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7456750Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-14T13:16:42.7456750Z 
2025-01-14T13:16:42.7457290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7457560Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7457570Z 
2025-01-14T13:16:42.7457630Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7457740Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7457780Z         """
2025-01-14T13:16:42.7457880Z         Fixture to create a simple TARDIS simulation.
2025-01-14T13:16:42.7457920Z     
2025-01-14T13:16:42.7457970Z         Parameters:
2025-01-14T13:16:42.7458020Z         -----------
2025-01-14T13:16:42.7459140Z         config_verysimple: A basic TARDIS configuration object.
2025-01-14T13:16:42.7459550Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-14T13:16:42.7459700Z     
2025-01-14T13:16:42.7459850Z         Returns:
2025-01-14T13:16:42.7460000Z         --------
2025-01-14T13:16:42.7460190Z         A TARDIS simulation object.
2025-01-14T13:16:42.7460330Z         """
2025-01-14T13:16:42.7460570Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7461020Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7461200Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7461350Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7461810Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7461890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7461950Z >       sim = run_tardis(
2025-01-14T13:16:42.7462010Z             config_verysimple,
2025-01-14T13:16:42.7462070Z             atom_data=atomic_data,
2025-01-14T13:16:42.7462240Z         )
2025-01-14T13:16:42.7462250Z 
2025-01-14T13:16:42.7462370Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-14T13:16:42.7462470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7462530Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7462600Z     simulation.run_convergence()
2025-01-14T13:16:42.7462700Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7462820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7462890Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7463030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7463120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7463120Z 
2025-01-14T13:16:42.7463360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17306c530>
2025-01-14T13:16:42.7463520Z simulation_state = <tardis.model.base.SimulationState object at 0x30ec10ef0>
2025-01-14T13:16:42.7463710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3128af680>
2025-01-14T13:16:42.7463940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321d09130>
2025-01-14T13:16:42.7464060Z plasma = <tardis.plasma.base.BasePlasma object at 0x3050d0770>
2025-01-14T13:16:42.7464180Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7464180Z 
2025-01-14T13:16:42.7464250Z     def initialize_transport_state(
2025-01-14T13:16:42.7464300Z         self,
2025-01-14T13:16:42.7464360Z         simulation_state,
2025-01-14T13:16:42.7464670Z         opacity_state,
2025-01-14T13:16:42.7464780Z         macro_atom_state,
2025-01-14T13:16:42.7464840Z         plasma,
2025-01-14T13:16:42.7464890Z         no_of_packets,
2025-01-14T13:16:42.7464950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7465000Z         iteration=0,
2025-01-14T13:16:42.7465050Z     ):
2025-01-14T13:16:42.7465160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7465230Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7465280Z         else:
2025-01-14T13:16:42.7465340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7465380Z     
2025-01-14T13:16:42.7465500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7465590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7465640Z         )
2025-01-14T13:16:42.7465690Z     
2025-01-14T13:16:42.7465800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7465910Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7466040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7466090Z         else:
2025-01-14T13:16:42.7466150Z             continuum_state = None
2025-01-14T13:16:42.7466240Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7466320Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7466390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7466470Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7466560Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7466660Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7466730Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7467050Z         ).to_numba(
2025-01-14T13:16:42.7467130Z             macro_atom_state,
2025-01-14T13:16:42.7467200Z             self.line_interaction_type,
2025-01-14T13:16:42.7467400Z         )
2025-01-14T13:16:42.7467500Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7467730Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7467780Z         ]
2025-01-14T13:16:42.7468030Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7468040Z 
2025-01-14T13:16:42.7468160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7468330Z __ ERROR at setup of TestRPacketPlotter.test_get_coordinates_with_theta_init ___
2025-01-14T13:16:42.7468330Z 
2025-01-14T13:16:42.7469280Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7469580Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7469590Z 
2025-01-14T13:16:42.7469660Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7469720Z         "expected,obtained",
2025-01-14T13:16:42.7469770Z         [
2025-01-14T13:16:42.7469820Z             (
2025-01-14T13:16:42.7469900Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7469990Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7470040Z             ),
2025-01-14T13:16:42.7470170Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7470280Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7470330Z         ],
2025-01-14T13:16:42.7470380Z     )
2025-01-14T13:16:42.7470530Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7470630Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7470640Z 
2025-01-14T13:16:42.7470770Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7470860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7471210Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7471310Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7471530Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7471610Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7471720Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7471770Z     sim = run_tardis(
2025-01-14T13:16:42.7471830Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7471900Z     simulation.run_convergence()
2025-01-14T13:16:42.7472000Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7472110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7472180Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7472300Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7472400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7472410Z 
2025-01-14T13:16:42.7472620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7472770Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7472960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7473180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7473300Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7473410Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7473410Z 
2025-01-14T13:16:42.7473490Z     def initialize_transport_state(
2025-01-14T13:16:42.7473530Z         self,
2025-01-14T13:16:42.7473590Z         simulation_state,
2025-01-14T13:16:42.7473730Z         opacity_state,
2025-01-14T13:16:42.7474120Z         macro_atom_state,
2025-01-14T13:16:42.7474170Z         plasma,
2025-01-14T13:16:42.7474250Z         no_of_packets,
2025-01-14T13:16:42.7474320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7474360Z         iteration=0,
2025-01-14T13:16:42.7474410Z     ):
2025-01-14T13:16:42.7474510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7474590Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7474640Z         else:
2025-01-14T13:16:42.7474690Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7474730Z     
2025-01-14T13:16:42.7474850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7474920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7474970Z         )
2025-01-14T13:16:42.7475010Z     
2025-01-14T13:16:42.7475120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7475200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7475330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7475380Z         else:
2025-01-14T13:16:42.7475450Z             continuum_state = None
2025-01-14T13:16:42.7475530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7475610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7475680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7475760Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7475840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7475900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7475980Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7476020Z         ).to_numba(
2025-01-14T13:16:42.7476080Z             macro_atom_state,
2025-01-14T13:16:42.7476140Z             self.line_interaction_type,
2025-01-14T13:16:42.7476180Z         )
2025-01-14T13:16:42.7476260Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7476930Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7476990Z         ]
2025-01-14T13:16:42.7477250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7477260Z 
2025-01-14T13:16:42.7477370Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7477540Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[2] _
2025-01-14T13:16:42.7477680Z 
2025-01-14T13:16:42.7477820Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7478100Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7478100Z 
2025-01-14T13:16:42.7478170Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7478230Z         "expected,obtained",
2025-01-14T13:16:42.7478280Z         [
2025-01-14T13:16:42.7478330Z             (
2025-01-14T13:16:42.7478420Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7478500Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7478550Z             ),
2025-01-14T13:16:42.7479230Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7479370Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7479430Z         ],
2025-01-14T13:16:42.7479480Z     )
2025-01-14T13:16:42.7479610Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7479710Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7479710Z 
2025-01-14T13:16:42.7479860Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7481210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7481590Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7481680Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7482050Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7482140Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7482240Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7482290Z     sim = run_tardis(
2025-01-14T13:16:42.7482350Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7482410Z     simulation.run_convergence()
2025-01-14T13:16:42.7482500Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7482610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7482680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7482810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7482900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7482910Z 
2025-01-14T13:16:42.7483130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7483290Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7483470Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7483690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7483810Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7483930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7483930Z 
2025-01-14T13:16:42.7483990Z     def initialize_transport_state(
2025-01-14T13:16:42.7484040Z         self,
2025-01-14T13:16:42.7484090Z         simulation_state,
2025-01-14T13:16:42.7484140Z         opacity_state,
2025-01-14T13:16:42.7484200Z         macro_atom_state,
2025-01-14T13:16:42.7484240Z         plasma,
2025-01-14T13:16:42.7484530Z         no_of_packets,
2025-01-14T13:16:42.7484600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7484650Z         iteration=0,
2025-01-14T13:16:42.7484690Z     ):
2025-01-14T13:16:42.7484790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7484860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7484910Z         else:
2025-01-14T13:16:42.7484960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7485000Z     
2025-01-14T13:16:42.7485100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7485180Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7485220Z         )
2025-01-14T13:16:42.7485270Z     
2025-01-14T13:16:42.7485370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7485470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7485600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7485640Z         else:
2025-01-14T13:16:42.7485710Z             continuum_state = None
2025-01-14T13:16:42.7485780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7485880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7485950Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7486030Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7486100Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7486180Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7486240Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7486290Z         ).to_numba(
2025-01-14T13:16:42.7486350Z             macro_atom_state,
2025-01-14T13:16:42.7486410Z             self.line_interaction_type,
2025-01-14T13:16:42.7486450Z         )
2025-01-14T13:16:42.7486520Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7487590Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7487840Z         ]
2025-01-14T13:16:42.7488550Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7488560Z 
2025-01-14T13:16:42.7488890Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7490190Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[5] _
2025-01-14T13:16:42.7490200Z 
2025-01-14T13:16:42.7490580Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7491340Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7491350Z 
2025-01-14T13:16:42.7491550Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7491730Z         "expected,obtained",
2025-01-14T13:16:42.7491890Z         [
2025-01-14T13:16:42.7492020Z             (
2025-01-14T13:16:42.7492280Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7492510Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7492660Z             ),
2025-01-14T13:16:42.7492990Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7493340Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7493430Z         ],
2025-01-14T13:16:42.7493490Z     )
2025-01-14T13:16:42.7493640Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7493740Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7493740Z 
2025-01-14T13:16:42.7493880Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7493980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7494230Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7494640Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7494890Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7494980Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7495090Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7495140Z     sim = run_tardis(
2025-01-14T13:16:42.7495210Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7495270Z     simulation.run_convergence()
2025-01-14T13:16:42.7495360Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7495490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7495570Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7495690Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7495780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7495790Z 
2025-01-14T13:16:42.7496010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7496170Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7496350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7496570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7496720Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7496830Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7496830Z 
2025-01-14T13:16:42.7496900Z     def initialize_transport_state(
2025-01-14T13:16:42.7496940Z         self,
2025-01-14T13:16:42.7497000Z         simulation_state,
2025-01-14T13:16:42.7497050Z         opacity_state,
2025-01-14T13:16:42.7497100Z         macro_atom_state,
2025-01-14T13:16:42.7497280Z         plasma,
2025-01-14T13:16:42.7497330Z         no_of_packets,
2025-01-14T13:16:42.7497390Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7497440Z         iteration=0,
2025-01-14T13:16:42.7497490Z     ):
2025-01-14T13:16:42.7497840Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7497940Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7497990Z         else:
2025-01-14T13:16:42.7498050Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7498100Z     
2025-01-14T13:16:42.7498210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7498280Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7498330Z         )
2025-01-14T13:16:42.7498370Z     
2025-01-14T13:16:42.7498490Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7498590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7498710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7498760Z         else:
2025-01-14T13:16:42.7498820Z             continuum_state = None
2025-01-14T13:16:42.7498920Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7499030Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7499100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7499180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7499260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7499330Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7499400Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7499460Z         ).to_numba(
2025-01-14T13:16:42.7499530Z             macro_atom_state,
2025-01-14T13:16:42.7499590Z             self.line_interaction_type,
2025-01-14T13:16:42.7499630Z         )
2025-01-14T13:16:42.7499710Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7500080Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7500140Z         ]
2025-01-14T13:16:42.7500410Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7500410Z 
2025-01-14T13:16:42.7500520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7500690Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[10] _
2025-01-14T13:16:42.7500700Z 
2025-01-14T13:16:42.7500840Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7501110Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7501110Z 
2025-01-14T13:16:42.7501170Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7501240Z         "expected,obtained",
2025-01-14T13:16:42.7501280Z         [
2025-01-14T13:16:42.7501340Z             (
2025-01-14T13:16:42.7501420Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7501500Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7501550Z             ),
2025-01-14T13:16:42.7501680Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7501770Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7501820Z         ],
2025-01-14T13:16:42.7501860Z     )
2025-01-14T13:16:42.7501990Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7502080Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7502090Z 
2025-01-14T13:16:42.7502220Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7502310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7502540Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7502730Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7502970Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7503060Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7503170Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7503220Z     sim = run_tardis(
2025-01-14T13:16:42.7503280Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7503340Z     simulation.run_convergence()
2025-01-14T13:16:42.7503430Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7503540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7503620Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7503750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7503830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7503840Z 
2025-01-14T13:16:42.7504050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7504210Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7504390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7504610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7504730Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7504840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7504840Z 
2025-01-14T13:16:42.7504910Z     def initialize_transport_state(
2025-01-14T13:16:42.7504950Z         self,
2025-01-14T13:16:42.7505000Z         simulation_state,
2025-01-14T13:16:42.7505050Z         opacity_state,
2025-01-14T13:16:42.7505110Z         macro_atom_state,
2025-01-14T13:16:42.7505150Z         plasma,
2025-01-14T13:16:42.7505210Z         no_of_packets,
2025-01-14T13:16:42.7505260Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7505390Z         iteration=0,
2025-01-14T13:16:42.7505430Z     ):
2025-01-14T13:16:42.7505540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7505610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7505660Z         else:
2025-01-14T13:16:42.7505710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7505760Z     
2025-01-14T13:16:42.7505860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7505930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7505980Z         )
2025-01-14T13:16:42.7506020Z     
2025-01-14T13:16:42.7506120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7506210Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7506330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7506380Z         else:
2025-01-14T13:16:42.7506440Z             continuum_state = None
2025-01-14T13:16:42.7506520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7507580Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7507980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7508230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7509740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7510240Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7510340Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7510390Z         ).to_numba(
2025-01-14T13:16:42.7510440Z             macro_atom_state,
2025-01-14T13:16:42.7510510Z             self.line_interaction_type,
2025-01-14T13:16:42.7510560Z         )
2025-01-14T13:16:42.7510640Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7510880Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7511090Z         ]
2025-01-14T13:16:42.7511360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7511360Z 
2025-01-14T13:16:42.7511480Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7511640Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[2] _______
2025-01-14T13:16:42.7511640Z 
2025-01-14T13:16:42.7511780Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7512040Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7512050Z 
2025-01-14T13:16:42.7512110Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7512170Z         "expected,obtained",
2025-01-14T13:16:42.7512220Z         [
2025-01-14T13:16:42.7512260Z             (
2025-01-14T13:16:42.7512350Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7512440Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7512490Z             ),
2025-01-14T13:16:42.7512630Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7512730Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7512770Z         ],
2025-01-14T13:16:42.7512820Z     )
2025-01-14T13:16:42.7512940Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7513030Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7513040Z 
2025-01-14T13:16:42.7513180Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7513270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7513500Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7513590Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7514100Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7514190Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7514300Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7514350Z     sim = run_tardis(
2025-01-14T13:16:42.7514410Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7514480Z     simulation.run_convergence()
2025-01-14T13:16:42.7514570Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7514690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7514760Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7514890Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7514980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7514980Z 
2025-01-14T13:16:42.7515190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7515360Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7515540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7515780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7515910Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7516020Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7516020Z 
2025-01-14T13:16:42.7516080Z     def initialize_transport_state(
2025-01-14T13:16:42.7516130Z         self,
2025-01-14T13:16:42.7516180Z         simulation_state,
2025-01-14T13:16:42.7516240Z         opacity_state,
2025-01-14T13:16:42.7516290Z         macro_atom_state,
2025-01-14T13:16:42.7516330Z         plasma,
2025-01-14T13:16:42.7516380Z         no_of_packets,
2025-01-14T13:16:42.7516710Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7516760Z         iteration=0,
2025-01-14T13:16:42.7516810Z     ):
2025-01-14T13:16:42.7516910Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7516980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7517030Z         else:
2025-01-14T13:16:42.7517090Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7517130Z     
2025-01-14T13:16:42.7517230Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7517310Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7517350Z         )
2025-01-14T13:16:42.7517400Z     
2025-01-14T13:16:42.7517500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7517590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7517710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7517760Z         else:
2025-01-14T13:16:42.7517820Z             continuum_state = None
2025-01-14T13:16:42.7517900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7517990Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7518060Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7518140Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7518220Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7518290Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7518350Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7518410Z         ).to_numba(
2025-01-14T13:16:42.7524140Z             macro_atom_state,
2025-01-14T13:16:42.7524240Z             self.line_interaction_type,
2025-01-14T13:16:42.7524290Z         )
2025-01-14T13:16:42.7524370Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7524600Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7524660Z         ]
2025-01-14T13:16:42.7525060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7525070Z 
2025-01-14T13:16:42.7525200Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7525350Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[5] _______
2025-01-14T13:16:42.7525360Z 
2025-01-14T13:16:42.7525490Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7525860Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7525870Z 
2025-01-14T13:16:42.7525950Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7526010Z         "expected,obtained",
2025-01-14T13:16:42.7526050Z         [
2025-01-14T13:16:42.7526100Z             (
2025-01-14T13:16:42.7526190Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7526270Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7526320Z             ),
2025-01-14T13:16:42.7526450Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7526550Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7526600Z         ],
2025-01-14T13:16:42.7526640Z     )
2025-01-14T13:16:42.7526770Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7526860Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7526860Z 
2025-01-14T13:16:42.7526990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7527080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7527300Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7527390Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7527740Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7527830Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7527930Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7527980Z     sim = run_tardis(
2025-01-14T13:16:42.7528040Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7528100Z     simulation.run_convergence()
2025-01-14T13:16:42.7528190Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7528300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7528370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7528490Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7528580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7528580Z 
2025-01-14T13:16:42.7528790Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7528950Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7529130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7529350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7529470Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7529580Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7529580Z 
2025-01-14T13:16:42.7529650Z     def initialize_transport_state(
2025-01-14T13:16:42.7529700Z         self,
2025-01-14T13:16:42.7529750Z         simulation_state,
2025-01-14T13:16:42.7529810Z         opacity_state,
2025-01-14T13:16:42.7529870Z         macro_atom_state,
2025-01-14T13:16:42.7529910Z         plasma,
2025-01-14T13:16:42.7529970Z         no_of_packets,
2025-01-14T13:16:42.7530020Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7530070Z         iteration=0,
2025-01-14T13:16:42.7530110Z     ):
2025-01-14T13:16:42.7530270Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7530360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7530400Z         else:
2025-01-14T13:16:42.7530450Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7530500Z     
2025-01-14T13:16:42.7530610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7530680Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7530730Z         )
2025-01-14T13:16:42.7530770Z     
2025-01-14T13:16:42.7530870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7530960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7531080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7531120Z         else:
2025-01-14T13:16:42.7531190Z             continuum_state = None
2025-01-14T13:16:42.7531270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7531360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7531430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7531510Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7531580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7531650Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7531720Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7531770Z         ).to_numba(
2025-01-14T13:16:42.7531830Z             macro_atom_state,
2025-01-14T13:16:42.7531890Z             self.line_interaction_type,
2025-01-14T13:16:42.7531930Z         )
2025-01-14T13:16:42.7532010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7532240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7532280Z         ]
2025-01-14T13:16:42.7532890Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7532890Z 
2025-01-14T13:16:42.7533020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7533170Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[10] ______
2025-01-14T13:16:42.7533180Z 
2025-01-14T13:16:42.7533320Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7533590Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7533590Z 
2025-01-14T13:16:42.7533670Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7533730Z         "expected,obtained",
2025-01-14T13:16:42.7533770Z         [
2025-01-14T13:16:42.7533810Z             (
2025-01-14T13:16:42.7533900Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7533970Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7534030Z             ),
2025-01-14T13:16:42.7534170Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7534270Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7534320Z         ],
2025-01-14T13:16:42.7534360Z     )
2025-01-14T13:16:42.7534500Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7534590Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7534590Z 
2025-01-14T13:16:42.7534720Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7534810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7535040Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7535120Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7535350Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7535530Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7535640Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7535700Z     sim = run_tardis(
2025-01-14T13:16:42.7535760Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7535820Z     simulation.run_convergence()
2025-01-14T13:16:42.7535910Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7536020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7536090Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7536220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7536300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7536300Z 
2025-01-14T13:16:42.7536530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7536690Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7536870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7537090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7537210Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7537320Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7537320Z 
2025-01-14T13:16:42.7537380Z     def initialize_transport_state(
2025-01-14T13:16:42.7537440Z         self,
2025-01-14T13:16:42.7537490Z         simulation_state,
2025-01-14T13:16:42.7537540Z         opacity_state,
2025-01-14T13:16:42.7537590Z         macro_atom_state,
2025-01-14T13:16:42.7537800Z         plasma,
2025-01-14T13:16:42.7537850Z         no_of_packets,
2025-01-14T13:16:42.7537910Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7537960Z         iteration=0,
2025-01-14T13:16:42.7538090Z     ):
2025-01-14T13:16:42.7538190Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7538260Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7538320Z         else:
2025-01-14T13:16:42.7538370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7538550Z     
2025-01-14T13:16:42.7538660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7538740Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7538780Z         )
2025-01-14T13:16:42.7538830Z     
2025-01-14T13:16:42.7538930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7539020Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7539140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7539190Z         else:
2025-01-14T13:16:42.7539250Z             continuum_state = None
2025-01-14T13:16:42.7539330Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7539420Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7539490Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7539570Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7539640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7539710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7539780Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7539830Z         ).to_numba(
2025-01-14T13:16:42.7539880Z             macro_atom_state,
2025-01-14T13:16:42.7539940Z             self.line_interaction_type,
2025-01-14T13:16:42.7539990Z         )
2025-01-14T13:16:42.7540060Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7540290Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7540340Z         ]
2025-01-14T13:16:42.7540590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7540600Z 
2025-01-14T13:16:42.7541000Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7541910Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-2] _________
2025-01-14T13:16:42.7541950Z 
2025-01-14T13:16:42.7542110Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7542380Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7542380Z 
2025-01-14T13:16:42.7542440Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7542510Z         "expected,obtained",
2025-01-14T13:16:42.7542560Z         [
2025-01-14T13:16:42.7542600Z             (
2025-01-14T13:16:42.7542690Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7542770Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7542820Z             ),
2025-01-14T13:16:42.7542950Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7543060Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7543100Z         ],
2025-01-14T13:16:42.7543150Z     )
2025-01-14T13:16:42.7543280Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7543370Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7543370Z 
2025-01-14T13:16:42.7543510Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7543600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7543830Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7543920Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7544140Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7544630Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7544750Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7544790Z     sim = run_tardis(
2025-01-14T13:16:42.7544860Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7544920Z     simulation.run_convergence()
2025-01-14T13:16:42.7545010Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7545130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7545200Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7545330Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7545420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7545430Z 
2025-01-14T13:16:42.7546080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7546840Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7547060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7547300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7547430Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7547540Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7547540Z 
2025-01-14T13:16:42.7547610Z     def initialize_transport_state(
2025-01-14T13:16:42.7547660Z         self,
2025-01-14T13:16:42.7547710Z         simulation_state,
2025-01-14T13:16:42.7547760Z         opacity_state,
2025-01-14T13:16:42.7547820Z         macro_atom_state,
2025-01-14T13:16:42.7547880Z         plasma,
2025-01-14T13:16:42.7547930Z         no_of_packets,
2025-01-14T13:16:42.7547990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7548030Z         iteration=0,
2025-01-14T13:16:42.7548080Z     ):
2025-01-14T13:16:42.7548170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7548380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7548430Z         else:
2025-01-14T13:16:42.7548500Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7548540Z     
2025-01-14T13:16:42.7548660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7548730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7548770Z         )
2025-01-14T13:16:42.7548810Z     
2025-01-14T13:16:42.7548920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7549010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7549140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7549190Z         else:
2025-01-14T13:16:42.7549250Z             continuum_state = None
2025-01-14T13:16:42.7549320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7549400Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7549480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7549560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7549640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7549710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7549780Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7549820Z         ).to_numba(
2025-01-14T13:16:42.7549880Z             macro_atom_state,
2025-01-14T13:16:42.7549940Z             self.line_interaction_type,
2025-01-14T13:16:42.7549990Z         )
2025-01-14T13:16:42.7550060Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7550280Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7550330Z         ]
2025-01-14T13:16:42.7550580Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7550640Z 
2025-01-14T13:16:42.7550770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7551360Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-5] _________
2025-01-14T13:16:42.7551370Z 
2025-01-14T13:16:42.7551520Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7551780Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7551780Z 
2025-01-14T13:16:42.7551850Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7551910Z         "expected,obtained",
2025-01-14T13:16:42.7551950Z         [
2025-01-14T13:16:42.7552000Z             (
2025-01-14T13:16:42.7552080Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7552160Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7552210Z             ),
2025-01-14T13:16:42.7552330Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7552430Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7552480Z         ],
2025-01-14T13:16:42.7552520Z     )
2025-01-14T13:16:42.7552650Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7552740Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7552740Z 
2025-01-14T13:16:42.7552880Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7552970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7553190Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7553280Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7553500Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7554350Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7554470Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7554630Z     sim = run_tardis(
2025-01-14T13:16:42.7554690Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7554750Z     simulation.run_convergence()
2025-01-14T13:16:42.7554840Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7554960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7555030Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7555150Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7555240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7555240Z 
2025-01-14T13:16:42.7555450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7555610Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7555790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7556020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7556140Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7556260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7556260Z 
2025-01-14T13:16:42.7556320Z     def initialize_transport_state(
2025-01-14T13:16:42.7556370Z         self,
2025-01-14T13:16:42.7556430Z         simulation_state,
2025-01-14T13:16:42.7556470Z         opacity_state,
2025-01-14T13:16:42.7556530Z         macro_atom_state,
2025-01-14T13:16:42.7556570Z         plasma,
2025-01-14T13:16:42.7556720Z         no_of_packets,
2025-01-14T13:16:42.7556800Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7556850Z         iteration=0,
2025-01-14T13:16:42.7556890Z     ):
2025-01-14T13:16:42.7556990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7557170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7557220Z         else:
2025-01-14T13:16:42.7557280Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7557330Z     
2025-01-14T13:16:42.7557430Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7557510Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7557550Z         )
2025-01-14T13:16:42.7557600Z     
2025-01-14T13:16:42.7557700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7557790Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7557920Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7557970Z         else:
2025-01-14T13:16:42.7558030Z             continuum_state = None
2025-01-14T13:16:42.7558120Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7558220Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7558300Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7558380Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7558460Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7558530Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7558600Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7558650Z         ).to_numba(
2025-01-14T13:16:42.7558700Z             macro_atom_state,
2025-01-14T13:16:42.7558780Z             self.line_interaction_type,
2025-01-14T13:16:42.7558830Z         )
2025-01-14T13:16:42.7558900Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7559140Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7559180Z         ]
2025-01-14T13:16:42.7559430Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7559430Z 
2025-01-14T13:16:42.7559550Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7559820Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-10] ________
2025-01-14T13:16:42.7559830Z 
2025-01-14T13:16:42.7559970Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7562570Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7562600Z 
2025-01-14T13:16:42.7563070Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7563180Z         "expected,obtained",
2025-01-14T13:16:42.7563220Z         [
2025-01-14T13:16:42.7563270Z             (
2025-01-14T13:16:42.7563360Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7563440Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7563490Z             ),
2025-01-14T13:16:42.7563610Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7563720Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7563770Z         ],
2025-01-14T13:16:42.7563810Z     )
2025-01-14T13:16:42.7563940Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7564040Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7564050Z 
2025-01-14T13:16:42.7564190Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7564280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7564510Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7564590Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7564820Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7564900Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7565010Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7565210Z     sim = run_tardis(
2025-01-14T13:16:42.7565290Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7565350Z     simulation.run_convergence()
2025-01-14T13:16:42.7565440Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7565550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7565620Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7566840Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7566940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7566940Z 
2025-01-14T13:16:42.7567150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7567600Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7568190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7568870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7569220Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7569530Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7569550Z 
2025-01-14T13:16:42.7569730Z     def initialize_transport_state(
2025-01-14T13:16:42.7569880Z         self,
2025-01-14T13:16:42.7570040Z         simulation_state,
2025-01-14T13:16:42.7570960Z         opacity_state,
2025-01-14T13:16:42.7571060Z         macro_atom_state,
2025-01-14T13:16:42.7571110Z         plasma,
2025-01-14T13:16:42.7571160Z         no_of_packets,
2025-01-14T13:16:42.7571220Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7571270Z         iteration=0,
2025-01-14T13:16:42.7571310Z     ):
2025-01-14T13:16:42.7571410Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7571480Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7571540Z         else:
2025-01-14T13:16:42.7571950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7572000Z     
2025-01-14T13:16:42.7572120Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7572190Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7572240Z         )
2025-01-14T13:16:42.7572280Z     
2025-01-14T13:16:42.7572380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7572470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7572590Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7572630Z         else:
2025-01-14T13:16:42.7572690Z             continuum_state = None
2025-01-14T13:16:42.7572770Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7572850Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7572920Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7573010Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7573090Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7573160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7573230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7573280Z         ).to_numba(
2025-01-14T13:16:42.7573330Z             macro_atom_state,
2025-01-14T13:16:42.7573390Z             self.line_interaction_type,
2025-01-14T13:16:42.7573440Z         )
2025-01-14T13:16:42.7573510Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7573740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7573800Z         ]
2025-01-14T13:16:42.7574060Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7574060Z 
2025-01-14T13:16:42.7574180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7574620Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-2] _________
2025-01-14T13:16:42.7574620Z 
2025-01-14T13:16:42.7574770Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7575030Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7575040Z 
2025-01-14T13:16:42.7575100Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7575170Z         "expected,obtained",
2025-01-14T13:16:42.7575210Z         [
2025-01-14T13:16:42.7575250Z             (
2025-01-14T13:16:42.7575330Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7575420Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7575460Z             ),
2025-01-14T13:16:42.7575590Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7575680Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7575730Z         ],
2025-01-14T13:16:42.7575780Z     )
2025-01-14T13:16:42.7575910Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7576010Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7576020Z 
2025-01-14T13:16:42.7576150Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7576250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7576460Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7576550Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7576770Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7576860Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7576960Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7577020Z     sim = run_tardis(
2025-01-14T13:16:42.7577070Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7577200Z     simulation.run_convergence()
2025-01-14T13:16:42.7577290Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7577400Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7577470Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7578270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7578640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7578660Z 
2025-01-14T13:16:42.7579380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7579590Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7579760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7579980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7580120Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7580230Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7580230Z 
2025-01-14T13:16:42.7580310Z     def initialize_transport_state(
2025-01-14T13:16:42.7580360Z         self,
2025-01-14T13:16:42.7580410Z         simulation_state,
2025-01-14T13:16:42.7580460Z         opacity_state,
2025-01-14T13:16:42.7580520Z         macro_atom_state,
2025-01-14T13:16:42.7580560Z         plasma,
2025-01-14T13:16:42.7580610Z         no_of_packets,
2025-01-14T13:16:42.7580660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7580710Z         iteration=0,
2025-01-14T13:16:42.7580760Z     ):
2025-01-14T13:16:42.7580860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7580930Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7580980Z         else:
2025-01-14T13:16:42.7581210Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7581260Z     
2025-01-14T13:16:42.7581370Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7581440Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7581490Z         )
2025-01-14T13:16:42.7581530Z     
2025-01-14T13:16:42.7581630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7581720Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7581860Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7581900Z         else:
2025-01-14T13:16:42.7581960Z             continuum_state = None
2025-01-14T13:16:42.7582030Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7582120Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7582190Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7582270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7582360Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7582440Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7582510Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7582550Z         ).to_numba(
2025-01-14T13:16:42.7582610Z             macro_atom_state,
2025-01-14T13:16:42.7582670Z             self.line_interaction_type,
2025-01-14T13:16:42.7582720Z         )
2025-01-14T13:16:42.7582790Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7583010Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7583060Z         ]
2025-01-14T13:16:42.7583310Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7583310Z 
2025-01-14T13:16:42.7583420Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7583570Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-5] _________
2025-01-14T13:16:42.7583580Z 
2025-01-14T13:16:42.7583810Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7584080Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7584080Z 
2025-01-14T13:16:42.7584840Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7585260Z         "expected,obtained",
2025-01-14T13:16:42.7585410Z         [
2025-01-14T13:16:42.7585560Z             (
2025-01-14T13:16:42.7585810Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7586120Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7586270Z             ),
2025-01-14T13:16:42.7586610Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7587090Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7587290Z         ],
2025-01-14T13:16:42.7587420Z     )
2025-01-14T13:16:42.7588010Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7588140Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7588140Z 
2025-01-14T13:16:42.7588280Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7588370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7588590Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7588680Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7588900Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7588980Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7589780Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7590050Z     sim = run_tardis(
2025-01-14T13:16:42.7591050Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7591240Z     simulation.run_convergence()
2025-01-14T13:16:42.7591510Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7597750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7597870Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7598000Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7598090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7598090Z 
2025-01-14T13:16:42.7598310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7598460Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7598650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7598870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7599020Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7599130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7599140Z 
2025-01-14T13:16:42.7599200Z     def initialize_transport_state(
2025-01-14T13:16:42.7599260Z         self,
2025-01-14T13:16:42.7599520Z         simulation_state,
2025-01-14T13:16:42.7600180Z         opacity_state,
2025-01-14T13:16:42.7600380Z         macro_atom_state,
2025-01-14T13:16:42.7600540Z         plasma,
2025-01-14T13:16:42.7600700Z         no_of_packets,
2025-01-14T13:16:42.7600880Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7601030Z         iteration=0,
2025-01-14T13:16:42.7601180Z     ):
2025-01-14T13:16:42.7601480Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7601690Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7601840Z         else:
2025-01-14T13:16:42.7602450Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7602590Z     
2025-01-14T13:16:42.7602950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7603030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7603080Z         )
2025-01-14T13:16:42.7603130Z     
2025-01-14T13:16:42.7603230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7603330Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7603450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7603500Z         else:
2025-01-14T13:16:42.7603560Z             continuum_state = None
2025-01-14T13:16:42.7603640Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7603720Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7603800Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7603880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7603970Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7604050Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7604120Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7604180Z         ).to_numba(
2025-01-14T13:16:42.7604230Z             macro_atom_state,
2025-01-14T13:16:42.7604300Z             self.line_interaction_type,
2025-01-14T13:16:42.7604340Z         )
2025-01-14T13:16:42.7604420Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7604650Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7604700Z         ]
2025-01-14T13:16:42.7604950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7604950Z 
2025-01-14T13:16:42.7605070Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7605220Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-10] _________
2025-01-14T13:16:42.7605630Z 
2025-01-14T13:16:42.7605770Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7606030Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7606040Z 
2025-01-14T13:16:42.7606100Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7606160Z         "expected,obtained",
2025-01-14T13:16:42.7606210Z         [
2025-01-14T13:16:42.7606250Z             (
2025-01-14T13:16:42.7606330Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7606410Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7606460Z             ),
2025-01-14T13:16:42.7606580Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7606680Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7606720Z         ],
2025-01-14T13:16:42.7606770Z     )
2025-01-14T13:16:42.7606900Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7607000Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7607000Z 
2025-01-14T13:16:42.7607130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7607230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7607440Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7607530Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7607740Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7607830Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7607940Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7608000Z     sim = run_tardis(
2025-01-14T13:16:42.7608190Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7608280Z     simulation.run_convergence()
2025-01-14T13:16:42.7608700Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7608820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7608900Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7609020Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7609130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7609130Z 
2025-01-14T13:16:42.7609350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7609510Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7609690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7609930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7610060Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7610180Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7610180Z 
2025-01-14T13:16:42.7610250Z     def initialize_transport_state(
2025-01-14T13:16:42.7610290Z         self,
2025-01-14T13:16:42.7610350Z         simulation_state,
2025-01-14T13:16:42.7610400Z         opacity_state,
2025-01-14T13:16:42.7610460Z         macro_atom_state,
2025-01-14T13:16:42.7610500Z         plasma,
2025-01-14T13:16:42.7610550Z         no_of_packets,
2025-01-14T13:16:42.7610610Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7610660Z         iteration=0,
2025-01-14T13:16:42.7610700Z     ):
2025-01-14T13:16:42.7610800Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7610870Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7610910Z         else:
2025-01-14T13:16:42.7610970Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7611010Z     
2025-01-14T13:16:42.7611400Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7611650Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7611700Z         )
2025-01-14T13:16:42.7611740Z     
2025-01-14T13:16:42.7611860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7611950Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7612080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7612130Z         else:
2025-01-14T13:16:42.7612190Z             continuum_state = None
2025-01-14T13:16:42.7612260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7612350Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7612430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7612510Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7612580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7612650Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7612730Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7612790Z         ).to_numba(
2025-01-14T13:16:42.7612860Z             macro_atom_state,
2025-01-14T13:16:42.7612920Z             self.line_interaction_type,
2025-01-14T13:16:42.7612970Z         )
2025-01-14T13:16:42.7613040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7613270Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7613320Z         ]
2025-01-14T13:16:42.7613570Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7613570Z 
2025-01-14T13:16:42.7613690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7613840Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[10] ________
2025-01-14T13:16:42.7613840Z 
2025-01-14T13:16:42.7614010Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7614420Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7614420Z 
2025-01-14T13:16:42.7614490Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7614550Z         "expected,obtained",
2025-01-14T13:16:42.7614870Z         [
2025-01-14T13:16:42.7614930Z             (
2025-01-14T13:16:42.7615020Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7615100Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7615140Z             ),
2025-01-14T13:16:42.7615270Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7615360Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7615410Z         ],
2025-01-14T13:16:42.7615460Z     )
2025-01-14T13:16:42.7615590Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7615680Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7615690Z 
2025-01-14T13:16:42.7615820Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7615910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7616130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7616220Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7616440Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7616520Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7616620Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7616680Z     sim = run_tardis(
2025-01-14T13:16:42.7616740Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7616800Z     simulation.run_convergence()
2025-01-14T13:16:42.7616960Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7617080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7617150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7617280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7617390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7617400Z 
2025-01-14T13:16:42.7617610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7617770Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7618520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7619600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7619940Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7620430Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7620450Z 
2025-01-14T13:16:42.7620640Z     def initialize_transport_state(
2025-01-14T13:16:42.7620780Z         self,
2025-01-14T13:16:42.7620940Z         simulation_state,
2025-01-14T13:16:42.7621100Z         opacity_state,
2025-01-14T13:16:42.7621260Z         macro_atom_state,
2025-01-14T13:16:42.7621420Z         plasma,
2025-01-14T13:16:42.7621580Z         no_of_packets,
2025-01-14T13:16:42.7621750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7621900Z         iteration=0,
2025-01-14T13:16:42.7622040Z     ):
2025-01-14T13:16:42.7622320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7622520Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7623050Z         else:
2025-01-14T13:16:42.7623260Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7623400Z     
2025-01-14T13:16:42.7623710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7623950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7624800Z         )
2025-01-14T13:16:42.7624960Z     
2025-01-14T13:16:42.7625320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7625790Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7626350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7626450Z         else:
2025-01-14T13:16:42.7626510Z             continuum_state = None
2025-01-14T13:16:42.7626590Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7626690Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7626770Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7626850Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7626920Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7627000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7627090Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7627140Z         ).to_numba(
2025-01-14T13:16:42.7627200Z             macro_atom_state,
2025-01-14T13:16:42.7627270Z             self.line_interaction_type,
2025-01-14T13:16:42.7627310Z         )
2025-01-14T13:16:42.7627380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7627610Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7627650Z         ]
2025-01-14T13:16:42.7627900Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7627910Z 
2025-01-14T13:16:42.7628020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7628180Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[30] ________
2025-01-14T13:16:42.7628180Z 
2025-01-14T13:16:42.7628310Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7628950Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7628960Z 
2025-01-14T13:16:42.7629020Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7629090Z         "expected,obtained",
2025-01-14T13:16:42.7629130Z         [
2025-01-14T13:16:42.7629170Z             (
2025-01-14T13:16:42.7629260Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7629340Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7629390Z             ),
2025-01-14T13:16:42.7629520Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7629620Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7629660Z         ],
2025-01-14T13:16:42.7629710Z     )
2025-01-14T13:16:42.7629840Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7629930Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7629930Z 
2025-01-14T13:16:42.7630070Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7630160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7630390Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7630470Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7630700Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7630780Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7630890Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7630940Z     sim = run_tardis(
2025-01-14T13:16:42.7631020Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7631090Z     simulation.run_convergence()
2025-01-14T13:16:42.7631180Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7631300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7631490Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7631620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7631710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7631720Z 
2025-01-14T13:16:42.7631930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7632090Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7632280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7632500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7632620Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7632720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7632730Z 
2025-01-14T13:16:42.7632800Z     def initialize_transport_state(
2025-01-14T13:16:42.7632840Z         self,
2025-01-14T13:16:42.7632900Z         simulation_state,
2025-01-14T13:16:42.7632960Z         opacity_state,
2025-01-14T13:16:42.7633010Z         macro_atom_state,
2025-01-14T13:16:42.7633050Z         plasma,
2025-01-14T13:16:42.7633100Z         no_of_packets,
2025-01-14T13:16:42.7633170Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7633210Z         iteration=0,
2025-01-14T13:16:42.7633260Z     ):
2025-01-14T13:16:42.7633350Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7633430Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7633470Z         else:
2025-01-14T13:16:42.7633530Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7633570Z     
2025-01-14T13:16:42.7633680Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7633750Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7633860Z         )
2025-01-14T13:16:42.7633910Z     
2025-01-14T13:16:42.7634010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7634110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7634230Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7634280Z         else:
2025-01-14T13:16:42.7634330Z             continuum_state = None
2025-01-14T13:16:42.7634410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7634490Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7634560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7634640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7634710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7634780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7634850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7634900Z         ).to_numba(
2025-01-14T13:16:42.7634980Z             macro_atom_state,
2025-01-14T13:16:42.7635040Z             self.line_interaction_type,
2025-01-14T13:16:42.7635090Z         )
2025-01-14T13:16:42.7635170Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7635390Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7635440Z         ]
2025-01-14T13:16:42.7635680Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7635680Z 
2025-01-14T13:16:42.7635800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7636060Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[50] ________
2025-01-14T13:16:42.7636070Z 
2025-01-14T13:16:42.7636220Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7636800Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7636820Z 
2025-01-14T13:16:42.7636890Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7636950Z         "expected,obtained",
2025-01-14T13:16:42.7636990Z         [
2025-01-14T13:16:42.7637040Z             (
2025-01-14T13:16:42.7637120Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7637210Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7637250Z             ),
2025-01-14T13:16:42.7637380Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7637480Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7637520Z         ],
2025-01-14T13:16:42.7637570Z     )
2025-01-14T13:16:42.7637700Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7637790Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7637790Z 
2025-01-14T13:16:42.7637940Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7638030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7638800Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7638910Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7639130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7639230Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7639340Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7639390Z     sim = run_tardis(
2025-01-14T13:16:42.7639450Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7639520Z     simulation.run_convergence()
2025-01-14T13:16:42.7639610Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7639720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7640080Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7640200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7640300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7640300Z 
2025-01-14T13:16:42.7640510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7640670Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7640840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7641070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7641190Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7641300Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7641300Z 
2025-01-14T13:16:42.7641370Z     def initialize_transport_state(
2025-01-14T13:16:42.7641410Z         self,
2025-01-14T13:16:42.7641470Z         simulation_state,
2025-01-14T13:16:42.7641520Z         opacity_state,
2025-01-14T13:16:42.7641580Z         macro_atom_state,
2025-01-14T13:16:42.7641620Z         plasma,
2025-01-14T13:16:42.7641680Z         no_of_packets,
2025-01-14T13:16:42.7641730Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7641780Z         iteration=0,
2025-01-14T13:16:42.7641820Z     ):
2025-01-14T13:16:42.7641920Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7641990Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7642030Z         else:
2025-01-14T13:16:42.7642080Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7642130Z     
2025-01-14T13:16:42.7642230Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7642300Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7642350Z         )
2025-01-14T13:16:42.7642390Z     
2025-01-14T13:16:42.7642730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7642830Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7642950Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7642990Z         else:
2025-01-14T13:16:42.7643060Z             continuum_state = None
2025-01-14T13:16:42.7643130Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7643220Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7643280Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7643370Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7643440Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7643510Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7643570Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7643620Z         ).to_numba(
2025-01-14T13:16:42.7643680Z             macro_atom_state,
2025-01-14T13:16:42.7644260Z             self.line_interaction_type,
2025-01-14T13:16:42.7644540Z         )
2025-01-14T13:16:42.7644770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7645400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7645550Z         ]
2025-01-14T13:16:42.7646220Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7646230Z 
2025-01-14T13:16:42.7646550Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7646960Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-2] _______
2025-01-14T13:16:42.7646970Z 
2025-01-14T13:16:42.7647330Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7648400Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7649330Z 
2025-01-14T13:16:42.7649560Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7649730Z         "expected,obtained",
2025-01-14T13:16:42.7649880Z         [
2025-01-14T13:16:42.7650010Z             (
2025-01-14T13:16:42.7650250Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7650470Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7650620Z             ),
2025-01-14T13:16:42.7650950Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7651210Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7651390Z         ],
2025-01-14T13:16:42.7651550Z     )
2025-01-14T13:16:42.7651980Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7652600Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7652620Z 
2025-01-14T13:16:42.7652790Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7652910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7653150Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7653260Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7653490Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7653570Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7653680Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7653730Z     sim = run_tardis(
2025-01-14T13:16:42.7653800Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7653850Z     simulation.run_convergence()
2025-01-14T13:16:42.7653940Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7654050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7654120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7654470Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7654580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7654580Z 
2025-01-14T13:16:42.7654800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7654960Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7655130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7655350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7655480Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7655590Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7655590Z 
2025-01-14T13:16:42.7655650Z     def initialize_transport_state(
2025-01-14T13:16:42.7655710Z         self,
2025-01-14T13:16:42.7655760Z         simulation_state,
2025-01-14T13:16:42.7655810Z         opacity_state,
2025-01-14T13:16:42.7655860Z         macro_atom_state,
2025-01-14T13:16:42.7655910Z         plasma,
2025-01-14T13:16:42.7655960Z         no_of_packets,
2025-01-14T13:16:42.7656010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7656060Z         iteration=0,
2025-01-14T13:16:42.7656100Z     ):
2025-01-14T13:16:42.7656200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7656280Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7656320Z         else:
2025-01-14T13:16:42.7656380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7656420Z     
2025-01-14T13:16:42.7656520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7656600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7656640Z         )
2025-01-14T13:16:42.7656680Z     
2025-01-14T13:16:42.7656870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7656960Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7657080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7657130Z         else:
2025-01-14T13:16:42.7657190Z             continuum_state = None
2025-01-14T13:16:42.7657270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7657460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7657530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7657610Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7657690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7657750Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7657820Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7657870Z         ).to_numba(
2025-01-14T13:16:42.7657920Z             macro_atom_state,
2025-01-14T13:16:42.7657990Z             self.line_interaction_type,
2025-01-14T13:16:42.7658030Z         )
2025-01-14T13:16:42.7658110Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7658330Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7658380Z         ]
2025-01-14T13:16:42.7658620Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7658630Z 
2025-01-14T13:16:42.7658740Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7658890Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-5] _______
2025-01-14T13:16:42.7658900Z 
2025-01-14T13:16:42.7659030Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7659300Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7659300Z 
2025-01-14T13:16:42.7659460Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7659670Z         "expected,obtained",
2025-01-14T13:16:42.7659720Z         [
2025-01-14T13:16:42.7659770Z             (
2025-01-14T13:16:42.7659850Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7659930Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7659980Z             ),
2025-01-14T13:16:42.7660100Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7660200Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7660240Z         ],
2025-01-14T13:16:42.7660280Z     )
2025-01-14T13:16:42.7660410Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7660500Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7660510Z 
2025-01-14T13:16:42.7660640Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7660740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7660960Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7661050Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7661260Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7661350Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7661450Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7661500Z     sim = run_tardis(
2025-01-14T13:16:42.7661570Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7661630Z     simulation.run_convergence()
2025-01-14T13:16:42.7661730Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7661840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7661920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7662090Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7662190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7662190Z 
2025-01-14T13:16:42.7662400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7662840Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7663020Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7663240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7663380Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7663490Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7663490Z 
2025-01-14T13:16:42.7663580Z     def initialize_transport_state(
2025-01-14T13:16:42.7663630Z         self,
2025-01-14T13:16:42.7663690Z         simulation_state,
2025-01-14T13:16:42.7663740Z         opacity_state,
2025-01-14T13:16:42.7663790Z         macro_atom_state,
2025-01-14T13:16:42.7663830Z         plasma,
2025-01-14T13:16:42.7663890Z         no_of_packets,
2025-01-14T13:16:42.7663940Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7663990Z         iteration=0,
2025-01-14T13:16:42.7664040Z     ):
2025-01-14T13:16:42.7664130Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7664200Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7664250Z         else:
2025-01-14T13:16:42.7664300Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7664340Z     
2025-01-14T13:16:42.7664450Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7664520Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7664570Z         )
2025-01-14T13:16:42.7664610Z     
2025-01-14T13:16:42.7664710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7664800Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7665340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7665410Z         else:
2025-01-14T13:16:42.7665470Z             continuum_state = None
2025-01-14T13:16:42.7665550Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7671010Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7671100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7671190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7671260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7671430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7671520Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7671560Z         ).to_numba(
2025-01-14T13:16:42.7671620Z             macro_atom_state,
2025-01-14T13:16:42.7671680Z             self.line_interaction_type,
2025-01-14T13:16:42.7671730Z         )
2025-01-14T13:16:42.7671810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7672040Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7672080Z         ]
2025-01-14T13:16:42.7672330Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7672330Z 
2025-01-14T13:16:42.7672440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7672610Z ______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-10] _______
2025-01-14T13:16:42.7672620Z 
2025-01-14T13:16:42.7672760Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7673020Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7673020Z 
2025-01-14T13:16:42.7673520Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7673680Z         "expected,obtained",
2025-01-14T13:16:42.7673750Z         [
2025-01-14T13:16:42.7673800Z             (
2025-01-14T13:16:42.7673890Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7673980Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7674040Z             ),
2025-01-14T13:16:42.7674160Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7674260Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7674310Z         ],
2025-01-14T13:16:42.7674350Z     )
2025-01-14T13:16:42.7674480Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7674570Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7674580Z 
2025-01-14T13:16:42.7674710Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7674810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7675050Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7675130Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7675360Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7675450Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7675550Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7675600Z     sim = run_tardis(
2025-01-14T13:16:42.7675680Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7675740Z     simulation.run_convergence()
2025-01-14T13:16:42.7675830Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7675940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7676010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7676140Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7676350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7676360Z 
2025-01-14T13:16:42.7676580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7676760Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7676940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7677180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7677310Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7677420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7677430Z 
2025-01-14T13:16:42.7677490Z     def initialize_transport_state(
2025-01-14T13:16:42.7677540Z         self,
2025-01-14T13:16:42.7677590Z         simulation_state,
2025-01-14T13:16:42.7677650Z         opacity_state,
2025-01-14T13:16:42.7677700Z         macro_atom_state,
2025-01-14T13:16:42.7677750Z         plasma,
2025-01-14T13:16:42.7677800Z         no_of_packets,
2025-01-14T13:16:42.7677860Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7677910Z         iteration=0,
2025-01-14T13:16:42.7677970Z     ):
2025-01-14T13:16:42.7678070Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7678140Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7678190Z         else:
2025-01-14T13:16:42.7678250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7678290Z     
2025-01-14T13:16:42.7678390Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7678470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7678510Z         )
2025-01-14T13:16:42.7678550Z     
2025-01-14T13:16:42.7678660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7678750Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7678970Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7679020Z         else:
2025-01-14T13:16:42.7679080Z             continuum_state = None
2025-01-14T13:16:42.7679160Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7679270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7679340Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7679520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7679620Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7679690Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7679760Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7679810Z         ).to_numba(
2025-01-14T13:16:42.7679860Z             macro_atom_state,
2025-01-14T13:16:42.7679920Z             self.line_interaction_type,
2025-01-14T13:16:42.7679960Z         )
2025-01-14T13:16:42.7680050Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7680280Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7680340Z         ]
2025-01-14T13:16:42.7680580Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7680590Z 
2025-01-14T13:16:42.7680710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7680870Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-2] ________
2025-01-14T13:16:42.7680870Z 
2025-01-14T13:16:42.7681010Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7681280Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7681280Z 
2025-01-14T13:16:42.7681350Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7681410Z         "expected,obtained",
2025-01-14T13:16:42.7681450Z         [
2025-01-14T13:16:42.7681620Z             (
2025-01-14T13:16:42.7681710Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7681790Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7681840Z             ),
2025-01-14T13:16:42.7681960Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7682060Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7682410Z         ],
2025-01-14T13:16:42.7682480Z     )
2025-01-14T13:16:42.7682730Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7682820Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7682820Z 
2025-01-14T13:16:42.7682960Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7683050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7683280Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7683380Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7683610Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7683690Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7683800Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7683840Z     sim = run_tardis(
2025-01-14T13:16:42.7683910Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7683970Z     simulation.run_convergence()
2025-01-14T13:16:42.7684060Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7684160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7684240Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7684360Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7684560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7684560Z 
2025-01-14T13:16:42.7684780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7684930Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7685110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7685330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7685460Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7685570Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7685570Z 
2025-01-14T13:16:42.7685640Z     def initialize_transport_state(
2025-01-14T13:16:42.7685680Z         self,
2025-01-14T13:16:42.7685740Z         simulation_state,
2025-01-14T13:16:42.7685790Z         opacity_state,
2025-01-14T13:16:42.7685860Z         macro_atom_state,
2025-01-14T13:16:42.7685900Z         plasma,
2025-01-14T13:16:42.7685950Z         no_of_packets,
2025-01-14T13:16:42.7686010Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7686060Z         iteration=0,
2025-01-14T13:16:42.7686100Z     ):
2025-01-14T13:16:42.7686200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7686270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7686310Z         else:
2025-01-14T13:16:42.7686380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7686420Z     
2025-01-14T13:16:42.7686530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7686600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7686650Z         )
2025-01-14T13:16:42.7686690Z     
2025-01-14T13:16:42.7686790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7686880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7687020Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7687500Z         else:
2025-01-14T13:16:42.7687600Z             continuum_state = None
2025-01-14T13:16:42.7687680Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7687760Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7687840Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7687930Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7688010Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7688080Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7688150Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7688190Z         ).to_numba(
2025-01-14T13:16:42.7688250Z             macro_atom_state,
2025-01-14T13:16:42.7688310Z             self.line_interaction_type,
2025-01-14T13:16:42.7688360Z         )
2025-01-14T13:16:42.7688430Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7688660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7688710Z         ]
2025-01-14T13:16:42.7688960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7688960Z 
2025-01-14T13:16:42.7689080Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7689240Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-5] ________
2025-01-14T13:16:42.7689250Z 
2025-01-14T13:16:42.7689400Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7689680Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7689690Z 
2025-01-14T13:16:42.7689760Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7689830Z         "expected,obtained",
2025-01-14T13:16:42.7689970Z         [
2025-01-14T13:16:42.7690030Z             (
2025-01-14T13:16:42.7690120Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7690200Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7690250Z             ),
2025-01-14T13:16:42.7690380Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7690480Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7690520Z         ],
2025-01-14T13:16:42.7690570Z     )
2025-01-14T13:16:42.7690700Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7690790Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7690790Z 
2025-01-14T13:16:42.7690950Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7691050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7691270Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7691360Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7691580Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7691660Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7691770Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7691820Z     sim = run_tardis(
2025-01-14T13:16:42.7691880Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7691940Z     simulation.run_convergence()
2025-01-14T13:16:42.7692030Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7692140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7692210Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7692330Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7692420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7692430Z 
2025-01-14T13:16:42.7693380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7694560Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7695510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7696120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7696450Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7696790Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7696810Z 
2025-01-14T13:16:42.7697000Z     def initialize_transport_state(
2025-01-14T13:16:42.7697160Z         self,
2025-01-14T13:16:42.7697310Z         simulation_state,
2025-01-14T13:16:42.7697480Z         opacity_state,
2025-01-14T13:16:42.7697670Z         macro_atom_state,
2025-01-14T13:16:42.7697850Z         plasma,
2025-01-14T13:16:42.7698010Z         no_of_packets,
2025-01-14T13:16:42.7698200Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7698350Z         iteration=0,
2025-01-14T13:16:42.7698490Z     ):
2025-01-14T13:16:42.7698980Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7699220Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7699370Z         else:
2025-01-14T13:16:42.7699540Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7700920Z     
2025-01-14T13:16:42.7701990Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7702290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7702430Z         )
2025-01-14T13:16:42.7703390Z     
2025-01-14T13:16:42.7703550Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7703650Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7703780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7705390Z         else:
2025-01-14T13:16:42.7705710Z             continuum_state = None
2025-01-14T13:16:42.7706780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7707070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7708290Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7708480Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7708850Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7709110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7709300Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7709460Z         ).to_numba(
2025-01-14T13:16:42.7710200Z             macro_atom_state,
2025-01-14T13:16:42.7710660Z             self.line_interaction_type,
2025-01-14T13:16:42.7710720Z         )
2025-01-14T13:16:42.7710800Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7711040Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7711100Z         ]
2025-01-14T13:16:42.7711360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7711370Z 
2025-01-14T13:16:42.7711480Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7711660Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-10] _______
2025-01-14T13:16:42.7711660Z 
2025-01-14T13:16:42.7711800Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:42.7712070Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:42.7712070Z 
2025-01-14T13:16:42.7712140Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.7712190Z         "expected,obtained",
2025-01-14T13:16:42.7712240Z         [
2025-01-14T13:16:42.7712290Z             (
2025-01-14T13:16:42.7712380Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:42.7712620Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:42.7712680Z             ),
2025-01-14T13:16:42.7713080Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:42.7713200Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:42.7713250Z         ],
2025-01-14T13:16:42.7713300Z     )
2025-01-14T13:16:42.7714100Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:42.7714410Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7714420Z 
2025-01-14T13:16:42.7715050Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:42.7715440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7715710Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7715810Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7716050Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:42.7716140Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.7716260Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:42.7716310Z     sim = run_tardis(
2025-01-14T13:16:42.7716380Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7716450Z     simulation.run_convergence()
2025-01-14T13:16:42.7716540Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7716680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7716760Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7716890Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7716990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7717110Z 
2025-01-14T13:16:42.7717340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:42.7717500Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:42.7717690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:42.7717920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:42.7718050Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:42.7718160Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7718170Z 
2025-01-14T13:16:42.7718230Z     def initialize_transport_state(
2025-01-14T13:16:42.7718280Z         self,
2025-01-14T13:16:42.7718340Z         simulation_state,
2025-01-14T13:16:42.7718390Z         opacity_state,
2025-01-14T13:16:42.7718440Z         macro_atom_state,
2025-01-14T13:16:42.7718490Z         plasma,
2025-01-14T13:16:42.7718540Z         no_of_packets,
2025-01-14T13:16:42.7718600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7718650Z         iteration=0,
2025-01-14T13:16:42.7718700Z     ):
2025-01-14T13:16:42.7718800Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7718880Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7718930Z         else:
2025-01-14T13:16:42.7718990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7719040Z     
2025-01-14T13:16:42.7719150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7719230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7719280Z         )
2025-01-14T13:16:42.7719320Z     
2025-01-14T13:16:42.7719430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7719810Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7720210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7720460Z         else:
2025-01-14T13:16:42.7720530Z             continuum_state = None
2025-01-14T13:16:42.7720690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7720790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7720860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7720950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7721030Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7721100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7721190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7721240Z         ).to_numba(
2025-01-14T13:16:42.7721580Z             macro_atom_state,
2025-01-14T13:16:42.7721670Z             self.line_interaction_type,
2025-01-14T13:16:42.7721720Z         )
2025-01-14T13:16:42.7721800Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7722030Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7722100Z         ]
2025-01-14T13:16:42.7722360Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7722360Z 
2025-01-14T13:16:42.7722930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7723130Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-14T13:16:42.7723130Z 
2025-01-14T13:16:42.7723740Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7724040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7724050Z 
2025-01-14T13:16:42.7724110Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7724350Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7724410Z         """
2025-01-14T13:16:42.7724530Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7724580Z     
2025-01-14T13:16:42.7724630Z         Parameters
2025-01-14T13:16:42.7724680Z         ----------
2025-01-14T13:16:42.7724810Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7724920Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7725010Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7725070Z             Atomic data.
2025-01-14T13:16:42.7725110Z     
2025-01-14T13:16:42.7725180Z         Returns
2025-01-14T13:16:42.7725230Z         -------
2025-01-14T13:16:42.7725320Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7725370Z             Simulation object.
2025-01-14T13:16:42.7725420Z         """
2025-01-14T13:16:42.7725550Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7725710Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7725800Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7725920Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7726030Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7726190Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7726290Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7726370Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7726450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7726500Z >       sim = run_tardis(
2025-01-14T13:16:42.7726560Z             config_verysimple,
2025-01-14T13:16:42.7726620Z             atom_data=atomic_data,
2025-01-14T13:16:42.7726690Z             show_convergence_plots=False,
2025-01-14T13:16:42.7726750Z             log_level="CRITICAl",
2025-01-14T13:16:42.7726810Z         )
2025-01-14T13:16:42.7726900Z 
2025-01-14T13:16:42.7727020Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7727130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7727200Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7727260Z     simulation.run_convergence()
2025-01-14T13:16:42.7727350Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7727470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7727530Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7727650Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7728760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7728770Z 
2025-01-14T13:16:42.7729000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7729170Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7729350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7730430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7730960Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7731310Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7731320Z 
2025-01-14T13:16:42.7731550Z     def initialize_transport_state(
2025-01-14T13:16:42.7731730Z         self,
2025-01-14T13:16:42.7731920Z         simulation_state,
2025-01-14T13:16:42.7732080Z         opacity_state,
2025-01-14T13:16:42.7732250Z         macro_atom_state,
2025-01-14T13:16:42.7732400Z         plasma,
2025-01-14T13:16:42.7732860Z         no_of_packets,
2025-01-14T13:16:42.7732970Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7733160Z         iteration=0,
2025-01-14T13:16:42.7733200Z     ):
2025-01-14T13:16:42.7733310Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7733380Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7733450Z         else:
2025-01-14T13:16:42.7733510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7733550Z     
2025-01-14T13:16:42.7733830Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7733920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7733960Z         )
2025-01-14T13:16:42.7734010Z     
2025-01-14T13:16:42.7734110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7734200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7734330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7734380Z         else:
2025-01-14T13:16:42.7734450Z             continuum_state = None
2025-01-14T13:16:42.7734530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7734630Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7734700Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7734790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7734870Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7734940Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7735010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7735050Z         ).to_numba(
2025-01-14T13:16:42.7735320Z             macro_atom_state,
2025-01-14T13:16:42.7735860Z             self.line_interaction_type,
2025-01-14T13:16:42.7735940Z         )
2025-01-14T13:16:42.7736020Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7736510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7736580Z         ]
2025-01-14T13:16:42.7737460Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7737470Z 
2025-01-14T13:16:42.7737610Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7737750Z ---------------------------- Captured stdout setup -----------------------------
2025-01-14T13:16:42.7738190Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-14T13:16:42.7738500Z log_level = CRITICAL will be used for Log Level Determination
2025-01-14T13:16:42.7738510Z 
2025-01-14T13:16:42.7738690Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-14T13:16:42.7738700Z 
2025-01-14T13:16:42.7739790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7740110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7740110Z 
2025-01-14T13:16:42.7740180Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7740300Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7740350Z         """
2025-01-14T13:16:42.7740470Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7740510Z     
2025-01-14T13:16:42.7740560Z         Parameters
2025-01-14T13:16:42.7740620Z         ----------
2025-01-14T13:16:42.7740730Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7740840Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7740930Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7740980Z             Atomic data.
2025-01-14T13:16:42.7741570Z     
2025-01-14T13:16:42.7741950Z         Returns
2025-01-14T13:16:42.7743140Z         -------
2025-01-14T13:16:42.7743420Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7743600Z             Simulation object.
2025-01-14T13:16:42.7744010Z         """
2025-01-14T13:16:42.7744340Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7744500Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7744590Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7744690Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7744800Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7744950Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7745070Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7745140Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7745220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7745280Z >       sim = run_tardis(
2025-01-14T13:16:42.7745360Z             config_verysimple,
2025-01-14T13:16:42.7745410Z             atom_data=atomic_data,
2025-01-14T13:16:42.7745480Z             show_convergence_plots=False,
2025-01-14T13:16:42.7745530Z             log_level="CRITICAl",
2025-01-14T13:16:42.7746010Z         )
2025-01-14T13:16:42.7746030Z 
2025-01-14T13:16:42.7746740Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7747020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7747350Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7747780Z     simulation.run_convergence()
2025-01-14T13:16:42.7748040Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7748700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7748970Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7749410Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7749690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7749690Z 
2025-01-14T13:16:42.7749930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7750090Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7750660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7751310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7752760Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7752930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7752940Z 
2025-01-14T13:16:42.7753040Z     def initialize_transport_state(
2025-01-14T13:16:42.7753120Z         self,
2025-01-14T13:16:42.7753210Z         simulation_state,
2025-01-14T13:16:42.7753280Z         opacity_state,
2025-01-14T13:16:42.7753330Z         macro_atom_state,
2025-01-14T13:16:42.7753380Z         plasma,
2025-01-14T13:16:42.7753450Z         no_of_packets,
2025-01-14T13:16:42.7753550Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7753630Z         iteration=0,
2025-01-14T13:16:42.7753700Z     ):
2025-01-14T13:16:42.7753840Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7753940Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7753980Z         else:
2025-01-14T13:16:42.7754050Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7754120Z     
2025-01-14T13:16:42.7754260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7754360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7754430Z         )
2025-01-14T13:16:42.7754480Z     
2025-01-14T13:16:42.7754590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7754670Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7754990Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7755040Z         else:
2025-01-14T13:16:42.7755100Z             continuum_state = None
2025-01-14T13:16:42.7756460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7756590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7756910Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7757250Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7758280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7758570Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7773190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7773300Z         ).to_numba(
2025-01-14T13:16:42.7773360Z             macro_atom_state,
2025-01-14T13:16:42.7773430Z             self.line_interaction_type,
2025-01-14T13:16:42.7773480Z         )
2025-01-14T13:16:42.7773560Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7773830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7773880Z         ]
2025-01-14T13:16:42.7774150Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7774160Z 
2025-01-14T13:16:42.7774290Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7774470Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-14T13:16:42.7774470Z 
2025-01-14T13:16:42.7775260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7775980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7776000Z 
2025-01-14T13:16:42.7777280Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7777440Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7777510Z         """
2025-01-14T13:16:42.7777660Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7777720Z     
2025-01-14T13:16:42.7777800Z         Parameters
2025-01-14T13:16:42.7777870Z         ----------
2025-01-14T13:16:42.7778010Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7778240Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7778400Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7778490Z             Atomic data.
2025-01-14T13:16:42.7778550Z     
2025-01-14T13:16:42.7778600Z         Returns
2025-01-14T13:16:42.7778650Z         -------
2025-01-14T13:16:42.7779390Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7779690Z             Simulation object.
2025-01-14T13:16:42.7779850Z         """
2025-01-14T13:16:42.7780210Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7780630Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7780890Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7781190Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7781490Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7781890Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7782190Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7782400Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7782610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7782800Z >       sim = run_tardis(
2025-01-14T13:16:42.7783010Z             config_verysimple,
2025-01-14T13:16:42.7783870Z             atom_data=atomic_data,
2025-01-14T13:16:42.7784070Z             show_convergence_plots=False,
2025-01-14T13:16:42.7784250Z             log_level="CRITICAl",
2025-01-14T13:16:42.7784400Z         )
2025-01-14T13:16:42.7784410Z 
2025-01-14T13:16:42.7784730Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7785000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7785180Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7785380Z     simulation.run_convergence()
2025-01-14T13:16:42.7785620Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7785940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7786170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7786540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7786820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7786840Z 
2025-01-14T13:16:42.7787430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7787900Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7788380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7788970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7789300Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7789750Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7789760Z 
2025-01-14T13:16:42.7789960Z     def initialize_transport_state(
2025-01-14T13:16:42.7790110Z         self,
2025-01-14T13:16:42.7790400Z         simulation_state,
2025-01-14T13:16:42.7790940Z         opacity_state,
2025-01-14T13:16:42.7791160Z         macro_atom_state,
2025-01-14T13:16:42.7791570Z         plasma,
2025-01-14T13:16:42.7791880Z         no_of_packets,
2025-01-14T13:16:42.7792550Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7792640Z         iteration=0,
2025-01-14T13:16:42.7792690Z     ):
2025-01-14T13:16:42.7792790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7792870Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7792920Z         else:
2025-01-14T13:16:42.7792980Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7793030Z     
2025-01-14T13:16:42.7793150Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7793230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7793270Z         )
2025-01-14T13:16:42.7793340Z     
2025-01-14T13:16:42.7793450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7793550Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7793680Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7793740Z         else:
2025-01-14T13:16:42.7793810Z             continuum_state = None
2025-01-14T13:16:42.7793900Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7793990Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7794270Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7794620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7794840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7795070Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7795280Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7795440Z         ).to_numba(
2025-01-14T13:16:42.7795820Z             macro_atom_state,
2025-01-14T13:16:42.7796120Z             self.line_interaction_type,
2025-01-14T13:16:42.7796270Z         )
2025-01-14T13:16:42.7796540Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7797400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7798020Z         ]
2025-01-14T13:16:42.7798320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7798330Z 
2025-01-14T13:16:42.7798450Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7798780Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-14T13:16:42.7798790Z 
2025-01-14T13:16:42.7799770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7800670Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7800720Z 
2025-01-14T13:16:42.7801050Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7802160Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7802340Z         """
2025-01-14T13:16:42.7802680Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7803200Z     
2025-01-14T13:16:42.7803390Z         Parameters
2025-01-14T13:16:42.7803550Z         ----------
2025-01-14T13:16:42.7803890Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7804210Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7804690Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7804870Z             Atomic data.
2025-01-14T13:16:42.7805050Z     
2025-01-14T13:16:42.7805210Z         Returns
2025-01-14T13:16:42.7805360Z         -------
2025-01-14T13:16:42.7806020Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7806250Z             Simulation object.
2025-01-14T13:16:42.7806460Z         """
2025-01-14T13:16:42.7808510Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7808760Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7808890Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7808990Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7809100Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7809270Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7809400Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7809490Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7809600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7809680Z >       sim = run_tardis(
2025-01-14T13:16:42.7809760Z             config_verysimple,
2025-01-14T13:16:42.7809830Z             atom_data=atomic_data,
2025-01-14T13:16:42.7809940Z             show_convergence_plots=False,
2025-01-14T13:16:42.7810020Z             log_level="CRITICAl",
2025-01-14T13:16:42.7810090Z         )
2025-01-14T13:16:42.7810100Z 
2025-01-14T13:16:42.7810230Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7810350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7810420Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7810480Z     simulation.run_convergence()
2025-01-14T13:16:42.7810580Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7810700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7810790Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7811130Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7811270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7811280Z 
2025-01-14T13:16:42.7813980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7814200Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7814450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7814910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7815080Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7815230Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7815240Z 
2025-01-14T13:16:42.7815310Z     def initialize_transport_state(
2025-01-14T13:16:42.7815350Z         self,
2025-01-14T13:16:42.7815420Z         simulation_state,
2025-01-14T13:16:42.7815470Z         opacity_state,
2025-01-14T13:16:42.7815520Z         macro_atom_state,
2025-01-14T13:16:42.7815600Z         plasma,
2025-01-14T13:16:42.7815670Z         no_of_packets,
2025-01-14T13:16:42.7815770Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7815850Z         iteration=0,
2025-01-14T13:16:42.7815940Z     ):
2025-01-14T13:16:42.7816070Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7816180Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7816240Z         else:
2025-01-14T13:16:42.7816330Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7816380Z     
2025-01-14T13:16:42.7816520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7816620Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7816690Z         )
2025-01-14T13:16:42.7816750Z     
2025-01-14T13:16:42.7817240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7817650Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7818450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7818640Z         else:
2025-01-14T13:16:42.7818950Z             continuum_state = None
2025-01-14T13:16:42.7819820Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7820180Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7820590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7820740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7820860Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7820970Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7821070Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7821150Z         ).to_numba(
2025-01-14T13:16:42.7821250Z             macro_atom_state,
2025-01-14T13:16:42.7821340Z             self.line_interaction_type,
2025-01-14T13:16:42.7821420Z         )
2025-01-14T13:16:42.7821970Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7822290Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7822390Z         ]
2025-01-14T13:16:42.7822710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7822720Z 
2025-01-14T13:16:42.7822910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7823170Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-14T13:16:42.7823190Z 
2025-01-14T13:16:42.7823910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7824300Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7824320Z 
2025-01-14T13:16:42.7824420Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7824860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7824920Z         """
2025-01-14T13:16:42.7825250Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7825320Z     
2025-01-14T13:16:42.7825400Z         Parameters
2025-01-14T13:16:42.7825460Z         ----------
2025-01-14T13:16:42.7825630Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7826400Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7826970Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7827330Z             Atomic data.
2025-01-14T13:16:42.7827470Z     
2025-01-14T13:16:42.7827540Z         Returns
2025-01-14T13:16:42.7827630Z         -------
2025-01-14T13:16:42.7827770Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7827860Z             Simulation object.
2025-01-14T13:16:42.7827930Z         """
2025-01-14T13:16:42.7828110Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7828330Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7828460Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7828610Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7828770Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7829060Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7829670Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7830430Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7830580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7830660Z >       sim = run_tardis(
2025-01-14T13:16:42.7830750Z             config_verysimple,
2025-01-14T13:16:42.7830850Z             atom_data=atomic_data,
2025-01-14T13:16:42.7830940Z             show_convergence_plots=False,
2025-01-14T13:16:42.7831030Z             log_level="CRITICAl",
2025-01-14T13:16:42.7831100Z         )
2025-01-14T13:16:42.7831300Z 
2025-01-14T13:16:42.7831460Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7831570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7831650Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7831750Z     simulation.run_convergence()
2025-01-14T13:16:42.7831840Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7831950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7832020Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7832640Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7833250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7833270Z 
2025-01-14T13:16:42.7833940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7834480Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7834970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7835320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7835500Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7835650Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7835660Z 
2025-01-14T13:16:42.7835720Z     def initialize_transport_state(
2025-01-14T13:16:42.7835780Z         self,
2025-01-14T13:16:42.7835880Z         simulation_state,
2025-01-14T13:16:42.7835950Z         opacity_state,
2025-01-14T13:16:42.7836050Z         macro_atom_state,
2025-01-14T13:16:42.7836100Z         plasma,
2025-01-14T13:16:42.7836150Z         no_of_packets,
2025-01-14T13:16:42.7836210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7836480Z         iteration=0,
2025-01-14T13:16:42.7836530Z     ):
2025-01-14T13:16:42.7836650Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7836740Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7836810Z         else:
2025-01-14T13:16:42.7836890Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7836960Z     
2025-01-14T13:16:42.7837110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7837220Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7837280Z         )
2025-01-14T13:16:42.7837350Z     
2025-01-14T13:16:42.7837480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7837590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7837750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7837810Z         else:
2025-01-14T13:16:42.7837880Z             continuum_state = None
2025-01-14T13:16:42.7838140Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7838270Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7838380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7838500Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7838610Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7838710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7838800Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7838860Z         ).to_numba(
2025-01-14T13:16:42.7838910Z             macro_atom_state,
2025-01-14T13:16:42.7838980Z             self.line_interaction_type,
2025-01-14T13:16:42.7839020Z         )
2025-01-14T13:16:42.7839120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7839400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7839470Z         ]
2025-01-14T13:16:42.7839970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7839980Z 
2025-01-14T13:16:42.7840140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7840430Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-14T13:16:42.7840440Z 
2025-01-14T13:16:42.7841250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7841610Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7841620Z 
2025-01-14T13:16:42.7841690Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7841800Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7841850Z         """
2025-01-14T13:16:42.7842810Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7842890Z     
2025-01-14T13:16:42.7842970Z         Parameters
2025-01-14T13:16:42.7843060Z         ----------
2025-01-14T13:16:42.7843200Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7843350Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7843480Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7843560Z             Atomic data.
2025-01-14T13:16:42.7843640Z     
2025-01-14T13:16:42.7843720Z         Returns
2025-01-14T13:16:42.7843800Z         -------
2025-01-14T13:16:42.7843930Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7844030Z             Simulation object.
2025-01-14T13:16:42.7844100Z         """
2025-01-14T13:16:42.7844270Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7844630Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7844770Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7844910Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7845020Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7845190Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7845340Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7845450Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7845560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7845630Z >       sim = run_tardis(
2025-01-14T13:16:42.7845720Z             config_verysimple,
2025-01-14T13:16:42.7845810Z             atom_data=atomic_data,
2025-01-14T13:16:42.7845920Z             show_convergence_plots=False,
2025-01-14T13:16:42.7846030Z             log_level="CRITICAl",
2025-01-14T13:16:42.7846100Z         )
2025-01-14T13:16:42.7846100Z 
2025-01-14T13:16:42.7846260Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7846380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7846480Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7846580Z     simulation.run_convergence()
2025-01-14T13:16:42.7846700Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7846850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7846960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7847160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7847290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7847300Z 
2025-01-14T13:16:42.7847580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7847800Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7848480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7848770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7848960Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7849100Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7849110Z 
2025-01-14T13:16:42.7849170Z     def initialize_transport_state(
2025-01-14T13:16:42.7849220Z         self,
2025-01-14T13:16:42.7849280Z         simulation_state,
2025-01-14T13:16:42.7849370Z         opacity_state,
2025-01-14T13:16:42.7849460Z         macro_atom_state,
2025-01-14T13:16:42.7849550Z         plasma,
2025-01-14T13:16:42.7849630Z         no_of_packets,
2025-01-14T13:16:42.7849720Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7849810Z         iteration=0,
2025-01-14T13:16:42.7849890Z     ):
2025-01-14T13:16:42.7850010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7850080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7850140Z         else:
2025-01-14T13:16:42.7850220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7850290Z     
2025-01-14T13:16:42.7850420Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7850530Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7850610Z         )
2025-01-14T13:16:42.7850680Z     
2025-01-14T13:16:42.7850810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7850930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7851080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7851170Z         else:
2025-01-14T13:16:42.7851250Z             continuum_state = None
2025-01-14T13:16:42.7851360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7852540Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7853120Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7853710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7853960Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7854470Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7854850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7855080Z         ).to_numba(
2025-01-14T13:16:42.7855460Z             macro_atom_state,
2025-01-14T13:16:42.7855860Z             self.line_interaction_type,
2025-01-14T13:16:42.7855940Z         )
2025-01-14T13:16:42.7856040Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7856510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7856600Z         ]
2025-01-14T13:16:42.7856890Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7856900Z 
2025-01-14T13:16:42.7857030Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7857270Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-14T13:16:42.7857270Z 
2025-01-14T13:16:42.7857900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7858630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7858640Z 
2025-01-14T13:16:42.7858730Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7859050Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7859120Z         """
2025-01-14T13:16:42.7859240Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7859280Z     
2025-01-14T13:16:42.7860160Z         Parameters
2025-01-14T13:16:42.7860240Z         ----------
2025-01-14T13:16:42.7860390Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7860530Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7860650Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7860730Z             Atomic data.
2025-01-14T13:16:42.7860800Z     
2025-01-14T13:16:42.7860860Z         Returns
2025-01-14T13:16:42.7860900Z         -------
2025-01-14T13:16:42.7860980Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7861030Z             Simulation object.
2025-01-14T13:16:42.7861080Z         """
2025-01-14T13:16:42.7861200Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7861350Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7861470Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7865640Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7866070Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7866460Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7866770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7866980Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7867190Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7867350Z >       sim = run_tardis(
2025-01-14T13:16:42.7867590Z             config_verysimple,
2025-01-14T13:16:42.7867750Z             atom_data=atomic_data,
2025-01-14T13:16:42.7867950Z             show_convergence_plots=False,
2025-01-14T13:16:42.7868120Z             log_level="CRITICAl",
2025-01-14T13:16:42.7868290Z         )
2025-01-14T13:16:42.7868300Z 
2025-01-14T13:16:42.7868870Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7869920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7870130Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7870310Z     simulation.run_convergence()
2025-01-14T13:16:42.7870690Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7870850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7870920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7871040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7871140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7871140Z 
2025-01-14T13:16:42.7871360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7871530Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7871710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7871970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7872100Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7872210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7872220Z 
2025-01-14T13:16:42.7872280Z     def initialize_transport_state(
2025-01-14T13:16:42.7872330Z         self,
2025-01-14T13:16:42.7872380Z         simulation_state,
2025-01-14T13:16:42.7872440Z         opacity_state,
2025-01-14T13:16:42.7872500Z         macro_atom_state,
2025-01-14T13:16:42.7872550Z         plasma,
2025-01-14T13:16:42.7872600Z         no_of_packets,
2025-01-14T13:16:42.7872660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7872710Z         iteration=0,
2025-01-14T13:16:42.7872750Z     ):
2025-01-14T13:16:42.7872850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7872920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7873190Z         else:
2025-01-14T13:16:42.7873250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7873300Z     
2025-01-14T13:16:42.7873420Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7873490Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7873540Z         )
2025-01-14T13:16:42.7873580Z     
2025-01-14T13:16:42.7873680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7873770Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7873910Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7873950Z         else:
2025-01-14T13:16:42.7874020Z             continuum_state = None
2025-01-14T13:16:42.7874090Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7874180Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7874270Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7874360Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7874440Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7874510Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7874580Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7874630Z         ).to_numba(
2025-01-14T13:16:42.7874680Z             macro_atom_state,
2025-01-14T13:16:42.7874740Z             self.line_interaction_type,
2025-01-14T13:16:42.7874790Z         )
2025-01-14T13:16:42.7874860Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7875090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7875130Z         ]
2025-01-14T13:16:42.7875390Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7875390Z 
2025-01-14T13:16:42.7875630Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7875860Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-14T13:16:42.7875860Z 
2025-01-14T13:16:42.7876430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7876720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7876730Z 
2025-01-14T13:16:42.7876800Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7876920Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7876970Z         """
2025-01-14T13:16:42.7877100Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7877170Z     
2025-01-14T13:16:42.7877220Z         Parameters
2025-01-14T13:16:42.7877280Z         ----------
2025-01-14T13:16:42.7877400Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7877500Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7877590Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7877640Z             Atomic data.
2025-01-14T13:16:42.7878020Z     
2025-01-14T13:16:42.7878070Z         Returns
2025-01-14T13:16:42.7878120Z         -------
2025-01-14T13:16:42.7878200Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7878260Z             Simulation object.
2025-01-14T13:16:42.7878300Z         """
2025-01-14T13:16:42.7878430Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7878580Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7878670Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7878770Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7878980Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7879130Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7879240Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7879320Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7879410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7879460Z >       sim = run_tardis(
2025-01-14T13:16:42.7879520Z             config_verysimple,
2025-01-14T13:16:42.7879570Z             atom_data=atomic_data,
2025-01-14T13:16:42.7879640Z             show_convergence_plots=False,
2025-01-14T13:16:42.7879690Z             log_level="CRITICAl",
2025-01-14T13:16:42.7879740Z         )
2025-01-14T13:16:42.7879740Z 
2025-01-14T13:16:42.7879850Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7879950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7889370Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7889510Z     simulation.run_convergence()
2025-01-14T13:16:42.7889600Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7889710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7889780Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7889900Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7889990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7889990Z 
2025-01-14T13:16:42.7890340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7890500Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7890700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7891170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7891290Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7891390Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7891400Z 
2025-01-14T13:16:42.7891460Z     def initialize_transport_state(
2025-01-14T13:16:42.7891500Z         self,
2025-01-14T13:16:42.7891560Z         simulation_state,
2025-01-14T13:16:42.7891600Z         opacity_state,
2025-01-14T13:16:42.7891650Z         macro_atom_state,
2025-01-14T13:16:42.7891700Z         plasma,
2025-01-14T13:16:42.7891750Z         no_of_packets,
2025-01-14T13:16:42.7891800Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7891850Z         iteration=0,
2025-01-14T13:16:42.7891890Z     ):
2025-01-14T13:16:42.7891990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7892060Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7892110Z         else:
2025-01-14T13:16:42.7892170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7892210Z     
2025-01-14T13:16:42.7892310Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7892390Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7892430Z         )
2025-01-14T13:16:42.7892470Z     
2025-01-14T13:16:42.7892570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7892660Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7892780Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7892830Z         else:
2025-01-14T13:16:42.7892880Z             continuum_state = None
2025-01-14T13:16:42.7892960Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7893040Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7893100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7893190Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7893890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7893980Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7894040Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7894090Z         ).to_numba(
2025-01-14T13:16:42.7894140Z             macro_atom_state,
2025-01-14T13:16:42.7894210Z             self.line_interaction_type,
2025-01-14T13:16:42.7894250Z         )
2025-01-14T13:16:42.7894330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7894560Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7894600Z         ]
2025-01-14T13:16:42.7894840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7894850Z 
2025-01-14T13:16:42.7894960Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7895180Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-14T13:16:42.7895190Z 
2025-01-14T13:16:42.7897600Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7898650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7898660Z 
2025-01-14T13:16:42.7898850Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7899150Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7899290Z         """
2025-01-14T13:16:42.7899610Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7899740Z     
2025-01-14T13:16:42.7899900Z         Parameters
2025-01-14T13:16:42.7901600Z         ----------
2025-01-14T13:16:42.7901940Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7902400Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7902650Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7902810Z             Atomic data.
2025-01-14T13:16:42.7902950Z     
2025-01-14T13:16:42.7903210Z         Returns
2025-01-14T13:16:42.7903350Z         -------
2025-01-14T13:16:42.7903570Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7903880Z             Simulation object.
2025-01-14T13:16:42.7904080Z         """
2025-01-14T13:16:42.7904410Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7904790Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7905030Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7905290Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7905590Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7906150Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7906310Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7906380Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7906460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7906510Z >       sim = run_tardis(
2025-01-14T13:16:42.7906570Z             config_verysimple,
2025-01-14T13:16:42.7906620Z             atom_data=atomic_data,
2025-01-14T13:16:42.7906690Z             show_convergence_plots=False,
2025-01-14T13:16:42.7906740Z             log_level="CRITICAl",
2025-01-14T13:16:42.7906790Z         )
2025-01-14T13:16:42.7906800Z 
2025-01-14T13:16:42.7906910Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7907000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7907070Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7907340Z     simulation.run_convergence()
2025-01-14T13:16:42.7907440Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7907550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7907610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7907730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7907820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7907830Z 
2025-01-14T13:16:42.7908050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7908230Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7908400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7908620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7908750Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7908860Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7908860Z 
2025-01-14T13:16:42.7908930Z     def initialize_transport_state(
2025-01-14T13:16:42.7908970Z         self,
2025-01-14T13:16:42.7909030Z         simulation_state,
2025-01-14T13:16:42.7909080Z         opacity_state,
2025-01-14T13:16:42.7909130Z         macro_atom_state,
2025-01-14T13:16:42.7909170Z         plasma,
2025-01-14T13:16:42.7909240Z         no_of_packets,
2025-01-14T13:16:42.7909300Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7909350Z         iteration=0,
2025-01-14T13:16:42.7909390Z     ):
2025-01-14T13:16:42.7909590Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7909680Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7909730Z         else:
2025-01-14T13:16:42.7909790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7909950Z     
2025-01-14T13:16:42.7910070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7910140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7910190Z         )
2025-01-14T13:16:42.7910230Z     
2025-01-14T13:16:42.7910330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7910420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7910540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7910590Z         else:
2025-01-14T13:16:42.7910650Z             continuum_state = None
2025-01-14T13:16:42.7910720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7910810Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7910870Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7910960Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7911040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7911110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7911180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7911230Z         ).to_numba(
2025-01-14T13:16:42.7911280Z             macro_atom_state,
2025-01-14T13:16:42.7911340Z             self.line_interaction_type,
2025-01-14T13:16:42.7911390Z         )
2025-01-14T13:16:42.7911470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7911690Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7911730Z         ]
2025-01-14T13:16:42.7911980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7911980Z 
2025-01-14T13:16:42.7912100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7912310Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-14T13:16:42.7912310Z 
2025-01-14T13:16:42.7913130Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7913430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7913430Z 
2025-01-14T13:16:42.7913490Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7913600Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7913650Z         """
2025-01-14T13:16:42.7913770Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7913820Z     
2025-01-14T13:16:42.7913870Z         Parameters
2025-01-14T13:16:42.7913910Z         ----------
2025-01-14T13:16:42.7914030Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7914130Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7914230Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7914270Z             Atomic data.
2025-01-14T13:16:42.7914320Z     
2025-01-14T13:16:42.7914360Z         Returns
2025-01-14T13:16:42.7914410Z         -------
2025-01-14T13:16:42.7914480Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7914670Z             Simulation object.
2025-01-14T13:16:42.7914720Z         """
2025-01-14T13:16:42.7914840Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7914970Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7915070Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7915160Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7915260Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7915480Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7915590Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7915660Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7915730Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7915780Z >       sim = run_tardis(
2025-01-14T13:16:42.7915840Z             config_verysimple,
2025-01-14T13:16:42.7915900Z             atom_data=atomic_data,
2025-01-14T13:16:42.7915960Z             show_convergence_plots=False,
2025-01-14T13:16:42.7916020Z             log_level="CRITICAl",
2025-01-14T13:16:42.7916060Z         )
2025-01-14T13:16:42.7916060Z 
2025-01-14T13:16:42.7916170Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7916270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7916330Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7916400Z     simulation.run_convergence()
2025-01-14T13:16:42.7916490Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7916600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7916670Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7916790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7916890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7916890Z 
2025-01-14T13:16:42.7917280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7917450Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7917620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7917840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7917960Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7918210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7918220Z 
2025-01-14T13:16:42.7918290Z     def initialize_transport_state(
2025-01-14T13:16:42.7918340Z         self,
2025-01-14T13:16:42.7918390Z         simulation_state,
2025-01-14T13:16:42.7918440Z         opacity_state,
2025-01-14T13:16:42.7918480Z         macro_atom_state,
2025-01-14T13:16:42.7918530Z         plasma,
2025-01-14T13:16:42.7918580Z         no_of_packets,
2025-01-14T13:16:42.7918630Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7919140Z         iteration=0,
2025-01-14T13:16:42.7919490Z     ):
2025-01-14T13:16:42.7919800Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7920000Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7920150Z         else:
2025-01-14T13:16:42.7920340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7920490Z     
2025-01-14T13:16:42.7920820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7921040Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7921180Z         )
2025-01-14T13:16:42.7921320Z     
2025-01-14T13:16:42.7921620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7921880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7922210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7922360Z         else:
2025-01-14T13:16:42.7922550Z             continuum_state = None
2025-01-14T13:16:42.7922790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7923030Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7923230Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7923450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7923660Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7925140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7925270Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7925330Z         ).to_numba(
2025-01-14T13:16:42.7925380Z             macro_atom_state,
2025-01-14T13:16:42.7925450Z             self.line_interaction_type,
2025-01-14T13:16:42.7925490Z         )
2025-01-14T13:16:42.7925580Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7925810Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7925850Z         ]
2025-01-14T13:16:42.7926100Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7926100Z 
2025-01-14T13:16:42.7926220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7926450Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-14T13:16:42.7926460Z 
2025-01-14T13:16:42.7927020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7927320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7927320Z 
2025-01-14T13:16:42.7927390Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7927500Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7927550Z         """
2025-01-14T13:16:42.7927670Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7927710Z     
2025-01-14T13:16:42.7927760Z         Parameters
2025-01-14T13:16:42.7927820Z         ----------
2025-01-14T13:16:42.7927930Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7928040Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7928520Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7928590Z             Atomic data.
2025-01-14T13:16:42.7928630Z     
2025-01-14T13:16:42.7928680Z         Returns
2025-01-14T13:16:42.7928730Z         -------
2025-01-14T13:16:42.7928810Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7928870Z             Simulation object.
2025-01-14T13:16:42.7928910Z         """
2025-01-14T13:16:42.7929030Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7929180Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7929260Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7929360Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7929480Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7929620Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7929740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7929810Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7929880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7929930Z >       sim = run_tardis(
2025-01-14T13:16:42.7929980Z             config_verysimple,
2025-01-14T13:16:42.7930040Z             atom_data=atomic_data,
2025-01-14T13:16:42.7930100Z             show_convergence_plots=False,
2025-01-14T13:16:42.7930150Z             log_level="CRITICAl",
2025-01-14T13:16:42.7930200Z         )
2025-01-14T13:16:42.7930200Z 
2025-01-14T13:16:42.7930310Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7930400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7930460Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7930520Z     simulation.run_convergence()
2025-01-14T13:16:42.7930610Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7930970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7931040Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7931160Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7931260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7931260Z 
2025-01-14T13:16:42.7931470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7931630Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7931820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7932030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7932160Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7932270Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7932270Z 
2025-01-14T13:16:42.7932340Z     def initialize_transport_state(
2025-01-14T13:16:42.7932520Z         self,
2025-01-14T13:16:42.7932580Z         simulation_state,
2025-01-14T13:16:42.7932630Z         opacity_state,
2025-01-14T13:16:42.7932680Z         macro_atom_state,
2025-01-14T13:16:42.7932730Z         plasma,
2025-01-14T13:16:42.7932780Z         no_of_packets,
2025-01-14T13:16:42.7932840Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7932880Z         iteration=0,
2025-01-14T13:16:42.7932930Z     ):
2025-01-14T13:16:42.7933030Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7933100Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7933140Z         else:
2025-01-14T13:16:42.7933200Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7933240Z     
2025-01-14T13:16:42.7933350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7933420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7933470Z         )
2025-01-14T13:16:42.7933700Z     
2025-01-14T13:16:42.7933820Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7933900Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7934030Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7934070Z         else:
2025-01-14T13:16:42.7934130Z             continuum_state = None
2025-01-14T13:16:42.7934210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7934290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7934360Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7934440Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7934520Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7934580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7934650Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7934700Z         ).to_numba(
2025-01-14T13:16:42.7934760Z             macro_atom_state,
2025-01-14T13:16:42.7934820Z             self.line_interaction_type,
2025-01-14T13:16:42.7934870Z         )
2025-01-14T13:16:42.7934940Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7935160Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7935210Z         ]
2025-01-14T13:16:42.7935450Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7935460Z 
2025-01-14T13:16:42.7935580Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7935790Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-14T13:16:42.7935800Z 
2025-01-14T13:16:42.7936340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7936680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7936690Z 
2025-01-14T13:16:42.7936750Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7936860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7936900Z         """
2025-01-14T13:16:42.7937020Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7937060Z     
2025-01-14T13:16:42.7937120Z         Parameters
2025-01-14T13:16:42.7937160Z         ----------
2025-01-14T13:16:42.7937280Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7937380Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7937470Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7937520Z             Atomic data.
2025-01-14T13:16:42.7937570Z     
2025-01-14T13:16:42.7937610Z         Returns
2025-01-14T13:16:42.7937660Z         -------
2025-01-14T13:16:42.7937740Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7937910Z             Simulation object.
2025-01-14T13:16:42.7937970Z         """
2025-01-14T13:16:42.7938090Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7938220Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7938310Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7938400Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7938510Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7938690Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7938820Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7939040Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7939110Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7939170Z >       sim = run_tardis(
2025-01-14T13:16:42.7939220Z             config_verysimple,
2025-01-14T13:16:42.7939280Z             atom_data=atomic_data,
2025-01-14T13:16:42.7939340Z             show_convergence_plots=False,
2025-01-14T13:16:42.7939400Z             log_level="CRITICAl",
2025-01-14T13:16:42.7939440Z         )
2025-01-14T13:16:42.7939440Z 
2025-01-14T13:16:42.7939550Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7939640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7939720Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7939790Z     simulation.run_convergence()
2025-01-14T13:16:42.7939870Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7939990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7940060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7940190Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7940270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7940280Z 
2025-01-14T13:16:42.7940490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7940640Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7940820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7941040Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7941160Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7941270Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7941370Z 
2025-01-14T13:16:42.7941440Z     def initialize_transport_state(
2025-01-14T13:16:42.7941490Z         self,
2025-01-14T13:16:42.7941540Z         simulation_state,
2025-01-14T13:16:42.7941600Z         opacity_state,
2025-01-14T13:16:42.7941650Z         macro_atom_state,
2025-01-14T13:16:42.7941690Z         plasma,
2025-01-14T13:16:42.7941750Z         no_of_packets,
2025-01-14T13:16:42.7941810Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7941860Z         iteration=0,
2025-01-14T13:16:42.7941900Z     ):
2025-01-14T13:16:42.7941990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7942060Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7942110Z         else:
2025-01-14T13:16:42.7942160Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7942200Z     
2025-01-14T13:16:42.7942320Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7942410Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7942450Z         )
2025-01-14T13:16:42.7942500Z     
2025-01-14T13:16:42.7942600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7942690Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7942810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7942850Z         else:
2025-01-14T13:16:42.7942910Z             continuum_state = None
2025-01-14T13:16:42.7942990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7943070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7943140Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7943230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7943300Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7943360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7943430Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7943480Z         ).to_numba(
2025-01-14T13:16:42.7943530Z             macro_atom_state,
2025-01-14T13:16:42.7943680Z             self.line_interaction_type,
2025-01-14T13:16:42.7943730Z         )
2025-01-14T13:16:42.7943810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7944030Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7944080Z         ]
2025-01-14T13:16:42.7944330Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7944330Z 
2025-01-14T13:16:42.7944450Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7944670Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-14T13:16:42.7944670Z 
2025-01-14T13:16:42.7945210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7945500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7945510Z 
2025-01-14T13:16:42.7945580Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7945860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7945910Z         """
2025-01-14T13:16:42.7946020Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7946070Z     
2025-01-14T13:16:42.7946120Z         Parameters
2025-01-14T13:16:42.7946170Z         ----------
2025-01-14T13:16:42.7946280Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7946380Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7946470Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7946620Z             Atomic data.
2025-01-14T13:16:42.7946670Z     
2025-01-14T13:16:42.7946720Z         Returns
2025-01-14T13:16:42.7946760Z         -------
2025-01-14T13:16:42.7946840Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7946900Z             Simulation object.
2025-01-14T13:16:42.7946940Z         """
2025-01-14T13:16:42.7947060Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7947200Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7947290Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7947380Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7947490Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7947620Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7947740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7947810Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7947890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7947940Z >       sim = run_tardis(
2025-01-14T13:16:42.7948000Z             config_verysimple,
2025-01-14T13:16:42.7948060Z             atom_data=atomic_data,
2025-01-14T13:16:42.7948120Z             show_convergence_plots=False,
2025-01-14T13:16:42.7948180Z             log_level="CRITICAl",
2025-01-14T13:16:42.7948220Z         )
2025-01-14T13:16:42.7948220Z 
2025-01-14T13:16:42.7948330Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7948420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7948480Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7948540Z     simulation.run_convergence()
2025-01-14T13:16:42.7948630Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7948740Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7948820Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7949420Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7949570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7949570Z 
2025-01-14T13:16:42.7949810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7949970Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7950150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7950360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7950480Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7950590Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7950590Z 
2025-01-14T13:16:42.7950650Z     def initialize_transport_state(
2025-01-14T13:16:42.7950700Z         self,
2025-01-14T13:16:42.7950760Z         simulation_state,
2025-01-14T13:16:42.7950810Z         opacity_state,
2025-01-14T13:16:42.7950860Z         macro_atom_state,
2025-01-14T13:16:42.7950910Z         plasma,
2025-01-14T13:16:42.7950960Z         no_of_packets,
2025-01-14T13:16:42.7951020Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7951060Z         iteration=0,
2025-01-14T13:16:42.7951100Z     ):
2025-01-14T13:16:42.7951200Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7951270Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7951320Z         else:
2025-01-14T13:16:42.7951370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7951410Z     
2025-01-14T13:16:42.7951510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7951590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7951640Z         )
2025-01-14T13:16:42.7951680Z     
2025-01-14T13:16:42.7952130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7952230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7952350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7952400Z         else:
2025-01-14T13:16:42.7952460Z             continuum_state = None
2025-01-14T13:16:42.7952540Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7952620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7952690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7952770Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7952840Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7952910Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7952980Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7953030Z         ).to_numba(
2025-01-14T13:16:42.7953080Z             macro_atom_state,
2025-01-14T13:16:42.7953290Z             self.line_interaction_type,
2025-01-14T13:16:42.7958360Z         )
2025-01-14T13:16:42.7958490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7958870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7958930Z         ]
2025-01-14T13:16:42.7959190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7959200Z 
2025-01-14T13:16:42.7959320Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7959540Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-14T13:16:42.7959540Z 
2025-01-14T13:16:42.7960100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7960660Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7960670Z 
2025-01-14T13:16:42.7960730Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7960860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7960900Z         """
2025-01-14T13:16:42.7961020Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7961060Z     
2025-01-14T13:16:42.7961120Z         Parameters
2025-01-14T13:16:42.7961160Z         ----------
2025-01-14T13:16:42.7961820Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7962420Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7962680Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7962840Z             Atomic data.
2025-01-14T13:16:42.7963010Z     
2025-01-14T13:16:42.7963150Z         Returns
2025-01-14T13:16:42.7963300Z         -------
2025-01-14T13:16:42.7963540Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7963700Z             Simulation object.
2025-01-14T13:16:42.7963850Z         """
2025-01-14T13:16:42.7964180Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7964820Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7964950Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7965050Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7965160Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7965300Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7965410Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7965490Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7965720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7965780Z >       sim = run_tardis(
2025-01-14T13:16:42.7965850Z             config_verysimple,
2025-01-14T13:16:42.7965910Z             atom_data=atomic_data,
2025-01-14T13:16:42.7965970Z             show_convergence_plots=False,
2025-01-14T13:16:42.7966030Z             log_level="CRITICAl",
2025-01-14T13:16:42.7966080Z         )
2025-01-14T13:16:42.7966080Z 
2025-01-14T13:16:42.7966190Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7966280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7966340Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7966410Z     simulation.run_convergence()
2025-01-14T13:16:42.7966500Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7966610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7966680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7966810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7966910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7966910Z 
2025-01-14T13:16:42.7967130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7967290Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7967460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7967680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7967800Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7967910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7967920Z 
2025-01-14T13:16:42.7967980Z     def initialize_transport_state(
2025-01-14T13:16:42.7968020Z         self,
2025-01-14T13:16:42.7968080Z         simulation_state,
2025-01-14T13:16:42.7968130Z         opacity_state,
2025-01-14T13:16:42.7968240Z         macro_atom_state,
2025-01-14T13:16:42.7968290Z         plasma,
2025-01-14T13:16:42.7968350Z         no_of_packets,
2025-01-14T13:16:42.7968400Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7968450Z         iteration=0,
2025-01-14T13:16:42.7968490Z     ):
2025-01-14T13:16:42.7968600Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7968670Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7968720Z         else:
2025-01-14T13:16:42.7968770Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7968820Z     
2025-01-14T13:16:42.7968920Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7968990Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7969040Z         )
2025-01-14T13:16:42.7969080Z     
2025-01-14T13:16:42.7969180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7969270Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7969400Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7969440Z         else:
2025-01-14T13:16:42.7969500Z             continuum_state = None
2025-01-14T13:16:42.7969570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7969660Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7969720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7969800Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7969880Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7969950Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7970010Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7970060Z         ).to_numba(
2025-01-14T13:16:42.7970110Z             macro_atom_state,
2025-01-14T13:16:42.7970170Z             self.line_interaction_type,
2025-01-14T13:16:42.7970280Z         )
2025-01-14T13:16:42.7970350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7970590Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7970630Z         ]
2025-01-14T13:16:42.7970900Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7970910Z 
2025-01-14T13:16:42.7971020Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7971480Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-14T13:16:42.7971480Z 
2025-01-14T13:16:42.7972030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7972340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7972350Z 
2025-01-14T13:16:42.7972430Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7972540Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7972590Z         """
2025-01-14T13:16:42.7972700Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7972750Z     
2025-01-14T13:16:42.7972800Z         Parameters
2025-01-14T13:16:42.7972850Z         ----------
2025-01-14T13:16:42.7972970Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7973070Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7973170Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7973230Z             Atomic data.
2025-01-14T13:16:42.7973270Z     
2025-01-14T13:16:42.7973320Z         Returns
2025-01-14T13:16:42.7973380Z         -------
2025-01-14T13:16:42.7973470Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7973720Z             Simulation object.
2025-01-14T13:16:42.7973770Z         """
2025-01-14T13:16:42.7973900Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7974030Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7974120Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7974220Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7974330Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7974460Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7974580Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7974660Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7974730Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7974780Z >       sim = run_tardis(
2025-01-14T13:16:42.7974840Z             config_verysimple,
2025-01-14T13:16:42.7974900Z             atom_data=atomic_data,
2025-01-14T13:16:42.7974960Z             show_convergence_plots=False,
2025-01-14T13:16:42.7975020Z             log_level="CRITICAl",
2025-01-14T13:16:42.7975060Z         )
2025-01-14T13:16:42.7975060Z 
2025-01-14T13:16:42.7975170Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7975280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7975340Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7975400Z     simulation.run_convergence()
2025-01-14T13:16:42.7975490Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7975600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7975660Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.7975790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.7975960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7975970Z 
2025-01-14T13:16:42.7976180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.7976330Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.7979560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.7980220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.7980560Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.7980870Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.7980880Z 
2025-01-14T13:16:42.7981070Z     def initialize_transport_state(
2025-01-14T13:16:42.7981220Z         self,
2025-01-14T13:16:42.7981380Z         simulation_state,
2025-01-14T13:16:42.7981540Z         opacity_state,
2025-01-14T13:16:42.7981730Z         macro_atom_state,
2025-01-14T13:16:42.7981880Z         plasma,
2025-01-14T13:16:42.7982040Z         no_of_packets,
2025-01-14T13:16:42.7982220Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.7982370Z         iteration=0,
2025-01-14T13:16:42.7982510Z     ):
2025-01-14T13:16:42.7982770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.7982980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.7983120Z         else:
2025-01-14T13:16:42.7983290Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.7983420Z     
2025-01-14T13:16:42.7983720Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.7983930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.7984070Z         )
2025-01-14T13:16:42.7984210Z     
2025-01-14T13:16:42.7984480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.7984730Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.7985070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.7986350Z         else:
2025-01-14T13:16:42.7986570Z             continuum_state = None
2025-01-14T13:16:42.7986790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.7987010Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.7987210Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.7987430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.7987630Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.7987830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.7988030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.7988180Z         ).to_numba(
2025-01-14T13:16:42.7988340Z             macro_atom_state,
2025-01-14T13:16:42.7988530Z             self.line_interaction_type,
2025-01-14T13:16:42.7988670Z         )
2025-01-14T13:16:42.7988890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.7993220Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.7993420Z         ]
2025-01-14T13:16:42.7994180Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.7994190Z 
2025-01-14T13:16:42.7994520Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.7995180Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-14T13:16:42.7995210Z 
2025-01-14T13:16:42.7995790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.7996090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.7996650Z 
2025-01-14T13:16:42.7996740Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.7996860Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.7996900Z         """
2025-01-14T13:16:42.7997030Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.7997070Z     
2025-01-14T13:16:42.7997120Z         Parameters
2025-01-14T13:16:42.7997170Z         ----------
2025-01-14T13:16:42.7997290Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.7997390Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.7997470Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.7997530Z             Atomic data.
2025-01-14T13:16:42.7997570Z     
2025-01-14T13:16:42.7997610Z         Returns
2025-01-14T13:16:42.7997660Z         -------
2025-01-14T13:16:42.7997740Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.7997800Z             Simulation object.
2025-01-14T13:16:42.7997850Z         """
2025-01-14T13:16:42.7997970Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.7998120Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.7998210Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.7998310Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.7998410Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.7998550Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.7998660Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.7998740Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.7998820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.7998870Z >       sim = run_tardis(
2025-01-14T13:16:42.7998930Z             config_verysimple,
2025-01-14T13:16:42.7998990Z             atom_data=atomic_data,
2025-01-14T13:16:42.7999190Z             show_convergence_plots=False,
2025-01-14T13:16:42.7999250Z             log_level="CRITICAl",
2025-01-14T13:16:42.7999300Z         )
2025-01-14T13:16:42.7999300Z 
2025-01-14T13:16:42.7999410Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.7999510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.7999570Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.7999630Z     simulation.run_convergence()
2025-01-14T13:16:42.7999720Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.7999830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.7999910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8000210Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8000310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8000310Z 
2025-01-14T13:16:42.8000530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8000690Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8000870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8001100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8001240Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8001340Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8001350Z 
2025-01-14T13:16:42.8001420Z     def initialize_transport_state(
2025-01-14T13:16:42.8001460Z         self,
2025-01-14T13:16:42.8001510Z         simulation_state,
2025-01-14T13:16:42.8001560Z         opacity_state,
2025-01-14T13:16:42.8001610Z         macro_atom_state,
2025-01-14T13:16:42.8001790Z         plasma,
2025-01-14T13:16:42.8001840Z         no_of_packets,
2025-01-14T13:16:42.8001900Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8001950Z         iteration=0,
2025-01-14T13:16:42.8001990Z     ):
2025-01-14T13:16:42.8002100Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8002170Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8002210Z         else:
2025-01-14T13:16:42.8002270Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8002320Z     
2025-01-14T13:16:42.8002430Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8002500Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8002540Z         )
2025-01-14T13:16:42.8002580Z     
2025-01-14T13:16:42.8002680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8002760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8002900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8002940Z         else:
2025-01-14T13:16:42.8003010Z             continuum_state = None
2025-01-14T13:16:42.8003080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8003170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8003240Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8003320Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8003400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8003460Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8003530Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8003570Z         ).to_numba(
2025-01-14T13:16:42.8003630Z             macro_atom_state,
2025-01-14T13:16:42.8003690Z             self.line_interaction_type,
2025-01-14T13:16:42.8003740Z         )
2025-01-14T13:16:42.8003810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8004030Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8004150Z         ]
2025-01-14T13:16:42.8004410Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8004420Z 
2025-01-14T13:16:42.8004530Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8004760Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-14T13:16:42.8004760Z 
2025-01-14T13:16:42.8005320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8005600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8005610Z 
2025-01-14T13:16:42.8005680Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8005790Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8005840Z         """
2025-01-14T13:16:42.8005950Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8006000Z     
2025-01-14T13:16:42.8006050Z         Parameters
2025-01-14T13:16:42.8006100Z         ----------
2025-01-14T13:16:42.8006210Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8006450Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8006560Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8006610Z             Atomic data.
2025-01-14T13:16:42.8006650Z     
2025-01-14T13:16:42.8006690Z         Returns
2025-01-14T13:16:42.8006740Z         -------
2025-01-14T13:16:42.8006820Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8006900Z             Simulation object.
2025-01-14T13:16:42.8007080Z         """
2025-01-14T13:16:42.8007210Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8007350Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8007440Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8007530Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8007640Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8007780Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8007880Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8007960Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8008020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8008080Z >       sim = run_tardis(
2025-01-14T13:16:42.8008140Z             config_verysimple,
2025-01-14T13:16:42.8008190Z             atom_data=atomic_data,
2025-01-14T13:16:42.8008260Z             show_convergence_plots=False,
2025-01-14T13:16:42.8008320Z             log_level="CRITICAl",
2025-01-14T13:16:42.8008370Z         )
2025-01-14T13:16:42.8008370Z 
2025-01-14T13:16:42.8008500Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8008590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8008650Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8008720Z     simulation.run_convergence()
2025-01-14T13:16:42.8008800Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8008920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8008980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8009110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8009200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8009210Z 
2025-01-14T13:16:42.8009440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8009700Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8009880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8010100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8010220Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8010330Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8010330Z 
2025-01-14T13:16:42.8010390Z     def initialize_transport_state(
2025-01-14T13:16:42.8010440Z         self,
2025-01-14T13:16:42.8010500Z         simulation_state,
2025-01-14T13:16:42.8010550Z         opacity_state,
2025-01-14T13:16:42.8010600Z         macro_atom_state,
2025-01-14T13:16:42.8010640Z         plasma,
2025-01-14T13:16:42.8010690Z         no_of_packets,
2025-01-14T13:16:42.8010750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8010800Z         iteration=0,
2025-01-14T13:16:42.8010840Z     ):
2025-01-14T13:16:42.8010930Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8011010Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8011060Z         else:
2025-01-14T13:16:42.8011110Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8011150Z     
2025-01-14T13:16:42.8011250Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8011330Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8011370Z         )
2025-01-14T13:16:42.8011410Z     
2025-01-14T13:16:42.8011520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8011610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8011730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8011780Z         else:
2025-01-14T13:16:42.8011900Z             continuum_state = None
2025-01-14T13:16:42.8011980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8012070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8012130Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8012220Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8012290Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8012360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8012420Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8012470Z         ).to_numba(
2025-01-14T13:16:42.8012520Z             macro_atom_state,
2025-01-14T13:16:42.8012590Z             self.line_interaction_type,
2025-01-14T13:16:42.8012630Z         )
2025-01-14T13:16:42.8012700Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8012920Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8012980Z         ]
2025-01-14T13:16:42.8013230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8013230Z 
2025-01-14T13:16:42.8013350Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8013570Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-14T13:16:42.8013870Z 
2025-01-14T13:16:42.8014430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8014750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8014760Z 
2025-01-14T13:16:42.8014830Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8014950Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8015360Z         """
2025-01-14T13:16:42.8015500Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8015540Z     
2025-01-14T13:16:42.8015590Z         Parameters
2025-01-14T13:16:42.8015640Z         ----------
2025-01-14T13:16:42.8015750Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8015860Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8015960Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8016020Z             Atomic data.
2025-01-14T13:16:42.8016060Z     
2025-01-14T13:16:42.8016110Z         Returns
2025-01-14T13:16:42.8016150Z         -------
2025-01-14T13:16:42.8016240Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8016290Z             Simulation object.
2025-01-14T13:16:42.8016330Z         """
2025-01-14T13:16:42.8016450Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8016610Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8016700Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8016790Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8016900Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8017040Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8017150Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8017220Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8017290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8017350Z >       sim = run_tardis(
2025-01-14T13:16:42.8017400Z             config_verysimple,
2025-01-14T13:16:42.8017460Z             atom_data=atomic_data,
2025-01-14T13:16:42.8017530Z             show_convergence_plots=False,
2025-01-14T13:16:42.8017900Z             log_level="CRITICAl",
2025-01-14T13:16:42.8017950Z         )
2025-01-14T13:16:42.8017950Z 
2025-01-14T13:16:42.8018060Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8018150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8018220Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8018280Z     simulation.run_convergence()
2025-01-14T13:16:42.8018360Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8018470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8018550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8018670Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8018760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8018760Z 
2025-01-14T13:16:42.8018970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8019160Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8019330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8019550Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8019670Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8019780Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8019780Z 
2025-01-14T13:16:42.8019850Z     def initialize_transport_state(
2025-01-14T13:16:42.8019890Z         self,
2025-01-14T13:16:42.8019950Z         simulation_state,
2025-01-14T13:16:42.8020010Z         opacity_state,
2025-01-14T13:16:42.8020060Z         macro_atom_state,
2025-01-14T13:16:42.8020100Z         plasma,
2025-01-14T13:16:42.8020150Z         no_of_packets,
2025-01-14T13:16:42.8020210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8020260Z         iteration=0,
2025-01-14T13:16:42.8020310Z     ):
2025-01-14T13:16:42.8020500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8020580Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8020620Z         else:
2025-01-14T13:16:42.8020680Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8020720Z     
2025-01-14T13:16:42.8020820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8020890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8020940Z         )
2025-01-14T13:16:42.8020980Z     
2025-01-14T13:16:42.8021080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8021170Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8021470Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8021520Z         else:
2025-01-14T13:16:42.8021580Z             continuum_state = None
2025-01-14T13:16:42.8021660Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8021750Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8021820Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8021900Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8021980Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8022050Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8022120Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8022160Z         ).to_numba(
2025-01-14T13:16:42.8022220Z             macro_atom_state,
2025-01-14T13:16:42.8022280Z             self.line_interaction_type,
2025-01-14T13:16:42.8022320Z         )
2025-01-14T13:16:42.8022400Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8022620Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8022660Z         ]
2025-01-14T13:16:42.8023040Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8023050Z 
2025-01-14T13:16:42.8023160Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8023380Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-14T13:16:42.8023380Z 
2025-01-14T13:16:42.8023930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8024210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8024210Z 
2025-01-14T13:16:42.8024280Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8024390Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8024440Z         """
2025-01-14T13:16:42.8024570Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8024610Z     
2025-01-14T13:16:42.8024660Z         Parameters
2025-01-14T13:16:42.8024710Z         ----------
2025-01-14T13:16:42.8024820Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8024910Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8025010Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8025060Z             Atomic data.
2025-01-14T13:16:42.8025100Z     
2025-01-14T13:16:42.8025150Z         Returns
2025-01-14T13:16:42.8025200Z         -------
2025-01-14T13:16:42.8025270Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8025330Z             Simulation object.
2025-01-14T13:16:42.8025370Z         """
2025-01-14T13:16:42.8025490Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8025640Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8025790Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8025890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8026000Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8026140Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8026260Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8026330Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8026400Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8026450Z >       sim = run_tardis(
2025-01-14T13:16:42.8026510Z             config_verysimple,
2025-01-14T13:16:42.8026570Z             atom_data=atomic_data,
2025-01-14T13:16:42.8026630Z             show_convergence_plots=False,
2025-01-14T13:16:42.8026690Z             log_level="CRITICAl",
2025-01-14T13:16:42.8026740Z         )
2025-01-14T13:16:42.8026740Z 
2025-01-14T13:16:42.8026850Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8026940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8027000Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8027070Z     simulation.run_convergence()
2025-01-14T13:16:42.8027150Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8027270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8033170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8033350Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8033450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8033450Z 
2025-01-14T13:16:42.8033670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8033830Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8034260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8034480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8034600Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8034720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8034720Z 
2025-01-14T13:16:42.8034780Z     def initialize_transport_state(
2025-01-14T13:16:42.8034830Z         self,
2025-01-14T13:16:42.8034880Z         simulation_state,
2025-01-14T13:16:42.8034930Z         opacity_state,
2025-01-14T13:16:42.8034980Z         macro_atom_state,
2025-01-14T13:16:42.8035030Z         plasma,
2025-01-14T13:16:42.8035080Z         no_of_packets,
2025-01-14T13:16:42.8035130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8035190Z         iteration=0,
2025-01-14T13:16:42.8035230Z     ):
2025-01-14T13:16:42.8035330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8035400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8035460Z         else:
2025-01-14T13:16:42.8035510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8035560Z     
2025-01-14T13:16:42.8035660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8035740Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8035780Z         )
2025-01-14T13:16:42.8035830Z     
2025-01-14T13:16:42.8036060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8036160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8036280Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8036320Z         else:
2025-01-14T13:16:42.8036380Z             continuum_state = None
2025-01-14T13:16:42.8036460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8036550Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8036720Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8036820Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8036900Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8036970Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8037030Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8037090Z         ).to_numba(
2025-01-14T13:16:42.8037140Z             macro_atom_state,
2025-01-14T13:16:42.8037210Z             self.line_interaction_type,
2025-01-14T13:16:42.8037250Z         )
2025-01-14T13:16:42.8037320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8038420Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8038710Z         ]
2025-01-14T13:16:42.8039420Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8039460Z 
2025-01-14T13:16:42.8039830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8040560Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-14T13:16:42.8040580Z 
2025-01-14T13:16:42.8043060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8044230Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8044250Z 
2025-01-14T13:16:42.8044450Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8044770Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8044920Z         """
2025-01-14T13:16:42.8045250Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8046150Z     
2025-01-14T13:16:42.8046310Z         Parameters
2025-01-14T13:16:42.8046470Z         ----------
2025-01-14T13:16:42.8046980Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8047360Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8047650Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8047810Z             Atomic data.
2025-01-14T13:16:42.8047940Z     
2025-01-14T13:16:42.8048090Z         Returns
2025-01-14T13:16:42.8048240Z         -------
2025-01-14T13:16:42.8048460Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8048620Z             Simulation object.
2025-01-14T13:16:42.8048770Z         """
2025-01-14T13:16:42.8049100Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8049500Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8049760Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8050030Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8050320Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8050690Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8051210Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8051460Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8051680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8051830Z >       sim = run_tardis(
2025-01-14T13:16:42.8052010Z             config_verysimple,
2025-01-14T13:16:42.8052180Z             atom_data=atomic_data,
2025-01-14T13:16:42.8052380Z             show_convergence_plots=False,
2025-01-14T13:16:42.8052550Z             log_level="CRITICAl",
2025-01-14T13:16:42.8053310Z         )
2025-01-14T13:16:42.8053320Z 
2025-01-14T13:16:42.8053660Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8057070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8057350Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8057410Z     simulation.run_convergence()
2025-01-14T13:16:42.8057520Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8057640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8057710Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8057830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8057930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8057940Z 
2025-01-14T13:16:42.8058160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8058320Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8058500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8058740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8058870Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8058980Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8058990Z 
2025-01-14T13:16:42.8059060Z     def initialize_transport_state(
2025-01-14T13:16:42.8059100Z         self,
2025-01-14T13:16:42.8059150Z         simulation_state,
2025-01-14T13:16:42.8059210Z         opacity_state,
2025-01-14T13:16:42.8059260Z         macro_atom_state,
2025-01-14T13:16:42.8059310Z         plasma,
2025-01-14T13:16:42.8059350Z         no_of_packets,
2025-01-14T13:16:42.8059410Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8059460Z         iteration=0,
2025-01-14T13:16:42.8059500Z     ):
2025-01-14T13:16:42.8059600Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8060080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8060130Z         else:
2025-01-14T13:16:42.8060190Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8060230Z     
2025-01-14T13:16:42.8060350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8060420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8060470Z         )
2025-01-14T13:16:42.8060510Z     
2025-01-14T13:16:42.8060620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8060700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8060840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8060890Z         else:
2025-01-14T13:16:42.8060950Z             continuum_state = None
2025-01-14T13:16:42.8061030Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8061110Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8061180Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8061270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8061350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8061420Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8061490Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8061530Z         ).to_numba(
2025-01-14T13:16:42.8061590Z             macro_atom_state,
2025-01-14T13:16:42.8061660Z             self.line_interaction_type,
2025-01-14T13:16:42.8061710Z         )
2025-01-14T13:16:42.8061780Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8062000Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8062050Z         ]
2025-01-14T13:16:42.8062300Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8062300Z 
2025-01-14T13:16:42.8062430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8062720Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-14T13:16:42.8062730Z 
2025-01-14T13:16:42.8063290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8063570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8063580Z 
2025-01-14T13:16:42.8063640Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8063760Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8063800Z         """
2025-01-14T13:16:42.8063920Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8063960Z     
2025-01-14T13:16:42.8064020Z         Parameters
2025-01-14T13:16:42.8064080Z         ----------
2025-01-14T13:16:42.8064200Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8064290Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8064380Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8064430Z             Atomic data.
2025-01-14T13:16:42.8064620Z     
2025-01-14T13:16:42.8064690Z         Returns
2025-01-14T13:16:42.8064750Z         -------
2025-01-14T13:16:42.8064830Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8064890Z             Simulation object.
2025-01-14T13:16:42.8064940Z         """
2025-01-14T13:16:42.8065060Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8065200Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8065290Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8065550Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8065660Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8065810Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8065910Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8066570Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8066660Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8066710Z >       sim = run_tardis(
2025-01-14T13:16:42.8066780Z             config_verysimple,
2025-01-14T13:16:42.8066830Z             atom_data=atomic_data,
2025-01-14T13:16:42.8067040Z             show_convergence_plots=False,
2025-01-14T13:16:42.8067100Z             log_level="CRITICAl",
2025-01-14T13:16:42.8067140Z         )
2025-01-14T13:16:42.8067150Z 
2025-01-14T13:16:42.8067260Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8067350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8067410Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8067480Z     simulation.run_convergence()
2025-01-14T13:16:42.8067560Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8067680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8067740Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8067870Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8067950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8067960Z 
2025-01-14T13:16:42.8068160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8068330Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8068510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8068740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8068950Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8069080Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8069080Z 
2025-01-14T13:16:42.8069320Z     def initialize_transport_state(
2025-01-14T13:16:42.8069370Z         self,
2025-01-14T13:16:42.8069430Z         simulation_state,
2025-01-14T13:16:42.8069480Z         opacity_state,
2025-01-14T13:16:42.8069540Z         macro_atom_state,
2025-01-14T13:16:42.8069580Z         plasma,
2025-01-14T13:16:42.8069630Z         no_of_packets,
2025-01-14T13:16:42.8069700Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8069760Z         iteration=0,
2025-01-14T13:16:42.8069800Z     ):
2025-01-14T13:16:42.8069910Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8069980Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8070030Z         else:
2025-01-14T13:16:42.8070090Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8070130Z     
2025-01-14T13:16:42.8070230Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8070310Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8070350Z         )
2025-01-14T13:16:42.8070410Z     
2025-01-14T13:16:42.8070510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8070590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8070730Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8070770Z         else:
2025-01-14T13:16:42.8070830Z             continuum_state = None
2025-01-14T13:16:42.8070910Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8071000Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8071070Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8071150Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8071340Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8071420Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8071480Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8071530Z         ).to_numba(
2025-01-14T13:16:42.8071580Z             macro_atom_state,
2025-01-14T13:16:42.8071640Z             self.line_interaction_type,
2025-01-14T13:16:42.8071680Z         )
2025-01-14T13:16:42.8071760Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8071990Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8072030Z         ]
2025-01-14T13:16:42.8072280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8072280Z 
2025-01-14T13:16:42.8072390Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8072580Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-14T13:16:42.8072590Z 
2025-01-14T13:16:42.8073280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8073780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8073790Z 
2025-01-14T13:16:42.8073860Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8073960Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8074010Z         """
2025-01-14T13:16:42.8074120Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8074170Z     
2025-01-14T13:16:42.8074220Z         Parameters
2025-01-14T13:16:42.8074280Z         ----------
2025-01-14T13:16:42.8074410Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8074630Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8074830Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8074910Z             Atomic data.
2025-01-14T13:16:42.8074960Z     
2025-01-14T13:16:42.8075000Z         Returns
2025-01-14T13:16:42.8075050Z         -------
2025-01-14T13:16:42.8075130Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8075210Z             Simulation object.
2025-01-14T13:16:42.8075260Z         """
2025-01-14T13:16:42.8075380Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8075540Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8075650Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8075750Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8075860Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8076000Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8076130Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8076220Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8076290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8076370Z >       sim = run_tardis(
2025-01-14T13:16:42.8076430Z             config_verysimple,
2025-01-14T13:16:42.8076490Z             atom_data=atomic_data,
2025-01-14T13:16:42.8076550Z             show_convergence_plots=False,
2025-01-14T13:16:42.8076610Z             log_level="CRITICAl",
2025-01-14T13:16:42.8076650Z         )
2025-01-14T13:16:42.8076650Z 
2025-01-14T13:16:42.8076760Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8076850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8076920Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8077080Z     simulation.run_convergence()
2025-01-14T13:16:42.8077170Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8077280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8077350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8077470Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8077560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8077560Z 
2025-01-14T13:16:42.8077770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8077930Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8078110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8078320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8078450Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8078560Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8078560Z 
2025-01-14T13:16:42.8078630Z     def initialize_transport_state(
2025-01-14T13:16:42.8078670Z         self,
2025-01-14T13:16:42.8078730Z         simulation_state,
2025-01-14T13:16:42.8078780Z         opacity_state,
2025-01-14T13:16:42.8078820Z         macro_atom_state,
2025-01-14T13:16:42.8078870Z         plasma,
2025-01-14T13:16:42.8078920Z         no_of_packets,
2025-01-14T13:16:42.8078980Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8079020Z         iteration=0,
2025-01-14T13:16:42.8079070Z     ):
2025-01-14T13:16:42.8079160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8079230Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8079280Z         else:
2025-01-14T13:16:42.8079330Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8079380Z     
2025-01-14T13:16:42.8079950Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8080040Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8080090Z         )
2025-01-14T13:16:42.8080140Z     
2025-01-14T13:16:42.8080240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8080330Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8080450Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8080500Z         else:
2025-01-14T13:16:42.8080560Z             continuum_state = None
2025-01-14T13:16:42.8080630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8080710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8080790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8080870Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8080940Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8081010Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8081090Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8081130Z         ).to_numba(
2025-01-14T13:16:42.8081190Z             macro_atom_state,
2025-01-14T13:16:42.8081260Z             self.line_interaction_type,
2025-01-14T13:16:42.8081300Z         )
2025-01-14T13:16:42.8081380Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8081600Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8081640Z         ]
2025-01-14T13:16:42.8081890Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8081890Z 
2025-01-14T13:16:42.8082010Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8082190Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-14T13:16:42.8082480Z 
2025-01-14T13:16:42.8083060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8083350Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8083350Z 
2025-01-14T13:16:42.8083410Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8083530Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8083570Z         """
2025-01-14T13:16:42.8083690Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8083730Z     
2025-01-14T13:16:42.8083780Z         Parameters
2025-01-14T13:16:42.8083820Z         ----------
2025-01-14T13:16:42.8083940Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8084040Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8084140Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8084200Z             Atomic data.
2025-01-14T13:16:42.8084240Z     
2025-01-14T13:16:42.8084280Z         Returns
2025-01-14T13:16:42.8084330Z         -------
2025-01-14T13:16:42.8084410Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8084460Z             Simulation object.
2025-01-14T13:16:42.8084510Z         """
2025-01-14T13:16:42.8084620Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8084770Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8084860Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8084950Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8085050Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8085200Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8085380Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8085470Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8085540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8085590Z >       sim = run_tardis(
2025-01-14T13:16:42.8085640Z             config_verysimple,
2025-01-14T13:16:42.8085700Z             atom_data=atomic_data,
2025-01-14T13:16:42.8085760Z             show_convergence_plots=False,
2025-01-14T13:16:42.8085810Z             log_level="CRITICAl",
2025-01-14T13:16:42.8085860Z         )
2025-01-14T13:16:42.8085860Z 
2025-01-14T13:16:42.8085960Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8086060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8086110Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8086180Z     simulation.run_convergence()
2025-01-14T13:16:42.8086260Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8086380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8086450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8086560Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8086660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8086660Z 
2025-01-14T13:16:42.8086870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8087030Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8087210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8087430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8087550Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8087720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8087730Z 
2025-01-14T13:16:42.8087790Z     def initialize_transport_state(
2025-01-14T13:16:42.8087840Z         self,
2025-01-14T13:16:42.8087890Z         simulation_state,
2025-01-14T13:16:42.8087940Z         opacity_state,
2025-01-14T13:16:42.8087990Z         macro_atom_state,
2025-01-14T13:16:42.8088040Z         plasma,
2025-01-14T13:16:42.8088090Z         no_of_packets,
2025-01-14T13:16:42.8088150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8088200Z         iteration=0,
2025-01-14T13:16:42.8088240Z     ):
2025-01-14T13:16:42.8088340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8088410Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8088450Z         else:
2025-01-14T13:16:42.8088510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8088550Z     
2025-01-14T13:16:42.8088650Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8088720Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8088780Z         )
2025-01-14T13:16:42.8088820Z     
2025-01-14T13:16:42.8088920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8089010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8089130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8089170Z         else:
2025-01-14T13:16:42.8089240Z             continuum_state = None
2025-01-14T13:16:42.8089310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8089390Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8089460Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8089540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8089610Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8089680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8089740Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8089840Z         ).to_numba(
2025-01-14T13:16:42.8089910Z             macro_atom_state,
2025-01-14T13:16:42.8089970Z             self.line_interaction_type,
2025-01-14T13:16:42.8090020Z         )
2025-01-14T13:16:42.8090090Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8090310Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8090350Z         ]
2025-01-14T13:16:42.8090600Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8090610Z 
2025-01-14T13:16:42.8091080Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8091270Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-14T13:16:42.8091280Z 
2025-01-14T13:16:42.8091820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8092100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8092110Z 
2025-01-14T13:16:42.8092170Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8092280Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8092330Z         """
2025-01-14T13:16:42.8092440Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8092490Z     
2025-01-14T13:16:42.8092530Z         Parameters
2025-01-14T13:16:42.8092630Z         ----------
2025-01-14T13:16:42.8092750Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8092860Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8093270Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8093320Z             Atomic data.
2025-01-14T13:16:42.8093380Z     
2025-01-14T13:16:42.8093420Z         Returns
2025-01-14T13:16:42.8093470Z         -------
2025-01-14T13:16:42.8093540Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8093600Z             Simulation object.
2025-01-14T13:16:42.8093640Z         """
2025-01-14T13:16:42.8093760Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8093890Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8093980Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8094220Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8094320Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8094460Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8094570Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8094650Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8094710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8094770Z >       sim = run_tardis(
2025-01-14T13:16:42.8094830Z             config_verysimple,
2025-01-14T13:16:42.8094890Z             atom_data=atomic_data,
2025-01-14T13:16:42.8094950Z             show_convergence_plots=False,
2025-01-14T13:16:42.8095010Z             log_level="CRITICAl",
2025-01-14T13:16:42.8095050Z         )
2025-01-14T13:16:42.8095050Z 
2025-01-14T13:16:42.8095160Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8095240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8095310Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8095370Z     simulation.run_convergence()
2025-01-14T13:16:42.8095450Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8095570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8095720Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8095850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8095940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8095940Z 
2025-01-14T13:16:42.8096150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8096310Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8096490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8096700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8096830Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8096930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8096940Z 
2025-01-14T13:16:42.8097000Z     def initialize_transport_state(
2025-01-14T13:16:42.8097050Z         self,
2025-01-14T13:16:42.8097100Z         simulation_state,
2025-01-14T13:16:42.8097160Z         opacity_state,
2025-01-14T13:16:42.8097210Z         macro_atom_state,
2025-01-14T13:16:42.8097260Z         plasma,
2025-01-14T13:16:42.8097310Z         no_of_packets,
2025-01-14T13:16:42.8097360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8097410Z         iteration=0,
2025-01-14T13:16:42.8097450Z     ):
2025-01-14T13:16:42.8097540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8097610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8097650Z         else:
2025-01-14T13:16:42.8097710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8097750Z     
2025-01-14T13:16:42.8097860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8097930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8098030Z         )
2025-01-14T13:16:42.8098080Z     
2025-01-14T13:16:42.8098180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8098270Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8098390Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8098440Z         else:
2025-01-14T13:16:42.8098500Z             continuum_state = None
2025-01-14T13:16:42.8098910Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8099000Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8099200Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8099290Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8099360Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8099430Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8099490Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8099550Z         ).to_numba(
2025-01-14T13:16:42.8099600Z             macro_atom_state,
2025-01-14T13:16:42.8099670Z             self.line_interaction_type,
2025-01-14T13:16:42.8099710Z         )
2025-01-14T13:16:42.8099780Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8100000Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8100050Z         ]
2025-01-14T13:16:42.8104860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8104870Z 
2025-01-14T13:16:42.8105110Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8105300Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-14T13:16:42.8105310Z 
2025-01-14T13:16:42.8106170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8106460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8106460Z 
2025-01-14T13:16:42.8106520Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8106640Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8106680Z         """
2025-01-14T13:16:42.8106790Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8106830Z     
2025-01-14T13:16:42.8106890Z         Parameters
2025-01-14T13:16:42.8106930Z         ----------
2025-01-14T13:16:42.8107040Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8107140Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8107220Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8107280Z             Atomic data.
2025-01-14T13:16:42.8107320Z     
2025-01-14T13:16:42.8107360Z         Returns
2025-01-14T13:16:42.8107410Z         -------
2025-01-14T13:16:42.8107480Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8107540Z             Simulation object.
2025-01-14T13:16:42.8107730Z         """
2025-01-14T13:16:42.8107850Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8107990Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8108080Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8108180Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8108280Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8108420Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8108530Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8108800Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8108880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8108930Z >       sim = run_tardis(
2025-01-14T13:16:42.8108990Z             config_verysimple,
2025-01-14T13:16:42.8109050Z             atom_data=atomic_data,
2025-01-14T13:16:42.8109120Z             show_convergence_plots=False,
2025-01-14T13:16:42.8109170Z             log_level="CRITICAl",
2025-01-14T13:16:42.8109210Z         )
2025-01-14T13:16:42.8109220Z 
2025-01-14T13:16:42.8109320Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8109420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8109480Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8109530Z     simulation.run_convergence()
2025-01-14T13:16:42.8109770Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8109880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8109960Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8110080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8110170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8110180Z 
2025-01-14T13:16:42.8110380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8110540Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8110720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8110940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8111060Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8111160Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8111170Z 
2025-01-14T13:16:42.8111230Z     def initialize_transport_state(
2025-01-14T13:16:42.8111280Z         self,
2025-01-14T13:16:42.8111410Z         simulation_state,
2025-01-14T13:16:42.8111460Z         opacity_state,
2025-01-14T13:16:42.8111520Z         macro_atom_state,
2025-01-14T13:16:42.8111560Z         plasma,
2025-01-14T13:16:42.8111620Z         no_of_packets,
2025-01-14T13:16:42.8111670Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8111720Z         iteration=0,
2025-01-14T13:16:42.8111760Z     ):
2025-01-14T13:16:42.8111860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8111920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8111970Z         else:
2025-01-14T13:16:42.8112020Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8112060Z     
2025-01-14T13:16:42.8112170Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8112230Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8112280Z         )
2025-01-14T13:16:42.8112320Z     
2025-01-14T13:16:42.8112430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8112520Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8112640Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8112810Z         else:
2025-01-14T13:16:42.8112870Z             continuum_state = None
2025-01-14T13:16:42.8112940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8113040Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8113100Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8113180Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8113260Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8113320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8113390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8113430Z         ).to_numba(
2025-01-14T13:16:42.8113480Z             macro_atom_state,
2025-01-14T13:16:42.8113610Z             self.line_interaction_type,
2025-01-14T13:16:42.8113660Z         )
2025-01-14T13:16:42.8113740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8113960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8114000Z         ]
2025-01-14T13:16:42.8114250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8114260Z 
2025-01-14T13:16:42.8114430Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8114660Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-14T13:16:42.8114660Z 
2025-01-14T13:16:42.8115190Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8115490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8115490Z 
2025-01-14T13:16:42.8115560Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8115670Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8115710Z         """
2025-01-14T13:16:42.8115820Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8115870Z     
2025-01-14T13:16:42.8115910Z         Parameters
2025-01-14T13:16:42.8115960Z         ----------
2025-01-14T13:16:42.8116070Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8116170Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8116260Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8116310Z             Atomic data.
2025-01-14T13:16:42.8116350Z     
2025-01-14T13:16:42.8116400Z         Returns
2025-01-14T13:16:42.8116450Z         -------
2025-01-14T13:16:42.8116680Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8116740Z             Simulation object.
2025-01-14T13:16:42.8116780Z         """
2025-01-14T13:16:42.8116910Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8117040Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8117120Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8117220Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8117320Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8117460Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8117560Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8117640Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8117710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8117760Z >       sim = run_tardis(
2025-01-14T13:16:42.8118460Z             config_verysimple,
2025-01-14T13:16:42.8118860Z             atom_data=atomic_data,
2025-01-14T13:16:42.8119060Z             show_convergence_plots=False,
2025-01-14T13:16:42.8119230Z             log_level="CRITICAl",
2025-01-14T13:16:42.8119480Z         )
2025-01-14T13:16:42.8119500Z 
2025-01-14T13:16:42.8119850Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8119980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8120040Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8120110Z     simulation.run_convergence()
2025-01-14T13:16:42.8120200Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8120310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8120380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8120730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8120830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8120830Z 
2025-01-14T13:16:42.8121040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8121200Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8121380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8121600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8122280Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8122430Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8122440Z 
2025-01-14T13:16:42.8122500Z     def initialize_transport_state(
2025-01-14T13:16:42.8122550Z         self,
2025-01-14T13:16:42.8122610Z         simulation_state,
2025-01-14T13:16:42.8122660Z         opacity_state,
2025-01-14T13:16:42.8122710Z         macro_atom_state,
2025-01-14T13:16:42.8122770Z         plasma,
2025-01-14T13:16:42.8122810Z         no_of_packets,
2025-01-14T13:16:42.8122870Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8122920Z         iteration=0,
2025-01-14T13:16:42.8122970Z     ):
2025-01-14T13:16:42.8123060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8123240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8123290Z         else:
2025-01-14T13:16:42.8123340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8123390Z     
2025-01-14T13:16:42.8123490Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8123570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8123610Z         )
2025-01-14T13:16:42.8123650Z     
2025-01-14T13:16:42.8123750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8123840Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8124080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8124130Z         else:
2025-01-14T13:16:42.8124190Z             continuum_state = None
2025-01-14T13:16:42.8124260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8124340Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8124410Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8124500Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8124570Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8124640Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8124710Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8124760Z         ).to_numba(
2025-01-14T13:16:42.8124810Z             macro_atom_state,
2025-01-14T13:16:42.8124870Z             self.line_interaction_type,
2025-01-14T13:16:42.8124910Z         )
2025-01-14T13:16:42.8124990Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8125210Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8125260Z         ]
2025-01-14T13:16:42.8125510Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8125510Z 
2025-01-14T13:16:42.8125620Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8125810Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-14T13:16:42.8125810Z 
2025-01-14T13:16:42.8127380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8127700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8127860Z 
2025-01-14T13:16:42.8127930Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8128050Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8128090Z         """
2025-01-14T13:16:42.8128210Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8128260Z     
2025-01-14T13:16:42.8128310Z         Parameters
2025-01-14T13:16:42.8128360Z         ----------
2025-01-14T13:16:42.8128910Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8129010Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8129100Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8129160Z             Atomic data.
2025-01-14T13:16:42.8129200Z     
2025-01-14T13:16:42.8129240Z         Returns
2025-01-14T13:16:42.8129280Z         -------
2025-01-14T13:16:42.8129370Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8129430Z             Simulation object.
2025-01-14T13:16:42.8129480Z         """
2025-01-14T13:16:42.8129600Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8129750Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8129830Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8129930Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8130030Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8130170Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8130280Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8130350Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8130420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8130480Z >       sim = run_tardis(
2025-01-14T13:16:42.8130540Z             config_verysimple,
2025-01-14T13:16:42.8130900Z             atom_data=atomic_data,
2025-01-14T13:16:42.8130980Z             show_convergence_plots=False,
2025-01-14T13:16:42.8131040Z             log_level="CRITICAl",
2025-01-14T13:16:42.8131090Z         )
2025-01-14T13:16:42.8131090Z 
2025-01-14T13:16:42.8131200Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8131290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8131360Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8131420Z     simulation.run_convergence()
2025-01-14T13:16:42.8131510Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8131610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8131690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8131810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8131900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8131910Z 
2025-01-14T13:16:42.8132120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8132280Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8132600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8132820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8132940Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8133050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8133050Z 
2025-01-14T13:16:42.8133120Z     def initialize_transport_state(
2025-01-14T13:16:42.8133170Z         self,
2025-01-14T13:16:42.8133220Z         simulation_state,
2025-01-14T13:16:42.8133270Z         opacity_state,
2025-01-14T13:16:42.8133710Z         macro_atom_state,
2025-01-14T13:16:42.8133760Z         plasma,
2025-01-14T13:16:42.8133810Z         no_of_packets,
2025-01-14T13:16:42.8133860Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8133910Z         iteration=0,
2025-01-14T13:16:42.8133960Z     ):
2025-01-14T13:16:42.8134050Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8134120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8134310Z         else:
2025-01-14T13:16:42.8134370Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8134410Z     
2025-01-14T13:16:42.8134520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8134590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8134640Z         )
2025-01-14T13:16:42.8134680Z     
2025-01-14T13:16:42.8134770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8134860Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8135000Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8135040Z         else:
2025-01-14T13:16:42.8135100Z             continuum_state = None
2025-01-14T13:16:42.8135180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8135380Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8135460Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8135540Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8135620Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8135680Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8135750Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8135800Z         ).to_numba(
2025-01-14T13:16:42.8135850Z             macro_atom_state,
2025-01-14T13:16:42.8135910Z             self.line_interaction_type,
2025-01-14T13:16:42.8135960Z         )
2025-01-14T13:16:42.8136030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8136350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8136400Z         ]
2025-01-14T13:16:42.8136650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8136650Z 
2025-01-14T13:16:42.8136770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8136950Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-14T13:16:42.8136950Z 
2025-01-14T13:16:42.8137490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8137780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8137780Z 
2025-01-14T13:16:42.8137850Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8137970Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8138010Z         """
2025-01-14T13:16:42.8138120Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8138160Z     
2025-01-14T13:16:42.8138210Z         Parameters
2025-01-14T13:16:42.8138260Z         ----------
2025-01-14T13:16:42.8138370Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8138470Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8138560Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8138610Z             Atomic data.
2025-01-14T13:16:42.8138650Z     
2025-01-14T13:16:42.8138690Z         Returns
2025-01-14T13:16:42.8138740Z         -------
2025-01-14T13:16:42.8138820Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8138960Z             Simulation object.
2025-01-14T13:16:42.8139000Z         """
2025-01-14T13:16:42.8139130Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8139270Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8139350Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8139450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8139580Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8139730Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8139830Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8139910Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8139970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8140030Z >       sim = run_tardis(
2025-01-14T13:16:42.8140080Z             config_verysimple,
2025-01-14T13:16:42.8140140Z             atom_data=atomic_data,
2025-01-14T13:16:42.8140210Z             show_convergence_plots=False,
2025-01-14T13:16:42.8140260Z             log_level="CRITICAl",
2025-01-14T13:16:42.8140300Z         )
2025-01-14T13:16:42.8140310Z 
2025-01-14T13:16:42.8140410Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8140500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8140560Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8140630Z     simulation.run_convergence()
2025-01-14T13:16:42.8140710Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8140820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8140880Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8141010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8141090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8141100Z 
2025-01-14T13:16:42.8141370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8141540Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8141770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8142000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8142130Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8142230Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8142240Z 
2025-01-14T13:16:42.8142300Z     def initialize_transport_state(
2025-01-14T13:16:42.8142350Z         self,
2025-01-14T13:16:42.8142400Z         simulation_state,
2025-01-14T13:16:42.8142450Z         opacity_state,
2025-01-14T13:16:42.8142500Z         macro_atom_state,
2025-01-14T13:16:42.8142540Z         plasma,
2025-01-14T13:16:42.8142590Z         no_of_packets,
2025-01-14T13:16:42.8142660Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8142710Z         iteration=0,
2025-01-14T13:16:42.8142760Z     ):
2025-01-14T13:16:42.8142850Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8143080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8143140Z         else:
2025-01-14T13:16:42.8143190Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8143240Z     
2025-01-14T13:16:42.8143340Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8143410Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8143450Z         )
2025-01-14T13:16:42.8143500Z     
2025-01-14T13:16:42.8143590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8143690Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8143810Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8144020Z         else:
2025-01-14T13:16:42.8144080Z             continuum_state = None
2025-01-14T13:16:42.8144160Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8144250Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8144310Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8144390Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8144460Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8144530Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8144590Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8144630Z         ).to_numba(
2025-01-14T13:16:42.8144690Z             macro_atom_state,
2025-01-14T13:16:42.8144750Z             self.line_interaction_type,
2025-01-14T13:16:42.8144790Z         )
2025-01-14T13:16:42.8144870Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8145090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8145130Z         ]
2025-01-14T13:16:42.8145380Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8145390Z 
2025-01-14T13:16:42.8145500Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8145680Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-14T13:16:42.8145680Z 
2025-01-14T13:16:42.8147610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8148540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8148560Z 
2025-01-14T13:16:42.8148660Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8148960Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8149020Z         """
2025-01-14T13:16:42.8149130Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8149180Z     
2025-01-14T13:16:42.8149220Z         Parameters
2025-01-14T13:16:42.8149280Z         ----------
2025-01-14T13:16:42.8149390Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8149490Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8149590Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8149640Z             Atomic data.
2025-01-14T13:16:42.8149680Z     
2025-01-14T13:16:42.8149730Z         Returns
2025-01-14T13:16:42.8149780Z         -------
2025-01-14T13:16:42.8149860Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8149910Z             Simulation object.
2025-01-14T13:16:42.8149960Z         """
2025-01-14T13:16:42.8150090Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8150220Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8150310Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8150410Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8150520Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8150660Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8150770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8150840Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8150910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8150960Z >       sim = run_tardis(
2025-01-14T13:16:42.8151020Z             config_verysimple,
2025-01-14T13:16:42.8151070Z             atom_data=atomic_data,
2025-01-14T13:16:42.8151140Z             show_convergence_plots=False,
2025-01-14T13:16:42.8151400Z             log_level="CRITICAl",
2025-01-14T13:16:42.8151450Z         )
2025-01-14T13:16:42.8151450Z 
2025-01-14T13:16:42.8151560Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8151650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8151720Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8151770Z     simulation.run_convergence()
2025-01-14T13:16:42.8151860Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8151960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8152040Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8152150Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8152240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8152240Z 
2025-01-14T13:16:42.8152450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8152610Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8152790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8153000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8153130Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8153240Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8153240Z 
2025-01-14T13:16:42.8153300Z     def initialize_transport_state(
2025-01-14T13:16:42.8153340Z         self,
2025-01-14T13:16:42.8153400Z         simulation_state,
2025-01-14T13:16:42.8153440Z         opacity_state,
2025-01-14T13:16:42.8153490Z         macro_atom_state,
2025-01-14T13:16:42.8153540Z         plasma,
2025-01-14T13:16:42.8153590Z         no_of_packets,
2025-01-14T13:16:42.8153650Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8153690Z         iteration=0,
2025-01-14T13:16:42.8153740Z     ):
2025-01-14T13:16:42.8154190Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8154280Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8154330Z         else:
2025-01-14T13:16:42.8154390Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8154430Z     
2025-01-14T13:16:42.8154530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8154600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8154660Z         )
2025-01-14T13:16:42.8154700Z     
2025-01-14T13:16:42.8154800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8154890Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8155010Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8155060Z         else:
2025-01-14T13:16:42.8155120Z             continuum_state = None
2025-01-14T13:16:42.8155200Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8155280Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8155350Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8155430Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8155510Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8155580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8155650Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8155690Z         ).to_numba(
2025-01-14T13:16:42.8155740Z             macro_atom_state,
2025-01-14T13:16:42.8155810Z             self.line_interaction_type,
2025-01-14T13:16:42.8155850Z         )
2025-01-14T13:16:42.8155930Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8156150Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8156460Z         ]
2025-01-14T13:16:42.8156710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8156710Z 
2025-01-14T13:16:42.8156830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8157020Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-14T13:16:42.8157020Z 
2025-01-14T13:16:42.8157560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8157840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8157850Z 
2025-01-14T13:16:42.8157910Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8158030Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8158070Z         """
2025-01-14T13:16:42.8158190Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8158240Z     
2025-01-14T13:16:42.8158290Z         Parameters
2025-01-14T13:16:42.8158330Z         ----------
2025-01-14T13:16:42.8158450Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8158550Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8158640Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8158690Z             Atomic data.
2025-01-14T13:16:42.8158730Z     
2025-01-14T13:16:42.8158780Z         Returns
2025-01-14T13:16:42.8158820Z         -------
2025-01-14T13:16:42.8158900Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8158950Z             Simulation object.
2025-01-14T13:16:42.8158990Z         """
2025-01-14T13:16:42.8159110Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8159310Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8159570Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8159670Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8159780Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8159920Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8160020Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8160100Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8160160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8160220Z >       sim = run_tardis(
2025-01-14T13:16:42.8160270Z             config_verysimple,
2025-01-14T13:16:42.8160320Z             atom_data=atomic_data,
2025-01-14T13:16:42.8160390Z             show_convergence_plots=False,
2025-01-14T13:16:42.8160440Z             log_level="CRITICAl",
2025-01-14T13:16:42.8160500Z         )
2025-01-14T13:16:42.8160500Z 
2025-01-14T13:16:42.8160610Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8160700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8160750Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8160820Z     simulation.run_convergence()
2025-01-14T13:16:42.8160910Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8161020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8161080Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8161200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8161290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8161290Z 
2025-01-14T13:16:42.8161500Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8168550Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8171280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8171560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8171690Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8171800Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8171800Z 
2025-01-14T13:16:42.8171860Z     def initialize_transport_state(
2025-01-14T13:16:42.8171910Z         self,
2025-01-14T13:16:42.8171960Z         simulation_state,
2025-01-14T13:16:42.8172010Z         opacity_state,
2025-01-14T13:16:42.8172060Z         macro_atom_state,
2025-01-14T13:16:42.8172110Z         plasma,
2025-01-14T13:16:42.8172160Z         no_of_packets,
2025-01-14T13:16:42.8172210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8172270Z         iteration=0,
2025-01-14T13:16:42.8172320Z     ):
2025-01-14T13:16:42.8172420Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8172490Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8172540Z         else:
2025-01-14T13:16:42.8172590Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8172640Z     
2025-01-14T13:16:42.8172740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8172820Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8172860Z         )
2025-01-14T13:16:42.8172900Z     
2025-01-14T13:16:42.8173000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8173090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8173210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8173250Z         else:
2025-01-14T13:16:42.8173310Z             continuum_state = None
2025-01-14T13:16:42.8173390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8173480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8173780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8173880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8173950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8174020Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8174080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8174120Z         ).to_numba(
2025-01-14T13:16:42.8174180Z             macro_atom_state,
2025-01-14T13:16:42.8174360Z             self.line_interaction_type,
2025-01-14T13:16:42.8174410Z         )
2025-01-14T13:16:42.8174490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8174710Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8174760Z         ]
2025-01-14T13:16:42.8175010Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8175020Z 
2025-01-14T13:16:42.8175140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8175330Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-14T13:16:42.8175330Z 
2025-01-14T13:16:42.8176020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8176310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8176310Z 
2025-01-14T13:16:42.8176380Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8176490Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8176540Z         """
2025-01-14T13:16:42.8176770Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8176830Z     
2025-01-14T13:16:42.8176870Z         Parameters
2025-01-14T13:16:42.8176930Z         ----------
2025-01-14T13:16:42.8177040Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8177130Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8177220Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8177270Z             Atomic data.
2025-01-14T13:16:42.8177320Z     
2025-01-14T13:16:42.8177360Z         Returns
2025-01-14T13:16:42.8177400Z         -------
2025-01-14T13:16:42.8177480Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8177540Z             Simulation object.
2025-01-14T13:16:42.8177580Z         """
2025-01-14T13:16:42.8177700Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8177830Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8177930Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8178020Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8178130Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8178270Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8178380Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8178450Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8178520Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8178580Z >       sim = run_tardis(
2025-01-14T13:16:42.8178630Z             config_verysimple,
2025-01-14T13:16:42.8178700Z             atom_data=atomic_data,
2025-01-14T13:16:42.8178760Z             show_convergence_plots=False,
2025-01-14T13:16:42.8178820Z             log_level="CRITICAl",
2025-01-14T13:16:42.8178860Z         )
2025-01-14T13:16:42.8178860Z 
2025-01-14T13:16:42.8178970Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8179120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8179200Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8179260Z     simulation.run_convergence()
2025-01-14T13:16:42.8179360Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8179470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8179540Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8179660Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8179750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8179750Z 
2025-01-14T13:16:42.8179960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8180120Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8180300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8180700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8180830Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8180930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8180940Z 
2025-01-14T13:16:42.8181000Z     def initialize_transport_state(
2025-01-14T13:16:42.8181040Z         self,
2025-01-14T13:16:42.8181090Z         simulation_state,
2025-01-14T13:16:42.8181150Z         opacity_state,
2025-01-14T13:16:42.8181200Z         macro_atom_state,
2025-01-14T13:16:42.8181240Z         plasma,
2025-01-14T13:16:42.8181290Z         no_of_packets,
2025-01-14T13:16:42.8181350Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8181390Z         iteration=0,
2025-01-14T13:16:42.8181440Z     ):
2025-01-14T13:16:42.8181530Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8181680Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8181730Z         else:
2025-01-14T13:16:42.8181790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8181830Z     
2025-01-14T13:16:42.8181930Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8182000Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8182050Z         )
2025-01-14T13:16:42.8182090Z     
2025-01-14T13:16:42.8182190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8182280Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8182400Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8182450Z         else:
2025-01-14T13:16:42.8182500Z             continuum_state = None
2025-01-14T13:16:42.8182580Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8182660Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8182730Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8182810Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8182890Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8182950Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8183020Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8183340Z         ).to_numba(
2025-01-14T13:16:42.8183410Z             macro_atom_state,
2025-01-14T13:16:42.8183470Z             self.line_interaction_type,
2025-01-14T13:16:42.8183510Z         )
2025-01-14T13:16:42.8183580Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8183800Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8183850Z         ]
2025-01-14T13:16:42.8184090Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8184100Z 
2025-01-14T13:16:42.8184220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8184680Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-14T13:16:42.8184690Z 
2025-01-14T13:16:42.8185240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8185520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8185520Z 
2025-01-14T13:16:42.8185580Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8185690Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8185730Z         """
2025-01-14T13:16:42.8185850Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8185900Z     
2025-01-14T13:16:42.8185950Z         Parameters
2025-01-14T13:16:42.8186000Z         ----------
2025-01-14T13:16:42.8186120Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8186210Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8186300Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8186350Z             Atomic data.
2025-01-14T13:16:42.8186390Z     
2025-01-14T13:16:42.8186430Z         Returns
2025-01-14T13:16:42.8186470Z         -------
2025-01-14T13:16:42.8186550Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8186600Z             Simulation object.
2025-01-14T13:16:42.8186650Z         """
2025-01-14T13:16:42.8186770Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8186910Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8186990Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8187270Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8187370Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8187520Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8187620Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8187700Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8187770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8187820Z >       sim = run_tardis(
2025-01-14T13:16:42.8187880Z             config_verysimple,
2025-01-14T13:16:42.8187930Z             atom_data=atomic_data,
2025-01-14T13:16:42.8187990Z             show_convergence_plots=False,
2025-01-14T13:16:42.8188050Z             log_level="CRITICAl",
2025-01-14T13:16:42.8188090Z         )
2025-01-14T13:16:42.8188090Z 
2025-01-14T13:16:42.8188200Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8188290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8188350Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8188420Z     simulation.run_convergence()
2025-01-14T13:16:42.8188500Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8188610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8188680Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8188790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8188880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8188880Z 
2025-01-14T13:16:42.8189080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8189240Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8189410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8189680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8189800Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8189910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8189920Z 
2025-01-14T13:16:42.8189980Z     def initialize_transport_state(
2025-01-14T13:16:42.8190020Z         self,
2025-01-14T13:16:42.8190070Z         simulation_state,
2025-01-14T13:16:42.8190120Z         opacity_state,
2025-01-14T13:16:42.8190180Z         macro_atom_state,
2025-01-14T13:16:42.8190220Z         plasma,
2025-01-14T13:16:42.8190270Z         no_of_packets,
2025-01-14T13:16:42.8190320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8190370Z         iteration=0,
2025-01-14T13:16:42.8190410Z     ):
2025-01-14T13:16:42.8190510Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8190570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8190620Z         else:
2025-01-14T13:16:42.8190680Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8190720Z     
2025-01-14T13:16:42.8190820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8190890Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8190940Z         )
2025-01-14T13:16:42.8190980Z     
2025-01-14T13:16:42.8191080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8191160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8191280Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8191330Z         else:
2025-01-14T13:16:42.8191390Z             continuum_state = None
2025-01-14T13:16:42.8191460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8191550Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8191610Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8191740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8191820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8191890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8191950Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8192000Z         ).to_numba(
2025-01-14T13:16:42.8192060Z             macro_atom_state,
2025-01-14T13:16:42.8192110Z             self.line_interaction_type,
2025-01-14T13:16:42.8192160Z         )
2025-01-14T13:16:42.8192230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8192450Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8192500Z         ]
2025-01-14T13:16:42.8192740Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8192740Z 
2025-01-14T13:16:42.8192850Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8193050Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-14T13:16:42.8193050Z 
2025-01-14T13:16:42.8193580Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8193860Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8193860Z 
2025-01-14T13:16:42.8193930Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8194030Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8194080Z         """
2025-01-14T13:16:42.8194190Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8194240Z     
2025-01-14T13:16:42.8194290Z         Parameters
2025-01-14T13:16:42.8194340Z         ----------
2025-01-14T13:16:42.8194500Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8194600Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8194690Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8194740Z             Atomic data.
2025-01-14T13:16:42.8194780Z     
2025-01-14T13:16:42.8194820Z         Returns
2025-01-14T13:16:42.8194870Z         -------
2025-01-14T13:16:42.8194940Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8195000Z             Simulation object.
2025-01-14T13:16:42.8195040Z         """
2025-01-14T13:16:42.8195160Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8195290Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8195380Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8195470Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8195580Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8195720Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8195830Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8195900Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8195960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8196020Z >       sim = run_tardis(
2025-01-14T13:16:42.8196070Z             config_verysimple,
2025-01-14T13:16:42.8196130Z             atom_data=atomic_data,
2025-01-14T13:16:42.8196190Z             show_convergence_plots=False,
2025-01-14T13:16:42.8196250Z             log_level="CRITICAl",
2025-01-14T13:16:42.8196290Z         )
2025-01-14T13:16:42.8196290Z 
2025-01-14T13:16:42.8196400Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8196480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8196600Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8196660Z     simulation.run_convergence()
2025-01-14T13:16:42.8196750Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8196860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8196920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8197040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8197130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8197130Z 
2025-01-14T13:16:42.8197340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8197500Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8197670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8197890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8198020Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8198130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8198130Z 
2025-01-14T13:16:42.8198190Z     def initialize_transport_state(
2025-01-14T13:16:42.8198240Z         self,
2025-01-14T13:16:42.8198290Z         simulation_state,
2025-01-14T13:16:42.8198340Z         opacity_state,
2025-01-14T13:16:42.8198390Z         macro_atom_state,
2025-01-14T13:16:42.8198430Z         plasma,
2025-01-14T13:16:42.8198480Z         no_of_packets,
2025-01-14T13:16:42.8198540Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8198580Z         iteration=0,
2025-01-14T13:16:42.8198620Z     ):
2025-01-14T13:16:42.8198720Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8198790Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8198830Z         else:
2025-01-14T13:16:42.8198880Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8198930Z     
2025-01-14T13:16:42.8199070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8199150Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8199190Z         )
2025-01-14T13:16:42.8199230Z     
2025-01-14T13:16:42.8199330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8199420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8199540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8199590Z         else:
2025-01-14T13:16:42.8199650Z             continuum_state = None
2025-01-14T13:16:42.8199730Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8199810Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8199880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8199960Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8200040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8200110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8200180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8200230Z         ).to_numba(
2025-01-14T13:16:42.8200280Z             macro_atom_state,
2025-01-14T13:16:42.8200340Z             self.line_interaction_type,
2025-01-14T13:16:42.8200380Z         )
2025-01-14T13:16:42.8200460Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8200770Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8200840Z         ]
2025-01-14T13:16:42.8201080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8201080Z 
2025-01-14T13:16:42.8201190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8201370Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-14T13:16:42.8201540Z 
2025-01-14T13:16:42.8202070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8202350Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8202350Z 
2025-01-14T13:16:42.8202410Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8202520Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8202570Z         """
2025-01-14T13:16:42.8202680Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8202720Z     
2025-01-14T13:16:42.8202770Z         Parameters
2025-01-14T13:16:42.8202830Z         ----------
2025-01-14T13:16:42.8202940Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8203040Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8203130Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8203180Z             Atomic data.
2025-01-14T13:16:42.8203220Z     
2025-01-14T13:16:42.8203270Z         Returns
2025-01-14T13:16:42.8203310Z         -------
2025-01-14T13:16:42.8203390Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8203440Z             Simulation object.
2025-01-14T13:16:42.8203480Z         """
2025-01-14T13:16:42.8203600Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8203740Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8203820Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8203910Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8204020Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8204160Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8204530Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8204620Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8204680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8204880Z >       sim = run_tardis(
2025-01-14T13:16:42.8204940Z             config_verysimple,
2025-01-14T13:16:42.8205000Z             atom_data=atomic_data,
2025-01-14T13:16:42.8205060Z             show_convergence_plots=False,
2025-01-14T13:16:42.8205120Z             log_level="CRITICAl",
2025-01-14T13:16:42.8205160Z         )
2025-01-14T13:16:42.8205160Z 
2025-01-14T13:16:42.8205270Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8205360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8205420Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8205480Z     simulation.run_convergence()
2025-01-14T13:16:42.8205570Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8205830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8205930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8206050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8206140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8206150Z 
2025-01-14T13:16:42.8206350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8206520Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8206690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8206910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8207030Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8207560Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8207560Z 
2025-01-14T13:16:42.8207620Z     def initialize_transport_state(
2025-01-14T13:16:42.8207670Z         self,
2025-01-14T13:16:42.8207730Z         simulation_state,
2025-01-14T13:16:42.8207770Z         opacity_state,
2025-01-14T13:16:42.8207830Z         macro_atom_state,
2025-01-14T13:16:42.8207870Z         plasma,
2025-01-14T13:16:42.8207920Z         no_of_packets,
2025-01-14T13:16:42.8207980Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8208020Z         iteration=0,
2025-01-14T13:16:42.8208060Z     ):
2025-01-14T13:16:42.8208170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8208250Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8208300Z         else:
2025-01-14T13:16:42.8208350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8208400Z     
2025-01-14T13:16:42.8208510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8208590Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8208640Z         )
2025-01-14T13:16:42.8209100Z     
2025-01-14T13:16:42.8209210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8209300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8209430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8209470Z         else:
2025-01-14T13:16:42.8209530Z             continuum_state = None
2025-01-14T13:16:42.8209610Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8209690Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8209760Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8209840Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8209920Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8209980Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8210050Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8210170Z         ).to_numba(
2025-01-14T13:16:42.8210230Z             macro_atom_state,
2025-01-14T13:16:42.8210290Z             self.line_interaction_type,
2025-01-14T13:16:42.8210340Z         )
2025-01-14T13:16:42.8210410Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8210630Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8210670Z         ]
2025-01-14T13:16:42.8210920Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8210920Z 
2025-01-14T13:16:42.8211030Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8211220Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-14T13:16:42.8211220Z 
2025-01-14T13:16:42.8211940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8212260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8212260Z 
2025-01-14T13:16:42.8212330Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8212450Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8212500Z         """
2025-01-14T13:16:42.8212620Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8212660Z     
2025-01-14T13:16:42.8212720Z         Parameters
2025-01-14T13:16:42.8212770Z         ----------
2025-01-14T13:16:42.8212890Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8212980Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8213240Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8213290Z             Atomic data.
2025-01-14T13:16:42.8213340Z     
2025-01-14T13:16:42.8213380Z         Returns
2025-01-14T13:16:42.8213420Z         -------
2025-01-14T13:16:42.8213500Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8213570Z             Simulation object.
2025-01-14T13:16:42.8213610Z         """
2025-01-14T13:16:42.8213740Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8213870Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8213970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8214070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8214170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8214320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8214560Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8214640Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8214710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8214760Z >       sim = run_tardis(
2025-01-14T13:16:42.8214810Z             config_verysimple,
2025-01-14T13:16:42.8214870Z             atom_data=atomic_data,
2025-01-14T13:16:42.8214930Z             show_convergence_plots=False,
2025-01-14T13:16:42.8214990Z             log_level="CRITICAl",
2025-01-14T13:16:42.8215040Z         )
2025-01-14T13:16:42.8215040Z 
2025-01-14T13:16:42.8215150Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8215240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8215300Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8215360Z     simulation.run_convergence()
2025-01-14T13:16:42.8215450Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8215570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8215700Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8215830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8215920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8215930Z 
2025-01-14T13:16:42.8216140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8216300Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8216480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8216700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8216820Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8216930Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8216930Z 
2025-01-14T13:16:42.8217000Z     def initialize_transport_state(
2025-01-14T13:16:42.8217050Z         self,
2025-01-14T13:16:42.8217100Z         simulation_state,
2025-01-14T13:16:42.8217150Z         opacity_state,
2025-01-14T13:16:42.8217200Z         macro_atom_state,
2025-01-14T13:16:42.8217240Z         plasma,
2025-01-14T13:16:42.8217290Z         no_of_packets,
2025-01-14T13:16:42.8217350Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8217400Z         iteration=0,
2025-01-14T13:16:42.8217440Z     ):
2025-01-14T13:16:42.8217540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8217610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8217650Z         else:
2025-01-14T13:16:42.8217710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8217750Z     
2025-01-14T13:16:42.8217850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8217920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8218020Z         )
2025-01-14T13:16:42.8218060Z     
2025-01-14T13:16:42.8218170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8218260Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8218380Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8218430Z         else:
2025-01-14T13:16:42.8218480Z             continuum_state = None
2025-01-14T13:16:42.8218560Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8218640Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8218700Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8218790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8218860Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8218930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8218990Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8219040Z         ).to_numba(
2025-01-14T13:16:42.8219100Z             macro_atom_state,
2025-01-14T13:16:42.8219160Z             self.line_interaction_type,
2025-01-14T13:16:42.8219200Z         )
2025-01-14T13:16:42.8219280Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8219500Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8219550Z         ]
2025-01-14T13:16:42.8219790Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8219800Z 
2025-01-14T13:16:42.8219910Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8220070Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-14T13:16:42.8220070Z 
2025-01-14T13:16:42.8220680Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8225880Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8225890Z 
2025-01-14T13:16:42.8225980Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8226100Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8226150Z         """
2025-01-14T13:16:42.8226260Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8226310Z     
2025-01-14T13:16:42.8226350Z         Parameters
2025-01-14T13:16:42.8226400Z         ----------
2025-01-14T13:16:42.8226510Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8226620Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8226710Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8226770Z             Atomic data.
2025-01-14T13:16:42.8226820Z     
2025-01-14T13:16:42.8226870Z         Returns
2025-01-14T13:16:42.8226910Z         -------
2025-01-14T13:16:42.8227040Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8227110Z             Simulation object.
2025-01-14T13:16:42.8227150Z         """
2025-01-14T13:16:42.8227270Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8227420Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8227510Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8227600Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8227710Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8227850Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8227960Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8228260Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8228340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8228390Z >       sim = run_tardis(
2025-01-14T13:16:42.8228450Z             config_verysimple,
2025-01-14T13:16:42.8228500Z             atom_data=atomic_data,
2025-01-14T13:16:42.8228570Z             show_convergence_plots=False,
2025-01-14T13:16:42.8228620Z             log_level="CRITICAl",
2025-01-14T13:16:42.8228660Z         )
2025-01-14T13:16:42.8228670Z 
2025-01-14T13:16:42.8228780Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8228880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8228940Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8229000Z     simulation.run_convergence()
2025-01-14T13:16:42.8229090Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8229200Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8229270Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8229390Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8229480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8229480Z 
2025-01-14T13:16:42.8229690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8229850Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8230020Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8230240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8230360Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8230460Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8230470Z 
2025-01-14T13:16:42.8230540Z     def initialize_transport_state(
2025-01-14T13:16:42.8230590Z         self,
2025-01-14T13:16:42.8230940Z         simulation_state,
2025-01-14T13:16:42.8231000Z         opacity_state,
2025-01-14T13:16:42.8231050Z         macro_atom_state,
2025-01-14T13:16:42.8231090Z         plasma,
2025-01-14T13:16:42.8231150Z         no_of_packets,
2025-01-14T13:16:42.8231210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8231250Z         iteration=0,
2025-01-14T13:16:42.8231300Z     ):
2025-01-14T13:16:42.8231390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8231470Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8231510Z         else:
2025-01-14T13:16:42.8231570Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8231610Z     
2025-01-14T13:16:42.8231710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8231780Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8231820Z         )
2025-01-14T13:16:42.8231870Z     
2025-01-14T13:16:42.8231970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8232060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8232180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8232220Z         else:
2025-01-14T13:16:42.8232280Z             continuum_state = None
2025-01-14T13:16:42.8232360Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8232440Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8232510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8232590Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8232670Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8232740Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8232800Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8232840Z         ).to_numba(
2025-01-14T13:16:42.8232900Z             macro_atom_state,
2025-01-14T13:16:42.8233210Z             self.line_interaction_type,
2025-01-14T13:16:42.8233260Z         )
2025-01-14T13:16:42.8233330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8233550Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8233590Z         ]
2025-01-14T13:16:42.8233840Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8233840Z 
2025-01-14T13:16:42.8233950Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8234110Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-14T13:16:42.8234120Z 
2025-01-14T13:16:42.8234650Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8234940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8234940Z 
2025-01-14T13:16:42.8235010Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8235130Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8235170Z         """
2025-01-14T13:16:42.8235290Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8235330Z     
2025-01-14T13:16:42.8235380Z         Parameters
2025-01-14T13:16:42.8235430Z         ----------
2025-01-14T13:16:42.8235550Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8235640Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8235730Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8235780Z             Atomic data.
2025-01-14T13:16:42.8235830Z     
2025-01-14T13:16:42.8235870Z         Returns
2025-01-14T13:16:42.8235920Z         -------
2025-01-14T13:16:42.8236050Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8236110Z             Simulation object.
2025-01-14T13:16:42.8236160Z         """
2025-01-14T13:16:42.8236280Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8236570Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8236720Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8236830Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8236940Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8237090Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8237200Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8237270Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8237350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8237410Z >       sim = run_tardis(
2025-01-14T13:16:42.8237470Z             config_verysimple,
2025-01-14T13:16:42.8237530Z             atom_data=atomic_data,
2025-01-14T13:16:42.8237590Z             show_convergence_plots=False,
2025-01-14T13:16:42.8237650Z             log_level="CRITICAl",
2025-01-14T13:16:42.8237700Z         )
2025-01-14T13:16:42.8237700Z 
2025-01-14T13:16:42.8237810Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8237910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8237970Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8238030Z     simulation.run_convergence()
2025-01-14T13:16:42.8238440Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8238570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8238640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8238990Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8239080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8239080Z 
2025-01-14T13:16:42.8239300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8239460Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8239640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8239860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8239980Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8240090Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8240090Z 
2025-01-14T13:16:42.8240160Z     def initialize_transport_state(
2025-01-14T13:16:42.8240200Z         self,
2025-01-14T13:16:42.8240260Z         simulation_state,
2025-01-14T13:16:42.8240310Z         opacity_state,
2025-01-14T13:16:42.8240360Z         macro_atom_state,
2025-01-14T13:16:42.8240410Z         plasma,
2025-01-14T13:16:42.8240460Z         no_of_packets,
2025-01-14T13:16:42.8240520Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8240560Z         iteration=0,
2025-01-14T13:16:42.8240600Z     ):
2025-01-14T13:16:42.8240700Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8240770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8240820Z         else:
2025-01-14T13:16:42.8240870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8240920Z     
2025-01-14T13:16:42.8241020Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8241100Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8241140Z         )
2025-01-14T13:16:42.8241180Z     
2025-01-14T13:16:42.8241280Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8241370Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8241560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8241610Z         else:
2025-01-14T13:16:42.8241670Z             continuum_state = None
2025-01-14T13:16:42.8241750Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8241830Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8241900Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8241990Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8242060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8242130Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8242190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8242240Z         ).to_numba(
2025-01-14T13:16:42.8242290Z             macro_atom_state,
2025-01-14T13:16:42.8242350Z             self.line_interaction_type,
2025-01-14T13:16:42.8242400Z         )
2025-01-14T13:16:42.8242470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8242700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8242740Z         ]
2025-01-14T13:16:42.8242990Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8243000Z 
2025-01-14T13:16:42.8243110Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8243270Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-14T13:16:42.8243270Z 
2025-01-14T13:16:42.8243810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8244100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8244150Z 
2025-01-14T13:16:42.8244220Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8244330Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8244370Z         """
2025-01-14T13:16:42.8244490Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8244530Z     
2025-01-14T13:16:42.8244580Z         Parameters
2025-01-14T13:16:42.8244630Z         ----------
2025-01-14T13:16:42.8244740Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8244830Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8244920Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8244970Z             Atomic data.
2025-01-14T13:16:42.8245010Z     
2025-01-14T13:16:42.8245050Z         Returns
2025-01-14T13:16:42.8245100Z         -------
2025-01-14T13:16:42.8245180Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8245230Z             Simulation object.
2025-01-14T13:16:42.8245280Z         """
2025-01-14T13:16:42.8245400Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8245540Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8245620Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8245720Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8246910Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8247430Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8247890Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8248150Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8248370Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8248530Z >       sim = run_tardis(
2025-01-14T13:16:42.8248730Z             config_verysimple,
2025-01-14T13:16:42.8249490Z             atom_data=atomic_data,
2025-01-14T13:16:42.8249920Z             show_convergence_plots=False,
2025-01-14T13:16:42.8250100Z             log_level="CRITICAl",
2025-01-14T13:16:42.8250230Z         )
2025-01-14T13:16:42.8250240Z 
2025-01-14T13:16:42.8250570Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8250810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8251000Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8251170Z     simulation.run_convergence()
2025-01-14T13:16:42.8251510Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8251820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8252020Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8252350Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8252610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8252620Z 
2025-01-14T13:16:42.8253180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8253600Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8255500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8256090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8256430Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8256720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8256730Z 
2025-01-14T13:16:42.8257420Z     def initialize_transport_state(
2025-01-14T13:16:42.8257710Z         self,
2025-01-14T13:16:42.8257830Z         simulation_state,
2025-01-14T13:16:42.8257890Z         opacity_state,
2025-01-14T13:16:42.8258190Z         macro_atom_state,
2025-01-14T13:16:42.8258240Z         plasma,
2025-01-14T13:16:42.8258290Z         no_of_packets,
2025-01-14T13:16:42.8258360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8258400Z         iteration=0,
2025-01-14T13:16:42.8258450Z     ):
2025-01-14T13:16:42.8258550Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8258630Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8258670Z         else:
2025-01-14T13:16:42.8258720Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8258770Z     
2025-01-14T13:16:42.8260810Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8260920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8260970Z         )
2025-01-14T13:16:42.8261010Z     
2025-01-14T13:16:42.8261110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8261200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8261330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8261380Z         else:
2025-01-14T13:16:42.8261430Z             continuum_state = None
2025-01-14T13:16:42.8261520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8261600Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8261660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8261740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8261810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8261880Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8261960Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8262000Z         ).to_numba(
2025-01-14T13:16:42.8262050Z             macro_atom_state,
2025-01-14T13:16:42.8262110Z             self.line_interaction_type,
2025-01-14T13:16:42.8262150Z         )
2025-01-14T13:16:42.8262230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8262830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8262890Z         ]
2025-01-14T13:16:42.8263130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8263140Z 
2025-01-14T13:16:42.8263250Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8263410Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-14T13:16:42.8263410Z 
2025-01-14T13:16:42.8263950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8264230Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8264230Z 
2025-01-14T13:16:42.8264300Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8264410Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8264450Z         """
2025-01-14T13:16:42.8264570Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8264610Z     
2025-01-14T13:16:42.8264660Z         Parameters
2025-01-14T13:16:42.8264710Z         ----------
2025-01-14T13:16:42.8264820Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8264920Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8265010Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8265060Z             Atomic data.
2025-01-14T13:16:42.8265100Z     
2025-01-14T13:16:42.8265150Z         Returns
2025-01-14T13:16:42.8265190Z         -------
2025-01-14T13:16:42.8265270Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8265580Z             Simulation object.
2025-01-14T13:16:42.8265620Z         """
2025-01-14T13:16:42.8265740Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8265890Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8265970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8266070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8266180Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8266320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8266420Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8266500Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8266570Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8266630Z >       sim = run_tardis(
2025-01-14T13:16:42.8266680Z             config_verysimple,
2025-01-14T13:16:42.8266740Z             atom_data=atomic_data,
2025-01-14T13:16:42.8266810Z             show_convergence_plots=False,
2025-01-14T13:16:42.8266870Z             log_level="CRITICAl",
2025-01-14T13:16:42.8266920Z         )
2025-01-14T13:16:42.8266920Z 
2025-01-14T13:16:42.8267020Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8267120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8267180Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8267240Z     simulation.run_convergence()
2025-01-14T13:16:42.8267330Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8267430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8267500Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8267620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8267710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8267710Z 
2025-01-14T13:16:42.8267980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8268150Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8268320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8268540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8268660Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8268770Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8268770Z 
2025-01-14T13:16:42.8268830Z     def initialize_transport_state(
2025-01-14T13:16:42.8268880Z         self,
2025-01-14T13:16:42.8268940Z         simulation_state,
2025-01-14T13:16:42.8268980Z         opacity_state,
2025-01-14T13:16:42.8269040Z         macro_atom_state,
2025-01-14T13:16:42.8269080Z         plasma,
2025-01-14T13:16:42.8269130Z         no_of_packets,
2025-01-14T13:16:42.8269190Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8269240Z         iteration=0,
2025-01-14T13:16:42.8269280Z     ):
2025-01-14T13:16:42.8269380Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8269460Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8269500Z         else:
2025-01-14T13:16:42.8269550Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8269590Z     
2025-01-14T13:16:42.8269700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8269770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8269810Z         )
2025-01-14T13:16:42.8269850Z     
2025-01-14T13:16:42.8269950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8270040Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8270160Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8270260Z         else:
2025-01-14T13:16:42.8270330Z             continuum_state = None
2025-01-14T13:16:42.8270410Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8270490Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8270560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8270640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8270710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8270780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8270840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8270890Z         ).to_numba(
2025-01-14T13:16:42.8270940Z             macro_atom_state,
2025-01-14T13:16:42.8271000Z             self.line_interaction_type,
2025-01-14T13:16:42.8271050Z         )
2025-01-14T13:16:42.8271120Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8271350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8271390Z         ]
2025-01-14T13:16:42.8271650Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8271660Z 
2025-01-14T13:16:42.8271770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8271930Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-14T13:16:42.8271940Z 
2025-01-14T13:16:42.8272470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8272780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8272790Z 
2025-01-14T13:16:42.8272860Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8273030Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8273090Z         """
2025-01-14T13:16:42.8273200Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8273250Z     
2025-01-14T13:16:42.8273290Z         Parameters
2025-01-14T13:16:42.8273350Z         ----------
2025-01-14T13:16:42.8273460Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8273550Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8273640Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8273690Z             Atomic data.
2025-01-14T13:16:42.8273730Z     
2025-01-14T13:16:42.8273780Z         Returns
2025-01-14T13:16:42.8273820Z         -------
2025-01-14T13:16:42.8273900Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8273950Z             Simulation object.
2025-01-14T13:16:42.8274000Z         """
2025-01-14T13:16:42.8274120Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8274260Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8274350Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8274450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8274550Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8274680Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8274790Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8274860Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8274930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8274980Z >       sim = run_tardis(
2025-01-14T13:16:42.8275040Z             config_verysimple,
2025-01-14T13:16:42.8275090Z             atom_data=atomic_data,
2025-01-14T13:16:42.8275150Z             show_convergence_plots=False,
2025-01-14T13:16:42.8275280Z             log_level="CRITICAl",
2025-01-14T13:16:42.8275330Z         )
2025-01-14T13:16:42.8275330Z 
2025-01-14T13:16:42.8275440Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8275530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8275590Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8275650Z     simulation.run_convergence()
2025-01-14T13:16:42.8275730Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8275840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8275910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8276030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8276110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8276110Z 
2025-01-14T13:16:42.8276330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8276490Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8276660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8276880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8277000Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8277100Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8277110Z 
2025-01-14T13:16:42.8277170Z     def initialize_transport_state(
2025-01-14T13:16:42.8277210Z         self,
2025-01-14T13:16:42.8277260Z         simulation_state,
2025-01-14T13:16:42.8277310Z         opacity_state,
2025-01-14T13:16:42.8277360Z         macro_atom_state,
2025-01-14T13:16:42.8277410Z         plasma,
2025-01-14T13:16:42.8277450Z         no_of_packets,
2025-01-14T13:16:42.8277510Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8277560Z         iteration=0,
2025-01-14T13:16:42.8277610Z     ):
2025-01-14T13:16:42.8277750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8277830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8277870Z         else:
2025-01-14T13:16:42.8277930Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8277970Z     
2025-01-14T13:16:42.8278070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8278140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8278180Z         )
2025-01-14T13:16:42.8278220Z     
2025-01-14T13:16:42.8278320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8278410Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8278520Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8278570Z         else:
2025-01-14T13:16:42.8278620Z             continuum_state = None
2025-01-14T13:16:42.8278700Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8278790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8278850Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8278930Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8279000Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8279070Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8279130Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8279180Z         ).to_numba(
2025-01-14T13:16:42.8279230Z             macro_atom_state,
2025-01-14T13:16:42.8279290Z             self.line_interaction_type,
2025-01-14T13:16:42.8279330Z         )
2025-01-14T13:16:42.8279410Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8279630Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8279680Z         ]
2025-01-14T13:16:42.8279970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8279980Z 
2025-01-14T13:16:42.8280090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8280250Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-14T13:16:42.8280250Z 
2025-01-14T13:16:42.8280800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8281080Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8281080Z 
2025-01-14T13:16:42.8281140Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8281260Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8281310Z         """
2025-01-14T13:16:42.8281430Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8281470Z     
2025-01-14T13:16:42.8281520Z         Parameters
2025-01-14T13:16:42.8281570Z         ----------
2025-01-14T13:16:42.8281690Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8281780Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8281880Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8281930Z             Atomic data.
2025-01-14T13:16:42.8281980Z     
2025-01-14T13:16:42.8282020Z         Returns
2025-01-14T13:16:42.8282070Z         -------
2025-01-14T13:16:42.8282150Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8282200Z             Simulation object.
2025-01-14T13:16:42.8282250Z         """
2025-01-14T13:16:42.8282370Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8282510Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8282950Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8283090Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8283200Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8283340Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8283440Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8283520Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8283590Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8283640Z >       sim = run_tardis(
2025-01-14T13:16:42.8283700Z             config_verysimple,
2025-01-14T13:16:42.8283750Z             atom_data=atomic_data,
2025-01-14T13:16:42.8283810Z             show_convergence_plots=False,
2025-01-14T13:16:42.8283870Z             log_level="CRITICAl",
2025-01-14T13:16:42.8283920Z         )
2025-01-14T13:16:42.8283930Z 
2025-01-14T13:16:42.8284030Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8284120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8284180Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8284250Z     simulation.run_convergence()
2025-01-14T13:16:42.8284330Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8284440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8284510Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8284620Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8284710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8284710Z 
2025-01-14T13:16:42.8284910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8285070Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8285470Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8285690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8285850Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8293120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8293140Z 
2025-01-14T13:16:42.8293220Z     def initialize_transport_state(
2025-01-14T13:16:42.8293270Z         self,
2025-01-14T13:16:42.8293320Z         simulation_state,
2025-01-14T13:16:42.8293370Z         opacity_state,
2025-01-14T13:16:42.8293430Z         macro_atom_state,
2025-01-14T13:16:42.8293470Z         plasma,
2025-01-14T13:16:42.8293520Z         no_of_packets,
2025-01-14T13:16:42.8293580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8293630Z         iteration=0,
2025-01-14T13:16:42.8293670Z     ):
2025-01-14T13:16:42.8293790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8293860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8293910Z         else:
2025-01-14T13:16:42.8293970Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8294020Z     
2025-01-14T13:16:42.8294120Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8294200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8294240Z         )
2025-01-14T13:16:42.8294280Z     
2025-01-14T13:16:42.8294380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8294470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8294600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8294640Z         else:
2025-01-14T13:16:42.8294710Z             continuum_state = None
2025-01-14T13:16:42.8294780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8294880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8295440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8295580Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8295660Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8295730Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8295800Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8295840Z         ).to_numba(
2025-01-14T13:16:42.8295900Z             macro_atom_state,
2025-01-14T13:16:42.8295960Z             self.line_interaction_type,
2025-01-14T13:16:42.8296010Z         )
2025-01-14T13:16:42.8296090Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8296310Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8296360Z         ]
2025-01-14T13:16:42.8296610Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8296620Z 
2025-01-14T13:16:42.8296750Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8297140Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-14T13:16:42.8297140Z 
2025-01-14T13:16:42.8297700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8297980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8297990Z 
2025-01-14T13:16:42.8298050Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8298170Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8298220Z         """
2025-01-14T13:16:42.8298330Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8298500Z     
2025-01-14T13:16:42.8298550Z         Parameters
2025-01-14T13:16:42.8298600Z         ----------
2025-01-14T13:16:42.8299920Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8300050Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8300150Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8300200Z             Atomic data.
2025-01-14T13:16:42.8300250Z     
2025-01-14T13:16:42.8300290Z         Returns
2025-01-14T13:16:42.8300340Z         -------
2025-01-14T13:16:42.8300420Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8300480Z             Simulation object.
2025-01-14T13:16:42.8300520Z         """
2025-01-14T13:16:42.8300650Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8300790Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8300890Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8300980Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8301420Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8301580Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8301690Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8301770Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8301840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8301900Z >       sim = run_tardis(
2025-01-14T13:16:42.8301950Z             config_verysimple,
2025-01-14T13:16:42.8302010Z             atom_data=atomic_data,
2025-01-14T13:16:42.8302080Z             show_convergence_plots=False,
2025-01-14T13:16:42.8302130Z             log_level="CRITICAl",
2025-01-14T13:16:42.8302180Z         )
2025-01-14T13:16:42.8302180Z 
2025-01-14T13:16:42.8302300Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8302530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8302610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8302670Z     simulation.run_convergence()
2025-01-14T13:16:42.8302760Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8302870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8302940Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8303070Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8303160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8303160Z 
2025-01-14T13:16:42.8303380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8303540Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8303710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8303930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8304060Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8304170Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8304170Z 
2025-01-14T13:16:42.8304240Z     def initialize_transport_state(
2025-01-14T13:16:42.8304290Z         self,
2025-01-14T13:16:42.8304340Z         simulation_state,
2025-01-14T13:16:42.8304390Z         opacity_state,
2025-01-14T13:16:42.8304440Z         macro_atom_state,
2025-01-14T13:16:42.8304480Z         plasma,
2025-01-14T13:16:42.8304530Z         no_of_packets,
2025-01-14T13:16:42.8304590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8304630Z         iteration=0,
2025-01-14T13:16:42.8304670Z     ):
2025-01-14T13:16:42.8304770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8304920Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8304970Z         else:
2025-01-14T13:16:42.8305020Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8305070Z     
2025-01-14T13:16:42.8305180Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8305250Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8305290Z         )
2025-01-14T13:16:42.8305330Z     
2025-01-14T13:16:42.8305430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8305530Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8306120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8306830Z         else:
2025-01-14T13:16:42.8306910Z             continuum_state = None
2025-01-14T13:16:42.8306990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8307070Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8307140Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8307240Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8307320Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8307380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8307450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8307500Z         ).to_numba(
2025-01-14T13:16:42.8307560Z             macro_atom_state,
2025-01-14T13:16:42.8307620Z             self.line_interaction_type,
2025-01-14T13:16:42.8307660Z         )
2025-01-14T13:16:42.8307740Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8307960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8308010Z         ]
2025-01-14T13:16:42.8308250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8308260Z 
2025-01-14T13:16:42.8308380Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8308680Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-14T13:16:42.8308680Z 
2025-01-14T13:16:42.8309220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8309500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8309510Z 
2025-01-14T13:16:42.8309570Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8309680Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8309720Z         """
2025-01-14T13:16:42.8309840Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8309880Z     
2025-01-14T13:16:42.8309940Z         Parameters
2025-01-14T13:16:42.8309980Z         ----------
2025-01-14T13:16:42.8310100Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8310200Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8310280Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8310340Z             Atomic data.
2025-01-14T13:16:42.8310380Z     
2025-01-14T13:16:42.8310420Z         Returns
2025-01-14T13:16:42.8310470Z         -------
2025-01-14T13:16:42.8310540Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8310590Z             Simulation object.
2025-01-14T13:16:42.8310640Z         """
2025-01-14T13:16:42.8310750Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8310890Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8310970Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8311130Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8311240Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8311380Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8311490Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8311560Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8311630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8311680Z >       sim = run_tardis(
2025-01-14T13:16:42.8311730Z             config_verysimple,
2025-01-14T13:16:42.8312170Z             atom_data=atomic_data,
2025-01-14T13:16:42.8312500Z             show_convergence_plots=False,
2025-01-14T13:16:42.8312660Z             log_level="CRITICAl",
2025-01-14T13:16:42.8312900Z         )
2025-01-14T13:16:42.8312910Z 
2025-01-14T13:16:42.8313210Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8313550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8313750Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8313950Z     simulation.run_convergence()
2025-01-14T13:16:42.8314200Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8314500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8314710Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8315030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8315270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8315280Z 
2025-01-14T13:16:42.8316480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8316950Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8317420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8318000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8318950Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8319120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8319120Z 
2025-01-14T13:16:42.8319190Z     def initialize_transport_state(
2025-01-14T13:16:42.8319230Z         self,
2025-01-14T13:16:42.8319290Z         simulation_state,
2025-01-14T13:16:42.8319340Z         opacity_state,
2025-01-14T13:16:42.8319390Z         macro_atom_state,
2025-01-14T13:16:42.8319440Z         plasma,
2025-01-14T13:16:42.8319490Z         no_of_packets,
2025-01-14T13:16:42.8319540Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8319590Z         iteration=0,
2025-01-14T13:16:42.8319630Z     ):
2025-01-14T13:16:42.8319730Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8319800Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8319850Z         else:
2025-01-14T13:16:42.8319920Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8319960Z     
2025-01-14T13:16:42.8320080Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8320150Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8320200Z         )
2025-01-14T13:16:42.8320240Z     
2025-01-14T13:16:42.8320340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8320420Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8320550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8320590Z         else:
2025-01-14T13:16:42.8320650Z             continuum_state = None
2025-01-14T13:16:42.8320730Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8320810Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8320880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8320960Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8321240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8321320Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8321390Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8321430Z         ).to_numba(
2025-01-14T13:16:42.8321490Z             macro_atom_state,
2025-01-14T13:16:42.8321560Z             self.line_interaction_type,
2025-01-14T13:16:42.8321600Z         )
2025-01-14T13:16:42.8321670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8321900Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8321940Z         ]
2025-01-14T13:16:42.8322190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8322200Z 
2025-01-14T13:16:42.8322310Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8322480Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-14T13:16:42.8322480Z 
2025-01-14T13:16:42.8323030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8323310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8323310Z 
2025-01-14T13:16:42.8323380Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8323490Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8323530Z         """
2025-01-14T13:16:42.8323650Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8323690Z     
2025-01-14T13:16:42.8323740Z         Parameters
2025-01-14T13:16:42.8323790Z         ----------
2025-01-14T13:16:42.8323910Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8324060Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8324160Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8324200Z             Atomic data.
2025-01-14T13:16:42.8324250Z     
2025-01-14T13:16:42.8324290Z         Returns
2025-01-14T13:16:42.8324340Z         -------
2025-01-14T13:16:42.8324410Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8324470Z             Simulation object.
2025-01-14T13:16:42.8324520Z         """
2025-01-14T13:16:42.8324640Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8324770Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8324860Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8324960Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8325070Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8325220Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8325330Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8325410Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8325470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8325530Z >       sim = run_tardis(
2025-01-14T13:16:42.8325580Z             config_verysimple,
2025-01-14T13:16:42.8325640Z             atom_data=atomic_data,
2025-01-14T13:16:42.8325710Z             show_convergence_plots=False,
2025-01-14T13:16:42.8326050Z             log_level="CRITICAl",
2025-01-14T13:16:42.8327810Z         )
2025-01-14T13:16:42.8327810Z 
2025-01-14T13:16:42.8327940Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8328030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8328090Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8328320Z     simulation.run_convergence()
2025-01-14T13:16:42.8328410Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8328540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8328600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8328730Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8328810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8328810Z 
2025-01-14T13:16:42.8329020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8329180Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8329350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8329580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8329710Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8329820Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8329820Z 
2025-01-14T13:16:42.8329880Z     def initialize_transport_state(
2025-01-14T13:16:42.8329930Z         self,
2025-01-14T13:16:42.8329980Z         simulation_state,
2025-01-14T13:16:42.8330030Z         opacity_state,
2025-01-14T13:16:42.8330080Z         macro_atom_state,
2025-01-14T13:16:42.8330130Z         plasma,
2025-01-14T13:16:42.8330170Z         no_of_packets,
2025-01-14T13:16:42.8330230Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8330270Z         iteration=0,
2025-01-14T13:16:42.8330320Z     ):
2025-01-14T13:16:42.8330410Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8330480Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8330530Z         else:
2025-01-14T13:16:42.8330580Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8330620Z     
2025-01-14T13:16:42.8330730Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8330880Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8330930Z         )
2025-01-14T13:16:42.8330970Z     
2025-01-14T13:16:42.8331070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8331160Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8331280Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8331330Z         else:
2025-01-14T13:16:42.8331380Z             continuum_state = None
2025-01-14T13:16:42.8331460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8331790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8331890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8331970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8332040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8332120Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8332190Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8332230Z         ).to_numba(
2025-01-14T13:16:42.8332290Z             macro_atom_state,
2025-01-14T13:16:42.8332350Z             self.line_interaction_type,
2025-01-14T13:16:42.8332390Z         )
2025-01-14T13:16:42.8332470Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8332700Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8332750Z         ]
2025-01-14T13:16:42.8332990Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8332990Z 
2025-01-14T13:16:42.8333110Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8333280Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-14T13:16:42.8333400Z 
2025-01-14T13:16:42.8333950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8334240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8334240Z 
2025-01-14T13:16:42.8334310Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8334420Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8334470Z         """
2025-01-14T13:16:42.8334590Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8334630Z     
2025-01-14T13:16:42.8334680Z         Parameters
2025-01-14T13:16:42.8334730Z         ----------
2025-01-14T13:16:42.8334840Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8334940Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8335030Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8335090Z             Atomic data.
2025-01-14T13:16:42.8335260Z     
2025-01-14T13:16:42.8335310Z         Returns
2025-01-14T13:16:42.8335360Z         -------
2025-01-14T13:16:42.8335440Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8335490Z             Simulation object.
2025-01-14T13:16:42.8335530Z         """
2025-01-14T13:16:42.8335650Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8335790Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8335880Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8335970Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8336960Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8337450Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8338310Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8338660Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8338950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8339010Z >       sim = run_tardis(
2025-01-14T13:16:42.8339070Z             config_verysimple,
2025-01-14T13:16:42.8339130Z             atom_data=atomic_data,
2025-01-14T13:16:42.8339190Z             show_convergence_plots=False,
2025-01-14T13:16:42.8339250Z             log_level="CRITICAl",
2025-01-14T13:16:42.8339290Z         )
2025-01-14T13:16:42.8339290Z 
2025-01-14T13:16:42.8339400Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8339500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8339560Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8339620Z     simulation.run_convergence()
2025-01-14T13:16:42.8339730Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8339840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8339910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8340030Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8340120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8340120Z 
2025-01-14T13:16:42.8340330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8340490Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8340850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8341070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8341200Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8341430Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8341430Z 
2025-01-14T13:16:42.8341500Z     def initialize_transport_state(
2025-01-14T13:16:42.8341540Z         self,
2025-01-14T13:16:42.8341600Z         simulation_state,
2025-01-14T13:16:42.8341650Z         opacity_state,
2025-01-14T13:16:42.8341700Z         macro_atom_state,
2025-01-14T13:16:42.8341740Z         plasma,
2025-01-14T13:16:42.8341790Z         no_of_packets,
2025-01-14T13:16:42.8341850Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8341900Z         iteration=0,
2025-01-14T13:16:42.8341940Z     ):
2025-01-14T13:16:42.8342030Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8342100Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8342150Z         else:
2025-01-14T13:16:42.8342200Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8342240Z     
2025-01-14T13:16:42.8342350Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8342420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8342460Z         )
2025-01-14T13:16:42.8342510Z     
2025-01-14T13:16:42.8342610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8342700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8342820Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8342870Z         else:
2025-01-14T13:16:42.8342930Z             continuum_state = None
2025-01-14T13:16:42.8343000Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8343090Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8343150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8343230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8343310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8343380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8343450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8343490Z         ).to_numba(
2025-01-14T13:16:42.8343820Z             macro_atom_state,
2025-01-14T13:16:42.8343890Z             self.line_interaction_type,
2025-01-14T13:16:42.8343930Z         )
2025-01-14T13:16:42.8344010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8344230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8344270Z         ]
2025-01-14T13:16:42.8344520Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8344520Z 
2025-01-14T13:16:42.8344630Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8344790Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-14T13:16:42.8344800Z 
2025-01-14T13:16:42.8345330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8345620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8345620Z 
2025-01-14T13:16:42.8345680Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8345790Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8345840Z         """
2025-01-14T13:16:42.8345950Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8345990Z     
2025-01-14T13:16:42.8346040Z         Parameters
2025-01-14T13:16:42.8346090Z         ----------
2025-01-14T13:16:42.8346200Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8346290Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8346580Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8346640Z             Atomic data.
2025-01-14T13:16:42.8346680Z     
2025-01-14T13:16:42.8346730Z         Returns
2025-01-14T13:16:42.8346780Z         -------
2025-01-14T13:16:42.8346850Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8346910Z             Simulation object.
2025-01-14T13:16:42.8346950Z         """
2025-01-14T13:16:42.8347070Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8347210Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8347300Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8347400Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8347500Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8347640Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8347740Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8347820Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8347890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8347940Z >       sim = run_tardis(
2025-01-14T13:16:42.8348000Z             config_verysimple,
2025-01-14T13:16:42.8348050Z             atom_data=atomic_data,
2025-01-14T13:16:42.8348110Z             show_convergence_plots=False,
2025-01-14T13:16:42.8348170Z             log_level="CRITICAl",
2025-01-14T13:16:42.8348210Z         )
2025-01-14T13:16:42.8348210Z 
2025-01-14T13:16:42.8348320Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8348410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8348470Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8348540Z     simulation.run_convergence()
2025-01-14T13:16:42.8348620Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8348730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8348850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8349380Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8349500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8349500Z 
2025-01-14T13:16:42.8349720Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8349880Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8350060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8350280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8350400Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8350520Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8350530Z 
2025-01-14T13:16:42.8350590Z     def initialize_transport_state(
2025-01-14T13:16:42.8350640Z         self,
2025-01-14T13:16:42.8350690Z         simulation_state,
2025-01-14T13:16:42.8350750Z         opacity_state,
2025-01-14T13:16:42.8350790Z         macro_atom_state,
2025-01-14T13:16:42.8350850Z         plasma,
2025-01-14T13:16:42.8350890Z         no_of_packets,
2025-01-14T13:16:42.8350950Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8351000Z         iteration=0,
2025-01-14T13:16:42.8351040Z     ):
2025-01-14T13:16:42.8351150Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8351220Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8351270Z         else:
2025-01-14T13:16:42.8351320Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8351370Z     
2025-01-14T13:16:42.8351480Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8351550Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8351750Z         )
2025-01-14T13:16:42.8351800Z     
2025-01-14T13:16:42.8351900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8351990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8352110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8352150Z         else:
2025-01-14T13:16:42.8352210Z             continuum_state = None
2025-01-14T13:16:42.8352290Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8352370Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8352440Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8352520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8352590Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8352660Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8352720Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8352770Z         ).to_numba(
2025-01-14T13:16:42.8352820Z             macro_atom_state,
2025-01-14T13:16:42.8352890Z             self.line_interaction_type,
2025-01-14T13:16:42.8352930Z         )
2025-01-14T13:16:42.8353010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8353230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8353280Z         ]
2025-01-14T13:16:42.8353520Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8353530Z 
2025-01-14T13:16:42.8353640Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8353800Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-14T13:16:42.8353810Z 
2025-01-14T13:16:42.8354360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8354710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8354720Z 
2025-01-14T13:16:42.8354790Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8354900Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8359960Z         """
2025-01-14T13:16:42.8360120Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8360160Z     
2025-01-14T13:16:42.8360210Z         Parameters
2025-01-14T13:16:42.8360260Z         ----------
2025-01-14T13:16:42.8360370Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8360470Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8360550Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8360610Z             Atomic data.
2025-01-14T13:16:42.8360650Z     
2025-01-14T13:16:42.8360710Z         Returns
2025-01-14T13:16:42.8360750Z         -------
2025-01-14T13:16:42.8360830Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8360880Z             Simulation object.
2025-01-14T13:16:42.8360930Z         """
2025-01-14T13:16:42.8361040Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8361180Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8361270Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8361360Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8361470Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8361610Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8361720Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8361790Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8362020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8362080Z >       sim = run_tardis(
2025-01-14T13:16:42.8362130Z             config_verysimple,
2025-01-14T13:16:42.8362190Z             atom_data=atomic_data,
2025-01-14T13:16:42.8362260Z             show_convergence_plots=False,
2025-01-14T13:16:42.8362310Z             log_level="CRITICAl",
2025-01-14T13:16:42.8362350Z         )
2025-01-14T13:16:42.8362360Z 
2025-01-14T13:16:42.8362460Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8362550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8362610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8362670Z     simulation.run_convergence()
2025-01-14T13:16:42.8362760Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8362870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8362940Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8363060Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8363150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8363150Z 
2025-01-14T13:16:42.8363360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8363510Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8363690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8363910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8364030Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8364140Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8364140Z 
2025-01-14T13:16:42.8364200Z     def initialize_transport_state(
2025-01-14T13:16:42.8364250Z         self,
2025-01-14T13:16:42.8364300Z         simulation_state,
2025-01-14T13:16:42.8364420Z         opacity_state,
2025-01-14T13:16:42.8364480Z         macro_atom_state,
2025-01-14T13:16:42.8364520Z         plasma,
2025-01-14T13:16:42.8364570Z         no_of_packets,
2025-01-14T13:16:42.8364630Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8364680Z         iteration=0,
2025-01-14T13:16:42.8364720Z     ):
2025-01-14T13:16:42.8364820Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8364890Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8364930Z         else:
2025-01-14T13:16:42.8364990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8365030Z     
2025-01-14T13:16:42.8365140Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8365200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8365250Z         )
2025-01-14T13:16:42.8365290Z     
2025-01-14T13:16:42.8365390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8365480Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8365600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8365650Z         else:
2025-01-14T13:16:42.8365710Z             continuum_state = None
2025-01-14T13:16:42.8365780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8365860Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8365940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8366020Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8366090Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8366160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8366230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8366270Z         ).to_numba(
2025-01-14T13:16:42.8366330Z             macro_atom_state,
2025-01-14T13:16:42.8366390Z             self.line_interaction_type,
2025-01-14T13:16:42.8366480Z         )
2025-01-14T13:16:42.8366560Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8366780Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8366830Z         ]
2025-01-14T13:16:42.8367070Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8367070Z 
2025-01-14T13:16:42.8367190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8367350Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-14T13:16:42.8367360Z 
2025-01-14T13:16:42.8367900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8368190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8368190Z 
2025-01-14T13:16:42.8368250Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8368360Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8368410Z         """
2025-01-14T13:16:42.8368520Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8368560Z     
2025-01-14T13:16:42.8368610Z         Parameters
2025-01-14T13:16:42.8368650Z         ----------
2025-01-14T13:16:42.8368770Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8368860Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8368950Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8369000Z             Atomic data.
2025-01-14T13:16:42.8369040Z     
2025-01-14T13:16:42.8369090Z         Returns
2025-01-14T13:16:42.8369140Z         -------
2025-01-14T13:16:42.8369440Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8369510Z             Simulation object.
2025-01-14T13:16:42.8369560Z         """
2025-01-14T13:16:42.8369670Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8369810Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8369900Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8370000Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8370100Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8370240Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8370340Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8370420Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8370480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8370540Z >       sim = run_tardis(
2025-01-14T13:16:42.8370590Z             config_verysimple,
2025-01-14T13:16:42.8370650Z             atom_data=atomic_data,
2025-01-14T13:16:42.8370720Z             show_convergence_plots=False,
2025-01-14T13:16:42.8370770Z             log_level="CRITICAl",
2025-01-14T13:16:42.8370810Z         )
2025-01-14T13:16:42.8370820Z 
2025-01-14T13:16:42.8370920Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8371010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8371070Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8371130Z     simulation.run_convergence()
2025-01-14T13:16:42.8371210Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8371320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8371380Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8371510Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8371800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8371800Z 
2025-01-14T13:16:42.8372010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8372170Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8372340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8372560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8372680Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8372790Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8372790Z 
2025-01-14T13:16:42.8372850Z     def initialize_transport_state(
2025-01-14T13:16:42.8372900Z         self,
2025-01-14T13:16:42.8372950Z         simulation_state,
2025-01-14T13:16:42.8373000Z         opacity_state,
2025-01-14T13:16:42.8373050Z         macro_atom_state,
2025-01-14T13:16:42.8373100Z         plasma,
2025-01-14T13:16:42.8373150Z         no_of_packets,
2025-01-14T13:16:42.8373200Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8373260Z         iteration=0,
2025-01-14T13:16:42.8373300Z     ):
2025-01-14T13:16:42.8373390Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8373460Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8373510Z         else:
2025-01-14T13:16:42.8373560Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8373600Z     
2025-01-14T13:16:42.8373700Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8373770Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8373810Z         )
2025-01-14T13:16:42.8373850Z     
2025-01-14T13:16:42.8373950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8374040Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8374210Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8374260Z         else:
2025-01-14T13:16:42.8374320Z             continuum_state = None
2025-01-14T13:16:42.8374400Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8374480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8374550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8374630Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8374690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8374760Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8374830Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8374870Z         ).to_numba(
2025-01-14T13:16:42.8374920Z             macro_atom_state,
2025-01-14T13:16:42.8374980Z             self.line_interaction_type,
2025-01-14T13:16:42.8375020Z         )
2025-01-14T13:16:42.8375100Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8375460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8375510Z         ]
2025-01-14T13:16:42.8375750Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8375760Z 
2025-01-14T13:16:42.8375860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8376030Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-14T13:16:42.8376030Z 
2025-01-14T13:16:42.8376560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8376840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8376910Z 
2025-01-14T13:16:42.8376980Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8377090Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8377140Z         """
2025-01-14T13:16:42.8377250Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8377290Z     
2025-01-14T13:16:42.8377340Z         Parameters
2025-01-14T13:16:42.8377380Z         ----------
2025-01-14T13:16:42.8377490Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8377590Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8377680Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8377730Z             Atomic data.
2025-01-14T13:16:42.8377770Z     
2025-01-14T13:16:42.8377820Z         Returns
2025-01-14T13:16:42.8377860Z         -------
2025-01-14T13:16:42.8377930Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8378000Z             Simulation object.
2025-01-14T13:16:42.8378040Z         """
2025-01-14T13:16:42.8378160Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8378290Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8378390Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8378480Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8378580Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8378720Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8378830Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8378900Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8378970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8379020Z >       sim = run_tardis(
2025-01-14T13:16:42.8379070Z             config_verysimple,
2025-01-14T13:16:42.8379130Z             atom_data=atomic_data,
2025-01-14T13:16:42.8379240Z             show_convergence_plots=False,
2025-01-14T13:16:42.8379310Z             log_level="CRITICAl",
2025-01-14T13:16:42.8379350Z         )
2025-01-14T13:16:42.8379350Z 
2025-01-14T13:16:42.8379460Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8379550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8379610Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8379670Z     simulation.run_convergence()
2025-01-14T13:16:42.8379750Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8379860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8379930Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8380050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8380140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8380140Z 
2025-01-14T13:16:42.8380350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8380510Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8380680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8380890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8381020Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8381120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8381120Z 
2025-01-14T13:16:42.8381190Z     def initialize_transport_state(
2025-01-14T13:16:42.8381230Z         self,
2025-01-14T13:16:42.8381290Z         simulation_state,
2025-01-14T13:16:42.8381330Z         opacity_state,
2025-01-14T13:16:42.8381380Z         macro_atom_state,
2025-01-14T13:16:42.8381480Z         plasma,
2025-01-14T13:16:42.8381530Z         no_of_packets,
2025-01-14T13:16:42.8381590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8381630Z         iteration=0,
2025-01-14T13:16:42.8381680Z     ):
2025-01-14T13:16:42.8381770Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8381850Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8381890Z         else:
2025-01-14T13:16:42.8381940Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8381980Z     
2025-01-14T13:16:42.8382090Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8382160Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8382210Z         )
2025-01-14T13:16:42.8382250Z     
2025-01-14T13:16:42.8382350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8382440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8382560Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8382610Z         else:
2025-01-14T13:16:42.8382670Z             continuum_state = None
2025-01-14T13:16:42.8382750Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8382830Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8382900Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8382980Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8383050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8383120Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8383180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8383230Z         ).to_numba(
2025-01-14T13:16:42.8383280Z             macro_atom_state,
2025-01-14T13:16:42.8383340Z             self.line_interaction_type,
2025-01-14T13:16:42.8383380Z         )
2025-01-14T13:16:42.8383460Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8383680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8383780Z         ]
2025-01-14T13:16:42.8384030Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8384030Z 
2025-01-14T13:16:42.8384140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8384310Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-14T13:16:42.8384310Z 
2025-01-14T13:16:42.8384840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8385120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8385120Z 
2025-01-14T13:16:42.8385180Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8385300Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8385340Z         """
2025-01-14T13:16:42.8385460Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8385500Z     
2025-01-14T13:16:42.8385550Z         Parameters
2025-01-14T13:16:42.8385600Z         ----------
2025-01-14T13:16:42.8385710Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8385800Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8385900Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8385940Z             Atomic data.
2025-01-14T13:16:42.8385990Z     
2025-01-14T13:16:42.8386030Z         Returns
2025-01-14T13:16:42.8386080Z         -------
2025-01-14T13:16:42.8386150Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8386210Z             Simulation object.
2025-01-14T13:16:42.8386310Z         """
2025-01-14T13:16:42.8386430Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8386570Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8386650Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8386750Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8386850Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8387000Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8387100Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8387170Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8387240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8387290Z >       sim = run_tardis(
2025-01-14T13:16:42.8387350Z             config_verysimple,
2025-01-14T13:16:42.8387400Z             atom_data=atomic_data,
2025-01-14T13:16:42.8387470Z             show_convergence_plots=False,
2025-01-14T13:16:42.8387530Z             log_level="CRITICAl",
2025-01-14T13:16:42.8387570Z         )
2025-01-14T13:16:42.8387580Z 
2025-01-14T13:16:42.8387680Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8387770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8387830Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8387890Z     simulation.run_convergence()
2025-01-14T13:16:42.8387970Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8388080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8388150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8388260Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8388350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8388350Z 
2025-01-14T13:16:42.8388560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8388960Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8390360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8391910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8392240Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8392540Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8392550Z 
2025-01-14T13:16:42.8392740Z     def initialize_transport_state(
2025-01-14T13:16:42.8392870Z         self,
2025-01-14T13:16:42.8393040Z         simulation_state,
2025-01-14T13:16:42.8393190Z         opacity_state,
2025-01-14T13:16:42.8393590Z         macro_atom_state,
2025-01-14T13:16:42.8393680Z         plasma,
2025-01-14T13:16:42.8393730Z         no_of_packets,
2025-01-14T13:16:42.8393810Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8393860Z         iteration=0,
2025-01-14T13:16:42.8393910Z     ):
2025-01-14T13:16:42.8394010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8394080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8394130Z         else:
2025-01-14T13:16:42.8394180Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8394230Z     
2025-01-14T13:16:42.8394340Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8394420Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8394460Z         )
2025-01-14T13:16:42.8394500Z     
2025-01-14T13:16:42.8394610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8394690Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8394820Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8394860Z         else:
2025-01-14T13:16:42.8395390Z             continuum_state = None
2025-01-14T13:16:42.8395470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8395550Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8395620Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8395710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8395780Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8395850Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8395910Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8395960Z         ).to_numba(
2025-01-14T13:16:42.8396010Z             macro_atom_state,
2025-01-14T13:16:42.8396080Z             self.line_interaction_type,
2025-01-14T13:16:42.8396120Z         )
2025-01-14T13:16:42.8396200Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8396420Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8396470Z         ]
2025-01-14T13:16:42.8396720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8396720Z 
2025-01-14T13:16:42.8396840Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8397010Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-14T13:16:42.8397010Z 
2025-01-14T13:16:42.8397570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8397850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8397850Z 
2025-01-14T13:16:42.8397920Z     @pytest.fixture(scope="module")
2025-01-14T13:16:42.8398040Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8398100Z         """
2025-01-14T13:16:42.8398340Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-14T13:16:42.8398390Z     
2025-01-14T13:16:42.8398440Z         Parameters
2025-01-14T13:16:42.8398490Z         ----------
2025-01-14T13:16:42.8398600Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-14T13:16:42.8398700Z             Configuration object for a very simple simulation.
2025-01-14T13:16:42.8398790Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-14T13:16:42.8398840Z             Atomic data.
2025-01-14T13:16:42.8398880Z     
2025-01-14T13:16:42.8398930Z         Returns
2025-01-14T13:16:42.8398970Z         -------
2025-01-14T13:16:42.8399050Z         sim: tardis.simulation.base.Simulation
2025-01-14T13:16:42.8399100Z             Simulation object.
2025-01-14T13:16:42.8399150Z         """
2025-01-14T13:16:42.8399270Z         # Setup simulation configuration using config_verysimple and
2025-01-14T13:16:42.8399410Z         # override properties in such a way to make the simulation run faster
2025-01-14T13:16:42.8399500Z         config_verysimple.montecarlo.iterations = 3
2025-01-14T13:16:42.8399600Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-14T13:16:42.8399700Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-14T13:16:42.8399850Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-14T13:16:42.8399960Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-14T13:16:42.8400030Z         config_verysimple.spectrum.num = 2000
2025-01-14T13:16:42.8400100Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8400150Z >       sim = run_tardis(
2025-01-14T13:16:42.8400210Z             config_verysimple,
2025-01-14T13:16:42.8400270Z             atom_data=atomic_data,
2025-01-14T13:16:42.8400330Z             show_convergence_plots=False,
2025-01-14T13:16:42.8400380Z             log_level="CRITICAl",
2025-01-14T13:16:42.8400490Z         )
2025-01-14T13:16:42.8400490Z 
2025-01-14T13:16:42.8400610Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-14T13:16:42.8400700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8400760Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.8400820Z     simulation.run_convergence()
2025-01-14T13:16:42.8400910Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.8401020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8401080Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8401200Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8401280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8401290Z 
2025-01-14T13:16:42.8401500Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31639e270>
2025-01-14T13:16:42.8401660Z simulation_state = <tardis.model.base.SimulationState object at 0x17491d910>
2025-01-14T13:16:42.8401840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x310ae8860>
2025-01-14T13:16:42.8402060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x310aeaea0>
2025-01-14T13:16:42.8402180Z plasma = <tardis.plasma.base.BasePlasma object at 0x3163add60>
2025-01-14T13:16:42.8402290Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.8402290Z 
2025-01-14T13:16:42.8402350Z     def initialize_transport_state(
2025-01-14T13:16:42.8402710Z         self,
2025-01-14T13:16:42.8402800Z         simulation_state,
2025-01-14T13:16:42.8402850Z         opacity_state,
2025-01-14T13:16:42.8402900Z         macro_atom_state,
2025-01-14T13:16:42.8402950Z         plasma,
2025-01-14T13:16:42.8403000Z         no_of_packets,
2025-01-14T13:16:42.8403060Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8403100Z         iteration=0,
2025-01-14T13:16:42.8403160Z     ):
2025-01-14T13:16:42.8403420Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8403500Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8403550Z         else:
2025-01-14T13:16:42.8403600Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8403640Z     
2025-01-14T13:16:42.8403750Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8403830Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8403870Z         )
2025-01-14T13:16:42.8403910Z     
2025-01-14T13:16:42.8404020Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8404110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8404420Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8405590Z         else:
2025-01-14T13:16:42.8405770Z             continuum_state = None
2025-01-14T13:16:42.8405990Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8406250Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8406520Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8406740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8406970Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8407160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8407360Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8407660Z         ).to_numba(
2025-01-14T13:16:42.8407860Z             macro_atom_state,
2025-01-14T13:16:42.8408150Z             self.line_interaction_type,
2025-01-14T13:16:42.8408370Z         )
2025-01-14T13:16:42.8408600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8409190Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8409330Z         ]
2025-01-14T13:16:42.8410000Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8410550Z 
2025-01-14T13:16:42.8411030Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8411310Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range0-packet_out_nu] _
2025-01-14T13:16:42.8411310Z 
2025-01-14T13:16:42.8411860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8412150Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8412150Z 
2025-01-14T13:16:42.8412220Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8412340Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8412420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8412590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8412660Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8412710Z >       sim.run_final()
2025-01-14T13:16:42.8412710Z 
2025-01-14T13:16:42.8412770Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8412860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8412940Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8413040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8413110Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8413230Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8413330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8413330Z 
2025-01-14T13:16:42.8413540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8413850Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8414030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8414250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8414380Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8414480Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8414480Z 
2025-01-14T13:16:42.8414550Z     def initialize_transport_state(
2025-01-14T13:16:42.8414590Z         self,
2025-01-14T13:16:42.8414650Z         simulation_state,
2025-01-14T13:16:42.8414700Z         opacity_state,
2025-01-14T13:16:42.8414750Z         macro_atom_state,
2025-01-14T13:16:42.8414800Z         plasma,
2025-01-14T13:16:42.8414850Z         no_of_packets,
2025-01-14T13:16:42.8414900Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8414950Z         iteration=0,
2025-01-14T13:16:42.8414990Z     ):
2025-01-14T13:16:42.8415090Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8415160Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8415210Z         else:
2025-01-14T13:16:42.8415260Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8415300Z     
2025-01-14T13:16:42.8415510Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8416080Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8416180Z         )
2025-01-14T13:16:42.8416230Z     
2025-01-14T13:16:42.8416350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8416440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8416570Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8416610Z         else:
2025-01-14T13:16:42.8416680Z             continuum_state = None
2025-01-14T13:16:42.8416890Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8416980Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8417050Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8417140Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8417210Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8417280Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8424570Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8424650Z         ).to_numba(
2025-01-14T13:16:42.8424710Z             macro_atom_state,
2025-01-14T13:16:42.8424770Z             self.line_interaction_type,
2025-01-14T13:16:42.8424820Z         )
2025-01-14T13:16:42.8424890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8425120Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8425170Z         ]
2025-01-14T13:16:42.8425420Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8425420Z 
2025-01-14T13:16:42.8425540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8425770Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range1-packet_in_nu] _
2025-01-14T13:16:42.8425770Z 
2025-01-14T13:16:42.8426310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8426700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8426710Z 
2025-01-14T13:16:42.8426780Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8426910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8427330Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8427490Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8427550Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8427610Z >       sim.run_final()
2025-01-14T13:16:42.8427610Z 
2025-01-14T13:16:42.8427670Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8427760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8427830Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8427960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8428020Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8428140Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8428230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8428230Z 
2025-01-14T13:16:42.8428450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8428600Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8428770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8428990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8429110Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8429220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8429220Z 
2025-01-14T13:16:42.8429280Z     def initialize_transport_state(
2025-01-14T13:16:42.8429330Z         self,
2025-01-14T13:16:42.8429380Z         simulation_state,
2025-01-14T13:16:42.8429430Z         opacity_state,
2025-01-14T13:16:42.8429480Z         macro_atom_state,
2025-01-14T13:16:42.8429530Z         plasma,
2025-01-14T13:16:42.8429810Z         no_of_packets,
2025-01-14T13:16:42.8429860Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8429920Z         iteration=0,
2025-01-14T13:16:42.8429960Z     ):
2025-01-14T13:16:42.8430060Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8430120Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8430170Z         else:
2025-01-14T13:16:42.8430220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8430270Z     
2025-01-14T13:16:42.8430370Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8430440Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8430490Z         )
2025-01-14T13:16:42.8430530Z     
2025-01-14T13:16:42.8430630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8430720Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8430840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8430880Z         else:
2025-01-14T13:16:42.8430940Z             continuum_state = None
2025-01-14T13:16:42.8431020Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8431100Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8431170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8431250Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8431320Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8431390Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8431450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8431490Z         ).to_numba(
2025-01-14T13:16:42.8431550Z             macro_atom_state,
2025-01-14T13:16:42.8431610Z             self.line_interaction_type,
2025-01-14T13:16:42.8431650Z         )
2025-01-14T13:16:42.8431720Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8432050Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8432120Z         ]
2025-01-14T13:16:42.8432480Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8432480Z 
2025-01-14T13:16:42.8432610Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8432850Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range2-packet_out_nu] _
2025-01-14T13:16:42.8432860Z 
2025-01-14T13:16:42.8433400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8433700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8433700Z 
2025-01-14T13:16:42.8433770Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8433900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8433980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8434120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8434180Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8434230Z >       sim.run_final()
2025-01-14T13:16:42.8434230Z 
2025-01-14T13:16:42.8434290Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8434380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8434450Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8434560Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8434630Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8434750Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8434840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8434900Z 
2025-01-14T13:16:42.8435120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8435270Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8435450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8435670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8435790Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8435900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8435900Z 
2025-01-14T13:16:42.8435970Z     def initialize_transport_state(
2025-01-14T13:16:42.8436010Z         self,
2025-01-14T13:16:42.8436070Z         simulation_state,
2025-01-14T13:16:42.8436120Z         opacity_state,
2025-01-14T13:16:42.8436170Z         macro_atom_state,
2025-01-14T13:16:42.8436210Z         plasma,
2025-01-14T13:16:42.8436260Z         no_of_packets,
2025-01-14T13:16:42.8436320Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8436370Z         iteration=0,
2025-01-14T13:16:42.8436420Z     ):
2025-01-14T13:16:42.8436520Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8436600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8436640Z         else:
2025-01-14T13:16:42.8436700Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8436740Z     
2025-01-14T13:16:42.8436850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8436910Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8436960Z         )
2025-01-14T13:16:42.8437000Z     
2025-01-14T13:16:42.8437100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8437190Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8437310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8437360Z         else:
2025-01-14T13:16:42.8437470Z             continuum_state = None
2025-01-14T13:16:42.8437550Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8437640Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8437710Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8437790Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8437860Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8437930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8438000Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8438040Z         ).to_numba(
2025-01-14T13:16:42.8438100Z             macro_atom_state,
2025-01-14T13:16:42.8438160Z             self.line_interaction_type,
2025-01-14T13:16:42.8438210Z         )
2025-01-14T13:16:42.8438290Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8438510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8438560Z         ]
2025-01-14T13:16:42.8438810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8438810Z 
2025-01-14T13:16:42.8438920Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8439120Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[None-packet_in_nu] _
2025-01-14T13:16:42.8439130Z 
2025-01-14T13:16:42.8439660Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8439940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8439990Z 
2025-01-14T13:16:42.8440060Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8440190Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8440260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8440400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8440460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8440510Z >       sim.run_final()
2025-01-14T13:16:42.8440510Z 
2025-01-14T13:16:42.8440570Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8440660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8440730Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8440840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8440910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8441050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8441140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8441150Z 
2025-01-14T13:16:42.8441350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8441510Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8441680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8441900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8442020Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8442130Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8442130Z 
2025-01-14T13:16:42.8442200Z     def initialize_transport_state(
2025-01-14T13:16:42.8442240Z         self,
2025-01-14T13:16:42.8442290Z         simulation_state,
2025-01-14T13:16:42.8442340Z         opacity_state,
2025-01-14T13:16:42.8442390Z         macro_atom_state,
2025-01-14T13:16:42.8442440Z         plasma,
2025-01-14T13:16:42.8442540Z         no_of_packets,
2025-01-14T13:16:42.8442600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8442650Z         iteration=0,
2025-01-14T13:16:42.8442690Z     ):
2025-01-14T13:16:42.8442790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8442860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8442900Z         else:
2025-01-14T13:16:42.8442950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8442990Z     
2025-01-14T13:16:42.8443100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8443160Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8443210Z         )
2025-01-14T13:16:42.8443250Z     
2025-01-14T13:16:42.8443350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8443440Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8443570Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8443610Z         else:
2025-01-14T13:16:42.8443670Z             continuum_state = None
2025-01-14T13:16:42.8443740Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8443830Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8443890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8443970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8444050Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8444110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8444180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8444230Z         ).to_numba(
2025-01-14T13:16:42.8444280Z             macro_atom_state,
2025-01-14T13:16:42.8444340Z             self.line_interaction_type,
2025-01-14T13:16:42.8444380Z         )
2025-01-14T13:16:42.8444450Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8444730Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8444770Z         ]
2025-01-14T13:16:42.8445020Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8445020Z 
2025-01-14T13:16:42.8445130Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8445370Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:16:42.8445370Z 
2025-01-14T13:16:42.8445900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8446170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8446180Z 
2025-01-14T13:16:42.8446250Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8446370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8446450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8446590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8446650Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8446700Z >       sim.run_final()
2025-01-14T13:16:42.8446700Z 
2025-01-14T13:16:42.8446760Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8446840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8446910Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8447020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8447090Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8447210Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8447540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8447550Z 
2025-01-14T13:16:42.8448250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8448770Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8449230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8449880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8451770Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8451920Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8451930Z 
2025-01-14T13:16:42.8451990Z     def initialize_transport_state(
2025-01-14T13:16:42.8452040Z         self,
2025-01-14T13:16:42.8452090Z         simulation_state,
2025-01-14T13:16:42.8452150Z         opacity_state,
2025-01-14T13:16:42.8452210Z         macro_atom_state,
2025-01-14T13:16:42.8452260Z         plasma,
2025-01-14T13:16:42.8452310Z         no_of_packets,
2025-01-14T13:16:42.8452370Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8452420Z         iteration=0,
2025-01-14T13:16:42.8452460Z     ):
2025-01-14T13:16:42.8452560Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8452630Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8452690Z         else:
2025-01-14T13:16:42.8452740Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8452780Z     
2025-01-14T13:16:42.8452890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8452970Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8453010Z         )
2025-01-14T13:16:42.8453050Z     
2025-01-14T13:16:42.8453150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8453710Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8453840Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8453890Z         else:
2025-01-14T13:16:42.8453940Z             continuum_state = None
2025-01-14T13:16:42.8454020Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8454110Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8454170Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8454260Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8454330Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8454400Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8454460Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8454510Z         ).to_numba(
2025-01-14T13:16:42.8454560Z             macro_atom_state,
2025-01-14T13:16:42.8454630Z             self.line_interaction_type,
2025-01-14T13:16:42.8454670Z         )
2025-01-14T13:16:42.8454750Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8454970Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8455020Z         ]
2025-01-14T13:16:42.8455270Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8455270Z 
2025-01-14T13:16:42.8455390Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8456140Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:16:42.8456150Z 
2025-01-14T13:16:42.8456720Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8457160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8457160Z 
2025-01-14T13:16:42.8457240Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8457370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8457450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8457600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8457660Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8457710Z >       sim.run_final()
2025-01-14T13:16:42.8457720Z 
2025-01-14T13:16:42.8457780Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8457870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8457950Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8458060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8458120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8458250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8458340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8458350Z 
2025-01-14T13:16:42.8458560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8458720Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8458900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8459120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8459250Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8459360Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8459360Z 
2025-01-14T13:16:42.8459420Z     def initialize_transport_state(
2025-01-14T13:16:42.8459540Z         self,
2025-01-14T13:16:42.8459600Z         simulation_state,
2025-01-14T13:16:42.8459650Z         opacity_state,
2025-01-14T13:16:42.8459700Z         macro_atom_state,
2025-01-14T13:16:42.8459750Z         plasma,
2025-01-14T13:16:42.8459800Z         no_of_packets,
2025-01-14T13:16:42.8459890Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8459940Z         iteration=0,
2025-01-14T13:16:42.8459990Z     ):
2025-01-14T13:16:42.8460080Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8460160Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8460200Z         else:
2025-01-14T13:16:42.8460250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8460300Z     
2025-01-14T13:16:42.8460400Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8460480Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8460520Z         )
2025-01-14T13:16:42.8460560Z     
2025-01-14T13:16:42.8460660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8460760Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8460880Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8460930Z         else:
2025-01-14T13:16:42.8460990Z             continuum_state = None
2025-01-14T13:16:42.8462000Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8462290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8462480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8462700Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8462910Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8463110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8463510Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8463620Z         ).to_numba(
2025-01-14T13:16:42.8463680Z             macro_atom_state,
2025-01-14T13:16:42.8463750Z             self.line_interaction_type,
2025-01-14T13:16:42.8463800Z         )
2025-01-14T13:16:42.8464010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8464240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8464280Z         ]
2025-01-14T13:16:42.8464530Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8464540Z 
2025-01-14T13:16:42.8464660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8464890Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:16:42.8464890Z 
2025-01-14T13:16:42.8465430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8465730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8465730Z 
2025-01-14T13:16:42.8465790Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8465920Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8465990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8466140Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8466480Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8466560Z >       sim.run_final()
2025-01-14T13:16:42.8466570Z 
2025-01-14T13:16:42.8466630Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8466730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8466800Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8466920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8467130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8467250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8467350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8467350Z 
2025-01-14T13:16:42.8467560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8467720Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8467890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8468120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8468250Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8468350Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8468360Z 
2025-01-14T13:16:42.8468420Z     def initialize_transport_state(
2025-01-14T13:16:42.8468470Z         self,
2025-01-14T13:16:42.8468530Z         simulation_state,
2025-01-14T13:16:42.8468580Z         opacity_state,
2025-01-14T13:16:42.8468650Z         macro_atom_state,
2025-01-14T13:16:42.8468690Z         plasma,
2025-01-14T13:16:42.8468740Z         no_of_packets,
2025-01-14T13:16:42.8468800Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8468850Z         iteration=0,
2025-01-14T13:16:42.8468890Z     ):
2025-01-14T13:16:42.8468990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8469060Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8469110Z         else:
2025-01-14T13:16:42.8469170Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8469220Z     
2025-01-14T13:16:42.8469330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8469400Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8469450Z         )
2025-01-14T13:16:42.8469490Z     
2025-01-14T13:16:42.8469680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8469770Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8469900Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8469950Z         else:
2025-01-14T13:16:42.8470010Z             continuum_state = None
2025-01-14T13:16:42.8470080Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8470170Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8470240Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8470330Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8470640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8470910Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8471110Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8471250Z         ).to_numba(
2025-01-14T13:16:42.8471720Z             macro_atom_state,
2025-01-14T13:16:42.8471910Z             self.line_interaction_type,
2025-01-14T13:16:42.8472060Z         )
2025-01-14T13:16:42.8472270Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8472960Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8473100Z         ]
2025-01-14T13:16:42.8473760Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8473770Z 
2025-01-14T13:16:42.8474090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8475870Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-None-packet_in_nu] _
2025-01-14T13:16:42.8475880Z 
2025-01-14T13:16:42.8477980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8478640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8478650Z 
2025-01-14T13:16:42.8478740Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8478900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8479020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8479210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8479290Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8479350Z >       sim.run_final()
2025-01-14T13:16:42.8479350Z 
2025-01-14T13:16:42.8479410Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8479530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8479610Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8479730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8479800Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8479930Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8480040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8480050Z 
2025-01-14T13:16:42.8480340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8480550Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8480810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8481210Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8481660Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8482270Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8482630Z 
2025-01-14T13:16:42.8485050Z     def initialize_transport_state(
2025-01-14T13:16:42.8485270Z         self,
2025-01-14T13:16:42.8485570Z         simulation_state,
2025-01-14T13:16:42.8487110Z         opacity_state,
2025-01-14T13:16:42.8487220Z         macro_atom_state,
2025-01-14T13:16:42.8487300Z         plasma,
2025-01-14T13:16:42.8487360Z         no_of_packets,
2025-01-14T13:16:42.8487440Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8487490Z         iteration=0,
2025-01-14T13:16:42.8487540Z     ):
2025-01-14T13:16:42.8487640Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8487740Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8487810Z         else:
2025-01-14T13:16:42.8487910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8487980Z     
2025-01-14T13:16:42.8488130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8488240Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8488320Z         )
2025-01-14T13:16:42.8488390Z     
2025-01-14T13:16:42.8488500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8488590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8488740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8488800Z         else:
2025-01-14T13:16:42.8489680Z             continuum_state = None
2025-01-14T13:16:42.8489970Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8490250Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8490330Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8490440Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8490530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8490620Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8490720Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8492390Z         ).to_numba(
2025-01-14T13:16:42.8492460Z             macro_atom_state,
2025-01-14T13:16:42.8492530Z             self.line_interaction_type,
2025-01-14T13:16:42.8492570Z         )
2025-01-14T13:16:42.8492670Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8492910Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8492960Z         ]
2025-01-14T13:16:42.8493230Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8493240Z 
2025-01-14T13:16:42.8493360Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8493660Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] _
2025-01-14T13:16:42.8493670Z 
2025-01-14T13:16:42.8494290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8494650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8494660Z 
2025-01-14T13:16:42.8494750Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8494900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8494970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8495120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8495190Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8495240Z >       sim.run_final()
2025-01-14T13:16:42.8495250Z 
2025-01-14T13:16:42.8495310Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8495400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8495480Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8495830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8495910Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8496050Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8496170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8496170Z 
2025-01-14T13:16:42.8496410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8496770Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8497530Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8498400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8498850Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8499260Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8499290Z 
2025-01-14T13:16:42.8499550Z     def initialize_transport_state(
2025-01-14T13:16:42.8499730Z         self,
2025-01-14T13:16:42.8499920Z         simulation_state,
2025-01-14T13:16:42.8500130Z         opacity_state,
2025-01-14T13:16:42.8501490Z         macro_atom_state,
2025-01-14T13:16:42.8501600Z         plasma,
2025-01-14T13:16:42.8501650Z         no_of_packets,
2025-01-14T13:16:42.8501720Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8501780Z         iteration=0,
2025-01-14T13:16:42.8501850Z     ):
2025-01-14T13:16:42.8501990Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8502090Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8502150Z         else:
2025-01-14T13:16:42.8502220Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8502260Z     
2025-01-14T13:16:42.8502410Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8502620Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8502680Z         )
2025-01-14T13:16:42.8502730Z     
2025-01-14T13:16:42.8502840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8502920Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8503060Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8503110Z         else:
2025-01-14T13:16:42.8503180Z             continuum_state = None
2025-01-14T13:16:42.8503310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8503400Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8503470Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8503560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8503640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8503740Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8513220Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8513300Z         ).to_numba(
2025-01-14T13:16:42.8513620Z             macro_atom_state,
2025-01-14T13:16:42.8513990Z             self.line_interaction_type,
2025-01-14T13:16:42.8514060Z         )
2025-01-14T13:16:42.8514140Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8515170Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8515390Z         ]
2025-01-14T13:16:42.8516130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8516150Z 
2025-01-14T13:16:42.8516590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8517260Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] _
2025-01-14T13:16:42.8517280Z 
2025-01-14T13:16:42.8519820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8521000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8521020Z 
2025-01-14T13:16:42.8521250Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8522140Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8522250Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8522430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8522520Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8522580Z >       sim.run_final()
2025-01-14T13:16:42.8522580Z 
2025-01-14T13:16:42.8522630Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8523310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8524040Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8524480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8524750Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8525120Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8525380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8525390Z 
2025-01-14T13:16:42.8526210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8526790Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8527340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8528060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8528810Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8529190Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8529210Z 
2025-01-14T13:16:42.8529450Z     def initialize_transport_state(
2025-01-14T13:16:42.8529920Z         self,
2025-01-14T13:16:42.8530020Z         simulation_state,
2025-01-14T13:16:42.8530070Z         opacity_state,
2025-01-14T13:16:42.8530530Z         macro_atom_state,
2025-01-14T13:16:42.8530620Z         plasma,
2025-01-14T13:16:42.8530670Z         no_of_packets,
2025-01-14T13:16:42.8530730Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8530780Z         iteration=0,
2025-01-14T13:16:42.8530830Z     ):
2025-01-14T13:16:42.8530940Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8531030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8531100Z         else:
2025-01-14T13:16:42.8531190Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8531260Z     
2025-01-14T13:16:42.8531430Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8531530Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8531600Z         )
2025-01-14T13:16:42.8531650Z     
2025-01-14T13:16:42.8531770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8531880Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8532040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8532110Z         else:
2025-01-14T13:16:42.8532200Z             continuum_state = None
2025-01-14T13:16:42.8532310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8532430Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8532530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8533320Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8533640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8533960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8534810Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8535110Z         ).to_numba(
2025-01-14T13:16:42.8535420Z             macro_atom_state,
2025-01-14T13:16:42.8536790Z             self.line_interaction_type,
2025-01-14T13:16:42.8537400Z         )
2025-01-14T13:16:42.8537790Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8539090Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8539420Z         ]
2025-01-14T13:16:42.8540860Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8540880Z 
2025-01-14T13:16:42.8541090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8542770Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] _
2025-01-14T13:16:42.8542820Z 
2025-01-14T13:16:42.8543920Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8544360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8544370Z 
2025-01-14T13:16:42.8544500Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8544710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8544850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8545060Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8545130Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8546150Z >       sim.run_final()
2025-01-14T13:16:42.8546170Z 
2025-01-14T13:16:42.8546550Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8546660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8546750Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8546880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8546950Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8547080Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8547550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8547560Z 
2025-01-14T13:16:42.8547840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8548060Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8548290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8548530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8548680Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8548800Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8548800Z 
2025-01-14T13:16:42.8548870Z     def initialize_transport_state(
2025-01-14T13:16:42.8548920Z         self,
2025-01-14T13:16:42.8548970Z         simulation_state,
2025-01-14T13:16:42.8549030Z         opacity_state,
2025-01-14T13:16:42.8549080Z         macro_atom_state,
2025-01-14T13:16:42.8549130Z         plasma,
2025-01-14T13:16:42.8549180Z         no_of_packets,
2025-01-14T13:16:42.8549250Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8549290Z         iteration=0,
2025-01-14T13:16:42.8549340Z     ):
2025-01-14T13:16:42.8549860Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8551110Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8551190Z         else:
2025-01-14T13:16:42.8551250Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8551300Z     
2025-01-14T13:16:42.8552540Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8552640Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8552690Z         )
2025-01-14T13:16:42.8552740Z     
2025-01-14T13:16:42.8552840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8552930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8553040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8553100Z         else:
2025-01-14T13:16:42.8553150Z             continuum_state = None
2025-01-14T13:16:42.8553230Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8553310Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8553380Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8553460Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8553530Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8553610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8553670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8553720Z         ).to_numba(
2025-01-14T13:16:42.8553770Z             macro_atom_state,
2025-01-14T13:16:42.8553840Z             self.line_interaction_type,
2025-01-14T13:16:42.8553890Z         )
2025-01-14T13:16:42.8553960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8554180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8554230Z         ]
2025-01-14T13:16:42.8554480Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8554480Z 
2025-01-14T13:16:42.8554600Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8554810Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-None-packet_in_nu] _
2025-01-14T13:16:42.8555360Z 
2025-01-14T13:16:42.8555910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8556580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8556610Z 
2025-01-14T13:16:42.8556860Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8557220Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8557450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8557840Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8558040Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8558190Z >       sim.run_final()
2025-01-14T13:16:42.8558230Z 
2025-01-14T13:16:42.8558410Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8558670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8558910Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8559250Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8559470Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8559830Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8560110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8560120Z 
2025-01-14T13:16:42.8560920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8561360Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8561940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8563120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8563470Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8563760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8563760Z 
2025-01-14T13:16:42.8563950Z     def initialize_transport_state(
2025-01-14T13:16:42.8564220Z         self,
2025-01-14T13:16:42.8564350Z         simulation_state,
2025-01-14T13:16:42.8564400Z         opacity_state,
2025-01-14T13:16:42.8564450Z         macro_atom_state,
2025-01-14T13:16:42.8564490Z         plasma,
2025-01-14T13:16:42.8564540Z         no_of_packets,
2025-01-14T13:16:42.8564610Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8564650Z         iteration=0,
2025-01-14T13:16:42.8564700Z     ):
2025-01-14T13:16:42.8564800Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8564870Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8564920Z         else:
2025-01-14T13:16:42.8564980Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8565030Z     
2025-01-14T13:16:42.8565130Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8565200Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8565250Z         )
2025-01-14T13:16:42.8565290Z     
2025-01-14T13:16:42.8565390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8565550Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8565710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8565760Z         else:
2025-01-14T13:16:42.8565810Z             continuum_state = None
2025-01-14T13:16:42.8566830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8566960Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8567080Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8567650Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8567740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8567870Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8567960Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8568010Z         ).to_numba(
2025-01-14T13:16:42.8568090Z             macro_atom_state,
2025-01-14T13:16:42.8568180Z             self.line_interaction_type,
2025-01-14T13:16:42.8568250Z         )
2025-01-14T13:16:42.8568330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8568590Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8568660Z         ]
2025-01-14T13:16:42.8568980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8568980Z 
2025-01-14T13:16:42.8569130Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8569450Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range0-packet_out_nu] _
2025-01-14T13:16:42.8569460Z 
2025-01-14T13:16:42.8570770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8571170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8571190Z 
2025-01-14T13:16:42.8571290Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8571450Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8571580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8571750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8571820Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8571880Z >       sim.run_final()
2025-01-14T13:16:42.8572020Z 
2025-01-14T13:16:42.8572090Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8572190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8572260Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8572370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8572440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8572560Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8572650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8572650Z 
2025-01-14T13:16:42.8572860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8573030Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8573200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8573430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8573560Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8573670Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8573670Z 
2025-01-14T13:16:42.8573730Z     def initialize_transport_state(
2025-01-14T13:16:42.8573770Z         self,
2025-01-14T13:16:42.8573830Z         simulation_state,
2025-01-14T13:16:42.8573880Z         opacity_state,
2025-01-14T13:16:42.8573930Z         macro_atom_state,
2025-01-14T13:16:42.8573970Z         plasma,
2025-01-14T13:16:42.8574020Z         no_of_packets,
2025-01-14T13:16:42.8574080Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8574120Z         iteration=0,
2025-01-14T13:16:42.8574170Z     ):
2025-01-14T13:16:42.8574260Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8574400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8574440Z         else:
2025-01-14T13:16:42.8574500Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8574550Z     
2025-01-14T13:16:42.8574660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8574730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8574780Z         )
2025-01-14T13:16:42.8574820Z     
2025-01-14T13:16:42.8574930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8575020Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8575140Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8575190Z         else:
2025-01-14T13:16:42.8575250Z             continuum_state = None
2025-01-14T13:16:42.8575320Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8575410Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8575480Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8575560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8575640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8575710Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8575900Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8575960Z         ).to_numba(
2025-01-14T13:16:42.8576010Z             macro_atom_state,
2025-01-14T13:16:42.8576070Z             self.line_interaction_type,
2025-01-14T13:16:42.8576120Z         )
2025-01-14T13:16:42.8576190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8576420Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8576460Z         ]
2025-01-14T13:16:42.8576710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8576710Z 
2025-01-14T13:16:42.8576830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8577130Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range1-packet_in_nu] _
2025-01-14T13:16:42.8577140Z 
2025-01-14T13:16:42.8577820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8578150Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8578160Z 
2025-01-14T13:16:42.8578220Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8578340Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8578410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8578550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8578620Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8578670Z >       sim.run_final()
2025-01-14T13:16:42.8578680Z 
2025-01-14T13:16:42.8578730Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8578820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8578890Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8579000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8579070Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8579190Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8579270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8579270Z 
2025-01-14T13:16:42.8579480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8579640Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8579920Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8580140Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8580260Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8580370Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8580370Z 
2025-01-14T13:16:42.8580430Z     def initialize_transport_state(
2025-01-14T13:16:42.8580480Z         self,
2025-01-14T13:16:42.8580530Z         simulation_state,
2025-01-14T13:16:42.8580580Z         opacity_state,
2025-01-14T13:16:42.8580630Z         macro_atom_state,
2025-01-14T13:16:42.8580670Z         plasma,
2025-01-14T13:16:42.8580720Z         no_of_packets,
2025-01-14T13:16:42.8580770Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8580820Z         iteration=0,
2025-01-14T13:16:42.8580860Z     ):
2025-01-14T13:16:42.8580960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8581040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8581080Z         else:
2025-01-14T13:16:42.8581150Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8581450Z     
2025-01-14T13:16:42.8581600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8581700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8581760Z         )
2025-01-14T13:16:42.8581850Z     
2025-01-14T13:16:42.8582000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8582130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8582310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8582400Z         else:
2025-01-14T13:16:42.8582480Z             continuum_state = None
2025-01-14T13:16:42.8582570Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8582650Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8585510Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8585620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8585690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8585760Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8585820Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8585870Z         ).to_numba(
2025-01-14T13:16:42.8585930Z             macro_atom_state,
2025-01-14T13:16:42.8585990Z             self.line_interaction_type,
2025-01-14T13:16:42.8586030Z         )
2025-01-14T13:16:42.8586110Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8586320Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8586370Z         ]
2025-01-14T13:16:42.8586610Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8586620Z 
2025-01-14T13:16:42.8586760Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8587000Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range2-packet_out_nu] _
2025-01-14T13:16:42.8587000Z 
2025-01-14T13:16:42.8587540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8587840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8587840Z 
2025-01-14T13:16:42.8587900Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8588150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8588220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8588620Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8588690Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8588740Z >       sim.run_final()
2025-01-14T13:16:42.8588740Z 
2025-01-14T13:16:42.8588790Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8588880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8588950Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8589050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8589130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8589250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8589330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8589330Z 
2025-01-14T13:16:42.8589540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8589700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8589880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8590090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8590320Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8590450Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8590460Z 
2025-01-14T13:16:42.8590520Z     def initialize_transport_state(
2025-01-14T13:16:42.8590570Z         self,
2025-01-14T13:16:42.8590620Z         simulation_state,
2025-01-14T13:16:42.8590670Z         opacity_state,
2025-01-14T13:16:42.8590730Z         macro_atom_state,
2025-01-14T13:16:42.8590770Z         plasma,
2025-01-14T13:16:42.8590820Z         no_of_packets,
2025-01-14T13:16:42.8590880Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8590920Z         iteration=0,
2025-01-14T13:16:42.8590970Z     ):
2025-01-14T13:16:42.8591170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8591240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8591290Z         else:
2025-01-14T13:16:42.8591340Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8591380Z     
2025-01-14T13:16:42.8591600Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8591670Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8591720Z         )
2025-01-14T13:16:42.8591760Z     
2025-01-14T13:16:42.8591860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8591940Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8592070Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8592110Z         else:
2025-01-14T13:16:42.8592170Z             continuum_state = None
2025-01-14T13:16:42.8592250Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8592330Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8592400Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8592480Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8592550Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8592620Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8592690Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8592730Z         ).to_numba(
2025-01-14T13:16:42.8592790Z             macro_atom_state,
2025-01-14T13:16:42.8592850Z             self.line_interaction_type,
2025-01-14T13:16:42.8592890Z         )
2025-01-14T13:16:42.8592960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8593180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8593220Z         ]
2025-01-14T13:16:42.8593470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8593550Z 
2025-01-14T13:16:42.8593670Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8593870Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-None-packet_in_nu] _
2025-01-14T13:16:42.8593870Z 
2025-01-14T13:16:42.8594410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8594690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8594700Z 
2025-01-14T13:16:42.8594760Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8594880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8594960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8595380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8595460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8595520Z >       sim.run_final()
2025-01-14T13:16:42.8595520Z 
2025-01-14T13:16:42.8595570Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8595660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8595730Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8595850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8595920Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8596040Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8596120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8596130Z 
2025-01-14T13:16:42.8596330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8596640Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8596820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8598540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8598730Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8598900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8598910Z 
2025-01-14T13:16:42.8598990Z     def initialize_transport_state(
2025-01-14T13:16:42.8599050Z         self,
2025-01-14T13:16:42.8599120Z         simulation_state,
2025-01-14T13:16:42.8599170Z         opacity_state,
2025-01-14T13:16:42.8599230Z         macro_atom_state,
2025-01-14T13:16:42.8600610Z         plasma,
2025-01-14T13:16:42.8600680Z         no_of_packets,
2025-01-14T13:16:42.8600730Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8600780Z         iteration=0,
2025-01-14T13:16:42.8600830Z     ):
2025-01-14T13:16:42.8600920Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8600990Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8601040Z         else:
2025-01-14T13:16:42.8601100Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8601140Z     
2025-01-14T13:16:42.8601240Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8601320Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8601360Z         )
2025-01-14T13:16:42.8601410Z     
2025-01-14T13:16:42.8601500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8601590Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8601710Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8601760Z         else:
2025-01-14T13:16:42.8601820Z             continuum_state = None
2025-01-14T13:16:42.8602000Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8602100Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8602190Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8602310Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8602400Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8602510Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8602610Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8602690Z         ).to_numba(
2025-01-14T13:16:42.8602780Z             macro_atom_state,
2025-01-14T13:16:42.8602880Z             self.line_interaction_type,
2025-01-14T13:16:42.8602950Z         )
2025-01-14T13:16:42.8603060Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8603350Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8603430Z         ]
2025-01-14T13:16:42.8603770Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8603780Z 
2025-01-14T13:16:42.8603930Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8604200Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection0] _
2025-01-14T13:16:42.8604220Z 
2025-01-14T13:16:42.8604860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8605220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8605230Z 
2025-01-14T13:16:42.8605350Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8605520Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8605730Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8605880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8606460Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8606830Z >       sim.run_final()
2025-01-14T13:16:42.8606850Z 
2025-01-14T13:16:42.8607150Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8607500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8607850Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8608270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8608550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8608970Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8609320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8609330Z 
2025-01-14T13:16:42.8610080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8611060Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8611710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8612380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8612810Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8613210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8613230Z 
2025-01-14T13:16:42.8613480Z     def initialize_transport_state(
2025-01-14T13:16:42.8613780Z         self,
2025-01-14T13:16:42.8613870Z         simulation_state,
2025-01-14T13:16:42.8613930Z         opacity_state,
2025-01-14T13:16:42.8613980Z         macro_atom_state,
2025-01-14T13:16:42.8614040Z         plasma,
2025-01-14T13:16:42.8614090Z         no_of_packets,
2025-01-14T13:16:42.8614400Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8614460Z         iteration=0,
2025-01-14T13:16:42.8614510Z     ):
2025-01-14T13:16:42.8614600Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8614680Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8614720Z         else:
2025-01-14T13:16:42.8614780Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8614830Z     
2025-01-14T13:16:42.8614930Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8615010Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8615050Z         )
2025-01-14T13:16:42.8615100Z     
2025-01-14T13:16:42.8615200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8615300Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8615430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8615470Z         else:
2025-01-14T13:16:42.8615530Z             continuum_state = None
2025-01-14T13:16:42.8615630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8615710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8615780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8615860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8616060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8616140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8636430Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8636950Z         ).to_numba(
2025-01-14T13:16:42.8637130Z             macro_atom_state,
2025-01-14T13:16:42.8637340Z             self.line_interaction_type,
2025-01-14T13:16:42.8637520Z         )
2025-01-14T13:16:42.8637810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8638510Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8638760Z         ]
2025-01-14T13:16:42.8640790Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8640810Z 
2025-01-14T13:16:42.8641210Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8641870Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-0] _
2025-01-14T13:16:42.8641910Z 
2025-01-14T13:16:42.8644300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8644660Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8644660Z 
2025-01-14T13:16:42.8644730Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8648890Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8649380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8649550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8649610Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8649680Z >       sim.run_final()
2025-01-14T13:16:42.8649690Z 
2025-01-14T13:16:42.8649750Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8649840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8649920Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8650050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8650130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8650280Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8650380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8651050Z 
2025-01-14T13:16:42.8653000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8653560Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8654110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8654790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8655220Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8655580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8655600Z 
2025-01-14T13:16:42.8655850Z     def initialize_transport_state(
2025-01-14T13:16:42.8656310Z         self,
2025-01-14T13:16:42.8656560Z         simulation_state,
2025-01-14T13:16:42.8656770Z         opacity_state,
2025-01-14T13:16:42.8656960Z         macro_atom_state,
2025-01-14T13:16:42.8657180Z         plasma,
2025-01-14T13:16:42.8657400Z         no_of_packets,
2025-01-14T13:16:42.8657590Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8657810Z         iteration=0,
2025-01-14T13:16:42.8658010Z     ):
2025-01-14T13:16:42.8658320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8658560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8658750Z         else:
2025-01-14T13:16:42.8658970Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8659110Z     
2025-01-14T13:16:42.8659480Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8659760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8659980Z         )
2025-01-14T13:16:42.8660150Z     
2025-01-14T13:16:42.8660460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8660720Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8661100Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8661310Z         else:
2025-01-14T13:16:42.8662170Z             continuum_state = None
2025-01-14T13:16:42.8662470Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8663290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8663610Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8663920Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8664230Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8664570Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8664840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8665050Z         ).to_numba(
2025-01-14T13:16:42.8665300Z             macro_atom_state,
2025-01-14T13:16:42.8665490Z             self.line_interaction_type,
2025-01-14T13:16:42.8665630Z         )
2025-01-14T13:16:42.8665920Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8666640Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8666810Z         ]
2025-01-14T13:16:42.8667540Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8667550Z 
2025-01-14T13:16:42.8667880Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8668440Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-1] _
2025-01-14T13:16:42.8668450Z 
2025-01-14T13:16:42.8670040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8670890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8670900Z 
2025-01-14T13:16:42.8671660Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8672030Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8672290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8672700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8672890Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8673060Z >       sim.run_final()
2025-01-14T13:16:42.8673070Z 
2025-01-14T13:16:42.8673240Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8673490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8673740Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8674130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8674350Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8674710Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8674960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8674990Z 
2025-01-14T13:16:42.8675640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8676130Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8676650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8677270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8677670Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8678030Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8678060Z 
2025-01-14T13:16:42.8678270Z     def initialize_transport_state(
2025-01-14T13:16:42.8678420Z         self,
2025-01-14T13:16:42.8678570Z         simulation_state,
2025-01-14T13:16:42.8678730Z         opacity_state,
2025-01-14T13:16:42.8678910Z         macro_atom_state,
2025-01-14T13:16:42.8679050Z         plasma,
2025-01-14T13:16:42.8679560Z         no_of_packets,
2025-01-14T13:16:42.8679750Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8679900Z         iteration=0,
2025-01-14T13:16:42.8680040Z     ):
2025-01-14T13:16:42.8680320Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8680520Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8680660Z         else:
2025-01-14T13:16:42.8680830Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8680970Z     
2025-01-14T13:16:42.8681260Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8681470Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8681610Z         )
2025-01-14T13:16:42.8681760Z     
2025-01-14T13:16:42.8682040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8682290Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8682630Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8682790Z         else:
2025-01-14T13:16:42.8682970Z             continuum_state = None
2025-01-14T13:16:42.8683180Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8683420Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8683610Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8683850Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8684060Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8684270Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8684470Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8684620Z         ).to_numba(
2025-01-14T13:16:42.8684780Z             macro_atom_state,
2025-01-14T13:16:42.8684980Z             self.line_interaction_type,
2025-01-14T13:16:42.8685120Z         )
2025-01-14T13:16:42.8685350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8686490Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8686640Z         ]
2025-01-14T13:16:42.8687320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8687330Z 
2025-01-14T13:16:42.8687650Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8688300Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection0] _
2025-01-14T13:16:42.8688310Z 
2025-01-14T13:16:42.8689790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8690560Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8690580Z 
2025-01-14T13:16:42.8690770Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8691100Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8691320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8691690Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8691880Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8692040Z >       sim.run_final()
2025-01-14T13:16:42.8692050Z 
2025-01-14T13:16:42.8692220Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8692570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8692820Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8693120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8693330Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8693660Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8694330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8694340Z 
2025-01-14T13:16:42.8694920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8695340Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8697460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8697740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8697870Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8697980Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8697980Z 
2025-01-14T13:16:42.8698040Z     def initialize_transport_state(
2025-01-14T13:16:42.8698100Z         self,
2025-01-14T13:16:42.8698150Z         simulation_state,
2025-01-14T13:16:42.8698220Z         opacity_state,
2025-01-14T13:16:42.8698270Z         macro_atom_state,
2025-01-14T13:16:42.8698320Z         plasma,
2025-01-14T13:16:42.8698370Z         no_of_packets,
2025-01-14T13:16:42.8698430Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8698470Z         iteration=0,
2025-01-14T13:16:42.8698520Z     ):
2025-01-14T13:16:42.8698610Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8698690Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8698730Z         else:
2025-01-14T13:16:42.8698790Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8698830Z     
2025-01-14T13:16:42.8698940Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8699010Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8699050Z         )
2025-01-14T13:16:42.8699090Z     
2025-01-14T13:16:42.8699190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8699280Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8699650Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8699700Z         else:
2025-01-14T13:16:42.8699750Z             continuum_state = None
2025-01-14T13:16:42.8699830Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8699910Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8699980Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8700060Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8700130Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8700200Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8700260Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8700310Z         ).to_numba(
2025-01-14T13:16:42.8700360Z             macro_atom_state,
2025-01-14T13:16:42.8700430Z             self.line_interaction_type,
2025-01-14T13:16:42.8700470Z         )
2025-01-14T13:16:42.8700550Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8700780Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8700820Z         ]
2025-01-14T13:16:42.8701070Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8701070Z 
2025-01-14T13:16:42.8701190Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8701390Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-0] _
2025-01-14T13:16:42.8701390Z 
2025-01-14T13:16:42.8701940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8702220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8702520Z 
2025-01-14T13:16:42.8702590Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8702720Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8702790Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8702940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8703000Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8703050Z >       sim.run_final()
2025-01-14T13:16:42.8703050Z 
2025-01-14T13:16:42.8703110Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8703200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8703270Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8703380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8703450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8703570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8703670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8703670Z 
2025-01-14T13:16:42.8703880Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8704050Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8704220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8704450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8704570Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8704680Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8704680Z 
2025-01-14T13:16:42.8704750Z     def initialize_transport_state(
2025-01-14T13:16:42.8704790Z         self,
2025-01-14T13:16:42.8705090Z         simulation_state,
2025-01-14T13:16:42.8705140Z         opacity_state,
2025-01-14T13:16:42.8705200Z         macro_atom_state,
2025-01-14T13:16:42.8705240Z         plasma,
2025-01-14T13:16:42.8705300Z         no_of_packets,
2025-01-14T13:16:42.8705360Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8705510Z         iteration=0,
2025-01-14T13:16:42.8705580Z     ):
2025-01-14T13:16:42.8705690Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8705770Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8705820Z         else:
2025-01-14T13:16:42.8705870Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8705920Z     
2025-01-14T13:16:42.8706030Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8706100Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8706140Z         )
2025-01-14T13:16:42.8706190Z     
2025-01-14T13:16:42.8706290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8706380Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8706510Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8706560Z         else:
2025-01-14T13:16:42.8706620Z             continuum_state = None
2025-01-14T13:16:42.8706690Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8706780Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8706840Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8706930Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8707000Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8707070Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8707140Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8707190Z         ).to_numba(
2025-01-14T13:16:42.8707240Z             macro_atom_state,
2025-01-14T13:16:42.8707300Z             self.line_interaction_type,
2025-01-14T13:16:42.8707350Z         )
2025-01-14T13:16:42.8707530Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8707770Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8707920Z         ]
2025-01-14T13:16:42.8708200Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8708200Z 
2025-01-14T13:16:42.8708320Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8708530Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-1] _
2025-01-14T13:16:42.8708530Z 
2025-01-14T13:16:42.8709080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8709370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8709370Z 
2025-01-14T13:16:42.8709440Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8709570Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8709640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8710200Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8710280Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8710330Z >       sim.run_final()
2025-01-14T13:16:42.8710330Z 
2025-01-14T13:16:42.8710390Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8710480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8710550Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8710670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8710820Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8710950Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8711040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8711040Z 
2025-01-14T13:16:42.8711260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8711420Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8711590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8711810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8711930Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8712040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8712040Z 
2025-01-14T13:16:42.8712100Z     def initialize_transport_state(
2025-01-14T13:16:42.8712150Z         self,
2025-01-14T13:16:42.8712210Z         simulation_state,
2025-01-14T13:16:42.8712260Z         opacity_state,
2025-01-14T13:16:42.8712310Z         macro_atom_state,
2025-01-14T13:16:42.8712360Z         plasma,
2025-01-14T13:16:42.8712410Z         no_of_packets,
2025-01-14T13:16:42.8712470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8712520Z         iteration=0,
2025-01-14T13:16:42.8712560Z     ):
2025-01-14T13:16:42.8712660Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8712730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8712780Z         else:
2025-01-14T13:16:42.8712830Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8712870Z     
2025-01-14T13:16:42.8712980Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8713050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8713110Z         )
2025-01-14T13:16:42.8713150Z     
2025-01-14T13:16:42.8713260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8713410Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8713530Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8713580Z         else:
2025-01-14T13:16:42.8713640Z             continuum_state = None
2025-01-14T13:16:42.8713720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8713800Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8713870Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8713950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8714030Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8714100Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8714170Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8714210Z         ).to_numba(
2025-01-14T13:16:42.8714260Z             macro_atom_state,
2025-01-14T13:16:42.8714330Z             self.line_interaction_type,
2025-01-14T13:16:42.8714380Z         )
2025-01-14T13:16:42.8714460Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8714680Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8714720Z         ]
2025-01-14T13:16:42.8714970Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8714970Z 
2025-01-14T13:16:42.8715080Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8715290Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-2] _
2025-01-14T13:16:42.8715290Z 
2025-01-14T13:16:42.8715840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8716180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8716180Z 
2025-01-14T13:16:42.8716250Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8716370Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8716450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8716580Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8716650Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8716700Z >       sim.run_final()
2025-01-14T13:16:42.8716700Z 
2025-01-14T13:16:42.8716760Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8716850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8716920Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8717030Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8717100Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8717220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8717310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8717310Z 
2025-01-14T13:16:42.8717520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8717670Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8717850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8718070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8718190Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8718290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8718300Z 
2025-01-14T13:16:42.8718370Z     def initialize_transport_state(
2025-01-14T13:16:42.8718420Z         self,
2025-01-14T13:16:42.8718540Z         simulation_state,
2025-01-14T13:16:42.8718590Z         opacity_state,
2025-01-14T13:16:42.8718640Z         macro_atom_state,
2025-01-14T13:16:42.8718690Z         plasma,
2025-01-14T13:16:42.8718730Z         no_of_packets,
2025-01-14T13:16:42.8718790Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8718840Z         iteration=0,
2025-01-14T13:16:42.8718880Z     ):
2025-01-14T13:16:42.8718970Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8719040Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8719080Z         else:
2025-01-14T13:16:42.8719140Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8719180Z     
2025-01-14T13:16:42.8719280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8719370Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8719490Z         )
2025-01-14T13:16:42.8719540Z     
2025-01-14T13:16:42.8719640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8719730Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8719850Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8719900Z         else:
2025-01-14T13:16:42.8719960Z             continuum_state = None
2025-01-14T13:16:42.8720040Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8720120Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8720190Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8720270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8720350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8720420Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8720490Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8720530Z         ).to_numba(
2025-01-14T13:16:42.8720690Z             macro_atom_state,
2025-01-14T13:16:42.8720750Z             self.line_interaction_type,
2025-01-14T13:16:42.8720800Z         )
2025-01-14T13:16:42.8720880Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8721100Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8721150Z         ]
2025-01-14T13:16:42.8721390Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8721390Z 
2025-01-14T13:16:42.8721510Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8721700Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection1] _
2025-01-14T13:16:42.8721700Z 
2025-01-14T13:16:42.8722230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8722520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8722530Z 
2025-01-14T13:16:42.8722590Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8722710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8722780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8722920Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8722980Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8723030Z >       sim.run_final()
2025-01-14T13:16:42.8723040Z 
2025-01-14T13:16:42.8723090Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8723180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8723250Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8723360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8723730Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8723910Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8724000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8724000Z 
2025-01-14T13:16:42.8724210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8724380Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8724550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8724770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8724890Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8725000Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8725000Z 
2025-01-14T13:16:42.8725070Z     def initialize_transport_state(
2025-01-14T13:16:42.8725110Z         self,
2025-01-14T13:16:42.8725170Z         simulation_state,
2025-01-14T13:16:42.8725210Z         opacity_state,
2025-01-14T13:16:42.8725260Z         macro_atom_state,
2025-01-14T13:16:42.8725310Z         plasma,
2025-01-14T13:16:42.8725360Z         no_of_packets,
2025-01-14T13:16:42.8725410Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8725460Z         iteration=0,
2025-01-14T13:16:42.8725500Z     ):
2025-01-14T13:16:42.8725590Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8725660Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8725710Z         else:
2025-01-14T13:16:42.8725760Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8725810Z     
2025-01-14T13:16:42.8725910Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8725980Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8726260Z         )
2025-01-14T13:16:42.8726300Z     
2025-01-14T13:16:42.8726410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8726490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8726620Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8726660Z         else:
2025-01-14T13:16:42.8726720Z             continuum_state = None
2025-01-14T13:16:42.8726790Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8726880Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8726940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8727030Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8727100Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8727160Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8727230Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8727280Z         ).to_numba(
2025-01-14T13:16:42.8727340Z             macro_atom_state,
2025-01-14T13:16:42.8727400Z             self.line_interaction_type,
2025-01-14T13:16:42.8727450Z         )
2025-01-14T13:16:42.8727520Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8727740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8727790Z         ]
2025-01-14T13:16:42.8728030Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8728040Z 
2025-01-14T13:16:42.8728140Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8728360Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-0] _
2025-01-14T13:16:42.8728360Z 
2025-01-14T13:16:42.8728950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8729240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8729240Z 
2025-01-14T13:16:42.8729300Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8729420Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8729500Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8729640Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8729700Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8729740Z >       sim.run_final()
2025-01-14T13:16:42.8729750Z 
2025-01-14T13:16:42.8729800Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8729890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8729970Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8730080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8730150Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8730270Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8730350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8730350Z 
2025-01-14T13:16:42.8730570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8730730Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8730900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8731130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8731250Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8731410Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8731410Z 
2025-01-14T13:16:42.8731480Z     def initialize_transport_state(
2025-01-14T13:16:42.8731520Z         self,
2025-01-14T13:16:42.8731580Z         simulation_state,
2025-01-14T13:16:42.8732090Z         opacity_state,
2025-01-14T13:16:42.8732190Z         macro_atom_state,
2025-01-14T13:16:42.8732240Z         plasma,
2025-01-14T13:16:42.8732290Z         no_of_packets,
2025-01-14T13:16:42.8732350Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8732390Z         iteration=0,
2025-01-14T13:16:42.8732440Z     ):
2025-01-14T13:16:42.8732540Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8732610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8732650Z         else:
2025-01-14T13:16:42.8732710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8732750Z     
2025-01-14T13:16:42.8732860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8732940Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8732980Z         )
2025-01-14T13:16:42.8733030Z     
2025-01-14T13:16:42.8733130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8733230Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8733350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8733390Z         else:
2025-01-14T13:16:42.8733450Z             continuum_state = None
2025-01-14T13:16:42.8733520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8733610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8733670Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8733750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8733820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8733900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8738980Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8739050Z         ).to_numba(
2025-01-14T13:16:42.8739440Z             macro_atom_state,
2025-01-14T13:16:42.8739510Z             self.line_interaction_type,
2025-01-14T13:16:42.8739560Z         )
2025-01-14T13:16:42.8739640Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8739860Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8739910Z         ]
2025-01-14T13:16:42.8740160Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8740160Z 
2025-01-14T13:16:42.8740270Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8740480Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-1] _
2025-01-14T13:16:42.8740480Z 
2025-01-14T13:16:42.8741030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8741320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8741320Z 
2025-01-14T13:16:42.8741380Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8741510Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8741580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8741720Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8741790Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8741830Z >       sim.run_final()
2025-01-14T13:16:42.8741840Z 
2025-01-14T13:16:42.8741890Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8741980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8742170Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8742290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8742360Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8742520Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8742610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8742620Z 
2025-01-14T13:16:42.8742830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8742980Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8743160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8743380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8743500Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8743610Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8743610Z 
2025-01-14T13:16:42.8743680Z     def initialize_transport_state(
2025-01-14T13:16:42.8743720Z         self,
2025-01-14T13:16:42.8743780Z         simulation_state,
2025-01-14T13:16:42.8743830Z         opacity_state,
2025-01-14T13:16:42.8743880Z         macro_atom_state,
2025-01-14T13:16:42.8743920Z         plasma,
2025-01-14T13:16:42.8743970Z         no_of_packets,
2025-01-14T13:16:42.8744030Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8744070Z         iteration=0,
2025-01-14T13:16:42.8744110Z     ):
2025-01-14T13:16:42.8744210Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8744280Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8744320Z         else:
2025-01-14T13:16:42.8744380Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8744420Z     
2025-01-14T13:16:42.8744520Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8744660Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8744710Z         )
2025-01-14T13:16:42.8744750Z     
2025-01-14T13:16:42.8744860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8744940Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8745060Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8745110Z         else:
2025-01-14T13:16:42.8745160Z             continuum_state = None
2025-01-14T13:16:42.8745240Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8745320Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8745390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8745470Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8745540Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8745610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8745680Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8745720Z         ).to_numba(
2025-01-14T13:16:42.8745790Z             macro_atom_state,
2025-01-14T13:16:42.8745840Z             self.line_interaction_type,
2025-01-14T13:16:42.8745890Z         )
2025-01-14T13:16:42.8745960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8746180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8746220Z         ]
2025-01-14T13:16:42.8746470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8746470Z 
2025-01-14T13:16:42.8746580Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8746810Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection1] _
2025-01-14T13:16:42.8746820Z 
2025-01-14T13:16:42.8747410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8747690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8747690Z 
2025-01-14T13:16:42.8747760Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8747880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8747950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8748100Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8748160Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8748210Z >       sim.run_final()
2025-01-14T13:16:42.8748210Z 
2025-01-14T13:16:42.8748270Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8748360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8748430Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8748540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8748610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8748720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8748810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8748810Z 
2025-01-14T13:16:42.8749020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8749180Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8749350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8749570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8749930Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8750060Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8750060Z 
2025-01-14T13:16:42.8750120Z     def initialize_transport_state(
2025-01-14T13:16:42.8750170Z         self,
2025-01-14T13:16:42.8750220Z         simulation_state,
2025-01-14T13:16:42.8750270Z         opacity_state,
2025-01-14T13:16:42.8750320Z         macro_atom_state,
2025-01-14T13:16:42.8750370Z         plasma,
2025-01-14T13:16:42.8750420Z         no_of_packets,
2025-01-14T13:16:42.8750470Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8750520Z         iteration=0,
2025-01-14T13:16:42.8750560Z     ):
2025-01-14T13:16:42.8750650Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8750720Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8750770Z         else:
2025-01-14T13:16:42.8750820Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8750870Z     
2025-01-14T13:16:42.8750970Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8751050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8751090Z         )
2025-01-14T13:16:42.8751130Z     
2025-01-14T13:16:42.8751230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8751320Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8751440Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8751480Z         else:
2025-01-14T13:16:42.8751540Z             continuum_state = None
2025-01-14T13:16:42.8751610Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8751690Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8751760Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8751840Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8751910Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8752220Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8752290Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8752340Z         ).to_numba(
2025-01-14T13:16:42.8752390Z             macro_atom_state,
2025-01-14T13:16:42.8752450Z             self.line_interaction_type,
2025-01-14T13:16:42.8752500Z         )
2025-01-14T13:16:42.8752570Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8752790Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8752840Z         ]
2025-01-14T13:16:42.8753090Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8753090Z 
2025-01-14T13:16:42.8753640Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8753910Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-0] _
2025-01-14T13:16:42.8753930Z 
2025-01-14T13:16:42.8754500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8754780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8754780Z 
2025-01-14T13:16:42.8754850Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8754980Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8755060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8755200Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8755260Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8755310Z >       sim.run_final()
2025-01-14T13:16:42.8755320Z 
2025-01-14T13:16:42.8755380Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8755720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8755800Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8755910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8755980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8756110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8756190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8756190Z 
2025-01-14T13:16:42.8756410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8756560Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8756740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8756950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8757080Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8757190Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8757200Z 
2025-01-14T13:16:42.8757260Z     def initialize_transport_state(
2025-01-14T13:16:42.8757310Z         self,
2025-01-14T13:16:42.8757360Z         simulation_state,
2025-01-14T13:16:42.8757410Z         opacity_state,
2025-01-14T13:16:42.8757460Z         macro_atom_state,
2025-01-14T13:16:42.8757510Z         plasma,
2025-01-14T13:16:42.8757560Z         no_of_packets,
2025-01-14T13:16:42.8757620Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8757670Z         iteration=0,
2025-01-14T13:16:42.8757710Z     ):
2025-01-14T13:16:42.8757810Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8757890Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8757940Z         else:
2025-01-14T13:16:42.8758660Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8758740Z     
2025-01-14T13:16:42.8758860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8758930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8758980Z         )
2025-01-14T13:16:42.8759020Z     
2025-01-14T13:16:42.8759120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8759210Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8759330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8759380Z         else:
2025-01-14T13:16:42.8759440Z             continuum_state = None
2025-01-14T13:16:42.8759510Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8759590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8759660Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8759740Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8759820Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8759890Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8759950Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8760000Z         ).to_numba(
2025-01-14T13:16:42.8760060Z             macro_atom_state,
2025-01-14T13:16:42.8760130Z             self.line_interaction_type,
2025-01-14T13:16:42.8760170Z         )
2025-01-14T13:16:42.8760250Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8760470Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8760520Z         ]
2025-01-14T13:16:42.8760760Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8760770Z 
2025-01-14T13:16:42.8760880Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8761090Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-1] _
2025-01-14T13:16:42.8761100Z 
2025-01-14T13:16:42.8761890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8762190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8762200Z 
2025-01-14T13:16:42.8762260Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8762390Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8788350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8788500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8788570Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8788630Z >       sim.run_final()
2025-01-14T13:16:42.8788630Z 
2025-01-14T13:16:42.8788700Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8788800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8788870Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8788990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8789060Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8789180Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8789270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8789270Z 
2025-01-14T13:16:42.8789480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8789740Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8789910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8790290Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8790420Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8790530Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8790530Z 
2025-01-14T13:16:42.8790600Z     def initialize_transport_state(
2025-01-14T13:16:42.8790640Z         self,
2025-01-14T13:16:42.8790700Z         simulation_state,
2025-01-14T13:16:42.8790850Z         opacity_state,
2025-01-14T13:16:42.8790930Z         macro_atom_state,
2025-01-14T13:16:42.8790980Z         plasma,
2025-01-14T13:16:42.8791030Z         no_of_packets,
2025-01-14T13:16:42.8791090Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8791140Z         iteration=0,
2025-01-14T13:16:42.8791190Z     ):
2025-01-14T13:16:42.8791290Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8791360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8791400Z         else:
2025-01-14T13:16:42.8791470Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8791510Z     
2025-01-14T13:16:42.8791630Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8791700Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8791750Z         )
2025-01-14T13:16:42.8791790Z     
2025-01-14T13:16:42.8791890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8791980Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8792110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8792160Z         else:
2025-01-14T13:16:42.8792220Z             continuum_state = None
2025-01-14T13:16:42.8792290Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8792380Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8792450Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8792530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8792770Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8792840Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8792910Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8792950Z         ).to_numba(
2025-01-14T13:16:42.8793000Z             macro_atom_state,
2025-01-14T13:16:42.8793060Z             self.line_interaction_type,
2025-01-14T13:16:42.8793210Z         )
2025-01-14T13:16:42.8793320Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8793540Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8793580Z         ]
2025-01-14T13:16:42.8794210Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8794210Z 
2025-01-14T13:16:42.8794330Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8794530Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-2] _
2025-01-14T13:16:42.8794530Z 
2025-01-14T13:16:42.8795070Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8795350Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8795350Z 
2025-01-14T13:16:42.8795420Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8795540Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8795700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8795880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8795950Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8796070Z >       sim.run_final()
2025-01-14T13:16:42.8796080Z 
2025-01-14T13:16:42.8796140Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8796230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8796300Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8796420Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8796480Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8796610Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8796700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8796700Z 
2025-01-14T13:16:42.8796910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8797080Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8797250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8797480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8797600Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8797710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8797710Z 
2025-01-14T13:16:42.8797770Z     def initialize_transport_state(
2025-01-14T13:16:42.8797820Z         self,
2025-01-14T13:16:42.8797880Z         simulation_state,
2025-01-14T13:16:42.8797930Z         opacity_state,
2025-01-14T13:16:42.8797980Z         macro_atom_state,
2025-01-14T13:16:42.8798030Z         plasma,
2025-01-14T13:16:42.8798080Z         no_of_packets,
2025-01-14T13:16:42.8798130Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8798190Z         iteration=0,
2025-01-14T13:16:42.8798230Z     ):
2025-01-14T13:16:42.8798330Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8798400Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8798450Z         else:
2025-01-14T13:16:42.8798710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8798770Z     
2025-01-14T13:16:42.8798870Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8798950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8798990Z         )
2025-01-14T13:16:42.8799030Z     
2025-01-14T13:16:42.8799130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8799220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8799340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8799390Z         else:
2025-01-14T13:16:42.8799560Z             continuum_state = None
2025-01-14T13:16:42.8799630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8799720Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8799780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8799880Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8799950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8800020Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8800080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8800130Z         ).to_numba(
2025-01-14T13:16:42.8800180Z             macro_atom_state,
2025-01-14T13:16:42.8800250Z             self.line_interaction_type,
2025-01-14T13:16:42.8800290Z         )
2025-01-14T13:16:42.8800370Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8800590Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8800630Z         ]
2025-01-14T13:16:42.8800880Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8800880Z 
2025-01-14T13:16:42.8801100Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8801260Z ___ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[None] ____
2025-01-14T13:16:42.8801270Z 
2025-01-14T13:16:42.8801800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8802090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8802090Z 
2025-01-14T13:16:42.8802160Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8802280Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8802350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8802490Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8802560Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8802730Z >       sim.run_final()
2025-01-14T13:16:42.8802740Z 
2025-01-14T13:16:42.8802820Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8802920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8802990Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8803100Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8803170Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8803290Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8803380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8803380Z 
2025-01-14T13:16:42.8803590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8803750Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8803930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8804290Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8804430Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8804540Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8804540Z 
2025-01-14T13:16:42.8804600Z     def initialize_transport_state(
2025-01-14T13:16:42.8804650Z         self,
2025-01-14T13:16:42.8804700Z         simulation_state,
2025-01-14T13:16:42.8804750Z         opacity_state,
2025-01-14T13:16:42.8804800Z         macro_atom_state,
2025-01-14T13:16:42.8804850Z         plasma,
2025-01-14T13:16:42.8805150Z         no_of_packets,
2025-01-14T13:16:42.8805210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8805260Z         iteration=0,
2025-01-14T13:16:42.8805300Z     ):
2025-01-14T13:16:42.8805400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8805470Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8805510Z         else:
2025-01-14T13:16:42.8805570Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8805610Z     
2025-01-14T13:16:42.8805720Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8805800Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8805840Z         )
2025-01-14T13:16:42.8805880Z     
2025-01-14T13:16:42.8805980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8806070Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8806180Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8806230Z         else:
2025-01-14T13:16:42.8806290Z             continuum_state = None
2025-01-14T13:16:42.8806370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8806450Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8806560Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8806640Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8806710Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8806780Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8806850Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8806890Z         ).to_numba(
2025-01-14T13:16:42.8806950Z             macro_atom_state,
2025-01-14T13:16:42.8807010Z             self.line_interaction_type,
2025-01-14T13:16:42.8807050Z         )
2025-01-14T13:16:42.8807130Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8808460Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8808820Z         ]
2025-01-14T13:16:42.8809530Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8809550Z 
2025-01-14T13:16:42.8809870Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8810320Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-0] __
2025-01-14T13:16:42.8810330Z 
2025-01-14T13:16:42.8811930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8812490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8812510Z 
2025-01-14T13:16:42.8812590Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8812730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8812810Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8812960Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8813180Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8813240Z >       sim.run_final()
2025-01-14T13:16:42.8813240Z 
2025-01-14T13:16:42.8813300Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8813390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8813460Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8813570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8813640Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8813760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8813850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8813960Z 
2025-01-14T13:16:42.8814180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8814340Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8814520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8814740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8814860Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8814960Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8814970Z 
2025-01-14T13:16:42.8815030Z     def initialize_transport_state(
2025-01-14T13:16:42.8815080Z         self,
2025-01-14T13:16:42.8815140Z         simulation_state,
2025-01-14T13:16:42.8815180Z         opacity_state,
2025-01-14T13:16:42.8815240Z         macro_atom_state,
2025-01-14T13:16:42.8815290Z         plasma,
2025-01-14T13:16:42.8815340Z         no_of_packets,
2025-01-14T13:16:42.8815400Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8815450Z         iteration=0,
2025-01-14T13:16:42.8815490Z     ):
2025-01-14T13:16:42.8815640Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8815710Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8815760Z         else:
2025-01-14T13:16:42.8815820Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8815860Z     
2025-01-14T13:16:42.8815960Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8816030Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8816080Z         )
2025-01-14T13:16:42.8816120Z     
2025-01-14T13:16:42.8816220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8816310Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8816430Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8816480Z         else:
2025-01-14T13:16:42.8816540Z             continuum_state = None
2025-01-14T13:16:42.8816620Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8816700Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8816770Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8816860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8816930Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8817000Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8817060Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8817110Z         ).to_numba(
2025-01-14T13:16:42.8817160Z             macro_atom_state,
2025-01-14T13:16:42.8817220Z             self.line_interaction_type,
2025-01-14T13:16:42.8817260Z         )
2025-01-14T13:16:42.8817330Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8820760Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8820840Z         ]
2025-01-14T13:16:42.8821090Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8821100Z 
2025-01-14T13:16:42.8821340Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8821510Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-1] __
2025-01-14T13:16:42.8821510Z 
2025-01-14T13:16:42.8822050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8822330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8822330Z 
2025-01-14T13:16:42.8822630Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8822750Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8822820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8822970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8823030Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8823080Z >       sim.run_final()
2025-01-14T13:16:42.8823080Z 
2025-01-14T13:16:42.8823140Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8823230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8823300Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8823410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8823480Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8823600Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8823680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8823690Z 
2025-01-14T13:16:42.8823900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8824220Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8824420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8824640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8824760Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8824870Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8824870Z 
2025-01-14T13:16:42.8824930Z     def initialize_transport_state(
2025-01-14T13:16:42.8824980Z         self,
2025-01-14T13:16:42.8825030Z         simulation_state,
2025-01-14T13:16:42.8825090Z         opacity_state,
2025-01-14T13:16:42.8825140Z         macro_atom_state,
2025-01-14T13:16:42.8825180Z         plasma,
2025-01-14T13:16:42.8825230Z         no_of_packets,
2025-01-14T13:16:42.8825290Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8825340Z         iteration=0,
2025-01-14T13:16:42.8825380Z     ):
2025-01-14T13:16:42.8825490Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8825560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8825610Z         else:
2025-01-14T13:16:42.8825670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8825740Z     
2025-01-14T13:16:42.8825850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8825920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8825970Z         )
2025-01-14T13:16:42.8826010Z     
2025-01-14T13:16:42.8826110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8826200Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8826320Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8826370Z         else:
2025-01-14T13:16:42.8826430Z             continuum_state = None
2025-01-14T13:16:42.8826500Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8826590Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8826930Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8827110Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8832310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8832410Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8832470Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8832520Z         ).to_numba(
2025-01-14T13:16:42.8832570Z             macro_atom_state,
2025-01-14T13:16:42.8832630Z             self.line_interaction_type,
2025-01-14T13:16:42.8832680Z         )
2025-01-14T13:16:42.8832760Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8833160Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8833210Z         ]
2025-01-14T13:16:42.8833460Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8833470Z 
2025-01-14T13:16:42.8833580Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8833790Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[None] _
2025-01-14T13:16:42.8833790Z 
2025-01-14T13:16:42.8834340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8834630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8834630Z 
2025-01-14T13:16:42.8834700Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8834820Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8834890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8835180Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8835240Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8835290Z >       sim.run_final()
2025-01-14T13:16:42.8835290Z 
2025-01-14T13:16:42.8835360Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8835800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8835920Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8836050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8836120Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8836240Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8836330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8836340Z 
2025-01-14T13:16:42.8836550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8836720Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8836900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8837130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8837260Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8837370Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8837370Z 
2025-01-14T13:16:42.8837440Z     def initialize_transport_state(
2025-01-14T13:16:42.8837490Z         self,
2025-01-14T13:16:42.8837540Z         simulation_state,
2025-01-14T13:16:42.8837600Z         opacity_state,
2025-01-14T13:16:42.8837650Z         macro_atom_state,
2025-01-14T13:16:42.8837700Z         plasma,
2025-01-14T13:16:42.8837750Z         no_of_packets,
2025-01-14T13:16:42.8837810Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8837860Z         iteration=0,
2025-01-14T13:16:42.8837910Z     ):
2025-01-14T13:16:42.8838160Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8838240Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8838290Z         else:
2025-01-14T13:16:42.8838350Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8838390Z     
2025-01-14T13:16:42.8838500Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8838570Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8838620Z         )
2025-01-14T13:16:42.8838660Z     
2025-01-14T13:16:42.8838760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8838850Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8839080Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8839130Z         else:
2025-01-14T13:16:42.8839190Z             continuum_state = None
2025-01-14T13:16:42.8839270Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8839360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8839430Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8839520Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8839590Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8839660Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8839720Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8839770Z         ).to_numba(
2025-01-14T13:16:42.8839820Z             macro_atom_state,
2025-01-14T13:16:42.8839890Z             self.line_interaction_type,
2025-01-14T13:16:42.8839930Z         )
2025-01-14T13:16:42.8840010Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8840230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8840270Z         ]
2025-01-14T13:16:42.8840560Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8840570Z 
2025-01-14T13:16:42.8840690Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8840850Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-0] ___
2025-01-14T13:16:42.8840850Z 
2025-01-14T13:16:42.8841400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8841680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8841680Z 
2025-01-14T13:16:42.8841750Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8841870Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8841940Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8842090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8842150Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8842200Z >       sim.run_final()
2025-01-14T13:16:42.8842210Z 
2025-01-14T13:16:42.8842260Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8842350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8842420Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8842530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8842600Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8842720Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8842810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8842810Z 
2025-01-14T13:16:42.8843020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8843240Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8843420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8843640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8843750Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8843860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8843860Z 
2025-01-14T13:16:42.8844120Z     def initialize_transport_state(
2025-01-14T13:16:42.8844170Z         self,
2025-01-14T13:16:42.8844220Z         simulation_state,
2025-01-14T13:16:42.8844390Z         opacity_state,
2025-01-14T13:16:42.8844450Z         macro_atom_state,
2025-01-14T13:16:42.8844490Z         plasma,
2025-01-14T13:16:42.8844540Z         no_of_packets,
2025-01-14T13:16:42.8844600Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8844650Z         iteration=0,
2025-01-14T13:16:42.8844700Z     ):
2025-01-14T13:16:42.8844790Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8844860Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8844910Z         else:
2025-01-14T13:16:42.8844960Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8845000Z     
2025-01-14T13:16:42.8845110Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8845180Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8845220Z         )
2025-01-14T13:16:42.8845260Z     
2025-01-14T13:16:42.8845360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8845450Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8845580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8845620Z         else:
2025-01-14T13:16:42.8845680Z             continuum_state = None
2025-01-14T13:16:42.8845800Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8846040Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8846150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8846240Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8846310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8846380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8846450Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8846490Z         ).to_numba(
2025-01-14T13:16:42.8846540Z             macro_atom_state,
2025-01-14T13:16:42.8846600Z             self.line_interaction_type,
2025-01-14T13:16:42.8846650Z         )
2025-01-14T13:16:42.8846730Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8846950Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8847000Z         ]
2025-01-14T13:16:42.8847250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8847260Z 
2025-01-14T13:16:42.8847370Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8847540Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-1] ___
2025-01-14T13:16:42.8847550Z 
2025-01-14T13:16:42.8848080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8848360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8848370Z 
2025-01-14T13:16:42.8848430Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8848550Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8848770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8848910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8848980Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8849030Z >       sim.run_final()
2025-01-14T13:16:42.8849030Z 
2025-01-14T13:16:42.8849090Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8849180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8849250Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8849360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8849420Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8849760Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8849840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8849850Z 
2025-01-14T13:16:42.8850060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8850220Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8850400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8850610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8850730Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8850840Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8850850Z 
2025-01-14T13:16:42.8850910Z     def initialize_transport_state(
2025-01-14T13:16:42.8850960Z         self,
2025-01-14T13:16:42.8851010Z         simulation_state,
2025-01-14T13:16:42.8851060Z         opacity_state,
2025-01-14T13:16:42.8851110Z         macro_atom_state,
2025-01-14T13:16:42.8851160Z         plasma,
2025-01-14T13:16:42.8851240Z         no_of_packets,
2025-01-14T13:16:42.8851300Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8851350Z         iteration=0,
2025-01-14T13:16:42.8851390Z     ):
2025-01-14T13:16:42.8851490Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8851560Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8851610Z         else:
2025-01-14T13:16:42.8851660Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8851710Z     
2025-01-14T13:16:42.8851810Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8851880Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8851920Z         )
2025-01-14T13:16:42.8851970Z     
2025-01-14T13:16:42.8852060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8852150Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8852270Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8852320Z         else:
2025-01-14T13:16:42.8852380Z             continuum_state = None
2025-01-14T13:16:42.8852460Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8852540Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8852610Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8852690Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8852760Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8852830Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8852890Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8852940Z         ).to_numba(
2025-01-14T13:16:42.8852990Z             macro_atom_state,
2025-01-14T13:16:42.8853050Z             self.line_interaction_type,
2025-01-14T13:16:42.8853090Z         )
2025-01-14T13:16:42.8853170Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8853390Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8853430Z         ]
2025-01-14T13:16:42.8853880Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8853890Z 
2025-01-14T13:16:42.8854010Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8854170Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-2] ___
2025-01-14T13:16:42.8854170Z 
2025-01-14T13:16:42.8854710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8855070Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8855070Z 
2025-01-14T13:16:42.8855130Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8855260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8855340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8855470Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8855540Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8855590Z >       sim.run_final()
2025-01-14T13:16:42.8855590Z 
2025-01-14T13:16:42.8855650Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8855730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8855810Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8855920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8855990Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8856110Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8856200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8856410Z 
2025-01-14T13:16:42.8856630Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8856790Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8856970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8857190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8857310Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8857420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8857420Z 
2025-01-14T13:16:42.8857640Z     def initialize_transport_state(
2025-01-14T13:16:42.8857690Z         self,
2025-01-14T13:16:42.8857750Z         simulation_state,
2025-01-14T13:16:42.8857820Z         opacity_state,
2025-01-14T13:16:42.8857870Z         macro_atom_state,
2025-01-14T13:16:42.8857920Z         plasma,
2025-01-14T13:16:42.8857970Z         no_of_packets,
2025-01-14T13:16:42.8858030Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8858070Z         iteration=0,
2025-01-14T13:16:42.8858120Z     ):
2025-01-14T13:16:42.8858210Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8858280Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8858330Z         else:
2025-01-14T13:16:42.8858390Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8858430Z     
2025-01-14T13:16:42.8858530Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8858600Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8858640Z         )
2025-01-14T13:16:42.8858680Z     
2025-01-14T13:16:42.8858780Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8858870Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8858990Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8859040Z         else:
2025-01-14T13:16:42.8859150Z             continuum_state = None
2025-01-14T13:16:42.8859240Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8859320Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8859390Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8859470Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8859550Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8859610Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8859680Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8859720Z         ).to_numba(
2025-01-14T13:16:42.8859780Z             macro_atom_state,
2025-01-14T13:16:42.8859910Z             self.line_interaction_type,
2025-01-14T13:16:42.8859950Z         )
2025-01-14T13:16:42.8860030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8860240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8860290Z         ]
2025-01-14T13:16:42.8860530Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8860540Z 
2025-01-14T13:16:42.8860650Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8860790Z _____________ ERROR at setup of TestBaseShellInfo.test_shells_data _____________
2025-01-14T13:16:42.8860790Z 
2025-01-14T13:16:42.8861320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8861600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8861600Z 
2025-01-14T13:16:42.8861690Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8861820Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8861890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8862040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8862100Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8862150Z >       sim.run_final()
2025-01-14T13:16:42.8862150Z 
2025-01-14T13:16:42.8862210Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8862300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8862370Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8862480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8862550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8862670Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8862750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8862760Z 
2025-01-14T13:16:42.8862960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8863120Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8863290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8863520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8863640Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8863740Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8863740Z 
2025-01-14T13:16:42.8863810Z     def initialize_transport_state(
2025-01-14T13:16:42.8863850Z         self,
2025-01-14T13:16:42.8863910Z         simulation_state,
2025-01-14T13:16:42.8863950Z         opacity_state,
2025-01-14T13:16:42.8864000Z         macro_atom_state,
2025-01-14T13:16:42.8864050Z         plasma,
2025-01-14T13:16:42.8864100Z         no_of_packets,
2025-01-14T13:16:42.8864210Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8864260Z         iteration=0,
2025-01-14T13:16:42.8864300Z     ):
2025-01-14T13:16:42.8864400Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8864470Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8864510Z         else:
2025-01-14T13:16:42.8864570Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8864610Z     
2025-01-14T13:16:42.8864710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8864790Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8864830Z         )
2025-01-14T13:16:42.8864930Z     
2025-01-14T13:16:42.8865030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8865110Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8865240Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8865280Z         else:
2025-01-14T13:16:42.8865350Z             continuum_state = None
2025-01-14T13:16:42.8865420Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8865510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8865580Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8865660Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8865730Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8865800Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8865870Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8865910Z         ).to_numba(
2025-01-14T13:16:42.8865970Z             macro_atom_state,
2025-01-14T13:16:42.8866030Z             self.line_interaction_type,
2025-01-14T13:16:42.8866080Z         )
2025-01-14T13:16:42.8866150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8866400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8866440Z         ]
2025-01-14T13:16:42.8866690Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8866690Z 
2025-01-14T13:16:42.8866800Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8866950Z ________ ERROR at setup of TestBaseShellInfo.test_element_count_data[1] ________
2025-01-14T13:16:42.8866960Z 
2025-01-14T13:16:42.8867490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8867770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8867770Z 
2025-01-14T13:16:42.8867840Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8867960Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8868040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8868170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8868240Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8868280Z >       sim.run_final()
2025-01-14T13:16:42.8868290Z 
2025-01-14T13:16:42.8868350Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8868440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8868510Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8868620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8868690Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8868810Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8868900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8868940Z 
2025-01-14T13:16:42.8869170Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8869330Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8869510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8869720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8869850Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8869960Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8870110Z 
2025-01-14T13:16:42.8870190Z     def initialize_transport_state(
2025-01-14T13:16:42.8870240Z         self,
2025-01-14T13:16:42.8870290Z         simulation_state,
2025-01-14T13:16:42.8870340Z         opacity_state,
2025-01-14T13:16:42.8870390Z         macro_atom_state,
2025-01-14T13:16:42.8870440Z         plasma,
2025-01-14T13:16:42.8870490Z         no_of_packets,
2025-01-14T13:16:42.8870550Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8870600Z         iteration=0,
2025-01-14T13:16:42.8870640Z     ):
2025-01-14T13:16:42.8870740Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8870810Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8870850Z         else:
2025-01-14T13:16:42.8870910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8870950Z     
2025-01-14T13:16:42.8871050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8871120Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8871160Z         )
2025-01-14T13:16:42.8871210Z     
2025-01-14T13:16:42.8871310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8871390Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8871540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8871590Z         else:
2025-01-14T13:16:42.8871650Z             continuum_state = None
2025-01-14T13:16:42.8871720Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8871810Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8871880Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8871950Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8872020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8872090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8872160Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8872210Z         ).to_numba(
2025-01-14T13:16:42.8872260Z             macro_atom_state,
2025-01-14T13:16:42.8872320Z             self.line_interaction_type,
2025-01-14T13:16:42.8872370Z         )
2025-01-14T13:16:42.8872440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8872660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8872710Z         ]
2025-01-14T13:16:42.8872950Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8872950Z 
2025-01-14T13:16:42.8873060Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8873210Z _______ ERROR at setup of TestBaseShellInfo.test_element_count_data[20] ________
2025-01-14T13:16:42.8873210Z 
2025-01-14T13:16:42.8873740Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8874020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8874020Z 
2025-01-14T13:16:42.8874650Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8874830Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8874910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8875050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8875110Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8875160Z >       sim.run_final()
2025-01-14T13:16:42.8875160Z 
2025-01-14T13:16:42.8875220Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8875300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8875380Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8875570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8875650Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8875770Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8875860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8875860Z 
2025-01-14T13:16:42.8876060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8876220Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8876390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8876600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8876720Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8876820Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8876830Z 
2025-01-14T13:16:42.8876900Z     def initialize_transport_state(
2025-01-14T13:16:42.8876940Z         self,
2025-01-14T13:16:42.8876990Z         simulation_state,
2025-01-14T13:16:42.8877180Z         opacity_state,
2025-01-14T13:16:42.8877230Z         macro_atom_state,
2025-01-14T13:16:42.8877280Z         plasma,
2025-01-14T13:16:42.8877330Z         no_of_packets,
2025-01-14T13:16:42.8877380Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8877430Z         iteration=0,
2025-01-14T13:16:42.8877470Z     ):
2025-01-14T13:16:42.8877570Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8877640Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8877680Z         else:
2025-01-14T13:16:42.8877740Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8877780Z     
2025-01-14T13:16:42.8877880Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8877950Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8878000Z         )
2025-01-14T13:16:42.8878040Z     
2025-01-14T13:16:42.8878140Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8878220Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8878350Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8878390Z         else:
2025-01-14T13:16:42.8878450Z             continuum_state = None
2025-01-14T13:16:42.8878530Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8878610Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8878680Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8878750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8878830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8878900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8878970Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8879010Z         ).to_numba(
2025-01-14T13:16:42.8879070Z             macro_atom_state,
2025-01-14T13:16:42.8879130Z             self.line_interaction_type,
2025-01-14T13:16:42.8879170Z         )
2025-01-14T13:16:42.8879250Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8879520Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8879560Z         ]
2025-01-14T13:16:42.8879810Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8879810Z 
2025-01-14T13:16:42.8879920Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8880060Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:16:42.8880070Z 
2025-01-14T13:16:42.8881250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8883070Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8883090Z 
2025-01-14T13:16:42.8883190Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8883320Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8883390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8883540Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8883600Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8883660Z >       sim.run_final()
2025-01-14T13:16:42.8883660Z 
2025-01-14T13:16:42.8883710Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8883810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8883880Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8884220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8884480Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8884770Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8884870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8884880Z 
2025-01-14T13:16:42.8885080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8885240Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8885410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8885640Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8885750Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8885870Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8885870Z 
2025-01-14T13:16:42.8885930Z     def initialize_transport_state(
2025-01-14T13:16:42.8885970Z         self,
2025-01-14T13:16:42.8886030Z         simulation_state,
2025-01-14T13:16:42.8886080Z         opacity_state,
2025-01-14T13:16:42.8886130Z         macro_atom_state,
2025-01-14T13:16:42.8886170Z         plasma,
2025-01-14T13:16:42.8886220Z         no_of_packets,
2025-01-14T13:16:42.8886280Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8886330Z         iteration=0,
2025-01-14T13:16:42.8886370Z     ):
2025-01-14T13:16:42.8886470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8886540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8886580Z         else:
2025-01-14T13:16:42.8886640Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8886680Z     
2025-01-14T13:16:42.8886780Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8886850Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8886900Z         )
2025-01-14T13:16:42.8886940Z     
2025-01-14T13:16:42.8887040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8887130Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8887310Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8887360Z         else:
2025-01-14T13:16:42.8887420Z             continuum_state = None
2025-01-14T13:16:42.8887500Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8887580Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8887640Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8887730Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8892990Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8893090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8893310Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8893360Z         ).to_numba(
2025-01-14T13:16:42.8893420Z             macro_atom_state,
2025-01-14T13:16:42.8893480Z             self.line_interaction_type,
2025-01-14T13:16:42.8893520Z         )
2025-01-14T13:16:42.8893610Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8893840Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8895700Z         ]
2025-01-14T13:16:42.8895980Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8895980Z 
2025-01-14T13:16:42.8896090Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8896240Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[20-20] ________
2025-01-14T13:16:42.8896240Z 
2025-01-14T13:16:42.8896770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8897060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8897140Z 
2025-01-14T13:16:42.8897400Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8897530Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8897690Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8897830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8897890Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8897940Z >       sim.run_final()
2025-01-14T13:16:42.8897940Z 
2025-01-14T13:16:42.8898010Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8898110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8900330Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8900450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8900520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8900920Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8901010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8901020Z 
2025-01-14T13:16:42.8901230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8901390Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8901570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8901790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8901910Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8902020Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8902030Z 
2025-01-14T13:16:42.8902090Z     def initialize_transport_state(
2025-01-14T13:16:42.8902150Z         self,
2025-01-14T13:16:42.8902200Z         simulation_state,
2025-01-14T13:16:42.8902350Z         opacity_state,
2025-01-14T13:16:42.8902400Z         macro_atom_state,
2025-01-14T13:16:42.8902450Z         plasma,
2025-01-14T13:16:42.8902500Z         no_of_packets,
2025-01-14T13:16:42.8902550Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8902600Z         iteration=0,
2025-01-14T13:16:42.8902640Z     ):
2025-01-14T13:16:42.8902750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8902820Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8902860Z         else:
2025-01-14T13:16:42.8902930Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8902970Z     
2025-01-14T13:16:42.8903080Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8903340Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8903380Z         )
2025-01-14T13:16:42.8903430Z     
2025-01-14T13:16:42.8903530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8903620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8903740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8903790Z         else:
2025-01-14T13:16:42.8903850Z             continuum_state = None
2025-01-14T13:16:42.8903930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8904010Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8904080Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8904160Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8904230Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8904300Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8904360Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8904410Z         ).to_numba(
2025-01-14T13:16:42.8904470Z             macro_atom_state,
2025-01-14T13:16:42.8904560Z             self.line_interaction_type,
2025-01-14T13:16:42.8904610Z         )
2025-01-14T13:16:42.8904690Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8904910Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8904950Z         ]
2025-01-14T13:16:42.8905190Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8905190Z 
2025-01-14T13:16:42.8905310Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8905460Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:16:42.8905460Z 
2025-01-14T13:16:42.8906010Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8906300Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8906300Z 
2025-01-14T13:16:42.8906360Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8906490Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8906560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8906700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8906760Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8906810Z >       sim.run_final()
2025-01-14T13:16:42.8906810Z 
2025-01-14T13:16:42.8906870Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8906960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8907040Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8907150Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8907210Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8907540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8907640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8907640Z 
2025-01-14T13:16:42.8907850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8908020Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8908190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8908410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8908620Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8908720Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8908730Z 
2025-01-14T13:16:42.8908790Z     def initialize_transport_state(
2025-01-14T13:16:42.8908830Z         self,
2025-01-14T13:16:42.8908890Z         simulation_state,
2025-01-14T13:16:42.8908940Z         opacity_state,
2025-01-14T13:16:42.8908990Z         macro_atom_state,
2025-01-14T13:16:42.8909040Z         plasma,
2025-01-14T13:16:42.8909090Z         no_of_packets,
2025-01-14T13:16:42.8909150Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8909200Z         iteration=0,
2025-01-14T13:16:42.8909240Z     ):
2025-01-14T13:16:42.8909340Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8909410Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8909450Z         else:
2025-01-14T13:16:42.8910140Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8910220Z     
2025-01-14T13:16:42.8910330Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8910400Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8910450Z         )
2025-01-14T13:16:42.8910490Z     
2025-01-14T13:16:42.8910800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8910890Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8911020Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8911060Z         else:
2025-01-14T13:16:42.8911130Z             continuum_state = None
2025-01-14T13:16:42.8911210Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8911290Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8911360Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8911450Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8911520Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8911600Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8911670Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8911720Z         ).to_numba(
2025-01-14T13:16:42.8911770Z             macro_atom_state,
2025-01-14T13:16:42.8911830Z             self.line_interaction_type,
2025-01-14T13:16:42.8911890Z         )
2025-01-14T13:16:42.8911960Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8912200Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8912240Z         ]
2025-01-14T13:16:42.8912490Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8912500Z 
2025-01-14T13:16:42.8912620Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8912770Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[3-20-20] ______
2025-01-14T13:16:42.8912770Z 
2025-01-14T13:16:42.8913330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8913680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8913680Z 
2025-01-14T13:16:42.8913760Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8913880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8913960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8914110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8914170Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8914220Z >       sim.run_final()
2025-01-14T13:16:42.8914220Z 
2025-01-14T13:16:42.8914280Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8914470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8914550Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8914660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8914730Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8914850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8914940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8914940Z 
2025-01-14T13:16:42.8915160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8915320Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8915610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8915850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8915970Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8916080Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8916150Z 
2025-01-14T13:16:42.8916220Z     def initialize_transport_state(
2025-01-14T13:16:42.8916270Z         self,
2025-01-14T13:16:42.8916320Z         simulation_state,
2025-01-14T13:16:42.8916370Z         opacity_state,
2025-01-14T13:16:42.8916420Z         macro_atom_state,
2025-01-14T13:16:42.8916460Z         plasma,
2025-01-14T13:16:42.8916510Z         no_of_packets,
2025-01-14T13:16:42.8916570Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8916610Z         iteration=0,
2025-01-14T13:16:42.8916660Z     ):
2025-01-14T13:16:42.8916750Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8916830Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8916870Z         else:
2025-01-14T13:16:42.8916920Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8916970Z     
2025-01-14T13:16:42.8917070Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8917150Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8917190Z         )
2025-01-14T13:16:42.8917240Z     
2025-01-14T13:16:42.8917340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8917430Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8917550Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8917600Z         else:
2025-01-14T13:16:42.8917660Z             continuum_state = None
2025-01-14T13:16:42.8917730Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8917820Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8917890Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8917970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8918040Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8918110Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8918180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8918220Z         ).to_numba(
2025-01-14T13:16:42.8918270Z             macro_atom_state,
2025-01-14T13:16:42.8918390Z             self.line_interaction_type,
2025-01-14T13:16:42.8918440Z         )
2025-01-14T13:16:42.8918520Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8918740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8918790Z         ]
2025-01-14T13:16:42.8919030Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8919030Z 
2025-01-14T13:16:42.8919220Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8919420Z __________ ERROR at setup of TestSimulationShellInfo.test_shells_data __________
2025-01-14T13:16:42.8919700Z 
2025-01-14T13:16:42.8920260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8920550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8920560Z 
2025-01-14T13:16:42.8920630Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8920760Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8920830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8920970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8921030Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8921080Z >       sim.run_final()
2025-01-14T13:16:42.8921090Z 
2025-01-14T13:16:42.8921150Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8921240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8921310Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8921470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8921550Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8921680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8921760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8921760Z 
2025-01-14T13:16:42.8921980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8922140Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8922310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8922530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8922650Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8922760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8922760Z 
2025-01-14T13:16:42.8922830Z     def initialize_transport_state(
2025-01-14T13:16:42.8922880Z         self,
2025-01-14T13:16:42.8922930Z         simulation_state,
2025-01-14T13:16:42.8922980Z         opacity_state,
2025-01-14T13:16:42.8923030Z         macro_atom_state,
2025-01-14T13:16:42.8923080Z         plasma,
2025-01-14T13:16:42.8923120Z         no_of_packets,
2025-01-14T13:16:42.8923180Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8923230Z         iteration=0,
2025-01-14T13:16:42.8923270Z     ):
2025-01-14T13:16:42.8923370Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8923440Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8923480Z         else:
2025-01-14T13:16:42.8923540Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8923580Z     
2025-01-14T13:16:42.8923690Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8923760Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8923810Z         )
2025-01-14T13:16:42.8923850Z     
2025-01-14T13:16:42.8924000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8924100Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8924220Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8924260Z         else:
2025-01-14T13:16:42.8924320Z             continuum_state = None
2025-01-14T13:16:42.8924390Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8924480Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8924550Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8925440Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8926640Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8926720Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8926790Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8926840Z         ).to_numba(
2025-01-14T13:16:42.8926890Z             macro_atom_state,
2025-01-14T13:16:42.8926960Z             self.line_interaction_type,
2025-01-14T13:16:42.8927000Z         )
2025-01-14T13:16:42.8927080Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8927300Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8927350Z         ]
2025-01-14T13:16:42.8927590Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8927600Z 
2025-01-14T13:16:42.8927710Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8927860Z _____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[1] _____
2025-01-14T13:16:42.8927870Z 
2025-01-14T13:16:42.8931350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8933040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8933050Z 
2025-01-14T13:16:42.8933140Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8933270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8933340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8933480Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8933540Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8933590Z >       sim.run_final()
2025-01-14T13:16:42.8933600Z 
2025-01-14T13:16:42.8933650Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8933740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8933810Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8933940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8934010Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8934120Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8934210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8934220Z 
2025-01-14T13:16:42.8937510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8937700Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8937880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8938110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8938230Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8938330Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8938340Z 
2025-01-14T13:16:42.8938690Z     def initialize_transport_state(
2025-01-14T13:16:42.8938740Z         self,
2025-01-14T13:16:42.8938800Z         simulation_state,
2025-01-14T13:16:42.8938840Z         opacity_state,
2025-01-14T13:16:42.8938900Z         macro_atom_state,
2025-01-14T13:16:42.8938940Z         plasma,
2025-01-14T13:16:42.8938990Z         no_of_packets,
2025-01-14T13:16:42.8939040Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8939090Z         iteration=0,
2025-01-14T13:16:42.8939130Z     ):
2025-01-14T13:16:42.8939230Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8939300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8939450Z         else:
2025-01-14T13:16:42.8939510Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8939560Z     
2025-01-14T13:16:42.8939660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8939730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8939780Z         )
2025-01-14T13:16:42.8939820Z     
2025-01-14T13:16:42.8939920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8940010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8940130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8940170Z         else:
2025-01-14T13:16:42.8940230Z             continuum_state = None
2025-01-14T13:16:42.8940310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8940600Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8940690Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8940780Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8940850Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8940930Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8940990Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8941250Z         ).to_numba(
2025-01-14T13:16:42.8941310Z             macro_atom_state,
2025-01-14T13:16:42.8941370Z             self.line_interaction_type,
2025-01-14T13:16:42.8941420Z         )
2025-01-14T13:16:42.8941490Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8941720Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8941980Z         ]
2025-01-14T13:16:42.8942250Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8942250Z 
2025-01-14T13:16:42.8942370Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8942530Z ____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[20] _____
2025-01-14T13:16:42.8942540Z 
2025-01-14T13:16:42.8943080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8943360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8943370Z 
2025-01-14T13:16:42.8943430Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8943550Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8943630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8943770Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8943830Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8943880Z >       sim.run_final()
2025-01-14T13:16:42.8943880Z 
2025-01-14T13:16:42.8943930Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8944040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8944120Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8944320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8944400Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8944520Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8944600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8944610Z 
2025-01-14T13:16:42.8944810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8944970Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8945150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8945450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8945570Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8945680Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8945690Z 
2025-01-14T13:16:42.8945750Z     def initialize_transport_state(
2025-01-14T13:16:42.8945800Z         self,
2025-01-14T13:16:42.8945850Z         simulation_state,
2025-01-14T13:16:42.8945900Z         opacity_state,
2025-01-14T13:16:42.8945950Z         macro_atom_state,
2025-01-14T13:16:42.8945990Z         plasma,
2025-01-14T13:16:42.8946040Z         no_of_packets,
2025-01-14T13:16:42.8946100Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8946150Z         iteration=0,
2025-01-14T13:16:42.8946190Z     ):
2025-01-14T13:16:42.8946290Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8946360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8946410Z         else:
2025-01-14T13:16:42.8946470Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8946520Z     
2025-01-14T13:16:42.8946620Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8946730Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8946780Z         )
2025-01-14T13:16:42.8946820Z     
2025-01-14T13:16:42.8946920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8947010Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8947130Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8947180Z         else:
2025-01-14T13:16:42.8947240Z             continuum_state = None
2025-01-14T13:16:42.8947310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8947390Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8947460Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8947550Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8947620Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8947690Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8947750Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8947810Z         ).to_numba(
2025-01-14T13:16:42.8947860Z             macro_atom_state,
2025-01-14T13:16:42.8947920Z             self.line_interaction_type,
2025-01-14T13:16:42.8947970Z         )
2025-01-14T13:16:42.8948050Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8948260Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8955030Z         ]
2025-01-14T13:16:42.8955320Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8955330Z 
2025-01-14T13:16:42.8955460Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8955630Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[12-1] ______
2025-01-14T13:16:42.8955630Z 
2025-01-14T13:16:42.8956270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8956560Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8956570Z 
2025-01-14T13:16:42.8956630Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8956790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8956860Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8957000Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8957170Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8957750Z >       sim.run_final()
2025-01-14T13:16:42.8958100Z 
2025-01-14T13:16:42.8958180Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8958270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8958350Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8958460Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8958530Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8958650Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8958740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8958740Z 
2025-01-14T13:16:42.8958950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8959110Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8959620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8960020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8960150Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8960350Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8960350Z 
2025-01-14T13:16:42.8960420Z     def initialize_transport_state(
2025-01-14T13:16:42.8960460Z         self,
2025-01-14T13:16:42.8960520Z         simulation_state,
2025-01-14T13:16:42.8960560Z         opacity_state,
2025-01-14T13:16:42.8960620Z         macro_atom_state,
2025-01-14T13:16:42.8960670Z         plasma,
2025-01-14T13:16:42.8960710Z         no_of_packets,
2025-01-14T13:16:42.8960770Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8960820Z         iteration=0,
2025-01-14T13:16:42.8960860Z     ):
2025-01-14T13:16:42.8960960Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8961030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8961080Z         else:
2025-01-14T13:16:42.8961130Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8961170Z     
2025-01-14T13:16:42.8961280Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8961350Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8961400Z         )
2025-01-14T13:16:42.8961440Z     
2025-01-14T13:16:42.8961540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8961620Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8961740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8961790Z         else:
2025-01-14T13:16:42.8962080Z             continuum_state = None
2025-01-14T13:16:42.8962160Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8962250Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8962310Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8962390Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8962470Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8962540Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8962630Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8962680Z         ).to_numba(
2025-01-14T13:16:42.8962740Z             macro_atom_state,
2025-01-14T13:16:42.8962790Z             self.line_interaction_type,
2025-01-14T13:16:42.8962840Z         )
2025-01-14T13:16:42.8962910Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8963130Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8963170Z         ]
2025-01-14T13:16:42.8963420Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8963560Z 
2025-01-14T13:16:42.8963770Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8963940Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[20-20] _____
2025-01-14T13:16:42.8963950Z 
2025-01-14T13:16:42.8964500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8964780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8964780Z 
2025-01-14T13:16:42.8964850Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8964970Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8965050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8965190Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8965250Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8965300Z >       sim.run_final()
2025-01-14T13:16:42.8965300Z 
2025-01-14T13:16:42.8965360Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8965530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8965600Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8965710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8965780Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8965900Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8965990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8965990Z 
2025-01-14T13:16:42.8966200Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8966360Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8966540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8966770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8966890Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8967010Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8967010Z 
2025-01-14T13:16:42.8967070Z     def initialize_transport_state(
2025-01-14T13:16:42.8967120Z         self,
2025-01-14T13:16:42.8967170Z         simulation_state,
2025-01-14T13:16:42.8967220Z         opacity_state,
2025-01-14T13:16:42.8967280Z         macro_atom_state,
2025-01-14T13:16:42.8967320Z         plasma,
2025-01-14T13:16:42.8967480Z         no_of_packets,
2025-01-14T13:16:42.8967540Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8967600Z         iteration=0,
2025-01-14T13:16:42.8967640Z     ):
2025-01-14T13:16:42.8967740Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8967810Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8967850Z         else:
2025-01-14T13:16:42.8967910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8967950Z     
2025-01-14T13:16:42.8968050Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8968250Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8968300Z         )
2025-01-14T13:16:42.8968350Z     
2025-01-14T13:16:42.8968440Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8968540Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8968660Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8968710Z         else:
2025-01-14T13:16:42.8968770Z             continuum_state = None
2025-01-14T13:16:42.8968940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8969050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8974150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8974270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8974340Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8974420Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8974490Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8974540Z         ).to_numba(
2025-01-14T13:16:42.8974590Z             macro_atom_state,
2025-01-14T13:16:42.8974650Z             self.line_interaction_type,
2025-01-14T13:16:42.8974690Z         )
2025-01-14T13:16:42.8974770Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8975000Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8975040Z         ]
2025-01-14T13:16:42.8975290Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8975290Z 
2025-01-14T13:16:42.8975410Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8975570Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[2-12-1] ____
2025-01-14T13:16:42.8975710Z 
2025-01-14T13:16:42.8976250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8976540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8976540Z 
2025-01-14T13:16:42.8976610Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8976730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8976800Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8976940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8977000Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8977050Z >       sim.run_final()
2025-01-14T13:16:42.8977060Z 
2025-01-14T13:16:42.8977110Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8977200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8977270Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8977380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8977450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8977580Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8977760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8977770Z 
2025-01-14T13:16:42.8977990Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8978140Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8978320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8978530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8978700Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8978810Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8978810Z 
2025-01-14T13:16:42.8978880Z     def initialize_transport_state(
2025-01-14T13:16:42.8978920Z         self,
2025-01-14T13:16:42.8978980Z         simulation_state,
2025-01-14T13:16:42.8979030Z         opacity_state,
2025-01-14T13:16:42.8979070Z         macro_atom_state,
2025-01-14T13:16:42.8979120Z         plasma,
2025-01-14T13:16:42.8979170Z         no_of_packets,
2025-01-14T13:16:42.8979230Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8979280Z         iteration=0,
2025-01-14T13:16:42.8979390Z     ):
2025-01-14T13:16:42.8979490Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8979570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8979610Z         else:
2025-01-14T13:16:42.8979670Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8979710Z     
2025-01-14T13:16:42.8979820Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8979900Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8979940Z         )
2025-01-14T13:16:42.8979980Z     
2025-01-14T13:16:42.8980080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8980170Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8980290Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8980350Z         else:
2025-01-14T13:16:42.8980400Z             continuum_state = None
2025-01-14T13:16:42.8980480Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8980560Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8980630Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8980710Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8980810Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8980880Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8980950Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8980990Z         ).to_numba(
2025-01-14T13:16:42.8981050Z             macro_atom_state,
2025-01-14T13:16:42.8981110Z             self.line_interaction_type,
2025-01-14T13:16:42.8981150Z         )
2025-01-14T13:16:42.8981230Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8981450Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8981500Z         ]
2025-01-14T13:16:42.8981740Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8981740Z 
2025-01-14T13:16:42.8981860Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8982010Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[3-20-20] ___
2025-01-14T13:16:42.8982010Z 
2025-01-14T13:16:42.8982550Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8982830Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8982840Z 
2025-01-14T13:16:42.8982960Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8983090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8983160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8983310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8983370Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8983420Z >       sim.run_final()
2025-01-14T13:16:42.8983430Z 
2025-01-14T13:16:42.8983480Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8983600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8983670Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8983780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8983850Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8984220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8984320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8984320Z 
2025-01-14T13:16:42.8984530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8984770Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8984950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8985170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8985290Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8985400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8985400Z 
2025-01-14T13:16:42.8985460Z     def initialize_transport_state(
2025-01-14T13:16:42.8985510Z         self,
2025-01-14T13:16:42.8985560Z         simulation_state,
2025-01-14T13:16:42.8985610Z         opacity_state,
2025-01-14T13:16:42.8985670Z         macro_atom_state,
2025-01-14T13:16:42.8985720Z         plasma,
2025-01-14T13:16:42.8985770Z         no_of_packets,
2025-01-14T13:16:42.8985820Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8985870Z         iteration=0,
2025-01-14T13:16:42.8985910Z     ):
2025-01-14T13:16:42.8986010Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8986080Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8986120Z         else:
2025-01-14T13:16:42.8986210Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8986260Z     
2025-01-14T13:16:42.8986360Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8986430Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8986480Z         )
2025-01-14T13:16:42.8986520Z     
2025-01-14T13:16:42.8986620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8986700Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8986830Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8986870Z         else:
2025-01-14T13:16:42.8986930Z             continuum_state = None
2025-01-14T13:16:42.8987010Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8987090Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8987150Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8987230Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.8987310Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.8987380Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.8987440Z             continuum_state=continuum_state,
2025-01-14T13:16:42.8987490Z         ).to_numba(
2025-01-14T13:16:42.8987550Z             macro_atom_state,
2025-01-14T13:16:42.8987600Z             self.line_interaction_type,
2025-01-14T13:16:42.8987650Z         )
2025-01-14T13:16:42.8987720Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.8988070Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.8988120Z         ]
2025-01-14T13:16:42.8988870Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.8988940Z 
2025-01-14T13:16:42.8989340Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.8989740Z _____________ ERROR at setup of TestHDFShellInfo.test_shells_data ______________
2025-01-14T13:16:42.8990150Z 
2025-01-14T13:16:42.8991060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.8991390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.8991390Z 
2025-01-14T13:16:42.8991460Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.8991590Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.8991950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.8992090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.8992160Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.8992210Z >       sim.run_final()
2025-01-14T13:16:42.8992210Z 
2025-01-14T13:16:42.8992270Z tardis/conftest.py:233: 
2025-01-14T13:16:42.8992370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8992430Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.8992550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.8992610Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.8992740Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.8992820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.8992830Z 
2025-01-14T13:16:42.8993230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.8993400Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.8993580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.8993850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.8993970Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.8994080Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.8994080Z 
2025-01-14T13:16:42.8994170Z     def initialize_transport_state(
2025-01-14T13:16:42.8995100Z         self,
2025-01-14T13:16:42.8995320Z         simulation_state,
2025-01-14T13:16:42.8995490Z         opacity_state,
2025-01-14T13:16:42.8995640Z         macro_atom_state,
2025-01-14T13:16:42.8995790Z         plasma,
2025-01-14T13:16:42.8995930Z         no_of_packets,
2025-01-14T13:16:42.8997120Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.8997330Z         iteration=0,
2025-01-14T13:16:42.8998400Z     ):
2025-01-14T13:16:42.8998530Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.8998600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.8998650Z         else:
2025-01-14T13:16:42.8998710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.8998760Z     
2025-01-14T13:16:42.8998860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.8998930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.8998980Z         )
2025-01-14T13:16:42.8999020Z     
2025-01-14T13:16:42.8999120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.8999350Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.8999480Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.8999530Z         else:
2025-01-14T13:16:42.8999580Z             continuum_state = None
2025-01-14T13:16:42.8999670Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.8999750Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.8999820Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.8999900Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9000100Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9000170Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9000240Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9000280Z         ).to_numba(
2025-01-14T13:16:42.9000340Z             macro_atom_state,
2025-01-14T13:16:42.9000400Z             self.line_interaction_type,
2025-01-14T13:16:42.9000440Z         )
2025-01-14T13:16:42.9000520Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9000740Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9000790Z         ]
2025-01-14T13:16:42.9001100Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9001100Z 
2025-01-14T13:16:42.9001210Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9001360Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[1] _________
2025-01-14T13:16:42.9001370Z 
2025-01-14T13:16:42.9001910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9002190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9002200Z 
2025-01-14T13:16:42.9002260Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9002390Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9002460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9003690Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9003950Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9004670Z >       sim.run_final()
2025-01-14T13:16:42.9004680Z 
2025-01-14T13:16:42.9004870Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9005250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9005530Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9005660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9005730Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9005850Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9005940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9005950Z 
2025-01-14T13:16:42.9006160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9006320Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9006500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9006730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9006860Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9006960Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9006960Z 
2025-01-14T13:16:42.9007030Z     def initialize_transport_state(
2025-01-14T13:16:42.9007070Z         self,
2025-01-14T13:16:42.9007300Z         simulation_state,
2025-01-14T13:16:42.9007360Z         opacity_state,
2025-01-14T13:16:42.9007410Z         macro_atom_state,
2025-01-14T13:16:42.9007460Z         plasma,
2025-01-14T13:16:42.9007510Z         no_of_packets,
2025-01-14T13:16:42.9007570Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9007620Z         iteration=0,
2025-01-14T13:16:42.9007660Z     ):
2025-01-14T13:16:42.9007760Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9007840Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9007880Z         else:
2025-01-14T13:16:42.9007980Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9008030Z     
2025-01-14T13:16:42.9008140Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9008210Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9008250Z         )
2025-01-14T13:16:42.9008290Z     
2025-01-14T13:16:42.9008400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9008490Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9008610Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9008660Z         else:
2025-01-14T13:16:42.9008780Z             continuum_state = None
2025-01-14T13:16:42.9008860Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9008940Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9009020Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9009100Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9009180Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9009250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9009320Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9009370Z         ).to_numba(
2025-01-14T13:16:42.9009420Z             macro_atom_state,
2025-01-14T13:16:42.9009480Z             self.line_interaction_type,
2025-01-14T13:16:42.9009530Z         )
2025-01-14T13:16:42.9009600Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9010000Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9010210Z         ]
2025-01-14T13:16:42.9010470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9010480Z 
2025-01-14T13:16:42.9010660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9010800Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[20] ________
2025-01-14T13:16:42.9010810Z 
2025-01-14T13:16:42.9011360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9011640Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9011650Z 
2025-01-14T13:16:42.9011710Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9011840Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9011910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9012050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9012110Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9012170Z >       sim.run_final()
2025-01-14T13:16:42.9012170Z 
2025-01-14T13:16:42.9012230Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9012310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9012390Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9012500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9012570Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9012860Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9012990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9012990Z 
2025-01-14T13:16:42.9013210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9013370Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9013550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9013830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9013960Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9014070Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9014080Z 
2025-01-14T13:16:42.9014140Z     def initialize_transport_state(
2025-01-14T13:16:42.9014190Z         self,
2025-01-14T13:16:42.9014250Z         simulation_state,
2025-01-14T13:16:42.9014290Z         opacity_state,
2025-01-14T13:16:42.9014350Z         macro_atom_state,
2025-01-14T13:16:42.9014400Z         plasma,
2025-01-14T13:16:42.9014520Z         no_of_packets,
2025-01-14T13:16:42.9014580Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9014630Z         iteration=0,
2025-01-14T13:16:42.9014680Z     ):
2025-01-14T13:16:42.9014780Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9014850Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9014900Z         else:
2025-01-14T13:16:42.9014950Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9015000Z     
2025-01-14T13:16:42.9015100Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9015170Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9015220Z         )
2025-01-14T13:16:42.9015260Z     
2025-01-14T13:16:42.9015370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9015460Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9015580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9015620Z         else:
2025-01-14T13:16:42.9015690Z             continuum_state = None
2025-01-14T13:16:42.9015760Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9015840Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9015940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9016420Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9016510Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9016580Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9016640Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9016690Z         ).to_numba(
2025-01-14T13:16:42.9016750Z             macro_atom_state,
2025-01-14T13:16:42.9016810Z             self.line_interaction_type,
2025-01-14T13:16:42.9016850Z         )
2025-01-14T13:16:42.9016920Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9017150Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9017190Z         ]
2025-01-14T13:16:42.9017440Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9017440Z 
2025-01-14T13:16:42.9017560Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9017710Z _________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[12-1] _________
2025-01-14T13:16:42.9017710Z 
2025-01-14T13:16:42.9018270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9018700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9018700Z 
2025-01-14T13:16:42.9018780Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9018910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9018990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9019120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9019210Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9019260Z >       sim.run_final()
2025-01-14T13:16:42.9019270Z 
2025-01-14T13:16:42.9019330Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9019420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9019490Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9019600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9019670Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9019790Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9019880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9020010Z 
2025-01-14T13:16:42.9020220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9020380Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9020560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9020790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9020910Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9021020Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9021020Z 
2025-01-14T13:16:42.9021080Z     def initialize_transport_state(
2025-01-14T13:16:42.9021130Z         self,
2025-01-14T13:16:42.9021180Z         simulation_state,
2025-01-14T13:16:42.9021240Z         opacity_state,
2025-01-14T13:16:42.9021290Z         macro_atom_state,
2025-01-14T13:16:42.9021340Z         plasma,
2025-01-14T13:16:42.9021390Z         no_of_packets,
2025-01-14T13:16:42.9021450Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9021490Z         iteration=0,
2025-01-14T13:16:42.9021540Z     ):
2025-01-14T13:16:42.9021650Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9021730Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9021770Z         else:
2025-01-14T13:16:42.9021830Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9021870Z     
2025-01-14T13:16:42.9021970Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9022050Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9022100Z         )
2025-01-14T13:16:42.9022140Z     
2025-01-14T13:16:42.9022240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9022330Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9022440Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9022500Z         else:
2025-01-14T13:16:42.9022550Z             continuum_state = None
2025-01-14T13:16:42.9022630Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9022710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9022790Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9022870Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9022950Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9023020Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9023080Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9023140Z         ).to_numba(
2025-01-14T13:16:42.9023560Z             macro_atom_state,
2025-01-14T13:16:42.9024440Z             self.line_interaction_type,
2025-01-14T13:16:42.9024580Z         )
2025-01-14T13:16:42.9024810Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9025570Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9025770Z         ]
2025-01-14T13:16:42.9026470Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9026490Z 
2025-01-14T13:16:42.9027440Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9028080Z ________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[20-20] _________
2025-01-14T13:16:42.9028100Z 
2025-01-14T13:16:42.9029510Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9029840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9029840Z 
2025-01-14T13:16:42.9030110Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9030240Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9030310Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9030460Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9030530Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9030580Z >       sim.run_final()
2025-01-14T13:16:42.9030580Z 
2025-01-14T13:16:42.9030640Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9030730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9030800Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9030910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9030980Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9031100Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9031190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9031190Z 
2025-01-14T13:16:42.9031410Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9031690Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9031870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9032090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9032210Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9032320Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9032320Z 
2025-01-14T13:16:42.9032390Z     def initialize_transport_state(
2025-01-14T13:16:42.9032430Z         self,
2025-01-14T13:16:42.9032490Z         simulation_state,
2025-01-14T13:16:42.9032530Z         opacity_state,
2025-01-14T13:16:42.9032590Z         macro_atom_state,
2025-01-14T13:16:42.9032630Z         plasma,
2025-01-14T13:16:42.9032680Z         no_of_packets,
2025-01-14T13:16:42.9032740Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9032780Z         iteration=0,
2025-01-14T13:16:42.9032830Z     ):
2025-01-14T13:16:42.9032930Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9033000Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9033040Z         else:
2025-01-14T13:16:42.9033100Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9033140Z     
2025-01-14T13:16:42.9033250Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9033320Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9033360Z         )
2025-01-14T13:16:42.9033480Z     
2025-01-14T13:16:42.9033590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9033680Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9033800Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9033850Z         else:
2025-01-14T13:16:42.9033900Z             continuum_state = None
2025-01-14T13:16:42.9033980Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9034060Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9034180Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9034270Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9034350Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9034410Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9034480Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9034520Z         ).to_numba(
2025-01-14T13:16:42.9034580Z             macro_atom_state,
2025-01-14T13:16:42.9034640Z             self.line_interaction_type,
2025-01-14T13:16:42.9034690Z         )
2025-01-14T13:16:42.9034760Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9035050Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9035100Z         ]
2025-01-14T13:16:42.9035350Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9035350Z 
2025-01-14T13:16:42.9035470Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9035630Z _______ ERROR at setup of TestHDFShellInfo.test_level_count_data[2-12-1] _______
2025-01-14T13:16:42.9035630Z 
2025-01-14T13:16:42.9036190Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9036470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9036480Z 
2025-01-14T13:16:42.9036540Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9036670Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9036740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9036920Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9036980Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9037040Z >       sim.run_final()
2025-01-14T13:16:42.9037040Z 
2025-01-14T13:16:42.9037090Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9037190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9037260Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9037380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9037450Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9037570Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9037660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9037660Z 
2025-01-14T13:16:42.9037870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9038040Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9038290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9038520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9038640Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9038760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9038830Z 
2025-01-14T13:16:42.9038900Z     def initialize_transport_state(
2025-01-14T13:16:42.9038940Z         self,
2025-01-14T13:16:42.9039000Z         simulation_state,
2025-01-14T13:16:42.9039050Z         opacity_state,
2025-01-14T13:16:42.9039110Z         macro_atom_state,
2025-01-14T13:16:42.9039150Z         plasma,
2025-01-14T13:16:42.9039200Z         no_of_packets,
2025-01-14T13:16:42.9039250Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9039300Z         iteration=0,
2025-01-14T13:16:42.9039340Z     ):
2025-01-14T13:16:42.9039470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9039540Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9039590Z         else:
2025-01-14T13:16:42.9039640Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9039680Z     
2025-01-14T13:16:42.9039790Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9039860Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9039910Z         )
2025-01-14T13:16:42.9039950Z     
2025-01-14T13:16:42.9040060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9040140Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9040330Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9040380Z         else:
2025-01-14T13:16:42.9040440Z             continuum_state = None
2025-01-14T13:16:42.9040520Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9040620Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9045630Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9045750Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9045830Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9045900Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9045960Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9046020Z         ).to_numba(
2025-01-14T13:16:42.9046070Z             macro_atom_state,
2025-01-14T13:16:42.9046140Z             self.line_interaction_type,
2025-01-14T13:16:42.9046180Z         )
2025-01-14T13:16:42.9046250Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9046480Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9046520Z         ]
2025-01-14T13:16:42.9046880Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9046880Z 
2025-01-14T13:16:42.9047000Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9047140Z ______ ERROR at setup of TestHDFShellInfo.test_level_count_data[3-20-20] _______
2025-01-14T13:16:42.9047150Z 
2025-01-14T13:16:42.9047690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9047980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9047980Z 
2025-01-14T13:16:42.9048050Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9048170Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9048240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9048380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9048450Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9048500Z >       sim.run_final()
2025-01-14T13:16:42.9048500Z 
2025-01-14T13:16:42.9048560Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9048650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9048900Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9049020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9049090Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9049220Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9049310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9049310Z 
2025-01-14T13:16:42.9049530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9049740Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9049940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9050180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9050300Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9050410Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9050420Z 
2025-01-14T13:16:42.9050480Z     def initialize_transport_state(
2025-01-14T13:16:42.9050530Z         self,
2025-01-14T13:16:42.9050580Z         simulation_state,
2025-01-14T13:16:42.9050840Z         opacity_state,
2025-01-14T13:16:42.9050900Z         macro_atom_state,
2025-01-14T13:16:42.9050950Z         plasma,
2025-01-14T13:16:42.9050990Z         no_of_packets,
2025-01-14T13:16:42.9051060Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9051110Z         iteration=0,
2025-01-14T13:16:42.9051160Z     ):
2025-01-14T13:16:42.9051250Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9051330Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9051370Z         else:
2025-01-14T13:16:42.9051420Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9051460Z     
2025-01-14T13:16:42.9051570Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9051650Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9051690Z         )
2025-01-14T13:16:42.9051730Z     
2025-01-14T13:16:42.9051830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9051930Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9052040Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9052100Z         else:
2025-01-14T13:16:42.9052150Z             continuum_state = None
2025-01-14T13:16:42.9052260Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9052350Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9052420Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9052500Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9052580Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9052650Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9052720Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9052760Z         ).to_numba(
2025-01-14T13:16:42.9052820Z             macro_atom_state,
2025-01-14T13:16:42.9052880Z             self.line_interaction_type,
2025-01-14T13:16:42.9052930Z         )
2025-01-14T13:16:42.9053000Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9053230Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9053290Z         ]
2025-01-14T13:16:42.9053530Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9053540Z 
2025-01-14T13:16:42.9053660Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9053820Z _____ ERROR at setup of TestShellInfoWidget.test_selection_on_shells_table _____
2025-01-14T13:16:42.9053820Z 
2025-01-14T13:16:42.9054430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9054730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9054740Z 
2025-01-14T13:16:42.9054800Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9054930Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9055130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9055290Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9055350Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9055400Z >       sim.run_final()
2025-01-14T13:16:42.9055410Z 
2025-01-14T13:16:42.9055470Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9055560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9055640Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9055750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9055830Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9056020Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9056120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9056120Z 
2025-01-14T13:16:42.9056340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9056510Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9056690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9056910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9057030Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9057140Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9057140Z 
2025-01-14T13:16:42.9057210Z     def initialize_transport_state(
2025-01-14T13:16:42.9057250Z         self,
2025-01-14T13:16:42.9057310Z         simulation_state,
2025-01-14T13:16:42.9057360Z         opacity_state,
2025-01-14T13:16:42.9057410Z         macro_atom_state,
2025-01-14T13:16:42.9057450Z         plasma,
2025-01-14T13:16:42.9057500Z         no_of_packets,
2025-01-14T13:16:42.9057740Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9057800Z         iteration=0,
2025-01-14T13:16:42.9057850Z     ):
2025-01-14T13:16:42.9057950Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9058030Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9058070Z         else:
2025-01-14T13:16:42.9058140Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9058180Z     
2025-01-14T13:16:42.9058290Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9058360Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9058410Z         )
2025-01-14T13:16:42.9058450Z     
2025-01-14T13:16:42.9058550Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9058640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9058770Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9058820Z         else:
2025-01-14T13:16:42.9058890Z             continuum_state = None
2025-01-14T13:16:42.9058970Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9059050Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9059120Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9059200Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9059280Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9059350Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9059580Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9059630Z         ).to_numba(
2025-01-14T13:16:42.9059690Z             macro_atom_state,
2025-01-14T13:16:42.9059760Z             self.line_interaction_type,
2025-01-14T13:16:42.9059800Z         )
2025-01-14T13:16:42.9059880Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9060100Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9060150Z         ]
2025-01-14T13:16:42.9060450Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9060450Z 
2025-01-14T13:16:42.9060570Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9060750Z _ ERROR at setup of TestShellInfoWidget.test_selection_on_element_count_table __
2025-01-14T13:16:42.9060750Z 
2025-01-14T13:16:42.9061810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9062340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9062350Z 
2025-01-14T13:16:42.9062420Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9062550Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9062630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9062780Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9062840Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9062890Z >       sim.run_final()
2025-01-14T13:16:42.9062890Z 
2025-01-14T13:16:42.9062950Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9063040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9063120Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9063230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9063300Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9063430Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9063520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9063560Z 
2025-01-14T13:16:42.9063780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9063940Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9064140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9064380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9064510Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9064620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9064620Z 
2025-01-14T13:16:42.9064680Z     def initialize_transport_state(
2025-01-14T13:16:42.9064730Z         self,
2025-01-14T13:16:42.9064780Z         simulation_state,
2025-01-14T13:16:42.9064840Z         opacity_state,
2025-01-14T13:16:42.9064890Z         macro_atom_state,
2025-01-14T13:16:42.9064930Z         plasma,
2025-01-14T13:16:42.9064990Z         no_of_packets,
2025-01-14T13:16:42.9065050Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9065100Z         iteration=0,
2025-01-14T13:16:42.9065140Z     ):
2025-01-14T13:16:42.9065230Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9065300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9065350Z         else:
2025-01-14T13:16:42.9065410Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9065450Z     
2025-01-14T13:16:42.9065660Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9065750Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9065790Z         )
2025-01-14T13:16:42.9065840Z     
2025-01-14T13:16:42.9065940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9066030Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9066150Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9066200Z         else:
2025-01-14T13:16:42.9066260Z             continuum_state = None
2025-01-14T13:16:42.9066370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9066460Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9066530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9066620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9066690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9066770Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9066840Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9066880Z         ).to_numba(
2025-01-14T13:16:42.9066940Z             macro_atom_state,
2025-01-14T13:16:42.9067060Z             self.line_interaction_type,
2025-01-14T13:16:42.9067110Z         )
2025-01-14T13:16:42.9067190Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9067410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9067460Z         ]
2025-01-14T13:16:42.9067720Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9067720Z 
2025-01-14T13:16:42.9067840Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9068010Z ___ ERROR at setup of TestShellInfoWidget.test_selection_on_ion_count_table ____
2025-01-14T13:16:42.9068010Z 
2025-01-14T13:16:42.9068560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-14T13:16:42.9068850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-14T13:16:42.9068860Z 
2025-01-14T13:16:42.9068920Z     @pytest.fixture(scope="session")
2025-01-14T13:16:42.9069090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-14T13:16:42.9069170Z         atomic_data = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9069310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-14T13:16:42.9069370Z         sim.last_no_of_packets = 4000
2025-01-14T13:16:42.9069420Z >       sim.run_final()
2025-01-14T13:16:42.9069430Z 
2025-01-14T13:16:42.9069490Z tardis/conftest.py:233: 
2025-01-14T13:16:42.9069580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9069650Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9069770Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9069840Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9069960Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9070040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9070050Z 
2025-01-14T13:16:42.9070260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x11c2cee70>
2025-01-14T13:16:42.9070420Z simulation_state = <tardis.model.base.SimulationState object at 0x146bd9250>
2025-01-14T13:16:42.9070600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x146353650>
2025-01-14T13:16:42.9070820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x146353b60>
2025-01-14T13:16:42.9071840Z plasma = <tardis.plasma.base.BasePlasma object at 0x146bba6f0>
2025-01-14T13:16:42.9072010Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9072010Z 
2025-01-14T13:16:42.9072090Z     def initialize_transport_state(
2025-01-14T13:16:42.9072130Z         self,
2025-01-14T13:16:42.9072190Z         simulation_state,
2025-01-14T13:16:42.9072240Z         opacity_state,
2025-01-14T13:16:42.9072290Z         macro_atom_state,
2025-01-14T13:16:42.9072340Z         plasma,
2025-01-14T13:16:42.9072390Z         no_of_packets,
2025-01-14T13:16:42.9072520Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9072570Z         iteration=0,
2025-01-14T13:16:42.9072620Z     ):
2025-01-14T13:16:42.9072710Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9072780Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9072900Z         else:
2025-01-14T13:16:42.9072990Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9073050Z     
2025-01-14T13:16:42.9073160Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9073960Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9074050Z         )
2025-01-14T13:16:42.9074420Z     
2025-01-14T13:16:42.9074530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9074630Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9074750Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9074810Z         else:
2025-01-14T13:16:42.9074870Z             continuum_state = None
2025-01-14T13:16:42.9074960Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9075200Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9075280Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9075360Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9075440Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9075510Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9075590Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9075640Z         ).to_numba(
2025-01-14T13:16:42.9075700Z             macro_atom_state,
2025-01-14T13:16:42.9075770Z             self.line_interaction_type,
2025-01-14T13:16:42.9075820Z         )
2025-01-14T13:16:42.9075890Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9076180Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9076230Z         ]
2025-01-14T13:16:42.9076480Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9076480Z 
2025-01-14T13:16:42.9076590Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9076680Z =================================== FAILURES ===================================
2025-01-14T13:16:42.9076810Z _______________________ test_run_tardis_from_config_obj ________________________
2025-01-14T13:16:42.9076810Z 
2025-01-14T13:16:42.9077120Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.9077280Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.9077280Z 
2025-01-14T13:16:42.9077350Z     def test_run_tardis_from_config_obj(
2025-01-14T13:16:42.9077440Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:16:42.9077490Z     ):
2025-01-14T13:16:42.9077530Z         """
2025-01-14T13:16:42.9077690Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:16:42.9077730Z         as arguments
2025-01-14T13:16:42.9077780Z         """
2025-01-14T13:16:42.9077850Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.9077980Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:16:42.9078110Z         )
2025-01-14T13:16:42.9078190Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.9078230Z     
2025-01-14T13:16:42.9078280Z         try:
2025-01-14T13:16:42.9078340Z >           sim = run_tardis(config)
2025-01-14T13:16:42.9078340Z 
2025-01-14T13:16:42.9078400Z tardis/tests/test_tardis_full.py:28: 
2025-01-14T13:16:42.9078500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9078560Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:42.9078630Z     simulation.run_convergence()
2025-01-14T13:16:42.9078920Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:42.9079060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9079130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9079250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9079340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9079350Z 
2025-01-14T13:16:42.9079550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x30d305d00>
2025-01-14T13:16:42.9079710Z simulation_state = <tardis.model.base.SimulationState object at 0x305b11430>
2025-01-14T13:16:42.9079980Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30523ab10>
2025-01-14T13:16:42.9080200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x321de5af0>
2025-01-14T13:16:42.9080490Z plasma = <tardis.plasma.base.BasePlasma object at 0x321de6300>
2025-01-14T13:16:42.9080610Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.9080620Z 
2025-01-14T13:16:42.9080680Z     def initialize_transport_state(
2025-01-14T13:16:42.9080730Z         self,
2025-01-14T13:16:42.9080780Z         simulation_state,
2025-01-14T13:16:42.9080840Z         opacity_state,
2025-01-14T13:16:42.9080890Z         macro_atom_state,
2025-01-14T13:16:42.9080930Z         plasma,
2025-01-14T13:16:42.9080980Z         no_of_packets,
2025-01-14T13:16:42.9081040Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9081080Z         iteration=0,
2025-01-14T13:16:42.9081130Z     ):
2025-01-14T13:16:42.9081230Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9081300Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9081340Z         else:
2025-01-14T13:16:42.9081390Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9081600Z     
2025-01-14T13:16:42.9081710Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9081780Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9081820Z         )
2025-01-14T13:16:42.9081870Z     
2025-01-14T13:16:42.9081970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9082060Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9082190Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9082230Z         else:
2025-01-14T13:16:42.9082300Z             continuum_state = None
2025-01-14T13:16:42.9082370Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9082470Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9082530Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9082620Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9082690Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9082760Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9082830Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9082880Z         ).to_numba(
2025-01-14T13:16:42.9082930Z             macro_atom_state,
2025-01-14T13:16:42.9082990Z             self.line_interaction_type,
2025-01-14T13:16:42.9083030Z         )
2025-01-14T13:16:42.9083110Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9083410Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9083450Z         ]
2025-01-14T13:16:42.9083710Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9083710Z 
2025-01-14T13:16:42.9083830Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9083830Z 
2025-01-14T13:16:42.9083960Z During handling of the above exception, another exception occurred:
2025-01-14T13:16:42.9083970Z 
2025-01-14T13:16:42.9084290Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-14T13:16:42.9084590Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-14T13:16:42.9084600Z 
2025-01-14T13:16:42.9084670Z     def test_run_tardis_from_config_obj(
2025-01-14T13:16:42.9084760Z         atomic_data_fname, example_configuration_dir: Path
2025-01-14T13:16:42.9084810Z     ):
2025-01-14T13:16:42.9084860Z         """
2025-01-14T13:16:42.9085010Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-14T13:16:42.9085050Z         as arguments
2025-01-14T13:16:42.9085190Z         """
2025-01-14T13:16:42.9085260Z         config = Configuration.from_yaml(
2025-01-14T13:16:42.9085380Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-14T13:16:42.9085420Z         )
2025-01-14T13:16:42.9085500Z         config["atom_data"] = atomic_data_fname
2025-01-14T13:16:42.9085540Z     
2025-01-14T13:16:42.9085590Z         try:
2025-01-14T13:16:42.9085650Z             sim = run_tardis(config)
2025-01-14T13:16:42.9085700Z         except Exception as e:
2025-01-14T13:16:42.9085760Z >           pytest.fail(str(e.args[0]))
2025-01-14T13:16:42.9085980Z E           Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9085990Z 
2025-01-14T13:16:42.9086060Z tardis/tests/test_tardis_full.py:30: Failed
2025-01-14T13:16:42.9086180Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:16:42.9086540Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9086590Z 	
2025-01-14T13:16:42.9087030Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-14T13:16:42.9087160Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9087540Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-14T13:16:42.9087660Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9088040Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-14T13:16:42.9088230Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.9088570Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.9088710Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9088870Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.9088990Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9089040Z 	
2025-01-14T13:16:42.9089150Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-14T13:16:42.9089430Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:16:42.9089560Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-14T13:16:42.9089840Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-14T13:16:42.9090290Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-14T13:16:42.9090650Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-14T13:16:42.9091050Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.9091230Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.9091350Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.9091410Z 	Starting iteration 1 of 5
2025-01-14T13:16:42.9091530Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-14T13:16:42.9091540Z 
2025-01-14T13:16:42.9092080Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:16:42.9092290Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x303061f70>
2025-01-14T13:16:42.9092630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:16:42.9092630Z 
2025-01-14T13:16:42.9092700Z     def test_montecarlo_main_loop(
2025-01-14T13:16:42.9092760Z         montecarlo_main_loop_config,
2025-01-14T13:16:42.9092820Z         regression_data,
2025-01-14T13:16:42.9092860Z         atomic_dataset,
2025-01-14T13:16:42.9092910Z     ):
2025-01-14T13:16:42.9092990Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9093100Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:16:42.9093170Z             montecarlo_main_loop_config,
2025-01-14T13:16:42.9093230Z             atom_data=atomic_dataset,
2025-01-14T13:16:42.9093290Z             virtual_packet_logging=False,
2025-01-14T13:16:42.9093350Z             legacy_mode_enabled=True,
2025-01-14T13:16:42.9093400Z         )
2025-01-14T13:16:42.9093500Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:16:42.9093580Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:16:42.9093590Z 
2025-01-14T13:16:42.9093730Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:27: 
2025-01-14T13:16:42.9093870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9093940Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9094060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9094130Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9094250Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9094340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9094340Z 
2025-01-14T13:16:42.9094550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17848a210>
2025-01-14T13:16:42.9094810Z simulation_state = <tardis.model.base.SimulationState object at 0x30e82eb10>
2025-01-14T13:16:42.9095010Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x178592ba0>
2025-01-14T13:16:42.9095240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1785920f0>
2025-01-14T13:16:42.9095360Z plasma = <tardis.plasma.base.BasePlasma object at 0x1730f1af0>
2025-01-14T13:16:42.9095490Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.9095490Z 
2025-01-14T13:16:42.9095560Z     def initialize_transport_state(
2025-01-14T13:16:42.9095600Z         self,
2025-01-14T13:16:42.9095650Z         simulation_state,
2025-01-14T13:16:42.9095700Z         opacity_state,
2025-01-14T13:16:42.9095760Z         macro_atom_state,
2025-01-14T13:16:42.9095800Z         plasma,
2025-01-14T13:16:42.9097820Z         no_of_packets,
2025-01-14T13:16:42.9098460Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9098660Z         iteration=0,
2025-01-14T13:16:42.9098810Z     ):
2025-01-14T13:16:42.9099170Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9099410Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9099610Z         else:
2025-01-14T13:16:42.9099800Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9099990Z     
2025-01-14T13:16:42.9100860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9101160Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9101360Z         )
2025-01-14T13:16:42.9101510Z     
2025-01-14T13:16:42.9101810Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9102090Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9102460Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9102620Z         else:
2025-01-14T13:16:42.9102800Z             continuum_state = None
2025-01-14T13:16:42.9103060Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9103350Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9105220Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9105530Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9105740Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9105960Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9106180Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9106320Z         ).to_numba(
2025-01-14T13:16:42.9106490Z             macro_atom_state,
2025-01-14T13:16:42.9106670Z             self.line_interaction_type,
2025-01-14T13:16:42.9106810Z         )
2025-01-14T13:16:42.9107030Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9108240Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9108390Z         ]
2025-01-14T13:16:42.9109460Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9109490Z 
2025-01-14T13:16:42.9110040Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9112070Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:16:42.9113440Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.9114480Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.9114710Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9114880Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.9115000Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9115060Z 	
2025-01-14T13:16:42.9115140Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:42.9115210Z 	Simulation took 0.00 s
2025-01-14T13:16:42.9115320Z  ([1mbase.py[0m:542)
2025-01-14T13:16:42.9115470Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9115520Z 	
2025-01-14T13:16:42.9115670Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:16:42.9115800Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:16:42.9117240Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.9120430Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.9120550Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:16:42.9120630Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:42.9120690Z 	Simulation took 0.00 s
2025-01-14T13:16:42.9121300Z 
2025-01-14T13:16:42.9122840Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.9122980Z 	Starting iteration 1 of 1
2025-01-14T13:16:42.9123570Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-14T13:16:42.9123580Z 
2025-01-14T13:16:42.9126950Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:16:42.9128380Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3030f6600>
2025-01-14T13:16:42.9129400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:16:42.9129430Z 
2025-01-14T13:16:42.9129710Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-14T13:16:42.9129980Z         montecarlo_main_loop_config,
2025-01-14T13:16:42.9130360Z         regression_data,
2025-01-14T13:16:42.9130570Z         atomic_dataset,
2025-01-14T13:16:42.9130760Z     ):
2025-01-14T13:16:42.9131190Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:16:42.9132220Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-14T13:16:42.9132500Z     
2025-01-14T13:16:42.9132810Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-14T13:16:42.9133000Z             montecarlo_main_loop_config,
2025-01-14T13:16:42.9133180Z             atom_data=atomic_dataset,
2025-01-14T13:16:42.9133400Z             virtual_packet_logging=True,
2025-01-14T13:16:42.9133630Z             legacy_mode_enabled=True,
2025-01-14T13:16:42.9133840Z         )
2025-01-14T13:16:42.9134190Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-14T13:16:42.9134530Z >       montecarlo_main_loop_simulation.run_final()
2025-01-14T13:16:42.9134550Z 
2025-01-14T13:16:42.9135020Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:80: 
2025-01-14T13:16:42.9135330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9135560Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:42.9135950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:42.9152900Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9153140Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9153690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9153700Z 
2025-01-14T13:16:42.9153920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x125c3fef0>
2025-01-14T13:16:42.9154090Z simulation_state = <tardis.model.base.SimulationState object at 0x1784888c0>
2025-01-14T13:16:42.9154270Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1718e6f60>
2025-01-14T13:16:42.9154590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1718e6990>
2025-01-14T13:16:42.9154730Z plasma = <tardis.plasma.base.BasePlasma object at 0x155fd1250>
2025-01-14T13:16:42.9154850Z no_of_packets = 100000, no_of_virtual_packets = 5, iteration = 0
2025-01-14T13:16:42.9154860Z 
2025-01-14T13:16:42.9154930Z     def initialize_transport_state(
2025-01-14T13:16:42.9154980Z         self,
2025-01-14T13:16:42.9155040Z         simulation_state,
2025-01-14T13:16:42.9155090Z         opacity_state,
2025-01-14T13:16:42.9155150Z         macro_atom_state,
2025-01-14T13:16:42.9155200Z         plasma,
2025-01-14T13:16:42.9155250Z         no_of_packets,
2025-01-14T13:16:42.9155300Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9155350Z         iteration=0,
2025-01-14T13:16:42.9155390Z     ):
2025-01-14T13:16:42.9155500Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9155570Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9155620Z         else:
2025-01-14T13:16:42.9155920Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9155980Z     
2025-01-14T13:16:42.9156090Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9156530Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9156610Z         )
2025-01-14T13:16:42.9156660Z     
2025-01-14T13:16:42.9156770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9156860Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9157120Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9157160Z         else:
2025-01-14T13:16:42.9157230Z             continuum_state = None
2025-01-14T13:16:42.9157310Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9157400Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9157470Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9157560Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9157630Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9157700Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9157760Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9157930Z         ).to_numba(
2025-01-14T13:16:42.9157980Z             macro_atom_state,
2025-01-14T13:16:42.9158050Z             self.line_interaction_type,
2025-01-14T13:16:42.9158090Z         )
2025-01-14T13:16:42.9158170Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9158400Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9158440Z         ]
2025-01-14T13:16:42.9158700Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9158700Z 
2025-01-14T13:16:42.9158820Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9158960Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:16:42.9159460Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:42.9159820Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:42.9159960Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9160140Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:42.9160360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9160410Z 	
2025-01-14T13:16:42.9160480Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:42.9160540Z 	Simulation took 0.00 s
2025-01-14T13:16:42.9160610Z  ([1mbase.py[0m:542)
2025-01-14T13:16:42.9160730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:42.9160870Z 	
2025-01-14T13:16:42.9160980Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:16:42.9161110Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:16:42.9161520Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:42.9161700Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:42.9161780Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:16:42.9161840Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:42.9161900Z 	Simulation took 0.00 s
2025-01-14T13:16:42.9161900Z 
2025-01-14T13:16:42.9161970Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:42.9162040Z 	Starting iteration 1 of 1
2025-01-14T13:16:42.9162220Z _ test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] _
2025-01-14T13:16:42.9162220Z 
2025-01-14T13:16:42.9162380Z expected = 'interaction_type_in_use', obtained = 'interaction_type_to_check'
2025-01-14T13:16:42.9162750Z request = <FixtureRequest for <Function test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check]>>
2025-01-14T13:16:42.9162750Z 
2025-01-14T13:16:42.9162820Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.9162880Z         "expected,obtained",
2025-01-14T13:16:42.9162930Z         [
2025-01-14T13:16:42.9162970Z             (
2025-01-14T13:16:42.9163040Z                 "interaction_type_in_use",
2025-01-14T13:16:42.9163260Z                 "interaction_type_to_check",
2025-01-14T13:16:42.9163310Z             ),
2025-01-14T13:16:42.9163400Z             (
2025-01-14T13:16:42.9163460Z                 "shell_id_in_use",
2025-01-14T13:16:42.9163520Z                 "shell_id_to_check",
2025-01-14T13:16:42.9163560Z             ),
2025-01-14T13:16:42.9163610Z             (
2025-01-14T13:16:42.9163660Z                 "r_in_use",
2025-01-14T13:16:42.9163710Z                 "r_to_check",
2025-01-14T13:16:42.9163750Z             ),
2025-01-14T13:16:42.9163830Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.9163880Z         ],
2025-01-14T13:16:42.9163920Z     )
2025-01-14T13:16:42.9164050Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.9164210Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.9164210Z 
2025-01-14T13:16:42.9164400Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.9164480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9164710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9164800Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9165050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9165120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9165320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9165420Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9165660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9165730Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9165920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9166010Z     raise exc
2025-01-14T13:16:42.9166210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9166280Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9166470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9166600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9166790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9166950Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9167150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9167290Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9167560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9167650Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9167970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9168020Z     yield
2025-01-14T13:16:42.9168400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9168650Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9168870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9168910Z     yield
2025-01-14T13:16:42.9169150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9169200Z     return (yield)
2025-01-14T13:16:42.9169450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9169560Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9169840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9169890Z     yield
2025-01-14T13:16:42.9170110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9170180Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9170370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9170420Z     raise exc
2025-01-14T13:16:42.9170610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9170800Z     col.setup()
2025-01-14T13:16:42.9170990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9171050Z     self._request._fillfixtures()
2025-01-14T13:16:42.9171270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9171380Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9171610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9171700Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9171950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9172020Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9172220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9172320Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9172560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9172680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9172890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9172940Z     raise exc
2025-01-14T13:16:42.9173140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9173210Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9173540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9173680Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9173880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9174050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9174260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9174410Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9174710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9174800Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9175130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9175180Z     yield
2025-01-14T13:16:42.9175520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9175610Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9175840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9175890Z     yield
2025-01-14T13:16:42.9176130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9176190Z     return (yield)
2025-01-14T13:16:42.9176680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9176820Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9177120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9177170Z     yield
2025-01-14T13:16:42.9177400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9177480Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9177670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9177830Z     raise exc
2025-01-14T13:16:42.9178020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9178070Z     col.setup()
2025-01-14T13:16:42.9178270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9178330Z     self._request._fillfixtures()
2025-01-14T13:16:42.9178560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9178660Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9178890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9178980Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9179370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9179450Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9179650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9179750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9180120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9180190Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9180380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9180430Z     raise exc
2025-01-14T13:16:42.9180630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9180700Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9180890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9181020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9181210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9181360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9181560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9181690Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9182090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9182170Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9182570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9182620Z     yield
2025-01-14T13:16:42.9182860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9182940Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9183150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9183200Z     yield
2025-01-14T13:16:42.9183450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9183500Z     return (yield)
2025-01-14T13:16:42.9183760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9183840Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9184120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9184170Z     yield
2025-01-14T13:16:42.9184390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9184530Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9184710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9184760Z     raise exc
2025-01-14T13:16:42.9184950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9185000Z     col.setup()
2025-01-14T13:16:42.9185200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9185260Z     self._request._fillfixtures()
2025-01-14T13:16:42.9185470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9185570Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9185800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9185890Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9186120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9186190Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9186420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9186520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9186760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9186830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9187030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9187090Z     raise exc
2025-01-14T13:16:42.9187280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9187350Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9187550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9187690Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9187880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9188040Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9188240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9188520Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9188890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9188980Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9189280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9189320Z     yield
2025-01-14T13:16:42.9189550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9189630Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9189870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9189920Z     yield
2025-01-14T13:16:42.9190140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9190190Z     return (yield)
2025-01-14T13:16:42.9190440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9190520Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9190910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9191040Z     yield
2025-01-14T13:16:42.9191260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9191330Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9191520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9191560Z     raise exc
2025-01-14T13:16:42.9191750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9191800Z     col.setup()
2025-01-14T13:16:42.9191990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9192050Z     self._request._fillfixtures()
2025-01-14T13:16:42.9192270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9192380Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9192600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9192690Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9192920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9193030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9193230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9193330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9193560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9193640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9193990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9194040Z     raise exc
2025-01-14T13:16:42.9194240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9194300Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9194630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9194760Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9194960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9195110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9195320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9195620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9195920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9196010Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9196330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9196380Z     yield
2025-01-14T13:16:42.9196630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9196710Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9196910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9196960Z     yield
2025-01-14T13:16:42.9197190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9197240Z     return (yield)
2025-01-14T13:16:42.9197490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9197740Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9198030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9198080Z     yield
2025-01-14T13:16:42.9198330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9198400Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9198870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9198930Z     raise exc
2025-01-14T13:16:42.9199120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9199170Z     col.setup()
2025-01-14T13:16:42.9199380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9199440Z     self._request._fillfixtures()
2025-01-14T13:16:42.9199680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9199910Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9200140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9200300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9200540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9200610Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9200810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9200910Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9201150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9201220Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9201420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9201470Z     raise exc
2025-01-14T13:16:42.9201660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9201740Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9201930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9202060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9202260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9202490Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9202700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9202840Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9203110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9203200Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9203610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9203670Z     yield
2025-01-14T13:16:42.9203900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9203980Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9204190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9204240Z     yield
2025-01-14T13:16:42.9204470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9204530Z     return (yield)
2025-01-14T13:16:42.9204850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9204930Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9205230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9205290Z     yield
2025-01-14T13:16:42.9205520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9205590Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9205780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9205830Z     raise exc
2025-01-14T13:16:42.9206030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9206070Z     col.setup()
2025-01-14T13:16:42.9206270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9206330Z     self._request._fillfixtures()
2025-01-14T13:16:42.9206550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9206760Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9207140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9207240Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9207480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9207550Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9207760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9207860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9208100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9208180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9208380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9208430Z     raise exc
2025-01-14T13:16:42.9208630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9208690Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9208890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9209010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9209320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9209480Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9209690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9209830Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9210100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9210220Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9210540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9210590Z     yield
2025-01-14T13:16:42.9210820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9210910Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9211120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9211170Z     yield
2025-01-14T13:16:42.9211470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9211520Z     return (yield)
2025-01-14T13:16:42.9212910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9213520Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9214430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9214690Z     yield
2025-01-14T13:16:42.9215340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9215540Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9216080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9216220Z     raise exc
2025-01-14T13:16:42.9216750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9216900Z     col.setup()
2025-01-14T13:16:42.9217430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9218290Z     self._request._fillfixtures()
2025-01-14T13:16:42.9218910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9219080Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9219310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9219410Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9219660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9219740Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9219940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9220060Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9220300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9220390Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9220590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9220640Z     raise exc
2025-01-14T13:16:42.9220840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9220910Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9221460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9221600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9221800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9221970Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9222180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9222540Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9222850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9222940Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9223250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9223300Z     yield
2025-01-14T13:16:42.9223540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9223620Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9223910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9223960Z     yield
2025-01-14T13:16:42.9224180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9224240Z     return (yield)
2025-01-14T13:16:42.9224500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9224580Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9224870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9224910Z     yield
2025-01-14T13:16:42.9225150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9225220Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9225410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9225460Z     raise exc
2025-01-14T13:16:42.9225650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9225750Z     col.setup()
2025-01-14T13:16:42.9225950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9226010Z     self._request._fillfixtures()
2025-01-14T13:16:42.9226230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9226340Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9226820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9226920Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9227150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9227230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9227430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9227540Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9227780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9227850Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9228060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9228110Z     raise exc
2025-01-14T13:16:42.9228500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9228570Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9228890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9229020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9229210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9229360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9229590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9229720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9229990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9230080Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9230380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9230430Z     yield
2025-01-14T13:16:42.9230650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9230880Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9231080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9231130Z     yield
2025-01-14T13:16:42.9231360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9231420Z     return (yield)
2025-01-14T13:16:42.9231670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9231750Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9232030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9232080Z     yield
2025-01-14T13:16:42.9232310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9232380Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9232570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9232650Z     raise exc
2025-01-14T13:16:42.9232840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9232890Z     col.setup()
2025-01-14T13:16:42.9233080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9233140Z     self._request._fillfixtures()
2025-01-14T13:16:42.9233360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9233470Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9234250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9234350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9234720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9234800Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9235000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9235100Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9235510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9235620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9236070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9236120Z     raise exc
2025-01-14T13:16:42.9236650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9237110Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9237730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9238090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9239390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9239860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9240900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9241090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9241360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9241450Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9241770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9248150Z     yield
2025-01-14T13:16:42.9248420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9248510Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9248720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9248770Z     yield
2025-01-14T13:16:42.9248990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9249040Z     return (yield)
2025-01-14T13:16:42.9249300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9249380Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9249660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9249700Z     yield
2025-01-14T13:16:42.9249930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9250200Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9250390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9250440Z     raise exc
2025-01-14T13:16:42.9250660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9250710Z     col.setup()
2025-01-14T13:16:42.9250900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9250970Z     self._request._fillfixtures()
2025-01-14T13:16:42.9251280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9251400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9251630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9251730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9251970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9252050Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9252250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9252350Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9252590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9252830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9253040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9253090Z     raise exc
2025-01-14T13:16:42.9253290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9253350Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9253550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9253750Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9253960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9254110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9254410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9254570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9254840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9255060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9255360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9255420Z     yield
2025-01-14T13:16:42.9255650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9255730Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9255930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9255990Z     yield
2025-01-14T13:16:42.9256220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9256270Z     return (yield)
2025-01-14T13:16:42.9256520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9256590Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9256880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9256960Z     yield
2025-01-14T13:16:42.9257190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9257260Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9257540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9257600Z     raise exc
2025-01-14T13:16:42.9257780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9257820Z     col.setup()
2025-01-14T13:16:42.9258010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9258070Z     self._request._fillfixtures()
2025-01-14T13:16:42.9258280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9258390Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9258610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9258700Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9258940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9259010Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9259200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9259410Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9259650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9259720Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9259920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9259960Z     raise exc
2025-01-14T13:16:42.9260160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9260260Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9260460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9260590Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9260880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9261050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9261250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9261390Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9261780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9261870Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9262170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9262220Z     yield
2025-01-14T13:16:42.9262450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9262530Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9262750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9262790Z     yield
2025-01-14T13:16:42.9263020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9263070Z     return (yield)
2025-01-14T13:16:42.9263320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9263400Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9264550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9264780Z     yield
2025-01-14T13:16:42.9265480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9265680Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9266210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9266360Z     raise exc
2025-01-14T13:16:42.9266920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9267020Z     col.setup()
2025-01-14T13:16:42.9267220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9267300Z     self._request._fillfixtures()
2025-01-14T13:16:42.9267520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9268080Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9268510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9268620Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9268870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9268950Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9269490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9269600Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9269840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9269910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9270110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9270160Z     raise exc
2025-01-14T13:16:42.9270410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9270470Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9270670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9270800Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9270990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9271150Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9271570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9271720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9271990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9272080Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9272400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9272450Z     yield
2025-01-14T13:16:42.9272670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9272760Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9272970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9273020Z     yield
2025-01-14T13:16:42.9273250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9273300Z     return (yield)
2025-01-14T13:16:42.9273560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9273690Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9273970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9274020Z     yield
2025-01-14T13:16:42.9274250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9274320Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9274510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9274560Z     raise exc
2025-01-14T13:16:42.9274890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9274940Z     col.setup()
2025-01-14T13:16:42.9275120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9275200Z     self._request._fillfixtures()
2025-01-14T13:16:42.9275400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9275520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9275730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9275830Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9276140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9276220Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9276420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9276520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9276760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9276830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9277140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9277190Z     raise exc
2025-01-14T13:16:42.9277390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9277450Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9277650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9277780Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9277960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9278190Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9278380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9278940Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9279240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9279330Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9279630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9279690Z     yield
2025-01-14T13:16:42.9279920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9279990Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9280210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9280250Z     yield
2025-01-14T13:16:42.9280480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9280720Z     return (yield)
2025-01-14T13:16:42.9280970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9281050Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9281330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9281370Z     yield
2025-01-14T13:16:42.9281600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9281670Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9281850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9281900Z     raise exc
2025-01-14T13:16:42.9282080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9282140Z     col.setup()
2025-01-14T13:16:42.9282320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9282380Z     self._request._fillfixtures()
2025-01-14T13:16:42.9282590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9282700Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9283010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9283110Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9283350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9283420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9283620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9284380Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9285240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9285340Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9285560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9285610Z     raise exc
2025-01-14T13:16:42.9285820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9285890Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9286090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9286330Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9286520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9286670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9286870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9287000Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9287270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9287360Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9287660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9287700Z     yield
2025-01-14T13:16:42.9287940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9288010Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9288220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9288300Z     yield
2025-01-14T13:16:42.9288530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9288580Z     return (yield)
2025-01-14T13:16:42.9288830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9288900Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9289190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9289230Z     yield
2025-01-14T13:16:42.9289450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9289530Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9289710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9289760Z     raise exc
2025-01-14T13:16:42.9290500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9290760Z     col.setup()
2025-01-14T13:16:42.9290950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9291020Z     self._request._fillfixtures()
2025-01-14T13:16:42.9291230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9291440Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9291660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9292240Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9292980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9293200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9294270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9294550Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9295130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9295230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9295890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9296080Z     raise exc
2025-01-14T13:16:42.9296660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9297250Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9297790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9298160Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9298760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9299200Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9299740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9300120Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9300860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9301170Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9302020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9302170Z     yield
2025-01-14T13:16:42.9303000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9303470Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9304050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9304490Z     yield
2025-01-14T13:16:42.9304790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9304840Z     return (yield)
2025-01-14T13:16:42.9305110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9305190Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9305470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9305520Z     yield
2025-01-14T13:16:42.9305740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9305820Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9306010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9306060Z     raise exc
2025-01-14T13:16:42.9306230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9306280Z     col.setup()
2025-01-14T13:16:42.9307150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9307970Z     self._request._fillfixtures()
2025-01-14T13:16:42.9309040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9309180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9309410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9309500Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9309950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9310030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9310240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9310280Z     raise exc
2025-01-14T13:16:42.9310480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9310540Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9310740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9310870Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9311340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9311510Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9311720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9311850Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9312120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9312210Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9312520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9312570Z     yield
2025-01-14T13:16:42.9313460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9313800Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9314380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9314750Z     yield
2025-01-14T13:16:42.9315330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9315400Z     return (yield)
2025-01-14T13:16:42.9315660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9315740Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9316020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9316070Z     yield
2025-01-14T13:16:42.9316310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9316380Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9316570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9316620Z     raise exc
2025-01-14T13:16:42.9316810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9316860Z     col.setup()
2025-01-14T13:16:42.9317050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9317110Z     self._request._fillfixtures()
2025-01-14T13:16:42.9317320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9317420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9317790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9317890Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9318130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9318210Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9318410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9318580Z     raise exc
2025-01-14T13:16:42.9319050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9319120Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9319320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9319460Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9319650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9319810Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9320100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9320240Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9320520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9320610Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9320910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9320970Z     yield
2025-01-14T13:16:42.9321200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9321280Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9321480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9321520Z     yield
2025-01-14T13:16:42.9321750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9321800Z     return (yield)
2025-01-14T13:16:42.9322050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9322650Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9323470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9323610Z     yield
2025-01-14T13:16:42.9324210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9324310Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9324500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9324550Z     raise exc
2025-01-14T13:16:42.9324740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9324790Z     col.setup()
2025-01-14T13:16:42.9324980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9325040Z     self._request._fillfixtures()
2025-01-14T13:16:42.9325260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9325840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9326520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9326790Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9328000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9328240Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9329140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9329320Z     raise exc
2025-01-14T13:16:42.9329830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9329920Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9330260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9330390Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9330590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9330740Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9330950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9331080Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9331460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9331550Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9331850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9331900Z     yield
2025-01-14T13:16:42.9332120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9332200Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9332410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9332460Z     yield
2025-01-14T13:16:42.9332690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9332740Z     return (yield)
2025-01-14T13:16:42.9332990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9333070Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9333360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9333460Z     yield
2025-01-14T13:16:42.9333690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9333760Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9333950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9333990Z     raise exc
2025-01-14T13:16:42.9334180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9334230Z     col.setup()
2025-01-14T13:16:42.9334440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9334510Z     self._request._fillfixtures()
2025-01-14T13:16:42.9334730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9334840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9335060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9335150Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9335380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9335850Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9338260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9338450Z     raise exc
2025-01-14T13:16:42.9339000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9339210Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9339740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9340250Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9341000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9341430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9342090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9342450Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9343820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9344080Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9344850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9345640Z     yield
2025-01-14T13:16:42.9346550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9346830Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9347410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9347550Z     yield
2025-01-14T13:16:42.9348100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9348200Z     return (yield)
2025-01-14T13:16:42.9348560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9348650Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9349260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9349460Z     yield
2025-01-14T13:16:42.9350210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9350670Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9351190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9351450Z     raise exc
2025-01-14T13:16:42.9351960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9352110Z     col.setup()
2025-01-14T13:16:42.9352630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9352810Z     self._request._fillfixtures()
2025-01-14T13:16:42.9353390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9353670Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9354270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9354730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9355170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9355250Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9355450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9355500Z     raise exc
2025-01-14T13:16:42.9355700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9356150Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9356360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9358200Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9358920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9360670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9362750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9363160Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9364480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9364620Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9364940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9364990Z     yield
2025-01-14T13:16:42.9365220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9365580Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9365790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9365840Z     yield
2025-01-14T13:16:42.9366080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9366130Z     return (yield)
2025-01-14T13:16:42.9366370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9366450Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9366740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9366780Z     yield
2025-01-14T13:16:42.9367000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9367080Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9367260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9367310Z     raise exc
2025-01-14T13:16:42.9367560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9367620Z     col.setup()
2025-01-14T13:16:42.9367810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9367870Z     self._request._fillfixtures()
2025-01-14T13:16:42.9368090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9368190Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9368410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9368500Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9368730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9368800Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9369010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9369110Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9369340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9369420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9369610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9369660Z     raise exc
2025-01-14T13:16:42.9371840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9371970Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9372160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9372290Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9372480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9372810Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9373020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9373150Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9373420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9373500Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9373810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9373940Z     yield
2025-01-14T13:16:42.9374170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9374250Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9374460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9374510Z     yield
2025-01-14T13:16:42.9374730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9374780Z     return (yield)
2025-01-14T13:16:42.9375040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9375120Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9375410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9380990Z     yield
2025-01-14T13:16:42.9381240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9381310Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9381650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9381710Z     raise exc
2025-01-14T13:16:42.9381900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9381950Z     col.setup()
2025-01-14T13:16:42.9382140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9382200Z     self._request._fillfixtures()
2025-01-14T13:16:42.9382430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9382530Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9382750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9382840Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9383080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9383160Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9383360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9383460Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9383680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9383870Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9384080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9384130Z     raise exc
2025-01-14T13:16:42.9384320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9384390Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9384580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9384760Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9384960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9385120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9386060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9386550Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9387430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9387810Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9388290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9388340Z     yield
2025-01-14T13:16:42.9388570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9388650Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9388860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9388900Z     yield
2025-01-14T13:16:42.9389130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9389190Z     return (yield)
2025-01-14T13:16:42.9389440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9389510Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9389790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9389840Z     yield
2025-01-14T13:16:42.9390060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9390190Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9390380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9390430Z     raise exc
2025-01-14T13:16:42.9390630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9390680Z     col.setup()
2025-01-14T13:16:42.9390880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9390940Z     self._request._fillfixtures()
2025-01-14T13:16:42.9391170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9391280Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9391500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9391600Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9391840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9391920Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9392110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9392210Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9393790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9393900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9394100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9394150Z     raise exc
2025-01-14T13:16:42.9394350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9394420Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9394660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9394800Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9394990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9395280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9395480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9395620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9395950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9396410Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9396760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9396810Z     yield
2025-01-14T13:16:42.9397050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9397130Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9397340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9397390Z     yield
2025-01-14T13:16:42.9397620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9397670Z     return (yield)
2025-01-14T13:16:42.9397930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9398020Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9398300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9398490Z     yield
2025-01-14T13:16:42.9398720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9398800Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9399090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9399150Z     raise exc
2025-01-14T13:16:42.9399340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9399390Z     col.setup()
2025-01-14T13:16:42.9399590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9399650Z     self._request._fillfixtures()
2025-01-14T13:16:42.9399870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9399970Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9400190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9400290Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9400530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9401200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9402660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9402820Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9403070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9403150Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9403350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9403400Z     raise exc
2025-01-14T13:16:42.9403650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9403730Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9403930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9404060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9404250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9404410Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9404610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9405280Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9406110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9406220Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9406540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9406580Z     yield
2025-01-14T13:16:42.9406810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9406890Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9407100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9407150Z     yield
2025-01-14T13:16:42.9407400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9407460Z     return (yield)
2025-01-14T13:16:42.9407710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9407860Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9408140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9408190Z     yield
2025-01-14T13:16:42.9408420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9408490Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9408700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9408740Z     raise exc
2025-01-14T13:16:42.9408930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9408980Z     col.setup()
2025-01-14T13:16:42.9409180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9409240Z     self._request._fillfixtures()
2025-01-14T13:16:42.9409450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9409550Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9409780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9409870Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9410200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9410280Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9410480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9410580Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9410820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9410900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9411240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9411300Z     raise exc
2025-01-14T13:16:42.9411500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9411570Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9411770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9411900Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9412100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9412330Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9412530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9412670Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9412950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9413040Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9413350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9413410Z     yield
2025-01-14T13:16:42.9413640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9413710Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9413930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9413980Z     yield
2025-01-14T13:16:42.9414210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9414380Z     return (yield)
2025-01-14T13:16:42.9415130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9415260Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9415550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9415590Z     yield
2025-01-14T13:16:42.9415830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9415900Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9416090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9416140Z     raise exc
2025-01-14T13:16:42.9416330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9416380Z     col.setup()
2025-01-14T13:16:42.9416580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9416640Z     self._request._fillfixtures()
2025-01-14T13:16:42.9416850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9416950Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9417170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9417410Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9417650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9417730Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9417920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9418020Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9418290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9418370Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9418570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9418620Z     raise exc
2025-01-14T13:16:42.9418810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9418870Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9419070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9419200Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9419460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9419620Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9419820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9419950Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9420220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9420320Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9420800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9420920Z     yield
2025-01-14T13:16:42.9421160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9421240Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9421660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9422600Z     yield
2025-01-14T13:16:42.9423290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9423450Z     return (yield)
2025-01-14T13:16:42.9424680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9424790Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9425080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9425130Z     yield
2025-01-14T13:16:42.9425360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9425440Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9425630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9425680Z     raise exc
2025-01-14T13:16:42.9425890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9425940Z     col.setup()
2025-01-14T13:16:42.9426130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9426190Z     self._request._fillfixtures()
2025-01-14T13:16:42.9426400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9426710Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9426930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9427030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9427270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9427350Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9427550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9427740Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9427990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9428060Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9428260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9428310Z     raise exc
2025-01-14T13:16:42.9428500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9428560Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9429050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9429510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9430160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9430360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9430560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9430700Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9430970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9431060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9431370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9431420Z     yield
2025-01-14T13:16:42.9431660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9431820Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9432030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9432080Z     yield
2025-01-14T13:16:42.9432310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9432370Z     return (yield)
2025-01-14T13:16:42.9432850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9433210Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9434040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9434180Z     yield
2025-01-14T13:16:42.9435030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9435530Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9436260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9436480Z     raise exc
2025-01-14T13:16:42.9437040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9437310Z     col.setup()
2025-01-14T13:16:42.9437850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9438030Z     self._request._fillfixtures()
2025-01-14T13:16:42.9439530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9439860Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9441250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9441430Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9441680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9441960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9442170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9442280Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9442520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9442600Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9442800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9442850Z     raise exc
2025-01-14T13:16:42.9443050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9443370Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9443570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9443700Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9443890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9444050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9444250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9444390Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9445940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9446250Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9447370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9448360Z     yield
2025-01-14T13:16:42.9448590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9448670Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9448880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9448930Z     yield
2025-01-14T13:16:42.9449160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9449220Z     return (yield)
2025-01-14T13:16:42.9449470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9449540Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9449830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9449870Z     yield
2025-01-14T13:16:42.9450100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9450170Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9450360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9450410Z     raise exc
2025-01-14T13:16:42.9450600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9450640Z     col.setup()
2025-01-14T13:16:42.9451650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9452000Z     self._request._fillfixtures()
2025-01-14T13:16:42.9452770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9453090Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9453610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9453750Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9454320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9454400Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9454600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9454710Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9454950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9455020Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9455340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9455390Z     raise exc
2025-01-14T13:16:42.9455580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9456360Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9457010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9457370Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9457810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9457990Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9458200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9458340Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9458610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9458710Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9459220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9459270Z     yield
2025-01-14T13:16:42.9459510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9459590Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9459800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9459860Z     yield
2025-01-14T13:16:42.9460090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9460140Z     return (yield)
2025-01-14T13:16:42.9460400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9460480Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9460770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9460820Z     yield
2025-01-14T13:16:42.9461050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9461120Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9461330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9461380Z     raise exc
2025-01-14T13:16:42.9461680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9461740Z     col.setup()
2025-01-14T13:16:42.9461920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9462480Z     self._request._fillfixtures()
2025-01-14T13:16:42.9463160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9463470Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9464460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9464730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9465370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9465580Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9466670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9466970Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9467630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9468380Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9468590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9468640Z     raise exc
2025-01-14T13:16:42.9468840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9468910Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9469100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9469230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9469430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9469590Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9469790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9469930Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9470200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9470610Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9470920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9470970Z     yield
2025-01-14T13:16:42.9471200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9471270Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9471480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9471530Z     yield
2025-01-14T13:16:42.9471760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9471810Z     return (yield)
2025-01-14T13:16:42.9472060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9472140Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9472430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9472480Z     yield
2025-01-14T13:16:42.9472710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9472780Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9473080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9473130Z     raise exc
2025-01-14T13:16:42.9473320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9473370Z     col.setup()
2025-01-14T13:16:42.9473550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9473620Z     self._request._fillfixtures()
2025-01-14T13:16:42.9473880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9473990Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9474210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9474300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9474530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9474610Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9474810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9474980Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9475220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9475290Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9475650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:42.9475790Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:42.9476490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9477230Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9477830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9478190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9479040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:42.9479230Z     return (yield)
2025-01-14T13:16:42.9480110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:42.9481220Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:42.9481490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:42.9481570Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:42.9481750Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:42.9481810Z     sim.iterate(10)
2025-01-14T13:16:42.9481880Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9482020Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9482120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9482130Z 
2025-01-14T13:16:42.9482350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.9482520Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.9482700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.9482930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.9483050Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.9483160Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.9483170Z 
2025-01-14T13:16:42.9483230Z     def initialize_transport_state(
2025-01-14T13:16:42.9483650Z         self,
2025-01-14T13:16:42.9483710Z         simulation_state,
2025-01-14T13:16:42.9483770Z         opacity_state,
2025-01-14T13:16:42.9483820Z         macro_atom_state,
2025-01-14T13:16:42.9483870Z         plasma,
2025-01-14T13:16:42.9483920Z         no_of_packets,
2025-01-14T13:16:42.9484270Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9484320Z         iteration=0,
2025-01-14T13:16:42.9484370Z     ):
2025-01-14T13:16:42.9484470Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9484600Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9484650Z         else:
2025-01-14T13:16:42.9484710Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9484750Z     
2025-01-14T13:16:42.9484860Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9484930Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9484980Z         )
2025-01-14T13:16:42.9485020Z     
2025-01-14T13:16:42.9485130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9485210Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9485340Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9485560Z         else:
2025-01-14T13:16:42.9485630Z             continuum_state = None
2025-01-14T13:16:42.9485700Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9485790Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9485860Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9485940Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9486020Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9486090Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9486150Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9486200Z         ).to_numba(
2025-01-14T13:16:42.9486250Z             macro_atom_state,
2025-01-14T13:16:42.9486320Z             self.line_interaction_type,
2025-01-14T13:16:42.9486360Z         )
2025-01-14T13:16:42.9486440Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9486660Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9486710Z         ]
2025-01-14T13:16:42.9486960Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9487000Z 
2025-01-14T13:16:42.9487120Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9487280Z _____ test_last_interaction_properties[shell_id_in_use-shell_id_to_check] ______
2025-01-14T13:16:42.9487280Z 
2025-01-14T13:16:42.9487390Z expected = 'shell_id_in_use', obtained = 'shell_id_to_check'
2025-01-14T13:16:42.9487630Z request = <FixtureRequest for <Function test_last_interaction_properties[shell_id_in_use-shell_id_to_check]>>
2025-01-14T13:16:42.9487630Z 
2025-01-14T13:16:42.9487930Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.9488180Z         "expected,obtained",
2025-01-14T13:16:42.9488230Z         [
2025-01-14T13:16:42.9488270Z             (
2025-01-14T13:16:42.9488340Z                 "interaction_type_in_use",
2025-01-14T13:16:42.9488410Z                 "interaction_type_to_check",
2025-01-14T13:16:42.9488450Z             ),
2025-01-14T13:16:42.9488500Z             (
2025-01-14T13:16:42.9488550Z                 "shell_id_in_use",
2025-01-14T13:16:42.9488610Z                 "shell_id_to_check",
2025-01-14T13:16:42.9488660Z             ),
2025-01-14T13:16:42.9488700Z             (
2025-01-14T13:16:42.9488750Z                 "r_in_use",
2025-01-14T13:16:42.9488800Z                 "r_to_check",
2025-01-14T13:16:42.9488850Z             ),
2025-01-14T13:16:42.9488930Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.9488980Z         ],
2025-01-14T13:16:42.9489020Z     )
2025-01-14T13:16:42.9489290Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.9489390Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.9489390Z 
2025-01-14T13:16:42.9489580Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.9489670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9489890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9489980Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9490360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9490440Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9490650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9490760Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9491000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9491070Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9491350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9491400Z     raise exc
2025-01-14T13:16:42.9501070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9501220Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9501440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9501570Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9501770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9501930Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9502140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9502270Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9502520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.9502800Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9505060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9505110Z     yield
2025-01-14T13:16:42.9505380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.9505490Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9505890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9505960Z     yield
2025-01-14T13:16:42.9506460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.9507270Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.9507910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9508050Z     yield
2025-01-14T13:16:42.9511150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.9511520Z     return (yield)
2025-01-14T13:16:42.9512260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.9512350Z     return (yield)
2025-01-14T13:16:42.9512580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.9512630Z     raise e
2025-01-14T13:16:42.9513290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.9513360Z     item.runtest()
2025-01-14T13:16:42.9513560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.9513660Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.9513860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9514030Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9514320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9514470Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9514700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.9514770Z     result = testfunction(**testargs)
2025-01-14T13:16:42.9515060Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.9515150Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.9515490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9515840Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9516090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9516180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9516380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9516480Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9516720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9516800Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9517010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9517170Z     raise exc
2025-01-14T13:16:42.9517390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9517460Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9517660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9517890Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9518090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9518240Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9518440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9518580Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9518850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9518930Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9519250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9519290Z     yield
2025-01-14T13:16:42.9519530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9519610Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9519820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9519860Z     yield
2025-01-14T13:16:42.9520190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9520400Z     return (yield)
2025-01-14T13:16:42.9520670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9520750Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9521030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9521080Z     yield
2025-01-14T13:16:42.9521350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9521440Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9521630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9521680Z     raise exc
2025-01-14T13:16:42.9521870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9521920Z     col.setup()
2025-01-14T13:16:42.9522110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9522180Z     self._request._fillfixtures()
2025-01-14T13:16:42.9522400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9522580Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9522800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9522900Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9523130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9523200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9523400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9523500Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9523730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9523800Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9524000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9524050Z     raise exc
2025-01-14T13:16:42.9524240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9524360Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9524550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9524690Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9524880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9525040Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9526140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9526610Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9527390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9527620Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9529570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9529660Z     yield
2025-01-14T13:16:42.9529910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9529980Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9530200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9530550Z     yield
2025-01-14T13:16:42.9530800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9530850Z     return (yield)
2025-01-14T13:16:42.9531120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9531200Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9531630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9531720Z     yield
2025-01-14T13:16:42.9532030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9532110Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9532300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9532350Z     raise exc
2025-01-14T13:16:42.9532540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9532590Z     col.setup()
2025-01-14T13:16:42.9532780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9533020Z     self._request._fillfixtures()
2025-01-14T13:16:42.9533230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9533340Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9533560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9533650Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9533890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9533960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9534160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9534260Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9534500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9534580Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9534770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9534870Z     raise exc
2025-01-14T13:16:42.9535060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9535130Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9535320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9535450Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9535640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9535800Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9536000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9536130Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9536410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9536500Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9536810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9536850Z     yield
2025-01-14T13:16:42.9537080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9537230Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9537450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9537490Z     yield
2025-01-14T13:16:42.9537730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9537780Z     return (yield)
2025-01-14T13:16:42.9538040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9538240Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9538530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9538580Z     yield
2025-01-14T13:16:42.9538810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9538880Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9539070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9539120Z     raise exc
2025-01-14T13:16:42.9539420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9539660Z     col.setup()
2025-01-14T13:16:42.9539860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9539920Z     self._request._fillfixtures()
2025-01-14T13:16:42.9541600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9541720Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9541940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9542030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9542280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9542350Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9542560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9542660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9542900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9543110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9543310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9543360Z     raise exc
2025-01-14T13:16:42.9544120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9544390Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9544950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9545370Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9546100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9546280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9546480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9546620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9546980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9547090Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9547400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9547440Z     yield
2025-01-14T13:16:42.9547820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9547900Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9548110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9548160Z     yield
2025-01-14T13:16:42.9548390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9548860Z     return (yield)
2025-01-14T13:16:42.9549200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9549280Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9549570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9549620Z     yield
2025-01-14T13:16:42.9549850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9549920Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9550110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9550330Z     raise exc
2025-01-14T13:16:42.9550530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9550580Z     col.setup()
2025-01-14T13:16:42.9550780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9550840Z     self._request._fillfixtures()
2025-01-14T13:16:42.9551050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9551160Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9551380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9551480Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9551710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9551780Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9552080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9552190Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9552510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9552580Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9552780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9552820Z     raise exc
2025-01-14T13:16:42.9553010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9553080Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9553260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9553390Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9553590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9553740Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9553940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9554070Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9554330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9554420Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9554800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9554850Z     yield
2025-01-14T13:16:42.9555080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9555160Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9555370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9555420Z     yield
2025-01-14T13:16:42.9555830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9555890Z     return (yield)
2025-01-14T13:16:42.9556150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9556230Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9556510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9556560Z     yield
2025-01-14T13:16:42.9556790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9556920Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9557420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9557970Z     raise exc
2025-01-14T13:16:42.9558550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9558690Z     col.setup()
2025-01-14T13:16:42.9559230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9559400Z     self._request._fillfixtures()
2025-01-14T13:16:42.9559990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9560290Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9560890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9561140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9561600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9561700Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9562750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9563040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9563710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9563920Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9564320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9564400Z     raise exc
2025-01-14T13:16:42.9564600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9564680Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9564870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9565010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9565200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9565360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9565570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9565700Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9566210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9566300Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9566610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9566660Z     yield
2025-01-14T13:16:42.9566890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9566970Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9567230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9567280Z     yield
2025-01-14T13:16:42.9567510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9567560Z     return (yield)
2025-01-14T13:16:42.9568680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9569020Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9569820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9570120Z     yield
2025-01-14T13:16:42.9570350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9570430Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9570630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9570680Z     raise exc
2025-01-14T13:16:42.9570870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9570920Z     col.setup()
2025-01-14T13:16:42.9571110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9571180Z     self._request._fillfixtures()
2025-01-14T13:16:42.9571390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9571500Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9571710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9571800Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9572040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9572160Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9572360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9572470Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9572700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9572780Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9572970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9573020Z     raise exc
2025-01-14T13:16:42.9573210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9573280Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9573470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9573600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9573790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9574420Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9574640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9574890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9575170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9575260Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9575560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9575610Z     yield
2025-01-14T13:16:42.9575950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9576030Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9576240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9576280Z     yield
2025-01-14T13:16:42.9576510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9576570Z     return (yield)
2025-01-14T13:16:42.9576820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9576960Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9577270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9577320Z     yield
2025-01-14T13:16:42.9577550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9577620Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9577810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9577850Z     raise exc
2025-01-14T13:16:42.9578040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9578090Z     col.setup()
2025-01-14T13:16:42.9578280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9578340Z     self._request._fillfixtures()
2025-01-14T13:16:42.9578560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9578670Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9578890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9579100Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9579350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9579420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9579620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9579720Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9579950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9580030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9580230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9580280Z     raise exc
2025-01-14T13:16:42.9580470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9580550Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9580740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9580870Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9581070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9581280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9581490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9581620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9581890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9581970Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9582310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9582360Z     yield
2025-01-14T13:16:42.9582590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9582930Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9583140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9583190Z     yield
2025-01-14T13:16:42.9583410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9583460Z     return (yield)
2025-01-14T13:16:42.9583790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9583870Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9584150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9584190Z     yield
2025-01-14T13:16:42.9584430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9584500Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9584690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9584730Z     raise exc
2025-01-14T13:16:42.9584920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9584970Z     col.setup()
2025-01-14T13:16:42.9585160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9585220Z     self._request._fillfixtures()
2025-01-14T13:16:42.9585440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9585570Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9585800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9586020Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9586300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9586380Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9586580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9586680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9586910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9586990Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9587180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9587220Z     raise exc
2025-01-14T13:16:42.9587800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9588200Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9588760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9589120Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9590420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9590930Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9591170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9591300Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9591580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9591850Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9592260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9592330Z     yield
2025-01-14T13:16:42.9592560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9592640Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9592850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9592900Z     yield
2025-01-14T13:16:42.9593270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9593330Z     return (yield)
2025-01-14T13:16:42.9593570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9593660Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9594170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9594230Z     yield
2025-01-14T13:16:42.9594450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9594520Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9594710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9594760Z     raise exc
2025-01-14T13:16:42.9594950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9594990Z     col.setup()
2025-01-14T13:16:42.9595200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9595330Z     self._request._fillfixtures()
2025-01-14T13:16:42.9595550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9595660Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9596040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9596140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9596390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9596460Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9596660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9596770Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9597000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9597080Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9597280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9597320Z     raise exc
2025-01-14T13:16:42.9597520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9597580Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9597970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9598870Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9599530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9599970Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9600530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9601290Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9602040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9602510Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9606270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9606350Z     yield
2025-01-14T13:16:42.9606590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9606670Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9607230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9607280Z     yield
2025-01-14T13:16:42.9607510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9607580Z     return (yield)
2025-01-14T13:16:42.9607840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9607920Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9608220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9608270Z     yield
2025-01-14T13:16:42.9608500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9608570Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9608760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9608810Z     raise exc
2025-01-14T13:16:42.9609000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9609120Z     col.setup()
2025-01-14T13:16:42.9609320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9609380Z     self._request._fillfixtures()
2025-01-14T13:16:42.9609600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9609720Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9609940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9610040Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9610280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9610360Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9610550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9610660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9610900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9610970Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9611170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9611220Z     raise exc
2025-01-14T13:16:42.9611500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9611560Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9611760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9611890Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9612080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9612240Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9612560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9612700Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9612970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9613060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9613370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9613420Z     yield
2025-01-14T13:16:42.9613650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9614890Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9615480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9615640Z     yield
2025-01-14T13:16:42.9616280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9616440Z     return (yield)
2025-01-14T13:16:42.9617140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9617360Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9618410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9618550Z     yield
2025-01-14T13:16:42.9618790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9618870Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9619070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9619360Z     raise exc
2025-01-14T13:16:42.9624560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9624620Z     col.setup()
2025-01-14T13:16:42.9624810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9624880Z     self._request._fillfixtures()
2025-01-14T13:16:42.9625090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9625200Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9625420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9625520Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9625760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9625840Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9626040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9626130Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9626360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9626440Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9626790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9626850Z     raise exc
2025-01-14T13:16:42.9627050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9627110Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9627300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9627430Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9627670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9627830Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9628030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9628160Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9629710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9630180Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9630530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9630720Z     yield
2025-01-14T13:16:42.9630950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9631030Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9631240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9631280Z     yield
2025-01-14T13:16:42.9631510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9631560Z     return (yield)
2025-01-14T13:16:42.9631820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9631900Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9632190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9632230Z     yield
2025-01-14T13:16:42.9632460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9632590Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9632780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9632830Z     raise exc
2025-01-14T13:16:42.9633010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9633060Z     col.setup()
2025-01-14T13:16:42.9633250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9633310Z     self._request._fillfixtures()
2025-01-14T13:16:42.9633530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9633640Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9633860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9633950Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9634190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9634260Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9634460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9634560Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9634800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9634940Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9635150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9635200Z     raise exc
2025-01-14T13:16:42.9635400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9635460Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9635660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9635830Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9636830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9637340Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9637910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9638310Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9638870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9639170Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9639490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9639550Z     yield
2025-01-14T13:16:42.9639790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9639870Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9640160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9640220Z     yield
2025-01-14T13:16:42.9640460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9640510Z     return (yield)
2025-01-14T13:16:42.9640760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9640840Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9641130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9641240Z     yield
2025-01-14T13:16:42.9641470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9641540Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9641730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9641780Z     raise exc
2025-01-14T13:16:42.9641970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9642030Z     col.setup()
2025-01-14T13:16:42.9642220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9642280Z     self._request._fillfixtures()
2025-01-14T13:16:42.9642500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9642610Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9642830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9642930Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9643170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9643250Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9643450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9643750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9644010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9644080Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9644280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9644330Z     raise exc
2025-01-14T13:16:42.9644530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9644630Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9645090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9645230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9645420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9645580Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9645770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9645910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9646360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9646450Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9646760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9646810Z     yield
2025-01-14T13:16:42.9647040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9647120Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9647330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9647370Z     yield
2025-01-14T13:16:42.9647600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9647650Z     return (yield)
2025-01-14T13:16:42.9647910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9647980Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9650280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9650520Z     yield
2025-01-14T13:16:42.9651190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9651390Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9652000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9652100Z     raise exc
2025-01-14T13:16:42.9652300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9652350Z     col.setup()
2025-01-14T13:16:42.9652540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9652610Z     self._request._fillfixtures()
2025-01-14T13:16:42.9652820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9652940Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9653160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9653250Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9653490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9653560Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9654010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9654110Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9654350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9654420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9654630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9654680Z     raise exc
2025-01-14T13:16:42.9655030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9655100Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9655300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9655420Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9655620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9655780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9656060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9656200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9656470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9656570Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9656870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9656920Z     yield
2025-01-14T13:16:42.9657600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9657710Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9657930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9657970Z     yield
2025-01-14T13:16:42.9658210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9658260Z     return (yield)
2025-01-14T13:16:42.9658520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9658920Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9659210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9659250Z     yield
2025-01-14T13:16:42.9659590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9659670Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9659860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9659910Z     raise exc
2025-01-14T13:16:42.9660090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9660150Z     col.setup()
2025-01-14T13:16:42.9660330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9660410Z     self._request._fillfixtures()
2025-01-14T13:16:42.9660620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9660730Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9660940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9661030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9661370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9661460Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9661660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9661760Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9662000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9662070Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9662330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9662380Z     raise exc
2025-01-14T13:16:42.9662580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9662640Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9662860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9663000Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9663190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9663420Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9663620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9663760Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9664030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9664110Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9664420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9664470Z     yield
2025-01-14T13:16:42.9664700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9664780Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9664990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9665030Z     yield
2025-01-14T13:16:42.9665260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9665350Z     return (yield)
2025-01-14T13:16:42.9665610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9665680Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9665960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9666000Z     yield
2025-01-14T13:16:42.9666230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9666300Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9666490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9666540Z     raise exc
2025-01-14T13:16:42.9666730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9666780Z     col.setup()
2025-01-14T13:16:42.9666970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9667040Z     self._request._fillfixtures()
2025-01-14T13:16:42.9667250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9667360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9669430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9669870Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9670570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9670780Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9671660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9671820Z     raise exc
2025-01-14T13:16:42.9673100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9673330Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9673870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9675070Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9675760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9675960Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9676310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9676650Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9676920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9677020Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9677330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9677380Z     yield
2025-01-14T13:16:42.9680010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9680280Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9680940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9681090Z     yield
2025-01-14T13:16:42.9681740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9681890Z     return (yield)
2025-01-14T13:16:42.9682590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9683340Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9684150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9684290Z     yield
2025-01-14T13:16:42.9685440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9685580Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9685800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9685850Z     raise exc
2025-01-14T13:16:42.9686040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9686110Z     col.setup()
2025-01-14T13:16:42.9686300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9686360Z     self._request._fillfixtures()
2025-01-14T13:16:42.9686700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9686830Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9687050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9687140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9687380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9687830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9688050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9688100Z     raise exc
2025-01-14T13:16:42.9688300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9688370Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9688570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9688770Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9688970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9689130Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9689330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9689460Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9689730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9689970Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9690390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9690670Z     yield
2025-01-14T13:16:42.9691580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9691810Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9692380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9692530Z     yield
2025-01-14T13:16:42.9693170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9693330Z     return (yield)
2025-01-14T13:16:42.9694070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9694180Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9694470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9694620Z     yield
2025-01-14T13:16:42.9694860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9694930Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9695120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9695160Z     raise exc
2025-01-14T13:16:42.9695350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9695410Z     col.setup()
2025-01-14T13:16:42.9698130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9698380Z     self._request._fillfixtures()
2025-01-14T13:16:42.9699000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9699300Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9699960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9700230Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9702060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9702180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9702390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9702440Z     raise exc
2025-01-14T13:16:42.9702900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9702970Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9703170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9703300Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9703500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9703820Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9704040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9704180Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9704450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9704540Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9706140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9707050Z     yield
2025-01-14T13:16:42.9707820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9708040Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9708620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9708770Z     yield
2025-01-14T13:16:42.9709400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9709560Z     return (yield)
2025-01-14T13:16:42.9710310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9710450Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9710750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9710800Z     yield
2025-01-14T13:16:42.9711030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9711100Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9711520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9711580Z     raise exc
2025-01-14T13:16:42.9711770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9711820Z     col.setup()
2025-01-14T13:16:42.9712010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9712070Z     self._request._fillfixtures()
2025-01-14T13:16:42.9712310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9712420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9712640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9712740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9712980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9713060Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9713270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9713510Z     raise exc
2025-01-14T13:16:42.9714400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9714510Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9714820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9715670Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9715910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9716220Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9716420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9716630Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9716910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9717000Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9717300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9717340Z     yield
2025-01-14T13:16:42.9717580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9717660Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9717970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9718040Z     yield
2025-01-14T13:16:42.9718930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9719830Z     return (yield)
2025-01-14T13:16:42.9720140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9720230Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9721530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9722220Z     yield
2025-01-14T13:16:42.9723240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9723350Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9723590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9723640Z     raise exc
2025-01-14T13:16:42.9723840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9724230Z     col.setup()
2025-01-14T13:16:42.9725300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9725660Z     self._request._fillfixtures()
2025-01-14T13:16:42.9726280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9726420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9726650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9726740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9726980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9727060Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9727270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9727340Z     raise exc
2025-01-14T13:16:42.9727540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9727610Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9727810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9727940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9728260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9728420Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9728620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9728760Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9729040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9729440Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9730740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9730890Z     yield
2025-01-14T13:16:42.9731790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9732060Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9732810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9732920Z     yield
2025-01-14T13:16:42.9733640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9733850Z     return (yield)
2025-01-14T13:16:42.9734120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9734210Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9734510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9734550Z     yield
2025-01-14T13:16:42.9736500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9736940Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9737190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9737240Z     raise exc
2025-01-14T13:16:42.9737430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9737480Z     col.setup()
2025-01-14T13:16:42.9737670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9737740Z     self._request._fillfixtures()
2025-01-14T13:16:42.9738100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9738210Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9738440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9738530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9738790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9738870Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9739070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9739940Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9740210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9740940Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9741600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9741890Z     raise exc
2025-01-14T13:16:42.9742120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9742200Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9743560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9745190Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9745890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9746130Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9746490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9746690Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9747140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9747270Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9747650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9747720Z     yield
2025-01-14T13:16:42.9748020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9748140Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9748370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9750210Z     yield
2025-01-14T13:16:42.9751160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9751240Z     return (yield)
2025-01-14T13:16:42.9752420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9752810Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9753130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9753180Z     yield
2025-01-14T13:16:42.9753410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9753910Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9754290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9754350Z     raise exc
2025-01-14T13:16:42.9754540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9754590Z     col.setup()
2025-01-14T13:16:42.9755370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9756140Z     self._request._fillfixtures()
2025-01-14T13:16:42.9757260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9757750Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9758250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9758580Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9759470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9759710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9760290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9760560Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9761820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9762060Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9762650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9762810Z     raise exc
2025-01-14T13:16:42.9763350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9764350Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9765020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9765190Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9765960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9766670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9767220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9767380Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9767650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9767750Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9768100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9768150Z     yield
2025-01-14T13:16:42.9768430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9768680Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9768900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9768940Z     yield
2025-01-14T13:16:42.9769180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9769230Z     return (yield)
2025-01-14T13:16:42.9769500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9769930Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9770680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9770760Z     yield
2025-01-14T13:16:42.9771000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9771080Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9771290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9771350Z     raise exc
2025-01-14T13:16:42.9771960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9772020Z     col.setup()
2025-01-14T13:16:42.9772220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9772730Z     self._request._fillfixtures()
2025-01-14T13:16:42.9773530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9773840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9774600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9774860Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9775840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9776080Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9793150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9793310Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9793560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9793640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9793840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9794380Z     raise exc
2025-01-14T13:16:42.9794590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9794660Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9794870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9795350Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9795560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9795880Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9797080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9797630Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9798660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9799010Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9799410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9799630Z     yield
2025-01-14T13:16:42.9799870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9799950Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9800490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9800730Z     yield
2025-01-14T13:16:42.9801390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9801560Z     return (yield)
2025-01-14T13:16:42.9802390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9802760Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9804490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9804570Z     yield
2025-01-14T13:16:42.9805350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9805630Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9807010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9807170Z     raise exc
2025-01-14T13:16:42.9809440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9809540Z     col.setup()
2025-01-14T13:16:42.9809770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9809860Z     self._request._fillfixtures()
2025-01-14T13:16:42.9810110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9810250Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9810520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9810640Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9810890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9810980Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9811200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9811310Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9811560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9811830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9812040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9812100Z     raise exc
2025-01-14T13:16:42.9812290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9812380Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9812580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9812790Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9813010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9813190Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9813420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9813570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9813850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9813930Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9814340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9814390Z     yield
2025-01-14T13:16:42.9816820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9817270Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9818350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9818550Z     yield
2025-01-14T13:16:42.9820110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9820210Z     return (yield)
2025-01-14T13:16:42.9820540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9820630Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9821010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9821100Z     yield
2025-01-14T13:16:42.9821360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9821620Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9822380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9822680Z     raise exc
2025-01-14T13:16:42.9822920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9823000Z     col.setup()
2025-01-14T13:16:42.9823200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9823270Z     self._request._fillfixtures()
2025-01-14T13:16:42.9824120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9824510Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9825210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9825340Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9825610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9825710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9825920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9826040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9831550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9831650Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9831890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9831960Z     raise exc
2025-01-14T13:16:42.9832150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9832220Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9832470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9832630Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9833540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9833730Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9833980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9834650Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9837860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9838160Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9838850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9838930Z     yield
2025-01-14T13:16:42.9839200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9839300Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9839540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9839590Z     yield
2025-01-14T13:16:42.9839840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9839900Z     return (yield)
2025-01-14T13:16:42.9840750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9840860Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9841360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9841530Z     yield
2025-01-14T13:16:42.9841780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9841870Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9842100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9842150Z     raise exc
2025-01-14T13:16:42.9843330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9843400Z     col.setup()
2025-01-14T13:16:42.9843590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9843670Z     self._request._fillfixtures()
2025-01-14T13:16:42.9843890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9844000Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9844230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9844320Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9844570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9844640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9844970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9845080Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9845340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9845430Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9845640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9845720Z     raise exc
2025-01-14T13:16:42.9856880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9857000Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9858220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9858710Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9859100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9859270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9859480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9859780Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9860060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9860150Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9860460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9860500Z     yield
2025-01-14T13:16:42.9860730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9860820Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9861230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9861300Z     yield
2025-01-14T13:16:42.9861530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9861590Z     return (yield)
2025-01-14T13:16:42.9861840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9865340Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9865640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9865690Z     yield
2025-01-14T13:16:42.9865920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9865990Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9866180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9866230Z     raise exc
2025-01-14T13:16:42.9866410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9866460Z     col.setup()
2025-01-14T13:16:42.9866650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9866710Z     self._request._fillfixtures()
2025-01-14T13:16:42.9866930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9867040Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9867260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9867350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9867710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9867790Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9868010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9868320Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9868580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9868660Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9869910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9869990Z     raise exc
2025-01-14T13:16:42.9870210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9870280Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9870480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9870620Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9871070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9871360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9871580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9871720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9872010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9872100Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9873970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9874140Z     yield
2025-01-14T13:16:42.9874940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9875450Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9875770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9875830Z     yield
2025-01-14T13:16:42.9876050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9876200Z     return (yield)
2025-01-14T13:16:42.9876460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9876550Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9876870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9876920Z     yield
2025-01-14T13:16:42.9877280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9877350Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9877530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9877580Z     raise exc
2025-01-14T13:16:42.9877770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9877820Z     col.setup()
2025-01-14T13:16:42.9878020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9878080Z     self._request._fillfixtures()
2025-01-14T13:16:42.9878300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9878400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9878620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9878810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9879050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9879130Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9879330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9879430Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9879710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9879780Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9879980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9880030Z     raise exc
2025-01-14T13:16:42.9880230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9880300Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9880490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9880620Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9880870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9881020Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9881220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9881360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9881630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9881710Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9882470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9882530Z     yield
2025-01-14T13:16:42.9882760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9882840Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9883050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9883170Z     yield
2025-01-14T13:16:42.9883580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9883630Z     return (yield)
2025-01-14T13:16:42.9883880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9883960Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9884240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9884290Z     yield
2025-01-14T13:16:42.9884510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9884580Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9884780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9884820Z     raise exc
2025-01-14T13:16:42.9885010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9885060Z     col.setup()
2025-01-14T13:16:42.9885250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9885490Z     self._request._fillfixtures()
2025-01-14T13:16:42.9885720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9892890Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9893700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9893830Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9894090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9894160Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9894360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9894520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9894760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9894830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9895030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9895080Z     raise exc
2025-01-14T13:16:42.9895280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9895340Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9901870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9902010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9902200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9902360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9902570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9902710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9903000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9903100Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9903420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9903470Z     yield
2025-01-14T13:16:42.9904740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9904970Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9905210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9905260Z     yield
2025-01-14T13:16:42.9905500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9905550Z     return (yield)
2025-01-14T13:16:42.9905810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9905900Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9906190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9906240Z     yield
2025-01-14T13:16:42.9906470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9906540Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9906730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9906780Z     raise exc
2025-01-14T13:16:42.9907990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9908220Z     col.setup()
2025-01-14T13:16:42.9908820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9909000Z     self._request._fillfixtures()
2025-01-14T13:16:42.9911350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9911520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9911750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9911850Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9912090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9912500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9912880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9912990Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9913360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9913450Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9913660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9913700Z     raise exc
2025-01-14T13:16:42.9914260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9914340Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9914530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9914670Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9914880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9915030Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9916040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9916480Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9917030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:42.9918060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9918400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9925910Z     yield
2025-01-14T13:16:42.9926640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:42.9926910Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:42.9927420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9927500Z     yield
2025-01-14T13:16:42.9927730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:42.9927780Z     return (yield)
2025-01-14T13:16:42.9928050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:42.9928120Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9929210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9929410Z     yield
2025-01-14T13:16:42.9930060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:42.9930270Z     item.session._setupstate.setup(item)
2025-01-14T13:16:42.9930790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:42.9930940Z     raise exc
2025-01-14T13:16:42.9931450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:42.9931600Z     col.setup()
2025-01-14T13:16:42.9932200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:42.9932290Z     self._request._fillfixtures()
2025-01-14T13:16:42.9932510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:42.9932630Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:42.9932840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9932940Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9933240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9933320Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9933510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9933610Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9933840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9933920Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9934190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:42.9934360Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:42.9934550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9934700Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9934900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9935040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9935270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:42.9935320Z     return (yield)
2025-01-14T13:16:42.9935720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:42.9935830Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:42.9936050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:42.9936130Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:42.9936340Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:42.9936390Z     sim.iterate(10)
2025-01-14T13:16:42.9936460Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:42.9936580Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:42.9936670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9936670Z 
2025-01-14T13:16:42.9936890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:42.9937050Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:42.9937220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:42.9937470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:42.9937590Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:42.9937700Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:42.9937710Z 
2025-01-14T13:16:42.9937770Z     def initialize_transport_state(
2025-01-14T13:16:42.9937820Z         self,
2025-01-14T13:16:42.9937870Z         simulation_state,
2025-01-14T13:16:42.9937920Z         opacity_state,
2025-01-14T13:16:42.9937980Z         macro_atom_state,
2025-01-14T13:16:42.9938340Z         plasma,
2025-01-14T13:16:42.9938580Z         no_of_packets,
2025-01-14T13:16:42.9938990Z         no_of_virtual_packets=0,
2025-01-14T13:16:42.9939100Z         iteration=0,
2025-01-14T13:16:42.9939150Z     ):
2025-01-14T13:16:42.9939710Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:42.9939790Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:42.9939850Z         else:
2025-01-14T13:16:42.9939910Z             gamma_shape = (0, 0)
2025-01-14T13:16:42.9939950Z     
2025-01-14T13:16:42.9940060Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:42.9940140Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:42.9940230Z         )
2025-01-14T13:16:42.9940280Z     
2025-01-14T13:16:42.9940380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:42.9940470Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:42.9940600Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:42.9940650Z         else:
2025-01-14T13:16:42.9940700Z             continuum_state = None
2025-01-14T13:16:42.9940780Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:42.9940870Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:42.9940940Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:42.9941110Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:42.9941190Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:42.9941250Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:42.9941320Z             continuum_state=continuum_state,
2025-01-14T13:16:42.9941370Z         ).to_numba(
2025-01-14T13:16:42.9941430Z             macro_atom_state,
2025-01-14T13:16:42.9941500Z             self.line_interaction_type,
2025-01-14T13:16:42.9941540Z         )
2025-01-14T13:16:42.9941610Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:42.9941830Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:42.9941880Z         ]
2025-01-14T13:16:42.9942130Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:42.9942130Z 
2025-01-14T13:16:42.9942250Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:42.9943510Z ____________ test_last_interaction_properties[r_in_use-r_to_check] _____________
2025-01-14T13:16:42.9943540Z 
2025-01-14T13:16:42.9943770Z expected = 'r_in_use', obtained = 'r_to_check'
2025-01-14T13:16:42.9944980Z request = <FixtureRequest for <Function test_last_interaction_properties[r_in_use-r_to_check]>>
2025-01-14T13:16:42.9945000Z 
2025-01-14T13:16:42.9945180Z     @pytest.mark.parametrize(
2025-01-14T13:16:42.9945360Z         "expected,obtained",
2025-01-14T13:16:42.9945500Z         [
2025-01-14T13:16:42.9945650Z             (
2025-01-14T13:16:42.9946170Z                 "interaction_type_in_use",
2025-01-14T13:16:42.9946280Z                 "interaction_type_to_check",
2025-01-14T13:16:42.9946330Z             ),
2025-01-14T13:16:42.9946380Z             (
2025-01-14T13:16:42.9946440Z                 "shell_id_in_use",
2025-01-14T13:16:42.9946500Z                 "shell_id_to_check",
2025-01-14T13:16:42.9946550Z             ),
2025-01-14T13:16:42.9946590Z             (
2025-01-14T13:16:42.9946640Z                 "r_in_use",
2025-01-14T13:16:42.9946700Z                 "r_to_check",
2025-01-14T13:16:42.9946740Z             ),
2025-01-14T13:16:42.9946820Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:42.9946880Z         ],
2025-01-14T13:16:42.9946920Z     )
2025-01-14T13:16:42.9947070Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:42.9947160Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.9947160Z 
2025-01-14T13:16:42.9947350Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:42.9947440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:42.9955590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9955720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9955960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9956040Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9956240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9956400Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9956820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9956900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9957110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9957160Z     raise exc
2025-01-14T13:16:42.9957370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9957440Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9957640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9958320Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9958520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9958680Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9958880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9959020Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9959270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.9959350Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9959630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9959680Z     yield
2025-01-14T13:16:42.9959940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.9960030Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9960570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9960620Z     yield
2025-01-14T13:16:42.9960850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:42.9960930Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:42.9961140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:42.9961180Z     yield
2025-01-14T13:16:42.9961410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:42.9961460Z     return (yield)
2025-01-14T13:16:42.9961700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:42.9961750Z     return (yield)
2025-01-14T13:16:42.9961970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:42.9962020Z     raise e
2025-01-14T13:16:42.9962250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:42.9962290Z     item.runtest()
2025-01-14T13:16:42.9962490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:42.9962580Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:42.9962860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9963020Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9963220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9963360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9963590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:42.9966460Z     result = testfunction(**testargs)
2025-01-14T13:16:42.9967480Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:42.9967730Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:42.9968340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:42.9968620Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:42.9969280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9969500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9970360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:42.9970460Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:42.9970710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:42.9970790Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:42.9970980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:42.9971030Z     raise exc
2025-01-14T13:16:42.9971230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:42.9971300Z     result: Optional[TResult] = func()
2025-01-14T13:16:42.9971480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:42.9971620Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:42.9971820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:42.9971980Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:42.9972460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:42.9972600Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:42.9995290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:42.9995430Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:42.9995890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:42.9996340Z     yield
2025-01-14T13:16:42.9997130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:42.9997380Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:42.9998480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:42.9998640Z     yield
2025-01-14T13:16:42.9999980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0000220Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0000820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0000960Z     yield
2025-01-14T13:16:43.0003610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0003820Z     return (yield)
2025-01-14T13:16:43.0004470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0004630Z     return (yield)
2025-01-14T13:16:43.0005750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0005840Z     raise e
2025-01-14T13:16:43.0006070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0006550Z     item.runtest()
2025-01-14T13:16:43.0007770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0008430Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0009190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0009820Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0010070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0010210Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0010880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0010980Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0011290Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:43.0011400Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0011650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0011740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0012040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0012180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0012380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0012490Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0012750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0012990Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0013210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0013270Z     raise exc
2025-01-14T13:16:43.0013490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0013710Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0013940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0014090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0014290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0014440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0015010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0015530Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0017050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0017460Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0018410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0019060Z     yield
2025-01-14T13:16:43.0021180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0021280Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0021480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0021540Z     yield
2025-01-14T13:16:43.0021780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0021830Z     return (yield)
2025-01-14T13:16:43.0022190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0022300Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0022590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0022640Z     yield
2025-01-14T13:16:43.0022880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0022950Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0023170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0023530Z     raise exc
2025-01-14T13:16:43.0023730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0023780Z     col.setup()
2025-01-14T13:16:43.0023990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0024060Z     self._request._fillfixtures()
2025-01-14T13:16:43.0024290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0024400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0024630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0024910Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0025980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0026080Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0026290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0026400Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0026750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0026830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0027030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0027080Z     raise exc
2025-01-14T13:16:43.0027430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0027510Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0027700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0027830Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0028030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0028180Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0028380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0028510Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0028780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0028870Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0037550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0037640Z     yield
2025-01-14T13:16:43.0039020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0039350Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0039980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0040150Z     yield
2025-01-14T13:16:43.0041230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0041410Z     return (yield)
2025-01-14T13:16:43.0043300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0043560Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0044600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0044770Z     yield
2025-01-14T13:16:43.0045410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0046870Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0047400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0047550Z     raise exc
2025-01-14T13:16:43.0048080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0048230Z     col.setup()
2025-01-14T13:16:43.0048760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0048940Z     self._request._fillfixtures()
2025-01-14T13:16:43.0049520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0049810Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0051270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0051490Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0051780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0051870Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0053790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0053920Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0054160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0054230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0054430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0054490Z     raise exc
2025-01-14T13:16:43.0054680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0054750Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0054960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0055100Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0055300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0055460Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0055670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0055800Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0056260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0056360Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0056680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0056730Z     yield
2025-01-14T13:16:43.0057120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0057240Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0058010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0059660Z     yield
2025-01-14T13:16:43.0061360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0061420Z     return (yield)
2025-01-14T13:16:43.0061680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0061760Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0062050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0062530Z     yield
2025-01-14T13:16:43.0062770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0062870Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0063070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0063140Z     raise exc
2025-01-14T13:16:43.0063350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0063430Z     col.setup()
2025-01-14T13:16:43.0063680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0063760Z     self._request._fillfixtures()
2025-01-14T13:16:43.0064020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0064150Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0064400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0064500Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0064740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0067650Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0068370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0068670Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0069360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0069640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0070220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0070370Z     raise exc
2025-01-14T13:16:43.0071330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0072430Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0072660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0072810Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0073030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0073190Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0073410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0074430Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0074730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0074820Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0075820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0076190Z     yield
2025-01-14T13:16:43.0077480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0077770Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0079020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0079210Z     yield
2025-01-14T13:16:43.0079980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0080150Z     return (yield)
2025-01-14T13:16:43.0080880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0081140Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0082390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0082530Z     yield
2025-01-14T13:16:43.0083210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0083420Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0083950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0084090Z     raise exc
2025-01-14T13:16:43.0084610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0084760Z     col.setup()
2025-01-14T13:16:43.0085320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0085550Z     self._request._fillfixtures()
2025-01-14T13:16:43.0086510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0087530Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0090220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0090870Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0091160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0091240Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0091470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0091580Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0091830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0091930Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0092170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0092230Z     raise exc
2025-01-14T13:16:43.0092730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0092820Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0093060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0093200Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0093400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0093870Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0096350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0096960Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0097240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0097330Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0097960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0098040Z     yield
2025-01-14T13:16:43.0098280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0098360Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0098570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0098620Z     yield
2025-01-14T13:16:43.0099440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0099650Z     return (yield)
2025-01-14T13:16:43.0100600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0100690Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0100970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0101020Z     yield
2025-01-14T13:16:43.0101250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0101320Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0101510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0101550Z     raise exc
2025-01-14T13:16:43.0102430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0102500Z     col.setup()
2025-01-14T13:16:43.0102700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0102760Z     self._request._fillfixtures()
2025-01-14T13:16:43.0102990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0103180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0103400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0103710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0103960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0104040Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0104240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0104340Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0104570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0104650Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0104850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0104900Z     raise exc
2025-01-14T13:16:43.0105100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0105160Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0105360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0105490Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0106780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0107470Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0108560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0109170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0110130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0110350Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0111680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0111860Z     yield
2025-01-14T13:16:43.0112530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0112800Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0113520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0113680Z     yield
2025-01-14T13:16:43.0114340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0116100Z     return (yield)
2025-01-14T13:16:43.0116930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0117250Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0119050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0119580Z     yield
2025-01-14T13:16:43.0119880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0119960Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0120470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0122220Z     raise exc
2025-01-14T13:16:43.0122800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0122990Z     col.setup()
2025-01-14T13:16:43.0123880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0124070Z     self._request._fillfixtures()
2025-01-14T13:16:43.0124650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0124770Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0124990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0125090Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0125330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0125410Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0126860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0127000Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0127240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0127310Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0127520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0127570Z     raise exc
2025-01-14T13:16:43.0127760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0128740Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0129630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0131040Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0131680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0132150Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0132750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0133180Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0145230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0145540Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0146400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0146540Z     yield
2025-01-14T13:16:43.0147210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0147430Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0148040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0148600Z     yield
2025-01-14T13:16:43.0149280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0149460Z     return (yield)
2025-01-14T13:16:43.0150530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0150660Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0150950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0151000Z     yield
2025-01-14T13:16:43.0151230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0151300Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0151500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0151550Z     raise exc
2025-01-14T13:16:43.0151740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0151790Z     col.setup()
2025-01-14T13:16:43.0160980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0161540Z     self._request._fillfixtures()
2025-01-14T13:16:43.0162800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0163160Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0164170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0164560Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0165320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0165440Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0165660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0165770Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0166020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0166100Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0166300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0166350Z     raise exc
2025-01-14T13:16:43.0166780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0167120Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0167340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0167480Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0167680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0167860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0168200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0168350Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0168630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0168710Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0169030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0169080Z     yield
2025-01-14T13:16:43.0169330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0169540Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0169750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0169810Z     yield
2025-01-14T13:16:43.0170050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0170100Z     return (yield)
2025-01-14T13:16:43.0170810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0170910Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0171200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0171240Z     yield
2025-01-14T13:16:43.0172030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0173070Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0173440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0173500Z     raise exc
2025-01-14T13:16:43.0173750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0173810Z     col.setup()
2025-01-14T13:16:43.0174010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0174080Z     self._request._fillfixtures()
2025-01-14T13:16:43.0174290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0174410Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0174620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0174720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0174960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0175040Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0175260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0175360Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0175610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0175680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0176680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0177630Z     raise exc
2025-01-14T13:16:43.0178310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0179510Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0180550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0181210Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0181840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0183120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0183350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0183490Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0183760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0183860Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0184160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0184300Z     yield
2025-01-14T13:16:43.0184540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0184630Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0186560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0186800Z     yield
2025-01-14T13:16:43.0188640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0188730Z     return (yield)
2025-01-14T13:16:43.0189020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0189100Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0189730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0189790Z     yield
2025-01-14T13:16:43.0190050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0190130Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0190440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0190490Z     raise exc
2025-01-14T13:16:43.0190700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0190760Z     col.setup()
2025-01-14T13:16:43.0190970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0191040Z     self._request._fillfixtures()
2025-01-14T13:16:43.0191250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0191370Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0192700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0193010Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0193730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0193850Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0194060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0194170Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0194410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0195310Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0195940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0196010Z     raise exc
2025-01-14T13:16:43.0197410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0197620Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0198190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0199080Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0199910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0200350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0200900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0201270Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0202040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0210930Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0212190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0212880Z     yield
2025-01-14T13:16:43.0213180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0213270Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0213490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0213560Z     yield
2025-01-14T13:16:43.0213880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0215980Z     return (yield)
2025-01-14T13:16:43.0222270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0222370Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0222660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0222700Z     yield
2025-01-14T13:16:43.0223100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0223170Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0224340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0224410Z     raise exc
2025-01-14T13:16:43.0224600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0224650Z     col.setup()
2025-01-14T13:16:43.0225150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0225630Z     self._request._fillfixtures()
2025-01-14T13:16:43.0225900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0227200Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0227460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0227570Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0228920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0229040Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0229250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0229350Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0229850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0229930Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0230130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0230180Z     raise exc
2025-01-14T13:16:43.0230380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0230440Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0232500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0233020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0233230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0234380Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0234620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0234770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0236050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0236430Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0237370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0237800Z     yield
2025-01-14T13:16:43.0238090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0238180Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0238400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0238460Z     yield
2025-01-14T13:16:43.0238970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0239030Z     return (yield)
2025-01-14T13:16:43.0239310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0239390Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0239690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0241480Z     yield
2025-01-14T13:16:43.0241740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0241820Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0242020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0242070Z     raise exc
2025-01-14T13:16:43.0243330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0243400Z     col.setup()
2025-01-14T13:16:43.0243590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0243650Z     self._request._fillfixtures()
2025-01-14T13:16:43.0243860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0243970Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0244190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0244290Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0254620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0254720Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0256000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0256140Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0256870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0258520Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0258770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0258820Z     raise exc
2025-01-14T13:16:43.0259120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0259180Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0259390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0259560Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0259770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0259940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0260140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0260670Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0260970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0261080Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0261410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0261460Z     yield
2025-01-14T13:16:43.0261700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0261800Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0262030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0262070Z     yield
2025-01-14T13:16:43.0262340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0262400Z     return (yield)
2025-01-14T13:16:43.0262690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0262890Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0263210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0263250Z     yield
2025-01-14T13:16:43.0263520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0263640Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0263910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0263970Z     raise exc
2025-01-14T13:16:43.0264150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0264200Z     col.setup()
2025-01-14T13:16:43.0264400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0264460Z     self._request._fillfixtures()
2025-01-14T13:16:43.0264670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0264780Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0265110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0265210Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0265580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0265650Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0265850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0265950Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0266180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0266260Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0266560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0266620Z     raise exc
2025-01-14T13:16:43.0266840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0266920Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0267150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0267300Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0267490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0267750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0267960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0268100Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0268380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0268470Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0268770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0268810Z     yield
2025-01-14T13:16:43.0269040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0269110Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0269330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0269370Z     yield
2025-01-14T13:16:43.0269600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0269720Z     return (yield)
2025-01-14T13:16:43.0269970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0270040Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0270340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0270390Z     yield
2025-01-14T13:16:43.0270620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0270690Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0270890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0270930Z     raise exc
2025-01-14T13:16:43.0272590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0272710Z     col.setup()
2025-01-14T13:16:43.0272930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0273010Z     self._request._fillfixtures()
2025-01-14T13:16:43.0273270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0273400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0273650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0274050Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0274330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0274410Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0274630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0274750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0275040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0275120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0275330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0275380Z     raise exc
2025-01-14T13:16:43.0275610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0275680Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0275870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0276020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0277330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0277490Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0277690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0277840Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0278110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0278190Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0278990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0280490Z     yield
2025-01-14T13:16:43.0280770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0280860Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0281090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0281480Z     yield
2025-01-14T13:16:43.0282110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0282180Z     return (yield)
2025-01-14T13:16:43.0282440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0282520Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0282840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0282890Z     yield
2025-01-14T13:16:43.0283130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0283210Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0283400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0283460Z     raise exc
2025-01-14T13:16:43.0283660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0283720Z     col.setup()
2025-01-14T13:16:43.0283910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0283970Z     self._request._fillfixtures()
2025-01-14T13:16:43.0284180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0284410Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0284630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0284730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0284970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0285040Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0285400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0285510Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0285740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0285810Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0286010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0286060Z     raise exc
2025-01-14T13:16:43.0286910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0286990Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0287290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0287420Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0287610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0287780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0287990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0291260Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0294880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0295200Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0296110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0296410Z     yield
2025-01-14T13:16:43.0297080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0298240Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0299030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0299180Z     yield
2025-01-14T13:16:43.0299900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0299990Z     return (yield)
2025-01-14T13:16:43.0300700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0300820Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0302360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0302440Z     yield
2025-01-14T13:16:43.0302770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0302860Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0303070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0303120Z     raise exc
2025-01-14T13:16:43.0304230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0304310Z     col.setup()
2025-01-14T13:16:43.0304510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0304570Z     self._request._fillfixtures()
2025-01-14T13:16:43.0306530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0308320Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0309320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0309590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0310290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0311510Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0311910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0314860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0315620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0316120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0317970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0318060Z     raise exc
2025-01-14T13:16:43.0318470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0318530Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0318730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0318880Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0319070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0321890Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0322460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0324860Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0325170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0329380Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0329740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0330320Z     yield
2025-01-14T13:16:43.0330560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0330640Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0339180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0339230Z     yield
2025-01-14T13:16:43.0339480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0339530Z     return (yield)
2025-01-14T13:16:43.0339780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0339870Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0340150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0340200Z     yield
2025-01-14T13:16:43.0340430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0340500Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0341510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0344070Z     raise exc
2025-01-14T13:16:43.0344300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0344350Z     col.setup()
2025-01-14T13:16:43.0344800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0344870Z     self._request._fillfixtures()
2025-01-14T13:16:43.0345090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0345200Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0345420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0345610Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0345860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0345940Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0346950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0347020Z     raise exc
2025-01-14T13:16:43.0347230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0347300Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0347510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0347770Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0347960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0348120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0348330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0348470Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0348740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0349050Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0349390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0349450Z     yield
2025-01-14T13:16:43.0349690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0349770Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0350090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0350140Z     yield
2025-01-14T13:16:43.0350380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0350430Z     return (yield)
2025-01-14T13:16:43.0350690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0350760Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0351050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0351100Z     yield
2025-01-14T13:16:43.0351320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0351400Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0351580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0351630Z     raise exc
2025-01-14T13:16:43.0351820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0351870Z     col.setup()
2025-01-14T13:16:43.0352240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0352310Z     self._request._fillfixtures()
2025-01-14T13:16:43.0352820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0352950Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0353180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0353280Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0353540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0353620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0353880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0353940Z     raise exc
2025-01-14T13:16:43.0354150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0354210Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0354420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0354720Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0355820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0357090Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0359400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0361190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0362410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0362510Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0365000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0365060Z     yield
2025-01-14T13:16:43.0365310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0365390Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0365610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0365650Z     yield
2025-01-14T13:16:43.0365890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0366060Z     return (yield)
2025-01-14T13:16:43.0366340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0366420Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0369580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0369820Z     yield
2025-01-14T13:16:43.0370570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0370780Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0371440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0371610Z     raise exc
2025-01-14T13:16:43.0372140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0372300Z     col.setup()
2025-01-14T13:16:43.0372840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0373020Z     self._request._fillfixtures()
2025-01-14T13:16:43.0373670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0373960Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0378040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0378520Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0379390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0379640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0380190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0380340Z     raise exc
2025-01-14T13:16:43.0381440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0381900Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0382430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0382780Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0383310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0383750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0384300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0385200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0386010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0386270Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0388510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0388710Z     yield
2025-01-14T13:16:43.0389690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0389850Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0390070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0390120Z     yield
2025-01-14T13:16:43.0390350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0390400Z     return (yield)
2025-01-14T13:16:43.0390660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0391090Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0391380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0391430Z     yield
2025-01-14T13:16:43.0391660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0391730Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0391940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0391980Z     raise exc
2025-01-14T13:16:43.0392180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0392230Z     col.setup()
2025-01-14T13:16:43.0392420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0392480Z     self._request._fillfixtures()
2025-01-14T13:16:43.0392690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0392800Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0393020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0393110Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0393350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0393620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0393820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0393870Z     raise exc
2025-01-14T13:16:43.0394070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0394140Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0394330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0394560Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0394780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0394970Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0395190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0395330Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0395680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0395900Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0396240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0396300Z     yield
2025-01-14T13:16:43.0396530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0396610Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0398500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0398720Z     yield
2025-01-14T13:16:43.0399540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0399620Z     return (yield)
2025-01-14T13:16:43.0399890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0399970Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0400250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0400440Z     yield
2025-01-14T13:16:43.0400690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0400760Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0400950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0401310Z     raise exc
2025-01-14T13:16:43.0401520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0401570Z     col.setup()
2025-01-14T13:16:43.0401770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0401830Z     self._request._fillfixtures()
2025-01-14T13:16:43.0402040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0402150Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0402360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0402470Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0402730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0402810Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0403020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0403060Z     raise exc
2025-01-14T13:16:43.0403540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0403620Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0403810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0403940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0404150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0404360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0404560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0404690Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0404970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0405060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0405370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0405490Z     yield
2025-01-14T13:16:43.0405730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0406370Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0407190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0407340Z     yield
2025-01-14T13:16:43.0408630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0408810Z     return (yield)
2025-01-14T13:16:43.0409360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0409460Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0409740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0409790Z     yield
2025-01-14T13:16:43.0410010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0410090Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0410280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0410680Z     raise exc
2025-01-14T13:16:43.0410870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0410940Z     col.setup()
2025-01-14T13:16:43.0411120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0411190Z     self._request._fillfixtures()
2025-01-14T13:16:43.0411400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0411510Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0411730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0411820Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0412060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0412140Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0412340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0412450Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0412690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0412770Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0413280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0413370Z     raise exc
2025-01-14T13:16:43.0413570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0413640Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0413830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0413970Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0414220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0414370Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0414580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0414710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0414980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0415060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0415700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0415750Z     yield
2025-01-14T13:16:43.0415980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0416060Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0416270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0416320Z     yield
2025-01-14T13:16:43.0416550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0416600Z     return (yield)
2025-01-14T13:16:43.0417000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0417090Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0417370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0417410Z     yield
2025-01-14T13:16:43.0417640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0417780Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0417970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0418010Z     raise exc
2025-01-14T13:16:43.0418200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0418250Z     col.setup()
2025-01-14T13:16:43.0418430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0418490Z     self._request._fillfixtures()
2025-01-14T13:16:43.0418710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0418820Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0419460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0419590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0419840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0419910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0420110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0420210Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0420600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0420680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0420870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0420930Z     raise exc
2025-01-14T13:16:43.0421120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0421190Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0421560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0421700Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0421900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0422060Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0422260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0422390Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0422670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0422850Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0423710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0424080Z     yield
2025-01-14T13:16:43.0425020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0425250Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0425880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0426030Z     yield
2025-01-14T13:16:43.0426940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0427190Z     return (yield)
2025-01-14T13:16:43.0428020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0428130Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0428420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0428720Z     yield
2025-01-14T13:16:43.0428960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0429030Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0429810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0429870Z     raise exc
2025-01-14T13:16:43.0430070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0430120Z     col.setup()
2025-01-14T13:16:43.0430310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0430370Z     self._request._fillfixtures()
2025-01-14T13:16:43.0430580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0430680Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0430910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0431000Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0431230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0431310Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0431640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0431740Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0431980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0432050Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0432240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0432300Z     raise exc
2025-01-14T13:16:43.0432530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0432600Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0438310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0438460Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0438660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0438810Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0439010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0439300Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0439570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0439660Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0439960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0440010Z     yield
2025-01-14T13:16:43.0440230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0440310Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0440520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0440560Z     yield
2025-01-14T13:16:43.0440790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0440840Z     return (yield)
2025-01-14T13:16:43.0441080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0441220Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0441500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0441550Z     yield
2025-01-14T13:16:43.0441780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0441850Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0442040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0442080Z     raise exc
2025-01-14T13:16:43.0442270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0442320Z     col.setup()
2025-01-14T13:16:43.0442510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0442570Z     self._request._fillfixtures()
2025-01-14T13:16:43.0442790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0442900Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0443110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0443210Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0443440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0443610Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0443810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0443920Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0444150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0444230Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0444660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0444720Z     raise exc
2025-01-14T13:16:43.0444920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0444980Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0445170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0445300Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0445490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0445650Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0445920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0446050Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0446320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0446410Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0446710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0446750Z     yield
2025-01-14T13:16:43.0446980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0447060Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0447260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0447310Z     yield
2025-01-14T13:16:43.0447670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0447770Z     return (yield)
2025-01-14T13:16:43.0448020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0448100Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0448380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0448420Z     yield
2025-01-14T13:16:43.0448650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0448720Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0448910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0448950Z     raise exc
2025-01-14T13:16:43.0449150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0449190Z     col.setup()
2025-01-14T13:16:43.0449400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0449470Z     self._request._fillfixtures()
2025-01-14T13:16:43.0449680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0449790Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0450000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0450430Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0450740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0450820Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0451020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0451120Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0451420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0451500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0451950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0451990Z     raise exc
2025-01-14T13:16:43.0452190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0452250Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0452450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0452570Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0453290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0453450Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0453660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0453790Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0454060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0454140Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0454440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0454490Z     yield
2025-01-14T13:16:43.0454720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0454800Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0455010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0455120Z     yield
2025-01-14T13:16:43.0455350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0455410Z     return (yield)
2025-01-14T13:16:43.0455660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0455730Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0456010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0456060Z     yield
2025-01-14T13:16:43.0456290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0456360Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0456550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0456600Z     raise exc
2025-01-14T13:16:43.0456790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0456830Z     col.setup()
2025-01-14T13:16:43.0457030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0457090Z     self._request._fillfixtures()
2025-01-14T13:16:43.0457310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0457420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0457720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0457820Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0458060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0458130Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0458330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0458680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0458940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0459020Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0459210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0459250Z     raise exc
2025-01-14T13:16:43.0459540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0459600Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0459790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0460020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0460220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0460380Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0460570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0460700Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0460970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0461060Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0461360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0461410Z     yield
2025-01-14T13:16:43.0461630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0461710Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0462120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0462170Z     yield
2025-01-14T13:16:43.0462390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0462440Z     return (yield)
2025-01-14T13:16:43.0462690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0462770Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0463050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0463090Z     yield
2025-01-14T13:16:43.0463310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0463380Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0463570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0463620Z     raise exc
2025-01-14T13:16:43.0464430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0464520Z     col.setup()
2025-01-14T13:16:43.0464710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0464780Z     self._request._fillfixtures()
2025-01-14T13:16:43.0465170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0465280Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0465490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0465590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0465820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0465930Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0466130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0466230Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0466460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0466530Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0466750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0466800Z     raise exc
2025-01-14T13:16:43.0466990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0467120Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0467310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0467440Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0467630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0467780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0467980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0468110Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0468370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0468470Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0468770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0468820Z     yield
2025-01-14T13:16:43.0469090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0469170Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0469380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0469420Z     yield
2025-01-14T13:16:43.0469660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0469700Z     return (yield)
2025-01-14T13:16:43.0469960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0470040Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0470330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0470370Z     yield
2025-01-14T13:16:43.0470600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0470670Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0470860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0470910Z     raise exc
2025-01-14T13:16:43.0471090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0471140Z     col.setup()
2025-01-14T13:16:43.0471390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0471460Z     self._request._fillfixtures()
2025-01-14T13:16:43.0471670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0471780Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0472130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0472240Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0472520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0472600Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0472790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0472890Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0473130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0473200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0473400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0473500Z     raise exc
2025-01-14T13:16:43.0473700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0473760Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0473960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0474090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0474280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0474430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0474630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0474760Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0475030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0475120Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0475430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0475510Z     yield
2025-01-14T13:16:43.0475870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0475950Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0476160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0476210Z     yield
2025-01-14T13:16:43.0476430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0476480Z     return (yield)
2025-01-14T13:16:43.0476730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0476810Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0477230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0477280Z     yield
2025-01-14T13:16:43.0477510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0477580Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0477770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0477810Z     raise exc
2025-01-14T13:16:43.0478300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0478410Z     col.setup()
2025-01-14T13:16:43.0478600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0478670Z     self._request._fillfixtures()
2025-01-14T13:16:43.0478880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0478980Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0479260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0479360Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0479590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0479670Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0479870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0479970Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0480210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0480580Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0480790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0480840Z     raise exc
2025-01-14T13:16:43.0481040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0481100Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0481290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0481420Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0483030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0483220Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0483430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0483560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0483830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0484040Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0484350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0484390Z     yield
2025-01-14T13:16:43.0484620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0484700Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0484910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0484950Z     yield
2025-01-14T13:16:43.0485190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0485230Z     return (yield)
2025-01-14T13:16:43.0485490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0485560Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0485850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0485900Z     yield
2025-01-14T13:16:43.0486120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0486190Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0486500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0486550Z     raise exc
2025-01-14T13:16:43.0486740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0486790Z     col.setup()
2025-01-14T13:16:43.0486980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0487040Z     self._request._fillfixtures()
2025-01-14T13:16:43.0487470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0487600Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0487900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0488000Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0488240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0488310Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0488510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0488720Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0488950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0489030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0489260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0489310Z     raise exc
2025-01-14T13:16:43.0489510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0489570Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0489770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0489900Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0490100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0490250Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0490450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0490760Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0491030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0491120Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0491420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0491470Z     yield
2025-01-14T13:16:43.0491700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0491770Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0491980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0492020Z     yield
2025-01-14T13:16:43.0492250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0492300Z     return (yield)
2025-01-14T13:16:43.0492550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0492630Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0492910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0492950Z     yield
2025-01-14T13:16:43.0493260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0493340Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0493530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0493580Z     raise exc
2025-01-14T13:16:43.0493760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0493810Z     col.setup()
2025-01-14T13:16:43.0494000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0494090Z     self._request._fillfixtures()
2025-01-14T13:16:43.0494310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0494420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0494630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0494720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0494960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0495030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0495290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0495400Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0495640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0495710Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0495910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:43.0496040Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:43.0496230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0496380Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0496580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0496720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0498820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:43.0499810Z     return (yield)
2025-01-14T13:16:43.0500500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:43.0500790Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:43.0501400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:43.0501600Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:43.0502070Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:43.0502230Z     sim.iterate(10)
2025-01-14T13:16:43.0502440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0502780Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0503030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0503040Z 
2025-01-14T13:16:43.0503590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:43.0504030Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:43.0504490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:43.0505080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:43.0505410Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:43.0506140Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0506160Z 
2025-01-14T13:16:43.0506380Z     def initialize_transport_state(
2025-01-14T13:16:43.0506520Z         self,
2025-01-14T13:16:43.0507860Z         simulation_state,
2025-01-14T13:16:43.0507960Z         opacity_state,
2025-01-14T13:16:43.0508020Z         macro_atom_state,
2025-01-14T13:16:43.0508070Z         plasma,
2025-01-14T13:16:43.0508120Z         no_of_packets,
2025-01-14T13:16:43.0508180Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0508230Z         iteration=0,
2025-01-14T13:16:43.0508410Z     ):
2025-01-14T13:16:43.0508520Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0508590Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0508640Z         else:
2025-01-14T13:16:43.0508690Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0508740Z     
2025-01-14T13:16:43.0508850Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0508920Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0508970Z         )
2025-01-14T13:16:43.0509010Z     
2025-01-14T13:16:43.0509110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0509310Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0509440Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0509480Z         else:
2025-01-14T13:16:43.0509540Z             continuum_state = None
2025-01-14T13:16:43.0509620Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0509710Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0509780Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0509860Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0509930Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0510010Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0510070Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0510120Z         ).to_numba(
2025-01-14T13:16:43.0510180Z             macro_atom_state,
2025-01-14T13:16:43.0510240Z             self.line_interaction_type,
2025-01-14T13:16:43.0510280Z         )
2025-01-14T13:16:43.0510350Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0510580Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0510670Z         ]
2025-01-14T13:16:43.0510920Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0510930Z 
2025-01-14T13:16:43.0511180Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0511350Z ______ test_last_interaction_properties[nu_packet_collection-nu_to_check] ______
2025-01-14T13:16:43.0511350Z 
2025-01-14T13:16:43.0511460Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-14T13:16:43.0511690Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-14T13:16:43.0511700Z 
2025-01-14T13:16:43.0511760Z     @pytest.mark.parametrize(
2025-01-14T13:16:43.0511820Z         "expected,obtained",
2025-01-14T13:16:43.0511860Z         [
2025-01-14T13:16:43.0511900Z             (
2025-01-14T13:16:43.0511970Z                 "interaction_type_in_use",
2025-01-14T13:16:43.0512030Z                 "interaction_type_to_check",
2025-01-14T13:16:43.0512080Z             ),
2025-01-14T13:16:43.0512120Z             (
2025-01-14T13:16:43.0512180Z                 "shell_id_in_use",
2025-01-14T13:16:43.0512230Z                 "shell_id_to_check",
2025-01-14T13:16:43.0512280Z             ),
2025-01-14T13:16:43.0512320Z             (
2025-01-14T13:16:43.0512370Z                 "r_in_use",
2025-01-14T13:16:43.0512420Z                 "r_to_check",
2025-01-14T13:16:43.0512460Z             ),
2025-01-14T13:16:43.0512540Z             ("nu_packet_collection", "nu_to_check"),
2025-01-14T13:16:43.0512880Z         ],
2025-01-14T13:16:43.0512950Z     )
2025-01-14T13:16:43.0513080Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-14T13:16:43.0513170Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0513180Z 
2025-01-14T13:16:43.0513360Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-14T13:16:43.0513450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0513710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0513810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0514050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0514130Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0514330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0514420Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0514660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0514960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0515170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0515210Z     raise exc
2025-01-14T13:16:43.0515410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0515480Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0515670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0515800Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0515990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0516140Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0516340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0516480Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0516720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0516850Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0517130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0517170Z     yield
2025-01-14T13:16:43.0517430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0517520Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0517820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0517860Z     yield
2025-01-14T13:16:43.0518090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0518160Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0518370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0518410Z     yield
2025-01-14T13:16:43.0518640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0518680Z     return (yield)
2025-01-14T13:16:43.0518920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0518960Z     return (yield)
2025-01-14T13:16:43.0519250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0519300Z     raise e
2025-01-14T13:16:43.0519820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0519880Z     item.runtest()
2025-01-14T13:16:43.0520080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0520170Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0520520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0520700Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0520890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0521030Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0521250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0521310Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0521580Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:43.0521750Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0521960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0522050Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0522290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0522360Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0522560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0522650Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0522880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0522960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0523160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0523210Z     raise exc
2025-01-14T13:16:43.0523530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0523800Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0523990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0524130Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0524310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0524470Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0524660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0524800Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0525050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0525120Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0525400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0525450Z     yield
2025-01-14T13:16:43.0525710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0525800Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0526100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0526230Z     yield
2025-01-14T13:16:43.0531720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0531830Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0532050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0532090Z     yield
2025-01-14T13:16:43.0532310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0532480Z     return (yield)
2025-01-14T13:16:43.0532710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0532910Z     return (yield)
2025-01-14T13:16:43.0533130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0533180Z     raise e
2025-01-14T13:16:43.0533400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0533460Z     item.runtest()
2025-01-14T13:16:43.0533650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0533840Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0534030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0534180Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0534390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0534520Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0534730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0534800Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0535070Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:43.0535160Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0535370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0535460Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0535690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0535820Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0536010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0536110Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0536340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0536420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0536620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0536660Z     raise exc
2025-01-14T13:16:43.0536850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0536910Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0537100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0537230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0537420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0537570Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0537770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0537970Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0538230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0538310Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0538580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0538630Z     yield
2025-01-14T13:16:43.0538910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0539000Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0539300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0539350Z     yield
2025-01-14T13:16:43.0539570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0539720Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0539930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0540040Z     yield
2025-01-14T13:16:43.0540270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0540320Z     return (yield)
2025-01-14T13:16:43.0540540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0540590Z     return (yield)
2025-01-14T13:16:43.0540820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0540860Z     raise e
2025-01-14T13:16:43.0541080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0541130Z     item.runtest()
2025-01-14T13:16:43.0541320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0541410Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0541600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0541750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0541940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0542110Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0542330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0542390Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0542660Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-14T13:16:43.0542750Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0542960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0543060Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0543290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0543360Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0543570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0543660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0543890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0543960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0544170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0544440Z     raise exc
2025-01-14T13:16:43.0544670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0544730Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0544920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0545060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0545240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0545450Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0545650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0545780Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0546050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0546130Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0546440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0546770Z     yield
2025-01-14T13:16:43.0547000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0547080Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0547280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0547330Z     yield
2025-01-14T13:16:43.0547940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0548010Z     return (yield)
2025-01-14T13:16:43.0548280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0548360Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0548640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0549110Z     yield
2025-01-14T13:16:43.0549910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0550120Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0551110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0551260Z     raise exc
2025-01-14T13:16:43.0551780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0551930Z     col.setup()
2025-01-14T13:16:43.0552450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0552640Z     self._request._fillfixtures()
2025-01-14T13:16:43.0553230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0553520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0554130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0554380Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0555040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0555250Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0555800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0556070Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0556720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0557430Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0558030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0558180Z     raise exc
2025-01-14T13:16:43.0558730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0558920Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0559430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0560920Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0562490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0562940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0564060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0564450Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0565480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0566700Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0567570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0567720Z     yield
2025-01-14T13:16:43.0568670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0568980Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0569600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0569690Z     yield
2025-01-14T13:16:43.0569930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0569990Z     return (yield)
2025-01-14T13:16:43.0570280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0570360Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0570790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0570840Z     yield
2025-01-14T13:16:43.0571430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0571500Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0571690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0571740Z     raise exc
2025-01-14T13:16:43.0571930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0571980Z     col.setup()
2025-01-14T13:16:43.0572170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0572230Z     self._request._fillfixtures()
2025-01-14T13:16:43.0572440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0572550Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0572770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0572870Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0573110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0573180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0573380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0573480Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0573880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0573950Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0574160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0574210Z     raise exc
2025-01-14T13:16:43.0574400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0574470Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0574720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0574860Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0575050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0575210Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0575410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0575540Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0575890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0575980Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0576300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0576350Z     yield
2025-01-14T13:16:43.0576570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0576650Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0576860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0576900Z     yield
2025-01-14T13:16:43.0577130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0577180Z     return (yield)
2025-01-14T13:16:43.0577430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0577510Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0577780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0577860Z     yield
2025-01-14T13:16:43.0578080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0578160Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0578340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0578390Z     raise exc
2025-01-14T13:16:43.0578570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0578630Z     col.setup()
2025-01-14T13:16:43.0578810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0578870Z     self._request._fillfixtures()
2025-01-14T13:16:43.0579080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0579190Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0579410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0579500Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0579840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0579920Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0580190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0580280Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0580520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0580590Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0580790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0580830Z     raise exc
2025-01-14T13:16:43.0581050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0581120Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0581310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0581440Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0581630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0581790Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0581990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0582180Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0582450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0582540Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0583050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0583100Z     yield
2025-01-14T13:16:43.0583330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0583410Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0583620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0583660Z     yield
2025-01-14T13:16:43.0583900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0583940Z     return (yield)
2025-01-14T13:16:43.0584250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0584450Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0584730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0584770Z     yield
2025-01-14T13:16:43.0584990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0585490Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0586550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0586720Z     raise exc
2025-01-14T13:16:43.0587240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0587400Z     col.setup()
2025-01-14T13:16:43.0588050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0588460Z     self._request._fillfixtures()
2025-01-14T13:16:43.0589210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0589500Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0590100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0590350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0592680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0592990Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0593730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0594010Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0594580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0594690Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0595020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0595070Z     raise exc
2025-01-14T13:16:43.0595260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0595330Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0595520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0595650Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0595840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0596310Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0596500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0596630Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0596900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0596980Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0597280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0597330Z     yield
2025-01-14T13:16:43.0597560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0597630Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0597840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0597880Z     yield
2025-01-14T13:16:43.0598110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0598220Z     return (yield)
2025-01-14T13:16:43.0598470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0598550Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0598820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0598870Z     yield
2025-01-14T13:16:43.0599210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0599330Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0599540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0599600Z     raise exc
2025-01-14T13:16:43.0599790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0599850Z     col.setup()
2025-01-14T13:16:43.0600040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0600100Z     self._request._fillfixtures()
2025-01-14T13:16:43.0600320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0600430Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0600650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0600920Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0601170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0601250Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0601450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0601550Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0601990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0602080Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0602280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0602330Z     raise exc
2025-01-14T13:16:43.0602520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0602590Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0602780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0602920Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0603210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0603550Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0603760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0603890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0604170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0604260Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0604570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0604620Z     yield
2025-01-14T13:16:43.0604850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0604930Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0605140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0605390Z     yield
2025-01-14T13:16:43.0605620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0605670Z     return (yield)
2025-01-14T13:16:43.0605920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0606000Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0606270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0606330Z     yield
2025-01-14T13:16:43.0606550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0606620Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0606810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0606860Z     raise exc
2025-01-14T13:16:43.0607040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0607090Z     col.setup()
2025-01-14T13:16:43.0607420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0607490Z     self._request._fillfixtures()
2025-01-14T13:16:43.0607710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0607910Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0608140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0608230Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0608480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0608550Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0608780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0608890Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0609120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0609200Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0609390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0609440Z     raise exc
2025-01-14T13:16:43.0609630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0609700Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0609960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0610090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0610280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0610440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0610630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0610770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0611040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0611130Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0611430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0611470Z     yield
2025-01-14T13:16:43.0611740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0611840Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0612050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0612100Z     yield
2025-01-14T13:16:43.0612590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0613190Z     return (yield)
2025-01-14T13:16:43.0614270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0614530Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0615340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0615500Z     yield
2025-01-14T13:16:43.0616230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0616440Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0616960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0617120Z     raise exc
2025-01-14T13:16:43.0617640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0617790Z     col.setup()
2025-01-14T13:16:43.0618310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0618490Z     self._request._fillfixtures()
2025-01-14T13:16:43.0620120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0620470Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0621070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0621330Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0621970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0622420Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0622980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0623250Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0623900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0624120Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0624650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0624810Z     raise exc
2025-01-14T13:16:43.0625610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0626460Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0626840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0627390Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0628200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0628860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0629680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0629840Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0630120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0630200Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0630530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0630800Z     yield
2025-01-14T13:16:43.0631040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0631130Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0631330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0631380Z     yield
2025-01-14T13:16:43.0631600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0631660Z     return (yield)
2025-01-14T13:16:43.0631910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0631990Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0632260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0632310Z     yield
2025-01-14T13:16:43.0632530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0632610Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0632790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0632840Z     raise exc
2025-01-14T13:16:43.0633180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0633230Z     col.setup()
2025-01-14T13:16:43.0633750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0633830Z     self._request._fillfixtures()
2025-01-14T13:16:43.0634050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0634160Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0634380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0634530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0634780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0634850Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0635050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0635160Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0635390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0635470Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0635900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0635960Z     raise exc
2025-01-14T13:16:43.0636150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0636230Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0636420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0636550Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0636750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0636900Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0637110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0637240Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0637520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0637600Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0637950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0637990Z     yield
2025-01-14T13:16:43.0638220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0638300Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0638500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0638540Z     yield
2025-01-14T13:16:43.0638770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0638970Z     return (yield)
2025-01-14T13:16:43.0639230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0639300Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0639580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0639630Z     yield
2025-01-14T13:16:43.0639860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0639930Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0640110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0640150Z     raise exc
2025-01-14T13:16:43.0640430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0640480Z     col.setup()
2025-01-14T13:16:43.0640670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0640730Z     self._request._fillfixtures()
2025-01-14T13:16:43.0640950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0641050Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0641480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0641600Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0641830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0641900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0642100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0642200Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0642430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0642590Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0642790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0642840Z     raise exc
2025-01-14T13:16:43.0643040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0643110Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0643300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0643420Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0643610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0643760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0643960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0644100Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0644370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0644680Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0645050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0645110Z     yield
2025-01-14T13:16:43.0645360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0645440Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0645640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0645700Z     yield
2025-01-14T13:16:43.0645930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0645970Z     return (yield)
2025-01-14T13:16:43.0646220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0646300Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0646590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0646640Z     yield
2025-01-14T13:16:43.0646860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0646930Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0647490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0647550Z     raise exc
2025-01-14T13:16:43.0647760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0647810Z     col.setup()
2025-01-14T13:16:43.0648020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0648080Z     self._request._fillfixtures()
2025-01-14T13:16:43.0648380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0648500Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0648730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0648820Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0649070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0649150Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0661390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0662730Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0662980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0663070Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0663270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0663320Z     raise exc
2025-01-14T13:16:43.0663510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0663570Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0663780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0663900Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0664100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0664260Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0664460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0664740Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0665010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0665100Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0665400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0665450Z     yield
2025-01-14T13:16:43.0665680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0665750Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0665960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0666010Z     yield
2025-01-14T13:16:43.0666240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0666290Z     return (yield)
2025-01-14T13:16:43.0666540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0666620Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0666900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0666940Z     yield
2025-01-14T13:16:43.0667320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0667550Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0667740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0667790Z     raise exc
2025-01-14T13:16:43.0667980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0668030Z     col.setup()
2025-01-14T13:16:43.0668310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0668370Z     self._request._fillfixtures()
2025-01-14T13:16:43.0668590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0668690Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0668910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0669010Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0669250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0669400Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0669600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0669700Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0669930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0670010Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0670350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0670410Z     raise exc
2025-01-14T13:16:43.0670600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0670660Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0670860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0670990Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0671220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0671390Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0671710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0671860Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0672130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0672210Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0672510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0672550Z     yield
2025-01-14T13:16:43.0672800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0672910Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0673120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0673160Z     yield
2025-01-14T13:16:43.0673390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0673450Z     return (yield)
2025-01-14T13:16:43.0673690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0673770Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0674300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0674370Z     yield
2025-01-14T13:16:43.0674610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0674690Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0674880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0675060Z     raise exc
2025-01-14T13:16:43.0675380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0675430Z     col.setup()
2025-01-14T13:16:43.0675620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0675680Z     self._request._fillfixtures()
2025-01-14T13:16:43.0675900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0676000Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0676210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0676310Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0677040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0677110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0677310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0677410Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0677640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0677730Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0677930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0677980Z     raise exc
2025-01-14T13:16:43.0678170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0678240Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0678460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0678590Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0678840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0678990Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0679200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0679360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0679630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0679720Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0680040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0680090Z     yield
2025-01-14T13:16:43.0680320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0680400Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0680600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0680660Z     yield
2025-01-14T13:16:43.0680930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0680980Z     return (yield)
2025-01-14T13:16:43.0681360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0681450Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0681730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0681770Z     yield
2025-01-14T13:16:43.0682000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0682080Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0682500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0682570Z     raise exc
2025-01-14T13:16:43.0682760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0682820Z     col.setup()
2025-01-14T13:16:43.0683040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0683110Z     self._request._fillfixtures()
2025-01-14T13:16:43.0683350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0683460Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0683820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0683920Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0684180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0684260Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0684450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0684550Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0684790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0684900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0685120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0685170Z     raise exc
2025-01-14T13:16:43.0685360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0685420Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0685630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0686000Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0686190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0686340Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0686540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0686680Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0686950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0687040Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0687350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0687420Z     yield
2025-01-14T13:16:43.0687660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0687740Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0687940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0687980Z     yield
2025-01-14T13:16:43.0688330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0688420Z     return (yield)
2025-01-14T13:16:43.0688680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0688770Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0689080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0689130Z     yield
2025-01-14T13:16:43.0689410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0689490Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0689670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0689720Z     raise exc
2025-01-14T13:16:43.0689910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0690410Z     col.setup()
2025-01-14T13:16:43.0690640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0690700Z     self._request._fillfixtures()
2025-01-14T13:16:43.0690910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0691270Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0691480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0691590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0691820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0691900Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0692100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0692200Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0692440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0692520Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0692720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0692770Z     raise exc
2025-01-14T13:16:43.0692960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0693060Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0693260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0693390Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0693610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0693770Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0693970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0694110Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0694380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0694480Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0694890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0694950Z     yield
2025-01-14T13:16:43.0695180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0695260Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0695590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0695650Z     yield
2025-01-14T13:16:43.0695880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0695960Z     return (yield)
2025-01-14T13:16:43.0696240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0696320Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0696660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0696710Z     yield
2025-01-14T13:16:43.0696940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0697000Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0697190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0697240Z     raise exc
2025-01-14T13:16:43.0697560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0697630Z     col.setup()
2025-01-14T13:16:43.0697830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0698030Z     self._request._fillfixtures()
2025-01-14T13:16:43.0698250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0698360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0698580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0698680Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0698920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0699000Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0699220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0699330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0699570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0699640Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0699840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0699950Z     raise exc
2025-01-14T13:16:43.0700150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0700230Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0700580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0700720Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0700920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0701080Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0701290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0701430Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0701700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0701800Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0702110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0702160Z     yield
2025-01-14T13:16:43.0702410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0702700Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0702910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0703240Z     yield
2025-01-14T13:16:43.0703490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0703540Z     return (yield)
2025-01-14T13:16:43.0703800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0703940Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0704220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0704270Z     yield
2025-01-14T13:16:43.0704510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0704580Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0704770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0704810Z     raise exc
2025-01-14T13:16:43.0705000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0705280Z     col.setup()
2025-01-14T13:16:43.0705470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0705530Z     self._request._fillfixtures()
2025-01-14T13:16:43.0705740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0705840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0706050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0706150Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0706380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0706460Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0706650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0706700Z     raise exc
2025-01-14T13:16:43.0707540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0708890Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0709700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0710190Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0711960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0712160Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0712370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0712500Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0712770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0712880Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0713190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0713250Z     yield
2025-01-14T13:16:43.0713500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0713580Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0713790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0713830Z     yield
2025-01-14T13:16:43.0714220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0714280Z     return (yield)
2025-01-14T13:16:43.0714530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0714610Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0714890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0714940Z     yield
2025-01-14T13:16:43.0715380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0715480Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0715670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0715710Z     raise exc
2025-01-14T13:16:43.0715900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0715950Z     col.setup()
2025-01-14T13:16:43.0716140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0716290Z     self._request._fillfixtures()
2025-01-14T13:16:43.0716910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0717030Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0717260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0717360Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0717600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0717670Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0717870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0717920Z     raise exc
2025-01-14T13:16:43.0718100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0718180Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0718370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0718500Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0718920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0719070Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0719270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0719400Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0719670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0719760Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0720060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0720110Z     yield
2025-01-14T13:16:43.0720340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0720420Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0720620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0720680Z     yield
2025-01-14T13:16:43.0720910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0720970Z     return (yield)
2025-01-14T13:16:43.0721430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0721520Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0721800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0721850Z     yield
2025-01-14T13:16:43.0722080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0722150Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0722380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0722420Z     raise exc
2025-01-14T13:16:43.0722610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0722660Z     col.setup()
2025-01-14T13:16:43.0722850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0722920Z     self._request._fillfixtures()
2025-01-14T13:16:43.0723140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0723250Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0723540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0723640Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0723880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0723960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0724160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0724220Z     raise exc
2025-01-14T13:16:43.0724420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0724490Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0724690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0724830Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0725020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0725270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0725600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0725740Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0726010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0726100Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0726430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0726470Z     yield
2025-01-14T13:16:43.0726710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0726790Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0727000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0727060Z     yield
2025-01-14T13:16:43.0727300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0727350Z     return (yield)
2025-01-14T13:16:43.0727610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0727690Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0728060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0728120Z     yield
2025-01-14T13:16:43.0728350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0728430Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0728610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0728660Z     raise exc
2025-01-14T13:16:43.0728860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0728940Z     col.setup()
2025-01-14T13:16:43.0729140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0729200Z     self._request._fillfixtures()
2025-01-14T13:16:43.0729420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0729520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0729910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0730000Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0730320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0730410Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0732980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0733590Z     raise exc
2025-01-14T13:16:43.0734320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0734530Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0735070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0735430Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0735950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0736140Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0736340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0736480Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0738540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0738660Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0738970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0739020Z     yield
2025-01-14T13:16:43.0739260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0739330Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0739540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0739580Z     yield
2025-01-14T13:16:43.0739820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0739860Z     return (yield)
2025-01-14T13:16:43.0740120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0740200Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0740660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0740710Z     yield
2025-01-14T13:16:43.0740930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0741370Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0742410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0742600Z     raise exc
2025-01-14T13:16:43.0743120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0743290Z     col.setup()
2025-01-14T13:16:43.0743810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0744000Z     self._request._fillfixtures()
2025-01-14T13:16:43.0745180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0745540Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0746340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0746600Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0747260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0747460Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0748090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0748550Z     raise exc
2025-01-14T13:16:43.0748760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0748830Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0749030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0749160Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0749350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0749510Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0749710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0749980Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0750260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0750340Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0750650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0750770Z     yield
2025-01-14T13:16:43.0751010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0751080Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0751290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0751330Z     yield
2025-01-14T13:16:43.0751570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0751620Z     return (yield)
2025-01-14T13:16:43.0751920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0752030Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0752340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0752400Z     yield
2025-01-14T13:16:43.0752640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0752710Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0752910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0752970Z     raise exc
2025-01-14T13:16:43.0753270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0753320Z     col.setup()
2025-01-14T13:16:43.0753520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0753600Z     self._request._fillfixtures()
2025-01-14T13:16:43.0753810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0753930Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0754370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0754590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0754860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0754930Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0755140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0755240Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0755480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0755670Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0755870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0755920Z     raise exc
2025-01-14T13:16:43.0756120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0756180Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0756370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0756510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0756700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0756860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0757050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0757190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0757600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0757880Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0758190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0758230Z     yield
2025-01-14T13:16:43.0758460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0758540Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0758750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0758790Z     yield
2025-01-14T13:16:43.0759020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0759070Z     return (yield)
2025-01-14T13:16:43.0759320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0759400Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0759680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0759720Z     yield
2025-01-14T13:16:43.0759940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0760020Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0760290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0760340Z     raise exc
2025-01-14T13:16:43.0760530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0760580Z     col.setup()
2025-01-14T13:16:43.0760770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0760830Z     self._request._fillfixtures()
2025-01-14T13:16:43.0761070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0761190Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0761530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0761630Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0761860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0761940Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0762140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0762310Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0762540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0762620Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0762820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0762870Z     raise exc
2025-01-14T13:16:43.0763060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0763130Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0763320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0763450Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0769090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0769290Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0769490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0769620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0769980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0770070Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0770380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0770420Z     yield
2025-01-14T13:16:43.0770650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0770730Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0770940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0771080Z     yield
2025-01-14T13:16:43.0771340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0771400Z     return (yield)
2025-01-14T13:16:43.0771650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0771730Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0772010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0772060Z     yield
2025-01-14T13:16:43.0772410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0772490Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0772680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0772730Z     raise exc
2025-01-14T13:16:43.0772910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0772960Z     col.setup()
2025-01-14T13:16:43.0773150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0773250Z     self._request._fillfixtures()
2025-01-14T13:16:43.0774390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0774790Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0775640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0775970Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0776660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0776860Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0778290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0778560Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0779230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0780320Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0780840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0780910Z     raise exc
2025-01-14T13:16:43.0781110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0781190Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0781380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0781510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0781700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0781860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0782170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0782310Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0782590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0782680Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0782980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0783030Z     yield
2025-01-14T13:16:43.0783260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0783330Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0783550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0783590Z     yield
2025-01-14T13:16:43.0783820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0783870Z     return (yield)
2025-01-14T13:16:43.0784120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0784200Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0785600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0785840Z     yield
2025-01-14T13:16:43.0786080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0786160Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0786340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0786390Z     raise exc
2025-01-14T13:16:43.0786570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0786710Z     col.setup()
2025-01-14T13:16:43.0786900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0786960Z     self._request._fillfixtures()
2025-01-14T13:16:43.0787180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0787280Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0787600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0787710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0788270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0788350Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0788550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0788650Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0788890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0788960Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0789150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0789200Z     raise exc
2025-01-14T13:16:43.0789390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0789450Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0789640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0789780Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0789960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0790160Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0790360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0790490Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0790770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0790850Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0791160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0791200Z     yield
2025-01-14T13:16:43.0791430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0791510Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0791720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0791760Z     yield
2025-01-14T13:16:43.0791990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0792040Z     return (yield)
2025-01-14T13:16:43.0792290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0792440Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0792720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0792770Z     yield
2025-01-14T13:16:43.0792990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0793060Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0793250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0793400Z     raise exc
2025-01-14T13:16:43.0793590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0793640Z     col.setup()
2025-01-14T13:16:43.0793830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0793900Z     self._request._fillfixtures()
2025-01-14T13:16:43.0794120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0794230Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0794450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0794590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0794830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0794910Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0795100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0795200Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0795430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0795500Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0795690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0795740Z     raise exc
2025-01-14T13:16:43.0795930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0795990Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0796180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0796520Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0796710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0796860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0797060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0797190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0797460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0797540Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0797850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0797890Z     yield
2025-01-14T13:16:43.0798120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0798200Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0798400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0798450Z     yield
2025-01-14T13:16:43.0798680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0798810Z     return (yield)
2025-01-14T13:16:43.0799060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0799140Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0799410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0799460Z     yield
2025-01-14T13:16:43.0799680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0799790Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0799970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0800020Z     raise exc
2025-01-14T13:16:43.0800200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0800250Z     col.setup()
2025-01-14T13:16:43.0800440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0800500Z     self._request._fillfixtures()
2025-01-14T13:16:43.0800710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0800870Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0801090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0801180Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0801420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0801490Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0801680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0801780Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0802010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0802090Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0802280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0802330Z     raise exc
2025-01-14T13:16:43.0802510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0802610Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0802800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0802930Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0803110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0803260Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0803460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0803590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0803860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0803940Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0804240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0804290Z     yield
2025-01-14T13:16:43.0804520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0804590Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0804800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0804840Z     yield
2025-01-14T13:16:43.0805120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0805170Z     return (yield)
2025-01-14T13:16:43.0805420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0805500Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0805770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0805840Z     yield
2025-01-14T13:16:43.0806290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0807320Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0807520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0807570Z     raise exc
2025-01-14T13:16:43.0807760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0807810Z     col.setup()
2025-01-14T13:16:43.0808000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0808190Z     self._request._fillfixtures()
2025-01-14T13:16:43.0808400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0808500Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0808720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0808810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0809040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0809110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0809330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0809430Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0809670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0809750Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0809940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0810030Z     raise exc
2025-01-14T13:16:43.0810220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0810280Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0810470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0810600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0810790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0810940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0811140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0811270Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0811540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0811630Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0811930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0811970Z     yield
2025-01-14T13:16:43.0812200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0812270Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0812770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0812850Z     yield
2025-01-14T13:16:43.0813080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0813130Z     return (yield)
2025-01-14T13:16:43.0813380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0813460Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0813770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0813820Z     yield
2025-01-14T13:16:43.0814040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0814120Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0814300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0814350Z     raise exc
2025-01-14T13:16:43.0814530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0814860Z     col.setup()
2025-01-14T13:16:43.0815050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0815110Z     self._request._fillfixtures()
2025-01-14T13:16:43.0815320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0815420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0815640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0815720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0815960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0816030Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0816230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0816330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0816560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0816680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0816870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0816920Z     raise exc
2025-01-14T13:16:43.0817110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0817180Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0817370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0817490Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0817680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0817840Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0818440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0818590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0818860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0818950Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0819250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0819300Z     yield
2025-01-14T13:16:43.0819680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0819760Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0819970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0820020Z     yield
2025-01-14T13:16:43.0820240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0820290Z     return (yield)
2025-01-14T13:16:43.0820890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0820990Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0821270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0821320Z     yield
2025-01-14T13:16:43.0821540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0821610Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0821800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0821930Z     raise exc
2025-01-14T13:16:43.0822120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0822160Z     col.setup()
2025-01-14T13:16:43.0822360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0822420Z     self._request._fillfixtures()
2025-01-14T13:16:43.0822660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0822760Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0822980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0823070Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0823310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0823390Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0823590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0823690Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0824030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0824100Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0824300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0824350Z     raise exc
2025-01-14T13:16:43.0824530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0824600Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0824790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0824920Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0825110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0825270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0825470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0825600Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0825870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0825950Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0827380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0827460Z     yield
2025-01-14T13:16:43.0827680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0827770Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0828540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0828620Z     yield
2025-01-14T13:16:43.0828920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0828980Z     return (yield)
2025-01-14T13:16:43.0829230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0829310Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0829580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0829640Z     yield
2025-01-14T13:16:43.0829860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0830000Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0830190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0830240Z     raise exc
2025-01-14T13:16:43.0830420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0830470Z     col.setup()
2025-01-14T13:16:43.0830660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0830720Z     self._request._fillfixtures()
2025-01-14T13:16:43.0830930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0831040Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0831250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0831480Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0831750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0831830Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0832120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0832220Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0832460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0832540Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0832750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0832800Z     raise exc
2025-01-14T13:16:43.0832990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0833060Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0833250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0833380Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0833680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0833840Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0834040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0834170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0834550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-14T13:16:43.0834630Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0834940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0834980Z     yield
2025-01-14T13:16:43.0835210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-14T13:16:43.0835290Z     yield from self._runtest_for(item, "setup")
2025-01-14T13:16:43.0835520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0835580Z     yield
2025-01-14T13:16:43.0835800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-14T13:16:43.0835850Z     return (yield)
2025-01-14T13:16:43.0837940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-14T13:16:43.0838350Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0839150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0839870Z     yield
2025-01-14T13:16:43.0840660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-14T13:16:43.0840760Z     item.session._setupstate.setup(item)
2025-01-14T13:16:43.0840960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-14T13:16:43.0841010Z     raise exc
2025-01-14T13:16:43.0841190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-14T13:16:43.0841250Z     col.setup()
2025-01-14T13:16:43.0841440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-14T13:16:43.0841500Z     self._request._fillfixtures()
2025-01-14T13:16:43.0841720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-14T13:16:43.0841820Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-14T13:16:43.0842040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0842130Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0842370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0842530Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0842730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0842830Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0843060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0843130Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0843320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:43.0843470Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:43.0843650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0843800Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0844010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0844140Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0844370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:43.0844420Z     return (yield)
2025-01-14T13:16:43.0844830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:43.0844940Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:43.0845160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:43.0845230Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:43.0845400Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-14T13:16:43.0845450Z     sim.iterate(10)
2025-01-14T13:16:43.0845520Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0845680Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0845770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0845770Z 
2025-01-14T13:16:43.0845990Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x3030effe0>
2025-01-14T13:16:43.0846330Z simulation_state = <tardis.model.base.SimulationState object at 0x30e5bd100>
2025-01-14T13:16:43.0847220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x3030efce0>
2025-01-14T13:16:43.0847860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3030ecc80>
2025-01-14T13:16:43.0849310Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e82cfe0>
2025-01-14T13:16:43.0849640Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0849650Z 
2025-01-14T13:16:43.0850270Z     def initialize_transport_state(
2025-01-14T13:16:43.0850380Z         self,
2025-01-14T13:16:43.0850430Z         simulation_state,
2025-01-14T13:16:43.0850490Z         opacity_state,
2025-01-14T13:16:43.0850540Z         macro_atom_state,
2025-01-14T13:16:43.0850590Z         plasma,
2025-01-14T13:16:43.0850630Z         no_of_packets,
2025-01-14T13:16:43.0850690Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0850740Z         iteration=0,
2025-01-14T13:16:43.0850780Z     ):
2025-01-14T13:16:43.0850890Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0850960Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0851010Z         else:
2025-01-14T13:16:43.0851060Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0851100Z     
2025-01-14T13:16:43.0851210Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0851290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0851330Z         )
2025-01-14T13:16:43.0851370Z     
2025-01-14T13:16:43.0851550Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0851640Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0851760Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0851810Z         else:
2025-01-14T13:16:43.0851860Z             continuum_state = None
2025-01-14T13:16:43.0851940Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0852020Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0852090Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0852170Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0852240Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0852310Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0852370Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0852420Z         ).to_numba(
2025-01-14T13:16:43.0852470Z             macro_atom_state,
2025-01-14T13:16:43.0852530Z             self.line_interaction_type,
2025-01-14T13:16:43.0852570Z         )
2025-01-14T13:16:43.0852660Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0852870Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0852920Z         ]
2025-01-14T13:16:43.0853160Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0853170Z 
2025-01-14T13:16:43.0853380Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0853640Z _ test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] _
2025-01-14T13:16:43.0853650Z 
2025-01-14T13:16:43.0854250Z expected = 'interaction_type_last_interaction_class'
2025-01-14T13:16:43.0854370Z obtained = 'last_interaction_type_rpacket_tracker'
2025-01-14T13:16:43.0854990Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker]>>
2025-01-14T13:16:43.0855010Z 
2025-01-14T13:16:43.0855090Z     @pytest.mark.parametrize(
2025-01-14T13:16:43.0855150Z         "expected,obtained",
2025-01-14T13:16:43.0855200Z         [
2025-01-14T13:16:43.0855240Z             (
2025-01-14T13:16:43.0855330Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:43.0855410Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:43.0855460Z             ),
2025-01-14T13:16:43.0855590Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:43.0855680Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:43.0855830Z         ],
2025-01-14T13:16:43.0855870Z     )
2025-01-14T13:16:43.0856000Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:43.0856090Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0856100Z 
2025-01-14T13:16:43.0856240Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:43.0856330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0856560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0856650Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0856890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0856970Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0857170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0857270Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0857500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0858060Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0858280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:43.0858420Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:43.0858600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0858760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0858960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0859090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0859330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:43.0859380Z     return (yield)
2025-01-14T13:16:43.0859610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:43.0859730Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:43.0859950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:43.0860010Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:43.0860120Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:43.0860170Z     sim = run_tardis(
2025-01-14T13:16:43.0860410Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:43.0860490Z     simulation.run_convergence()
2025-01-14T13:16:43.0860580Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:43.0860700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:43.0860770Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0861010Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0861100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0861110Z 
2025-01-14T13:16:43.0861360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:43.0861520Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:43.0862380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:43.0863070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:43.0863400Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:43.0863700Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0863710Z 
2025-01-14T13:16:43.0864420Z     def initialize_transport_state(
2025-01-14T13:16:43.0864470Z         self,
2025-01-14T13:16:43.0864520Z         simulation_state,
2025-01-14T13:16:43.0864570Z         opacity_state,
2025-01-14T13:16:43.0864620Z         macro_atom_state,
2025-01-14T13:16:43.0870950Z         plasma,
2025-01-14T13:16:43.0871040Z         no_of_packets,
2025-01-14T13:16:43.0871100Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0871150Z         iteration=0,
2025-01-14T13:16:43.0871190Z     ):
2025-01-14T13:16:43.0871290Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0871360Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0871400Z         else:
2025-01-14T13:16:43.0871460Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0871510Z     
2025-01-14T13:16:43.0871610Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0871690Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0871730Z         )
2025-01-14T13:16:43.0871800Z     
2025-01-14T13:16:43.0871900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0871990Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0872110Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0872280Z         else:
2025-01-14T13:16:43.0872350Z             continuum_state = None
2025-01-14T13:16:43.0872420Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0872510Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0872570Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0872650Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0872730Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0872800Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0872860Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0872910Z         ).to_numba(
2025-01-14T13:16:43.0872960Z             macro_atom_state,
2025-01-14T13:16:43.0873030Z             self.line_interaction_type,
2025-01-14T13:16:43.0873070Z         )
2025-01-14T13:16:43.0873150Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0873370Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0873410Z         ]
2025-01-14T13:16:43.0873660Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0873660Z 
2025-01-14T13:16:43.0873780Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0873910Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:16:43.0876150Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:43.0877150Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:43.0877520Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:43.0878060Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:43.0878280Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:43.0878340Z 	
2025-01-14T13:16:43.0878580Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-14T13:16:43.0878720Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:16:43.0879120Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:43.0879310Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:43.0879390Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:43.0879450Z 	Starting iteration 1 of 3
2025-01-14T13:16:43.0879640Z _ test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] _
2025-01-14T13:16:43.0879790Z 
2025-01-14T13:16:43.0879860Z expected = 'shell_id_last_interaction_class'
2025-01-14T13:16:43.0879930Z obtained = 'shell_id_rpacket_tracker'
2025-01-14T13:16:43.0880220Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker]>>
2025-01-14T13:16:43.0880230Z 
2025-01-14T13:16:43.0880290Z     @pytest.mark.parametrize(
2025-01-14T13:16:43.0880350Z         "expected,obtained",
2025-01-14T13:16:43.0880400Z         [
2025-01-14T13:16:43.0880440Z             (
2025-01-14T13:16:43.0880520Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:43.0880600Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:43.0880650Z             ),
2025-01-14T13:16:43.0880770Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:43.0880860Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:43.0880910Z         ],
2025-01-14T13:16:43.0880950Z     )
2025-01-14T13:16:43.0881080Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:43.0881170Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0881210Z 
2025-01-14T13:16:43.0881350Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:43.0881450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0881670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0881760Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0882000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0882070Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0882270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0882370Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0882600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0882680Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0882870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0882920Z     raise exc
2025-01-14T13:16:43.0883110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0883170Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0883600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0883750Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0883950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0884110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0884300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0884470Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0884730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0884810Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0885090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0885130Z     yield
2025-01-14T13:16:43.0885390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0885480Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0886030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0886090Z     yield
2025-01-14T13:16:43.0886310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0886390Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0886590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0886640Z     yield
2025-01-14T13:16:43.0886860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0886910Z     return (yield)
2025-01-14T13:16:43.0887140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0887190Z     return (yield)
2025-01-14T13:16:43.0887410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0887450Z     raise e
2025-01-14T13:16:43.0887800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0887950Z     item.runtest()
2025-01-14T13:16:43.0888150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0888230Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0888430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0888580Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0888780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0888910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0889130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0889200Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0889410Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:43.0889500Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0889710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0889810Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0890040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0890110Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0890390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0890480Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0890720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0890790Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0890990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:43.0891240Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:43.0891440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0891590Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0891780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0891910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0892150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:43.0892270Z     return (yield)
2025-01-14T13:16:43.0892500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:43.0892600Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:43.0892820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:43.0892890Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:43.0893000Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:43.0893050Z     sim = run_tardis(
2025-01-14T13:16:43.0893110Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:43.0893170Z     simulation.run_convergence()
2025-01-14T13:16:43.0893260Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:43.0893370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:43.0893440Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0893550Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0893650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0893650Z 
2025-01-14T13:16:43.0893860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:43.0894190Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:43.0894370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:43.0894590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:43.0894710Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:43.0894810Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0894820Z 
2025-01-14T13:16:43.0894880Z     def initialize_transport_state(
2025-01-14T13:16:43.0894920Z         self,
2025-01-14T13:16:43.0894980Z         simulation_state,
2025-01-14T13:16:43.0895030Z         opacity_state,
2025-01-14T13:16:43.0895080Z         macro_atom_state,
2025-01-14T13:16:43.0895120Z         plasma,
2025-01-14T13:16:43.0895170Z         no_of_packets,
2025-01-14T13:16:43.0895230Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0895270Z         iteration=0,
2025-01-14T13:16:43.0895320Z     ):
2025-01-14T13:16:43.0895410Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0895480Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0895530Z         else:
2025-01-14T13:16:43.0895590Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0895630Z     
2025-01-14T13:16:43.0895740Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0896290Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0896370Z         )
2025-01-14T13:16:43.0896410Z     
2025-01-14T13:16:43.0896520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0896610Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0896740Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0896780Z         else:
2025-01-14T13:16:43.0896850Z             continuum_state = None
2025-01-14T13:16:43.0896930Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0897060Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0897130Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0897210Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0897290Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0897360Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0897420Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0897470Z         ).to_numba(
2025-01-14T13:16:43.0897520Z             macro_atom_state,
2025-01-14T13:16:43.0897580Z             self.line_interaction_type,
2025-01-14T13:16:43.0897620Z         )
2025-01-14T13:16:43.0897760Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0897990Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0898030Z         ]
2025-01-14T13:16:43.0898280Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0898290Z 
2025-01-14T13:16:43.0898400Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0898570Z _ test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] _
2025-01-14T13:16:43.0898570Z 
2025-01-14T13:16:43.0898710Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-14T13:16:43.0898960Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-14T13:16:43.0898970Z 
2025-01-14T13:16:43.0899030Z     @pytest.mark.parametrize(
2025-01-14T13:16:43.0899090Z         "expected,obtained",
2025-01-14T13:16:43.0899130Z         [
2025-01-14T13:16:43.0899170Z             (
2025-01-14T13:16:43.0899260Z                 "interaction_type_last_interaction_class",
2025-01-14T13:16:43.0899330Z                 "last_interaction_type_rpacket_tracker",
2025-01-14T13:16:43.0899410Z             ),
2025-01-14T13:16:43.0899530Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-14T13:16:43.0899620Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-14T13:16:43.0899670Z         ],
2025-01-14T13:16:43.0899710Z     )
2025-01-14T13:16:43.0899840Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-14T13:16:43.0899920Z >       expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0899920Z 
2025-01-14T13:16:43.0900060Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-14T13:16:43.0900150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0900370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0900460Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0900700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0900770Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0901090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0901190Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0901430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0901560Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0901760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0901800Z     raise exc
2025-01-14T13:16:43.0902000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0902070Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0902250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0902510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0902710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0902860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0903060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0903200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0903450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0903590Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0903870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0903920Z     yield
2025-01-14T13:16:43.0904180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0904260Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0904570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0904610Z     yield
2025-01-14T13:16:43.0904830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0904910Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0905110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0905160Z     yield
2025-01-14T13:16:43.0905380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0905430Z     return (yield)
2025-01-14T13:16:43.0905700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0905740Z     return (yield)
2025-01-14T13:16:43.0905960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0906010Z     raise e
2025-01-14T13:16:43.0906240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0906290Z     item.runtest()
2025-01-14T13:16:43.0906480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0906560Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0906760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0906910Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0907110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0907240Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0907460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0907530Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0907740Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:43.0908680Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0908970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0909070Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0909310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0909390Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0909640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0909750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0909980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0910050Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0910250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-14T13:16:43.0910300Z     raise exc
2025-01-14T13:16:43.0910490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-14T13:16:43.0910560Z     result: Optional[TResult] = func()
2025-01-14T13:16:43.0911330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-14T13:16:43.0911460Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-14T13:16:43.0911650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0911800Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0912000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0912130Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0912380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-14T13:16:43.0912450Z     yield from thread_exception_runtest_hook()
2025-01-14T13:16:43.0912740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-14T13:16:43.0912790Z     yield
2025-01-14T13:16:43.0913710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-14T13:16:43.0913900Z     yield from unraisable_exception_runtest_hook()
2025-01-14T13:16:43.0914210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-14T13:16:43.0914260Z     yield
2025-01-14T13:16:43.0914490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-14T13:16:43.0914830Z     yield from self._runtest_for(item, "call")
2025-01-14T13:16:43.0916210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-14T13:16:43.0916290Z     yield
2025-01-14T13:16:43.0916570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-14T13:16:43.0916640Z     return (yield)
2025-01-14T13:16:43.0917300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-14T13:16:43.0917540Z     return (yield)
2025-01-14T13:16:43.0918500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-14T13:16:43.0918590Z     raise e
2025-01-14T13:16:43.0918840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-14T13:16:43.0918900Z     item.runtest()
2025-01-14T13:16:43.0919120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-14T13:16:43.0919340Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-14T13:16:43.0919540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0919730Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0920540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0921550Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0925020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-14T13:16:43.0925690Z     result = testfunction(**testargs)
2025-01-14T13:16:43.0926770Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-14T13:16:43.0927060Z     expected = request.getfixturevalue(expected)
2025-01-14T13:16:43.0927870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-14T13:16:43.0927990Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-14T13:16:43.0928240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0931180Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0931400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-14T13:16:43.0931520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-14T13:16:43.0931780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-14T13:16:43.0931850Z     fixturedef.execute(request=subrequest)
2025-01-14T13:16:43.0932770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-14T13:16:43.0932930Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-14T13:16:43.0933120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-14T13:16:43.0933430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-14T13:16:43.0933630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-14T13:16:43.0933770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-14T13:16:43.0934010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-14T13:16:43.0935030Z     return (yield)
2025-01-14T13:16:43.0935270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-14T13:16:43.0935380Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-14T13:16:43.0935620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-14T13:16:43.0935690Z     fixture_result = fixturefunc(**kwargs)
2025-01-14T13:16:43.0935800Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-14T13:16:43.0935850Z     sim = run_tardis(
2025-01-14T13:16:43.0935910Z tardis/base.py:114: in run_tardis
2025-01-14T13:16:43.0936140Z     simulation.run_convergence()
2025-01-14T13:16:43.0936230Z tardis/simulation/base.py:531: in run_convergence
2025-01-14T13:16:43.0936340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:43.0937370Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0937540Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0937640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0937650Z 
2025-01-14T13:16:43.0937870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x155fc3470>
2025-01-14T13:16:43.0938040Z simulation_state = <tardis.model.base.SimulationState object at 0x125c8b470>
2025-01-14T13:16:43.0938550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x125cc6a80>
2025-01-14T13:16:43.0939010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x125cc5ee0>
2025-01-14T13:16:43.0939140Z plasma = <tardis.plasma.base.BasePlasma object at 0x125c1d3a0>
2025-01-14T13:16:43.0939250Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0939250Z 
2025-01-14T13:16:43.0939320Z     def initialize_transport_state(
2025-01-14T13:16:43.0939360Z         self,
2025-01-14T13:16:43.0939420Z         simulation_state,
2025-01-14T13:16:43.0940000Z         opacity_state,
2025-01-14T13:16:43.0940350Z         macro_atom_state,
2025-01-14T13:16:43.0941580Z         plasma,
2025-01-14T13:16:43.0941650Z         no_of_packets,
2025-01-14T13:16:43.0941710Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0941760Z         iteration=0,
2025-01-14T13:16:43.0941810Z     ):
2025-01-14T13:16:43.0942690Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0943610Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0943680Z         else:
2025-01-14T13:16:43.0943740Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0943780Z     
2025-01-14T13:16:43.0943890Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0944100Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0944170Z         )
2025-01-14T13:16:43.0944210Z     
2025-01-14T13:16:43.0944310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0944410Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0944540Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0944580Z         else:
2025-01-14T13:16:43.0944640Z             continuum_state = None
2025-01-14T13:16:43.0945100Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0945360Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0945590Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0945970Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0946070Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0946140Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0946220Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0946270Z         ).to_numba(
2025-01-14T13:16:43.0946320Z             macro_atom_state,
2025-01-14T13:16:43.0946390Z             self.line_interaction_type,
2025-01-14T13:16:43.0946530Z         )
2025-01-14T13:16:43.0946610Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0948050Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0948250Z         ]
2025-01-14T13:16:43.0949370Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0949390Z 
2025-01-14T13:16:43.0949540Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0950230Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-14T13:16:43.0950390Z 
2025-01-14T13:16:43.0950960Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-14T13:16:43.0951180Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3110a9f70>
2025-01-14T13:16:43.0951830Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-14T13:16:43.0952160Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x17504b410>
2025-01-14T13:16:43.0952160Z 
2025-01-14T13:16:43.0952420Z     def test_montecarlo_main_loop_weighted(
2025-01-14T13:16:43.0952510Z         montecarlo_main_loop_config,
2025-01-14T13:16:43.0952570Z         regression_data,
2025-01-14T13:16:43.0952620Z         atomic_dataset,
2025-01-14T13:16:43.0952690Z         simple_weighted_packet_source,
2025-01-14T13:16:43.0952750Z     ):
2025-01-14T13:16:43.0952830Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-14T13:16:43.0952990Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-14T13:16:43.0953060Z             montecarlo_main_loop_config,
2025-01-14T13:16:43.0953200Z             atom_data=atomic_dataset,
2025-01-14T13:16:43.0953270Z             virtual_packet_logging=False,
2025-01-14T13:16:43.0953340Z             legacy_mode_enabled=True,
2025-01-14T13:16:43.0953390Z         )
2025-01-14T13:16:43.0953510Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-14T13:16:43.0953570Z             simple_weighted_packet_source
2025-01-14T13:16:43.0953620Z         )
2025-01-14T13:16:43.0953740Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-14T13:16:43.0953850Z >       montecarlo_main_loop_simulation_weighted.run_final()
2025-01-14T13:16:43.0953850Z 
2025-01-14T13:16:43.0954050Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:26: 
2025-01-14T13:16:43.0954610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0954950Z tardis/simulation/base.py:558: in run_final
2025-01-14T13:16:43.0955510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-14T13:16:43.0955750Z tardis/simulation/base.py:462: in iterate
2025-01-14T13:16:43.0956090Z     transport_state = self.transport.initialize_transport_state(
2025-01-14T13:16:43.0956330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-14T13:16:43.0956340Z 
2025-01-14T13:16:43.0956910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x310ffac30>
2025-01-14T13:16:43.0957360Z simulation_state = <tardis.model.base.SimulationState object at 0x309d6aa20>
2025-01-14T13:16:43.0957980Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x17640c470>
2025-01-14T13:16:43.0959540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x17640d6a0>
2025-01-14T13:16:43.0959720Z plasma = <tardis.plasma.base.BasePlasma object at 0x318313b30>
2025-01-14T13:16:43.0959850Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-14T13:16:43.0960280Z 
2025-01-14T13:16:43.0960360Z     def initialize_transport_state(
2025-01-14T13:16:43.0960410Z         self,
2025-01-14T13:16:43.0960460Z         simulation_state,
2025-01-14T13:16:43.0960510Z         opacity_state,
2025-01-14T13:16:43.0960560Z         macro_atom_state,
2025-01-14T13:16:43.0960760Z         plasma,
2025-01-14T13:16:43.0960870Z         no_of_packets,
2025-01-14T13:16:43.0960930Z         no_of_virtual_packets=0,
2025-01-14T13:16:43.0960980Z         iteration=0,
2025-01-14T13:16:43.0961030Z     ):
2025-01-14T13:16:43.0961130Z         if not plasma.continuum_interaction_species.empty:
2025-01-14T13:16:43.0961210Z             gamma_shape = plasma.gamma.shape
2025-01-14T13:16:43.0961260Z         else:
2025-01-14T13:16:43.0961320Z             gamma_shape = (0, 0)
2025-01-14T13:16:43.0961360Z     
2025-01-14T13:16:43.0961470Z         packet_collection = self.packet_source.create_packets(
2025-01-14T13:16:43.0961540Z             no_of_packets, seed_offset=iteration
2025-01-14T13:16:43.0961880Z         )
2025-01-14T13:16:43.0961930Z     
2025-01-14T13:16:43.0962050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-14T13:16:43.0962140Z         if hasattr(plasma, "photo_ion_cross_sections"):
2025-01-14T13:16:43.0962580Z             continuum_state = ContinuumState.from_legacy_plasma(plasma)
2025-01-14T13:16:43.0962660Z         else:
2025-01-14T13:16:43.0962720Z             continuum_state = None
2025-01-14T13:16:43.0962800Z         self.opacity_state_numba = OpacityState(
2025-01-14T13:16:43.0963200Z             electron_density=plasma.electron_densities,
2025-01-14T13:16:43.0963300Z             t_electrons=plasma.t_electrons,
2025-01-14T13:16:43.0963380Z             line_list_nu=plasma.atomic_data.lines.nu,
2025-01-14T13:16:43.0963460Z             tau_sobolev=opacity_state.tau_sobolev,
2025-01-14T13:16:43.0963530Z             beta_sobolev=plasma.beta_sobolev,
2025-01-14T13:16:43.0963600Z             continuum_state=continuum_state,
2025-01-14T13:16:43.0963650Z         ).to_numba(
2025-01-14T13:16:43.0963710Z             macro_atom_state,
2025-01-14T13:16:43.0963820Z             self.line_interaction_type,
2025-01-14T13:16:43.0963860Z         )
2025-01-14T13:16:43.0964420Z >       opacity_state_numba = opacity_state_numba[
2025-01-14T13:16:43.0964760Z             simulation_state.geometry.v_inner_boundary_index : simulation_state.geometry.v_outer_boundary_index
2025-01-14T13:16:43.0964830Z         ]
2025-01-14T13:16:43.0965080Z E       UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.0965090Z 
2025-01-14T13:16:43.0965210Z tardis/transport/montecarlo/base.py:133: UnboundLocalError
2025-01-14T13:16:43.0965330Z ----------------------------- Captured stdout call -----------------------------
2025-01-14T13:16:43.0967390Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-14T13:16:43.0967740Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-14T13:16:43.0967890Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:43.0968190Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-14T13:16:43.0969260Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:43.0969370Z 	
2025-01-14T13:16:43.0969450Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:43.0969510Z 	Simulation took 0.00 s
2025-01-14T13:16:43.0969630Z  ([1mbase.py[0m:542)
2025-01-14T13:16:43.0969770Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-14T13:16:43.0969810Z 	
2025-01-14T13:16:43.0970350Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-14T13:16:43.0970520Z ------------------------------ Captured log call -------------------------------
2025-01-14T13:16:43.0970940Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-14T13:16:43.0971220Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-14T13:16:43.0971490Z INFO     tardis.simulation.base:base.py:542 
2025-01-14T13:16:43.0971780Z 	Simulation finished in 0 iterations 
2025-01-14T13:16:43.0972140Z 	Simulation took 0.00 s
2025-01-14T13:16:43.0972150Z 
2025-01-14T13:16:43.0972250Z INFO     tardis.simulation.base:base.py:444 
2025-01-14T13:16:43.0972310Z 	Starting iteration 1 of 1
2025-01-14T13:16:43.0972410Z =============================== warnings summary ===============================
2025-01-14T13:16:43.0972500Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:16:43.0972590Z tardis/io/configuration/config_validator.py:6
2025-01-14T13:16:43.0972840Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-14T13:16:43.0972890Z   
2025-01-14T13:16:43.0974830Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-14T13:16:43.0974840Z 
2025-01-14T13:16:43.0975060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-14T13:16:43.0975480Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-14T13:16:43.0975530Z   
2025-01-14T13:16:43.0975660Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-14T13:16:43.0975790Z   given by the platformdirs library.  To remove this warning and
2025-01-14T13:16:43.0975930Z   see the appropriate new directories, set the environment variable
2025-01-14T13:16:43.0976040Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-14T13:16:43.0976170Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-14T13:16:43.0978720Z 
2025-01-14T13:16:43.0994140Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-14T13:16:43.0994340Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-14T13:16:43.0994410Z   
2025-01-14T13:16:43.0994460Z   
2025-01-14T13:16:43.0994630Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-14T13:16:43.0995320Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-14T13:16:43.0995330Z 
2025-01-14T13:16:43.1021990Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-14T13:16:43.1022830Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:16:43.1023080Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:16:43.1023300Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:16:43.1024460Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-14T13:16:43.1025230Z   
2025-01-14T13:16:43.1025430Z   The current CMFGEN model parser is deprecated
2025-01-14T13:16:43.1025440Z 
2025-01-14T13:16:43.1025520Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-14T13:16:43.1025810Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-14T13:16:43.1026380Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-14T13:16:43.1026430Z   
2025-01-14T13:16:43.1026570Z   The current CMFGEN model parser is deprecated
2025-01-14T13:16:43.1026570Z 
2025-01-14T13:16:43.1026880Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:16:43.1027630Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:16:43.1028380Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:16:43.1030400Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:16:43.1030590Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:16:43.1030860Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-14T13:16:43.1030910Z   
2025-01-14T13:16:43.1031000Z   v_inner_boundary < 0, assuming default value
2025-01-14T13:16:43.1031000Z 
2025-01-14T13:16:43.1031140Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-14T13:16:43.1032000Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-14T13:16:43.1032740Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-14T13:16:43.1033260Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-14T13:16:43.1033520Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-14T13:16:43.1033960Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-14T13:16:43.1034010Z   
2025-01-14T13:16:43.1034170Z   v_outer_boundary < 0, assuming default value
2025-01-14T13:16:43.1034520Z 
2025-01-14T13:16:43.1036050Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-14T13:16:43.1039700Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-14T13:16:43.1039830Z   
2025-01-14T13:16:43.1040240Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-14T13:16:43.1040640Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-14T13:16:43.1040690Z   
2025-01-14T13:16:43.1042530Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-14T13:16:43.1042540Z 
2025-01-14T13:16:43.1042780Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-14T13:16:43.1043030Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:16:43.1043080Z   
2025-01-14T13:16:43.1043150Z   Property "atomic_mass" not found
2025-01-14T13:16:43.1043160Z 
2025-01-14T13:16:43.1043520Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-14T13:16:43.1043920Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-14T13:16:43.1044250Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:16:43.1044300Z   
2025-01-14T13:16:43.1044540Z   Property "j_blues_norm_factor" not found
2025-01-14T13:16:43.1044550Z 
2025-01-14T13:16:43.1045170Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-14T13:16:43.1046070Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-14T13:16:43.1046340Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:16:43.1046400Z   
2025-01-14T13:16:43.1046630Z   Property "j_blue_estimator" not found
2025-01-14T13:16:43.1046640Z 
2025-01-14T13:16:43.1047370Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-14T13:16:43.1047950Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-14T13:16:43.1048660Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:16:43.1049270Z   
2025-01-14T13:16:43.1051110Z   Property "volume" not found
2025-01-14T13:16:43.1051160Z 
2025-01-14T13:16:43.1052440Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-14T13:16:43.1053250Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-14T13:16:43.1053870Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-14T13:16:43.1054020Z   
2025-01-14T13:16:43.1054210Z   Property "r_inner" not found
2025-01-14T13:16:43.1054210Z 
2025-01-14T13:16:43.1054680Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-14T13:16:43.1055130Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-14T13:16:43.1055590Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-14T13:16:43.1056110Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-14T13:16:43.1056260Z   
2025-01-14T13:16:43.1056670Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-14T13:16:43.1056690Z 
2025-01-14T13:16:43.1058090Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1058880Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1059630Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1060440Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1061440Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1062490Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1063440Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:16:43.1063590Z   
2025-01-14T13:16:43.1064470Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-14T13:16:43.1064880Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:16:43.1065430Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:16:43.1065800Z 
2025-01-14T13:16:43.1066800Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1067270Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1067880Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:16:43.1068120Z   
2025-01-14T13:16:43.1068770Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-14T13:16:43.1069160Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:16:43.1069370Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:16:43.1069380Z 
2025-01-14T13:16:43.1069770Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-14T13:16:43.1070090Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-14T13:16:43.1070140Z   
2025-01-14T13:16:43.1070290Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-14T13:16:43.1070720Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-14T13:16:43.1070990Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-14T13:16:43.1070990Z 
2025-01-14T13:16:43.1071180Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-14T13:16:43.1071180Z 
2025-01-14T13:16:43.1071420Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-14T13:16:43.1071550Z Coverage HTML written to dir coverage_html_report
2025-01-14T13:16:43.1071630Z Coverage XML written to file coverage.xml
2025-01-14T13:16:43.1071630Z 
2025-01-14T13:16:43.1071730Z =========================== short test summary info ============================
2025-01-14T13:16:43.1072250Z FAILED tardis/tests/test_tardis_full.py::test_run_tardis_from_config_obj - Failed: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1073750Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1075260Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1076520Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1077310Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[shell_id_in_use-shell_id_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1078160Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[r_in_use-r_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1078910Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[nu_packet_collection-nu_to_check] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1079770Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1080860Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1081870Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1082580Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1083130Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1084000Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1084500Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1085060Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_time_explosion - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1085590Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1086140Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1086710Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1087210Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1087970Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1088660Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1089710Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1090360Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1090980Z ERROR tardis/model/tests/test_base.py::TestModelFromUniformDensity::test_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1091640Z ERROR tardis/model/tests/test_base.py::TestModelFromInitialTinner::test_initial_temperature - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1092370Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_velocities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1092970Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_abundances - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1093620Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_densities - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1094100Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_power_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1094790Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_exponential_law - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1096710Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[0-1.00977478e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1097610Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[10-1.98154804e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1099430Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[19-3.13361319e+45] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1100970Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index0-539428198] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1102880Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index1-409675383] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1103470Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index2-314387928] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1104250Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index3-56066111] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1104760Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index4-42580098] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1105390Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index5-32676283] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1105960Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index6-841032262] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1106550Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index7-638732300] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1107810Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index8-490167906] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1108430Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index9-269136275] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1108940Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index10-204398856] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1109450Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index11-156857199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1109930Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index12-45482957] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1110430Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index13-34542591] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1110940Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index14-26508241] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1111510Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index15-34001569] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1112000Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index16-25822910] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1112500Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index17-19816693] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1112970Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index0-1.4471412e+31] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1113410Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index1-2.6820129e+30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1114010Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index2-1.3464444e+29] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1114500Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index0-1.67378172e-24] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1114960Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index1-9.51707707e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1115510Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index2-9.54725917e-23] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1116010Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_atomic_mass - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1116560Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_elemental_number_density - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1117030Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_scalars[t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1117710Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1118150Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1118610Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_outer] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1119010Z ERROR tardis/model/tests/test_density.py::test_hdf_density_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1119400Z ERROR tardis/model/tests/test_density.py::test_hdf_time_0 - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1119960Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1120420Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1120880Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1121340Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1121970Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1122490Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1123280Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1123800Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1124310Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1124890Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1125370Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1125860Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1126630Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1127500Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1128700Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[general_level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1129940Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_boltzmann_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1130410Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1131860Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_electrons] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1133670Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[wavelength_cm] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1134960Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1136250Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ionization_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1137520Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1139170Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[atomic_mass] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1140590Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1142210Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1142750Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1144080Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1144920Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[transition_probabilities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1145380Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[phi] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1145830Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1146240Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1146810Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[selected_atoms] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1147280Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ion_number_density] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1147740Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[partition_function] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1148170Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[abundance] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1148610Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1149010Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1149680Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1150100Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1150540Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1150960Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[j_blues] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1151390Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[metastability] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1151790Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1152350Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[excitation_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1152750Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_levels - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1153180Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[time_explosion] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1153710Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[link_t_rad_t_electron] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1154140Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_helium_treatment - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1155390Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_atomic_data_uuid - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1155850Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1156440Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1156930Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1157420Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1157940Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1158430Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1158890Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1159410Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1159890Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1160350Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1160800Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1161290Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1161780Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_initialization - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1162420Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1162990Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1163530Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1164000Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1164440Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1164890Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1165550Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1166140Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1166720Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1167680Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1168290Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1169050Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1169610Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1170200Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1170760Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1171330Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1172160Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1173070Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1173730Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1174310Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1174860Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1175720Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1176190Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1176660Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_energy] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1177150Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[nu_bar_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1177620Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[j_estimator] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1178150Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[emitted_packet_mask] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1178720Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1179220Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1179710Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1180230Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1180740Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1181340Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1181830Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_nus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1182320Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_energies] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1184360Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_rs] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1186240Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_mus] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1186820Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1187560Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_r] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1188100Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_type] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1188640Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_in_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1189190Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_out_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1189740Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1190450Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_thomson_scatter - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1190910Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1191370Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1191810Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1192480Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet0-expected0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1193010Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet1-expected1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1193670Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet2-expected2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1194140Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1963-10015] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1194700Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1195200Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[2111963-17296] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1195710Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[10000-9993] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1196260Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[scatter-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1196890Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1197430Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1197970Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-False] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1198800Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-True] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1199360Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_VPacketCollection_add_packet - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1200010Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-11-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1200550Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-1-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1201250Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-2-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1201810Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1202400Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1203200Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1203850Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132--1-199] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1204480Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-0-132] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1205190Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-20-154] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1205770Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1206370Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_trackers_to_dataframe - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1207040Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_within_shell - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1207590Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1208120Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_bad_vpacket - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1209040Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1209640Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1210260Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1211060Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1211710Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1212360Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1213050Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1213740Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1214680Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1215380Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1216080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1216760Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1217440Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1218350Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1219010Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1221600Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1224150Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1226390Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1228740Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1230610Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1232790Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1234690Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1237300Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1240580Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1244020Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1245960Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1247750Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1249600Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1252870Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1254490Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1255790Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1256430Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1257000Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1257930Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1258480Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1259010Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1259550Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1260070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1260760Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1261310Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1261970Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1262540Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1263230Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1263900Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1264470Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1265030Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1265570Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1266120Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1266720Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1267270Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1267810Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1268350Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_with_theta_init - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1268910Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1269580Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1270170Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1270710Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1271290Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1271800Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1273160Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1275490Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1277000Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1278430Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1280490Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1281960Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1284130Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1285880Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[30] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1287860Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[50] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1289740Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1291230Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1292690Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1295890Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1297720Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1300110Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1300690Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1301240Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1301770Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1302750Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1303490Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1304090Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1304700Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1305410Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1306010Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1306610Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1307200Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1307790Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1308490Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1310600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1311910Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1312550Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1313150Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1313840Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1314430Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1315350Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1315920Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1316470Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1319900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1320620Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1321210Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1322600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1323170Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1323980Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1324550Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1325160Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1325760Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1326320Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1327880Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1328750Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1329730Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1330310Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1330930Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1333000Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1333580Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1334120Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1334670Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1335210Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1336050Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1336810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1339250Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1342050Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1342630Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1343450Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1344230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1344810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1345350Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1346630Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1347280Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1348120Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1348720Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1349460Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1350080Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1350690Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1351530Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1352980Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1355800Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1356490Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1358350Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1359340Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range0-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1360510Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range1-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1361350Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range2-packet_out_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1362140Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-None-packet_in_nu] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1362830Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1364320Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1365650Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1367650Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1368880Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1369840Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1370450Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1371410Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1372030Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1373390Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1374500Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1376330Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1377670Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1378970Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1379540Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1380430Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1380970Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1381550Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[None] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1382100Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-0] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1382640Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1383460Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-2] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1383960Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1384860Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1385550Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1386600Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1387140Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1388200Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1388730Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1389800Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1390360Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1392630Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1393320Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1393860Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1394400Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1395030Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1395530Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1396040Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1397140Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1397650Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1398290Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1405010Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[2-12-1] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1405590Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[3-20-20] - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1406150Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_shells_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1406900Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_element_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1408930Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_ion_count_table - UnboundLocalError: cannot access local variable 'opacity_state_numba' where it is not associated with a value
2025-01-14T13:16:43.1409620Z = 11 failed, 1052 passed, 329 skipped, 2 deselected, 23 xfailed, 4 xpassed, 69 warnings, 375 errors in 431.08s (0:07:11) =
2025-01-14T13:16:44.6632410Z ##[error]Process completed with exit code 1.
2025-01-14T13:16:44.6775880Z Post job cleanup.
2025-01-14T13:16:44.6825030Z Post job cleanup.
2025-01-14T13:16:45.1630770Z Will use pre-installed micromamba at /Users/runner/micromamba-bin/micromamba
2025-01-14T13:16:45.1634500Z Removing micromamba run shell ...
2025-01-14T13:16:45.1636800Z ##[group]Deinitialize micromamba for bash
2025-01-14T13:16:45.1649950Z [command]/Users/runner/micromamba-bin/micromamba shell deinit -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-14T13:16:45.2572350Z Resetting RC file "/Users/runner/.bash_profile"
2025-01-14T13:16:45.2573290Z Deleting config for root prefix 
2025-01-14T13:16:45.2573910Z Clearing mamba executable environment variable
2025-01-14T13:16:45.2603840Z Removing the following in your "/Users/runner/.bash_profile" file
2025-01-14T13:16:45.2604910Z # >>> mamba initialize >>>
2025-01-14T13:16:45.2605530Z ...
2025-01-14T13:16:45.2606050Z # <<< mamba initialize <<<
2025-01-14T13:16:45.2694760Z Removing environment tardis from auto-activate bash ...
2025-01-14T13:16:45.2924900Z Post job cleanup.
2025-01-14T13:16:45.2985190Z Post job cleanup.
2025-01-14T13:16:45.5462940Z [command]/opt/homebrew/bin/git version
2025-01-14T13:16:45.6026570Z git version 2.47.1
2025-01-14T13:16:45.6058110Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/17cea5c1-bc6d-47fe-bfa7-01dfaa0ffb84/.gitconfig'
2025-01-14T13:16:45.6070880Z Temporarily overriding HOME='/Users/runner/work/_temp/17cea5c1-bc6d-47fe-bfa7-01dfaa0ffb84' before making global git config changes
2025-01-14T13:16:45.6071780Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:16:45.6075790Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-14T13:16:45.6354120Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:16:45.6424200Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:16:46.0138880Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:16:46.0251530Z http.https://github.com/.extraheader
2025-01-14T13:16:46.0303100Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-14T13:16:46.0371560Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:16:46.1656330Z Post job cleanup.
2025-01-14T13:16:46.3562850Z [command]/opt/homebrew/bin/git version
2025-01-14T13:16:46.3630680Z git version 2.47.1
2025-01-14T13:16:46.3690350Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/b137d0ce-5a40-4755-8c90-6bb24d72f589/.gitconfig'
2025-01-14T13:16:46.3703090Z Temporarily overriding HOME='/Users/runner/work/_temp/b137d0ce-5a40-4755-8c90-6bb24d72f589' before making global git config changes
2025-01-14T13:16:46.3705410Z Adding repository directory to the temporary git global config as a safe directory
2025-01-14T13:16:46.3706800Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-14T13:16:46.3789420Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-14T13:16:46.3862760Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-14T13:16:46.5220340Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-14T13:16:46.5290790Z http.https://github.com/.extraheader
2025-01-14T13:16:46.5301960Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-14T13:16:46.5400290Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-14T13:16:46.6796240Z Cleaning up orphan processes
