2025-02-25T14:07:23.4175222Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-25T14:07:23.4176913Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-25T14:07:23.4233583Z shell: /usr/bin/bash -l {0}
2025-02-25T14:07:23.4233917Z env:
2025-02-25T14:07:23.4234165Z   CACHE_NUMBER: 0
2025-02-25T14:07:23.4235046Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-25T14:07:23.4235976Z   CODECOV_TOKEN: 
2025-02-25T14:07:23.4236290Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-25T14:07:23.4236723Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-25T14:07:23.4237221Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-25T14:07:23.4237702Z ##[endgroup]
2025-02-25T14:07:32.0493044Z ============================= test session starts ==============================
2025-02-25T14:07:32.0494323Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-25T14:07:32.0495317Z rootdir: /home/runner/work/tardis/tardis
2025-02-25T14:07:32.0496105Z configfile: pyproject.toml
2025-02-25T14:07:32.0497079Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-25T14:07:32.0498003Z collected 1796 items / 2 deselected / 1794 selected
2025-02-25T14:07:32.0498383Z 
2025-02-25T14:07:37.2065676Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-25T14:07:40.2287952Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-25T14:07:41.8356797Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-25T14:07:43.7637819Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-25T14:07:43.7728899Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-25T14:07:45.0488917Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-25T14:07:45.3922557Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-25T14:07:45.3938687Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-25T14:07:48.8787208Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-25T14:07:48.8911961Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-25T14:07:48.9180772Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-25T14:08:30.8110487Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-25T14:08:30.8260875Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-25T14:08:30.8369456Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-25T14:08:30.8667112Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-25T14:08:30.8871736Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-25T14:08:31.1863386Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-25T14:08:31.6010920Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-25T14:08:31.6204830Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-25T14:08:31.8131335Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-25T14:08:31.8197828Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-25T14:09:31.7695634Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-25T14:09:32.7767902Z ............                                                             [ 10%]
2025-02-25T14:09:35.8722736Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-25T14:09:35.9221074Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-25T14:09:37.3486966Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-25T14:09:38.8494889Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-25T14:09:41.2637371Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-25T14:09:44.2695318Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-25T14:10:35.3062448Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-25T14:10:48.4915424Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-25T14:10:50.2012146Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-25T14:10:53.6876094Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-25T14:10:56.0707913Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-25T14:10:59.6369662Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-25T14:11:03.1991051Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-25T14:11:04.5037275Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-25T14:11:08.9418071Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-25T14:11:12.4609062Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-25T14:11:16.3089122Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-25T14:11:18.9435175Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-25T14:11:22.4224924Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-25T14:11:26.2863724Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-25T14:11:26.9429398Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-25T14:11:27.1788305Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-25T14:11:27.1903562Z ......                                                                   [ 62%]
2025-02-25T14:11:27.3467219Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-25T14:13:53.0311819Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-25T14:13:53.0343335Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-25T14:14:18.2007400Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-25T14:14:31.7529371Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-25T14:14:32.5033244Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-25T14:14:41.6265997Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-25T14:14:41.6478443Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-25T14:14:42.1549723Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-25T14:14:42.1622796Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-25T14:14:44.7652972Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-25T14:14:44.7844143Z ..........                                                               [ 69%]
2025-02-25T14:14:44.9576133Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-25T14:14:44.9911145Z .........                                                                [ 72%]
2025-02-25T14:15:04.7296816Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-25T14:16:10.5742725Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-25T14:17:38.1755142Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-25T14:17:38.2482358Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-25T14:17:41.8747539Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-25T14:17:49.6753262Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-25T14:17:49.9217232Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-25T14:17:49.9397865Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-25T14:17:49.9826091Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-25T14:17:59.2015277Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-25T14:17:59.2085837Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-25T14:18:05.8535323Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-25T14:18:06.3617358Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-25T14:18:07.4640929Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-25T14:18:07.6006567Z XX.........                                                              [ 84%]
2025-02-25T14:18:07.6324617Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-25T14:18:07.9747538Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-25T14:18:08.4026406Z .....                                                                    [ 85%]
2025-02-25T14:18:45.1281624Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-25T14:18:45.1574830Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-25T14:18:45.1608159Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-25T14:18:47.7078112Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-25T14:18:47.7268370Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-25T14:18:51.2944060Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-25T14:18:51.2946032Z                                                                          [ 86%]
2025-02-25T14:18:52.0978800Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-25T14:18:53.4681114Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-25T14:18:55.7709301Z ......                                                                   [ 88%]
2025-02-25T14:19:01.3121296Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-25T14:19:04.5518677Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-25T14:19:07.4370207Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-25T14:19:14.4666924Z ....                                                                     [ 92%]
2025-02-25T14:19:21.0720945Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-25T14:19:30.8748142Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-25T14:19:31.3256289Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-25T14:19:31.3985167Z ....                                                                     [ 96%]
2025-02-25T14:19:32.4928888Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-25T14:19:33.1562884Z ..................                                                       [ 98%]
2025-02-25T14:20:38.0086895Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-25T14:20:45.5293470Z ......                                                                   [100%]
2025-02-25T14:20:45.5294986Z 
2025-02-25T14:20:45.5295864Z =================================== FAILURES ===================================
2025-02-25T14:20:45.5297265Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-25T14:20:45.5297824Z 
2025-02-25T14:20:45.5298075Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-25T14:20:45.5298751Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-25T14:20:45.5299288Z 
2025-02-25T14:20:45.5299572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5300208Z         if err_msg is None:
2025-02-25T14:20:45.5301080Z             if left.shape != right.shape:
2025-02-25T14:20:45.5301673Z                 raise_assert_detail(
2025-02-25T14:20:45.5302285Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5303012Z                 )
2025-02-25T14:20:45.5303431Z     
2025-02-25T14:20:45.5303795Z             diff = 0
2025-02-25T14:20:45.5304429Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5304975Z                 # count up differences
2025-02-25T14:20:45.5305645Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5306324Z                     diff += 1
2025-02-25T14:20:45.5306749Z     
2025-02-25T14:20:45.5307184Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5307763Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5308468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5309244Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5309792Z E           
2025-02-25T14:20:45.5310287Z E           numpy array values are different (0.09581 %)
2025-02-25T14:20:45.5311564Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:20:45.5313997Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-25T14:20:45.5314996Z 
2025-02-25T14:20:45.5315502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5316045Z 
2025-02-25T14:20:45.5316342Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5316680Z 
2025-02-25T14:20:45.5317032Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f8a146771a0>
2025-02-25T14:20:45.5317905Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a143513a0>
2025-02-25T14:20:45.5318406Z 
2025-02-25T14:20:45.5318562Z     def test_calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5318986Z         nb_simulation_verysimple, regression_data
2025-02-25T14:20:45.5319472Z     ):
2025-02-25T14:20:45.5319822Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:20:45.5320271Z     
2025-02-25T14:20:45.5320808Z         actual = calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5321231Z             legacy_plasma.lines,
2025-02-25T14:20:45.5321693Z             legacy_plasma.level_number_density,
2025-02-25T14:20:45.5322346Z             legacy_plasma.time_explosion,
2025-02-25T14:20:45.5322832Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:20:45.5323261Z         )
2025-02-25T14:20:45.5323636Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.5324146Z >       pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5324398Z 
2025-02-25T14:20:45.5324602Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-25T14:20:45.5325052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5325583Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5326007Z     ???
2025-02-25T14:20:45.5326344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5326635Z 
2025-02-25T14:20:45.5326740Z >   ???
2025-02-25T14:20:45.5327083Z E   AssertionError: MultiIndex level [0] are different
2025-02-25T14:20:45.5327515Z E   
2025-02-25T14:20:45.5327865Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:20:45.5328360Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.5328772Z E          ...
2025-02-25T14:20:45.5329066Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.5329503Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.5329943Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.5330298Z E          ...
2025-02-25T14:20:45.5331019Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.5331763Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.5332341Z E   At positional index 54, first diff: 14 != 12
2025-02-25T14:20:45.5332796Z 
2025-02-25T14:20:45.5332994Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5333644Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.5334501Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.5335353Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.5336389Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.5336673Z 
2025-02-25T14:20:45.5336678Z 
2025-02-25T14:20:45.5336988Z Packets:                                                                                   4020/? [00:11<00:00, 33476.46it/s][A
2025-02-25T14:20:45.5337232Z 
2025-02-25T14:20:45.5337594Z Packets:                                                                                   4021/? [00:12<00:00, 233.55it/s]  [A
2025-02-25T14:20:45.5338259Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:03,  3.01s/it]
2025-02-25T14:20:45.5338604Z 
2025-02-25T14:20:45.5338849Z Packets:                                                                                   4030/? [00:12<00:00, 233.55it/s][A
2025-02-25T14:20:45.5339436Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.5340307Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.5341488Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-25T14:20:45.5341767Z 
2025-02-25T14:20:45.5342079Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f8a146771a0>
2025-02-25T14:20:45.5342756Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a14351670>
2025-02-25T14:20:45.5343191Z 
2025-02-25T14:20:45.5343484Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-25T14:20:45.5343988Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-25T14:20:45.5344385Z     
2025-02-25T14:20:45.5344871Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-25T14:20:45.5345252Z             legacy_plasma.lines,
2025-02-25T14:20:45.5345676Z             legacy_plasma.level_number_density,
2025-02-25T14:20:45.5346056Z             legacy_plasma.time_explosion,
2025-02-25T14:20:45.5346434Z             legacy_plasma.stimulated_emission_factor,
2025-02-25T14:20:45.5346880Z         )
2025-02-25T14:20:45.5347196Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-25T14:20:45.5347638Z         expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.5348028Z >       npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.5348256Z 
2025-02-25T14:20:45.5348420Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-25T14:20:45.5348879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5349109Z 
2025-02-25T14:20:45.5349457Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef6e6480>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5350254Z        [1., 1., .....,
2025-02-25T14:20:45.5350915Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5351487Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5351863Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:20:45.5352476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.5352884Z 
2025-02-25T14:20:45.5353025Z     @wraps(func)
2025-02-25T14:20:45.5353343Z     def inner(*args, **kwds):
2025-02-25T14:20:45.5353702Z         with self._recreate_cm():
2025-02-25T14:20:45.5354034Z >           return func(*args, **kwds)
2025-02-25T14:20:45.5354430Z E           AssertionError: 
2025-02-25T14:20:45.5354777Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.5355110Z E           
2025-02-25T14:20:45.5355492Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.5355866Z E           Max absolute difference: 0.99984222
2025-02-25T14:20:45.5356281Z E           Max relative difference: 6337.12154973
2025-02-25T14:20:45.5356662Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5357185Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5357583Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.5357939Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5358289Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.5358742Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.5358936Z 
2025-02-25T14:20:45.5359247Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.5359907Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-25T14:20:45.5360223Z 
2025-02-25T14:20:45.5360771Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-25T14:20:45.5361957Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f89ef177cb0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f89d943a6c0>, 'electron')]
2025-02-25T14:20:45.5363241Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f8a14908f50>
2025-02-25T14:20:45.5363952Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1490adb0>
2025-02-25T14:20:45.5364362Z 
2025-02-25T14:20:45.5364526Z     def test_rate_matrix_solver(
2025-02-25T14:20:45.5364894Z         new_chianti_atomic_dataset_si,
2025-02-25T14:20:45.5365255Z         rate_solver_list,
2025-02-25T14:20:45.5365637Z         collisional_simulation_state,
2025-02-25T14:20:45.5365993Z         regression_data,
2025-02-25T14:20:45.5366307Z     ):
2025-02-25T14:20:45.5366613Z         rate_matrix_solver = RateMatrix(
2025-02-25T14:20:45.5367013Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-25T14:20:45.5367450Z         )
2025-02-25T14:20:45.5367613Z     
2025-02-25T14:20:45.5367820Z         rad_field = DilutePlanckianRadiationField(
2025-02-25T14:20:45.5368140Z             collisional_simulation_state.t_radiative,
2025-02-25T14:20:45.5368509Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-25T14:20:45.5368962Z         )
2025-02-25T14:20:45.5369490Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-25T14:20:45.5370072Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-25T14:20:45.5370388Z         )
2025-02-25T14:20:45.5370736Z     
2025-02-25T14:20:45.5370980Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-25T14:20:45.5371275Z     
2025-02-25T14:20:45.5371484Z >       expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.5371693Z 
2025-02-25T14:20:45.5371839Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-25T14:20:45.5372175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5372549Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-25T14:20:45.5372903Z     return pd.read_hdf(self.fpath, key=key)
2025-02-25T14:20:45.5373355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-25T14:20:45.5373797Z     return store.select(
2025-02-25T14:20:45.5374174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-25T14:20:45.5374600Z     return it.get_result()
2025-02-25T14:20:45.5375002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-25T14:20:45.5375473Z     results = self.func(self.start, self.stop, where)
2025-02-25T14:20:45.5375910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-25T14:20:45.5376409Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-25T14:20:45.5376939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-25T14:20:45.5377599Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-25T14:20:45.5378117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-25T14:20:45.5378551Z     ret = node[0][start:stop]
2025-02-25T14:20:45.5378947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-25T14:20:45.5379380Z     return self.read(start, stop, step)[0]
2025-02-25T14:20:45.5379787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-25T14:20:45.5380243Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-25T14:20:45.5380771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5381053Z 
2025-02-25T14:20:45.5381142Z self = ObjectAtom()
2025-02-25T14:20:45.5381402Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-25T14:20:45.5381614Z 
2025-02-25T14:20:45.5381712Z     def fromarray(self, array):
2025-02-25T14:20:45.5381996Z         # We have to check for an empty array because of a possible
2025-02-25T14:20:45.5382349Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-25T14:20:45.5382652Z         # record when in fact it is empty.
2025-02-25T14:20:45.5382902Z         if array.size == 0:
2025-02-25T14:20:45.5383113Z             return None
2025-02-25T14:20:45.5383340Z >       return pickle.loads(array.tobytes())
2025-02-25T14:20:45.5383672Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:20:45.5383916Z 
2025-02-25T14:20:45.5384183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-25T14:20:45.5384704Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.5385229Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.5386103Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.5386698Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.5387428Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.5388774Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-25T14:20:45.5389197Z 
2025-02-25T14:20:45.5389331Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5389908Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5390448Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5391304Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5391882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5392412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5392788Z err_msg = None
2025-02-25T14:20:45.5392901Z 
2025-02-25T14:20:45.5393021Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5393291Z         if err_msg is None:
2025-02-25T14:20:45.5393520Z             if left.shape != right.shape:
2025-02-25T14:20:45.5393775Z                 raise_assert_detail(
2025-02-25T14:20:45.5394083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5394386Z                 )
2025-02-25T14:20:45.5394565Z     
2025-02-25T14:20:45.5394728Z             diff = 0
2025-02-25T14:20:45.5394958Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5395241Z                 # count up differences
2025-02-25T14:20:45.5395582Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5396115Z                     diff += 1
2025-02-25T14:20:45.5396320Z     
2025-02-25T14:20:45.5396496Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5396797Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5397192Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5397563Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5397824Z E           
2025-02-25T14:20:45.5398038Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5398494Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5399102Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5399454Z 
2025-02-25T14:20:45.5399757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5400145Z 
2025-02-25T14:20:45.5400310Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5400755Z 
2025-02-25T14:20:45.5400988Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900dd0>
2025-02-25T14:20:45.5401464Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5401786Z attr = 'lines'
2025-02-25T14:20:45.5402022Z 
2025-02-25T14:20:45.5402170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5402503Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5402784Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5402998Z         try:
2025-02-25T14:20:45.5403239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5403537Z         except KeyError:
2025-02-25T14:20:45.5403802Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5404083Z     
2025-02-25T14:20:45.5404262Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5404517Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5404782Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5405077Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5405374Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5405616Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5405902Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5406170Z             else:
2025-02-25T14:20:45.5406382Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5406661Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5406847Z 
2025-02-25T14:20:45.5406975Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5407289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5407631Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5408129Z     ???
2025-02-25T14:20:45.5408478Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5408832Z 
2025-02-25T14:20:45.5408946Z >   ???
2025-02-25T14:20:45.5409307Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5409772Z E   
2025-02-25T14:20:45.5410135Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5410828Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5411279Z E          ...
2025-02-25T14:20:45.5411672Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5411985Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5412323Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5412590Z E          ...
2025-02-25T14:20:45.5412784Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5413079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5413390Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5413573Z 
2025-02-25T14:20:45.5413673Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5414039Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-25T14:20:45.5414338Z 
2025-02-25T14:20:45.5414566Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c902990>
2025-02-25T14:20:45.5415041Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5415387Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5415547Z 
2025-02-25T14:20:45.5415686Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5416017Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5416297Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5416514Z         try:
2025-02-25T14:20:45.5416759Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5417069Z         except KeyError:
2025-02-25T14:20:45.5417338Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5417663Z     
2025-02-25T14:20:45.5417845Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5418095Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5418357Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5418659Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5419086Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5419327Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5419608Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5419806Z 
2025-02-25T14:20:45.5419929Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5420247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5420451Z 
2025-02-25T14:20:45.5420901Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5421223Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5421501Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5421775Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5422078Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5422388Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5422660Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5422937Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5423171Z err_msg = None
2025-02-25T14:20:45.5423277Z 
2025-02-25T14:20:45.5423393Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5423663Z         if err_msg is None:
2025-02-25T14:20:45.5423894Z             if left.shape != right.shape:
2025-02-25T14:20:45.5424148Z                 raise_assert_detail(
2025-02-25T14:20:45.5424452Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5424753Z                 )
2025-02-25T14:20:45.5424931Z     
2025-02-25T14:20:45.5425094Z             diff = 0
2025-02-25T14:20:45.5425329Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5425613Z                 # count up differences
2025-02-25T14:20:45.5425959Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5426524Z                     diff += 1
2025-02-25T14:20:45.5426879Z     
2025-02-25T14:20:45.5427352Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5427661Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5428047Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5428411Z E           AssertionError: Series are different
2025-02-25T14:20:45.5428667Z E           
2025-02-25T14:20:45.5428872Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5429428Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5430217Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5431163Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5431576Z 
2025-02-25T14:20:45.5431889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5432614Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-25T14:20:45.5432924Z 
2025-02-25T14:20:45.5433149Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9022d0>
2025-02-25T14:20:45.5433629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5433966Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5434131Z 
2025-02-25T14:20:45.5434271Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5434604Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5434886Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5435113Z         try:
2025-02-25T14:20:45.5435358Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5435661Z         except KeyError:
2025-02-25T14:20:45.5435929Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5436217Z     
2025-02-25T14:20:45.5436396Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5436650Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5436909Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5437215Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5437515Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5437759Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5438040Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5438238Z 
2025-02-25T14:20:45.5438363Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5438679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5438885Z 
2025-02-25T14:20:45.5439017Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5439324Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5439593Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5439876Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5440172Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5440801Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5441074Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5441343Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5441574Z err_msg = None
2025-02-25T14:20:45.5441681Z 
2025-02-25T14:20:45.5441797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5442062Z         if err_msg is None:
2025-02-25T14:20:45.5442297Z             if left.shape != right.shape:
2025-02-25T14:20:45.5442546Z                 raise_assert_detail(
2025-02-25T14:20:45.5442846Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5443147Z                 )
2025-02-25T14:20:45.5443326Z     
2025-02-25T14:20:45.5443490Z             diff = 0
2025-02-25T14:20:45.5443739Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5444021Z                 # count up differences
2025-02-25T14:20:45.5444366Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5444708Z                     diff += 1
2025-02-25T14:20:45.5444928Z     
2025-02-25T14:20:45.5445242Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5445752Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5446424Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5447042Z E           AssertionError: Series are different
2025-02-25T14:20:45.5447469Z E           
2025-02-25T14:20:45.5447806Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5448793Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5449798Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5450837Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5451314Z 
2025-02-25T14:20:45.5451628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5452235Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-25T14:20:45.5452513Z 
2025-02-25T14:20:45.5452640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5452984Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5453304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5453614Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5453963Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5454274Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5454660Z err_msg = None
2025-02-25T14:20:45.5454770Z 
2025-02-25T14:20:45.5454884Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5455151Z         if err_msg is None:
2025-02-25T14:20:45.5455382Z             if left.shape != right.shape:
2025-02-25T14:20:45.5455636Z                 raise_assert_detail(
2025-02-25T14:20:45.5455936Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5456238Z                 )
2025-02-25T14:20:45.5456414Z     
2025-02-25T14:20:45.5456586Z             diff = 0
2025-02-25T14:20:45.5456819Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5457098Z                 # count up differences
2025-02-25T14:20:45.5457432Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5457769Z                     diff += 1
2025-02-25T14:20:45.5457980Z     
2025-02-25T14:20:45.5458161Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5458474Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5458870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5459237Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5459501Z E           
2025-02-25T14:20:45.5459713Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5460164Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5460985Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5461474Z 
2025-02-25T14:20:45.5461777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5462165Z 
2025-02-25T14:20:45.5462339Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5462591Z 
2025-02-25T14:20:45.5462816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9025d0>
2025-02-25T14:20:45.5463320Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>, attr = 'nu'
2025-02-25T14:20:45.5463603Z 
2025-02-25T14:20:45.5463747Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5464249Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5464735Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5465114Z         try:
2025-02-25T14:20:45.5465519Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5466041Z         except KeyError:
2025-02-25T14:20:45.5466492Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5466981Z     
2025-02-25T14:20:45.5467284Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5467548Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5467813Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5468113Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5468411Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5468662Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5468939Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5469129Z 
2025-02-25T14:20:45.5469261Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5469576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5469920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5470351Z     ???
2025-02-25T14:20:45.5470675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5470881Z 
2025-02-25T14:20:45.5470949Z >   ???
2025-02-25T14:20:45.5471165Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5471437Z E   
2025-02-25T14:20:45.5471655Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5471972Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5472235Z E          ...
2025-02-25T14:20:45.5472425Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5472722Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5473045Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5473317Z E          ...
2025-02-25T14:20:45.5473514Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5473806Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5474123Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5474303Z 
2025-02-25T14:20:45.5474399Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5474760Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-25T14:20:45.5475045Z 
2025-02-25T14:20:45.5475178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5475524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5475840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5476144Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5476494Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5476920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5477168Z err_msg = None
2025-02-25T14:20:45.5477283Z 
2025-02-25T14:20:45.5477396Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5477663Z         if err_msg is None:
2025-02-25T14:20:45.5477892Z             if left.shape != right.shape:
2025-02-25T14:20:45.5478146Z                 raise_assert_detail(
2025-02-25T14:20:45.5478448Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5478746Z                 )
2025-02-25T14:20:45.5478922Z     
2025-02-25T14:20:45.5479089Z             diff = 0
2025-02-25T14:20:45.5479316Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5479594Z                 # count up differences
2025-02-25T14:20:45.5479925Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5480263Z                     diff += 1
2025-02-25T14:20:45.5480482Z     
2025-02-25T14:20:45.5480764Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5481076Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5481469Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5481837Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5482097Z E           
2025-02-25T14:20:45.5482353Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5483208Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5483955Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5484450Z 
2025-02-25T14:20:45.5484756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5485146Z 
2025-02-25T14:20:45.5485313Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5485570Z 
2025-02-25T14:20:45.5485792Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9024b0>
2025-02-25T14:20:45.5486267Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5486596Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5486727Z 
2025-02-25T14:20:45.5486870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5487206Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5487492Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5487709Z         try:
2025-02-25T14:20:45.5487955Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5488264Z         except KeyError:
2025-02-25T14:20:45.5488532Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5488821Z     
2025-02-25T14:20:45.5489004Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5489247Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5489505Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5489803Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5490101Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5490343Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5490756Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5490951Z 
2025-02-25T14:20:45.5491075Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5491395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5511616Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5512246Z     ???
2025-02-25T14:20:45.5512620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5512979Z 
2025-02-25T14:20:45.5513122Z >   ???
2025-02-25T14:20:45.5513524Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5514024Z E   
2025-02-25T14:20:45.5514421Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5515015Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5515437Z E          ...
2025-02-25T14:20:45.5515657Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5515999Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5516357Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5516660Z E          ...
2025-02-25T14:20:45.5516895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5517258Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5517617Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5517820Z 
2025-02-25T14:20:45.5517940Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5518324Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-25T14:20:45.5518617Z 
2025-02-25T14:20:45.5518783Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5519154Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5519513Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5519859Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5520233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5520694Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5521166Z err_msg = None
2025-02-25T14:20:45.5521306Z 
2025-02-25T14:20:45.5521427Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5521744Z         if err_msg is None:
2025-02-25T14:20:45.5522006Z             if left.shape != right.shape:
2025-02-25T14:20:45.5522294Z                 raise_assert_detail(
2025-02-25T14:20:45.5522634Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5522955Z                 )
2025-02-25T14:20:45.5523164Z     
2025-02-25T14:20:45.5523363Z             diff = 0
2025-02-25T14:20:45.5523622Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5523925Z                 # count up differences
2025-02-25T14:20:45.5524286Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5524661Z                     diff += 1
2025-02-25T14:20:45.5524904Z     
2025-02-25T14:20:45.5525103Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5525437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5525860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5526278Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5526563Z E           
2025-02-25T14:20:45.5526808Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5527293Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5527921Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5528428Z 
2025-02-25T14:20:45.5528972Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5529701Z 
2025-02-25T14:20:45.5529994Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5530380Z 
2025-02-25T14:20:45.5530806Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900110>
2025-02-25T14:20:45.5531356Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>, attr = 'f_lu'
2025-02-25T14:20:45.5531651Z 
2025-02-25T14:20:45.5531811Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5532170Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5532481Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5532744Z         try:
2025-02-25T14:20:45.5533015Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5533356Z         except KeyError:
2025-02-25T14:20:45.5533656Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5533969Z     
2025-02-25T14:20:45.5534194Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5534473Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5534765Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5535094Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5535422Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5535698Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5536006Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5536228Z 
2025-02-25T14:20:45.5536375Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5536746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5537129Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5537624Z     ???
2025-02-25T14:20:45.5537850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5538060Z 
2025-02-25T14:20:45.5538156Z >   ???
2025-02-25T14:20:45.5538404Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5538713Z E   
2025-02-25T14:20:45.5538955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5539303Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5539592Z E          ...
2025-02-25T14:20:45.5539820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5540149Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5540654Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5541001Z E          ...
2025-02-25T14:20:45.5541243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5541572Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5541939Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5542130Z 
2025-02-25T14:20:45.5542254Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5542625Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-25T14:20:45.5542919Z 
2025-02-25T14:20:45.5543055Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5543416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5543736Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5544077Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5544441Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5544920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5545201Z err_msg = None
2025-02-25T14:20:45.5545328Z 
2025-02-25T14:20:45.5545449Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5545740Z         if err_msg is None:
2025-02-25T14:20:45.5546017Z             if left.shape != right.shape:
2025-02-25T14:20:45.5546293Z                 raise_assert_detail(
2025-02-25T14:20:45.5546617Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5546960Z                 )
2025-02-25T14:20:45.5547166Z     
2025-02-25T14:20:45.5547359Z             diff = 0
2025-02-25T14:20:45.5547624Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5548034Z                 # count up differences
2025-02-25T14:20:45.5548648Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5549242Z                     diff += 1
2025-02-25T14:20:45.5549557Z     
2025-02-25T14:20:45.5549769Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5550111Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5550611Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5551004Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5551290Z E           
2025-02-25T14:20:45.5551527Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5552032Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5552664Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5553172Z 
2025-02-25T14:20:45.5553501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5553911Z 
2025-02-25T14:20:45.5554085Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5554366Z 
2025-02-25T14:20:45.5554590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c901eb0>
2025-02-25T14:20:45.5555076Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5555404Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5555544Z 
2025-02-25T14:20:45.5555689Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5556050Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5556359Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5556599Z         try:
2025-02-25T14:20:45.5556864Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5557203Z         except KeyError:
2025-02-25T14:20:45.5557493Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5557803Z     
2025-02-25T14:20:45.5558016Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5558293Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5558575Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5558918Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5559233Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5559501Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5559796Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5560077Z             else:
2025-02-25T14:20:45.5560295Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5560844Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5561034Z 
2025-02-25T14:20:45.5561187Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5561519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5561867Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5562168Z     ???
2025-02-25T14:20:45.5562377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5562589Z 
2025-02-25T14:20:45.5562661Z >   ???
2025-02-25T14:20:45.5562896Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5563181Z E   
2025-02-25T14:20:45.5563421Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5563771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5564055Z E          ...
2025-02-25T14:20:45.5564259Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5564572Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5564912Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5565195Z E          ...
2025-02-25T14:20:45.5565408Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5565711Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5566037Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5566237Z 
2025-02-25T14:20:45.5566334Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5566708Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-25T14:20:45.5567027Z 
2025-02-25T14:20:45.5567276Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5567934Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5568504Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5569078Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5569671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5570012Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5570283Z err_msg = None
2025-02-25T14:20:45.5570397Z 
2025-02-25T14:20:45.5570644Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5570956Z         if err_msg is None:
2025-02-25T14:20:45.5571230Z             if left.shape != right.shape:
2025-02-25T14:20:45.5571516Z                 raise_assert_detail(
2025-02-25T14:20:45.5571847Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5572165Z                 )
2025-02-25T14:20:45.5572362Z     
2025-02-25T14:20:45.5572551Z             diff = 0
2025-02-25T14:20:45.5572806Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5573120Z                 # count up differences
2025-02-25T14:20:45.5573484Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5573854Z                     diff += 1
2025-02-25T14:20:45.5574094Z     
2025-02-25T14:20:45.5574294Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5574618Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5575055Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5575442Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5575733Z E           
2025-02-25T14:20:45.5575971Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5576448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5577292Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5577656Z 
2025-02-25T14:20:45.5577968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5578373Z 
2025-02-25T14:20:45.5578563Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5578820Z 
2025-02-25T14:20:45.5579373Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c901370>
2025-02-25T14:20:45.5579866Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5580228Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5580357Z 
2025-02-25T14:20:45.5580677Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5581097Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5581413Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5581652Z         try:
2025-02-25T14:20:45.5581915Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5582240Z         except KeyError:
2025-02-25T14:20:45.5582527Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5582830Z     
2025-02-25T14:20:45.5583031Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5583299Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5583582Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5583913Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5584258Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5584529Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5584832Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5585292Z             else:
2025-02-25T14:20:45.5585677Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5586186Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5586517Z 
2025-02-25T14:20:45.5586755Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5587335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5587953Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5588490Z     ???
2025-02-25T14:20:45.5588866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5589222Z 
2025-02-25T14:20:45.5589340Z >   ???
2025-02-25T14:20:45.5589626Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5589910Z E   
2025-02-25T14:20:45.5590143Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5590499Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5590923Z E          ...
2025-02-25T14:20:45.5591139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5591458Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5591812Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5592105Z E          ...
2025-02-25T14:20:45.5592312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5592620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5592951Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5593138Z 
2025-02-25T14:20:45.5593253Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5593624Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-25T14:20:45.5593928Z 
2025-02-25T14:20:45.5594062Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5594590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5594939Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5595268Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5595627Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5595971Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5596231Z err_msg = None
2025-02-25T14:20:45.5596345Z 
2025-02-25T14:20:45.5596480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5596778Z         if err_msg is None:
2025-02-25T14:20:45.5597036Z             if left.shape != right.shape:
2025-02-25T14:20:45.5597316Z                 raise_assert_detail(
2025-02-25T14:20:45.5597644Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5597985Z                 )
2025-02-25T14:20:45.5598184Z     
2025-02-25T14:20:45.5598374Z             diff = 0
2025-02-25T14:20:45.5598632Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5598962Z                 # count up differences
2025-02-25T14:20:45.5599320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5599679Z                     diff += 1
2025-02-25T14:20:45.5599916Z     
2025-02-25T14:20:45.5600112Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5600443Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5600957Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5601370Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5601661Z E           
2025-02-25T14:20:45.5601895Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5602383Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5603171Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5603541Z 
2025-02-25T14:20:45.5603852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5604256Z 
2025-02-25T14:20:45.5604431Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5604701Z 
2025-02-25T14:20:45.5604999Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c900710>
2025-02-25T14:20:45.5605861Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1485e780>
2025-02-25T14:20:45.5606448Z attr = 'j_blues'
2025-02-25T14:20:45.5606646Z 
2025-02-25T14:20:45.5606905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5607504Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5608016Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5608300Z         try:
2025-02-25T14:20:45.5608567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5608906Z         except KeyError:
2025-02-25T14:20:45.5609198Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5609510Z     
2025-02-25T14:20:45.5609718Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5609985Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5610272Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5610864Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5611199Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5611465Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5611787Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5612077Z             else:
2025-02-25T14:20:45.5612307Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5612605Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5612802Z 
2025-02-25T14:20:45.5612949Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5613300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5613672Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5614000Z     ???
2025-02-25T14:20:45.5614234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5614463Z 
2025-02-25T14:20:45.5614536Z >   ???
2025-02-25T14:20:45.5614781Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5615088Z E   
2025-02-25T14:20:45.5615329Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5615674Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5615957Z E          ...
2025-02-25T14:20:45.5616185Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5616491Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5616835Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5617134Z E          ...
2025-02-25T14:20:45.5617340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5617655Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5617972Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5618160Z 
2025-02-25T14:20:45.5618271Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5618643Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-25T14:20:45.5619072Z 
2025-02-25T14:20:45.5619210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5619643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5619972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5620294Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5620858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5621196Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5621490Z err_msg = None
2025-02-25T14:20:45.5621606Z 
2025-02-25T14:20:45.5621743Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5622042Z         if err_msg is None:
2025-02-25T14:20:45.5622303Z             if left.shape != right.shape:
2025-02-25T14:20:45.5622580Z                 raise_assert_detail(
2025-02-25T14:20:45.5622921Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5623232Z                 )
2025-02-25T14:20:45.5623418Z     
2025-02-25T14:20:45.5623597Z             diff = 0
2025-02-25T14:20:45.5623885Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5624399Z                 # count up differences
2025-02-25T14:20:45.5624987Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5625378Z                     diff += 1
2025-02-25T14:20:45.5625611Z     
2025-02-25T14:20:45.5625820Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5626144Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5626549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5627109Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5627403Z E           
2025-02-25T14:20:45.5627648Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5628120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5628735Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5629096Z 
2025-02-25T14:20:45.5629405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5629816Z 
2025-02-25T14:20:45.5629986Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5630261Z 
2025-02-25T14:20:45.5630491Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93bb60>
2025-02-25T14:20:45.5631122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5631466Z attr = 'lines'
2025-02-25T14:20:45.5631587Z 
2025-02-25T14:20:45.5631751Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5632113Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5632423Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5632655Z         try:
2025-02-25T14:20:45.5632909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5633246Z         except KeyError:
2025-02-25T14:20:45.5633552Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5633874Z     
2025-02-25T14:20:45.5634078Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5634357Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5634771Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5635104Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5635431Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5635684Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5635964Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5636223Z             else:
2025-02-25T14:20:45.5636442Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5636749Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5636946Z 
2025-02-25T14:20:45.5637094Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5637432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5637807Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5638143Z     ???
2025-02-25T14:20:45.5638369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5638626Z 
2025-02-25T14:20:45.5638717Z >   ???
2025-02-25T14:20:45.5638959Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5639256Z E   
2025-02-25T14:20:45.5639509Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5639844Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5640135Z E          ...
2025-02-25T14:20:45.5640344Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5640755Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5641108Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5641404Z E          ...
2025-02-25T14:20:45.5641633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5642096Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5642435Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5642637Z 
2025-02-25T14:20:45.5642763Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5643347Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-25T14:20:45.5643866Z 
2025-02-25T14:20:45.5644221Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939a90>
2025-02-25T14:20:45.5644753Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5645137Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5645322Z 
2025-02-25T14:20:45.5645470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5645830Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5646141Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5646387Z         try:
2025-02-25T14:20:45.5646660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5647014Z         except KeyError:
2025-02-25T14:20:45.5647307Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5647634Z     
2025-02-25T14:20:45.5647829Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5648090Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5648372Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5648709Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5649028Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5649288Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5649596Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5649794Z 
2025-02-25T14:20:45.5649937Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5650275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5650497Z 
2025-02-25T14:20:45.5650745Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5651066Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5651492Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5651782Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5652128Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5652486Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5652779Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5653083Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5653339Z err_msg = None
2025-02-25T14:20:45.5653451Z 
2025-02-25T14:20:45.5653581Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5653863Z         if err_msg is None:
2025-02-25T14:20:45.5654115Z             if left.shape != right.shape:
2025-02-25T14:20:45.5654422Z                 raise_assert_detail(
2025-02-25T14:20:45.5654753Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5655085Z                 )
2025-02-25T14:20:45.5655294Z     
2025-02-25T14:20:45.5655476Z             diff = 0
2025-02-25T14:20:45.5655735Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5656049Z                 # count up differences
2025-02-25T14:20:45.5656401Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5656778Z                     diff += 1
2025-02-25T14:20:45.5657016Z     
2025-02-25T14:20:45.5657220Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5657550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5657964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5658346Z E           AssertionError: Series are different
2025-02-25T14:20:45.5658612Z E           
2025-02-25T14:20:45.5658968Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5659549Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5660365Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5661335Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5661788Z 
2025-02-25T14:20:45.5662117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5663102Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-25T14:20:45.5663506Z 
2025-02-25T14:20:45.5663751Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93b140>
2025-02-25T14:20:45.5664251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5664601Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5664772Z 
2025-02-25T14:20:45.5664917Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5665281Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5665580Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5665966Z         try:
2025-02-25T14:20:45.5666229Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5666560Z         except KeyError:
2025-02-25T14:20:45.5666842Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5667149Z     
2025-02-25T14:20:45.5667344Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5667607Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5667890Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5668207Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5668525Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5668786Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5669079Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5669291Z 
2025-02-25T14:20:45.5669447Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5669785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5670007Z 
2025-02-25T14:20:45.5670145Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5670467Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5670868Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5671160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5671485Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5671812Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5672087Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5672369Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5672607Z err_msg = None
2025-02-25T14:20:45.5672726Z 
2025-02-25T14:20:45.5673036Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5673338Z         if err_msg is None:
2025-02-25T14:20:45.5673609Z             if left.shape != right.shape:
2025-02-25T14:20:45.5673890Z                 raise_assert_detail(
2025-02-25T14:20:45.5674218Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5674512Z                 )
2025-02-25T14:20:45.5674693Z     
2025-02-25T14:20:45.5674866Z             diff = 0
2025-02-25T14:20:45.5675117Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5675431Z                 # count up differences
2025-02-25T14:20:45.5675789Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5676164Z                     diff += 1
2025-02-25T14:20:45.5676408Z     
2025-02-25T14:20:45.5676627Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5676957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5677388Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5677789Z E           AssertionError: Series are different
2025-02-25T14:20:45.5678072Z E           
2025-02-25T14:20:45.5678316Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5678904Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5679767Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5681466Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5681941Z 
2025-02-25T14:20:45.5682272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5682883Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-25T14:20:45.5683176Z 
2025-02-25T14:20:45.5683319Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5683701Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5684063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5684415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5684792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5685146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5685428Z err_msg = None
2025-02-25T14:20:45.5685546Z 
2025-02-25T14:20:45.5685678Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5685982Z         if err_msg is None:
2025-02-25T14:20:45.5686240Z             if left.shape != right.shape:
2025-02-25T14:20:45.5686536Z                 raise_assert_detail(
2025-02-25T14:20:45.5686904Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5687410Z                 )
2025-02-25T14:20:45.5687620Z     
2025-02-25T14:20:45.5687821Z             diff = 0
2025-02-25T14:20:45.5688083Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5688385Z                 # count up differences
2025-02-25T14:20:45.5688746Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5689096Z                     diff += 1
2025-02-25T14:20:45.5689324Z     
2025-02-25T14:20:45.5689514Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5689837Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5690250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5690841Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5691129Z E           
2025-02-25T14:20:45.5691357Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5691812Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5692450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5692811Z 
2025-02-25T14:20:45.5693118Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5693529Z 
2025-02-25T14:20:45.5693703Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5693977Z 
2025-02-25T14:20:45.5694218Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9390d0>
2025-02-25T14:20:45.5694881Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>, attr = 'nu'
2025-02-25T14:20:45.5695169Z 
2025-02-25T14:20:45.5695324Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5695672Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5695972Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5696212Z         try:
2025-02-25T14:20:45.5696478Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5696803Z         except KeyError:
2025-02-25T14:20:45.5697093Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5697395Z     
2025-02-25T14:20:45.5697590Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5697859Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5698138Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5698462Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5698783Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5699083Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5699594Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5699946Z 
2025-02-25T14:20:45.5700176Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5700740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5701109Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5701428Z     ???
2025-02-25T14:20:45.5701648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5701846Z 
2025-02-25T14:20:45.5701937Z >   ???
2025-02-25T14:20:45.5702180Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5702473Z E   
2025-02-25T14:20:45.5702709Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5703207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5703494Z E          ...
2025-02-25T14:20:45.5703719Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5704041Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5704395Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5704677Z E          ...
2025-02-25T14:20:45.5704894Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5705213Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5705558Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5705748Z 
2025-02-25T14:20:45.5705854Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5706214Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-25T14:20:45.5706499Z 
2025-02-25T14:20:45.5706646Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5707015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5707355Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5707692Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5708057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5708379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5708657Z err_msg = None
2025-02-25T14:20:45.5708782Z 
2025-02-25T14:20:45.5708895Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5709192Z         if err_msg is None:
2025-02-25T14:20:45.5709438Z             if left.shape != right.shape:
2025-02-25T14:20:45.5709731Z                 raise_assert_detail(
2025-02-25T14:20:45.5710049Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5710382Z                 )
2025-02-25T14:20:45.5710457Z     
2025-02-25T14:20:45.5710647Z             diff = 0
2025-02-25T14:20:45.5710906Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5711005Z                 # count up differences
2025-02-25T14:20:45.5711175Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5711261Z                     diff += 1
2025-02-25T14:20:45.5711332Z     
2025-02-25T14:20:45.5711446Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5711600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5711772Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5711907Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5711983Z E           
2025-02-25T14:20:45.5712119Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5712409Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5712702Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5712710Z 
2025-02-25T14:20:45.5713039Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5713044Z 
2025-02-25T14:20:45.5713218Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5713223Z 
2025-02-25T14:20:45.5713581Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939550>
2025-02-25T14:20:45.5713759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5713863Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5713869Z 
2025-02-25T14:20:45.5714026Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5714143Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5714247Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5714327Z         try:
2025-02-25T14:20:45.5714488Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5714577Z         except KeyError:
2025-02-25T14:20:45.5714731Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5714810Z     
2025-02-25T14:20:45.5714916Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5715015Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5715123Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5715283Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5715382Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5715495Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5715610Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5715620Z 
2025-02-25T14:20:45.5715770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5715898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5716065Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5716141Z     ???
2025-02-25T14:20:45.5716269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5716274Z 
2025-02-25T14:20:45.5716371Z >   ???
2025-02-25T14:20:45.5716505Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5716595Z E   
2025-02-25T14:20:45.5716732Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5716874Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5717050Z E          ...
2025-02-25T14:20:45.5717163Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5717299Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5717433Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5717515Z E          ...
2025-02-25T14:20:45.5717633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5717764Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5717894Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5717898Z 
2025-02-25T14:20:45.5718017Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5718214Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-25T14:20:45.5718218Z 
2025-02-25T14:20:45.5718379Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5718524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5718705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5718944Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5719191Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5719377Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5719510Z err_msg = None
2025-02-25T14:20:45.5719516Z 
2025-02-25T14:20:45.5719710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5719804Z         if err_msg is None:
2025-02-25T14:20:45.5719925Z             if left.shape != right.shape:
2025-02-25T14:20:45.5720018Z                 raise_assert_detail(
2025-02-25T14:20:45.5720188Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5720372Z                 )
2025-02-25T14:20:45.5720466Z     
2025-02-25T14:20:45.5720650Z             diff = 0
2025-02-25T14:20:45.5720799Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5720917Z                 # count up differences
2025-02-25T14:20:45.5721095Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5721190Z                     diff += 1
2025-02-25T14:20:45.5721264Z     
2025-02-25T14:20:45.5721373Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5721518Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5721704Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5721825Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5721925Z E           
2025-02-25T14:20:45.5722043Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5722339Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5722629Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5722635Z 
2025-02-25T14:20:45.5722942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5722960Z 
2025-02-25T14:20:45.5723130Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5723143Z 
2025-02-25T14:20:45.5723385Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939280>
2025-02-25T14:20:45.5723744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>, attr = 'f_lu'
2025-02-25T14:20:45.5723749Z 
2025-02-25T14:20:45.5723904Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5724024Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5724128Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5724202Z         try:
2025-02-25T14:20:45.5724363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5724453Z         except KeyError:
2025-02-25T14:20:45.5724614Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5724704Z     
2025-02-25T14:20:45.5724799Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5724913Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5725011Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5725171Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5725259Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5725375Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5725496Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5725500Z 
2025-02-25T14:20:45.5725641Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5725770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5725924Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5726026Z     ???
2025-02-25T14:20:45.5726144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5726148Z 
2025-02-25T14:20:45.5726236Z >   ???
2025-02-25T14:20:45.5726363Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5726446Z E   
2025-02-25T14:20:45.5726586Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5726851Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5726943Z E          ...
2025-02-25T14:20:45.5727056Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5727213Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5727331Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5727422Z E          ...
2025-02-25T14:20:45.5727514Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5727664Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5727776Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5727781Z 
2025-02-25T14:20:45.5727897Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5728099Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-25T14:20:45.5728103Z 
2025-02-25T14:20:45.5728253Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5728410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5728522Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5728682Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5728811Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5728925Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5729004Z err_msg = None
2025-02-25T14:20:45.5729008Z 
2025-02-25T14:20:45.5729139Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5729230Z         if err_msg is None:
2025-02-25T14:20:45.5729361Z             if left.shape != right.shape:
2025-02-25T14:20:45.5729466Z                 raise_assert_detail(
2025-02-25T14:20:45.5729617Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5729714Z                 )
2025-02-25T14:20:45.5729794Z     
2025-02-25T14:20:45.5729982Z             diff = 0
2025-02-25T14:20:45.5730099Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5730214Z                 # count up differences
2025-02-25T14:20:45.5730395Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5730498Z                     diff += 1
2025-02-25T14:20:45.5730676Z     
2025-02-25T14:20:45.5730790Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5730930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5731126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5731259Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5731339Z E           
2025-02-25T14:20:45.5731479Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5731759Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5732065Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5732072Z 
2025-02-25T14:20:45.5732399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5732404Z 
2025-02-25T14:20:45.5732579Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5732705Z 
2025-02-25T14:20:45.5732960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9385f0>
2025-02-25T14:20:45.5733136Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5733232Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5733236Z 
2025-02-25T14:20:45.5733386Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5733504Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5733608Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5733684Z         try:
2025-02-25T14:20:45.5733839Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5733928Z         except KeyError:
2025-02-25T14:20:45.5734080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5734155Z     
2025-02-25T14:20:45.5734264Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5734361Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5734476Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5734644Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5734779Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5734898Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5735015Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5735197Z             else:
2025-02-25T14:20:45.5735328Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5735456Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5735461Z 
2025-02-25T14:20:45.5735597Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5735738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5735888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5735980Z     ???
2025-02-25T14:20:45.5736117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5736129Z 
2025-02-25T14:20:45.5736206Z >   ???
2025-02-25T14:20:45.5736358Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5736563Z E   
2025-02-25T14:20:45.5753994Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5754238Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5754367Z E          ...
2025-02-25T14:20:45.5754521Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5754756Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5754952Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5755069Z E          ...
2025-02-25T14:20:45.5755213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5755421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5755603Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5755611Z 
2025-02-25T14:20:45.5755767Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5756154Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-25T14:20:45.5756174Z 
2025-02-25T14:20:45.5756395Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5756618Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5756781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5756976Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5757104Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5757200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5757277Z err_msg = None
2025-02-25T14:20:45.5757282Z 
2025-02-25T14:20:45.5757398Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5757480Z         if err_msg is None:
2025-02-25T14:20:45.5757770Z             if left.shape != right.shape:
2025-02-25T14:20:45.5757853Z                 raise_assert_detail(
2025-02-25T14:20:45.5758019Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5758087Z                 )
2025-02-25T14:20:45.5758154Z     
2025-02-25T14:20:45.5758223Z             diff = 0
2025-02-25T14:20:45.5758337Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5758424Z                 # count up differences
2025-02-25T14:20:45.5758598Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5758673Z                     diff += 1
2025-02-25T14:20:45.5758741Z     
2025-02-25T14:20:45.5758826Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5758963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5759141Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5759262Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5759332Z E           
2025-02-25T14:20:45.5759452Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5759725Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5759994Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5760003Z 
2025-02-25T14:20:45.5760335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5760346Z 
2025-02-25T14:20:45.5760784Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5760790Z 
2025-02-25T14:20:45.5761021Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a8d0>
2025-02-25T14:20:45.5761193Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5761271Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5761278Z 
2025-02-25T14:20:45.5761417Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5761539Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5761626Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5761696Z         try:
2025-02-25T14:20:45.5761835Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5761914Z         except KeyError:
2025-02-25T14:20:45.5762052Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5762127Z     
2025-02-25T14:20:45.5762210Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5762309Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5762400Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5762534Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5762619Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5762706Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5762813Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5762881Z             else:
2025-02-25T14:20:45.5762978Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5763082Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5763087Z 
2025-02-25T14:20:45.5763216Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5763332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5763616Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5763692Z     ???
2025-02-25T14:20:45.5763832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5763838Z 
2025-02-25T14:20:45.5763924Z >   ???
2025-02-25T14:20:45.5764061Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5764151Z E   
2025-02-25T14:20:45.5764285Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5764416Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5764494Z E          ...
2025-02-25T14:20:45.5764601Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5764737Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5764869Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5764944Z E          ...
2025-02-25T14:20:45.5765068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5765222Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5765333Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5765343Z 
2025-02-25T14:20:45.5765453Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5765656Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-25T14:20:45.5765660Z 
2025-02-25T14:20:45.5765810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5765953Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5766083Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5766241Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5766372Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5766509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5766632Z err_msg = None
2025-02-25T14:20:45.5766636Z 
2025-02-25T14:20:45.5766938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5767030Z         if err_msg is None:
2025-02-25T14:20:45.5767150Z             if left.shape != right.shape:
2025-02-25T14:20:45.5767247Z                 raise_assert_detail(
2025-02-25T14:20:45.5767419Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5767515Z                 )
2025-02-25T14:20:45.5767590Z     
2025-02-25T14:20:45.5767685Z             diff = 0
2025-02-25T14:20:45.5767807Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5767919Z                 # count up differences
2025-02-25T14:20:45.5768098Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5768191Z                     diff += 1
2025-02-25T14:20:45.5768270Z     
2025-02-25T14:20:45.5768388Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5768536Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5768740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5768861Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5768969Z E           
2025-02-25T14:20:45.5769112Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5769377Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5769675Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5769779Z 
2025-02-25T14:20:45.5770098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5770122Z 
2025-02-25T14:20:45.5770307Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5770312Z 
2025-02-25T14:20:45.5770653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a780>
2025-02-25T14:20:45.5770828Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef9caf00>
2025-02-25T14:20:45.5770908Z attr = 'j_blues'
2025-02-25T14:20:45.5770913Z 
2025-02-25T14:20:45.5771068Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5771204Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5771303Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5771398Z         try:
2025-02-25T14:20:45.5771556Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5771656Z         except KeyError:
2025-02-25T14:20:45.5771811Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5771902Z     
2025-02-25T14:20:45.5771998Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5772108Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5772203Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5772355Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5772449Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5772560Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5772691Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5772766Z             else:
2025-02-25T14:20:45.5772885Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5773002Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5773015Z 
2025-02-25T14:20:45.5773161Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5773439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5773607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5773687Z     ???
2025-02-25T14:20:45.5773817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5773821Z 
2025-02-25T14:20:45.5773916Z >   ???
2025-02-25T14:20:45.5774052Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5774138Z E   
2025-02-25T14:20:45.5774277Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5774409Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5774482Z E          ...
2025-02-25T14:20:45.5774586Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5774719Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5774851Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5774927Z E          ...
2025-02-25T14:20:45.5775048Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5775176Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5775307Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5775312Z 
2025-02-25T14:20:45.5775410Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5775652Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-25T14:20:45.5775660Z 
2025-02-25T14:20:45.5775885Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5776112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5776303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5776545Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5776910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5777026Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5777113Z err_msg = None
2025-02-25T14:20:45.5777118Z 
2025-02-25T14:20:45.5777250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5777341Z         if err_msg is None:
2025-02-25T14:20:45.5777461Z             if left.shape != right.shape:
2025-02-25T14:20:45.5777555Z                 raise_assert_detail(
2025-02-25T14:20:45.5777721Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5777797Z                 )
2025-02-25T14:20:45.5777880Z     
2025-02-25T14:20:45.5777960Z             diff = 0
2025-02-25T14:20:45.5778092Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5778199Z                 # count up differences
2025-02-25T14:20:45.5778394Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5778498Z                     diff += 1
2025-02-25T14:20:45.5778585Z     
2025-02-25T14:20:45.5778694Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5778837Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5779022Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5779144Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5779233Z E           
2025-02-25T14:20:45.5779351Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5779631Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5779923Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5780029Z 
2025-02-25T14:20:45.5780343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5780366Z 
2025-02-25T14:20:45.5780728Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5780739Z 
2025-02-25T14:20:45.5781013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939e80>
2025-02-25T14:20:45.5781185Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5781278Z attr = 'lines'
2025-02-25T14:20:45.5781283Z 
2025-02-25T14:20:45.5781425Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5781572Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5781671Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5781761Z         try:
2025-02-25T14:20:45.5781904Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5782002Z         except KeyError:
2025-02-25T14:20:45.5782160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5782233Z     
2025-02-25T14:20:45.5782342Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5782442Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5782557Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5782693Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5782804Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5782897Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5783026Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5783241Z             else:
2025-02-25T14:20:45.5783356Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5783493Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5783498Z 
2025-02-25T14:20:45.5783626Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5783753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5783909Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5784000Z     ???
2025-02-25T14:20:45.5784113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5784118Z 
2025-02-25T14:20:45.5784207Z >   ???
2025-02-25T14:20:45.5784337Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5784432Z E   
2025-02-25T14:20:45.5784575Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5784690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5784794Z E          ...
2025-02-25T14:20:45.5784889Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5785054Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5785173Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5785260Z E          ...
2025-02-25T14:20:45.5785348Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5785490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5785598Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5785603Z 
2025-02-25T14:20:45.5785712Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5785944Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-25T14:20:45.5785949Z 
2025-02-25T14:20:45.5786180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a3f0>
2025-02-25T14:20:45.5786378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5786484Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5786489Z 
2025-02-25T14:20:45.5786772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5786894Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5787001Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5787069Z         try:
2025-02-25T14:20:45.5787227Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5787312Z         except KeyError:
2025-02-25T14:20:45.5787454Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5787532Z     
2025-02-25T14:20:45.5787622Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5787723Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5787817Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5787964Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5788052Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5788162Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5788278Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5788294Z 
2025-02-25T14:20:45.5788438Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5788564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5788568Z 
2025-02-25T14:20:45.5788710Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5788814Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5788929Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5789024Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5789165Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5789260Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5789367Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5789563Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5789668Z err_msg = None
2025-02-25T14:20:45.5789672Z 
2025-02-25T14:20:45.5789783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5789880Z         if err_msg is None:
2025-02-25T14:20:45.5789977Z             if left.shape != right.shape:
2025-02-25T14:20:45.5790081Z                 raise_assert_detail(
2025-02-25T14:20:45.5790227Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5790313Z                 )
2025-02-25T14:20:45.5790382Z     
2025-02-25T14:20:45.5790475Z             diff = 0
2025-02-25T14:20:45.5790692Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5790804Z                 # count up differences
2025-02-25T14:20:45.5790973Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5791052Z                     diff += 1
2025-02-25T14:20:45.5791126Z     
2025-02-25T14:20:45.5791213Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5791371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5791547Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5791663Z E           AssertionError: Series are different
2025-02-25T14:20:45.5791739Z E           
2025-02-25T14:20:45.5791864Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5792244Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5792593Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5793087Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5793094Z 
2025-02-25T14:20:45.5793417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5793631Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-25T14:20:45.5793643Z 
2025-02-25T14:20:45.5793879Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939be0>
2025-02-25T14:20:45.5794108Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5794295Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5794302Z 
2025-02-25T14:20:45.5794536Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5794754Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5794922Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5795048Z         try:
2025-02-25T14:20:45.5795305Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5795400Z         except KeyError:
2025-02-25T14:20:45.5795554Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5795625Z     
2025-02-25T14:20:45.5795730Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5795829Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5796069Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5796203Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5796306Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5796406Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5796515Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5796519Z 
2025-02-25T14:20:45.5796656Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5796772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5796777Z 
2025-02-25T14:20:45.5796927Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5797014Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5797136Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5797218Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5797379Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5797490Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5797597Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5797685Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5797771Z err_msg = None
2025-02-25T14:20:45.5797776Z 
2025-02-25T14:20:45.5797900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5797985Z         if err_msg is None:
2025-02-25T14:20:45.5798087Z             if left.shape != right.shape:
2025-02-25T14:20:45.5798178Z                 raise_assert_detail(
2025-02-25T14:20:45.5798336Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5798422Z                 )
2025-02-25T14:20:45.5798496Z     
2025-02-25T14:20:45.5798582Z             diff = 0
2025-02-25T14:20:45.5798702Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5798816Z                 # count up differences
2025-02-25T14:20:45.5799004Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5799215Z                     diff += 1
2025-02-25T14:20:45.5799298Z     
2025-02-25T14:20:45.5799389Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5799538Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5799711Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5799831Z E           AssertionError: Series are different
2025-02-25T14:20:45.5799909Z E           
2025-02-25T14:20:45.5800012Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5800387Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5800888Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5801280Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5801413Z 
2025-02-25T14:20:45.5801742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5801924Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-25T14:20:45.5801928Z 
2025-02-25T14:20:45.5802064Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5802200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5802299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5802448Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5802570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5802674Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5802756Z err_msg = None
2025-02-25T14:20:45.5802760Z 
2025-02-25T14:20:45.5802888Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5802979Z         if err_msg is None:
2025-02-25T14:20:45.5803076Z             if left.shape != right.shape:
2025-02-25T14:20:45.5803176Z                 raise_assert_detail(
2025-02-25T14:20:45.5803320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5803397Z                 )
2025-02-25T14:20:45.5803468Z     
2025-02-25T14:20:45.5803554Z             diff = 0
2025-02-25T14:20:45.5803661Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5803760Z                 # count up differences
2025-02-25T14:20:45.5803928Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5804019Z                     diff += 1
2025-02-25T14:20:45.5804089Z     
2025-02-25T14:20:45.5804187Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5804341Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5804644Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5804766Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5804841Z E           
2025-02-25T14:20:45.5804964Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5805228Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5805500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5805518Z 
2025-02-25T14:20:45.5805819Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5805824Z 
2025-02-25T14:20:45.5805987Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5805991Z 
2025-02-25T14:20:45.5806223Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939d90>
2025-02-25T14:20:45.5806422Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>, attr = 'nu'
2025-02-25T14:20:45.5806434Z 
2025-02-25T14:20:45.5806570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5806695Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5806779Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5806855Z         try:
2025-02-25T14:20:45.5807082Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5807170Z         except KeyError:
2025-02-25T14:20:45.5807313Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5807393Z     
2025-02-25T14:20:45.5807483Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5807583Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5807671Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5807805Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5807896Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5807986Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5808106Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5808111Z 
2025-02-25T14:20:45.5808233Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5808357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5808517Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5808589Z     ???
2025-02-25T14:20:45.5808699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5808703Z 
2025-02-25T14:20:45.5808778Z >   ???
2025-02-25T14:20:45.5808921Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5809000Z E   
2025-02-25T14:20:45.5809153Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5809269Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5809355Z E          ...
2025-02-25T14:20:45.5809443Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5809589Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5809708Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5809788Z E          ...
2025-02-25T14:20:45.5809875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5810022Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5810145Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5810250Z 
2025-02-25T14:20:45.5810353Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5810668Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-25T14:20:45.5810673Z 
2025-02-25T14:20:45.5810801Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5810952Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5811051Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5811196Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5811323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5811438Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5811541Z err_msg = None
2025-02-25T14:20:45.5811546Z 
2025-02-25T14:20:45.5811665Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5811763Z         if err_msg is None:
2025-02-25T14:20:45.5811862Z             if left.shape != right.shape:
2025-02-25T14:20:45.5811967Z                 raise_assert_detail(
2025-02-25T14:20:45.5812113Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5812196Z                 )
2025-02-25T14:20:45.5812271Z     
2025-02-25T14:20:45.5812364Z             diff = 0
2025-02-25T14:20:45.5812477Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5812581Z                 # count up differences
2025-02-25T14:20:45.5812764Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5812848Z                     diff += 1
2025-02-25T14:20:45.5812999Z     
2025-02-25T14:20:45.5813162Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5813587Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5813895Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5814104Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5814220Z E           
2025-02-25T14:20:45.5814353Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5814621Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5814906Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5814920Z 
2025-02-25T14:20:45.5815238Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5815244Z 
2025-02-25T14:20:45.5815431Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5815435Z 
2025-02-25T14:20:45.5815660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a5d0>
2025-02-25T14:20:45.5815852Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5815938Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5815942Z 
2025-02-25T14:20:45.5816095Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5816220Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5816327Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5816409Z         try:
2025-02-25T14:20:45.5816573Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5816674Z         except KeyError:
2025-02-25T14:20:45.5816949Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5817024Z     
2025-02-25T14:20:45.5817110Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5817220Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5817316Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5817463Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5817550Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5817661Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5817777Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5817782Z 
2025-02-25T14:20:45.5817924Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5818054Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5818213Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5818310Z     ???
2025-02-25T14:20:45.5818436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5818440Z 
2025-02-25T14:20:45.5818524Z >   ???
2025-02-25T14:20:45.5818662Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5818750Z E   
2025-02-25T14:20:45.5818880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5819004Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5819082Z E          ...
2025-02-25T14:20:45.5819182Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5819328Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5819447Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5819541Z E          ...
2025-02-25T14:20:45.5819632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5819868Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5819986Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5819990Z 
2025-02-25T14:20:45.5820097Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5820307Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-25T14:20:45.5820310Z 
2025-02-25T14:20:45.5820467Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5820812Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5820922Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5821072Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5821199Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5821319Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5821396Z err_msg = None
2025-02-25T14:20:45.5821401Z 
2025-02-25T14:20:45.5821555Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5821649Z         if err_msg is None:
2025-02-25T14:20:45.5821774Z             if left.shape != right.shape:
2025-02-25T14:20:45.5821880Z                 raise_assert_detail(
2025-02-25T14:20:45.5822027Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5822115Z                 )
2025-02-25T14:20:45.5822187Z     
2025-02-25T14:20:45.5822283Z             diff = 0
2025-02-25T14:20:45.5822412Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5822514Z                 # count up differences
2025-02-25T14:20:45.5822689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5822783Z                     diff += 1
2025-02-25T14:20:45.5822855Z     
2025-02-25T14:20:45.5822969Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5823113Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5823497Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5823633Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5823709Z E           
2025-02-25T14:20:45.5823837Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5824095Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5824373Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5824385Z 
2025-02-25T14:20:45.5824704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5824709Z 
2025-02-25T14:20:45.5824885Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5824889Z 
2025-02-25T14:20:45.5825140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c93a4b0>
2025-02-25T14:20:45.5825345Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>, attr = 'f_lu'
2025-02-25T14:20:45.5825350Z 
2025-02-25T14:20:45.5825501Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5825635Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5825724Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5825811Z         try:
2025-02-25T14:20:45.5826077Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5826179Z         except KeyError:
2025-02-25T14:20:45.5826330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5826408Z     
2025-02-25T14:20:45.5826501Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5826621Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5826736Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5826883Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5826983Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5827083Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5827212Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5827217Z 
2025-02-25T14:20:45.5827346Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5827473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5827627Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5827709Z     ???
2025-02-25T14:20:45.5827823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5827828Z 
2025-02-25T14:20:45.5827914Z >   ???
2025-02-25T14:20:45.5828046Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5828128Z E   
2025-02-25T14:20:45.5828274Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5828388Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5828476Z E          ...
2025-02-25T14:20:45.5828565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5828709Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5828825Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5828911Z E          ...
2025-02-25T14:20:45.5828998Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5829141Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5829249Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5829360Z 
2025-02-25T14:20:45.5829458Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5829672Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-25T14:20:45.5829677Z 
2025-02-25T14:20:45.5829804Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5829944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5830047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5830189Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5830313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5830422Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5830626Z err_msg = None
2025-02-25T14:20:45.5830631Z 
2025-02-25T14:20:45.5830753Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5830854Z         if err_msg is None:
2025-02-25T14:20:45.5830952Z             if left.shape != right.shape:
2025-02-25T14:20:45.5831058Z                 raise_assert_detail(
2025-02-25T14:20:45.5831204Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5831293Z                 )
2025-02-25T14:20:45.5831372Z     
2025-02-25T14:20:45.5831475Z             diff = 0
2025-02-25T14:20:45.5831590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5831701Z                 # count up differences
2025-02-25T14:20:45.5831889Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5831974Z                     diff += 1
2025-02-25T14:20:45.5832066Z     
2025-02-25T14:20:45.5832306Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5832470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5832665Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5832792Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5832868Z E           
2025-02-25T14:20:45.5833005Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5833278Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5833556Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5833579Z 
2025-02-25T14:20:45.5833913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5833918Z 
2025-02-25T14:20:45.5834095Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5834114Z 
2025-02-25T14:20:45.5834341Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939250>
2025-02-25T14:20:45.5834530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5834614Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5834619Z 
2025-02-25T14:20:45.5834772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5834893Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5834999Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5835082Z         try:
2025-02-25T14:20:45.5835234Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5835465Z         except KeyError:
2025-02-25T14:20:45.5835617Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5835694Z     
2025-02-25T14:20:45.5835791Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5835903Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5835994Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5836139Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5836231Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5836338Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5836452Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5836538Z             else:
2025-02-25T14:20:45.5836641Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5836773Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5836785Z 
2025-02-25T14:20:45.5836938Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5837069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5837229Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5837306Z     ???
2025-02-25T14:20:45.5837439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5837444Z 
2025-02-25T14:20:45.5837516Z >   ???
2025-02-25T14:20:45.5837661Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5837733Z E   
2025-02-25T14:20:45.5837879Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5837997Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5838091Z E          ...
2025-02-25T14:20:45.5838195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5838411Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5838777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5838911Z E          ...
2025-02-25T14:20:45.5839075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5839295Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5839493Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5839500Z 
2025-02-25T14:20:45.5839655Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5840016Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-25T14:20:45.5840023Z 
2025-02-25T14:20:45.5840255Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5840481Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5840810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5841038Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5841275Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5841441Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5841589Z err_msg = None
2025-02-25T14:20:45.5841595Z 
2025-02-25T14:20:45.5841785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5841944Z         if err_msg is None:
2025-02-25T14:20:45.5842119Z             if left.shape != right.shape:
2025-02-25T14:20:45.5842271Z                 raise_assert_detail(
2025-02-25T14:20:45.5842490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5842567Z                 )
2025-02-25T14:20:45.5842649Z     
2025-02-25T14:20:45.5842729Z             diff = 0
2025-02-25T14:20:45.5842859Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5842961Z                 # count up differences
2025-02-25T14:20:45.5843155Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5843386Z                     diff += 1
2025-02-25T14:20:45.5843475Z     
2025-02-25T14:20:45.5843581Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5843723Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5843912Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5844031Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5844122Z E           
2025-02-25T14:20:45.5844241Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5844519Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5844791Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5844814Z 
2025-02-25T14:20:45.5845131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5845135Z 
2025-02-25T14:20:45.5845322Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5845326Z 
2025-02-25T14:20:45.5845554Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c939010>
2025-02-25T14:20:45.5845749Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5845846Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5845850Z 
2025-02-25T14:20:45.5846123Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5846253Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5846348Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5846433Z         try:
2025-02-25T14:20:45.5846571Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5846670Z         except KeyError:
2025-02-25T14:20:45.5846816Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5846895Z     
2025-02-25T14:20:45.5846984Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5847082Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5847171Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5847306Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5847399Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5847487Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5847612Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5847694Z             else:
2025-02-25T14:20:45.5847799Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5847915Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5847921Z 
2025-02-25T14:20:45.5848054Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5848173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5848330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5848415Z     ???
2025-02-25T14:20:45.5848529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5848533Z 
2025-02-25T14:20:45.5848622Z >   ???
2025-02-25T14:20:45.5848756Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5848837Z E   
2025-02-25T14:20:45.5848968Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5849098Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5849183Z E          ...
2025-02-25T14:20:45.5849289Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5849528Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5849652Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5849742Z E          ...
2025-02-25T14:20:45.5849837Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5849978Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5850087Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5850092Z 
2025-02-25T14:20:45.5850190Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5850388Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-25T14:20:45.5850392Z 
2025-02-25T14:20:45.5850715Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5850858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5850963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5851101Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5851220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5851324Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5851406Z err_msg = None
2025-02-25T14:20:45.5851410Z 
2025-02-25T14:20:45.5851529Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5851613Z         if err_msg is None:
2025-02-25T14:20:45.5851726Z             if left.shape != right.shape:
2025-02-25T14:20:45.5851810Z                 raise_assert_detail(
2025-02-25T14:20:45.5851965Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5852074Z                 )
2025-02-25T14:20:45.5852284Z     
2025-02-25T14:20:45.5852372Z             diff = 0
2025-02-25T14:20:45.5852487Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5852606Z                 # count up differences
2025-02-25T14:20:45.5852778Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5852875Z                     diff += 1
2025-02-25T14:20:45.5852946Z     
2025-02-25T14:20:45.5853051Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5853193Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5853381Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5853509Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5853586Z E           
2025-02-25T14:20:45.5853707Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5853969Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5854255Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5854261Z 
2025-02-25T14:20:45.5854571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5854577Z 
2025-02-25T14:20:45.5854748Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5854752Z 
2025-02-25T14:20:45.5854994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c938ce0>
2025-02-25T14:20:45.5855164Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fb800>
2025-02-25T14:20:45.5855379Z attr = 'j_blues'
2025-02-25T14:20:45.5855385Z 
2025-02-25T14:20:45.5855519Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5855648Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5855747Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5855820Z         try:
2025-02-25T14:20:45.5855966Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5856051Z         except KeyError:
2025-02-25T14:20:45.5856208Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5856278Z     
2025-02-25T14:20:45.5856379Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5856471Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5856570Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5856700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5856808Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5856905Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5857030Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5857113Z             else:
2025-02-25T14:20:45.5857210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5857328Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5857332Z 
2025-02-25T14:20:45.5857462Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5857630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5857889Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5858026Z     ???
2025-02-25T14:20:45.5858218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5858238Z 
2025-02-25T14:20:45.5858358Z >   ???
2025-02-25T14:20:45.5858713Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5858832Z E   
2025-02-25T14:20:45.5858975Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5859091Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5859168Z E          ...
2025-02-25T14:20:45.5859262Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5859400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5859517Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5859602Z E          ...
2025-02-25T14:20:45.5859689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5859824Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5859937Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5859941Z 
2025-02-25T14:20:45.5860035Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5860250Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-25T14:20:45.5860266Z 
2025-02-25T14:20:45.5860396Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5860711Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5860840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5860985Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5861116Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5861213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5861300Z err_msg = None
2025-02-25T14:20:45.5861304Z 
2025-02-25T14:20:45.5861419Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5861511Z         if err_msg is None:
2025-02-25T14:20:45.5861608Z             if left.shape != right.shape:
2025-02-25T14:20:45.5861709Z                 raise_assert_detail(
2025-02-25T14:20:45.5861856Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5862075Z                 )
2025-02-25T14:20:45.5862144Z     
2025-02-25T14:20:45.5862229Z             diff = 0
2025-02-25T14:20:45.5862356Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5862445Z                 # count up differences
2025-02-25T14:20:45.5862637Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5862720Z                     diff += 1
2025-02-25T14:20:45.5862799Z     
2025-02-25T14:20:45.5862889Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5863041Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5863215Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5863347Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5863428Z E           
2025-02-25T14:20:45.5863552Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5863832Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5864099Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5864106Z 
2025-02-25T14:20:45.5864427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5864552Z 
2025-02-25T14:20:45.5864724Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5864738Z 
2025-02-25T14:20:45.5864963Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922c00>
2025-02-25T14:20:45.5865143Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5865223Z attr = 'lines'
2025-02-25T14:20:45.5865227Z 
2025-02-25T14:20:45.5865379Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5865497Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5865593Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5865674Z         try:
2025-02-25T14:20:45.5865822Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5865918Z         except KeyError:
2025-02-25T14:20:45.5866056Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5866136Z     
2025-02-25T14:20:45.5866226Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5866345Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5866443Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5866596Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5866688Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5866795Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5866905Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5866994Z             else:
2025-02-25T14:20:45.5867087Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5867209Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5867214Z 
2025-02-25T14:20:45.5867397Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5867515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5867675Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5867756Z     ???
2025-02-25T14:20:45.5867877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5867985Z 
2025-02-25T14:20:45.5868055Z >   ???
2025-02-25T14:20:45.5868192Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5868266Z E   
2025-02-25T14:20:45.5868408Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5868529Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5868601Z E          ...
2025-02-25T14:20:45.5868701Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5868835Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5868965Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5869041Z E          ...
2025-02-25T14:20:45.5869140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5869268Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5869389Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5869393Z 
2025-02-25T14:20:45.5869483Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5869729Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-25T14:20:45.5869735Z 
2025-02-25T14:20:45.5870275Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c923170>
2025-02-25T14:20:45.5870445Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5870649Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5870655Z 
2025-02-25T14:20:45.5870790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5870912Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5870996Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5871075Z         try:
2025-02-25T14:20:45.5871221Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5871306Z         except KeyError:
2025-02-25T14:20:45.5871602Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5871672Z     
2025-02-25T14:20:45.5871776Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5871872Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5871970Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5872102Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5872196Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5872284Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5872407Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5872412Z 
2025-02-25T14:20:45.5872575Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5872698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5872702Z 
2025-02-25T14:20:45.5872854Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5872950Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5873068Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5873153Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5873297Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5873376Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5873489Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5873585Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5873663Z err_msg = None
2025-02-25T14:20:45.5873667Z 
2025-02-25T14:20:45.5873787Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5873867Z         if err_msg is None:
2025-02-25T14:20:45.5873976Z             if left.shape != right.shape:
2025-02-25T14:20:45.5874063Z                 raise_assert_detail(
2025-02-25T14:20:45.5874225Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5874305Z                 )
2025-02-25T14:20:45.5874389Z     
2025-02-25T14:20:45.5874603Z             diff = 0
2025-02-25T14:20:45.5874730Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5874834Z                 # count up differences
2025-02-25T14:20:45.5875013Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5875108Z                     diff += 1
2025-02-25T14:20:45.5875179Z     
2025-02-25T14:20:45.5875277Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5875414Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5875598Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5875716Z E           AssertionError: Series are different
2025-02-25T14:20:45.5875803Z E           
2025-02-25T14:20:45.5875911Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5876316Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5876662Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5877206Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5877399Z 
2025-02-25T14:20:45.5877938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5878356Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-25T14:20:45.5878364Z 
2025-02-25T14:20:45.5878749Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9230b0>
2025-02-25T14:20:45.5879056Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5879222Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5879229Z 
2025-02-25T14:20:45.5879460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5879671Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5879825Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5879964Z         try:
2025-02-25T14:20:45.5880206Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5880376Z         except KeyError:
2025-02-25T14:20:45.5880657Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5880751Z     
2025-02-25T14:20:45.5880841Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5880951Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5881055Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5881196Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5881305Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5881404Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5881525Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5881530Z 
2025-02-25T14:20:45.5881658Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5881788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5881792Z 
2025-02-25T14:20:45.5882065Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5882152Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5882259Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5882341Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5882490Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5882577Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5882694Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5882772Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5882858Z err_msg = None
2025-02-25T14:20:45.5882863Z 
2025-02-25T14:20:45.5882973Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5883072Z         if err_msg is None:
2025-02-25T14:20:45.5883183Z             if left.shape != right.shape:
2025-02-25T14:20:45.5883283Z                 raise_assert_detail(
2025-02-25T14:20:45.5883444Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5883522Z                 )
2025-02-25T14:20:45.5883607Z     
2025-02-25T14:20:45.5883691Z             diff = 0
2025-02-25T14:20:45.5883825Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5883913Z                 # count up differences
2025-02-25T14:20:45.5884091Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5884170Z                     diff += 1
2025-02-25T14:20:45.5884266Z     
2025-02-25T14:20:45.5884356Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5884502Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5884687Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5884929Z E           AssertionError: Series are different
2025-02-25T14:20:45.5885019Z E           
2025-02-25T14:20:45.5885126Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5885518Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5885901Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5886305Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5886312Z 
2025-02-25T14:20:45.5886628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5886837Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-25T14:20:45.5886842Z 
2025-02-25T14:20:45.5886975Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5887113Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5887308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5887457Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5887581Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5887694Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5887772Z err_msg = None
2025-02-25T14:20:45.5887791Z 
2025-02-25T14:20:45.5887900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5888001Z         if err_msg is None:
2025-02-25T14:20:45.5888102Z             if left.shape != right.shape:
2025-02-25T14:20:45.5888202Z                 raise_assert_detail(
2025-02-25T14:20:45.5888350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5888434Z                 )
2025-02-25T14:20:45.5888516Z     
2025-02-25T14:20:45.5888606Z             diff = 0
2025-02-25T14:20:45.5888719Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5888823Z                 # count up differences
2025-02-25T14:20:45.5888994Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5889083Z                     diff += 1
2025-02-25T14:20:45.5889167Z     
2025-02-25T14:20:45.5889254Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5889404Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5889582Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5889703Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5889775Z E           
2025-02-25T14:20:45.5889898Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5890164Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5890644Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5890651Z 
2025-02-25T14:20:45.5890970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5890975Z 
2025-02-25T14:20:45.5891158Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5891163Z 
2025-02-25T14:20:45.5891398Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c923fb0>
2025-02-25T14:20:45.5891614Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>, attr = 'nu'
2025-02-25T14:20:45.5891623Z 
2025-02-25T14:20:45.5891769Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5891895Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5891981Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5892085Z         try:
2025-02-25T14:20:45.5892230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5892319Z         except KeyError:
2025-02-25T14:20:45.5892461Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5892546Z     
2025-02-25T14:20:45.5892638Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5892740Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5892838Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5892973Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5893078Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5893171Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5893454Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5893459Z 
2025-02-25T14:20:45.5893590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5893715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5893867Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5893935Z     ???
2025-02-25T14:20:45.5894048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5894065Z 
2025-02-25T14:20:45.5894134Z >   ???
2025-02-25T14:20:45.5894270Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5894341Z E   
2025-02-25T14:20:45.5894481Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5894594Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5894685Z E          ...
2025-02-25T14:20:45.5894780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5894929Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5895043Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5895131Z E          ...
2025-02-25T14:20:45.5895230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5895355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5895479Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5895483Z 
2025-02-25T14:20:45.5895573Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5895858Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-25T14:20:45.5895866Z 
2025-02-25T14:20:45.5896091Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5896325Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5896682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5896934Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5897109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5897208Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5897296Z err_msg = None
2025-02-25T14:20:45.5897300Z 
2025-02-25T14:20:45.5897412Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5897509Z         if err_msg is None:
2025-02-25T14:20:45.5897619Z             if left.shape != right.shape:
2025-02-25T14:20:45.5897732Z                 raise_assert_detail(
2025-02-25T14:20:45.5897871Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5897940Z                 )
2025-02-25T14:20:45.5898031Z     
2025-02-25T14:20:45.5898106Z             diff = 0
2025-02-25T14:20:45.5898232Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5898332Z                 # count up differences
2025-02-25T14:20:45.5898512Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5898592Z                     diff += 1
2025-02-25T14:20:45.5898671Z     
2025-02-25T14:20:45.5898765Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5898912Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5899082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5899209Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5899294Z E           
2025-02-25T14:20:45.5899407Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5899682Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5900049Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5900056Z 
2025-02-25T14:20:45.5900366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5900371Z 
2025-02-25T14:20:45.5900775Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5900784Z 
2025-02-25T14:20:45.5901046Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922450>
2025-02-25T14:20:45.5901232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5901320Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5901325Z 
2025-02-25T14:20:45.5901476Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5901590Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5901693Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5901775Z         try:
2025-02-25T14:20:45.5901917Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5902013Z         except KeyError:
2025-02-25T14:20:45.5902155Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5902234Z     
2025-02-25T14:20:45.5902321Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5902425Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5902516Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5902668Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5902892Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5903005Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5903115Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5903131Z 
2025-02-25T14:20:45.5903257Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5903394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5903547Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5903629Z     ???
2025-02-25T14:20:45.5903744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5903749Z 
2025-02-25T14:20:45.5903832Z >   ???
2025-02-25T14:20:45.5903964Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5904046Z E   
2025-02-25T14:20:45.5904174Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5904315Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5904405Z E          ...
2025-02-25T14:20:45.5904501Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5904646Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5904765Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5904849Z E          ...
2025-02-25T14:20:45.5904943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5905079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5905184Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5905189Z 
2025-02-25T14:20:45.5905308Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5905510Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-25T14:20:45.5905525Z 
2025-02-25T14:20:45.5905656Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5905813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5906045Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5906192Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5906325Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5906428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5906504Z err_msg = None
2025-02-25T14:20:45.5906508Z 
2025-02-25T14:20:45.5906623Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5906713Z         if err_msg is None:
2025-02-25T14:20:45.5906807Z             if left.shape != right.shape:
2025-02-25T14:20:45.5906910Z                 raise_assert_detail(
2025-02-25T14:20:45.5907057Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5907150Z                 )
2025-02-25T14:20:45.5907223Z     
2025-02-25T14:20:45.5907319Z             diff = 0
2025-02-25T14:20:45.5907453Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5907555Z                 # count up differences
2025-02-25T14:20:45.5907732Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5907823Z                     diff += 1
2025-02-25T14:20:45.5907905Z     
2025-02-25T14:20:45.5907999Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5908148Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5908322Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5908454Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5908528Z E           
2025-02-25T14:20:45.5908659Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5908924Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5909303Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5909309Z 
2025-02-25T14:20:45.5909627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5909633Z 
2025-02-25T14:20:45.5909807Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5909812Z 
2025-02-25T14:20:45.5910049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9233e0>
2025-02-25T14:20:45.5910260Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>, attr = 'f_lu'
2025-02-25T14:20:45.5910277Z 
2025-02-25T14:20:45.5910417Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5910642Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5910730Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5910818Z         try:
2025-02-25T14:20:45.5910963Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5911056Z         except KeyError:
2025-02-25T14:20:45.5911196Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5911281Z     
2025-02-25T14:20:45.5911374Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5911488Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5911593Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5911726Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5911830Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5911922Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5912173Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5912178Z 
2025-02-25T14:20:45.5912304Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5912436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5912589Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5912672Z     ???
2025-02-25T14:20:45.5912779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5912791Z 
2025-02-25T14:20:45.5912861Z >   ???
2025-02-25T14:20:45.5912987Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5913051Z E   
2025-02-25T14:20:45.5913193Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5913308Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5913408Z E          ...
2025-02-25T14:20:45.5913503Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5913663Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5913782Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5913873Z E          ...
2025-02-25T14:20:45.5913961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5914099Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5914216Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5914220Z 
2025-02-25T14:20:45.5914313Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5914567Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-25T14:20:45.5914575Z 
2025-02-25T14:20:45.5914804Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5915212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5915397Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5915639Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5915868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5916033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5916177Z err_msg = None
2025-02-25T14:20:45.5916183Z 
2025-02-25T14:20:45.5916364Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5916516Z         if err_msg is None:
2025-02-25T14:20:45.5916678Z             if left.shape != right.shape:
2025-02-25T14:20:45.5916838Z                 raise_assert_detail(
2025-02-25T14:20:45.5917081Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5917220Z                 )
2025-02-25T14:20:45.5917348Z     
2025-02-25T14:20:45.5917489Z             diff = 0
2025-02-25T14:20:45.5917703Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5917805Z                 # count up differences
2025-02-25T14:20:45.5917990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5918077Z                     diff += 1
2025-02-25T14:20:45.5918167Z     
2025-02-25T14:20:45.5918267Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5918418Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5918590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5918720Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5918795Z E           
2025-02-25T14:20:45.5918922Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5919201Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5919591Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5919597Z 
2025-02-25T14:20:45.5919907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5919911Z 
2025-02-25T14:20:45.5920094Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5920099Z 
2025-02-25T14:20:45.5920322Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921130>
2025-02-25T14:20:45.5920608Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5920706Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.5920710Z 
2025-02-25T14:20:45.5920870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5920986Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5921093Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5921166Z         try:
2025-02-25T14:20:45.5921325Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5921420Z         except KeyError:
2025-02-25T14:20:45.5921566Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5921651Z     
2025-02-25T14:20:45.5921741Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5921851Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5921951Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5922102Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5922324Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5922433Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5922547Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5922634Z             else:
2025-02-25T14:20:45.5922728Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5922846Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5922851Z 
2025-02-25T14:20:45.5922990Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5923107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5923270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5923340Z     ???
2025-02-25T14:20:45.5923459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5923463Z 
2025-02-25T14:20:45.5923535Z >   ???
2025-02-25T14:20:45.5923681Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5923754Z E   
2025-02-25T14:20:45.5923905Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5924031Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5924104Z E          ...
2025-02-25T14:20:45.5924201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5924331Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5924454Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5924534Z E          ...
2025-02-25T14:20:45.5924630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5924759Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5924879Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5924884Z 
2025-02-25T14:20:45.5924987Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5925197Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-25T14:20:45.5925207Z 
2025-02-25T14:20:45.5925341Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5925602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5925713Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5925842Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5925977Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5926075Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5926162Z err_msg = None
2025-02-25T14:20:45.5926167Z 
2025-02-25T14:20:45.5926285Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5926368Z         if err_msg is None:
2025-02-25T14:20:45.5926474Z             if left.shape != right.shape:
2025-02-25T14:20:45.5926568Z                 raise_assert_detail(
2025-02-25T14:20:45.5926723Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5926804Z                 )
2025-02-25T14:20:45.5926886Z     
2025-02-25T14:20:45.5926961Z             diff = 0
2025-02-25T14:20:45.5927081Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5927173Z                 # count up differences
2025-02-25T14:20:45.5927353Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5927433Z                     diff += 1
2025-02-25T14:20:45.5927503Z     
2025-02-25T14:20:45.5927594Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5927729Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5927913Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5928025Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5928200Z E           
2025-02-25T14:20:45.5928315Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5928596Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5928874Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5928880Z 
2025-02-25T14:20:45.5929181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5929191Z 
2025-02-25T14:20:45.5929372Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5929379Z 
2025-02-25T14:20:45.5929602Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920e00>
2025-02-25T14:20:45.5929776Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5929869Z attr = 'beta_sobolev'
2025-02-25T14:20:45.5929874Z 
2025-02-25T14:20:45.5930011Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5930140Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5930230Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5930314Z         try:
2025-02-25T14:20:45.5930456Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5930736Z         except KeyError:
2025-02-25T14:20:45.5930969Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5931052Z     
2025-02-25T14:20:45.5931159Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5931254Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5931492Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5931626Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5931724Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5931813Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5931930Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5932005Z             else:
2025-02-25T14:20:45.5932113Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5932226Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5932231Z 
2025-02-25T14:20:45.5932366Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5932495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5932640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5932797Z     ???
2025-02-25T14:20:45.5933000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5933017Z 
2025-02-25T14:20:45.5933149Z >   ???
2025-02-25T14:20:45.5933364Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5933495Z E   
2025-02-25T14:20:45.5933718Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5933922Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5934043Z E          ...
2025-02-25T14:20:45.5934206Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5934435Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5934631Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5934772Z E          ...
2025-02-25T14:20:45.5934925Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5935160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5935524Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5935532Z 
2025-02-25T14:20:45.5935701Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5935998Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-25T14:20:45.5936004Z 
2025-02-25T14:20:45.5936150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5936284Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5936379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5936519Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5936642Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5936740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5936851Z err_msg = None
2025-02-25T14:20:45.5936855Z 
2025-02-25T14:20:45.5947377Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5947503Z         if err_msg is None:
2025-02-25T14:20:45.5947611Z             if left.shape != right.shape:
2025-02-25T14:20:45.5947702Z                 raise_assert_detail(
2025-02-25T14:20:45.5947866Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5947944Z                 )
2025-02-25T14:20:45.5948010Z     
2025-02-25T14:20:45.5948086Z             diff = 0
2025-02-25T14:20:45.5948209Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5948310Z                 # count up differences
2025-02-25T14:20:45.5948491Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5948570Z                     diff += 1
2025-02-25T14:20:45.5948634Z     
2025-02-25T14:20:45.5948727Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5948879Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5949057Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5949362Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5949440Z E           
2025-02-25T14:20:45.5949562Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5949831Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5950117Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5950133Z 
2025-02-25T14:20:45.5950470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5950476Z 
2025-02-25T14:20:45.5950783Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5950790Z 
2025-02-25T14:20:45.5951028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920f80>
2025-02-25T14:20:45.5951197Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f40fafc0>
2025-02-25T14:20:45.5951278Z attr = 'j_blues'
2025-02-25T14:20:45.5951283Z 
2025-02-25T14:20:45.5951429Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5951550Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5951639Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5951710Z         try:
2025-02-25T14:20:45.5951866Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5952130Z         except KeyError:
2025-02-25T14:20:45.5952275Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5952411Z     
2025-02-25T14:20:45.5952584Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5952742Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5952896Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5953115Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5953270Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5953428Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5953621Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5953707Z             else:
2025-02-25T14:20:45.5953807Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5953933Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5953938Z 
2025-02-25T14:20:45.5954070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5954206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5954367Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5954458Z     ???
2025-02-25T14:20:45.5954572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5954585Z 
2025-02-25T14:20:45.5954657Z >   ???
2025-02-25T14:20:45.5954803Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5954871Z E   
2025-02-25T14:20:45.5955014Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5955125Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5955215Z E          ...
2025-02-25T14:20:45.5955305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5955455Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5955567Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5955657Z E          ...
2025-02-25T14:20:45.5955758Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5956025Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5956145Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5956149Z 
2025-02-25T14:20:45.5956246Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5956524Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-25T14:20:45.5956536Z 
2025-02-25T14:20:45.5956671Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5956821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5956925Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5957079Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5957228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5957327Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5957421Z err_msg = None
2025-02-25T14:20:45.5957426Z 
2025-02-25T14:20:45.5957547Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5957641Z         if err_msg is None:
2025-02-25T14:20:45.5957747Z             if left.shape != right.shape:
2025-02-25T14:20:45.5957849Z                 raise_assert_detail(
2025-02-25T14:20:45.5957997Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5958084Z                 )
2025-02-25T14:20:45.5958168Z     
2025-02-25T14:20:45.5958244Z             diff = 0
2025-02-25T14:20:45.5958376Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5958465Z                 # count up differences
2025-02-25T14:20:45.5958648Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5958824Z                     diff += 1
2025-02-25T14:20:45.5958917Z     
2025-02-25T14:20:45.5959009Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5959166Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5959343Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5959478Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5959557Z E           
2025-02-25T14:20:45.5959688Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5959967Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5960235Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5960249Z 
2025-02-25T14:20:45.5960687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5960693Z 
2025-02-25T14:20:45.5960862Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5960866Z 
2025-02-25T14:20:45.5961101Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921d90>
2025-02-25T14:20:45.5961286Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5961363Z attr = 'lines'
2025-02-25T14:20:45.5961368Z 
2025-02-25T14:20:45.5961523Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5961645Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5961743Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5961956Z         try:
2025-02-25T14:20:45.5962100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5962192Z         except KeyError:
2025-02-25T14:20:45.5962334Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5962427Z     
2025-02-25T14:20:45.5962518Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5962624Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5962713Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5962858Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5962947Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5963051Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5963172Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5963247Z             else:
2025-02-25T14:20:45.5963360Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.5963471Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.5963480Z 
2025-02-25T14:20:45.5963621Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.5963738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5963902Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5963975Z     ???
2025-02-25T14:20:45.5964102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5964107Z 
2025-02-25T14:20:45.5964191Z >   ???
2025-02-25T14:20:45.5964324Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5964406Z E   
2025-02-25T14:20:45.5964533Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5964652Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5964726Z E          ...
2025-02-25T14:20:45.5964963Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5965099Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5965222Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5965291Z E          ...
2025-02-25T14:20:45.5965383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5965512Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5965619Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5965624Z 
2025-02-25T14:20:45.5965716Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5966014Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-25T14:20:45.5966020Z 
2025-02-25T14:20:45.5966246Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920c50>
2025-02-25T14:20:45.5966415Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5966525Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.5966530Z 
2025-02-25T14:20:45.5966665Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5966802Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5966908Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5966982Z         try:
2025-02-25T14:20:45.5967134Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5967218Z         except KeyError:
2025-02-25T14:20:45.5967366Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5967446Z     
2025-02-25T14:20:45.5967542Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5967637Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5967745Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5967874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5967974Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5968071Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5968189Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5968285Z 
2025-02-25T14:20:45.5968428Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5968541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5968547Z 
2025-02-25T14:20:45.5968693Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5968780Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5968902Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5968987Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5969134Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.5969225Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.5969331Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5969429Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.5969516Z err_msg = None
2025-02-25T14:20:45.5969521Z 
2025-02-25T14:20:45.5969654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5969738Z         if err_msg is None:
2025-02-25T14:20:45.5969845Z             if left.shape != right.shape:
2025-02-25T14:20:45.5969939Z                 raise_assert_detail(
2025-02-25T14:20:45.5970100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5970178Z                 )
2025-02-25T14:20:45.5970260Z     
2025-02-25T14:20:45.5970353Z             diff = 0
2025-02-25T14:20:45.5970471Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5970674Z                 # count up differences
2025-02-25T14:20:45.5970843Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5970928Z                     diff += 1
2025-02-25T14:20:45.5971141Z     
2025-02-25T14:20:45.5971231Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5971417Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5971744Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5971929Z E           AssertionError: Series are different
2025-02-25T14:20:45.5972066Z E           
2025-02-25T14:20:45.5972251Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.5972786Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5973141Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5973494Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5973512Z 
2025-02-25T14:20:45.5973825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5974139Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-25T14:20:45.5974152Z 
2025-02-25T14:20:45.5974378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9209b0>
2025-02-25T14:20:45.5974701Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5974806Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.5974811Z 
2025-02-25T14:20:45.5974948Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5975083Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5975173Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5975261Z         try:
2025-02-25T14:20:45.5975404Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5975493Z         except KeyError:
2025-02-25T14:20:45.5975628Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5975703Z     
2025-02-25T14:20:45.5975789Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5975885Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5975987Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5976125Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5976221Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5976314Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5976432Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5976437Z 
2025-02-25T14:20:45.5976563Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5976692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5976696Z 
2025-02-25T14:20:45.5976832Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5976922Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5977035Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5977116Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5977366Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.5977451Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.5977563Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.5977638Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.5977723Z err_msg = None
2025-02-25T14:20:45.5977727Z 
2025-02-25T14:20:45.5977839Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5977933Z         if err_msg is None:
2025-02-25T14:20:45.5978042Z             if left.shape != right.shape:
2025-02-25T14:20:45.5978133Z                 raise_assert_detail(
2025-02-25T14:20:45.5978288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5978360Z                 )
2025-02-25T14:20:45.5978438Z     
2025-02-25T14:20:45.5978510Z             diff = 0
2025-02-25T14:20:45.5978630Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5978726Z                 # count up differences
2025-02-25T14:20:45.5978906Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5978986Z                     diff += 1
2025-02-25T14:20:45.5979073Z     
2025-02-25T14:20:45.5979162Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5979311Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5979495Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5979601Z E           AssertionError: Series are different
2025-02-25T14:20:45.5979680Z E           
2025-02-25T14:20:45.5979785Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.5980166Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.5980874Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5981276Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.5981287Z 
2025-02-25T14:20:45.5981617Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5981870Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-25T14:20:45.5981875Z 
2025-02-25T14:20:45.5981999Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5982131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5982228Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5982362Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5982489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5982590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5982835Z err_msg = None
2025-02-25T14:20:45.5982839Z 
2025-02-25T14:20:45.5982960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5983050Z         if err_msg is None:
2025-02-25T14:20:45.5983147Z             if left.shape != right.shape:
2025-02-25T14:20:45.5983240Z                 raise_assert_detail(
2025-02-25T14:20:45.5983384Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5983459Z                 )
2025-02-25T14:20:45.5983525Z     
2025-02-25T14:20:45.5983602Z             diff = 0
2025-02-25T14:20:45.5983711Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5983800Z                 # count up differences
2025-02-25T14:20:45.5983970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5984048Z                     diff += 1
2025-02-25T14:20:45.5984120Z     
2025-02-25T14:20:45.5984211Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5984348Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5984521Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5984648Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5984722Z E           
2025-02-25T14:20:45.5984846Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5985116Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5985392Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5985525Z 
2025-02-25T14:20:45.5985847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5985852Z 
2025-02-25T14:20:45.5986024Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5986029Z 
2025-02-25T14:20:45.5986266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9210d0>
2025-02-25T14:20:45.5986477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>, attr = 'nu'
2025-02-25T14:20:45.5986483Z 
2025-02-25T14:20:45.5986619Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5986743Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5986827Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5986909Z         try:
2025-02-25T14:20:45.5987063Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5987151Z         except KeyError:
2025-02-25T14:20:45.5987297Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5987375Z     
2025-02-25T14:20:45.5987463Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5987570Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5987667Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5987796Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5987893Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5987989Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5988110Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5988114Z 
2025-02-25T14:20:45.5988244Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5988364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5988613Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5988698Z     ???
2025-02-25T14:20:45.5988824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5988829Z 
2025-02-25T14:20:45.5988898Z >   ???
2025-02-25T14:20:45.5989035Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5989107Z E   
2025-02-25T14:20:45.5989238Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5989365Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5989438Z E          ...
2025-02-25T14:20:45.5989539Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5989669Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5989796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5989884Z E          ...
2025-02-25T14:20:45.5989969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5990111Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5990218Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5990226Z 
2025-02-25T14:20:45.5990333Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.5990886Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-25T14:20:45.5990897Z 
2025-02-25T14:20:45.5991129Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5991346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5991521Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5991763Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.5991955Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.5992072Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.5992151Z err_msg = None
2025-02-25T14:20:45.5992300Z 
2025-02-25T14:20:45.5992426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.5992515Z         if err_msg is None:
2025-02-25T14:20:45.5992621Z             if left.shape != right.shape:
2025-02-25T14:20:45.5992708Z                 raise_assert_detail(
2025-02-25T14:20:45.5992867Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.5992953Z                 )
2025-02-25T14:20:45.5993022Z     
2025-02-25T14:20:45.5993109Z             diff = 0
2025-02-25T14:20:45.5993223Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.5993327Z                 # count up differences
2025-02-25T14:20:45.5993501Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.5993588Z                     diff += 1
2025-02-25T14:20:45.5993662Z     
2025-02-25T14:20:45.5993774Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.5993912Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.5994096Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.5994219Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.5994293Z E           
2025-02-25T14:20:45.5994410Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.5994668Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5994938Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.5995070Z 
2025-02-25T14:20:45.5995394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.5995399Z 
2025-02-25T14:20:45.5995575Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.5995581Z 
2025-02-25T14:20:45.5995813Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c922fc0>
2025-02-25T14:20:45.5995985Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.5996083Z attr = 'wavelength_cm'
2025-02-25T14:20:45.5996088Z 
2025-02-25T14:20:45.5996225Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.5996352Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.5996448Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.5996527Z         try:
2025-02-25T14:20:45.5996681Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.5996779Z         except KeyError:
2025-02-25T14:20:45.5996926Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.5996997Z     
2025-02-25T14:20:45.5997100Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.5997192Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.5997284Z             if attr == "selected_atoms":
2025-02-25T14:20:45.5997411Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.5997507Z             elif actual.ndim == 1:
2025-02-25T14:20:45.5997600Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.5997714Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.5997718Z 
2025-02-25T14:20:45.5997846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.5997957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5998114Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.5998294Z     ???
2025-02-25T14:20:45.5998412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.5998417Z 
2025-02-25T14:20:45.5998484Z >   ???
2025-02-25T14:20:45.5998618Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.5998688Z E   
2025-02-25T14:20:45.5998822Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.5998937Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5999006Z E          ...
2025-02-25T14:20:45.5999102Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5999230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5999352Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.5999427Z E          ...
2025-02-25T14:20:45.5999527Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.5999657Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.5999784Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.5999789Z 
2025-02-25T14:20:45.5999880Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6000131Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-25T14:20:45.6000137Z 
2025-02-25T14:20:45.6000282Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6000409Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6000683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6000837Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6000976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6001209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6001299Z err_msg = None
2025-02-25T14:20:45.6001311Z 
2025-02-25T14:20:45.6001436Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6001520Z         if err_msg is None:
2025-02-25T14:20:45.6001630Z             if left.shape != right.shape:
2025-02-25T14:20:45.6001719Z                 raise_assert_detail(
2025-02-25T14:20:45.6001875Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6001948Z                 )
2025-02-25T14:20:45.6002031Z     
2025-02-25T14:20:45.6002106Z             diff = 0
2025-02-25T14:20:45.6002233Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6002326Z                 # count up differences
2025-02-25T14:20:45.6002508Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6002603Z                     diff += 1
2025-02-25T14:20:45.6002680Z     
2025-02-25T14:20:45.6002778Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6002919Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6003102Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6003214Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6003301Z E           
2025-02-25T14:20:45.6003415Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6003683Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6003950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6004078Z 
2025-02-25T14:20:45.6004381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6004385Z 
2025-02-25T14:20:45.6004559Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6004563Z 
2025-02-25T14:20:45.6004782Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c921e80>
2025-02-25T14:20:45.6004990Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>, attr = 'f_lu'
2025-02-25T14:20:45.6004995Z 
2025-02-25T14:20:45.6005137Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6005251Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6005341Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6005414Z         try:
2025-02-25T14:20:45.6005556Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6005642Z         except KeyError:
2025-02-25T14:20:45.6005779Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6005846Z     
2025-02-25T14:20:45.6005937Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6006034Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6006121Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6006256Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6006342Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6006437Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6006545Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6006550Z 
2025-02-25T14:20:45.6006679Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6006790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6007033Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6007109Z     ???
2025-02-25T14:20:45.6007226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6007230Z 
2025-02-25T14:20:45.6007311Z >   ???
2025-02-25T14:20:45.6007437Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6007515Z E   
2025-02-25T14:20:45.6007644Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6007765Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6007841Z E          ...
2025-02-25T14:20:45.6007940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6008069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6008245Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6008369Z E          ...
2025-02-25T14:20:45.6008531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6008745Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6008918Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6008925Z 
2025-02-25T14:20:45.6009073Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6009525Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-25T14:20:45.6009535Z 
2025-02-25T14:20:45.6009759Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6009970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6010143Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6010347Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6010680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6010864Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6011001Z err_msg = None
2025-02-25T14:20:45.6011195Z 
2025-02-25T14:20:45.6011407Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6011492Z         if err_msg is None:
2025-02-25T14:20:45.6011639Z             if left.shape != right.shape:
2025-02-25T14:20:45.6011790Z                 raise_assert_detail(
2025-02-25T14:20:45.6012039Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6012181Z                 )
2025-02-25T14:20:45.6012300Z     
2025-02-25T14:20:45.6012433Z             diff = 0
2025-02-25T14:20:45.6012603Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6012752Z                 # count up differences
2025-02-25T14:20:45.6013053Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6013203Z                     diff += 1
2025-02-25T14:20:45.6013321Z     
2025-02-25T14:20:45.6013477Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6013710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6014021Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6014207Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6014333Z E           
2025-02-25T14:20:45.6014528Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6014998Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6015484Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6015693Z 
2025-02-25T14:20:45.6016055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6016068Z 
2025-02-25T14:20:45.6016237Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6016241Z 
2025-02-25T14:20:45.6016471Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9229c0>
2025-02-25T14:20:45.6016641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6016730Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6016734Z 
2025-02-25T14:20:45.6016871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6016994Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6017092Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6017162Z         try:
2025-02-25T14:20:45.6017311Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6017398Z         except KeyError:
2025-02-25T14:20:45.6017542Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6017609Z     
2025-02-25T14:20:45.6017705Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6017798Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6017893Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6018026Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6018117Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6018207Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6018325Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6018402Z             else:
2025-02-25T14:20:45.6018498Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6018614Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6018618Z 
2025-02-25T14:20:45.6018744Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6018961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6019111Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6019195Z     ???
2025-02-25T14:20:45.6019307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6019311Z 
2025-02-25T14:20:45.6019390Z >   ???
2025-02-25T14:20:45.6019530Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6019601Z E   
2025-02-25T14:20:45.6019742Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6019854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6019936Z E          ...
2025-02-25T14:20:45.6020027Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6020176Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6020289Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6020380Z E          ...
2025-02-25T14:20:45.6020466Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6020825Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6020940Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6020954Z 
2025-02-25T14:20:45.6021051Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6021332Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-25T14:20:45.6021337Z 
2025-02-25T14:20:45.6021472Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6021618Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6021720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6022002Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6022133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6022230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6022312Z err_msg = None
2025-02-25T14:20:45.6022316Z 
2025-02-25T14:20:45.6022426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6022512Z         if err_msg is None:
2025-02-25T14:20:45.6022607Z             if left.shape != right.shape:
2025-02-25T14:20:45.6022697Z                 raise_assert_detail(
2025-02-25T14:20:45.6022841Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6022916Z                 )
2025-02-25T14:20:45.6022985Z     
2025-02-25T14:20:45.6023064Z             diff = 0
2025-02-25T14:20:45.6023176Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6023278Z                 # count up differences
2025-02-25T14:20:45.6023455Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6023539Z                     diff += 1
2025-02-25T14:20:45.6023613Z     
2025-02-25T14:20:45.6023700Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6023845Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6024014Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6024135Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6024205Z E           
2025-02-25T14:20:45.6024320Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6024582Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6025003Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6025009Z 
2025-02-25T14:20:45.6025322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6025326Z 
2025-02-25T14:20:45.6025494Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6025504Z 
2025-02-25T14:20:45.6025736Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c9228d0>
2025-02-25T14:20:45.6025906Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6025991Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6025996Z 
2025-02-25T14:20:45.6026135Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6026255Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6026344Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6026416Z         try:
2025-02-25T14:20:45.6026565Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6026643Z         except KeyError:
2025-02-25T14:20:45.6026790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6026864Z     
2025-02-25T14:20:45.6026949Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6027044Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6027133Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6027269Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6027358Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6027451Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6027647Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6027731Z             else:
2025-02-25T14:20:45.6027824Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6027935Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6027940Z 
2025-02-25T14:20:45.6028075Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6028264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6028507Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6028628Z     ???
2025-02-25T14:20:45.6028818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6028825Z 
2025-02-25T14:20:45.6028935Z >   ???
2025-02-25T14:20:45.6029153Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6029265Z E   
2025-02-25T14:20:45.6029487Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6029618Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6029697Z E          ...
2025-02-25T14:20:45.6029788Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6029916Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6030036Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6030104Z E          ...
2025-02-25T14:20:45.6030198Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6030323Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6030431Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6030435Z 
2025-02-25T14:20:45.6030692Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6030962Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-25T14:20:45.6030968Z 
2025-02-25T14:20:45.6031101Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6031232Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6031610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6031750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6031880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6031974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6032054Z err_msg = None
2025-02-25T14:20:45.6032059Z 
2025-02-25T14:20:45.6032173Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6032253Z         if err_msg is None:
2025-02-25T14:20:45.6032356Z             if left.shape != right.shape:
2025-02-25T14:20:45.6032438Z                 raise_assert_detail(
2025-02-25T14:20:45.6032587Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6032662Z                 )
2025-02-25T14:20:45.6032734Z     
2025-02-25T14:20:45.6032817Z             diff = 0
2025-02-25T14:20:45.6032931Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6033018Z                 # count up differences
2025-02-25T14:20:45.6033199Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6033275Z                     diff += 1
2025-02-25T14:20:45.6033350Z     
2025-02-25T14:20:45.6033444Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6033583Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6033759Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6033867Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6033942Z E           
2025-02-25T14:20:45.6034049Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6034441Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6034712Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6034719Z 
2025-02-25T14:20:45.6035022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6035027Z 
2025-02-25T14:20:45.6035198Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6035207Z 
2025-02-25T14:20:45.6035438Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c920950>
2025-02-25T14:20:45.6035620Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a19fc2a50>
2025-02-25T14:20:45.6035699Z attr = 'j_blues'
2025-02-25T14:20:45.6035704Z 
2025-02-25T14:20:45.6035844Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6035967Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6036053Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6036132Z         try:
2025-02-25T14:20:45.6036274Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6036360Z         except KeyError:
2025-02-25T14:20:45.6036497Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6036568Z     
2025-02-25T14:20:45.6036653Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6036753Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6036850Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6036988Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6037172Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6037261Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6037375Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6037445Z             else:
2025-02-25T14:20:45.6037546Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6037652Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6037657Z 
2025-02-25T14:20:45.6037785Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6037897Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6038054Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6038134Z     ???
2025-02-25T14:20:45.6038240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6038249Z 
2025-02-25T14:20:45.6038327Z >   ???
2025-02-25T14:20:45.6038452Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6038541Z E   
2025-02-25T14:20:45.6038671Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6038793Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6038867Z E          ...
2025-02-25T14:20:45.6038966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6039098Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6039218Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6039296Z E          ...
2025-02-25T14:20:45.6039379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6039505Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6039607Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6039612Z 
2025-02-25T14:20:45.6039704Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6040005Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-25T14:20:45.6040015Z 
2025-02-25T14:20:45.6040153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6040289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6040388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6040687Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6040816Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6040924Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6041002Z err_msg = None
2025-02-25T14:20:45.6041006Z 
2025-02-25T14:20:45.6041126Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6041211Z         if err_msg is None:
2025-02-25T14:20:45.6041322Z             if left.shape != right.shape:
2025-02-25T14:20:45.6041409Z                 raise_assert_detail(
2025-02-25T14:20:45.6041556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6041637Z                 )
2025-02-25T14:20:45.6041706Z     
2025-02-25T14:20:45.6041785Z             diff = 0
2025-02-25T14:20:45.6041897Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6041988Z                 # count up differences
2025-02-25T14:20:45.6042159Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6042243Z                     diff += 1
2025-02-25T14:20:45.6042314Z     
2025-02-25T14:20:45.6042408Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6042542Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6042716Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6042840Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6042908Z E           
2025-02-25T14:20:45.6043151Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6043408Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6043678Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6043684Z 
2025-02-25T14:20:45.6043987Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6043996Z 
2025-02-25T14:20:45.6044174Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6044179Z 
2025-02-25T14:20:45.6044405Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7020>
2025-02-25T14:20:45.6044570Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6044648Z attr = 'lines'
2025-02-25T14:20:45.6044652Z 
2025-02-25T14:20:45.6044786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6044904Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6044990Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6045061Z         try:
2025-02-25T14:20:45.6045205Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6045285Z         except KeyError:
2025-02-25T14:20:45.6045430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6045637Z     
2025-02-25T14:20:45.6045729Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6045828Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6045921Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6046055Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6046148Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6046245Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6046352Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6046433Z             else:
2025-02-25T14:20:45.6046526Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6046636Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6046640Z 
2025-02-25T14:20:45.6046763Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6046880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6047026Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6047100Z     ???
2025-02-25T14:20:45.6047209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6047220Z 
2025-02-25T14:20:45.6047305Z >   ???
2025-02-25T14:20:45.6047541Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6047662Z E   
2025-02-25T14:20:45.6047884Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6048066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6048195Z E          ...
2025-02-25T14:20:45.6048343Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6048567Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6048756Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6048880Z E          ...
2025-02-25T14:20:45.6049022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6049250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6049428Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6049561Z 
2025-02-25T14:20:45.6049715Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6050164Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-25T14:20:45.6050172Z 
2025-02-25T14:20:45.6050664Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e5c40>
2025-02-25T14:20:45.6050851Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6050941Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6050945Z 
2025-02-25T14:20:45.6051085Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6051203Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6051286Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6051362Z         try:
2025-02-25T14:20:45.6051505Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6051595Z         except KeyError:
2025-02-25T14:20:45.6051730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6051810Z     
2025-02-25T14:20:45.6051895Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6051990Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6052105Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6052243Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6052334Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6052421Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6052533Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6052537Z 
2025-02-25T14:20:45.6052661Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6052779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6052784Z 
2025-02-25T14:20:45.6053054Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6053148Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6053266Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6053360Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6053510Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6053595Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6053712Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6053793Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6053879Z err_msg = None
2025-02-25T14:20:45.6053883Z 
2025-02-25T14:20:45.6053994Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6054083Z         if err_msg is None:
2025-02-25T14:20:45.6054176Z             if left.shape != right.shape:
2025-02-25T14:20:45.6054267Z                 raise_assert_detail(
2025-02-25T14:20:45.6054421Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6054509Z                 )
2025-02-25T14:20:45.6054590Z     
2025-02-25T14:20:45.6054666Z             diff = 0
2025-02-25T14:20:45.6054786Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6054872Z                 # count up differences
2025-02-25T14:20:45.6055050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6055130Z                     diff += 1
2025-02-25T14:20:45.6055206Z     
2025-02-25T14:20:45.6055291Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6055440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6055613Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6055721Z E           AssertionError: Series are different
2025-02-25T14:20:45.6055802Z E           
2025-02-25T14:20:45.6055901Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6056287Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6056757Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6057098Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6057117Z 
2025-02-25T14:20:45.6057431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6057683Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-25T14:20:45.6057688Z 
2025-02-25T14:20:45.6057917Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e5f10>
2025-02-25T14:20:45.6058089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6058182Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6058187Z 
2025-02-25T14:20:45.6058328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6058525Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6058616Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6058696Z         try:
2025-02-25T14:20:45.6058837Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6058914Z         except KeyError:
2025-02-25T14:20:45.6059055Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6059119Z     
2025-02-25T14:20:45.6059212Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6059312Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6059399Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6059540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6059625Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6059721Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6059825Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6059837Z 
2025-02-25T14:20:45.6059965Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6060076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6060088Z 
2025-02-25T14:20:45.6060224Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6060311Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6060414Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6060497Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6060829Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6060922Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6061022Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6061107Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6061181Z err_msg = None
2025-02-25T14:20:45.6061191Z 
2025-02-25T14:20:45.6061307Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6061395Z         if err_msg is None:
2025-02-25T14:20:45.6061613Z             if left.shape != right.shape:
2025-02-25T14:20:45.6061703Z                 raise_assert_detail(
2025-02-25T14:20:45.6061844Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6061918Z                 )
2025-02-25T14:20:45.6061982Z     
2025-02-25T14:20:45.6062059Z             diff = 0
2025-02-25T14:20:45.6062168Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6062257Z                 # count up differences
2025-02-25T14:20:45.6062421Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6062505Z                     diff += 1
2025-02-25T14:20:45.6062572Z     
2025-02-25T14:20:45.6062662Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6062801Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6062973Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6063089Z E           AssertionError: Series are different
2025-02-25T14:20:45.6063158Z E           
2025-02-25T14:20:45.6063263Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6063634Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6064013Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6064520Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6064526Z 
2025-02-25T14:20:45.6064829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6065040Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-25T14:20:45.6065045Z 
2025-02-25T14:20:45.6065173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6065304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6065414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6065545Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6065671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6065764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6065843Z err_msg = None
2025-02-25T14:20:45.6065847Z 
2025-02-25T14:20:45.6065959Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6066038Z         if err_msg is None:
2025-02-25T14:20:45.6066171Z             if left.shape != right.shape:
2025-02-25T14:20:45.6066317Z                 raise_assert_detail(
2025-02-25T14:20:45.6066565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6066691Z                 )
2025-02-25T14:20:45.6066939Z     
2025-02-25T14:20:45.6067064Z             diff = 0
2025-02-25T14:20:45.6067252Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6067396Z                 # count up differences
2025-02-25T14:20:45.6067688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6067821Z                     diff += 1
2025-02-25T14:20:45.6067937Z     
2025-02-25T14:20:45.6068091Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6068311Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6068611Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6068797Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6068922Z E           
2025-02-25T14:20:45.6069112Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6069494Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6069775Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6069781Z 
2025-02-25T14:20:45.6070082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6070087Z 
2025-02-25T14:20:45.6070258Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6070371Z 
2025-02-25T14:20:45.6070792Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6690>
2025-02-25T14:20:45.6071003Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>, attr = 'nu'
2025-02-25T14:20:45.6071008Z 
2025-02-25T14:20:45.6071148Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6071260Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6071346Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6071416Z         try:
2025-02-25T14:20:45.6071558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6071639Z         except KeyError:
2025-02-25T14:20:45.6071781Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6071854Z     
2025-02-25T14:20:45.6071940Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6072039Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6072128Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6072265Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6072354Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6072448Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6072554Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6072559Z 
2025-02-25T14:20:45.6072686Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6072798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6072946Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6073025Z     ???
2025-02-25T14:20:45.6073131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6073136Z 
2025-02-25T14:20:45.6073212Z >   ???
2025-02-25T14:20:45.6073334Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6073405Z E   
2025-02-25T14:20:45.6073528Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6073650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6073854Z E          ...
2025-02-25T14:20:45.6073946Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6074073Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6074188Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6074262Z E          ...
2025-02-25T14:20:45.6074344Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6074471Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6074573Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6074577Z 
2025-02-25T14:20:45.6074671Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6074892Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-25T14:20:45.6074896Z 
2025-02-25T14:20:45.6075024Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6075157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6075267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6075401Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6075523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6075619Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6075694Z err_msg = None
2025-02-25T14:20:45.6075699Z 
2025-02-25T14:20:45.6075815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6075896Z         if err_msg is None:
2025-02-25T14:20:45.6075997Z             if left.shape != right.shape:
2025-02-25T14:20:45.6076079Z                 raise_assert_detail(
2025-02-25T14:20:45.6076224Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6076423Z                 )
2025-02-25T14:20:45.6076493Z     
2025-02-25T14:20:45.6076572Z             diff = 0
2025-02-25T14:20:45.6076683Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6076776Z                 # count up differences
2025-02-25T14:20:45.6076942Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6077024Z                     diff += 1
2025-02-25T14:20:45.6077090Z     
2025-02-25T14:20:45.6077182Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6077322Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6077493Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6077612Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6077684Z E           
2025-02-25T14:20:45.6077805Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6078069Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6078341Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6078347Z 
2025-02-25T14:20:45.6078654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6078659Z 
2025-02-25T14:20:45.6078829Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6078838Z 
2025-02-25T14:20:45.6079066Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7aa0>
2025-02-25T14:20:45.6079319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6079411Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6079416Z 
2025-02-25T14:20:45.6079553Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6079677Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6079770Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6079847Z         try:
2025-02-25T14:20:45.6080003Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6080086Z         except KeyError:
2025-02-25T14:20:45.6080238Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6080307Z     
2025-02-25T14:20:45.6080403Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6080499Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6080797Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6080936Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6081040Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6081132Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6081252Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6081257Z 
2025-02-25T14:20:45.6081390Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6081503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6081662Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6081733Z     ???
2025-02-25T14:20:45.6081858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6081863Z 
2025-02-25T14:20:45.6081931Z >   ???
2025-02-25T14:20:45.6082069Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6082138Z E   
2025-02-25T14:20:45.6082409Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6082535Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6082617Z E          ...
2025-02-25T14:20:45.6082717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6082848Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6082973Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6083047Z E          ...
2025-02-25T14:20:45.6083143Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6083269Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6083386Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6083390Z 
2025-02-25T14:20:45.6083486Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6083705Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-25T14:20:45.6083709Z 
2025-02-25T14:20:45.6083854Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6083995Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6084174Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6084416Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6084650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6084810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6084952Z err_msg = None
2025-02-25T14:20:45.6084959Z 
2025-02-25T14:20:45.6085147Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6085280Z         if err_msg is None:
2025-02-25T14:20:45.6085384Z             if left.shape != right.shape:
2025-02-25T14:20:45.6085472Z                 raise_assert_detail(
2025-02-25T14:20:45.6085619Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6085698Z                 )
2025-02-25T14:20:45.6085907Z     
2025-02-25T14:20:45.6085982Z             diff = 0
2025-02-25T14:20:45.6086098Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6086184Z                 # count up differences
2025-02-25T14:20:45.6086361Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6086445Z                     diff += 1
2025-02-25T14:20:45.6086514Z     
2025-02-25T14:20:45.6086609Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6086746Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6086922Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6087035Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6087121Z E           
2025-02-25T14:20:45.6087234Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6087513Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6087799Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6087806Z 
2025-02-25T14:20:45.6088113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6088118Z 
2025-02-25T14:20:45.6088306Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6088396Z 
2025-02-25T14:20:45.6088625Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7ad0>
2025-02-25T14:20:45.6088853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>, attr = 'f_lu'
2025-02-25T14:20:45.6088858Z 
2025-02-25T14:20:45.6089009Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6089134Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6089228Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6089303Z         try:
2025-02-25T14:20:45.6089449Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6089540Z         except KeyError:
2025-02-25T14:20:45.6089693Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6089762Z     
2025-02-25T14:20:45.6089861Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6089969Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6090068Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6090217Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6090311Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6090414Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6090642Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6090646Z 
2025-02-25T14:20:45.6090790Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6090902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6091059Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6091127Z     ???
2025-02-25T14:20:45.6091247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6091253Z 
2025-02-25T14:20:45.6091331Z >   ???
2025-02-25T14:20:45.6091459Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6091538Z E   
2025-02-25T14:20:45.6091672Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6091790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6092035Z E          ...
2025-02-25T14:20:45.6092134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6092266Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6092394Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6092462Z E          ...
2025-02-25T14:20:45.6092548Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6092678Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6092785Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6092789Z 
2025-02-25T14:20:45.6092889Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6093105Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-25T14:20:45.6093110Z 
2025-02-25T14:20:45.6093240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6093373Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6093479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6093618Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6093740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6093837Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6093913Z err_msg = None
2025-02-25T14:20:45.6093918Z 
2025-02-25T14:20:45.6094031Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6094111Z         if err_msg is None:
2025-02-25T14:20:45.6094211Z             if left.shape != right.shape:
2025-02-25T14:20:45.6094295Z                 raise_assert_detail(
2025-02-25T14:20:45.6094447Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6094644Z                 )
2025-02-25T14:20:45.6094720Z     
2025-02-25T14:20:45.6094804Z             diff = 0
2025-02-25T14:20:45.6094914Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6095007Z                 # count up differences
2025-02-25T14:20:45.6095176Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6095265Z                     diff += 1
2025-02-25T14:20:45.6095332Z     
2025-02-25T14:20:45.6095430Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6095565Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6095740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6095850Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6095929Z E           
2025-02-25T14:20:45.6096045Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6096309Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6096575Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6096581Z 
2025-02-25T14:20:45.6096885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6096897Z 
2025-02-25T14:20:45.6097061Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6097070Z 
2025-02-25T14:20:45.6097301Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e7c20>
2025-02-25T14:20:45.6097567Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6097657Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6097662Z 
2025-02-25T14:20:45.6097800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6097925Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6098011Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6098098Z         try:
2025-02-25T14:20:45.6098248Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6098333Z         except KeyError:
2025-02-25T14:20:45.6098483Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6098554Z     
2025-02-25T14:20:45.6098653Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6098750Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6098852Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6098982Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6099087Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6099177Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6099303Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6099384Z             else:
2025-02-25T14:20:45.6099481Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6099596Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6099601Z 
2025-02-25T14:20:45.6099729Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6099856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6100000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6100077Z     ???
2025-02-25T14:20:45.6100186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6100281Z 
2025-02-25T14:20:45.6100356Z >   ???
2025-02-25T14:20:45.6100489Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6100774Z E   
2025-02-25T14:20:45.6100913Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6101022Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6101102Z E          ...
2025-02-25T14:20:45.6101186Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6101322Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6101435Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6101521Z E          ...
2025-02-25T14:20:45.6101606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6101746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6101852Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6101865Z 
2025-02-25T14:20:45.6101963Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6102196Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-25T14:20:45.6102208Z 
2025-02-25T14:20:45.6102336Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6102472Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6102575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6102827Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6103048Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6103217Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6103351Z err_msg = None
2025-02-25T14:20:45.6103358Z 
2025-02-25T14:20:45.6103535Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6103691Z         if err_msg is None:
2025-02-25T14:20:45.6103851Z             if left.shape != right.shape:
2025-02-25T14:20:45.6104088Z                 raise_assert_detail(
2025-02-25T14:20:45.6104235Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6104314Z                 )
2025-02-25T14:20:45.6104385Z     
2025-02-25T14:20:45.6104462Z             diff = 0
2025-02-25T14:20:45.6104573Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6104665Z                 # count up differences
2025-02-25T14:20:45.6104844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6104924Z                     diff += 1
2025-02-25T14:20:45.6105009Z     
2025-02-25T14:20:45.6105101Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6105250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6105424Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6105553Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6105635Z E           
2025-02-25T14:20:45.6105758Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6106023Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6106291Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6106297Z 
2025-02-25T14:20:45.6106735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6106746Z 
2025-02-25T14:20:45.6106915Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6106927Z 
2025-02-25T14:20:45.6107149Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6e40>
2025-02-25T14:20:45.6107322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6107404Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6107408Z 
2025-02-25T14:20:45.6107559Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6107677Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6107773Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6107848Z         try:
2025-02-25T14:20:45.6107999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6108083Z         except KeyError:
2025-02-25T14:20:45.6108236Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6108318Z     
2025-02-25T14:20:45.6108406Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6108515Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6108605Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6108755Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6108844Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6108941Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6109048Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6109127Z             else:
2025-02-25T14:20:45.6109224Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6109337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6109341Z 
2025-02-25T14:20:45.6109471Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6109582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6109736Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6109899Z     ???
2025-02-25T14:20:45.6110016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6110021Z 
2025-02-25T14:20:45.6110090Z >   ???
2025-02-25T14:20:45.6110220Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6110295Z E   
2025-02-25T14:20:45.6110437Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6110659Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6110745Z E          ...
2025-02-25T14:20:45.6110840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6110972Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6111096Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6111170Z E          ...
2025-02-25T14:20:45.6111268Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6111396Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6111514Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6111519Z 
2025-02-25T14:20:45.6111607Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6111816Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-25T14:20:45.6111820Z 
2025-02-25T14:20:45.6111959Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6112091Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6112201Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6112332Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6112464Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6112685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6112774Z err_msg = None
2025-02-25T14:20:45.6112784Z 
2025-02-25T14:20:45.6112906Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6112989Z         if err_msg is None:
2025-02-25T14:20:45.6113101Z             if left.shape != right.shape:
2025-02-25T14:20:45.6113189Z                 raise_assert_detail(
2025-02-25T14:20:45.6113340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6113419Z                 )
2025-02-25T14:20:45.6113504Z     
2025-02-25T14:20:45.6113579Z             diff = 0
2025-02-25T14:20:45.6113711Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6113805Z                 # count up differences
2025-02-25T14:20:45.6113998Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6114081Z                     diff += 1
2025-02-25T14:20:45.6114174Z     
2025-02-25T14:20:45.6114274Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6114418Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6114612Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6114731Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6114816Z E           
2025-02-25T14:20:45.6114928Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6115200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6115467Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6115627Z 
2025-02-25T14:20:45.6115932Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6115938Z 
2025-02-25T14:20:45.6116119Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6116123Z 
2025-02-25T14:20:45.6116349Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c8e6d20>
2025-02-25T14:20:45.6116528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89dbde2a20>
2025-02-25T14:20:45.6116615Z attr = 'j_blues'
2025-02-25T14:20:45.6116620Z 
2025-02-25T14:20:45.6116760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6116889Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6116980Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6117076Z         try:
2025-02-25T14:20:45.6117219Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6117319Z         except KeyError:
2025-02-25T14:20:45.6117459Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6117541Z     
2025-02-25T14:20:45.6117629Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6117736Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6117838Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6117973Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6118070Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6118163Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6118288Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6118363Z             else:
2025-02-25T14:20:45.6118473Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6118581Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6118677Z 
2025-02-25T14:20:45.6118818Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6118937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6119103Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6119193Z     ???
2025-02-25T14:20:45.6119306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6119310Z 
2025-02-25T14:20:45.6119391Z >   ???
2025-02-25T14:20:45.6119515Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6119594Z E   
2025-02-25T14:20:45.6119724Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6119845Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6119923Z E          ...
2025-02-25T14:20:45.6120023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6120158Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6120298Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6120391Z E          ...
2025-02-25T14:20:45.6120480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6120721Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6120826Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6120830Z 
2025-02-25T14:20:45.6120935Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6121148Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-25T14:20:45.6121152Z 
2025-02-25T14:20:45.6121382Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6121603Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6121777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6122031Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6122242Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6122560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6122638Z err_msg = None
2025-02-25T14:20:45.6122643Z 
2025-02-25T14:20:45.6122761Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6122849Z         if err_msg is None:
2025-02-25T14:20:45.6122951Z             if left.shape != right.shape:
2025-02-25T14:20:45.6123041Z                 raise_assert_detail(
2025-02-25T14:20:45.6123207Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6123286Z                 )
2025-02-25T14:20:45.6123354Z     
2025-02-25T14:20:45.6123435Z             diff = 0
2025-02-25T14:20:45.6123551Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6123649Z                 # count up differences
2025-02-25T14:20:45.6123825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6123921Z                     diff += 1
2025-02-25T14:20:45.6123991Z     
2025-02-25T14:20:45.6124090Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6124230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6124416Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6124542Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6124616Z E           
2025-02-25T14:20:45.6124746Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6125011Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6125408Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6125419Z 
2025-02-25T14:20:45.6125741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6125746Z 
2025-02-25T14:20:45.6125921Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6125925Z 
2025-02-25T14:20:45.6126159Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7dd0>
2025-02-25T14:20:45.6126334Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6126420Z attr = 'lines'
2025-02-25T14:20:45.6126431Z 
2025-02-25T14:20:45.6126570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6126696Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6126791Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6180478Z         try:
2025-02-25T14:20:45.6180951Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6181085Z         except KeyError:
2025-02-25T14:20:45.6181293Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6181395Z     
2025-02-25T14:20:45.6181530Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6181701Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6181867Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6182112Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6182255Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6182411Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6182615Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6182740Z             else:
2025-02-25T14:20:45.6183149Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6183266Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6183273Z 
2025-02-25T14:20:45.6183413Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6183536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6183699Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6183774Z     ???
2025-02-25T14:20:45.6183898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6183904Z 
2025-02-25T14:20:45.6183971Z >   ???
2025-02-25T14:20:45.6184180Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6184313Z E   
2025-02-25T14:20:45.6184537Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6184730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6184859Z E          ...
2025-02-25T14:20:45.6185018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6185238Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6185364Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6185437Z E          ...
2025-02-25T14:20:45.6185535Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6185666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6185785Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6185790Z 
2025-02-25T14:20:45.6185896Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6186174Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-25T14:20:45.6186180Z 
2025-02-25T14:20:45.6186420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e4110>
2025-02-25T14:20:45.6186756Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6186858Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6186870Z 
2025-02-25T14:20:45.6187017Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6187151Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6187246Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6187324Z         try:
2025-02-25T14:20:45.6187486Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6187574Z         except KeyError:
2025-02-25T14:20:45.6187731Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6187804Z     
2025-02-25T14:20:45.6187901Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6188000Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6188104Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6188269Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6188440Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6188582Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6188791Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6188801Z 
2025-02-25T14:20:45.6189024Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6189219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6189226Z 
2025-02-25T14:20:45.6189464Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6189604Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6189779Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6189869Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6190024Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6190121Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6190240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6190442Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6190710Z err_msg = None
2025-02-25T14:20:45.6190718Z 
2025-02-25T14:20:45.6190878Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6190967Z         if err_msg is None:
2025-02-25T14:20:45.6191074Z             if left.shape != right.shape:
2025-02-25T14:20:45.6191165Z                 raise_assert_detail(
2025-02-25T14:20:45.6191330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6191408Z                 )
2025-02-25T14:20:45.6191495Z     
2025-02-25T14:20:45.6191576Z             diff = 0
2025-02-25T14:20:45.6191708Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6191815Z                 # count up differences
2025-02-25T14:20:45.6191999Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6192103Z                     diff += 1
2025-02-25T14:20:45.6192178Z     
2025-02-25T14:20:45.6192295Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6192442Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6192638Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6192750Z E           AssertionError: Series are different
2025-02-25T14:20:45.6192839Z E           
2025-02-25T14:20:45.6192948Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6193372Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6193888Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6194261Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6194275Z 
2025-02-25T14:20:45.6194609Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6194898Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-25T14:20:45.6194908Z 
2025-02-25T14:20:45.6195142Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e41d0>
2025-02-25T14:20:45.6195330Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6195423Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6195434Z 
2025-02-25T14:20:45.6195579Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6195706Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6195796Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6195884Z         try:
2025-02-25T14:20:45.6196031Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6196124Z         except KeyError:
2025-02-25T14:20:45.6196266Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6196343Z     
2025-02-25T14:20:45.6196431Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6196536Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6196624Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6196887Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6196981Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6197071Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6197192Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6197197Z 
2025-02-25T14:20:45.6197325Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6197447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6197452Z 
2025-02-25T14:20:45.6197585Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6197677Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6197795Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6197880Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6198027Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6198114Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6198223Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6198302Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6198383Z err_msg = None
2025-02-25T14:20:45.6198388Z 
2025-02-25T14:20:45.6198496Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6198584Z         if err_msg is None:
2025-02-25T14:20:45.6198681Z             if left.shape != right.shape:
2025-02-25T14:20:45.6198779Z                 raise_assert_detail(
2025-02-25T14:20:45.6198935Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6199007Z                 )
2025-02-25T14:20:45.6199089Z     
2025-02-25T14:20:45.6199165Z             diff = 0
2025-02-25T14:20:45.6199412Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6199506Z                 # count up differences
2025-02-25T14:20:45.6199694Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6199776Z                     diff += 1
2025-02-25T14:20:45.6199859Z     
2025-02-25T14:20:45.6199946Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6200092Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6200262Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6200386Z E           AssertionError: Series are different
2025-02-25T14:20:45.6200470Z E           
2025-02-25T14:20:45.6200681Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6201068Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6201460Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6201841Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6201970Z 
2025-02-25T14:20:45.6202303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6202512Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-25T14:20:45.6202525Z 
2025-02-25T14:20:45.6202653Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6202790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6202940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6203184Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6203396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6203573Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6203708Z err_msg = None
2025-02-25T14:20:45.6203722Z 
2025-02-25T14:20:45.6203903Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6204049Z         if err_msg is None:
2025-02-25T14:20:45.6204166Z             if left.shape != right.shape:
2025-02-25T14:20:45.6204265Z                 raise_assert_detail(
2025-02-25T14:20:45.6204414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6204494Z                 )
2025-02-25T14:20:45.6204563Z     
2025-02-25T14:20:45.6204644Z             diff = 0
2025-02-25T14:20:45.6204757Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6204855Z                 # count up differences
2025-02-25T14:20:45.6205026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6205113Z                     diff += 1
2025-02-25T14:20:45.6205363Z     
2025-02-25T14:20:45.6205456Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6205609Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6205779Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6205905Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6205978Z E           
2025-02-25T14:20:45.6206099Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6206363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6206634Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6206647Z 
2025-02-25T14:20:45.6206962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6206968Z 
2025-02-25T14:20:45.6207135Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6207140Z 
2025-02-25T14:20:45.6207370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5c70>
2025-02-25T14:20:45.6207572Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>, attr = 'nu'
2025-02-25T14:20:45.6207577Z 
2025-02-25T14:20:45.6207712Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6207832Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6207916Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6207998Z         try:
2025-02-25T14:20:45.6208144Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6208322Z         except KeyError:
2025-02-25T14:20:45.6208463Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6208541Z     
2025-02-25T14:20:45.6208630Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6208732Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6208826Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6208960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6209049Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6209136Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6209252Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6209256Z 
2025-02-25T14:20:45.6209383Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6209501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6209655Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6209738Z     ???
2025-02-25T14:20:45.6209848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6209860Z 
2025-02-25T14:20:45.6209926Z >   ???
2025-02-25T14:20:45.6210061Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6210131Z E   
2025-02-25T14:20:45.6210263Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6210377Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6210456Z E          ...
2025-02-25T14:20:45.6210666Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6210807Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6210918Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6210996Z E          ...
2025-02-25T14:20:45.6211208Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6211338Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6211460Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6211464Z 
2025-02-25T14:20:45.6211554Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6211795Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-25T14:20:45.6211800Z 
2025-02-25T14:20:45.6211927Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6212068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6212168Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6212315Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6212447Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6212549Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6212634Z err_msg = None
2025-02-25T14:20:45.6212641Z 
2025-02-25T14:20:45.6212754Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6212845Z         if err_msg is None:
2025-02-25T14:20:45.6212947Z             if left.shape != right.shape:
2025-02-25T14:20:45.6213042Z                 raise_assert_detail(
2025-02-25T14:20:45.6213190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6213269Z                 )
2025-02-25T14:20:45.6213337Z     
2025-02-25T14:20:45.6213417Z             diff = 0
2025-02-25T14:20:45.6213536Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6213626Z                 # count up differences
2025-02-25T14:20:45.6213805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6213883Z                     diff += 1
2025-02-25T14:20:45.6213966Z     
2025-02-25T14:20:45.6214057Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6214204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6214495Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6214618Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6214688Z E           
2025-02-25T14:20:45.6214809Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6215083Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6215344Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6215363Z 
2025-02-25T14:20:45.6215680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6215686Z 
2025-02-25T14:20:45.6215862Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6215866Z 
2025-02-25T14:20:45.6216091Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5d30>
2025-02-25T14:20:45.6216265Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6216347Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6216351Z 
2025-02-25T14:20:45.6216500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6216619Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6216798Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6216871Z         try:
2025-02-25T14:20:45.6217024Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6217125Z         except KeyError:
2025-02-25T14:20:45.6217262Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6217340Z     
2025-02-25T14:20:45.6217428Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6217528Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6217620Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6217759Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6217843Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6217938Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6218044Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6218055Z 
2025-02-25T14:20:45.6218181Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6218298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6218452Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6218528Z     ???
2025-02-25T14:20:45.6218635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6218640Z 
2025-02-25T14:20:45.6218716Z >   ???
2025-02-25T14:20:45.6218842Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6218918Z E   
2025-02-25T14:20:45.6219044Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6219160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6219240Z E          ...
2025-02-25T14:20:45.6219328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6219470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6219591Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6219675Z E          ...
2025-02-25T14:20:45.6219769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6219902Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6220103Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6220108Z 
2025-02-25T14:20:45.6220207Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6220418Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-25T14:20:45.6220432Z 
2025-02-25T14:20:45.6220665Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6220813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6220914Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6221057Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6221185Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6221297Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6221379Z err_msg = None
2025-02-25T14:20:45.6221384Z 
2025-02-25T14:20:45.6221504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6222049Z         if err_msg is None:
2025-02-25T14:20:45.6222216Z             if left.shape != right.shape:
2025-02-25T14:20:45.6222377Z                 raise_assert_detail(
2025-02-25T14:20:45.6222621Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6222753Z                 )
2025-02-25T14:20:45.6222868Z     
2025-02-25T14:20:45.6222998Z             diff = 0
2025-02-25T14:20:45.6223185Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6223356Z                 # count up differences
2025-02-25T14:20:45.6223654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6223795Z                     diff += 1
2025-02-25T14:20:45.6224124Z     
2025-02-25T14:20:45.6224274Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6224519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6224811Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6225005Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6225132Z E           
2025-02-25T14:20:45.6225327Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6225728Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6225998Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6226014Z 
2025-02-25T14:20:45.6226334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6226339Z 
2025-02-25T14:20:45.6226509Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6226513Z 
2025-02-25T14:20:45.6226743Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e5df0>
2025-02-25T14:20:45.6226961Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>, attr = 'f_lu'
2025-02-25T14:20:45.6226966Z 
2025-02-25T14:20:45.6227103Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6227223Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6227308Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6227394Z         try:
2025-02-25T14:20:45.6227535Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6227749Z         except KeyError:
2025-02-25T14:20:45.6227888Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6227961Z     
2025-02-25T14:20:45.6228050Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6228148Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6228239Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6228369Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6228464Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6228553Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6228667Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6228672Z 
2025-02-25T14:20:45.6228799Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6228921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6229081Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6229167Z     ???
2025-02-25T14:20:45.6229277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6229287Z 
2025-02-25T14:20:45.6229354Z >   ???
2025-02-25T14:20:45.6229482Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6229549Z E   
2025-02-25T14:20:45.6229680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6229790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6229870Z E          ...
2025-02-25T14:20:45.6229957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6230092Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6230204Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6230280Z E          ...
2025-02-25T14:20:45.6230463Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6230909Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6231032Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6231037Z 
2025-02-25T14:20:45.6231127Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6231350Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-25T14:20:45.6231355Z 
2025-02-25T14:20:45.6231482Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6231617Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6231713Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6231847Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6231976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6232075Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6232159Z err_msg = None
2025-02-25T14:20:45.6232163Z 
2025-02-25T14:20:45.6232271Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6232356Z         if err_msg is None:
2025-02-25T14:20:45.6232455Z             if left.shape != right.shape:
2025-02-25T14:20:45.6232544Z                 raise_assert_detail(
2025-02-25T14:20:45.6232687Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6232766Z                 )
2025-02-25T14:20:45.6232837Z     
2025-02-25T14:20:45.6232913Z             diff = 0
2025-02-25T14:20:45.6233029Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6233118Z                 # count up differences
2025-02-25T14:20:45.6233292Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6233372Z                     diff += 1
2025-02-25T14:20:45.6233451Z     
2025-02-25T14:20:45.6233540Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6233818Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6233986Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6234106Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6234174Z E           
2025-02-25T14:20:45.6234289Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6234554Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6234816Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6234835Z 
2025-02-25T14:20:45.6235140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6235146Z 
2025-02-25T14:20:45.6235317Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6235322Z 
2025-02-25T14:20:45.6235542Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e65d0>
2025-02-25T14:20:45.6235712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6235792Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6235796Z 
2025-02-25T14:20:45.6235935Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6236050Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6236256Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6236326Z         try:
2025-02-25T14:20:45.6236471Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6236562Z         except KeyError:
2025-02-25T14:20:45.6236697Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6236770Z     
2025-02-25T14:20:45.6236858Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6236958Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6237047Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6237183Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6237266Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6237359Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6237469Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6237556Z             else:
2025-02-25T14:20:45.6237656Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6237766Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6237770Z 
2025-02-25T14:20:45.6237904Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6238016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6238168Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6238237Z     ???
2025-02-25T14:20:45.6238351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6238355Z 
2025-02-25T14:20:45.6238422Z >   ???
2025-02-25T14:20:45.6238559Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6238628Z E   
2025-02-25T14:20:45.6238756Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6238871Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6238942Z E          ...
2025-02-25T14:20:45.6239034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6239169Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6239285Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6239454Z E          ...
2025-02-25T14:20:45.6239549Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6239670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6239779Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6239784Z 
2025-02-25T14:20:45.6239876Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6240092Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-25T14:20:45.6240096Z 
2025-02-25T14:20:45.6240222Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6240347Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6240447Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6240701Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6240840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6240931Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6241014Z err_msg = None
2025-02-25T14:20:45.6241018Z 
2025-02-25T14:20:45.6241129Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6241209Z         if err_msg is None:
2025-02-25T14:20:45.6241310Z             if left.shape != right.shape:
2025-02-25T14:20:45.6241404Z                 raise_assert_detail(
2025-02-25T14:20:45.6241660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6241784Z                 )
2025-02-25T14:20:45.6241907Z     
2025-02-25T14:20:45.6242026Z             diff = 0
2025-02-25T14:20:45.6242221Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6242543Z                 # count up differences
2025-02-25T14:20:45.6242843Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6242987Z                     diff += 1
2025-02-25T14:20:45.6243102Z     
2025-02-25T14:20:45.6243252Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6243476Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6243775Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6243961Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6244086Z E           
2025-02-25T14:20:45.6244274Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6244753Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6245059Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6245065Z 
2025-02-25T14:20:45.6245370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6245375Z 
2025-02-25T14:20:45.6245552Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6245556Z 
2025-02-25T14:20:45.6245779Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e66c0>
2025-02-25T14:20:45.6245944Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6246032Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6246037Z 
2025-02-25T14:20:45.6246172Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6246436Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6246520Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6246596Z         try:
2025-02-25T14:20:45.6246735Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6246820Z         except KeyError:
2025-02-25T14:20:45.6246956Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6247027Z     
2025-02-25T14:20:45.6247120Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6247214Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6247306Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6247434Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6247523Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6247611Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6247732Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6247812Z             else:
2025-02-25T14:20:45.6247911Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6248014Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6248019Z 
2025-02-25T14:20:45.6248150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6248264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6248405Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6248476Z     ???
2025-02-25T14:20:45.6248584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6248588Z 
2025-02-25T14:20:45.6248660Z >   ???
2025-02-25T14:20:45.6248784Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6248855Z E   
2025-02-25T14:20:45.6248980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6249193Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6249268Z E          ...
2025-02-25T14:20:45.6249360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6249494Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6249602Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6249676Z E          ...
2025-02-25T14:20:45.6249759Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6249882Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6249986Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6249990Z 
2025-02-25T14:20:45.6250082Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6250288Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-25T14:20:45.6250297Z 
2025-02-25T14:20:45.6250424Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6250673Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6250776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6250910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6251033Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6251128Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6251203Z err_msg = None
2025-02-25T14:20:45.6251208Z 
2025-02-25T14:20:45.6251318Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6251402Z         if err_msg is None:
2025-02-25T14:20:45.6251495Z             if left.shape != right.shape:
2025-02-25T14:20:45.6251583Z                 raise_assert_detail(
2025-02-25T14:20:45.6251727Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6251807Z                 )
2025-02-25T14:20:45.6251873Z     
2025-02-25T14:20:45.6252111Z             diff = 0
2025-02-25T14:20:45.6252223Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6252316Z                 # count up differences
2025-02-25T14:20:45.6252486Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6252571Z                     diff += 1
2025-02-25T14:20:45.6252637Z     
2025-02-25T14:20:45.6252731Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6252874Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6253042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6253159Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6253228Z E           
2025-02-25T14:20:45.6253341Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6253608Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6253877Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6253883Z 
2025-02-25T14:20:45.6254191Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6254196Z 
2025-02-25T14:20:45.6254362Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6254482Z 
2025-02-25T14:20:45.6254719Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e6840>
2025-02-25T14:20:45.6254887Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89db295010>
2025-02-25T14:20:45.6254966Z attr = 'j_blues'
2025-02-25T14:20:45.6254971Z 
2025-02-25T14:20:45.6255108Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6255221Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6255309Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6255378Z         try:
2025-02-25T14:20:45.6255523Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6255602Z         except KeyError:
2025-02-25T14:20:45.6255742Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6255808Z     
2025-02-25T14:20:45.6255899Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6255989Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6256081Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6256219Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6256305Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6256396Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6256503Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6256578Z             else:
2025-02-25T14:20:45.6256670Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6256780Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6256784Z 
2025-02-25T14:20:45.6256910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6257027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6257169Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6257242Z     ???
2025-02-25T14:20:45.6257356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6257366Z 
2025-02-25T14:20:45.6257433Z >   ???
2025-02-25T14:20:45.6257558Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6257723Z E   
2025-02-25T14:20:45.6257856Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6257966Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6258042Z E          ...
2025-02-25T14:20:45.6258127Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6258253Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6258361Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6258436Z E          ...
2025-02-25T14:20:45.6258526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6258657Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6258765Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6258769Z 
2025-02-25T14:20:45.6258857Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6259113Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-25T14:20:45.6259132Z 
2025-02-25T14:20:45.6259358Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6259588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6259756Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6259980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6260199Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6260358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6260493Z err_msg = None
2025-02-25T14:20:45.6260500Z 
2025-02-25T14:20:45.6260827Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6260970Z         if err_msg is None:
2025-02-25T14:20:45.6261322Z             if left.shape != right.shape:
2025-02-25T14:20:45.6261472Z                 raise_assert_detail(
2025-02-25T14:20:45.6261720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6261846Z                 )
2025-02-25T14:20:45.6261968Z     
2025-02-25T14:20:45.6262089Z             diff = 0
2025-02-25T14:20:45.6262278Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6262411Z                 # count up differences
2025-02-25T14:20:45.6262590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6262667Z                     diff += 1
2025-02-25T14:20:45.6262745Z     
2025-02-25T14:20:45.6262834Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6262975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6263142Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6263266Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6263344Z E           
2025-02-25T14:20:45.6263458Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6263722Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6263981Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6263992Z 
2025-02-25T14:20:45.6264291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6264300Z 
2025-02-25T14:20:45.6264603Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6264608Z 
2025-02-25T14:20:45.6264832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7650>
2025-02-25T14:20:45.6264998Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6265073Z attr = 'lines'
2025-02-25T14:20:45.6265077Z 
2025-02-25T14:20:45.6265216Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6265330Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6265418Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6265491Z         try:
2025-02-25T14:20:45.6265627Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6265711Z         except KeyError:
2025-02-25T14:20:45.6265846Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6265930Z     
2025-02-25T14:20:45.6266018Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6266123Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6266212Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6266348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6266431Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6266530Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6266644Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6266714Z             else:
2025-02-25T14:20:45.6266811Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6266915Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6266920Z 
2025-02-25T14:20:45.6267045Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6267156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6267419Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6267489Z     ???
2025-02-25T14:20:45.6267604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6267616Z 
2025-02-25T14:20:45.6267691Z >   ???
2025-02-25T14:20:45.6267813Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6267885Z E   
2025-02-25T14:20:45.6268010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6268124Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6268192Z E          ...
2025-02-25T14:20:45.6268282Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6268408Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6268521Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6268592Z E          ...
2025-02-25T14:20:45.6268682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6268813Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6268920Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6268927Z 
2025-02-25T14:20:45.6269021Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6269298Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-25T14:20:45.6269303Z 
2025-02-25T14:20:45.6269527Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7710>
2025-02-25T14:20:45.6269688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6269784Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6269789Z 
2025-02-25T14:20:45.6269921Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6270043Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6270135Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6270205Z         try:
2025-02-25T14:20:45.6270346Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6270432Z         except KeyError:
2025-02-25T14:20:45.6270783Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6271006Z     
2025-02-25T14:20:45.6271102Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6271194Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6271289Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6271421Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6271511Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6271598Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6271713Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6271717Z 
2025-02-25T14:20:45.6271845Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6271956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6271961Z 
2025-02-25T14:20:45.6272107Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6272192Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6272316Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6272397Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6272541Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6272626Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6272730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6272814Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6272889Z err_msg = None
2025-02-25T14:20:45.6272893Z 
2025-02-25T14:20:45.6273006Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6273087Z         if err_msg is None:
2025-02-25T14:20:45.6273185Z             if left.shape != right.shape:
2025-02-25T14:20:45.6273270Z                 raise_assert_detail(
2025-02-25T14:20:45.6273548Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6273624Z                 )
2025-02-25T14:20:45.6273699Z     
2025-02-25T14:20:45.6273778Z             diff = 0
2025-02-25T14:20:45.6273888Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6273981Z                 # count up differences
2025-02-25T14:20:45.6274151Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6274233Z                     diff += 1
2025-02-25T14:20:45.6274299Z     
2025-02-25T14:20:45.6274389Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6274523Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6274700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6274802Z E           AssertionError: Series are different
2025-02-25T14:20:45.6274887Z E           
2025-02-25T14:20:45.6274997Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6275371Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6275722Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6276055Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6276166Z 
2025-02-25T14:20:45.6276482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6276771Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-25T14:20:45.6276776Z 
2025-02-25T14:20:45.6277002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e77d0>
2025-02-25T14:20:45.6277177Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6277275Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6277279Z 
2025-02-25T14:20:45.6277414Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6277541Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6277636Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6277713Z         try:
2025-02-25T14:20:45.6277854Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6277940Z         except KeyError:
2025-02-25T14:20:45.6278072Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6278204Z     
2025-02-25T14:20:45.6278360Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6278529Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6278687Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6278911Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6279060Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6279210Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6279400Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6279531Z 
2025-02-25T14:20:45.6279746Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6279945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6279960Z 
2025-02-25T14:20:45.6280189Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6280339Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6280671Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6280812Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6281056Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6281192Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6281379Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6281513Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6281647Z err_msg = None
2025-02-25T14:20:45.6281660Z 
2025-02-25T14:20:45.6281770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6281857Z         if err_msg is None:
2025-02-25T14:20:45.6281957Z             if left.shape != right.shape:
2025-02-25T14:20:45.6282054Z                 raise_assert_detail(
2025-02-25T14:20:45.6282205Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6282277Z                 )
2025-02-25T14:20:45.6282349Z     
2025-02-25T14:20:45.6282423Z             diff = 0
2025-02-25T14:20:45.6282541Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6282631Z                 # count up differences
2025-02-25T14:20:45.6282802Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6282881Z                     diff += 1
2025-02-25T14:20:45.6282957Z     
2025-02-25T14:20:45.6283042Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6283182Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6283361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6283607Z E           AssertionError: Series are different
2025-02-25T14:20:45.6283684Z E           
2025-02-25T14:20:45.6283784Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6284158Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6284535Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6284922Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6284929Z 
2025-02-25T14:20:45.6285241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6285460Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-25T14:20:45.6285464Z 
2025-02-25T14:20:45.6285592Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6285837Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6285942Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6286082Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6286202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6286302Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6286380Z err_msg = None
2025-02-25T14:20:45.6286390Z 
2025-02-25T14:20:45.6286502Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6286588Z         if err_msg is None:
2025-02-25T14:20:45.6286681Z             if left.shape != right.shape:
2025-02-25T14:20:45.6286770Z                 raise_assert_detail(
2025-02-25T14:20:45.6286911Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6286992Z                 )
2025-02-25T14:20:45.6287064Z     
2025-02-25T14:20:45.6287141Z             diff = 0
2025-02-25T14:20:45.6287251Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6287343Z                 # count up differences
2025-02-25T14:20:45.6287507Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6287592Z                     diff += 1
2025-02-25T14:20:45.6287665Z     
2025-02-25T14:20:45.6287754Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6287889Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6288056Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6288177Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6288248Z E           
2025-02-25T14:20:45.6288368Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6288633Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6289024Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6289031Z 
2025-02-25T14:20:45.6289342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6289346Z 
2025-02-25T14:20:45.6289519Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6289526Z 
2025-02-25T14:20:45.6289760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7a10>
2025-02-25T14:20:45.6289977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>, attr = 'nu'
2025-02-25T14:20:45.6289982Z 
2025-02-25T14:20:45.6290125Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6290259Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6290349Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6290431Z         try:
2025-02-25T14:20:45.6290934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6291033Z         except KeyError:
2025-02-25T14:20:45.6291172Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6291253Z     
2025-02-25T14:20:45.6291346Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6291451Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6291548Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6291837Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6291946Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6292036Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6292155Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6292161Z 
2025-02-25T14:20:45.6292284Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6292406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6292552Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6292634Z     ???
2025-02-25T14:20:45.6292748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6292761Z 
2025-02-25T14:20:45.6292831Z >   ???
2025-02-25T14:20:45.6292964Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6293036Z E   
2025-02-25T14:20:45.6293175Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6293289Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6293373Z E          ...
2025-02-25T14:20:45.6293463Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6293601Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6293712Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6293790Z E          ...
2025-02-25T14:20:45.6293876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6294003Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6294114Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6294119Z 
2025-02-25T14:20:45.6294209Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6294467Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-25T14:20:45.6294473Z 
2025-02-25T14:20:45.6294602Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6294743Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6294963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6295100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6295225Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6295319Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6295399Z err_msg = None
2025-02-25T14:20:45.6295403Z 
2025-02-25T14:20:45.6295510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6295599Z         if err_msg is None:
2025-02-25T14:20:45.6295690Z             if left.shape != right.shape:
2025-02-25T14:20:45.6295779Z                 raise_assert_detail(
2025-02-25T14:20:45.6295918Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6296000Z                 )
2025-02-25T14:20:45.6296080Z     
2025-02-25T14:20:45.6296151Z             diff = 0
2025-02-25T14:20:45.6296266Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6296353Z                 # count up differences
2025-02-25T14:20:45.6296528Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6296605Z                     diff += 1
2025-02-25T14:20:45.6296679Z     
2025-02-25T14:20:45.6296765Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6296905Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6297211Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6297417Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6297549Z E           
2025-02-25T14:20:45.6297737Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6298344Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6298827Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6298836Z 
2025-02-25T14:20:45.6299373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6299381Z 
2025-02-25T14:20:45.6299673Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6299686Z 
2025-02-25T14:20:45.6300065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7ad0>
2025-02-25T14:20:45.6300364Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6300462Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6300467Z 
2025-02-25T14:20:45.6300809Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6300929Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6301019Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6301094Z         try:
2025-02-25T14:20:45.6301234Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6301323Z         except KeyError:
2025-02-25T14:20:45.6301460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6301532Z     
2025-02-25T14:20:45.6301622Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6301719Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6301814Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6301951Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6302177Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6302276Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6302385Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6302395Z 
2025-02-25T14:20:45.6302525Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6302644Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6302788Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6302863Z     ???
2025-02-25T14:20:45.6302971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6302976Z 
2025-02-25T14:20:45.6303049Z >   ???
2025-02-25T14:20:45.6303173Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6303253Z E   
2025-02-25T14:20:45.6303378Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6303491Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6303574Z E          ...
2025-02-25T14:20:45.6303660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6303792Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6303904Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6303980Z E          ...
2025-02-25T14:20:45.6304065Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6304194Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6304302Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6304307Z 
2025-02-25T14:20:45.6304403Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6304616Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-25T14:20:45.6304627Z 
2025-02-25T14:20:45.6304875Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6305009Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6305108Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6305247Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6305368Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6305465Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6305537Z err_msg = None
2025-02-25T14:20:45.6305541Z 
2025-02-25T14:20:45.6305654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6305739Z         if err_msg is None:
2025-02-25T14:20:45.6305832Z             if left.shape != right.shape:
2025-02-25T14:20:45.6305921Z                 raise_assert_detail(
2025-02-25T14:20:45.6306070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6306146Z                 )
2025-02-25T14:20:45.6306218Z     
2025-02-25T14:20:45.6306296Z             diff = 0
2025-02-25T14:20:45.6306406Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6306502Z                 # count up differences
2025-02-25T14:20:45.6306673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6306761Z                     diff += 1
2025-02-25T14:20:45.6306837Z     
2025-02-25T14:20:45.6306924Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6307066Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6307232Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6307348Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6307417Z E           
2025-02-25T14:20:45.6307536Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6307792Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6308153Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6308159Z 
2025-02-25T14:20:45.6308463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6308468Z 
2025-02-25T14:20:45.6308632Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6308642Z 
2025-02-25T14:20:45.6308866Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7e7b90>
2025-02-25T14:20:45.6309071Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>, attr = 'f_lu'
2025-02-25T14:20:45.6309085Z 
2025-02-25T14:20:45.6309217Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6309334Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6309418Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6309494Z         try:
2025-02-25T14:20:45.6309634Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6309719Z         except KeyError:
2025-02-25T14:20:45.6309853Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6309929Z     
2025-02-25T14:20:45.6310015Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6310114Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6310305Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6310433Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6310689Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6310812Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6310933Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6310937Z 
2025-02-25T14:20:45.6311061Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6311185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6311330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6311405Z     ???
2025-02-25T14:20:45.6311517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6311530Z 
2025-02-25T14:20:45.6311596Z >   ???
2025-02-25T14:20:45.6311728Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6311796Z E   
2025-02-25T14:20:45.6311940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6312048Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6312131Z E          ...
2025-02-25T14:20:45.6312219Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6312353Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6312463Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6312540Z E          ...
2025-02-25T14:20:45.6312625Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6312751Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6312861Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6312866Z 
2025-02-25T14:20:45.6312956Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6313208Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-25T14:20:45.6313213Z 
2025-02-25T14:20:45.6313347Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6313484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6313722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6313860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6313994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6314086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6314164Z err_msg = None
2025-02-25T14:20:45.6314168Z 
2025-02-25T14:20:45.6314279Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6314363Z         if err_msg is None:
2025-02-25T14:20:45.6314456Z             if left.shape != right.shape:
2025-02-25T14:20:45.6314546Z                 raise_assert_detail(
2025-02-25T14:20:45.6314699Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6314776Z                 )
2025-02-25T14:20:45.6314847Z     
2025-02-25T14:20:45.6314923Z             diff = 0
2025-02-25T14:20:45.6315041Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6315127Z                 # count up differences
2025-02-25T14:20:45.6315301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6315379Z                     diff += 1
2025-02-25T14:20:45.6315462Z     
2025-02-25T14:20:45.6315552Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6315696Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6315960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6316166Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6316285Z E           
2025-02-25T14:20:45.6316678Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6317158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6317636Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6317644Z 
2025-02-25T14:20:45.6318179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6318186Z 
2025-02-25T14:20:45.6318487Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6318501Z 
2025-02-25T14:20:45.6318884Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b0380>
2025-02-25T14:20:45.6319116Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6319206Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6319210Z 
2025-02-25T14:20:45.6319359Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6319475Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6319573Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6319647Z         try:
2025-02-25T14:20:45.6319803Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6319900Z         except KeyError:
2025-02-25T14:20:45.6320039Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6320120Z     
2025-02-25T14:20:45.6320209Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6320317Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6320412Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6320661Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6320881Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6320981Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6321094Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6321170Z             else:
2025-02-25T14:20:45.6321278Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6321385Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6321390Z 
2025-02-25T14:20:45.6321518Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6321633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6321786Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6321855Z     ???
2025-02-25T14:20:45.6321974Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6321987Z 
2025-02-25T14:20:45.6322056Z >   ???
2025-02-25T14:20:45.6322194Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6322261Z E   
2025-02-25T14:20:45.6322398Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6322519Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6322596Z E          ...
2025-02-25T14:20:45.6322696Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6322828Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6322960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6323036Z E          ...
2025-02-25T14:20:45.6323139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6323268Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6323388Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6323516Z 
2025-02-25T14:20:45.6323625Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6323874Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-25T14:20:45.6323883Z 
2025-02-25T14:20:45.6324028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6324162Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6324268Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6324404Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6324533Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6324626Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6324706Z err_msg = None
2025-02-25T14:20:45.6324710Z 
2025-02-25T14:20:45.6324827Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6324914Z         if err_msg is None:
2025-02-25T14:20:45.6325016Z             if left.shape != right.shape:
2025-02-25T14:20:45.6325108Z                 raise_assert_detail(
2025-02-25T14:20:45.6325259Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6325333Z                 )
2025-02-25T14:20:45.6325409Z     
2025-02-25T14:20:45.6325481Z             diff = 0
2025-02-25T14:20:45.6325599Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6325685Z                 # count up differences
2025-02-25T14:20:45.6325860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6325944Z                     diff += 1
2025-02-25T14:20:45.6326011Z     
2025-02-25T14:20:45.6326106Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6326243Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6326421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6326536Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6326729Z E           
2025-02-25T14:20:45.6326840Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6327100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6327364Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6327374Z 
2025-02-25T14:20:45.6327676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6327686Z 
2025-02-25T14:20:45.6327859Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6327865Z 
2025-02-25T14:20:45.6328088Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b0440>
2025-02-25T14:20:45.6328252Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6328336Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6328341Z 
2025-02-25T14:20:45.6328474Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6328592Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6328681Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6328758Z         try:
2025-02-25T14:20:45.6328894Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6328981Z         except KeyError:
2025-02-25T14:20:45.6329204Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6329284Z     
2025-02-25T14:20:45.6329382Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6329474Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6329568Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6329697Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6329786Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6329875Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6329990Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6330061Z             else:
2025-02-25T14:20:45.6330162Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6330269Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6330274Z 
2025-02-25T14:20:45.6330406Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6330617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6330768Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6330851Z     ???
2025-02-25T14:20:45.6330960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6330965Z 
2025-02-25T14:20:45.6331041Z >   ???
2025-02-25T14:20:45.6331164Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6331241Z E   
2025-02-25T14:20:45.6331370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6331486Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6331557Z E          ...
2025-02-25T14:20:45.6331650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6331783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6331893Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6331968Z E          ...
2025-02-25T14:20:45.6332058Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6332187Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6332418Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6332423Z 
2025-02-25T14:20:45.6332515Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6332743Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-25T14:20:45.6332748Z 
2025-02-25T14:20:45.6332882Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6333012Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6333108Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6333247Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6333453Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6333634Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6333770Z err_msg = None
2025-02-25T14:20:45.6333777Z 
2025-02-25T14:20:45.6333964Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6334104Z         if err_msg is None:
2025-02-25T14:20:45.6334262Z             if left.shape != right.shape:
2025-02-25T14:20:45.6334409Z                 raise_assert_detail(
2025-02-25T14:20:45.6334648Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6334771Z                 )
2025-02-25T14:20:45.6334887Z     
2025-02-25T14:20:45.6335019Z             diff = 0
2025-02-25T14:20:45.6335201Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6335352Z                 # count up differences
2025-02-25T14:20:45.6335637Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6335771Z                     diff += 1
2025-02-25T14:20:45.6336058Z     
2025-02-25T14:20:45.6336216Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6336455Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6336748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6336943Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6337017Z E           
2025-02-25T14:20:45.6337133Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6337393Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6337659Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6337675Z 
2025-02-25T14:20:45.6337979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6337984Z 
2025-02-25T14:20:45.6338152Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6338156Z 
2025-02-25T14:20:45.6338380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b05c0>
2025-02-25T14:20:45.6338543Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e2dcb4d0>
2025-02-25T14:20:45.6338623Z attr = 'j_blues'
2025-02-25T14:20:45.6338628Z 
2025-02-25T14:20:45.6338768Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6338880Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6338974Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6339045Z         try:
2025-02-25T14:20:45.6339191Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6339386Z         except KeyError:
2025-02-25T14:20:45.6339530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6339597Z     
2025-02-25T14:20:45.6339691Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6339784Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6339880Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6340018Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6340104Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6340200Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6340308Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6340381Z             else:
2025-02-25T14:20:45.6340474Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6340704Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6340709Z 
2025-02-25T14:20:45.6340839Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6340959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6341100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6341177Z     ???
2025-02-25T14:20:45.6341292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6341297Z 
2025-02-25T14:20:45.6341364Z >   ???
2025-02-25T14:20:45.6341495Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6341562Z E   
2025-02-25T14:20:45.6341695Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6341803Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6341881Z E          ...
2025-02-25T14:20:45.6341966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6342235Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6342347Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6342429Z E          ...
2025-02-25T14:20:45.6342519Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6342639Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6342750Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6342754Z 
2025-02-25T14:20:45.6342841Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6343048Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-25T14:20:45.6343052Z 
2025-02-25T14:20:45.6343178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6343312Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6343414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6343549Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6343681Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6343774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6343855Z err_msg = None
2025-02-25T14:20:45.6343860Z 
2025-02-25T14:20:45.6343969Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6344057Z         if err_msg is None:
2025-02-25T14:20:45.6344150Z             if left.shape != right.shape:
2025-02-25T14:20:45.6344245Z                 raise_assert_detail(
2025-02-25T14:20:45.6344388Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6344467Z                 )
2025-02-25T14:20:45.6344539Z     
2025-02-25T14:20:45.6344611Z             diff = 0
2025-02-25T14:20:45.6344728Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6344820Z                 # count up differences
2025-02-25T14:20:45.6344995Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6345196Z                     diff += 1
2025-02-25T14:20:45.6345268Z     
2025-02-25T14:20:45.6345357Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6345515Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6345683Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6345799Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6345877Z E           
2025-02-25T14:20:45.6345985Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6346250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6346513Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6346536Z 
2025-02-25T14:20:45.6346833Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6346838Z 
2025-02-25T14:20:45.6347014Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6347019Z 
2025-02-25T14:20:45.6347241Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1340>
2025-02-25T14:20:45.6347412Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6347484Z attr = 'lines'
2025-02-25T14:20:45.6347579Z 
2025-02-25T14:20:45.6347724Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6347842Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6347934Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6348011Z         try:
2025-02-25T14:20:45.6348148Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6348238Z         except KeyError:
2025-02-25T14:20:45.6348375Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6348451Z     
2025-02-25T14:20:45.6348538Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6348635Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6348723Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6348859Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6348947Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6349059Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6349189Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6349266Z             else:
2025-02-25T14:20:45.6349379Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6349489Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6349493Z 
2025-02-25T14:20:45.6349634Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6349749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6349910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6349982Z     ???
2025-02-25T14:20:45.6350112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6350116Z 
2025-02-25T14:20:45.6350205Z >   ???
2025-02-25T14:20:45.6350337Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6350420Z E   
2025-02-25T14:20:45.6350726Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6350875Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6350952Z E          ...
2025-02-25T14:20:45.6351198Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6351334Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6351462Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6351536Z E          ...
2025-02-25T14:20:45.6351638Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6351763Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6351882Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6351886Z 
2025-02-25T14:20:45.6351991Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6352274Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-25T14:20:45.6352280Z 
2025-02-25T14:20:45.6352608Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1400>
2025-02-25T14:20:45.6352901Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6353085Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6353092Z 
2025-02-25T14:20:45.6353326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6353534Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6353683Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6353757Z         try:
2025-02-25T14:20:45.6353911Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6354000Z         except KeyError:
2025-02-25T14:20:45.6354151Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6354228Z     
2025-02-25T14:20:45.6354328Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6354425Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6354536Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6354671Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6354918Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6355018Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6355144Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6355148Z 
2025-02-25T14:20:45.6355284Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6355399Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6355404Z 
2025-02-25T14:20:45.6355552Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6355642Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6355766Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6355856Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6356012Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6356118Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6356228Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6356330Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6356411Z err_msg = None
2025-02-25T14:20:45.6356416Z 
2025-02-25T14:20:45.6356542Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6356628Z         if err_msg is None:
2025-02-25T14:20:45.6356739Z             if left.shape != right.shape:
2025-02-25T14:20:45.6356826Z                 raise_assert_detail(
2025-02-25T14:20:45.6356989Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6357070Z                 )
2025-02-25T14:20:45.6357160Z     
2025-02-25T14:20:45.6357254Z             diff = 0
2025-02-25T14:20:45.6357370Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6357476Z                 # count up differences
2025-02-25T14:20:45.6357650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6357751Z                     diff += 1
2025-02-25T14:20:45.6357922Z     
2025-02-25T14:20:45.6358029Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6358166Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6358358Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6358466Z E           AssertionError: Series are different
2025-02-25T14:20:45.6358559Z E           
2025-02-25T14:20:45.6358681Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6359065Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6359422Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6359768Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6359802Z 
2025-02-25T14:20:45.6360124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6360481Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-25T14:20:45.6360496Z 
2025-02-25T14:20:45.6360828Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b14c0>
2025-02-25T14:20:45.6361009Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6369621Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6369645Z 
2025-02-25T14:20:45.6369848Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6369983Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6370075Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6370147Z         try:
2025-02-25T14:20:45.6370310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6370397Z         except KeyError:
2025-02-25T14:20:45.6370828Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6370910Z     
2025-02-25T14:20:45.6371023Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6371139Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6371238Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6371388Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6371482Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6371575Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6371751Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6371759Z 
2025-02-25T14:20:45.6371992Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6372196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6372203Z 
2025-02-25T14:20:45.6372432Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6372583Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6372769Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6372917Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6373289Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6373378Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6373491Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6373571Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6373655Z err_msg = None
2025-02-25T14:20:45.6373660Z 
2025-02-25T14:20:45.6373773Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6373863Z         if err_msg is None:
2025-02-25T14:20:45.6373962Z             if left.shape != right.shape:
2025-02-25T14:20:45.6374057Z                 raise_assert_detail(
2025-02-25T14:20:45.6374217Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6374288Z                 )
2025-02-25T14:20:45.6374361Z     
2025-02-25T14:20:45.6374438Z             diff = 0
2025-02-25T14:20:45.6374566Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6374663Z                 # count up differences
2025-02-25T14:20:45.6374844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6374924Z                     diff += 1
2025-02-25T14:20:45.6375002Z     
2025-02-25T14:20:45.6375099Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6375250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6375431Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6375539Z E           AssertionError: Series are different
2025-02-25T14:20:45.6375621Z E           
2025-02-25T14:20:45.6375724Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6376115Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6376642Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6377030Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6377043Z 
2025-02-25T14:20:45.6377372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6377582Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-25T14:20:45.6377594Z 
2025-02-25T14:20:45.6377723Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6377861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6377961Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6378102Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6378226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6378336Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6378498Z err_msg = None
2025-02-25T14:20:45.6378515Z 
2025-02-25T14:20:45.6378632Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6378725Z         if err_msg is None:
2025-02-25T14:20:45.6378822Z             if left.shape != right.shape:
2025-02-25T14:20:45.6378920Z                 raise_assert_detail(
2025-02-25T14:20:45.6379069Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6379149Z                 )
2025-02-25T14:20:45.6379219Z     
2025-02-25T14:20:45.6379307Z             diff = 0
2025-02-25T14:20:45.6379426Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6379529Z                 # count up differences
2025-02-25T14:20:45.6379707Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6379810Z                     diff += 1
2025-02-25T14:20:45.6379892Z     
2025-02-25T14:20:45.6379983Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6380139Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6380314Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6380440Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6380653Z E           
2025-02-25T14:20:45.6380785Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6381054Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6381326Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6381466Z 
2025-02-25T14:20:45.6381782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6381787Z 
2025-02-25T14:20:45.6381956Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6381961Z 
2025-02-25T14:20:45.6382197Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1700>
2025-02-25T14:20:45.6382402Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>, attr = 'nu'
2025-02-25T14:20:45.6382406Z 
2025-02-25T14:20:45.6382548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6382670Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6382760Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6382839Z         try:
2025-02-25T14:20:45.6382980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6383074Z         except KeyError:
2025-02-25T14:20:45.6383212Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6383292Z     
2025-02-25T14:20:45.6383380Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6383483Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6383583Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6383716Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6383807Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6383897Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6384016Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6384021Z 
2025-02-25T14:20:45.6384145Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6384274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6384424Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6384625Z     ???
2025-02-25T14:20:45.6384737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6384748Z 
2025-02-25T14:20:45.6384817Z >   ???
2025-02-25T14:20:45.6384949Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6385016Z E   
2025-02-25T14:20:45.6385155Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6385268Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6385347Z E          ...
2025-02-25T14:20:45.6385436Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6385573Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6385687Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6385764Z E          ...
2025-02-25T14:20:45.6385857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6385988Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6386105Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6386110Z 
2025-02-25T14:20:45.6386200Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6386428Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-25T14:20:45.6386433Z 
2025-02-25T14:20:45.6386562Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6386700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6386797Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6386934Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6387071Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6387265Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6387365Z err_msg = None
2025-02-25T14:20:45.6387369Z 
2025-02-25T14:20:45.6387485Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6387583Z         if err_msg is None:
2025-02-25T14:20:45.6387686Z             if left.shape != right.shape:
2025-02-25T14:20:45.6387785Z                 raise_assert_detail(
2025-02-25T14:20:45.6387930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6388004Z                 )
2025-02-25T14:20:45.6388070Z     
2025-02-25T14:20:45.6388149Z             diff = 0
2025-02-25T14:20:45.6388275Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6388368Z                 # count up differences
2025-02-25T14:20:45.6388553Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6388635Z                     diff += 1
2025-02-25T14:20:45.6388717Z     
2025-02-25T14:20:45.6388808Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6388966Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6389137Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6389259Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6389330Z E           
2025-02-25T14:20:45.6389453Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6389724Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6389986Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6390112Z 
2025-02-25T14:20:45.6390431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6390436Z 
2025-02-25T14:20:45.6390819Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6390826Z 
2025-02-25T14:20:45.6391063Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b17c0>
2025-02-25T14:20:45.6391341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6391486Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6391493Z 
2025-02-25T14:20:45.6391739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6391935Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6392103Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6392224Z         try:
2025-02-25T14:20:45.6392389Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6392481Z         except KeyError:
2025-02-25T14:20:45.6392620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6392698Z     
2025-02-25T14:20:45.6392787Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6392889Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6392978Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6393121Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6393208Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6393309Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6393420Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6393430Z 
2025-02-25T14:20:45.6393551Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6393828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6393986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6394061Z     ???
2025-02-25T14:20:45.6394176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6394181Z 
2025-02-25T14:20:45.6394256Z >   ???
2025-02-25T14:20:45.6394386Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6394475Z E   
2025-02-25T14:20:45.6394609Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6394739Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6394825Z E          ...
2025-02-25T14:20:45.6394916Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6395061Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6395180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6395275Z E          ...
2025-02-25T14:20:45.6395368Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6395516Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6395626Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6395631Z 
2025-02-25T14:20:45.6395740Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6395948Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-25T14:20:45.6395968Z 
2025-02-25T14:20:45.6396102Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6396249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6396351Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6396498Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6396626Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6396739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6396983Z err_msg = None
2025-02-25T14:20:45.6396987Z 
2025-02-25T14:20:45.6397113Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6397213Z         if err_msg is None:
2025-02-25T14:20:45.6397311Z             if left.shape != right.shape:
2025-02-25T14:20:45.6397411Z                 raise_assert_detail(
2025-02-25T14:20:45.6397562Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6397654Z                 )
2025-02-25T14:20:45.6397725Z     
2025-02-25T14:20:45.6397813Z             diff = 0
2025-02-25T14:20:45.6397926Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6398030Z                 # count up differences
2025-02-25T14:20:45.6398205Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6398309Z                     diff += 1
2025-02-25T14:20:45.6398381Z     
2025-02-25T14:20:45.6398483Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6398642Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6398820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6398955Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6399031Z E           
2025-02-25T14:20:45.6399165Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6399437Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6399721Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6399834Z 
2025-02-25T14:20:45.6400160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6400164Z 
2025-02-25T14:20:45.6400338Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6400343Z 
2025-02-25T14:20:45.6400773Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b1880>
2025-02-25T14:20:45.6400989Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>, attr = 'f_lu'
2025-02-25T14:20:45.6401004Z 
2025-02-25T14:20:45.6401150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6401284Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6401381Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6401470Z         try:
2025-02-25T14:20:45.6401616Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6401721Z         except KeyError:
2025-02-25T14:20:45.6401863Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6401948Z     
2025-02-25T14:20:45.6402040Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6402154Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6402251Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6402401Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6402509Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6402605Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6402731Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6402736Z 
2025-02-25T14:20:45.6402865Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6403005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6403160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6403384Z     ???
2025-02-25T14:20:45.6403502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6403518Z 
2025-02-25T14:20:45.6403591Z >   ???
2025-02-25T14:20:45.6403729Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6403801Z E   
2025-02-25T14:20:45.6403942Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6404057Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6404143Z E          ...
2025-02-25T14:20:45.6404235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6404383Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6404499Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6404597Z E          ...
2025-02-25T14:20:45.6404691Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6404837Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6404956Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6404960Z 
2025-02-25T14:20:45.6405054Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6405289Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-25T14:20:45.6405294Z 
2025-02-25T14:20:45.6405430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6405573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6405675Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6405826Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6405965Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6406182Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6406282Z err_msg = None
2025-02-25T14:20:45.6406287Z 
2025-02-25T14:20:45.6406405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6406508Z         if err_msg is None:
2025-02-25T14:20:45.6406606Z             if left.shape != right.shape:
2025-02-25T14:20:45.6406709Z                 raise_assert_detail(
2025-02-25T14:20:45.6406858Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6406946Z                 )
2025-02-25T14:20:45.6407016Z     
2025-02-25T14:20:45.6407107Z             diff = 0
2025-02-25T14:20:45.6407233Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6407328Z                 # count up differences
2025-02-25T14:20:45.6407513Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6407605Z                     diff += 1
2025-02-25T14:20:45.6407680Z     
2025-02-25T14:20:45.6407771Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6407919Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6408091Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6408213Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6408289Z E           
2025-02-25T14:20:45.6408408Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6408679Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6408948Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6409049Z 
2025-02-25T14:20:45.6409368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6409374Z 
2025-02-25T14:20:45.6409557Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6409562Z 
2025-02-25T14:20:45.6409787Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2000>
2025-02-25T14:20:45.6409967Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6410052Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6410057Z 
2025-02-25T14:20:45.6410229Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6410353Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6410453Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6410706Z         try:
2025-02-25T14:20:45.6410892Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6410992Z         except KeyError:
2025-02-25T14:20:45.6411135Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6411219Z     
2025-02-25T14:20:45.6411313Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6411418Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6411511Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6411662Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6411751Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6411863Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6411980Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6412075Z             else:
2025-02-25T14:20:45.6412186Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6412437Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6412448Z 
2025-02-25T14:20:45.6412588Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6412705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6412862Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6412929Z     ???
2025-02-25T14:20:45.6413045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6413050Z 
2025-02-25T14:20:45.6413128Z >   ???
2025-02-25T14:20:45.6413273Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6413346Z E   
2025-02-25T14:20:45.6413485Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6413607Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6413681Z E          ...
2025-02-25T14:20:45.6413784Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6413921Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6414053Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6414127Z E          ...
2025-02-25T14:20:45.6414224Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6414351Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6414466Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6414471Z 
2025-02-25T14:20:45.6414573Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6414781Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-25T14:20:45.6414786Z 
2025-02-25T14:20:45.6414931Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6415062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6415172Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6415319Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6415597Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6415697Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6415791Z err_msg = None
2025-02-25T14:20:45.6415796Z 
2025-02-25T14:20:45.6415925Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6416019Z         if err_msg is None:
2025-02-25T14:20:45.6416128Z             if left.shape != right.shape:
2025-02-25T14:20:45.6416220Z                 raise_assert_detail(
2025-02-25T14:20:45.6416382Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6416462Z                 )
2025-02-25T14:20:45.6416595Z     
2025-02-25T14:20:45.6416731Z             diff = 0
2025-02-25T14:20:45.6416926Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6417081Z                 # count up differences
2025-02-25T14:20:45.6417387Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6417532Z                     diff += 1
2025-02-25T14:20:45.6417613Z     
2025-02-25T14:20:45.6417716Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6417856Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6418040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6418159Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6418243Z E           
2025-02-25T14:20:45.6418359Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6418640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6419029Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6419035Z 
2025-02-25T14:20:45.6419342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6419347Z 
2025-02-25T14:20:45.6419527Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6419532Z 
2025-02-25T14:20:45.6419766Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2240>
2025-02-25T14:20:45.6419933Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89ef310050>
2025-02-25T14:20:45.6420023Z attr = 'j_blues'
2025-02-25T14:20:45.6420027Z 
2025-02-25T14:20:45.6420168Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6420298Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6420384Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6420473Z         try:
2025-02-25T14:20:45.6420792Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6420892Z         except KeyError:
2025-02-25T14:20:45.6421036Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6421110Z     
2025-02-25T14:20:45.6421207Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6421301Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6421395Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6421524Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6421615Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6421709Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6421823Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6422028Z             else:
2025-02-25T14:20:45.6422134Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6422239Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6422244Z 
2025-02-25T14:20:45.6422379Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6422504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6422654Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6422733Z     ???
2025-02-25T14:20:45.6422840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6422844Z 
2025-02-25T14:20:45.6422919Z >   ???
2025-02-25T14:20:45.6423044Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6423117Z E   
2025-02-25T14:20:45.6423243Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6423363Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6423443Z E          ...
2025-02-25T14:20:45.6423534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6423671Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6423783Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6423865Z E          ...
2025-02-25T14:20:45.6423966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6424093Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6424198Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6424202Z 
2025-02-25T14:20:45.6424298Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6424503Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-25T14:20:45.6424507Z 
2025-02-25T14:20:45.6424639Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6424903Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6425002Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6425136Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6425257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6425356Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6425432Z err_msg = None
2025-02-25T14:20:45.6425437Z 
2025-02-25T14:20:45.6425549Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6425639Z         if err_msg is None:
2025-02-25T14:20:45.6425731Z             if left.shape != right.shape:
2025-02-25T14:20:45.6425818Z                 raise_assert_detail(
2025-02-25T14:20:45.6425960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6426043Z                 )
2025-02-25T14:20:45.6426113Z     
2025-02-25T14:20:45.6426198Z             diff = 0
2025-02-25T14:20:45.6426307Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6426401Z                 # count up differences
2025-02-25T14:20:45.6426569Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6426654Z                     diff += 1
2025-02-25T14:20:45.6426722Z     
2025-02-25T14:20:45.6426817Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6426960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6427128Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6427245Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6427313Z E           
2025-02-25T14:20:45.6427428Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6427694Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6428051Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6428057Z 
2025-02-25T14:20:45.6428360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6428365Z 
2025-02-25T14:20:45.6428529Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6428537Z 
2025-02-25T14:20:45.6428764Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b2fc0>
2025-02-25T14:20:45.6428932Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6429011Z attr = 'lines'
2025-02-25T14:20:45.6429016Z 
2025-02-25T14:20:45.6429167Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6429278Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6429365Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6429435Z         try:
2025-02-25T14:20:45.6429576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6429655Z         except KeyError:
2025-02-25T14:20:45.6429794Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6429862Z     
2025-02-25T14:20:45.6429955Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6430046Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6430229Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6430365Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6430456Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6430736Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6430861Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6430938Z             else:
2025-02-25T14:20:45.6431030Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6431140Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6431144Z 
2025-02-25T14:20:45.6431265Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6431381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6431526Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6431601Z     ???
2025-02-25T14:20:45.6431715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6431728Z 
2025-02-25T14:20:45.6431794Z >   ???
2025-02-25T14:20:45.6431925Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6431999Z E   
2025-02-25T14:20:45.6432128Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6432238Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6432317Z E          ...
2025-02-25T14:20:45.6432404Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6432538Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6432648Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6432725Z E          ...
2025-02-25T14:20:45.6432815Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6432939Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6433051Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6433055Z 
2025-02-25T14:20:45.6433148Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6433412Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-25T14:20:45.6433557Z 
2025-02-25T14:20:45.6433782Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3080>
2025-02-25T14:20:45.6433949Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6434038Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6434049Z 
2025-02-25T14:20:45.6434182Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6434296Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6434377Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6434451Z         try:
2025-02-25T14:20:45.6434591Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6434678Z         except KeyError:
2025-02-25T14:20:45.6434812Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6434891Z     
2025-02-25T14:20:45.6434978Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6435076Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6435169Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6435305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6435396Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6435484Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6435598Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6435602Z 
2025-02-25T14:20:45.6435725Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6435843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6435855Z 
2025-02-25T14:20:45.6436098Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6436259Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6436442Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6436772Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6437007Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6437091Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6437202Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6437279Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6437361Z err_msg = None
2025-02-25T14:20:45.6437365Z 
2025-02-25T14:20:45.6437474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6437560Z         if err_msg is None:
2025-02-25T14:20:45.6437654Z             if left.shape != right.shape:
2025-02-25T14:20:45.6437747Z                 raise_assert_detail(
2025-02-25T14:20:45.6437897Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6437967Z                 )
2025-02-25T14:20:45.6438050Z     
2025-02-25T14:20:45.6438124Z             diff = 0
2025-02-25T14:20:45.6438241Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6438335Z                 # count up differences
2025-02-25T14:20:45.6438509Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6438587Z                     diff += 1
2025-02-25T14:20:45.6438662Z     
2025-02-25T14:20:45.6438748Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6438888Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6439060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6439163Z E           AssertionError: Series are different
2025-02-25T14:20:45.6439239Z E           
2025-02-25T14:20:45.6439342Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6439716Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6440150Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6440490Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6440621Z 
2025-02-25T14:20:45.6440936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6441194Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-25T14:20:45.6441207Z 
2025-02-25T14:20:45.6441426Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3140>
2025-02-25T14:20:45.6441594Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6441683Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6441688Z 
2025-02-25T14:20:45.6441828Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6441940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6442029Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6442100Z         try:
2025-02-25T14:20:45.6442441Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6442524Z         except KeyError:
2025-02-25T14:20:45.6442672Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6442744Z     
2025-02-25T14:20:45.6442831Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6442928Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6443016Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6443154Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6443239Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6443332Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6443440Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6443445Z 
2025-02-25T14:20:45.6443574Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6443689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6443708Z 
2025-02-25T14:20:45.6443840Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6443931Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6444037Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6444121Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6444255Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6444341Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6444443Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6444526Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6444600Z err_msg = None
2025-02-25T14:20:45.6444613Z 
2025-02-25T14:20:45.6444722Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6444808Z         if err_msg is None:
2025-02-25T14:20:45.6444901Z             if left.shape != right.shape:
2025-02-25T14:20:45.6444998Z                 raise_assert_detail(
2025-02-25T14:20:45.6445138Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6445345Z                 )
2025-02-25T14:20:45.6445412Z     
2025-02-25T14:20:45.6445492Z             diff = 0
2025-02-25T14:20:45.6445601Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6445695Z                 # count up differences
2025-02-25T14:20:45.6445866Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6445948Z                     diff += 1
2025-02-25T14:20:45.6446022Z     
2025-02-25T14:20:45.6446108Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6446247Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6446430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6446540Z E           AssertionError: Series are different
2025-02-25T14:20:45.6446663Z E           
2025-02-25T14:20:45.6446843Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6447525Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6447924Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6448401Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6448415Z 
2025-02-25T14:20:45.6448724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6448927Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-25T14:20:45.6448932Z 
2025-02-25T14:20:45.6449062Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6449189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6449295Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6449425Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6449557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6449658Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6449732Z err_msg = None
2025-02-25T14:20:45.6449736Z 
2025-02-25T14:20:45.6449850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6449929Z         if err_msg is None:
2025-02-25T14:20:45.6450028Z             if left.shape != right.shape:
2025-02-25T14:20:45.6450110Z                 raise_assert_detail(
2025-02-25T14:20:45.6450253Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6450323Z                 )
2025-02-25T14:20:45.6450399Z     
2025-02-25T14:20:45.6450468Z             diff = 0
2025-02-25T14:20:45.6450796Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6450895Z                 # count up differences
2025-02-25T14:20:45.6451198Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6451284Z                     diff += 1
2025-02-25T14:20:45.6451350Z     
2025-02-25T14:20:45.6451445Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6451583Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6451754Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6451862Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6451938Z E           
2025-02-25T14:20:45.6452050Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6452354Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6452638Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6452644Z 
2025-02-25T14:20:45.6452939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6452944Z 
2025-02-25T14:20:45.6453113Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6453117Z 
2025-02-25T14:20:45.6453342Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3380>
2025-02-25T14:20:45.6453541Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>, attr = 'nu'
2025-02-25T14:20:45.6453685Z 
2025-02-25T14:20:45.6453835Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6453961Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6454049Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6454121Z         try:
2025-02-25T14:20:45.6454263Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6454341Z         except KeyError:
2025-02-25T14:20:45.6454485Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6454559Z     
2025-02-25T14:20:45.6454645Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6454742Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6454829Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6454963Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6455048Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6455146Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6455253Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6455262Z 
2025-02-25T14:20:45.6455391Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6455506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6455660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6455743Z     ???
2025-02-25T14:20:45.6455850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6455854Z 
2025-02-25T14:20:45.6455931Z >   ???
2025-02-25T14:20:45.6456057Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6456132Z E   
2025-02-25T14:20:45.6456257Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6456372Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6456444Z E          ...
2025-02-25T14:20:45.6456541Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6456675Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6456880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6456958Z E          ...
2025-02-25T14:20:45.6457043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6457177Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6457280Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6457284Z 
2025-02-25T14:20:45.6457381Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6457608Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-25T14:20:45.6457613Z 
2025-02-25T14:20:45.6457745Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6457875Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6457974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6458109Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6458238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6458338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6458412Z err_msg = None
2025-02-25T14:20:45.6458416Z 
2025-02-25T14:20:45.6458531Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6458610Z         if err_msg is None:
2025-02-25T14:20:45.6458709Z             if left.shape != right.shape:
2025-02-25T14:20:45.6458798Z                 raise_assert_detail(
2025-02-25T14:20:45.6458941Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6459018Z                 )
2025-02-25T14:20:45.6459087Z     
2025-02-25T14:20:45.6459175Z             diff = 0
2025-02-25T14:20:45.6459398Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6459494Z                 # count up differences
2025-02-25T14:20:45.6459671Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6459753Z                     diff += 1
2025-02-25T14:20:45.6459819Z     
2025-02-25T14:20:45.6459912Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6460049Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6460223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6460340Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6460411Z E           
2025-02-25T14:20:45.6460641Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6460903Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6461181Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6461187Z 
2025-02-25T14:20:45.6461490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6461495Z 
2025-02-25T14:20:45.6461659Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6461664Z 
2025-02-25T14:20:45.6461888Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3440>
2025-02-25T14:20:45.6462052Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6462140Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6462145Z 
2025-02-25T14:20:45.6462410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6462523Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6462613Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6462683Z         try:
2025-02-25T14:20:45.6462832Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6462911Z         except KeyError:
2025-02-25T14:20:45.6463054Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6463123Z     
2025-02-25T14:20:45.6463216Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6463307Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6463400Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6463533Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6463623Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6463723Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6463836Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6463848Z 
2025-02-25T14:20:45.6463977Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6464091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6464246Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6464373Z     ???
2025-02-25T14:20:45.6464573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6464580Z 
2025-02-25T14:20:45.6464693Z >   ???
2025-02-25T14:20:45.6464915Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6465033Z E   
2025-02-25T14:20:45.6465252Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6465403Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6465475Z E          ...
2025-02-25T14:20:45.6465709Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6465840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6465966Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6466036Z E          ...
2025-02-25T14:20:45.6466125Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6466247Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6466357Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6466362Z 
2025-02-25T14:20:45.6466458Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6466665Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-25T14:20:45.6466670Z 
2025-02-25T14:20:45.6466802Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6466934Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6467044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6467179Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6467311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6467408Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6467483Z err_msg = None
2025-02-25T14:20:45.6467488Z 
2025-02-25T14:20:45.6467602Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6467683Z         if err_msg is None:
2025-02-25T14:20:45.6467783Z             if left.shape != right.shape:
2025-02-25T14:20:45.6467869Z                 raise_assert_detail(
2025-02-25T14:20:45.6468022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6468093Z                 )
2025-02-25T14:20:45.6468167Z     
2025-02-25T14:20:45.6468238Z             diff = 0
2025-02-25T14:20:45.6468364Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6468458Z                 # count up differences
2025-02-25T14:20:45.6468720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6468806Z                     diff += 1
2025-02-25T14:20:45.6468876Z     
2025-02-25T14:20:45.6468970Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6469106Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6469282Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6469394Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6469473Z E           
2025-02-25T14:20:45.6469586Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6469852Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6470129Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6470135Z 
2025-02-25T14:20:45.6470439Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6470444Z 
2025-02-25T14:20:45.6470834Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6470841Z 
2025-02-25T14:20:45.6471074Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3500>
2025-02-25T14:20:45.6471275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>, attr = 'f_lu'
2025-02-25T14:20:45.6471411Z 
2025-02-25T14:20:45.6471562Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6471677Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6471770Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6471841Z         try:
2025-02-25T14:20:45.6471988Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6472067Z         except KeyError:
2025-02-25T14:20:45.6472213Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6472285Z     
2025-02-25T14:20:45.6472371Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6472474Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6472561Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6472696Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6472780Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6472884Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6472991Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6473003Z 
2025-02-25T14:20:45.6473131Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6473245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6473398Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6473474Z     ???
2025-02-25T14:20:45.6473583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6473588Z 
2025-02-25T14:20:45.6473659Z >   ???
2025-02-25T14:20:45.6473784Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6473860Z E   
2025-02-25T14:20:45.6473984Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6474103Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6474173Z E          ...
2025-02-25T14:20:45.6474274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6474402Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6474643Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6474717Z E          ...
2025-02-25T14:20:45.6474803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6474929Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6475033Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6475037Z 
2025-02-25T14:20:45.6475132Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6475352Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-25T14:20:45.6475357Z 
2025-02-25T14:20:45.6475485Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6475613Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6475750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6475885Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6476013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6476113Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6476185Z err_msg = None
2025-02-25T14:20:45.6476190Z 
2025-02-25T14:20:45.6476301Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6476386Z         if err_msg is None:
2025-02-25T14:20:45.6476487Z             if left.shape != right.shape:
2025-02-25T14:20:45.6476571Z                 raise_assert_detail(
2025-02-25T14:20:45.6476721Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6476800Z                 )
2025-02-25T14:20:45.6476872Z     
2025-02-25T14:20:45.6476949Z             diff = 0
2025-02-25T14:20:45.6477158Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6477252Z                 # count up differences
2025-02-25T14:20:45.6477430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6477514Z                     diff += 1
2025-02-25T14:20:45.6477585Z     
2025-02-25T14:20:45.6477684Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6477825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6477997Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6478113Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6478185Z E           
2025-02-25T14:20:45.6478300Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6478561Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6478842Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6478847Z 
2025-02-25T14:20:45.6479155Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6479160Z 
2025-02-25T14:20:45.6479327Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6479331Z 
2025-02-25T14:20:45.6479560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3c80>
2025-02-25T14:20:45.6479727Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6479819Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6479930Z 
2025-02-25T14:20:45.6480069Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6480185Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6480273Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6480342Z         try:
2025-02-25T14:20:45.6480489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6480672Z         except KeyError:
2025-02-25T14:20:45.6480816Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6480885Z     
2025-02-25T14:20:45.6480976Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6481068Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6481162Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6481291Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6481382Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6481482Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6481592Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6481676Z             else:
2025-02-25T14:20:45.6481771Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6481887Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6481891Z 
2025-02-25T14:20:45.6482012Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6482133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6482278Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6482355Z     ???
2025-02-25T14:20:45.6482461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6482474Z 
2025-02-25T14:20:45.6482543Z >   ???
2025-02-25T14:20:45.6482670Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6482870Z E   
2025-02-25T14:20:45.6483003Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6483114Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6483200Z E          ...
2025-02-25T14:20:45.6483287Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6483438Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6483636Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6483768Z E          ...
2025-02-25T14:20:45.6483910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6484127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6484307Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6484314Z 
2025-02-25T14:20:45.6484465Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6484721Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-25T14:20:45.6484727Z 
2025-02-25T14:20:45.6484863Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6485002Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6485097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6485236Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6485363Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6485455Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6485537Z err_msg = None
2025-02-25T14:20:45.6485542Z 
2025-02-25T14:20:45.6485646Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6485734Z         if err_msg is None:
2025-02-25T14:20:45.6485828Z             if left.shape != right.shape:
2025-02-25T14:20:45.6485919Z                 raise_assert_detail(
2025-02-25T14:20:45.6486067Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6486145Z                 )
2025-02-25T14:20:45.6486352Z     
2025-02-25T14:20:45.6486433Z             diff = 0
2025-02-25T14:20:45.6486550Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6486636Z                 # count up differences
2025-02-25T14:20:45.6486813Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6486890Z                     diff += 1
2025-02-25T14:20:45.6486964Z     
2025-02-25T14:20:45.6487053Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6487195Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6487361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6487482Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6487554Z E           
2025-02-25T14:20:45.6487677Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6487946Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6488214Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6488220Z 
2025-02-25T14:20:45.6488525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6488530Z 
2025-02-25T14:20:45.6488700Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6488788Z 
2025-02-25T14:20:45.6489009Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3d40>
2025-02-25T14:20:45.6489180Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6489259Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6489263Z 
2025-02-25T14:20:45.6489406Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6489519Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6489607Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6489678Z         try:
2025-02-25T14:20:45.6489824Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6489912Z         except KeyError:
2025-02-25T14:20:45.6490046Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6490121Z     
2025-02-25T14:20:45.6490205Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6490303Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6490397Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6490720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6490823Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6490923Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6491033Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6491110Z             else:
2025-02-25T14:20:45.6491210Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6491317Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6491322Z 
2025-02-25T14:20:45.6491452Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6491561Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6491714Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6491783Z     ???
2025-02-25T14:20:45.6491900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6491911Z 
2025-02-25T14:20:45.6491981Z >   ???
2025-02-25T14:20:45.6492338Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6492408Z E   
2025-02-25T14:20:45.6492547Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6492660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6492731Z E          ...
2025-02-25T14:20:45.6492822Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6492948Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6493064Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6493135Z E          ...
2025-02-25T14:20:45.6493225Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6493346Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6493454Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6493463Z 
2025-02-25T14:20:45.6493557Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6493763Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-25T14:20:45.6493778Z 
2025-02-25T14:20:45.6493910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6494039Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6494139Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6494270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6494398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6494491Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6494575Z err_msg = None
2025-02-25T14:20:45.6494579Z 
2025-02-25T14:20:45.6494691Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6494903Z         if err_msg is None:
2025-02-25T14:20:45.6495002Z             if left.shape != right.shape:
2025-02-25T14:20:45.6495092Z                 raise_assert_detail(
2025-02-25T14:20:45.6495238Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6495310Z                 )
2025-02-25T14:20:45.6495382Z     
2025-02-25T14:20:45.6495454Z             diff = 0
2025-02-25T14:20:45.6495570Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6495658Z                 # count up differences
2025-02-25T14:20:45.6495833Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6495916Z                     diff += 1
2025-02-25T14:20:45.6495985Z     
2025-02-25T14:20:45.6496081Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6496218Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6496403Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6496512Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6496593Z E           
2025-02-25T14:20:45.6496704Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6496974Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6497243Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6497253Z 
2025-02-25T14:20:45.6497566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6497657Z 
2025-02-25T14:20:45.6497844Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6497848Z 
2025-02-25T14:20:45.6498091Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6b3ec0>
2025-02-25T14:20:45.6498257Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89f0b3c8c0>
2025-02-25T14:20:45.6498348Z attr = 'j_blues'
2025-02-25T14:20:45.6498352Z 
2025-02-25T14:20:45.6498494Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6498618Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6498705Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6498792Z         try:
2025-02-25T14:20:45.6498931Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6499027Z         except KeyError:
2025-02-25T14:20:45.6499172Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6499252Z     
2025-02-25T14:20:45.6499361Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6499458Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6499556Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6499688Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6499788Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6499878Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6499996Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6500067Z             else:
2025-02-25T14:20:45.6500167Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6500273Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6500277Z 
2025-02-25T14:20:45.6500411Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6500640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6500918Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6501001Z     ???
2025-02-25T14:20:45.6501109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6501114Z 
2025-02-25T14:20:45.6501188Z >   ???
2025-02-25T14:20:45.6501310Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6501384Z E   
2025-02-25T14:20:45.6501507Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6501626Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6501698Z E          ...
2025-02-25T14:20:45.6501790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6501923Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6502036Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6502115Z E          ...
2025-02-25T14:20:45.6502207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6502336Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6502441Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6502446Z 
2025-02-25T14:20:45.6502539Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6502745Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-25T14:20:45.6502750Z 
2025-02-25T14:20:45.6502886Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6503020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6503166Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6503407Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6503619Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6503792Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6504111Z err_msg = None
2025-02-25T14:20:45.6504121Z 
2025-02-25T14:20:45.6504255Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6504347Z         if err_msg is None:
2025-02-25T14:20:45.6504442Z             if left.shape != right.shape:
2025-02-25T14:20:45.6504536Z                 raise_assert_detail(
2025-02-25T14:20:45.6504682Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6504760Z                 )
2025-02-25T14:20:45.6504828Z     
2025-02-25T14:20:45.6504907Z             diff = 0
2025-02-25T14:20:45.6505020Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6505116Z                 # count up differences
2025-02-25T14:20:45.6505291Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6505375Z                     diff += 1
2025-02-25T14:20:45.6505451Z     
2025-02-25T14:20:45.6505548Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6505698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6505868Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6505983Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6506055Z E           
2025-02-25T14:20:45.6506175Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6506432Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6506699Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6506803Z 
2025-02-25T14:20:45.6507120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6507125Z 
2025-02-25T14:20:45.6507294Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6507299Z 
2025-02-25T14:20:45.6507528Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dcc80>
2025-02-25T14:20:45.6507692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6507773Z attr = 'lines'
2025-02-25T14:20:45.6507777Z 
2025-02-25T14:20:45.6507920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6508035Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6508130Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6508204Z         try:
2025-02-25T14:20:45.6508353Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6508438Z         except KeyError:
2025-02-25T14:20:45.6508577Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6508645Z     
2025-02-25T14:20:45.6508738Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6508832Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6508930Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6509068Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6509153Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6509247Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6509358Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6509436Z             else:
2025-02-25T14:20:45.6509531Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6509648Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6509653Z 
2025-02-25T14:20:45.6509775Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6509993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6510140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6510216Z     ???
2025-02-25T14:20:45.6510330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6510334Z 
2025-02-25T14:20:45.6510402Z >   ???
2025-02-25T14:20:45.6510704Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6510795Z E   
2025-02-25T14:20:45.6510931Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6511041Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6511119Z E          ...
2025-02-25T14:20:45.6511208Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6511353Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6511465Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6511548Z E          ...
2025-02-25T14:20:45.6511642Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6511771Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6511884Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6511889Z 
2025-02-25T14:20:45.6511975Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6512242Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-25T14:20:45.6512247Z 
2025-02-25T14:20:45.6512468Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dcd40>
2025-02-25T14:20:45.6512638Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6512728Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6512733Z 
2025-02-25T14:20:45.6513020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6513137Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6513226Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6513301Z         try:
2025-02-25T14:20:45.6513443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6513530Z         except KeyError:
2025-02-25T14:20:45.6513664Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6513738Z     
2025-02-25T14:20:45.6513823Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6513919Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6514008Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6514143Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6514233Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6514322Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6514434Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6514443Z 
2025-02-25T14:20:45.6514563Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6514685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6514690Z 
2025-02-25T14:20:45.6514824Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6514915Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6515028Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6515109Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6515253Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6515338Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6515447Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6515524Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6515611Z err_msg = None
2025-02-25T14:20:45.6515615Z 
2025-02-25T14:20:45.6515722Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6515937Z         if err_msg is None:
2025-02-25T14:20:45.6516031Z             if left.shape != right.shape:
2025-02-25T14:20:45.6516122Z                 raise_assert_detail(
2025-02-25T14:20:45.6516271Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6516340Z                 )
2025-02-25T14:20:45.6516412Z     
2025-02-25T14:20:45.6516483Z             diff = 0
2025-02-25T14:20:45.6516598Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6516683Z                 # count up differences
2025-02-25T14:20:45.6516859Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6516936Z                     diff += 1
2025-02-25T14:20:45.6517009Z     
2025-02-25T14:20:45.6517096Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6517247Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6517423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6517532Z E           AssertionError: Series are different
2025-02-25T14:20:45.6517609Z E           
2025-02-25T14:20:45.6517710Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6518087Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6518418Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6518870Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6518877Z 
2025-02-25T14:20:45.6519187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6519451Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-25T14:20:45.6519464Z 
2025-02-25T14:20:45.6519685Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dce00>
2025-02-25T14:20:45.6519858Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6519953Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6519958Z 
2025-02-25T14:20:45.6520097Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6520213Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6520303Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6520376Z         try:
2025-02-25T14:20:45.6520661Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6520804Z         except KeyError:
2025-02-25T14:20:45.6521044Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6521163Z     
2025-02-25T14:20:45.6521309Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6521467Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6521620Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6521791Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6521875Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6522109Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6522219Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6522224Z 
2025-02-25T14:20:45.6522353Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6522466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6522475Z 
2025-02-25T14:20:45.6522611Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6522703Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6522811Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6522898Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6523036Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6523131Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6523234Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6523327Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6523401Z err_msg = None
2025-02-25T14:20:45.6523410Z 
2025-02-25T14:20:45.6523519Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6523604Z         if err_msg is None:
2025-02-25T14:20:45.6523695Z             if left.shape != right.shape:
2025-02-25T14:20:45.6523786Z                 raise_assert_detail(
2025-02-25T14:20:45.6523927Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6524004Z                 )
2025-02-25T14:20:45.6524069Z     
2025-02-25T14:20:45.6524148Z             diff = 0
2025-02-25T14:20:45.6524259Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6524351Z                 # count up differences
2025-02-25T14:20:45.6524519Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6524742Z                     diff += 1
2025-02-25T14:20:45.6524819Z     
2025-02-25T14:20:45.6524904Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6525043Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6525210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6525318Z E           AssertionError: Series are different
2025-02-25T14:20:45.6525387Z E           
2025-02-25T14:20:45.6525493Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6525867Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6526246Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6526633Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6526639Z 
2025-02-25T14:20:45.6526949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6527236Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-25T14:20:45.6527241Z 
2025-02-25T14:20:45.6527373Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6527501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6527604Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6527736Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6527863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6527961Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6528036Z err_msg = None
2025-02-25T14:20:45.6528040Z 
2025-02-25T14:20:45.6528159Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6528240Z         if err_msg is None:
2025-02-25T14:20:45.6528349Z             if left.shape != right.shape:
2025-02-25T14:20:45.6528432Z                 raise_assert_detail(
2025-02-25T14:20:45.6528575Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6528649Z                 )
2025-02-25T14:20:45.6528722Z     
2025-02-25T14:20:45.6528793Z             diff = 0
2025-02-25T14:20:45.6528910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6529001Z                 # count up differences
2025-02-25T14:20:45.6529169Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6529253Z                     diff += 1
2025-02-25T14:20:45.6529325Z     
2025-02-25T14:20:45.6529417Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6529547Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6529812Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6529931Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6530007Z E           
2025-02-25T14:20:45.6530117Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6530386Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6530885Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6530899Z 
2025-02-25T14:20:45.6531199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6531208Z 
2025-02-25T14:20:45.6531382Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6531386Z 
2025-02-25T14:20:45.6531610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd040>
2025-02-25T14:20:45.6531809Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>, attr = 'nu'
2025-02-25T14:20:45.6531813Z 
2025-02-25T14:20:45.6531954Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6532067Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6532156Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6532226Z         try:
2025-02-25T14:20:45.6532371Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6532451Z         except KeyError:
2025-02-25T14:20:45.6532601Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6532676Z     
2025-02-25T14:20:45.6532895Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6532994Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6533082Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6533220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6533306Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6533399Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6533512Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6533517Z 
2025-02-25T14:20:45.6533644Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6533758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6533911Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6533985Z     ???
2025-02-25T14:20:45.6534099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6534104Z 
2025-02-25T14:20:45.6534186Z >   ???
2025-02-25T14:20:45.6534311Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6534383Z E   
2025-02-25T14:20:45.6534509Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6534623Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6534695Z E          ...
2025-02-25T14:20:45.6534787Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6534923Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6535035Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6535110Z E          ...
2025-02-25T14:20:45.6535194Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6535322Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6535426Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6535548Z 
2025-02-25T14:20:45.6535645Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6535880Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-25T14:20:45.6535885Z 
2025-02-25T14:20:45.6536015Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6536148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6536245Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6536383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6536508Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6536604Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6536680Z err_msg = None
2025-02-25T14:20:45.6536684Z 
2025-02-25T14:20:45.6536799Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6536891Z         if err_msg is None:
2025-02-25T14:20:45.6537003Z             if left.shape != right.shape:
2025-02-25T14:20:45.6537091Z                 raise_assert_detail(
2025-02-25T14:20:45.6537232Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6537307Z                 )
2025-02-25T14:20:45.6537376Z     
2025-02-25T14:20:45.6537454Z             diff = 0
2025-02-25T14:20:45.6537564Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6537655Z                 # count up differences
2025-02-25T14:20:45.6537821Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6537906Z                     diff += 1
2025-02-25T14:20:45.6537973Z     
2025-02-25T14:20:45.6538063Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6538198Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6538376Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6538582Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6538654Z E           
2025-02-25T14:20:45.6538772Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6539030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6539298Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6539307Z 
2025-02-25T14:20:45.6539607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6539616Z 
2025-02-25T14:20:45.6539783Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6539788Z 
2025-02-25T14:20:45.6540014Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd100>
2025-02-25T14:20:45.6540175Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6540262Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6540266Z 
2025-02-25T14:20:45.6540406Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6540634Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6540727Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6540798Z         try:
2025-02-25T14:20:45.6541662Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6541973Z         except KeyError:
2025-02-25T14:20:45.6542197Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6542306Z     
2025-02-25T14:20:45.6542513Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6542686Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6542847Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6543060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6543183Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6543373Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6543554Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6543559Z 
2025-02-25T14:20:45.6543757Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6543915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6544136Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6544231Z     ???
2025-02-25T14:20:45.6544492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6544501Z 
2025-02-25T14:20:45.6544637Z >   ???
2025-02-25T14:20:45.6544800Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6544933Z E   
2025-02-25T14:20:45.6545078Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6545324Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6552966Z E          ...
2025-02-25T14:20:45.6553193Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6553428Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6553623Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6553752Z E          ...
2025-02-25T14:20:45.6553901Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6554123Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6554316Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6554323Z 
2025-02-25T14:20:45.6554491Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6555096Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-25T14:20:45.6555105Z 
2025-02-25T14:20:45.6555328Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6555557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6555717Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6555954Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6556171Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6556351Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6556447Z err_msg = None
2025-02-25T14:20:45.6556459Z 
2025-02-25T14:20:45.6556583Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6556675Z         if err_msg is None:
2025-02-25T14:20:45.6556784Z             if left.shape != right.shape:
2025-02-25T14:20:45.6556877Z                 raise_assert_detail(
2025-02-25T14:20:45.6557031Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6557111Z                 )
2025-02-25T14:20:45.6557180Z     
2025-02-25T14:20:45.6557262Z             diff = 0
2025-02-25T14:20:45.6557380Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6557478Z                 # count up differences
2025-02-25T14:20:45.6557653Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6557740Z                     diff += 1
2025-02-25T14:20:45.6557814Z     
2025-02-25T14:20:45.6557904Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6558052Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6558359Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6558489Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6558563Z E           
2025-02-25T14:20:45.6558683Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6558948Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6559219Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6559229Z 
2025-02-25T14:20:45.6559558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6559566Z 
2025-02-25T14:20:45.6559738Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6559743Z 
2025-02-25T14:20:45.6559974Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd1c0>
2025-02-25T14:20:45.6560182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>, attr = 'f_lu'
2025-02-25T14:20:45.6560188Z 
2025-02-25T14:20:45.6560325Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6560452Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6560674Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6560757Z         try:
2025-02-25T14:20:45.6560899Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6560992Z         except KeyError:
2025-02-25T14:20:45.6561138Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6561339Z     
2025-02-25T14:20:45.6561431Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6561536Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6561637Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6561769Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6561860Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6561951Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6562069Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6562074Z 
2025-02-25T14:20:45.6562201Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6562323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6562470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6562548Z     ???
2025-02-25T14:20:45.6562670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6562679Z 
2025-02-25T14:20:45.6562748Z >   ???
2025-02-25T14:20:45.6562880Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6562948Z E   
2025-02-25T14:20:45.6563081Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6563189Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6563266Z E          ...
2025-02-25T14:20:45.6563353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6563491Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6563601Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6563681Z E          ...
2025-02-25T14:20:45.6563771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6563892Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6564133Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6564138Z 
2025-02-25T14:20:45.6564228Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6564469Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-25T14:20:45.6564475Z 
2025-02-25T14:20:45.6564602Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6564742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6564840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6564978Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6565110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6565203Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6565284Z err_msg = None
2025-02-25T14:20:45.6565292Z 
2025-02-25T14:20:45.6565405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6565492Z         if err_msg is None:
2025-02-25T14:20:45.6565592Z             if left.shape != right.shape:
2025-02-25T14:20:45.6565683Z                 raise_assert_detail(
2025-02-25T14:20:45.6565827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6565906Z                 )
2025-02-25T14:20:45.6565980Z     
2025-02-25T14:20:45.6566052Z             diff = 0
2025-02-25T14:20:45.6566169Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6566255Z                 # count up differences
2025-02-25T14:20:45.6566431Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6566509Z                     diff += 1
2025-02-25T14:20:45.6566582Z     
2025-02-25T14:20:45.6566670Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6566811Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6566985Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6567205Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6567284Z E           
2025-02-25T14:20:45.6567391Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6567663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6567929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6567940Z 
2025-02-25T14:20:45.6568268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6568278Z 
2025-02-25T14:20:45.6568466Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6568470Z 
2025-02-25T14:20:45.6568709Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dd940>
2025-02-25T14:20:45.6568885Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6568967Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6568972Z 
2025-02-25T14:20:45.6569121Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6569242Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6569337Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6569419Z         try:
2025-02-25T14:20:45.6569564Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6569764Z         except KeyError:
2025-02-25T14:20:45.6569903Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6569981Z     
2025-02-25T14:20:45.6570069Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6570169Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6570259Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6570403Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6570490Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6570710Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6570824Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6570903Z             else:
2025-02-25T14:20:45.6571005Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6571113Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6571118Z 
2025-02-25T14:20:45.6571255Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6571380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6571539Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6571610Z     ???
2025-02-25T14:20:45.6571727Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6571731Z 
2025-02-25T14:20:45.6571799Z >   ???
2025-02-25T14:20:45.6571935Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6572007Z E   
2025-02-25T14:20:45.6572130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6572241Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6572313Z E          ...
2025-02-25T14:20:45.6572411Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6572542Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6572664Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6572740Z E          ...
2025-02-25T14:20:45.6572838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6573090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6573209Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6573214Z 
2025-02-25T14:20:45.6573313Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6573546Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-25T14:20:45.6573551Z 
2025-02-25T14:20:45.6573691Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6573823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6573928Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6574063Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6574196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6574303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6574382Z err_msg = None
2025-02-25T14:20:45.6574387Z 
2025-02-25T14:20:45.6574508Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6574591Z         if err_msg is None:
2025-02-25T14:20:45.6574694Z             if left.shape != right.shape:
2025-02-25T14:20:45.6574778Z                 raise_assert_detail(
2025-02-25T14:20:45.6574927Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6574999Z                 )
2025-02-25T14:20:45.6575072Z     
2025-02-25T14:20:45.6575143Z             diff = 0
2025-02-25T14:20:45.6575261Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6575354Z                 # count up differences
2025-02-25T14:20:45.6575522Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6575732Z                     diff += 1
2025-02-25T14:20:45.6575802Z     
2025-02-25T14:20:45.6575899Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6576114Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6576431Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6576627Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6576756Z E           
2025-02-25T14:20:45.6576943Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6577422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6577899Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6577927Z 
2025-02-25T14:20:45.6578453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6578461Z 
2025-02-25T14:20:45.6578754Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6578761Z 
2025-02-25T14:20:45.6579151Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dda00>
2025-02-25T14:20:45.6579435Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6579575Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6579582Z 
2025-02-25T14:20:45.6579805Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6579932Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6580023Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6580105Z         try:
2025-02-25T14:20:45.6580378Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6580468Z         except KeyError:
2025-02-25T14:20:45.6580816Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6580890Z     
2025-02-25T14:20:45.6580988Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6581084Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6581182Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6581315Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6581411Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6581503Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6581621Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6581694Z             else:
2025-02-25T14:20:45.6581796Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6581908Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6581928Z 
2025-02-25T14:20:45.6582054Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6582175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6582319Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6582398Z     ???
2025-02-25T14:20:45.6582512Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6582516Z 
2025-02-25T14:20:45.6582591Z >   ???
2025-02-25T14:20:45.6582720Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6582798Z E   
2025-02-25T14:20:45.6582930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6583047Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6583125Z E          ...
2025-02-25T14:20:45.6583214Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6583488Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6583604Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6583683Z E          ...
2025-02-25T14:20:45.6583769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6583901Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6584004Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6584009Z 
2025-02-25T14:20:45.6584103Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6584369Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-25T14:20:45.6584388Z 
2025-02-25T14:20:45.6584613Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6584843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6585013Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6585245Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6585466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6585587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6585662Z err_msg = None
2025-02-25T14:20:45.6585674Z 
2025-02-25T14:20:45.6585784Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6585871Z         if err_msg is None:
2025-02-25T14:20:45.6585968Z             if left.shape != right.shape:
2025-02-25T14:20:45.6586060Z                 raise_assert_detail(
2025-02-25T14:20:45.6586206Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6586288Z                 )
2025-02-25T14:20:45.6586674Z     
2025-02-25T14:20:45.6586752Z             diff = 0
2025-02-25T14:20:45.6586864Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6586965Z                 # count up differences
2025-02-25T14:20:45.6587282Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6587366Z                     diff += 1
2025-02-25T14:20:45.6587439Z     
2025-02-25T14:20:45.6587529Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6587674Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6587844Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6587960Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6588031Z E           
2025-02-25T14:20:45.6588150Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6588409Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6588687Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6588693Z 
2025-02-25T14:20:45.6589001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6589006Z 
2025-02-25T14:20:45.6589173Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6589177Z 
2025-02-25T14:20:45.6589404Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6ddb80>
2025-02-25T14:20:45.6589576Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89e86148f0>
2025-02-25T14:20:45.6589742Z attr = 'j_blues'
2025-02-25T14:20:45.6589747Z 
2025-02-25T14:20:45.6589889Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6590010Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6590104Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6590175Z         try:
2025-02-25T14:20:45.6590323Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6590406Z         except KeyError:
2025-02-25T14:20:45.6590747Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6590840Z     
2025-02-25T14:20:45.6590939Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6591041Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6591130Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6591269Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6591354Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6591456Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6591565Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6591649Z             else:
2025-02-25T14:20:45.6591744Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6591857Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6591862Z 
2025-02-25T14:20:45.6591986Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6592104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6592257Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6592327Z     ???
2025-02-25T14:20:45.6592441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6592446Z 
2025-02-25T14:20:45.6592515Z >   ???
2025-02-25T14:20:45.6592647Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6592717Z E   
2025-02-25T14:20:45.6592854Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6592965Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6593189Z E          ...
2025-02-25T14:20:45.6593276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6593411Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6593527Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6593597Z E          ...
2025-02-25T14:20:45.6593687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6593807Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6593916Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6593921Z 
2025-02-25T14:20:45.6594009Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6594219Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-25T14:20:45.6594224Z 
2025-02-25T14:20:45.6594350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6594492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6594600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6594729Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6594858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6594950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6595029Z err_msg = None
2025-02-25T14:20:45.6595033Z 
2025-02-25T14:20:45.6595144Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6595230Z         if err_msg is None:
2025-02-25T14:20:45.6595336Z             if left.shape != right.shape:
2025-02-25T14:20:45.6595423Z                 raise_assert_detail(
2025-02-25T14:20:45.6595576Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6595787Z                 )
2025-02-25T14:20:45.6595865Z     
2025-02-25T14:20:45.6595938Z             diff = 0
2025-02-25T14:20:45.6596052Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6596140Z                 # count up differences
2025-02-25T14:20:45.6596315Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6596393Z                     diff += 1
2025-02-25T14:20:45.6596466Z     
2025-02-25T14:20:45.6596555Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6596698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6596870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6596981Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6597058Z E           
2025-02-25T14:20:45.6597171Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6597443Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6597707Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6597718Z 
2025-02-25T14:20:45.6598018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6598023Z 
2025-02-25T14:20:45.6598197Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6598205Z 
2025-02-25T14:20:45.6598425Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6de900>
2025-02-25T14:20:45.6598685Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6598759Z attr = 'lines'
2025-02-25T14:20:45.6598766Z 
2025-02-25T14:20:45.6598912Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6599027Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6599111Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6599186Z         try:
2025-02-25T14:20:45.6599326Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6599411Z         except KeyError:
2025-02-25T14:20:45.6599545Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6599617Z     
2025-02-25T14:20:45.6599703Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6599800Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6599893Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6600028Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6600125Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6600214Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6600326Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6600399Z             else:
2025-02-25T14:20:45.6600496Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6600759Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6600763Z 
2025-02-25T14:20:45.6600890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6601001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6601151Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6601220Z     ???
2025-02-25T14:20:45.6601333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6601461Z 
2025-02-25T14:20:45.6601536Z >   ???
2025-02-25T14:20:45.6601662Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6601739Z E   
2025-02-25T14:20:45.6601865Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6601978Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6602050Z E          ...
2025-02-25T14:20:45.6602146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6602272Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6602390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6602459Z E          ...
2025-02-25T14:20:45.6602548Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6602676Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6602779Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6602783Z 
2025-02-25T14:20:45.6602878Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6603138Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-25T14:20:45.6603147Z 
2025-02-25T14:20:45.6603375Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6de9c0>
2025-02-25T14:20:45.6603633Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6603794Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6603803Z 
2025-02-25T14:20:45.6604053Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6604251Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6604400Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6604519Z         try:
2025-02-25T14:20:45.6604770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6604905Z         except KeyError:
2025-02-25T14:20:45.6605151Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6605277Z     
2025-02-25T14:20:45.6605433Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6605591Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6605922Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6606159Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6606304Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6606460Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6606645Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6606653Z 
2025-02-25T14:20:45.6606870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6607061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6607069Z 
2025-02-25T14:20:45.6607299Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6607387Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6607500Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6607594Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6607742Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6607829Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6607931Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6608014Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6608090Z err_msg = None
2025-02-25T14:20:45.6608094Z 
2025-02-25T14:20:45.6608207Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6608288Z         if err_msg is None:
2025-02-25T14:20:45.6608390Z             if left.shape != right.shape:
2025-02-25T14:20:45.6608473Z                 raise_assert_detail(
2025-02-25T14:20:45.6608622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6608698Z                 )
2025-02-25T14:20:45.6608899Z     
2025-02-25T14:20:45.6609002Z             diff = 0
2025-02-25T14:20:45.6609113Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6609209Z                 # count up differences
2025-02-25T14:20:45.6609377Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6609458Z                     diff += 1
2025-02-25T14:20:45.6609523Z     
2025-02-25T14:20:45.6609613Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6609748Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6609923Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6610031Z E           AssertionError: Series are different
2025-02-25T14:20:45.6610101Z E           
2025-02-25T14:20:45.6610206Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6610696Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6611049Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6611388Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6611518Z 
2025-02-25T14:20:45.6611838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6612114Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-25T14:20:45.6612120Z 
2025-02-25T14:20:45.6612357Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dea80>
2025-02-25T14:20:45.6612527Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6612619Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6612624Z 
2025-02-25T14:20:45.6612761Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6612880Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6612964Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6613039Z         try:
2025-02-25T14:20:45.6613187Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6613276Z         except KeyError:
2025-02-25T14:20:45.6613414Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6613486Z     
2025-02-25T14:20:45.6613578Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6613670Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6613764Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6613896Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6613983Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6614070Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6614184Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6614189Z 
2025-02-25T14:20:45.6614314Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6614433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6614555Z 
2025-02-25T14:20:45.6614702Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6614792Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6614902Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6614983Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6615125Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6615206Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6615312Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6615391Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6615470Z err_msg = None
2025-02-25T14:20:45.6615474Z 
2025-02-25T14:20:45.6615587Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6615666Z         if err_msg is None:
2025-02-25T14:20:45.6615763Z             if left.shape != right.shape:
2025-02-25T14:20:45.6615853Z                 raise_assert_detail(
2025-02-25T14:20:45.6616001Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6616074Z                 )
2025-02-25T14:20:45.6616142Z     
2025-02-25T14:20:45.6616214Z             diff = 0
2025-02-25T14:20:45.6616328Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6616413Z                 # count up differences
2025-02-25T14:20:45.6616593Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6616687Z                     diff += 1
2025-02-25T14:20:45.6616760Z     
2025-02-25T14:20:45.6616851Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6616987Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6617164Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6617266Z E           AssertionError: Series are different
2025-02-25T14:20:45.6617346Z E           
2025-02-25T14:20:45.6617448Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6617949Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6618329Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6618711Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6618727Z 
2025-02-25T14:20:45.6619029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6619238Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-25T14:20:45.6619243Z 
2025-02-25T14:20:45.6619369Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6619500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6619683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6619820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6619946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6620045Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6620123Z err_msg = None
2025-02-25T14:20:45.6620128Z 
2025-02-25T14:20:45.6620234Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6620325Z         if err_msg is None:
2025-02-25T14:20:45.6620417Z             if left.shape != right.shape:
2025-02-25T14:20:45.6620600Z                 raise_assert_detail(
2025-02-25T14:20:45.6620745Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6620821Z                 )
2025-02-25T14:20:45.6620887Z     
2025-02-25T14:20:45.6620962Z             diff = 0
2025-02-25T14:20:45.6621077Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6621171Z                 # count up differences
2025-02-25T14:20:45.6621346Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6621421Z                     diff += 1
2025-02-25T14:20:45.6621493Z     
2025-02-25T14:20:45.6621576Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6621713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6621877Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6621993Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6622063Z E           
2025-02-25T14:20:45.6622180Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6622436Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6623108Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6623120Z 
2025-02-25T14:20:45.6623646Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6623653Z 
2025-02-25T14:20:45.6623880Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6623892Z 
2025-02-25T14:20:45.6624116Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6decc0>
2025-02-25T14:20:45.6624317Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>, attr = 'nu'
2025-02-25T14:20:45.6624329Z 
2025-02-25T14:20:45.6624466Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6624595Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6624679Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6624753Z         try:
2025-02-25T14:20:45.6624891Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6624977Z         except KeyError:
2025-02-25T14:20:45.6625111Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6625181Z     
2025-02-25T14:20:45.6625273Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6625368Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6625459Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6625588Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6625678Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6625900Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6626014Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6626027Z 
2025-02-25T14:20:45.6626149Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6626270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6626420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6626491Z     ???
2025-02-25T14:20:45.6626606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6626610Z 
2025-02-25T14:20:45.6626676Z >   ???
2025-02-25T14:20:45.6626806Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6626872Z E   
2025-02-25T14:20:45.6627003Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6627113Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6627190Z E          ...
2025-02-25T14:20:45.6627281Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6627414Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6627537Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6627609Z E          ...
2025-02-25T14:20:45.6627700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6627824Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6627936Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6627940Z 
2025-02-25T14:20:45.6628029Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6628268Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-25T14:20:45.6628274Z 
2025-02-25T14:20:45.6628399Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6628531Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6628636Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6628763Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6628989Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6629082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6629164Z err_msg = None
2025-02-25T14:20:45.6629168Z 
2025-02-25T14:20:45.6629276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6629361Z         if err_msg is None:
2025-02-25T14:20:45.6629453Z             if left.shape != right.shape:
2025-02-25T14:20:45.6629543Z                 raise_assert_detail(
2025-02-25T14:20:45.6629698Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6629766Z                 )
2025-02-25T14:20:45.6629837Z     
2025-02-25T14:20:45.6629909Z             diff = 0
2025-02-25T14:20:45.6630030Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6630117Z                 # count up differences
2025-02-25T14:20:45.6630297Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6630374Z                     diff += 1
2025-02-25T14:20:45.6630446Z     
2025-02-25T14:20:45.6630723Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6630895Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6631064Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6631178Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6631251Z E           
2025-02-25T14:20:45.6631361Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6631622Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6632018Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6632032Z 
2025-02-25T14:20:45.6632329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6632333Z 
2025-02-25T14:20:45.6632505Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6632510Z 
2025-02-25T14:20:45.6632728Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6ded80>
2025-02-25T14:20:45.6632898Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6632981Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6632986Z 
2025-02-25T14:20:45.6633130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6633250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6633332Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6633406Z         try:
2025-02-25T14:20:45.6633545Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6633635Z         except KeyError:
2025-02-25T14:20:45.6633769Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6633843Z     
2025-02-25T14:20:45.6633929Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6634027Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6634114Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6634247Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6634330Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6634428Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6634542Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6634663Z 
2025-02-25T14:20:45.6634791Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6634905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6635048Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6635122Z     ???
2025-02-25T14:20:45.6635227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6635232Z 
2025-02-25T14:20:45.6635303Z >   ???
2025-02-25T14:20:45.6635426Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6635498Z E   
2025-02-25T14:20:45.6635628Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6635738Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6635821Z E          ...
2025-02-25T14:20:45.6635906Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6636038Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6636151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6636227Z E          ...
2025-02-25T14:20:45.6636310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6636441Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6636543Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6636552Z 
2025-02-25T14:20:45.6636641Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6636847Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-25T14:20:45.6636852Z 
2025-02-25T14:20:45.6636983Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6637114Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6637302Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6637442Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6637563Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6637660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6637740Z err_msg = None
2025-02-25T14:20:45.6637744Z 
2025-02-25T14:20:45.6637852Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6637938Z         if err_msg is None:
2025-02-25T14:20:45.6638031Z             if left.shape != right.shape:
2025-02-25T14:20:45.6638121Z                 raise_assert_detail(
2025-02-25T14:20:45.6638260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6638335Z                 )
2025-02-25T14:20:45.6638401Z     
2025-02-25T14:20:45.6638480Z             diff = 0
2025-02-25T14:20:45.6638594Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6638685Z                 # count up differences
2025-02-25T14:20:45.6638860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6638936Z                     diff += 1
2025-02-25T14:20:45.6639010Z     
2025-02-25T14:20:45.6639098Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6639238Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6639406Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6639525Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6639597Z E           
2025-02-25T14:20:45.6639711Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6639965Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6640378Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6640385Z 
2025-02-25T14:20:45.6641046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6641059Z 
2025-02-25T14:20:45.6641352Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6641369Z 
2025-02-25T14:20:45.6641759Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6dee40>
2025-02-25T14:20:45.6642128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>, attr = 'f_lu'
2025-02-25T14:20:45.6642135Z 
2025-02-25T14:20:45.6642370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6642569Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6642706Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6642832Z         try:
2025-02-25T14:20:45.6643068Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6643208Z         except KeyError:
2025-02-25T14:20:45.6643427Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6643561Z     
2025-02-25T14:20:45.6643715Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6643844Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6643938Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6644072Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6644161Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6644394Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6644508Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6644517Z 
2025-02-25T14:20:45.6644645Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6644765Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6644910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6644986Z     ???
2025-02-25T14:20:45.6645097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6645102Z 
2025-02-25T14:20:45.6645170Z >   ???
2025-02-25T14:20:45.6645302Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6645370Z E   
2025-02-25T14:20:45.6645504Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6645616Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6645691Z E          ...
2025-02-25T14:20:45.6645783Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6645915Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6646029Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6646104Z E          ...
2025-02-25T14:20:45.6646193Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6646314Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6646422Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6646426Z 
2025-02-25T14:20:45.6646513Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6646752Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-25T14:20:45.6646757Z 
2025-02-25T14:20:45.6646883Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6647015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6647123Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6647374Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6647504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6647594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6647674Z err_msg = None
2025-02-25T14:20:45.6647679Z 
2025-02-25T14:20:45.6647788Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6647876Z         if err_msg is None:
2025-02-25T14:20:45.6647970Z             if left.shape != right.shape:
2025-02-25T14:20:45.6648061Z                 raise_assert_detail(
2025-02-25T14:20:45.6648206Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6648280Z                 )
2025-02-25T14:20:45.6648354Z     
2025-02-25T14:20:45.6648424Z             diff = 0
2025-02-25T14:20:45.6648547Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6648635Z                 # count up differences
2025-02-25T14:20:45.6648824Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6648902Z                     diff += 1
2025-02-25T14:20:45.6648975Z     
2025-02-25T14:20:45.6649060Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6649204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6649375Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6649489Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6649565Z E           
2025-02-25T14:20:45.6649675Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6649939Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6650299Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6650312Z 
2025-02-25T14:20:45.6650808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6650815Z 
2025-02-25T14:20:45.6650994Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6650999Z 
2025-02-25T14:20:45.6651219Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df5c0>
2025-02-25T14:20:45.6651395Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6651475Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6651484Z 
2025-02-25T14:20:45.6651626Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6651742Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6651831Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6651909Z         try:
2025-02-25T14:20:45.6652045Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6652132Z         except KeyError:
2025-02-25T14:20:45.6652301Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6652376Z     
2025-02-25T14:20:45.6652462Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6652559Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6652645Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6652779Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6652871Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6652966Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6653211Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6653282Z             else:
2025-02-25T14:20:45.6653381Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6653487Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6653491Z 
2025-02-25T14:20:45.6653623Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6653733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6653881Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6653949Z     ???
2025-02-25T14:20:45.6654063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6654068Z 
2025-02-25T14:20:45.6654139Z >   ???
2025-02-25T14:20:45.6654265Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6654342Z E   
2025-02-25T14:20:45.6654471Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6654594Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6654666Z E          ...
2025-02-25T14:20:45.6654761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6654888Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6655003Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6655073Z E          ...
2025-02-25T14:20:45.6655164Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6655288Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6655399Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6655404Z 
2025-02-25T14:20:45.6655498Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6655732Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-25T14:20:45.6655866Z 
2025-02-25T14:20:45.6656004Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6656136Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6656239Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6656372Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6656497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6656593Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6656667Z err_msg = None
2025-02-25T14:20:45.6656671Z 
2025-02-25T14:20:45.6656784Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6656864Z         if err_msg is None:
2025-02-25T14:20:45.6656962Z             if left.shape != right.shape:
2025-02-25T14:20:45.6657048Z                 raise_assert_detail(
2025-02-25T14:20:45.6657215Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6657291Z                 )
2025-02-25T14:20:45.6657364Z     
2025-02-25T14:20:45.6657438Z             diff = 0
2025-02-25T14:20:45.6657550Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6657644Z                 # count up differences
2025-02-25T14:20:45.6657813Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6657894Z                     diff += 1
2025-02-25T14:20:45.6657962Z     
2025-02-25T14:20:45.6658057Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6658193Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6658373Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6658482Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6658561Z E           
2025-02-25T14:20:45.6658683Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6658946Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6659363Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6659376Z 
2025-02-25T14:20:45.6659903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6659920Z 
2025-02-25T14:20:45.6660203Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6660221Z 
2025-02-25T14:20:45.6660686Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df680>
2025-02-25T14:20:45.6660868Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6660952Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6660956Z 
2025-02-25T14:20:45.6661088Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6661205Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6661290Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6661390Z         try:
2025-02-25T14:20:45.6661530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6661618Z         except KeyError:
2025-02-25T14:20:45.6661759Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6661825Z     
2025-02-25T14:20:45.6661915Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6662166Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6662258Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6662395Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6662484Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6662571Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6662685Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6662757Z             else:
2025-02-25T14:20:45.6662858Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6662969Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6662974Z 
2025-02-25T14:20:45.6663094Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6663210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6663353Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6663426Z     ???
2025-02-25T14:20:45.6663541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6663546Z 
2025-02-25T14:20:45.6663625Z >   ???
2025-02-25T14:20:45.6663749Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6663823Z E   
2025-02-25T14:20:45.6663947Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6664067Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6664142Z E          ...
2025-02-25T14:20:45.6664228Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6664360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6664472Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6664548Z E          ...
2025-02-25T14:20:45.6664633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6664760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6664863Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6664875Z 
2025-02-25T14:20:45.6664971Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6665312Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-25T14:20:45.6665317Z 
2025-02-25T14:20:45.6665442Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6665571Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6665666Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6665799Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6665922Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6666019Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6666092Z err_msg = None
2025-02-25T14:20:45.6666102Z 
2025-02-25T14:20:45.6666216Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6666301Z         if err_msg is None:
2025-02-25T14:20:45.6666400Z             if left.shape != right.shape:
2025-02-25T14:20:45.6666491Z                 raise_assert_detail(
2025-02-25T14:20:45.6666634Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6666709Z                 )
2025-02-25T14:20:45.6666776Z     
2025-02-25T14:20:45.6666852Z             diff = 0
2025-02-25T14:20:45.6666960Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6667055Z                 # count up differences
2025-02-25T14:20:45.6667222Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6667305Z                     diff += 1
2025-02-25T14:20:45.6667377Z     
2025-02-25T14:20:45.6667465Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6667607Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6667863Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6667983Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6668055Z E           
2025-02-25T14:20:45.6668172Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6668428Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6668691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6668700Z 
2025-02-25T14:20:45.6669009Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6669017Z 
2025-02-25T14:20:45.6669180Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6669185Z 
2025-02-25T14:20:45.6669412Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c6df800>
2025-02-25T14:20:45.6669581Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eddb0470>
2025-02-25T14:20:45.6669656Z attr = 'j_blues'
2025-02-25T14:20:45.6669661Z 
2025-02-25T14:20:45.6669799Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6669913Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6669999Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6670068Z         try:
2025-02-25T14:20:45.6670210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6670288Z         except KeyError:
2025-02-25T14:20:45.6670437Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6670792Z     
2025-02-25T14:20:45.6670898Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6671000Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6671088Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6671229Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6671315Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6671411Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6671517Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6671593Z             else:
2025-02-25T14:20:45.6671690Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6671799Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6671803Z 
2025-02-25T14:20:45.6671928Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6672045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6672200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6672273Z     ???
2025-02-25T14:20:45.6672389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6672393Z 
2025-02-25T14:20:45.6672462Z >   ???
2025-02-25T14:20:45.6672591Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6672658Z E   
2025-02-25T14:20:45.6672788Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6672897Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6672973Z E          ...
2025-02-25T14:20:45.6673058Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6673193Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6673306Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6673376Z E          ...
2025-02-25T14:20:45.6673594Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6673720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6673836Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6673840Z 
2025-02-25T14:20:45.6673929Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6674141Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-25T14:20:45.6674145Z 
2025-02-25T14:20:45.6674272Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6674404Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6674504Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6674633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6674759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6674857Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6674940Z err_msg = None
2025-02-25T14:20:45.6674944Z 
2025-02-25T14:20:45.6675053Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6675139Z         if err_msg is None:
2025-02-25T14:20:45.6675231Z             if left.shape != right.shape:
2025-02-25T14:20:45.6675318Z                 raise_assert_detail(
2025-02-25T14:20:45.6675467Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6675537Z                 )
2025-02-25T14:20:45.6675608Z     
2025-02-25T14:20:45.6675678Z             diff = 0
2025-02-25T14:20:45.6675790Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6675876Z                 # count up differences
2025-02-25T14:20:45.6676050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6676126Z                     diff += 1
2025-02-25T14:20:45.6676204Z     
2025-02-25T14:20:45.6676292Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6676556Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6676861Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6677047Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6677169Z E           
2025-02-25T14:20:45.6677352Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6677769Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6678035Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6678061Z 
2025-02-25T14:20:45.6678361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6678367Z 
2025-02-25T14:20:45.6678535Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6678539Z 
2025-02-25T14:20:45.6678760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c5c0>
2025-02-25T14:20:45.6678929Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6679001Z attr = 'lines'
2025-02-25T14:20:45.6679010Z 
2025-02-25T14:20:45.6679143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6679260Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6679444Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6679519Z         try:
2025-02-25T14:20:45.6679656Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6679747Z         except KeyError:
2025-02-25T14:20:45.6679882Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6679957Z     
2025-02-25T14:20:45.6680043Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6680145Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6680233Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6680372Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6680463Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6680651Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6680768Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6680838Z             else:
2025-02-25T14:20:45.6680935Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6681045Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6681049Z 
2025-02-25T14:20:45.6681182Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6681294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6681443Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6681522Z     ???
2025-02-25T14:20:45.6681647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6681652Z 
2025-02-25T14:20:45.6681723Z >   ???
2025-02-25T14:20:45.6681845Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6681919Z E   
2025-02-25T14:20:45.6682046Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6682163Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6682234Z E          ...
2025-02-25T14:20:45.6682327Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6682456Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6682572Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6682768Z E          ...
2025-02-25T14:20:45.6682860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6682987Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6683090Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6683094Z 
2025-02-25T14:20:45.6683187Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6683453Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-25T14:20:45.6683459Z 
2025-02-25T14:20:45.6683687Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c680>
2025-02-25T14:20:45.6683858Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6683952Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6683962Z 
2025-02-25T14:20:45.6684097Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6684207Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6684297Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6684366Z         try:
2025-02-25T14:20:45.6684509Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6684588Z         except KeyError:
2025-02-25T14:20:45.6684729Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6684796Z     
2025-02-25T14:20:45.6684887Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6684979Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6685073Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6685205Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6685294Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6685389Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6685497Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6685663Z 
2025-02-25T14:20:45.6685796Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6685910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6685914Z 
2025-02-25T14:20:45.6686055Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6686141Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6686257Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6686344Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6686484Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6686573Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6686677Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6686761Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6686838Z err_msg = None
2025-02-25T14:20:45.6686843Z 
2025-02-25T14:20:45.6686957Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6687042Z         if err_msg is None:
2025-02-25T14:20:45.6687140Z             if left.shape != right.shape:
2025-02-25T14:20:45.6687226Z                 raise_assert_detail(
2025-02-25T14:20:45.6687375Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6687452Z                 )
2025-02-25T14:20:45.6687518Z     
2025-02-25T14:20:45.6687594Z             diff = 0
2025-02-25T14:20:45.6687703Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6687796Z                 # count up differences
2025-02-25T14:20:45.6687966Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6688048Z                     diff += 1
2025-02-25T14:20:45.6688116Z     
2025-02-25T14:20:45.6688208Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6688346Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6688619Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6688731Z E           AssertionError: Series are different
2025-02-25T14:20:45.6688801Z E           
2025-02-25T14:20:45.6688908Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6689279Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6689619Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6689971Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6689977Z 
2025-02-25T14:20:45.6690280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6690636Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-25T14:20:45.6690642Z 
2025-02-25T14:20:45.6690871Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c740>
2025-02-25T14:20:45.6691156Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6691257Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6691262Z 
2025-02-25T14:20:45.6691394Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6691512Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6691596Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6691675Z         try:
2025-02-25T14:20:45.6691813Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6691901Z         except KeyError:
2025-02-25T14:20:45.6692036Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6692110Z     
2025-02-25T14:20:45.6692203Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6692296Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6692388Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6692523Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6692614Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6692705Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6692820Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6692825Z 
2025-02-25T14:20:45.6692942Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6693058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6693063Z 
2025-02-25T14:20:45.6693202Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6693284Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6693395Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6693473Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6693621Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6693706Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6693817Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6694034Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6694114Z err_msg = None
2025-02-25T14:20:45.6694119Z 
2025-02-25T14:20:45.6694229Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6694309Z         if err_msg is None:
2025-02-25T14:20:45.6694406Z             if left.shape != right.shape:
2025-02-25T14:20:45.6694488Z                 raise_assert_detail(
2025-02-25T14:20:45.6694634Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6694703Z                 )
2025-02-25T14:20:45.6694777Z     
2025-02-25T14:20:45.6694849Z             diff = 0
2025-02-25T14:20:45.6694963Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6695052Z                 # count up differences
2025-02-25T14:20:45.6695233Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6695335Z                     diff += 1
2025-02-25T14:20:45.6695481Z     
2025-02-25T14:20:45.6695641Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6695866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6696162Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6696330Z E           AssertionError: Series are different
2025-02-25T14:20:45.6696456Z E           
2025-02-25T14:20:45.6696596Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6696974Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6697513Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6697894Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6697909Z 
2025-02-25T14:20:45.6698206Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6698417Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-25T14:20:45.6698422Z 
2025-02-25T14:20:45.6698549Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6698678Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6698775Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6698914Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6699034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6699131Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6699212Z err_msg = None
2025-02-25T14:20:45.6699221Z 
2025-02-25T14:20:45.6699326Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6699410Z         if err_msg is None:
2025-02-25T14:20:45.6699591Z             if left.shape != right.shape:
2025-02-25T14:20:45.6699681Z                 raise_assert_detail(
2025-02-25T14:20:45.6699822Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6699897Z                 )
2025-02-25T14:20:45.6699963Z     
2025-02-25T14:20:45.6700040Z             diff = 0
2025-02-25T14:20:45.6700149Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6700240Z                 # count up differences
2025-02-25T14:20:45.6700412Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6700489Z                     diff += 1
2025-02-25T14:20:45.6700679Z     
2025-02-25T14:20:45.6700767Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6700907Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6701080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6701203Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6701273Z E           
2025-02-25T14:20:45.6701389Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6701651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6701917Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6702044Z 
2025-02-25T14:20:45.6702347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6702356Z 
2025-02-25T14:20:45.6702521Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6702534Z 
2025-02-25T14:20:45.6702753Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70c980>
2025-02-25T14:20:45.6702953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>, attr = 'nu'
2025-02-25T14:20:45.6702958Z 
2025-02-25T14:20:45.6703094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6703216Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6703300Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6703376Z         try:
2025-02-25T14:20:45.6703515Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6703599Z         except KeyError:
2025-02-25T14:20:45.6703745Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6703824Z     
2025-02-25T14:20:45.6703915Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6704010Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6704104Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6704235Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6704325Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6704416Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6704529Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6704534Z 
2025-02-25T14:20:45.6704653Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6704770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6704915Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6704981Z     ???
2025-02-25T14:20:45.6705102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6705245Z 
2025-02-25T14:20:45.6705317Z >   ???
2025-02-25T14:20:45.6705451Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6705518Z E   
2025-02-25T14:20:45.6705648Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6705758Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6705833Z E          ...
2025-02-25T14:20:45.6705922Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6706056Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6706172Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6706240Z E          ...
2025-02-25T14:20:45.6706332Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6706454Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6706562Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6706571Z 
2025-02-25T14:20:45.6706661Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6706905Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-25T14:20:45.6706910Z 
2025-02-25T14:20:45.6707036Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6707170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6707270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6707402Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6707531Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6707622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6707702Z err_msg = None
2025-02-25T14:20:45.6707798Z 
2025-02-25T14:20:45.6707907Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6707993Z         if err_msg is None:
2025-02-25T14:20:45.6708091Z             if left.shape != right.shape:
2025-02-25T14:20:45.6708182Z                 raise_assert_detail(
2025-02-25T14:20:45.6708330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6708400Z                 )
2025-02-25T14:20:45.6708472Z     
2025-02-25T14:20:45.6708544Z             diff = 0
2025-02-25T14:20:45.6708659Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6708744Z                 # count up differences
2025-02-25T14:20:45.6708919Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6708997Z                     diff += 1
2025-02-25T14:20:45.6709070Z     
2025-02-25T14:20:45.6709155Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6709292Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6709464Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6709583Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6709659Z E           
2025-02-25T14:20:45.6709768Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6710032Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6710357Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6710374Z 
2025-02-25T14:20:45.6710887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6711019Z 
2025-02-25T14:20:45.6711200Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6711204Z 
2025-02-25T14:20:45.6711426Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ca40>
2025-02-25T14:20:45.6711598Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6711677Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6711682Z 
2025-02-25T14:20:45.6711822Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6711940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6712024Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6712100Z         try:
2025-02-25T14:20:45.6712239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6712335Z         except KeyError:
2025-02-25T14:20:45.6712472Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6712554Z     
2025-02-25T14:20:45.6712643Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6712746Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6712833Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6712967Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6713052Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6713147Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6713261Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6713266Z 
2025-02-25T14:20:45.6713386Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6713503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6713647Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6713844Z     ???
2025-02-25T14:20:45.6713953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6713963Z 
2025-02-25T14:20:45.6714053Z >   ???
2025-02-25T14:20:45.6714276Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6714405Z E   
2025-02-25T14:20:45.6714631Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6714815Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6714940Z E          ...
2025-02-25T14:20:45.6715083Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6715296Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6715410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6715486Z E          ...
2025-02-25T14:20:45.6715572Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6715703Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6715816Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6715820Z 
2025-02-25T14:20:45.6715922Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6716133Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-25T14:20:45.6716138Z 
2025-02-25T14:20:45.6716264Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6716395Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6716489Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6716623Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6716744Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6716841Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6716921Z err_msg = None
2025-02-25T14:20:45.6716928Z 
2025-02-25T14:20:45.6717035Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6717223Z         if err_msg is None:
2025-02-25T14:20:45.6717316Z             if left.shape != right.shape:
2025-02-25T14:20:45.6717405Z                 raise_assert_detail(
2025-02-25T14:20:45.6717547Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6717623Z                 )
2025-02-25T14:20:45.6717691Z     
2025-02-25T14:20:45.6717769Z             diff = 0
2025-02-25T14:20:45.6717880Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6717971Z                 # count up differences
2025-02-25T14:20:45.6718137Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6718221Z                     diff += 1
2025-02-25T14:20:45.6718294Z     
2025-02-25T14:20:45.6718381Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6718522Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6718695Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6718819Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6718889Z E           
2025-02-25T14:20:45.6719004Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6719263Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6719529Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6719623Z 
2025-02-25T14:20:45.6719931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6719944Z 
2025-02-25T14:20:45.6720109Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6720113Z 
2025-02-25T14:20:45.6720335Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70cb00>
2025-02-25T14:20:45.6720662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>, attr = 'f_lu'
2025-02-25T14:20:45.6720667Z 
2025-02-25T14:20:45.6720803Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6720921Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6721008Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6721083Z         try:
2025-02-25T14:20:45.6721218Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6721310Z         except KeyError:
2025-02-25T14:20:45.6721444Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6721524Z     
2025-02-25T14:20:45.6721617Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6721712Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6721805Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6721933Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6722023Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6722110Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6722222Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6722227Z 
2025-02-25T14:20:45.6722350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6722466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6722610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6722690Z     ???
2025-02-25T14:20:45.6722801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6722940Z 
2025-02-25T14:20:45.6723011Z >   ???
2025-02-25T14:20:45.6723146Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6723214Z E   
2025-02-25T14:20:45.6723348Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6723458Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6723540Z E          ...
2025-02-25T14:20:45.6723626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6723761Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6723873Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6723952Z E          ...
2025-02-25T14:20:45.6724042Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6724166Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6724282Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6724286Z 
2025-02-25T14:20:45.6724376Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6724620Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-25T14:20:45.6724624Z 
2025-02-25T14:20:45.6724751Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6724887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6724989Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6725117Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6725247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6725339Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6725419Z err_msg = None
2025-02-25T14:20:45.6725541Z 
2025-02-25T14:20:45.6725654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6725864Z         if err_msg is None:
2025-02-25T14:20:45.6725994Z             if left.shape != right.shape:
2025-02-25T14:20:45.6726147Z                 raise_assert_detail(
2025-02-25T14:20:45.6726320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6726639Z                 )
2025-02-25T14:20:45.6726739Z     
2025-02-25T14:20:45.6726880Z             diff = 0
2025-02-25T14:20:45.6727021Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6727162Z                 # count up differences
2025-02-25T14:20:45.6727417Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6727600Z                     diff += 1
2025-02-25T14:20:45.6727733Z     
2025-02-25T14:20:45.6727851Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6728037Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6735549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6735830Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6735956Z E           
2025-02-25T14:20:45.6736169Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6736650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6737099Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6737115Z 
2025-02-25T14:20:45.6737459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6737682Z 
2025-02-25T14:20:45.6737872Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6737878Z 
2025-02-25T14:20:45.6738122Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d280>
2025-02-25T14:20:45.6738295Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6738390Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6738396Z 
2025-02-25T14:20:45.6738539Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6738669Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6738766Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6738841Z         try:
2025-02-25T14:20:45.6739013Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6739106Z         except KeyError:
2025-02-25T14:20:45.6739268Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6739350Z     
2025-02-25T14:20:45.6739455Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6739554Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6739659Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6739798Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6739901Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6739994Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6740122Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6740207Z             else:
2025-02-25T14:20:45.6740306Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6740431Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6740436Z 
2025-02-25T14:20:45.6740709Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6740978Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6741140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6741223Z     ???
2025-02-25T14:20:45.6741333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6741338Z 
2025-02-25T14:20:45.6741414Z >   ???
2025-02-25T14:20:45.6741549Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6741616Z E   
2025-02-25T14:20:45.6741753Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6741863Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6741942Z E          ...
2025-02-25T14:20:45.6742033Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6742174Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6742285Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6742369Z E          ...
2025-02-25T14:20:45.6742453Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6742589Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6742698Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6742710Z 
2025-02-25T14:20:45.6742800Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6743037Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-25T14:20:45.6743043Z 
2025-02-25T14:20:45.6743171Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6743312Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6743410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6743549Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6743671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6743774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6743979Z err_msg = None
2025-02-25T14:20:45.6743984Z 
2025-02-25T14:20:45.6744099Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6744187Z         if err_msg is None:
2025-02-25T14:20:45.6744285Z             if left.shape != right.shape:
2025-02-25T14:20:45.6744377Z                 raise_assert_detail(
2025-02-25T14:20:45.6744527Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6744602Z                 )
2025-02-25T14:20:45.6744672Z     
2025-02-25T14:20:45.6744750Z             diff = 0
2025-02-25T14:20:45.6744863Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6744957Z                 # count up differences
2025-02-25T14:20:45.6745134Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6745221Z                     diff += 1
2025-02-25T14:20:45.6745296Z     
2025-02-25T14:20:45.6745391Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6745534Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6745706Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6745823Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6745894Z E           
2025-02-25T14:20:45.6746017Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6746280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6746548Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6746645Z 
2025-02-25T14:20:45.6746963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6746968Z 
2025-02-25T14:20:45.6747139Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6747150Z 
2025-02-25T14:20:45.6747374Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d340>
2025-02-25T14:20:45.6747546Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6747625Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6747630Z 
2025-02-25T14:20:45.6747773Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6747894Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6747987Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6748063Z         try:
2025-02-25T14:20:45.6748211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6748293Z         except KeyError:
2025-02-25T14:20:45.6748436Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6748509Z     
2025-02-25T14:20:45.6748596Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6748699Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6748788Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6748929Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6749014Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6749110Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6749219Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6749296Z             else:
2025-02-25T14:20:45.6749393Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6749510Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6749599Z 
2025-02-25T14:20:45.6749734Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6749848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6750001Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6750075Z     ???
2025-02-25T14:20:45.6750195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6750199Z 
2025-02-25T14:20:45.6750267Z >   ???
2025-02-25T14:20:45.6750400Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6750469Z E   
2025-02-25T14:20:45.6750818Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6750935Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6751040Z E          ...
2025-02-25T14:20:45.6751217Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6751447Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6751656Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6751778Z E          ...
2025-02-25T14:20:45.6751932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6752141Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6752321Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6752327Z 
2025-02-25T14:20:45.6752419Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6752635Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-25T14:20:45.6752640Z 
2025-02-25T14:20:45.6752779Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6752907Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6753159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6753290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6753424Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6753515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6753598Z err_msg = None
2025-02-25T14:20:45.6753603Z 
2025-02-25T14:20:45.6753719Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6753800Z         if err_msg is None:
2025-02-25T14:20:45.6753900Z             if left.shape != right.shape:
2025-02-25T14:20:45.6753985Z                 raise_assert_detail(
2025-02-25T14:20:45.6754135Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6754211Z                 )
2025-02-25T14:20:45.6754282Z     
2025-02-25T14:20:45.6754353Z             diff = 0
2025-02-25T14:20:45.6754477Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6754564Z                 # count up differences
2025-02-25T14:20:45.6754745Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6754823Z                     diff += 1
2025-02-25T14:20:45.6754900Z     
2025-02-25T14:20:45.6755001Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6755141Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6755316Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6755427Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6755505Z E           
2025-02-25T14:20:45.6755619Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6755886Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6756299Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6756305Z 
2025-02-25T14:20:45.6756616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6756621Z 
2025-02-25T14:20:45.6756801Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6756806Z 
2025-02-25T14:20:45.6757036Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70d4c0>
2025-02-25T14:20:45.6757210Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89eceb8890>
2025-02-25T14:20:45.6757306Z attr = 'j_blues'
2025-02-25T14:20:45.6757310Z 
2025-02-25T14:20:45.6757458Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6757584Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6757672Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6757751Z         try:
2025-02-25T14:20:45.6757890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6757968Z         except KeyError:
2025-02-25T14:20:45.6758106Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6758187Z     
2025-02-25T14:20:45.6758272Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6758371Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6758471Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6758605Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6758702Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6758907Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6759026Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6759107Z             else:
2025-02-25T14:20:45.6759215Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6759322Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6759327Z 
2025-02-25T14:20:45.6759464Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6759576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6759727Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6759806Z     ???
2025-02-25T14:20:45.6759912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6759917Z 
2025-02-25T14:20:45.6759992Z >   ???
2025-02-25T14:20:45.6760119Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6760193Z E   
2025-02-25T14:20:45.6760324Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6760442Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6760635Z E          ...
2025-02-25T14:20:45.6760737Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6760869Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6760995Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6761076Z E          ...
2025-02-25T14:20:45.6761164Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6761296Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6761404Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6761409Z 
2025-02-25T14:20:45.6761506Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6761774Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-25T14:20:45.6761787Z 
2025-02-25T14:20:45.6761925Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6762183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6762284Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6762429Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6762554Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6762654Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6762730Z err_msg = None
2025-02-25T14:20:45.6762734Z 
2025-02-25T14:20:45.6762850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6762933Z         if err_msg is None:
2025-02-25T14:20:45.6763035Z             if left.shape != right.shape:
2025-02-25T14:20:45.6763126Z                 raise_assert_detail(
2025-02-25T14:20:45.6763278Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6763362Z                 )
2025-02-25T14:20:45.6763430Z     
2025-02-25T14:20:45.6763507Z             diff = 0
2025-02-25T14:20:45.6763620Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6763712Z                 # count up differences
2025-02-25T14:20:45.6763880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6763963Z                     diff += 1
2025-02-25T14:20:45.6764027Z     
2025-02-25T14:20:45.6764116Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6764251Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6764422Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6764540Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6764609Z E           
2025-02-25T14:20:45.6764870Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6765133Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6765403Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6765408Z 
2025-02-25T14:20:45.6765719Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6765724Z 
2025-02-25T14:20:45.6765891Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6765899Z 
2025-02-25T14:20:45.6766126Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e240>
2025-02-25T14:20:45.6766296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6766375Z attr = 'lines'
2025-02-25T14:20:45.6766380Z 
2025-02-25T14:20:45.6766517Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6766639Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6766734Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6766804Z         try:
2025-02-25T14:20:45.6766947Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6767023Z         except KeyError:
2025-02-25T14:20:45.6767160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6767227Z     
2025-02-25T14:20:45.6767318Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6767411Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6767511Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6767642Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6767822Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6767919Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6768027Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6768104Z             else:
2025-02-25T14:20:45.6768200Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6768311Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6768315Z 
2025-02-25T14:20:45.6768439Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6768560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6768707Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6768783Z     ???
2025-02-25T14:20:45.6768892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6768907Z 
2025-02-25T14:20:45.6768973Z >   ???
2025-02-25T14:20:45.6769111Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6769179Z E   
2025-02-25T14:20:45.6769312Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6769419Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6769495Z E          ...
2025-02-25T14:20:45.6769615Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6769852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6770046Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6770177Z E          ...
2025-02-25T14:20:45.6770317Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6770658Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6770849Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6771017Z 
2025-02-25T14:20:45.6771119Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6771448Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-25T14:20:45.6771459Z 
2025-02-25T14:20:45.6771686Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e300>
2025-02-25T14:20:45.6771860Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6771948Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6771959Z 
2025-02-25T14:20:45.6772092Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6772215Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6772298Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6772377Z         try:
2025-02-25T14:20:45.6772522Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6772609Z         except KeyError:
2025-02-25T14:20:45.6772747Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6772828Z     
2025-02-25T14:20:45.6772913Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6773020Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6773114Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6773259Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6773342Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6773433Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6773540Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6773544Z 
2025-02-25T14:20:45.6773674Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6773787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6773791Z 
2025-02-25T14:20:45.6773929Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6774013Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6774132Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6774341Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6774481Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6774569Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6774670Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6774752Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6774824Z err_msg = None
2025-02-25T14:20:45.6774828Z 
2025-02-25T14:20:45.6774943Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6775024Z         if err_msg is None:
2025-02-25T14:20:45.6775121Z             if left.shape != right.shape:
2025-02-25T14:20:45.6775208Z                 raise_assert_detail(
2025-02-25T14:20:45.6775351Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6775428Z                 )
2025-02-25T14:20:45.6775493Z     
2025-02-25T14:20:45.6775567Z             diff = 0
2025-02-25T14:20:45.6775682Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6775776Z                 # count up differences
2025-02-25T14:20:45.6775944Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6776027Z                     diff += 1
2025-02-25T14:20:45.6776094Z     
2025-02-25T14:20:45.6776187Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6776318Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6776491Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6776605Z E           AssertionError: Series are different
2025-02-25T14:20:45.6776674Z E           
2025-02-25T14:20:45.6776779Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6777150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6777594Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6777932Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6777946Z 
2025-02-25T14:20:45.6778257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6778574Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-25T14:20:45.6778579Z 
2025-02-25T14:20:45.6778807Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e3c0>
2025-02-25T14:20:45.6778975Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6779069Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6779073Z 
2025-02-25T14:20:45.6779207Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6779327Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6779414Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6779494Z         try:
2025-02-25T14:20:45.6779633Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6779798Z         except KeyError:
2025-02-25T14:20:45.6779940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6780006Z     
2025-02-25T14:20:45.6780096Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6780186Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6780277Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6780412Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6780678Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6780802Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6780916Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6780921Z 
2025-02-25T14:20:45.6781044Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6781167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6781172Z 
2025-02-25T14:20:45.6781313Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6781395Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6781504Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6781581Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6781723Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6781804Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6781911Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6781987Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6782066Z err_msg = None
2025-02-25T14:20:45.6782071Z 
2025-02-25T14:20:45.6782183Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6782414Z         if err_msg is None:
2025-02-25T14:20:45.6782517Z             if left.shape != right.shape:
2025-02-25T14:20:45.6782607Z                 raise_assert_detail(
2025-02-25T14:20:45.6782755Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6782825Z                 )
2025-02-25T14:20:45.6782898Z     
2025-02-25T14:20:45.6782968Z             diff = 0
2025-02-25T14:20:45.6783080Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6783165Z                 # count up differences
2025-02-25T14:20:45.6783335Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6783419Z                     diff += 1
2025-02-25T14:20:45.6783486Z     
2025-02-25T14:20:45.6783577Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6783710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6783883Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6783988Z E           AssertionError: Series are different
2025-02-25T14:20:45.6784068Z E           
2025-02-25T14:20:45.6784166Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6784536Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6784914Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6785413Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6785429Z 
2025-02-25T14:20:45.6785731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6785996Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-25T14:20:45.6786001Z 
2025-02-25T14:20:45.6786126Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6786261Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6786361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6786502Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6786627Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6786720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6786798Z err_msg = None
2025-02-25T14:20:45.6786802Z 
2025-02-25T14:20:45.6786909Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6786995Z         if err_msg is None:
2025-02-25T14:20:45.6787088Z             if left.shape != right.shape:
2025-02-25T14:20:45.6787175Z                 raise_assert_detail(
2025-02-25T14:20:45.6787320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6787489Z                 )
2025-02-25T14:20:45.6787557Z     
2025-02-25T14:20:45.6787633Z             diff = 0
2025-02-25T14:20:45.6787752Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6787838Z                 # count up differences
2025-02-25T14:20:45.6788010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6788087Z                     diff += 1
2025-02-25T14:20:45.6788159Z     
2025-02-25T14:20:45.6788244Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6788381Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6788585Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6788790Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6788913Z E           
2025-02-25T14:20:45.6789104Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6789569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6789963Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6789970Z 
2025-02-25T14:20:45.6790279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6790283Z 
2025-02-25T14:20:45.6790454Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6790460Z 
2025-02-25T14:20:45.6790894Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e600>
2025-02-25T14:20:45.6791107Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>, attr = 'nu'
2025-02-25T14:20:45.6791254Z 
2025-02-25T14:20:45.6791398Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6791521Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6791605Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6791683Z         try:
2025-02-25T14:20:45.6791818Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6791902Z         except KeyError:
2025-02-25T14:20:45.6792043Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6792112Z     
2025-02-25T14:20:45.6792207Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6792300Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6792395Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6792526Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6792623Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6792711Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6792834Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6792840Z 
2025-02-25T14:20:45.6792961Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6793078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6793229Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6793297Z     ???
2025-02-25T14:20:45.6793408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6793413Z 
2025-02-25T14:20:45.6793480Z >   ???
2025-02-25T14:20:45.6793613Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6793679Z E   
2025-02-25T14:20:45.6793812Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6793921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6794122Z E          ...
2025-02-25T14:20:45.6794215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6794355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6794469Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6794539Z E          ...
2025-02-25T14:20:45.6794628Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6794751Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6794860Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6794864Z 
2025-02-25T14:20:45.6794951Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6795236Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-25T14:20:45.6795241Z 
2025-02-25T14:20:45.6795374Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6795500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6795609Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6795741Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6795880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6795972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6796052Z err_msg = None
2025-02-25T14:20:45.6796056Z 
2025-02-25T14:20:45.6796164Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6796250Z         if err_msg is None:
2025-02-25T14:20:45.6796350Z             if left.shape != right.shape:
2025-02-25T14:20:45.6796433Z                 raise_assert_detail(
2025-02-25T14:20:45.6796582Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6796658Z                 )
2025-02-25T14:20:45.6796732Z     
2025-02-25T14:20:45.6796803Z             diff = 0
2025-02-25T14:20:45.6797009Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6797098Z                 # count up differences
2025-02-25T14:20:45.6797268Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6797346Z                     diff += 1
2025-02-25T14:20:45.6797419Z     
2025-02-25T14:20:45.6797505Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6797641Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6797815Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6797925Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6797999Z E           
2025-02-25T14:20:45.6798107Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6798370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6798640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6798653Z 
2025-02-25T14:20:45.6798953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6798958Z 
2025-02-25T14:20:45.6799129Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6799134Z 
2025-02-25T14:20:45.6799439Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e6c0>
2025-02-25T14:20:45.6799612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6799704Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6799708Z 
2025-02-25T14:20:45.6799845Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6799969Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6800053Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6800127Z         try:
2025-02-25T14:20:45.6800269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6800358Z         except KeyError:
2025-02-25T14:20:45.6800493Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6800671Z     
2025-02-25T14:20:45.6800759Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6800856Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6800944Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6801090Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6801177Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6801272Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6801387Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6801391Z 
2025-02-25T14:20:45.6801514Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6801628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6801773Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6801849Z     ???
2025-02-25T14:20:45.6801954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6801965Z 
2025-02-25T14:20:45.6802032Z >   ???
2025-02-25T14:20:45.6802160Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6802229Z E   
2025-02-25T14:20:45.6802360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6802478Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6802702Z E          ...
2025-02-25T14:20:45.6802788Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6802919Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6803029Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6803105Z E          ...
2025-02-25T14:20:45.6803187Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6803315Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6803422Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6803426Z 
2025-02-25T14:20:45.6803514Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6803778Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-25T14:20:45.6803784Z 
2025-02-25T14:20:45.6803910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6804050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6804156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6804297Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6804421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6804513Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6804594Z err_msg = None
2025-02-25T14:20:45.6804598Z 
2025-02-25T14:20:45.6804708Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6804793Z         if err_msg is None:
2025-02-25T14:20:45.6804888Z             if left.shape != right.shape:
2025-02-25T14:20:45.6804978Z                 raise_assert_detail(
2025-02-25T14:20:45.6805124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6805329Z                 )
2025-02-25T14:20:45.6805398Z     
2025-02-25T14:20:45.6805482Z             diff = 0
2025-02-25T14:20:45.6805597Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6805684Z                 # count up differences
2025-02-25T14:20:45.6805857Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6805934Z                     diff += 1
2025-02-25T14:20:45.6806005Z     
2025-02-25T14:20:45.6806093Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6806234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6806400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6806517Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6806585Z E           
2025-02-25T14:20:45.6806698Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6806970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6807235Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6807241Z 
2025-02-25T14:20:45.6807561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6807569Z 
2025-02-25T14:20:45.6807879Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6807896Z 
2025-02-25T14:20:45.6808277Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70e780>
2025-02-25T14:20:45.6808763Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>, attr = 'f_lu'
2025-02-25T14:20:45.6808773Z 
2025-02-25T14:20:45.6808926Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6809052Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6809135Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6809208Z         try:
2025-02-25T14:20:45.6809345Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6809430Z         except KeyError:
2025-02-25T14:20:45.6809568Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6809634Z     
2025-02-25T14:20:45.6809726Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6809818Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6809910Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6810043Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6810142Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6810229Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6810343Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6810348Z 
2025-02-25T14:20:45.6810469Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6810705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6810857Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6810925Z     ???
2025-02-25T14:20:45.6811048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6811053Z 
2025-02-25T14:20:45.6811120Z >   ???
2025-02-25T14:20:45.6811249Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6811315Z E   
2025-02-25T14:20:45.6811445Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6811694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6811777Z E          ...
2025-02-25T14:20:45.6811863Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6811993Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6812105Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6812174Z E          ...
2025-02-25T14:20:45.6812263Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6812383Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6812495Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6812499Z 
2025-02-25T14:20:45.6812587Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6812914Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-25T14:20:45.6812920Z 
2025-02-25T14:20:45.6813150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ed80>
2025-02-25T14:20:45.6813313Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6813414Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.6813419Z 
2025-02-25T14:20:45.6813552Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6813667Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6813751Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6813827Z         try:
2025-02-25T14:20:45.6813963Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6814051Z         except KeyError:
2025-02-25T14:20:45.6814184Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6814259Z     
2025-02-25T14:20:45.6814350Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6814440Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6814531Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6814662Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6814889Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6814976Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6815086Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6815159Z             else:
2025-02-25T14:20:45.6815258Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6815364Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6815369Z 
2025-02-25T14:20:45.6815496Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6815609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6815751Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6815825Z     ???
2025-02-25T14:20:45.6815932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6815943Z 
2025-02-25T14:20:45.6816015Z >   ???
2025-02-25T14:20:45.6816191Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.6816268Z E   
2025-02-25T14:20:45.6816433Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:20:45.6816821Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6821508Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.6826597Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.6827075Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:20:45.6827091Z 
2025-02-25T14:20:45.6827184Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6827492Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-25T14:20:45.6827498Z 
2025-02-25T14:20:45.6827623Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6827759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6827855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6827991Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6828202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6828308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6828386Z err_msg = None
2025-02-25T14:20:45.6828391Z 
2025-02-25T14:20:45.6828500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6828586Z         if err_msg is None:
2025-02-25T14:20:45.6828681Z             if left.shape != right.shape:
2025-02-25T14:20:45.6828770Z                 raise_assert_detail(
2025-02-25T14:20:45.6828917Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6828993Z                 )
2025-02-25T14:20:45.6829060Z     
2025-02-25T14:20:45.6829139Z             diff = 0
2025-02-25T14:20:45.6829251Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6829350Z                 # count up differences
2025-02-25T14:20:45.6829526Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6829609Z                     diff += 1
2025-02-25T14:20:45.6829681Z     
2025-02-25T14:20:45.6829771Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6829913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6830078Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6830198Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6830269Z E           
2025-02-25T14:20:45.6830389Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6830887Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6831170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6831325Z 
2025-02-25T14:20:45.6831653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6831659Z 
2025-02-25T14:20:45.6831835Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6831850Z 
2025-02-25T14:20:45.6832080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ee40>
2025-02-25T14:20:45.6832268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6832367Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.6832384Z 
2025-02-25T14:20:45.6832540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6832665Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6832772Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6832845Z         try:
2025-02-25T14:20:45.6833007Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6833095Z         except KeyError:
2025-02-25T14:20:45.6833254Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6833348Z     
2025-02-25T14:20:45.6833443Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6833555Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6833650Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6833801Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6833893Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6833999Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6834110Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6834335Z             else:
2025-02-25T14:20:45.6834434Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6834573Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6834578Z 
2025-02-25T14:20:45.6834725Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6834860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6835037Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6835111Z     ???
2025-02-25T14:20:45.6835238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6835243Z 
2025-02-25T14:20:45.6835322Z >   ???
2025-02-25T14:20:45.6835466Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6835540Z E   
2025-02-25T14:20:45.6835686Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6835818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6835904Z E          ...
2025-02-25T14:20:45.6836016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6836156Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6836291Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6836369Z E          ...
2025-02-25T14:20:45.6836471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6836600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6836720Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6836725Z 
2025-02-25T14:20:45.6836819Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6837107Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-25T14:20:45.6837113Z 
2025-02-25T14:20:45.6837261Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6837404Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6837618Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6837758Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6837906Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6838005Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6838103Z err_msg = None
2025-02-25T14:20:45.6838107Z 
2025-02-25T14:20:45.6838238Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6838325Z         if err_msg is None:
2025-02-25T14:20:45.6838444Z             if left.shape != right.shape:
2025-02-25T14:20:45.6838536Z                 raise_assert_detail(
2025-02-25T14:20:45.6838706Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6838795Z                 )
2025-02-25T14:20:45.6838888Z     
2025-02-25T14:20:45.6838968Z             diff = 0
2025-02-25T14:20:45.6839104Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6839205Z                 # count up differences
2025-02-25T14:20:45.6839396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6839489Z                     diff += 1
2025-02-25T14:20:45.6839577Z     
2025-02-25T14:20:45.6839691Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6839834Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6840025Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6840138Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6840246Z E           
2025-02-25T14:20:45.6840364Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6840767Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6841202Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6841209Z 
2025-02-25T14:20:45.6841515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6841520Z 
2025-02-25T14:20:45.6841714Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6841719Z 
2025-02-25T14:20:45.6841943Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ef00>
2025-02-25T14:20:45.6842133Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6842240Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6842245Z 
2025-02-25T14:20:45.6842388Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6842519Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6842610Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6842719Z         try:
2025-02-25T14:20:45.6842867Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6842975Z         except KeyError:
2025-02-25T14:20:45.6843115Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6843210Z     
2025-02-25T14:20:45.6843302Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6843415Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6843530Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6843680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6843785Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6844012Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6844148Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6844227Z             else:
2025-02-25T14:20:45.6844345Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6844457Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6844461Z 
2025-02-25T14:20:45.6844606Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6844725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6844895Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6844984Z     ???
2025-02-25T14:20:45.6845146Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6845156Z 
2025-02-25T14:20:45.6845335Z >   ???
2025-02-25T14:20:45.6845556Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6845715Z E   
2025-02-25T14:20:45.6845940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6846150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6846280Z E          ...
2025-02-25T14:20:45.6846403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6846558Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6846676Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6846770Z E          ...
2025-02-25T14:20:45.6846855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6846997Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6847108Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6847113Z 
2025-02-25T14:20:45.6847226Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6847647Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-25T14:20:45.6847663Z 
2025-02-25T14:20:45.6847813Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6847963Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6848067Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6848214Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6848341Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6848458Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6848543Z err_msg = None
2025-02-25T14:20:45.6848547Z 
2025-02-25T14:20:45.6848690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6848781Z         if err_msg is None:
2025-02-25T14:20:45.6848904Z             if left.shape != right.shape:
2025-02-25T14:20:45.6849009Z                 raise_assert_detail(
2025-02-25T14:20:45.6849171Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6849271Z                 )
2025-02-25T14:20:45.6849346Z     
2025-02-25T14:20:45.6849440Z             diff = 0
2025-02-25T14:20:45.6849557Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6849672Z                 # count up differences
2025-02-25T14:20:45.6849852Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6849957Z                     diff += 1
2025-02-25T14:20:45.6850032Z     
2025-02-25T14:20:45.6850143Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6850282Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6850477Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6850719Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6850804Z E           
2025-02-25T14:20:45.6851075Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6851344Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6851620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6851631Z 
2025-02-25T14:20:45.6851956Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6851971Z 
2025-02-25T14:20:45.6852149Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6852153Z 
2025-02-25T14:20:45.6852428Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70efc0>
2025-02-25T14:20:45.6852600Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6852696Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6852702Z 
2025-02-25T14:20:45.6852861Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6852981Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6853087Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6853166Z         try:
2025-02-25T14:20:45.6853336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6853427Z         except KeyError:
2025-02-25T14:20:45.6853585Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6853812Z     
2025-02-25T14:20:45.6853921Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6854027Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6854141Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6854278Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6854389Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6854497Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6854615Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6854703Z             else:
2025-02-25T14:20:45.6854803Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6854930Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6854934Z 
2025-02-25T14:20:45.6855068Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6855209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6855368Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6855469Z     ???
2025-02-25T14:20:45.6855618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6855623Z 
2025-02-25T14:20:45.6855696Z >   ???
2025-02-25T14:20:45.6855847Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6855925Z E   
2025-02-25T14:20:45.6856081Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6856207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6856304Z E          ...
2025-02-25T14:20:45.6856404Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6856556Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6856673Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6856764Z E          ...
2025-02-25T14:20:45.6856868Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6857008Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6857135Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6857246Z 
2025-02-25T14:20:45.6857349Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6857648Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-25T14:20:45.6857653Z 
2025-02-25T14:20:45.6857789Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6857948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6858053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6858217Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6858366Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6858484Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6858579Z err_msg = None
2025-02-25T14:20:45.6858583Z 
2025-02-25T14:20:45.6858711Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6858818Z         if err_msg is None:
2025-02-25T14:20:45.6858923Z             if left.shape != right.shape:
2025-02-25T14:20:45.6859030Z                 raise_assert_detail(
2025-02-25T14:20:45.6859183Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6859279Z                 )
2025-02-25T14:20:45.6859371Z     
2025-02-25T14:20:45.6859452Z             diff = 0
2025-02-25T14:20:45.6859601Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6859694Z                 # count up differences
2025-02-25T14:20:45.6859886Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6859969Z                     diff += 1
2025-02-25T14:20:45.6860062Z     
2025-02-25T14:20:45.6860253Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6860415Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6860701Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6860833Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6860926Z E           
2025-02-25T14:20:45.6861043Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6861329Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6861597Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6861619Z 
2025-02-25T14:20:45.6861942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6861948Z 
2025-02-25T14:20:45.6862146Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6862150Z 
2025-02-25T14:20:45.6862377Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70f140>
2025-02-25T14:20:45.6862560Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1a2b2570>
2025-02-25T14:20:45.6862644Z attr = 'j_blues'
2025-02-25T14:20:45.6862650Z 
2025-02-25T14:20:45.6862809Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6862930Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6863036Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6863132Z         try:
2025-02-25T14:20:45.6863281Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6863509Z         except KeyError:
2025-02-25T14:20:45.6863654Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6863738Z     
2025-02-25T14:20:45.6863831Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6863948Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6864079Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6864323Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6864483Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6864662Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6864844Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6864973Z             else:
2025-02-25T14:20:45.6865141Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6865323Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6865336Z 
2025-02-25T14:20:45.6865478Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6865601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6865772Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6865849Z     ???
2025-02-25T14:20:45.6865978Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6865983Z 
2025-02-25T14:20:45.6866052Z >   ???
2025-02-25T14:20:45.6866194Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6866278Z E   
2025-02-25T14:20:45.6866407Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6866539Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6866618Z E          ...
2025-02-25T14:20:45.6866721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6866859Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6867141Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6867222Z E          ...
2025-02-25T14:20:45.6867324Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6867449Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6867573Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6867578Z 
2025-02-25T14:20:45.6867684Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6867949Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-25T14:20:45.6867954Z 
2025-02-25T14:20:45.6868104Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6868237Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6868345Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6868482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6868631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6868751Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6868833Z err_msg = None
2025-02-25T14:20:45.6868837Z 
2025-02-25T14:20:45.6868961Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6869047Z         if err_msg is None:
2025-02-25T14:20:45.6869162Z             if left.shape != right.shape:
2025-02-25T14:20:45.6869251Z                 raise_assert_detail(
2025-02-25T14:20:45.6869412Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6869485Z                 )
2025-02-25T14:20:45.6869568Z     
2025-02-25T14:20:45.6869645Z             diff = 0
2025-02-25T14:20:45.6869781Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6869882Z                 # count up differences
2025-02-25T14:20:45.6870065Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6870264Z                     diff += 1
2025-02-25T14:20:45.6870336Z     
2025-02-25T14:20:45.6870445Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6870791Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6871001Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6871118Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6871212Z E           
2025-02-25T14:20:45.6871333Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6871631Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6871926Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6871939Z 
2025-02-25T14:20:45.6872251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6872257Z 
2025-02-25T14:20:45.6872455Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6872461Z 
2025-02-25T14:20:45.6872716Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70fec0>
2025-02-25T14:20:45.6872891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6872993Z attr = 'lines'
2025-02-25T14:20:45.6873131Z 
2025-02-25T14:20:45.6873280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6873423Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6873524Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6873632Z         try:
2025-02-25T14:20:45.6873783Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6873891Z         except KeyError:
2025-02-25T14:20:45.6874050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6874128Z     
2025-02-25T14:20:45.6874238Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6874348Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6874460Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6874604Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6874714Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6874814Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6874953Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6875048Z             else:
2025-02-25T14:20:45.6875168Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6875290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6875317Z 
2025-02-25T14:20:45.6875452Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6875593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6875743Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6875840Z     ???
2025-02-25T14:20:45.6875966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6875971Z 
2025-02-25T14:20:45.6876058Z >   ???
2025-02-25T14:20:45.6876189Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6876281Z E   
2025-02-25T14:20:45.6876419Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6876550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6876668Z E          ...
2025-02-25T14:20:45.6876766Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6877045Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6877163Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6877255Z E          ...
2025-02-25T14:20:45.6877347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6877498Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6877618Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6877623Z 
2025-02-25T14:20:45.6877740Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6878047Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-25T14:20:45.6878067Z 
2025-02-25T14:20:45.6878301Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c70ff80>
2025-02-25T14:20:45.6878494Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6878597Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.6878601Z 
2025-02-25T14:20:45.6878757Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6878884Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6878989Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6879068Z         try:
2025-02-25T14:20:45.6879241Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6879347Z         except KeyError:
2025-02-25T14:20:45.6879491Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6879590Z     
2025-02-25T14:20:45.6879682Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6879798Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6879898Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6880049Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6880262Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6880369Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6880497Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6880601Z 
2025-02-25T14:20:45.6880749Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6880891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6880897Z 
2025-02-25T14:20:45.6881046Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6881152Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6881287Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6881394Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6881544Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.6881648Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.6881769Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6881869Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.6881973Z err_msg = None
2025-02-25T14:20:45.6881978Z 
2025-02-25T14:20:45.6882093Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6882204Z         if err_msg is None:
2025-02-25T14:20:45.6882302Z             if left.shape != right.shape:
2025-02-25T14:20:45.6882404Z                 raise_assert_detail(
2025-02-25T14:20:45.6882563Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6882655Z                 )
2025-02-25T14:20:45.6882728Z     
2025-02-25T14:20:45.6882827Z             diff = 0
2025-02-25T14:20:45.6882952Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6883066Z                 # count up differences
2025-02-25T14:20:45.6883252Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6883434Z                     diff += 1
2025-02-25T14:20:45.6883572Z     
2025-02-25T14:20:45.6883906Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6884160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6884464Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6884634Z E           AssertionError: Series are different
2025-02-25T14:20:45.6884718Z E           
2025-02-25T14:20:45.6884841Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.6885235Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6885596Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6885952Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6885959Z 
2025-02-25T14:20:45.6886299Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6886735Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-25T14:20:45.6886750Z 
2025-02-25T14:20:45.6886993Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c080>
2025-02-25T14:20:45.6887171Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6887281Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.6887286Z 
2025-02-25T14:20:45.6887424Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6887567Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6887671Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6887750Z         try:
2025-02-25T14:20:45.6887907Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6887992Z         except KeyError:
2025-02-25T14:20:45.6888146Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6888232Z     
2025-02-25T14:20:45.6888335Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6888435Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6888557Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6888695Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6888796Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6888905Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6889029Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6889033Z 
2025-02-25T14:20:45.6889172Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6889292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6889297Z 
2025-02-25T14:20:45.6889451Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6889545Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6889675Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6889775Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6890076Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.6890191Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.6890300Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.6890397Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.6890486Z err_msg = None
2025-02-25T14:20:45.6890491Z 
2025-02-25T14:20:45.6890731Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6890819Z         if err_msg is None:
2025-02-25T14:20:45.6890939Z             if left.shape != right.shape:
2025-02-25T14:20:45.6891033Z                 raise_assert_detail(
2025-02-25T14:20:45.6891197Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6891273Z                 )
2025-02-25T14:20:45.6891370Z     
2025-02-25T14:20:45.6891466Z             diff = 0
2025-02-25T14:20:45.6891586Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6891699Z                 # count up differences
2025-02-25T14:20:45.6891878Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6891982Z                     diff += 1
2025-02-25T14:20:45.6892059Z     
2025-02-25T14:20:45.6892166Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6892314Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6892509Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6892619Z E           AssertionError: Series are different
2025-02-25T14:20:45.6892710Z E           
2025-02-25T14:20:45.6892825Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.6893211Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6893758Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6894158Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.6894172Z 
2025-02-25T14:20:45.6894490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6894752Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-25T14:20:45.6894763Z 
2025-02-25T14:20:45.6894895Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6895049Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6895171Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6895308Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6895453Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6895559Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6895780Z err_msg = None
2025-02-25T14:20:45.6895786Z 
2025-02-25T14:20:45.6895907Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6896011Z         if err_msg is None:
2025-02-25T14:20:45.6896117Z             if left.shape != right.shape:
2025-02-25T14:20:45.6896206Z                 raise_assert_detail(
2025-02-25T14:20:45.6896376Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6896457Z                 )
2025-02-25T14:20:45.6896551Z     
2025-02-25T14:20:45.6896631Z             diff = 0
2025-02-25T14:20:45.6896772Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6896865Z                 # count up differences
2025-02-25T14:20:45.6897048Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6897144Z                     diff += 1
2025-02-25T14:20:45.6897234Z     
2025-02-25T14:20:45.6897326Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6897480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6897670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6897792Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6897887Z E           
2025-02-25T14:20:45.6898006Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6898287Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6898556Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6898678Z 
2025-02-25T14:20:45.6898981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6898986Z 
2025-02-25T14:20:45.6899178Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6899183Z 
2025-02-25T14:20:45.6899411Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c2c0>
2025-02-25T14:20:45.6899629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>, attr = 'nu'
2025-02-25T14:20:45.6899634Z 
2025-02-25T14:20:45.6899787Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6899903Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6900006Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6900082Z         try:
2025-02-25T14:20:45.6900242Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6900331Z         except KeyError:
2025-02-25T14:20:45.6900488Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6900659Z     
2025-02-25T14:20:45.6900774Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6900879Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6900992Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6901133Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6901285Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6901477Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6901675Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6901682Z 
2025-02-25T14:20:45.6901922Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6902128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6902402Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6902662Z     ???
2025-02-25T14:20:45.6902797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6902802Z 
2025-02-25T14:20:45.6902874Z >   ???
2025-02-25T14:20:45.6903021Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6903107Z E   
2025-02-25T14:20:45.6903243Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6903368Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6903447Z E          ...
2025-02-25T14:20:45.6903558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6903696Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6903831Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6903914Z E          ...
2025-02-25T14:20:45.6904026Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6904170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6904304Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6904309Z 
2025-02-25T14:20:45.6904414Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6904703Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-25T14:20:45.6904708Z 
2025-02-25T14:20:45.6904855Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6904997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6905119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6905254Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6905418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6905678Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6905771Z err_msg = None
2025-02-25T14:20:45.6905775Z 
2025-02-25T14:20:45.6905910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6905997Z         if err_msg is None:
2025-02-25T14:20:45.6906122Z             if left.shape != right.shape:
2025-02-25T14:20:45.6906217Z                 raise_assert_detail(
2025-02-25T14:20:45.6906391Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6906470Z                 )
2025-02-25T14:20:45.6906568Z     
2025-02-25T14:20:45.6906661Z             diff = 0
2025-02-25T14:20:45.6906796Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6906918Z                 # count up differences
2025-02-25T14:20:45.6907097Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6907213Z                     diff += 1
2025-02-25T14:20:45.6907287Z     
2025-02-25T14:20:45.6907407Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6907556Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6907750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6907869Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6907969Z E           
2025-02-25T14:20:45.6908087Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6908388Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6908676Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6908788Z 
2025-02-25T14:20:45.6909098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6909103Z 
2025-02-25T14:20:45.6909295Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6909299Z 
2025-02-25T14:20:45.6909543Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c380>
2025-02-25T14:20:45.6909719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6909830Z attr = 'wavelength_cm'
2025-02-25T14:20:45.6909834Z 
2025-02-25T14:20:45.6909975Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6910123Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6910217Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6910325Z         try:
2025-02-25T14:20:45.6910474Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6910801Z         except KeyError:
2025-02-25T14:20:45.6910973Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6911055Z     
2025-02-25T14:20:45.6911173Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6911282Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6911396Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6911534Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6911650Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6911753Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6911885Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6911890Z 
2025-02-25T14:20:45.6912023Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6912320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6912488Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6912563Z     ???
2025-02-25T14:20:45.6912701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6912706Z 
2025-02-25T14:20:45.6912783Z >   ???
2025-02-25T14:20:45.6912941Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6913026Z E   
2025-02-25T14:20:45.6913179Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6913300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6913401Z E          ...
2025-02-25T14:20:45.6913499Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6913650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6913786Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6913872Z E          ...
2025-02-25T14:20:45.6913983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6914121Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6914262Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6914266Z 
2025-02-25T14:20:45.6914370Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6914660Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-25T14:20:45.6914665Z 
2025-02-25T14:20:45.6914806Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6914952Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6915076Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6915220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6915383Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6915632Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6915727Z err_msg = None
2025-02-25T14:20:45.6915731Z 
2025-02-25T14:20:45.6915849Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6915970Z         if err_msg is None:
2025-02-25T14:20:45.6916072Z             if left.shape != right.shape:
2025-02-25T14:20:45.6916194Z                 raise_assert_detail(
2025-02-25T14:20:45.6916361Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6916443Z                 )
2025-02-25T14:20:45.6916548Z     
2025-02-25T14:20:45.6916636Z             diff = 0
2025-02-25T14:20:45.6916776Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6916877Z                 # count up differences
2025-02-25T14:20:45.6917076Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6917173Z                     diff += 1
2025-02-25T14:20:45.6917280Z     
2025-02-25T14:20:45.6917382Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6917551Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6917749Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6917863Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6917964Z E           
2025-02-25T14:20:45.6918086Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6918390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6918759Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6918789Z 
2025-02-25T14:20:45.6919096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6919101Z 
2025-02-25T14:20:45.6919307Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6919311Z 
2025-02-25T14:20:45.6919543Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72c440>
2025-02-25T14:20:45.6919782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>, attr = 'f_lu'
2025-02-25T14:20:45.6919786Z 
2025-02-25T14:20:45.6919924Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6920066Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6920181Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6920274Z         try:
2025-02-25T14:20:45.6920444Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6920642Z         except KeyError:
2025-02-25T14:20:45.6920870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6921016Z     
2025-02-25T14:20:45.6921194Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6921366Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6921543Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6921778Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6921963Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6922103Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6922229Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6922233Z 
2025-02-25T14:20:45.6922399Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.6922525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6922856Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6922937Z     ???
2025-02-25T14:20:45.6923080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6923084Z 
2025-02-25T14:20:45.6923165Z >   ???
2025-02-25T14:20:45.6923322Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6923414Z E   
2025-02-25T14:20:45.6923553Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6923692Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6923774Z E          ...
2025-02-25T14:20:45.6923885Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6924025Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6924151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6924230Z E          ...
2025-02-25T14:20:45.6924338Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6924481Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6924604Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6924609Z 
2025-02-25T14:20:45.6924719Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6925034Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-25T14:20:45.6925040Z 
2025-02-25T14:20:45.6925285Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ca40>
2025-02-25T14:20:45.6925461Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6925577Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.6925581Z 
2025-02-25T14:20:45.6925726Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6926001Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6926090Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6926194Z         try:
2025-02-25T14:20:45.6926539Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6926667Z         except KeyError:
2025-02-25T14:20:45.6926893Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6927001Z     
2025-02-25T14:20:45.6927194Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6927653Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6927851Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6928031Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6940931Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6941125Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6941341Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6941481Z             else:
2025-02-25T14:20:45.6941659Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6941863Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6941879Z 
2025-02-25T14:20:45.6942135Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6942342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6942561Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6942638Z     ???
2025-02-25T14:20:45.6942781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6942786Z 
2025-02-25T14:20:45.6942863Z >   ???
2025-02-25T14:20:45.6943074Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.6943150Z E   
2025-02-25T14:20:45.6943341Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.6943745Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.6948855Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.6954130Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.6954374Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.6954515Z 
2025-02-25T14:20:45.6954640Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6954947Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-25T14:20:45.6954953Z 
2025-02-25T14:20:45.6955105Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6955250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6955372Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6955529Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6955658Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6955775Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6955861Z err_msg = None
2025-02-25T14:20:45.6955873Z 
2025-02-25T14:20:45.6956014Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6956105Z         if err_msg is None:
2025-02-25T14:20:45.6956234Z             if left.shape != right.shape:
2025-02-25T14:20:45.6956327Z                 raise_assert_detail(
2025-02-25T14:20:45.6956504Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6956596Z                 )
2025-02-25T14:20:45.6956670Z     
2025-02-25T14:20:45.6956761Z             diff = 0
2025-02-25T14:20:45.6956890Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6957013Z                 # count up differences
2025-02-25T14:20:45.6957191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6957304Z                     diff += 1
2025-02-25T14:20:45.6957532Z     
2025-02-25T14:20:45.6957647Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6957796Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6957991Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6958114Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6958206Z E           
2025-02-25T14:20:45.6958341Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6958616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6958897Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6958918Z 
2025-02-25T14:20:45.6959254Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6959260Z 
2025-02-25T14:20:45.6959569Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6959579Z 
2025-02-25T14:20:45.6959994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cb00>
2025-02-25T14:20:45.6960284Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6960468Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.6960475Z 
2025-02-25T14:20:45.6960854Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6961084Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6961245Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6961380Z         try:
2025-02-25T14:20:45.6961647Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6961978Z         except KeyError:
2025-02-25T14:20:45.6962235Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6962362Z     
2025-02-25T14:20:45.6962536Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6962700Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6962889Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6963033Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6963141Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6963240Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6963375Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6963461Z             else:
2025-02-25T14:20:45.6963560Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6963696Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6963701Z 
2025-02-25T14:20:45.6963829Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6963980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6964133Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6964224Z     ???
2025-02-25T14:20:45.6964338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6964354Z 
2025-02-25T14:20:45.6964434Z >   ???
2025-02-25T14:20:45.6964582Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6964658Z E   
2025-02-25T14:20:45.6964799Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6964917Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6965013Z E          ...
2025-02-25T14:20:45.6965106Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6965410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6965534Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6965630Z E          ...
2025-02-25T14:20:45.6965725Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6965865Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6965982Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6965987Z 
2025-02-25T14:20:45.6966076Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6966362Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-25T14:20:45.6966367Z 
2025-02-25T14:20:45.6966497Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6966632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6966736Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6966891Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6967043Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6967142Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6967240Z err_msg = None
2025-02-25T14:20:45.6967244Z 
2025-02-25T14:20:45.6967360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6967468Z         if err_msg is None:
2025-02-25T14:20:45.6967573Z             if left.shape != right.shape:
2025-02-25T14:20:45.6967675Z                 raise_assert_detail(
2025-02-25T14:20:45.6967828Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6967922Z                 )
2025-02-25T14:20:45.6967993Z     
2025-02-25T14:20:45.6968084Z             diff = 0
2025-02-25T14:20:45.6968215Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6968316Z                 # count up differences
2025-02-25T14:20:45.6968506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6968690Z                     diff += 1
2025-02-25T14:20:45.6968773Z     
2025-02-25T14:20:45.6968869Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6969024Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6969196Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6969327Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6969406Z E           
2025-02-25T14:20:45.6969544Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6969824Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6970100Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6970107Z 
2025-02-25T14:20:45.6970428Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6970433Z 
2025-02-25T14:20:45.6970835Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6970842Z 
2025-02-25T14:20:45.6971075Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cbc0>
2025-02-25T14:20:45.6971262Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6971539Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.6971544Z 
2025-02-25T14:20:45.6971701Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6971835Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6971944Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6972022Z         try:
2025-02-25T14:20:45.6972187Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6972304Z         except KeyError:
2025-02-25T14:20:45.6972451Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6972540Z     
2025-02-25T14:20:45.6972634Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6972750Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6972847Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6972999Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6973094Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6973204Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6973328Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6973426Z             else:
2025-02-25T14:20:45.6973530Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6973665Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6973669Z 
2025-02-25T14:20:45.6973821Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6973941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6974115Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6974189Z     ???
2025-02-25T14:20:45.6974321Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6974325Z 
2025-02-25T14:20:45.6974403Z >   ???
2025-02-25T14:20:45.6974552Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6974625Z E   
2025-02-25T14:20:45.6974776Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6974921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6975130Z E          ...
2025-02-25T14:20:45.6975237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6975373Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6975504Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6975586Z E          ...
2025-02-25T14:20:45.6975693Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6975821Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6975949Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6975955Z 
2025-02-25T14:20:45.6976050Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6976343Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-25T14:20:45.6976348Z 
2025-02-25T14:20:45.6976494Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6976641Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6976763Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6976901Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6977053Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6977156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6977263Z err_msg = None
2025-02-25T14:20:45.6977268Z 
2025-02-25T14:20:45.6977396Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6977482Z         if err_msg is None:
2025-02-25T14:20:45.6977601Z             if left.shape != right.shape:
2025-02-25T14:20:45.6977693Z                 raise_assert_detail(
2025-02-25T14:20:45.6977860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6978032Z                 )
2025-02-25T14:20:45.6978119Z     
2025-02-25T14:20:45.6978208Z             diff = 0
2025-02-25T14:20:45.6978339Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6978429Z                 # count up differences
2025-02-25T14:20:45.6978621Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6978721Z                     diff += 1
2025-02-25T14:20:45.6978798Z     
2025-02-25T14:20:45.6978907Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6979051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6979230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6979348Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6979441Z E           
2025-02-25T14:20:45.6979556Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6980236Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6980672Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6980679Z 
2025-02-25T14:20:45.6980997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6981002Z 
2025-02-25T14:20:45.6981195Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6981210Z 
2025-02-25T14:20:45.6981459Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72cc80>
2025-02-25T14:20:45.6981791Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6981895Z attr = 'beta_sobolev'
2025-02-25T14:20:45.6981899Z 
2025-02-25T14:20:45.6982041Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6982175Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6982268Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6982356Z         try:
2025-02-25T14:20:45.6982498Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6982600Z         except KeyError:
2025-02-25T14:20:45.6982743Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6982833Z     
2025-02-25T14:20:45.6982942Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6983037Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6983157Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6983299Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6983409Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6983515Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6983652Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6983727Z             else:
2025-02-25T14:20:45.6983843Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6983958Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6983975Z 
2025-02-25T14:20:45.6984106Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6984237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6984394Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6984494Z     ???
2025-02-25T14:20:45.6984614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6984747Z 
2025-02-25T14:20:45.6984847Z >   ???
2025-02-25T14:20:45.6984980Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6985116Z E   
2025-02-25T14:20:45.6985373Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6985587Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6985733Z E          ...
2025-02-25T14:20:45.6985892Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6986134Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6986325Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6986453Z E          ...
2025-02-25T14:20:45.6986607Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6986837Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6987017Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6987024Z 
2025-02-25T14:20:45.6987214Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6987673Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-25T14:20:45.6987704Z 
2025-02-25T14:20:45.6987928Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6988167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6988338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6988600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6988794Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6988911Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6988990Z err_msg = None
2025-02-25T14:20:45.6988994Z 
2025-02-25T14:20:45.6989133Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6989240Z         if err_msg is None:
2025-02-25T14:20:45.6989347Z             if left.shape != right.shape:
2025-02-25T14:20:45.6989568Z                 raise_assert_detail(
2025-02-25T14:20:45.6989725Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6989807Z                 )
2025-02-25T14:20:45.6989878Z     
2025-02-25T14:20:45.6989977Z             diff = 0
2025-02-25T14:20:45.6990096Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.6990205Z                 # count up differences
2025-02-25T14:20:45.6990387Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.6990493Z                     diff += 1
2025-02-25T14:20:45.6990787Z     
2025-02-25T14:20:45.6990900Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.6991066Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.6991245Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.6991390Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.6991473Z E           
2025-02-25T14:20:45.6991604Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.6991876Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6992154Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.6992160Z 
2025-02-25T14:20:45.6992626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.6992639Z 
2025-02-25T14:20:45.6992817Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.6992822Z 
2025-02-25T14:20:45.6993075Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ce00>
2025-02-25T14:20:45.6993256Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a1484b290>
2025-02-25T14:20:45.6993358Z attr = 'j_blues'
2025-02-25T14:20:45.6993363Z 
2025-02-25T14:20:45.6993514Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.6993638Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.6993747Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.6993822Z         try:
2025-02-25T14:20:45.6993986Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.6994073Z         except KeyError:
2025-02-25T14:20:45.6994235Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.6994321Z     
2025-02-25T14:20:45.6994423Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.6994527Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.6994627Z             if attr == "selected_atoms":
2025-02-25T14:20:45.6994780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.6994876Z             elif actual.ndim == 1:
2025-02-25T14:20:45.6994990Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.6995107Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.6995201Z             else:
2025-02-25T14:20:45.6995303Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.6995427Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.6995431Z 
2025-02-25T14:20:45.6995561Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.6995701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6995873Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.6996082Z     ???
2025-02-25T14:20:45.6996208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.6996213Z 
2025-02-25T14:20:45.6996288Z >   ???
2025-02-25T14:20:45.6996446Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.6996525Z E   
2025-02-25T14:20:45.6996671Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.6996789Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6996885Z E          ...
2025-02-25T14:20:45.6996979Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6997125Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6997257Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.6997334Z E          ...
2025-02-25T14:20:45.6997452Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.6997590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.6997724Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.6997729Z 
2025-02-25T14:20:45.6997827Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.6998055Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-25T14:20:45.6998059Z 
2025-02-25T14:20:45.6998194Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6998348Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6998472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6998612Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.6998765Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.6998960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.6999059Z err_msg = None
2025-02-25T14:20:45.6999073Z 
2025-02-25T14:20:45.6999193Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.6999295Z         if err_msg is None:
2025-02-25T14:20:45.6999397Z             if left.shape != right.shape:
2025-02-25T14:20:45.6999506Z                 raise_assert_detail(
2025-02-25T14:20:45.6999670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.6999744Z                 )
2025-02-25T14:20:45.6999845Z     
2025-02-25T14:20:45.6999922Z             diff = 0
2025-02-25T14:20:45.7000053Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7000146Z                 # count up differences
2025-02-25T14:20:45.7000337Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7000421Z                     diff += 1
2025-02-25T14:20:45.7000604Z     
2025-02-25T14:20:45.7000707Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7000859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7001038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7001164Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7001256Z E           
2025-02-25T14:20:45.7001373Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7001659Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7001926Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7002089Z 
2025-02-25T14:20:45.7002397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7002402Z 
2025-02-25T14:20:45.7002578Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7002583Z 
2025-02-25T14:20:45.7002804Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72db80>
2025-02-25T14:20:45.7002977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7003051Z attr = 'lines'
2025-02-25T14:20:45.7003056Z 
2025-02-25T14:20:45.7003194Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7003322Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7003412Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7003500Z         try:
2025-02-25T14:20:45.7003644Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7003743Z         except KeyError:
2025-02-25T14:20:45.7003885Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7003972Z     
2025-02-25T14:20:45.7004067Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7004251Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7004406Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7004648Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7004803Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7004978Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7005173Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7005303Z             else:
2025-02-25T14:20:45.7005479Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7005663Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7005856Z 
2025-02-25T14:20:45.7006093Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7006302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7006565Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7006689Z     ???
2025-02-25T14:20:45.7006900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7006907Z 
2025-02-25T14:20:45.7007052Z >   ???
2025-02-25T14:20:45.7007276Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7007418Z E   
2025-02-25T14:20:45.7007581Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7007718Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7007797Z E          ...
2025-02-25T14:20:45.7007900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7008031Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7008167Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7008244Z E          ...
2025-02-25T14:20:45.7008351Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7008493Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7008600Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7008605Z 
2025-02-25T14:20:45.7008705Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7008940Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-25T14:20:45.7008946Z 
2025-02-25T14:20:45.7009182Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72dc40>
2025-02-25T14:20:45.7009346Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7009443Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7009448Z 
2025-02-25T14:20:45.7009589Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7009726Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7009962Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7010037Z         try:
2025-02-25T14:20:45.7010193Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7010282Z         except KeyError:
2025-02-25T14:20:45.7010433Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7010627Z     
2025-02-25T14:20:45.7010739Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7010838Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7010942Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7011073Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7011175Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7011283Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7011392Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7011404Z 
2025-02-25T14:20:45.7011541Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7011651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7011664Z 
2025-02-25T14:20:45.7011808Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7011895Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7012029Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7012120Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7012276Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7012375Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7012482Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7012578Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7012659Z err_msg = None
2025-02-25T14:20:45.7012798Z 
2025-02-25T14:20:45.7012930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7013016Z         if err_msg is None:
2025-02-25T14:20:45.7013137Z             if left.shape != right.shape:
2025-02-25T14:20:45.7013229Z                 raise_assert_detail(
2025-02-25T14:20:45.7013396Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7013486Z                 )
2025-02-25T14:20:45.7013561Z     
2025-02-25T14:20:45.7013653Z             diff = 0
2025-02-25T14:20:45.7013770Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7013876Z                 # count up differences
2025-02-25T14:20:45.7014054Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7014145Z                     diff += 1
2025-02-25T14:20:45.7014216Z     
2025-02-25T14:20:45.7014321Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7014461Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7014655Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7014769Z E           AssertionError: Series are different
2025-02-25T14:20:45.7014856Z E           
2025-02-25T14:20:45.7014972Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7015347Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7015699Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7016181Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7016188Z 
2025-02-25T14:20:45.7016501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7016749Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-25T14:20:45.7016754Z 
2025-02-25T14:20:45.7016977Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72dd00>
2025-02-25T14:20:45.7017173Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7017284Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7017295Z 
2025-02-25T14:20:45.7017437Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7017565Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7017651Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7017736Z         try:
2025-02-25T14:20:45.7017881Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7017978Z         except KeyError:
2025-02-25T14:20:45.7018117Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7018207Z     
2025-02-25T14:20:45.7018299Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7018407Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7018515Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7018652Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7018850Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7018943Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7019074Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7019079Z 
2025-02-25T14:20:45.7019204Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7019324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7019329Z 
2025-02-25T14:20:45.7019467Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7019570Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7019699Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7019787Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7019933Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7020023Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7020157Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7020250Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7020341Z err_msg = None
2025-02-25T14:20:45.7020346Z 
2025-02-25T14:20:45.7020461Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7020662Z         if err_msg is None:
2025-02-25T14:20:45.7020776Z             if left.shape != right.shape:
2025-02-25T14:20:45.7020866Z                 raise_assert_detail(
2025-02-25T14:20:45.7021024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7021096Z                 )
2025-02-25T14:20:45.7021179Z     
2025-02-25T14:20:45.7021256Z             diff = 0
2025-02-25T14:20:45.7021384Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7021478Z                 # count up differences
2025-02-25T14:20:45.7021665Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7021751Z                     diff += 1
2025-02-25T14:20:45.7021834Z     
2025-02-25T14:20:45.7022051Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7022209Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7022399Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7022513Z E           AssertionError: Series are different
2025-02-25T14:20:45.7022601Z E           
2025-02-25T14:20:45.7022712Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7023103Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7023486Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7024140Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7024152Z 
2025-02-25T14:20:45.7024691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7025095Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-25T14:20:45.7025106Z 
2025-02-25T14:20:45.7025241Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7025381Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7025484Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7025636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7025761Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7025874Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7025963Z err_msg = None
2025-02-25T14:20:45.7025967Z 
2025-02-25T14:20:45.7026077Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7026183Z         if err_msg is None:
2025-02-25T14:20:45.7026283Z             if left.shape != right.shape:
2025-02-25T14:20:45.7026387Z                 raise_assert_detail(
2025-02-25T14:20:45.7026533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7026623Z                 )
2025-02-25T14:20:45.7026695Z     
2025-02-25T14:20:45.7026794Z             diff = 0
2025-02-25T14:20:45.7026912Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7027023Z                 # count up differences
2025-02-25T14:20:45.7027206Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7027307Z                     diff += 1
2025-02-25T14:20:45.7027398Z     
2025-02-25T14:20:45.7027497Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7027657Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7027831Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7027971Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7028153Z E           
2025-02-25T14:20:45.7028295Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7028566Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7028848Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7028861Z 
2025-02-25T14:20:45.7029181Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7029191Z 
2025-02-25T14:20:45.7029367Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7029372Z 
2025-02-25T14:20:45.7029623Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72df40>
2025-02-25T14:20:45.7029843Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>, attr = 'nu'
2025-02-25T14:20:45.7029848Z 
2025-02-25T14:20:45.7029987Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7030114Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7030204Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7030294Z         try:
2025-02-25T14:20:45.7030443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7030753Z         except KeyError:
2025-02-25T14:20:45.7030923Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7031187Z     
2025-02-25T14:20:45.7031276Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7031394Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7031514Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7031659Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7031762Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7031858Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7031991Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7031996Z 
2025-02-25T14:20:45.7032131Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7032265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7032420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7032518Z     ???
2025-02-25T14:20:45.7032649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7032662Z 
2025-02-25T14:20:45.7032738Z >   ???
2025-02-25T14:20:45.7032870Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7032945Z E   
2025-02-25T14:20:45.7033082Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7033194Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7033269Z E          ...
2025-02-25T14:20:45.7033359Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7033500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7033614Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7033696Z E          ...
2025-02-25T14:20:45.7033798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7033931Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7034056Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7034070Z 
2025-02-25T14:20:45.7034164Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7034394Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-25T14:20:45.7034530Z 
2025-02-25T14:20:45.7034664Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7034808Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7034914Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7035070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7035202Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7035303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7035399Z err_msg = None
2025-02-25T14:20:45.7035403Z 
2025-02-25T14:20:45.7035522Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7035638Z         if err_msg is None:
2025-02-25T14:20:45.7035738Z             if left.shape != right.shape:
2025-02-25T14:20:45.7035857Z                 raise_assert_detail(
2025-02-25T14:20:45.7036003Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7036093Z                 )
2025-02-25T14:20:45.7036182Z     
2025-02-25T14:20:45.7036268Z             diff = 0
2025-02-25T14:20:45.7036402Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7036504Z                 # count up differences
2025-02-25T14:20:45.7036689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7036773Z                     diff += 1
2025-02-25T14:20:45.7036854Z     
2025-02-25T14:20:45.7036945Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7037100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7037270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7037536Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7037632Z E           
2025-02-25T14:20:45.7037755Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7038026Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7038304Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7038311Z 
2025-02-25T14:20:45.7038634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7038644Z 
2025-02-25T14:20:45.7038833Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7038838Z 
2025-02-25T14:20:45.7039061Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e000>
2025-02-25T14:20:45.7039232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7039317Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7039322Z 
2025-02-25T14:20:45.7039475Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7039597Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7039703Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7039792Z         try:
2025-02-25T14:20:45.7039941Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7040034Z         except KeyError:
2025-02-25T14:20:45.7040181Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7040261Z     
2025-02-25T14:20:45.7040451Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7040666Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7040760Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7040906Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7040995Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7041105Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7041222Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7041241Z 
2025-02-25T14:20:45.7041373Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7041503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7041652Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7041738Z     ???
2025-02-25T14:20:45.7041853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7041872Z 
2025-02-25T14:20:45.7041959Z >   ???
2025-02-25T14:20:45.7042098Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7042182Z E   
2025-02-25T14:20:45.7042314Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7042445Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7042532Z E          ...
2025-02-25T14:20:45.7042625Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7042841Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7043045Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7043184Z E          ...
2025-02-25T14:20:45.7043334Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7043563Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7043743Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7043943Z 
2025-02-25T14:20:45.7044088Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7044308Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-25T14:20:45.7044322Z 
2025-02-25T14:20:45.7044453Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7044600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7044702Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7044853Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7044981Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7045091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7045170Z err_msg = None
2025-02-25T14:20:45.7045189Z 
2025-02-25T14:20:45.7045307Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7045415Z         if err_msg is None:
2025-02-25T14:20:45.7045514Z             if left.shape != right.shape:
2025-02-25T14:20:45.7045626Z                 raise_assert_detail(
2025-02-25T14:20:45.7045777Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7045869Z                 )
2025-02-25T14:20:45.7045938Z     
2025-02-25T14:20:45.7046032Z             diff = 0
2025-02-25T14:20:45.7046148Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7046254Z                 # count up differences
2025-02-25T14:20:45.7046427Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7046520Z                     diff += 1
2025-02-25T14:20:45.7046609Z     
2025-02-25T14:20:45.7046704Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7046858Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7047041Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7047172Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7047378Z E           
2025-02-25T14:20:45.7047506Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7047770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7048048Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7048068Z 
2025-02-25T14:20:45.7048388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7048400Z 
2025-02-25T14:20:45.7048568Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7048573Z 
2025-02-25T14:20:45.7048829Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e0c0>
2025-02-25T14:20:45.7049052Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>, attr = 'f_lu'
2025-02-25T14:20:45.7049057Z 
2025-02-25T14:20:45.7049200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7049333Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7049423Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7049513Z         try:
2025-02-25T14:20:45.7049655Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7049751Z         except KeyError:
2025-02-25T14:20:45.7049902Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7050087Z     
2025-02-25T14:20:45.7050177Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7050300Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7050411Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7050667Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7050778Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7050878Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7051020Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7051024Z 
2025-02-25T14:20:45.7051155Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7051281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7051432Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7051527Z     ???
2025-02-25T14:20:45.7051643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7051670Z 
2025-02-25T14:20:45.7051759Z >   ???
2025-02-25T14:20:45.7051917Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7052000Z E   
2025-02-25T14:20:45.7052155Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7052270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7052384Z E          ...
2025-02-25T14:20:45.7052481Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7052624Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7052740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7052829Z E          ...
2025-02-25T14:20:45.7052923Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7053069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7053193Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7053204Z 
2025-02-25T14:20:45.7053300Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7053568Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-25T14:20:45.7053700Z 
2025-02-25T14:20:45.7053932Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e6c0>
2025-02-25T14:20:45.7054126Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7054226Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.7054234Z 
2025-02-25T14:20:45.7054387Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7054516Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7054611Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7054709Z         try:
2025-02-25T14:20:45.7054861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7054959Z         except KeyError:
2025-02-25T14:20:45.7055106Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7055200Z     
2025-02-25T14:20:45.7055292Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7055420Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7055521Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7055674Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7055780Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7055871Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7055998Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7056078Z             else:
2025-02-25T14:20:45.7056196Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7056308Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7056313Z 
2025-02-25T14:20:45.7056454Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7056570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7056885Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7056965Z     ???
2025-02-25T14:20:45.7057102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7057108Z 
2025-02-25T14:20:45.7057192Z >   ???
2025-02-25T14:20:45.7057373Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7057464Z E   
2025-02-25T14:20:45.7057638Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.7058024Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7063000Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.7068048Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.7068373Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.7068378Z 
2025-02-25T14:20:45.7068485Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7068732Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-25T14:20:45.7068739Z 
2025-02-25T14:20:45.7068880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7069039Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7069152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7069311Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7069441Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7069572Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7069661Z err_msg = None
2025-02-25T14:20:45.7069680Z 
2025-02-25T14:20:45.7069793Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7069909Z         if err_msg is None:
2025-02-25T14:20:45.7070011Z             if left.shape != right.shape:
2025-02-25T14:20:45.7070113Z                 raise_assert_detail(
2025-02-25T14:20:45.7070272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7070467Z                 )
2025-02-25T14:20:45.7070710Z     
2025-02-25T14:20:45.7070832Z             diff = 0
2025-02-25T14:20:45.7070962Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7071078Z                 # count up differences
2025-02-25T14:20:45.7071259Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7071355Z                     diff += 1
2025-02-25T14:20:45.7071437Z     
2025-02-25T14:20:45.7071532Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7071694Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7071870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7072011Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7072095Z E           
2025-02-25T14:20:45.7072229Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7072514Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7072798Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7072804Z 
2025-02-25T14:20:45.7073134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7073140Z 
2025-02-25T14:20:45.7073461Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7073466Z 
2025-02-25T14:20:45.7073725Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e780>
2025-02-25T14:20:45.7073909Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7074005Z attr = 'previous_beta_sobolev'
2025-02-25T14:20:45.7074010Z 
2025-02-25T14:20:45.7074170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7074293Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7074398Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7074475Z         try:
2025-02-25T14:20:45.7074644Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7074735Z         except KeyError:
2025-02-25T14:20:45.7074888Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7074969Z     
2025-02-25T14:20:45.7075086Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7075223Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7075319Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7075478Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7075574Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7075682Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7075801Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7075899Z             else:
2025-02-25T14:20:45.7076001Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7076137Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7076141Z 
2025-02-25T14:20:45.7076279Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7076424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7076715Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7076852Z     ???
2025-02-25T14:20:45.7077074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7077258Z 
2025-02-25T14:20:45.7077385Z >   ???
2025-02-25T14:20:45.7077626Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7077740Z E   
2025-02-25T14:20:45.7077902Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7078024Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7078132Z E          ...
2025-02-25T14:20:45.7078226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7078378Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7078513Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7078597Z E          ...
2025-02-25T14:20:45.7078710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7078845Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7078979Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7078984Z 
2025-02-25T14:20:45.7079078Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7079310Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-25T14:20:45.7079314Z 
2025-02-25T14:20:45.7079461Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7079623Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7079745Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7079886Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7080034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7080138Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7080236Z err_msg = None
2025-02-25T14:20:45.7080343Z 
2025-02-25T14:20:45.7080470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7080773Z         if err_msg is None:
2025-02-25T14:20:45.7080906Z             if left.shape != right.shape:
2025-02-25T14:20:45.7081001Z                 raise_assert_detail(
2025-02-25T14:20:45.7081183Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7081269Z                 )
2025-02-25T14:20:45.7081367Z     
2025-02-25T14:20:45.7081451Z             diff = 0
2025-02-25T14:20:45.7081590Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7081694Z                 # count up differences
2025-02-25T14:20:45.7081900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7081988Z                     diff += 1
2025-02-25T14:20:45.7082085Z     
2025-02-25T14:20:45.7082193Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7082360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7082568Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7082695Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7082789Z E           
2025-02-25T14:20:45.7082904Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7083182Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7083451Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7083478Z 
2025-02-25T14:20:45.7083782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7083939Z 
2025-02-25T14:20:45.7084122Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7084126Z 
2025-02-25T14:20:45.7084353Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e840>
2025-02-25T14:20:45.7084537Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7084628Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7084644Z 
2025-02-25T14:20:45.7084784Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7084918Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7085006Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7085101Z         try:
2025-02-25T14:20:45.7085250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7085354Z         except KeyError:
2025-02-25T14:20:45.7085499Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7085595Z     
2025-02-25T14:20:45.7085692Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7085804Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7085898Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7086053Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7086161Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7086258Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7086389Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7086464Z             else:
2025-02-25T14:20:45.7086573Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7086681Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7086686Z 
2025-02-25T14:20:45.7086823Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7087074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7087243Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7087316Z     ???
2025-02-25T14:20:45.7087446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7087451Z 
2025-02-25T14:20:45.7087535Z >   ???
2025-02-25T14:20:45.7087666Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7087757Z E   
2025-02-25T14:20:45.7087889Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7088016Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7088093Z E          ...
2025-02-25T14:20:45.7088201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7088333Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7088460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7088544Z E          ...
2025-02-25T14:20:45.7088646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7088790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7088896Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7088901Z 
2025-02-25T14:20:45.7089006Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7089212Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-25T14:20:45.7089217Z 
2025-02-25T14:20:45.7089361Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7089495Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7089611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7089763Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7089891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7090012Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7090183Z err_msg = None
2025-02-25T14:20:45.7090187Z 
2025-02-25T14:20:45.7090315Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7090406Z         if err_msg is None:
2025-02-25T14:20:45.7090655Z             if left.shape != right.shape:
2025-02-25T14:20:45.7090788Z                 raise_assert_detail(
2025-02-25T14:20:45.7090961Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7091056Z                 )
2025-02-25T14:20:45.7091134Z     
2025-02-25T14:20:45.7091232Z             diff = 0
2025-02-25T14:20:45.7091348Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7091457Z                 # count up differences
2025-02-25T14:20:45.7091630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7091735Z                     diff += 1
2025-02-25T14:20:45.7091803Z     
2025-02-25T14:20:45.7091916Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7092062Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7092249Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7092367Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7092463Z E           
2025-02-25T14:20:45.7092593Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7092856Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7093136Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7093284Z 
2025-02-25T14:20:45.7093590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7093605Z 
2025-02-25T14:20:45.7093777Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7093782Z 
2025-02-25T14:20:45.7094027Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72e900>
2025-02-25T14:20:45.7094197Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7094294Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7094298Z 
2025-02-25T14:20:45.7094441Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7094570Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7094668Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7094771Z         try:
2025-02-25T14:20:45.7094946Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7095031Z         except KeyError:
2025-02-25T14:20:45.7095191Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7095268Z     
2025-02-25T14:20:45.7095378Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7095479Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7095601Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7095746Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7095857Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7095962Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7096099Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7096205Z             else:
2025-02-25T14:20:45.7096305Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7096453Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7096587Z 
2025-02-25T14:20:45.7096719Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7096854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7097009Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7097105Z     ???
2025-02-25T14:20:45.7097217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7097221Z 
2025-02-25T14:20:45.7097308Z >   ???
2025-02-25T14:20:45.7097443Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7097536Z E   
2025-02-25T14:20:45.7097693Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7097807Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7097900Z E          ...
2025-02-25T14:20:45.7097996Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7098158Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7098286Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7098381Z E          ...
2025-02-25T14:20:45.7098475Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7098620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7098737Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7098758Z 
2025-02-25T14:20:45.7098855Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7099084Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-25T14:20:45.7099089Z 
2025-02-25T14:20:45.7099221Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7099377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7099590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7099747Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7099890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7100012Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7100112Z err_msg = None
2025-02-25T14:20:45.7100116Z 
2025-02-25T14:20:45.7100235Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7100342Z         if err_msg is None:
2025-02-25T14:20:45.7100450Z             if left.shape != right.shape:
2025-02-25T14:20:45.7100674Z                 raise_assert_detail(
2025-02-25T14:20:45.7100830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7100928Z                 )
2025-02-25T14:20:45.7101008Z     
2025-02-25T14:20:45.7101109Z             diff = 0
2025-02-25T14:20:45.7101232Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7101354Z                 # count up differences
2025-02-25T14:20:45.7101554Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7101637Z                     diff += 1
2025-02-25T14:20:45.7101745Z     
2025-02-25T14:20:45.7101843Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7102004Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7102190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7102325Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7102407Z E           
2025-02-25T14:20:45.7102545Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7102823Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7103566Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7103576Z 
2025-02-25T14:20:45.7104141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7104151Z 
2025-02-25T14:20:45.7104333Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7104352Z 
2025-02-25T14:20:45.7104587Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72ea80>
2025-02-25T14:20:45.7104790Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d91edc10>
2025-02-25T14:20:45.7104882Z attr = 'j_blues'
2025-02-25T14:20:45.7104886Z 
2025-02-25T14:20:45.7105042Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7105179Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7105289Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7105369Z         try:
2025-02-25T14:20:45.7105541Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7105631Z         except KeyError:
2025-02-25T14:20:45.7105798Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7105898Z     
2025-02-25T14:20:45.7105990Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7106105Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7106200Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7106361Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7106455Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7106715Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7106834Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7106933Z             else:
2025-02-25T14:20:45.7107035Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7107160Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7107164Z 
2025-02-25T14:20:45.7107311Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7107435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7107597Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7107672Z     ???
2025-02-25T14:20:45.7107801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7107805Z 
2025-02-25T14:20:45.7107881Z >   ???
2025-02-25T14:20:45.7108027Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7108111Z E   
2025-02-25T14:20:45.7108277Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7108395Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7108498Z E          ...
2025-02-25T14:20:45.7108610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7108746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7108884Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7108959Z E          ...
2025-02-25T14:20:45.7109071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7109207Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7109329Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7109334Z 
2025-02-25T14:20:45.7109427Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7109708Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-25T14:20:45.7109712Z 
2025-02-25T14:20:45.7109860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7110011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7110257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7110405Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7110754Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7110885Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7110978Z err_msg = None
2025-02-25T14:20:45.7110982Z 
2025-02-25T14:20:45.7111099Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7111189Z         if err_msg is None:
2025-02-25T14:20:45.7111304Z             if left.shape != right.shape:
2025-02-25T14:20:45.7111395Z                 raise_assert_detail(
2025-02-25T14:20:45.7111567Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7111650Z                 )
2025-02-25T14:20:45.7111741Z     
2025-02-25T14:20:45.7111823Z             diff = 0
2025-02-25T14:20:45.7111955Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7112050Z                 # count up differences
2025-02-25T14:20:45.7112247Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7112331Z                     diff += 1
2025-02-25T14:20:45.7112420Z     
2025-02-25T14:20:45.7112526Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7112665Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7112852Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7112969Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7113054Z E           
2025-02-25T14:20:45.7113175Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7113614Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7113886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7113905Z 
2025-02-25T14:20:45.7114210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7114215Z 
2025-02-25T14:20:45.7114399Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7114415Z 
2025-02-25T14:20:45.7114643Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f800>
2025-02-25T14:20:45.7114833Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7114926Z attr = 'lines'
2025-02-25T14:20:45.7114930Z 
2025-02-25T14:20:45.7115070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7115200Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7115293Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7115385Z         try:
2025-02-25T14:20:45.7115530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7115632Z         except KeyError:
2025-02-25T14:20:45.7115776Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7115864Z     
2025-02-25T14:20:45.7115964Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7116083Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7116192Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7116332Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7116577Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7116679Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7116816Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7116894Z             else:
2025-02-25T14:20:45.7117013Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7117126Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7117130Z 
2025-02-25T14:20:45.7117270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7117388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7117557Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7117653Z     ???
2025-02-25T14:20:45.7117775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7117785Z 
2025-02-25T14:20:45.7117882Z >   ???
2025-02-25T14:20:45.7118007Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7118102Z E   
2025-02-25T14:20:45.7118240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7118377Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7118456Z E          ...
2025-02-25T14:20:45.7118574Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7118710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7118841Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7118938Z E          ...
2025-02-25T14:20:45.7119028Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7119174Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7119282Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7119287Z 
2025-02-25T14:20:45.7119508Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7119739Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-25T14:20:45.7119750Z 
2025-02-25T14:20:45.7119996Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f8c0>
2025-02-25T14:20:45.7120166Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7120272Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7120277Z 
2025-02-25T14:20:45.7120433Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7120661Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7120763Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7120849Z         try:
2025-02-25T14:20:45.7121012Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7121104Z         except KeyError:
2025-02-25T14:20:45.7121261Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7121355Z     
2025-02-25T14:20:45.7121473Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7121580Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7121694Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7121846Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7121948Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7122057Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7122174Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7122178Z 
2025-02-25T14:20:45.7122323Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7122449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7122454Z 
2025-02-25T14:20:45.7122622Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7122715Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7122846Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7122963Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7123250Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7123353Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7123466Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7123567Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7123645Z err_msg = None
2025-02-25T14:20:45.7123649Z 
2025-02-25T14:20:45.7123775Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7123868Z         if err_msg is None:
2025-02-25T14:20:45.7123982Z             if left.shape != right.shape:
2025-02-25T14:20:45.7124084Z                 raise_assert_detail(
2025-02-25T14:20:45.7124241Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7124331Z                 )
2025-02-25T14:20:45.7124411Z     
2025-02-25T14:20:45.7124499Z             diff = 0
2025-02-25T14:20:45.7124611Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7124737Z                 # count up differences
2025-02-25T14:20:45.7124916Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7125011Z                     diff += 1
2025-02-25T14:20:45.7125089Z     
2025-02-25T14:20:45.7125193Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7125337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7125528Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7125652Z E           AssertionError: Series are different
2025-02-25T14:20:45.7125731Z E           
2025-02-25T14:20:45.7125852Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7126236Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7126735Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7127088Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7127103Z 
2025-02-25T14:20:45.7127414Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7127665Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-25T14:20:45.7127672Z 
2025-02-25T14:20:45.7127915Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72f980>
2025-02-25T14:20:45.7128088Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7128205Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7128209Z 
2025-02-25T14:20:45.7128351Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7128481Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7128567Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7128695Z         try:
2025-02-25T14:20:45.7128961Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7129119Z         except KeyError:
2025-02-25T14:20:45.7129499Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7129620Z     
2025-02-25T14:20:45.7129787Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7129894Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7130006Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7130144Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7130251Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7130348Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7130482Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7130487Z 
2025-02-25T14:20:45.7130807Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7130941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7130955Z 
2025-02-25T14:20:45.7131117Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7131213Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7131341Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7131428Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7131586Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7131668Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7131790Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7131881Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7131977Z err_msg = None
2025-02-25T14:20:45.7131981Z 
2025-02-25T14:20:45.7132117Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7132204Z         if err_msg is None:
2025-02-25T14:20:45.7132321Z             if left.shape != right.shape:
2025-02-25T14:20:45.7132586Z                 raise_assert_detail(
2025-02-25T14:20:45.7132756Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7132844Z                 )
2025-02-25T14:20:45.7132939Z     
2025-02-25T14:20:45.7133014Z             diff = 0
2025-02-25T14:20:45.7133146Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7133246Z                 # count up differences
2025-02-25T14:20:45.7133438Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7133536Z                     diff += 1
2025-02-25T14:20:45.7133615Z     
2025-02-25T14:20:45.7133727Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7133866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7134054Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7134164Z E           AssertionError: Series are different
2025-02-25T14:20:45.7134265Z E           
2025-02-25T14:20:45.7134374Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7134779Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7135179Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7135570Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7135736Z 
2025-02-25T14:20:45.7136059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7136269Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-25T14:20:45.7136274Z 
2025-02-25T14:20:45.7136406Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7136548Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7136661Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7136815Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7136967Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7137068Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7137170Z err_msg = None
2025-02-25T14:20:45.7137175Z 
2025-02-25T14:20:45.7137284Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7137383Z         if err_msg is None:
2025-02-25T14:20:45.7137483Z             if left.shape != right.shape:
2025-02-25T14:20:45.7137584Z                 raise_assert_detail(
2025-02-25T14:20:45.7137738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7137830Z                 )
2025-02-25T14:20:45.7137903Z     
2025-02-25T14:20:45.7137995Z             diff = 0
2025-02-25T14:20:45.7138223Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7138314Z                 # count up differences
2025-02-25T14:20:45.7138511Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7138596Z                     diff += 1
2025-02-25T14:20:45.7138686Z     
2025-02-25T14:20:45.7138787Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7138945Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7139126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7139255Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7139330Z E           
2025-02-25T14:20:45.7139460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7139749Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7140026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7140032Z 
2025-02-25T14:20:45.7140359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7140364Z 
2025-02-25T14:20:45.7140661Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7140666Z 
2025-02-25T14:20:45.7140905Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fbc0>
2025-02-25T14:20:45.7141123Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>, attr = 'nu'
2025-02-25T14:20:45.7141136Z 
2025-02-25T14:20:45.7141277Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7141540Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7141631Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7141721Z         try:
2025-02-25T14:20:45.7141879Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7141980Z         except KeyError:
2025-02-25T14:20:45.7142139Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7142217Z     
2025-02-25T14:20:45.7142339Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7142434Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7142541Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7142682Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7142782Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7142880Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7143018Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7143029Z 
2025-02-25T14:20:45.7143162Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7143300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7143470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7143547Z     ???
2025-02-25T14:20:45.7143678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7143683Z 
2025-02-25T14:20:45.7143760Z >   ???
2025-02-25T14:20:45.7143912Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7143988Z E   
2025-02-25T14:20:45.7144137Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7144258Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7144349Z E          ...
2025-02-25T14:20:45.7144444Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7144723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7144862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7144942Z E          ...
2025-02-25T14:20:45.7145054Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7145186Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7145316Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7145321Z 
2025-02-25T14:20:45.7145418Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7145647Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-25T14:20:45.7145651Z 
2025-02-25T14:20:45.7145787Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7145938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7146062Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7146200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7146355Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7146457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7146555Z err_msg = None
2025-02-25T14:20:45.7146559Z 
2025-02-25T14:20:45.7146677Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7146776Z         if err_msg is None:
2025-02-25T14:20:45.7146892Z             if left.shape != right.shape:
2025-02-25T14:20:45.7146984Z                 raise_assert_detail(
2025-02-25T14:20:45.7147144Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7147222Z                 )
2025-02-25T14:20:45.7147310Z     
2025-02-25T14:20:45.7147391Z             diff = 0
2025-02-25T14:20:45.7147525Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7147632Z                 # count up differences
2025-02-25T14:20:45.7148023Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7148151Z                     diff += 1
2025-02-25T14:20:45.7148337Z     
2025-02-25T14:20:45.7148701Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7148943Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7149151Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7149370Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7149476Z E           
2025-02-25T14:20:45.7149710Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7150071Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7150399Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7150405Z 
2025-02-25T14:20:45.7151070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7151078Z 
2025-02-25T14:20:45.7151318Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7151322Z 
2025-02-25T14:20:45.7151641Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fc80>
2025-02-25T14:20:45.7151916Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7152202Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7152207Z 
2025-02-25T14:20:45.7152465Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7162007Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7162155Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7162230Z         try:
2025-02-25T14:20:45.7162390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7162474Z         except KeyError:
2025-02-25T14:20:45.7162660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7162783Z     
2025-02-25T14:20:45.7162935Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7163096Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7163240Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7163471Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7163618Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7163770Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7163886Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7163899Z 
2025-02-25T14:20:45.7164041Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7164166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7164327Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7164403Z     ???
2025-02-25T14:20:45.7164513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7164518Z 
2025-02-25T14:20:45.7164594Z >   ???
2025-02-25T14:20:45.7164732Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7164821Z E   
2025-02-25T14:20:45.7164982Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7165104Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7165198Z E          ...
2025-02-25T14:20:45.7165307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7165524Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7165943Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7166085Z E          ...
2025-02-25T14:20:45.7166236Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7166436Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7166554Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7166572Z 
2025-02-25T14:20:45.7166669Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7166884Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-25T14:20:45.7166889Z 
2025-02-25T14:20:45.7167028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7167197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7167312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7167475Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7167624Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7167735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7167840Z err_msg = None
2025-02-25T14:20:45.7167844Z 
2025-02-25T14:20:45.7167965Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7168068Z         if err_msg is None:
2025-02-25T14:20:45.7168180Z             if left.shape != right.shape:
2025-02-25T14:20:45.7168286Z                 raise_assert_detail(
2025-02-25T14:20:45.7168443Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7168533Z                 )
2025-02-25T14:20:45.7168613Z     
2025-02-25T14:20:45.7168704Z             diff = 0
2025-02-25T14:20:45.7168962Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7169075Z                 # count up differences
2025-02-25T14:20:45.7169280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7169365Z                     diff += 1
2025-02-25T14:20:45.7169458Z     
2025-02-25T14:20:45.7169555Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7169711Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7169896Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7170034Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7170114Z E           
2025-02-25T14:20:45.7170248Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7170735Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7171058Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7171064Z 
2025-02-25T14:20:45.7171404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7171409Z 
2025-02-25T14:20:45.7171590Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7171612Z 
2025-02-25T14:20:45.7171844Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c72fd40>
2025-02-25T14:20:45.7172073Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>, attr = 'f_lu'
2025-02-25T14:20:45.7172085Z 
2025-02-25T14:20:45.7172228Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7172499Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7172586Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7172661Z         try:
2025-02-25T14:20:45.7172808Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7172911Z         except KeyError:
2025-02-25T14:20:45.7173066Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7173156Z     
2025-02-25T14:20:45.7173261Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7173366Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7173477Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7173615Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7173716Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7173820Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7173944Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7173955Z 
2025-02-25T14:20:45.7174090Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7174222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7174461Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7174600Z     ???
2025-02-25T14:20:45.7174812Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7174818Z 
2025-02-25T14:20:45.7174938Z >   ???
2025-02-25T14:20:45.7175176Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7175300Z E   
2025-02-25T14:20:45.7175497Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7175612Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7175704Z E          ...
2025-02-25T14:20:45.7175944Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7176087Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7176230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7176312Z E          ...
2025-02-25T14:20:45.7176414Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7176543Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7176673Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7176677Z 
2025-02-25T14:20:45.7176778Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7177000Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-25T14:20:45.7177004Z 
2025-02-25T14:20:45.7177142Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7177301Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7177431Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7177566Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7177718Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7177818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7177911Z err_msg = None
2025-02-25T14:20:45.7177915Z 
2025-02-25T14:20:45.7178025Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7178127Z         if err_msg is None:
2025-02-25T14:20:45.7178225Z             if left.shape != right.shape:
2025-02-25T14:20:45.7178328Z                 raise_assert_detail(
2025-02-25T14:20:45.7178490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7178567Z                 )
2025-02-25T14:20:45.7178652Z     
2025-02-25T14:20:45.7178731Z             diff = 0
2025-02-25T14:20:45.7178868Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7178960Z                 # count up differences
2025-02-25T14:20:45.7179301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7179385Z                     diff += 1
2025-02-25T14:20:45.7179470Z     
2025-02-25T14:20:45.7179565Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7179729Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7179902Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7180034Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7180121Z E           
2025-02-25T14:20:45.7180239Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7180639Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7180929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7180950Z 
2025-02-25T14:20:45.7181265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7181270Z 
2025-02-25T14:20:45.7181448Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7181452Z 
2025-02-25T14:20:45.7181679Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c754500>
2025-02-25T14:20:45.7181859Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7182081Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7182085Z 
2025-02-25T14:20:45.7182249Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7182382Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7182469Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7182563Z         try:
2025-02-25T14:20:45.7182703Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7182808Z         except KeyError:
2025-02-25T14:20:45.7182949Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7183037Z     
2025-02-25T14:20:45.7183128Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7183242Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7183335Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7183490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7183580Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7183708Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7183838Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7183934Z             else:
2025-02-25T14:20:45.7184046Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7184159Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7184163Z 
2025-02-25T14:20:45.7184306Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7184427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7184590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7184663Z     ???
2025-02-25T14:20:45.7184788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7184793Z 
2025-02-25T14:20:45.7184882Z >   ???
2025-02-25T14:20:45.7185012Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7185101Z E   
2025-02-25T14:20:45.7185245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7185376Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7185584Z E          ...
2025-02-25T14:20:45.7185687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7185824Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7185953Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7186028Z E          ...
2025-02-25T14:20:45.7186126Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7186264Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7186373Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7186378Z 
2025-02-25T14:20:45.7186485Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7186690Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-25T14:20:45.7186694Z 
2025-02-25T14:20:45.7186847Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7186980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7187107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7187243Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7187388Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7187503Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7187589Z err_msg = None
2025-02-25T14:20:45.7187593Z 
2025-02-25T14:20:45.7187714Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7187798Z         if err_msg is None:
2025-02-25T14:20:45.7187904Z             if left.shape != right.shape:
2025-02-25T14:20:45.7187997Z                 raise_assert_detail(
2025-02-25T14:20:45.7188255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7188334Z                 )
2025-02-25T14:20:45.7188430Z     
2025-02-25T14:20:45.7188512Z             diff = 0
2025-02-25T14:20:45.7188641Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7188750Z                 # count up differences
2025-02-25T14:20:45.7188922Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7189020Z                     diff += 1
2025-02-25T14:20:45.7189092Z     
2025-02-25T14:20:45.7189202Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7189341Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7189525Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7189644Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7189734Z E           
2025-02-25T14:20:45.7189848Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7190135Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7190424Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7190430Z 
2025-02-25T14:20:45.7190952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7190972Z 
2025-02-25T14:20:45.7191151Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7191164Z 
2025-02-25T14:20:45.7191408Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7545c0>
2025-02-25T14:20:45.7191714Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7191812Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7191817Z 
2025-02-25T14:20:45.7191956Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7192092Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7192185Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7192269Z         try:
2025-02-25T14:20:45.7192407Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7192487Z         except KeyError:
2025-02-25T14:20:45.7192638Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7192710Z     
2025-02-25T14:20:45.7192818Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7192924Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7193041Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7193178Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7193304Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7193398Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7193524Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7193599Z             else:
2025-02-25T14:20:45.7193709Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7193831Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7193836Z 
2025-02-25T14:20:45.7193963Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7194092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7194244Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7194331Z     ???
2025-02-25T14:20:45.7194444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7194571Z 
2025-02-25T14:20:45.7194655Z >   ???
2025-02-25T14:20:45.7194799Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7194884Z E   
2025-02-25T14:20:45.7195027Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7195146Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7195237Z E          ...
2025-02-25T14:20:45.7195336Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7195491Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7195612Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7195706Z E          ...
2025-02-25T14:20:45.7195799Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7195943Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7196052Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7196063Z 
2025-02-25T14:20:45.7196172Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7196387Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-25T14:20:45.7196401Z 
2025-02-25T14:20:45.7196541Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7196685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7196786Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7196931Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7197057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7197159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7197256Z err_msg = None
2025-02-25T14:20:45.7197260Z 
2025-02-25T14:20:45.7197382Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7197490Z         if err_msg is None:
2025-02-25T14:20:45.7197594Z             if left.shape != right.shape:
2025-02-25T14:20:45.7197786Z                 raise_assert_detail(
2025-02-25T14:20:45.7197944Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7198032Z                 )
2025-02-25T14:20:45.7198102Z     
2025-02-25T14:20:45.7198189Z             diff = 0
2025-02-25T14:20:45.7198311Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7198412Z                 # count up differences
2025-02-25T14:20:45.7198591Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7198686Z                     diff += 1
2025-02-25T14:20:45.7198772Z     
2025-02-25T14:20:45.7198869Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7199031Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7199207Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7199342Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7199427Z E           
2025-02-25T14:20:45.7199564Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7199998Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7200494Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7200641Z 
2025-02-25T14:20:45.7201222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7201240Z 
2025-02-25T14:20:45.7201421Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7201426Z 
2025-02-25T14:20:45.7201675Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c754740>
2025-02-25T14:20:45.7201859Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a145a8d10>
2025-02-25T14:20:45.7201951Z attr = 'j_blues'
2025-02-25T14:20:45.7201956Z 
2025-02-25T14:20:45.7202103Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7202234Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7202328Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7202414Z         try:
2025-02-25T14:20:45.7202567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7202667Z         except KeyError:
2025-02-25T14:20:45.7202822Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7202900Z     
2025-02-25T14:20:45.7203004Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7203106Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7203213Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7203351Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7203456Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7203550Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7203673Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7203746Z             else:
2025-02-25T14:20:45.7203857Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7203964Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7203979Z 
2025-02-25T14:20:45.7204107Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7204233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7204391Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7204625Z     ???
2025-02-25T14:20:45.7204746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7204751Z 
2025-02-25T14:20:45.7204840Z >   ???
2025-02-25T14:20:45.7204970Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7205052Z E   
2025-02-25T14:20:45.7205186Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7205314Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7205401Z E          ...
2025-02-25T14:20:45.7205493Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7205643Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7205765Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7205857Z E          ...
2025-02-25T14:20:45.7205942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7206081Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7206194Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7206199Z 
2025-02-25T14:20:45.7206301Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7206502Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-25T14:20:45.7206514Z 
2025-02-25T14:20:45.7206648Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7206795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7206896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7207036Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7207167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7207356Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7207434Z err_msg = None
2025-02-25T14:20:45.7207444Z 
2025-02-25T14:20:45.7207558Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7207651Z         if err_msg is None:
2025-02-25T14:20:45.7207748Z             if left.shape != right.shape:
2025-02-25T14:20:45.7207841Z                 raise_assert_detail(
2025-02-25T14:20:45.7207986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7208065Z                 )
2025-02-25T14:20:45.7208140Z     
2025-02-25T14:20:45.7208230Z             diff = 0
2025-02-25T14:20:45.7208348Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7208458Z                 # count up differences
2025-02-25T14:20:45.7208627Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7208710Z                     diff += 1
2025-02-25T14:20:45.7208792Z     
2025-02-25T14:20:45.7208899Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7209050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7209231Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7209358Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7209426Z E           
2025-02-25T14:20:45.7209535Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7209802Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7210113Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7210274Z 
2025-02-25T14:20:45.7210998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7211008Z 
2025-02-25T14:20:45.7211300Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7211307Z 
2025-02-25T14:20:45.7211699Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7554c0>
2025-02-25T14:20:45.7211879Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7211969Z attr = 'lines'
2025-02-25T14:20:45.7211974Z 
2025-02-25T14:20:45.7212127Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7212247Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7212342Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7212421Z         try:
2025-02-25T14:20:45.7212572Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7212667Z         except KeyError:
2025-02-25T14:20:45.7212853Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7212924Z     
2025-02-25T14:20:45.7213024Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7213135Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7213239Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7213382Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7213536Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7213707Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7213899Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7214043Z             else:
2025-02-25T14:20:45.7214201Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7214395Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7214602Z 
2025-02-25T14:20:45.7214826Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7215045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7215313Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7215436Z     ???
2025-02-25T14:20:45.7215632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7215641Z 
2025-02-25T14:20:45.7215757Z >   ???
2025-02-25T14:20:45.7215983Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7216105Z E   
2025-02-25T14:20:45.7216342Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7216528Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7216662Z E          ...
2025-02-25T14:20:45.7216812Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7217045Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7217266Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7217395Z E          ...
2025-02-25T14:20:45.7217549Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7217760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7217950Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7217957Z 
2025-02-25T14:20:45.7218108Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7218509Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-25T14:20:45.7218517Z 
2025-02-25T14:20:45.7218902Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755580>
2025-02-25T14:20:45.7219190Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7219351Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7219359Z 
2025-02-25T14:20:45.7219592Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7219808Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7220137Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7220278Z         try:
2025-02-25T14:20:45.7220713Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7220877Z         except KeyError:
2025-02-25T14:20:45.7221111Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7221246Z     
2025-02-25T14:20:45.7221397Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7221577Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7221750Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7221984Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7222140Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7222288Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7222482Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7222501Z 
2025-02-25T14:20:45.7222714Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7222925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7222932Z 
2025-02-25T14:20:45.7223162Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7223318Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7223525Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7223652Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7223811Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7223899Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7224022Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7224102Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7224189Z err_msg = None
2025-02-25T14:20:45.7224347Z 
2025-02-25T14:20:45.7224463Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7224565Z         if err_msg is None:
2025-02-25T14:20:45.7224672Z             if left.shape != right.shape:
2025-02-25T14:20:45.7224761Z                 raise_assert_detail(
2025-02-25T14:20:45.7224919Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7224995Z                 )
2025-02-25T14:20:45.7225072Z     
2025-02-25T14:20:45.7225145Z             diff = 0
2025-02-25T14:20:45.7225268Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7225356Z                 # count up differences
2025-02-25T14:20:45.7225531Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7225607Z                     diff += 1
2025-02-25T14:20:45.7225684Z     
2025-02-25T14:20:45.7225779Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7225931Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7226124Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7226238Z E           AssertionError: Series are different
2025-02-25T14:20:45.7226319Z E           
2025-02-25T14:20:45.7226426Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7226815Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7227145Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7227623Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7227630Z 
2025-02-25T14:20:45.7227952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7228175Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-25T14:20:45.7228180Z 
2025-02-25T14:20:45.7228403Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755640>
2025-02-25T14:20:45.7228582Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7228678Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7228685Z 
2025-02-25T14:20:45.7228824Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7228940Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7229031Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7229104Z         try:
2025-02-25T14:20:45.7229250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7229345Z         except KeyError:
2025-02-25T14:20:45.7229595Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7229741Z     
2025-02-25T14:20:45.7229889Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7230059Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7230209Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7230440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7230932Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7231043Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7231173Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7231177Z 
2025-02-25T14:20:45.7231321Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7231444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7231449Z 
2025-02-25T14:20:45.7231587Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7231691Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7231803Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7231895Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7232037Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7232126Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7232243Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7232342Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7232428Z err_msg = None
2025-02-25T14:20:45.7232433Z 
2025-02-25T14:20:45.7232542Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7232631Z         if err_msg is None:
2025-02-25T14:20:45.7232726Z             if left.shape != right.shape:
2025-02-25T14:20:45.7232822Z                 raise_assert_detail(
2025-02-25T14:20:45.7232970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7233053Z                 )
2025-02-25T14:20:45.7233123Z     
2025-02-25T14:20:45.7233208Z             diff = 0
2025-02-25T14:20:45.7233321Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7233420Z                 # count up differences
2025-02-25T14:20:45.7233596Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7233685Z                     diff += 1
2025-02-25T14:20:45.7233767Z     
2025-02-25T14:20:45.7233991Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7234140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7234321Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7234436Z E           AssertionError: Series are different
2025-02-25T14:20:45.7234507Z E           
2025-02-25T14:20:45.7234614Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7234985Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7235382Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7235779Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7235785Z 
2025-02-25T14:20:45.7236108Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7236412Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-25T14:20:45.7236427Z 
2025-02-25T14:20:45.7236573Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7236710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7236821Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7236955Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7237090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7237187Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7237264Z err_msg = None
2025-02-25T14:20:45.7237267Z 
2025-02-25T14:20:45.7237378Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7237461Z         if err_msg is None:
2025-02-25T14:20:45.7237571Z             if left.shape != right.shape:
2025-02-25T14:20:45.7237674Z                 raise_assert_detail(
2025-02-25T14:20:45.7237842Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7237914Z                 )
2025-02-25T14:20:45.7237995Z     
2025-02-25T14:20:45.7238076Z             diff = 0
2025-02-25T14:20:45.7238188Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7238288Z                 # count up differences
2025-02-25T14:20:45.7238460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7238548Z                     diff += 1
2025-02-25T14:20:45.7238617Z     
2025-02-25T14:20:45.7238715Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7238851Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7239036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7239151Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7239337Z E           
2025-02-25T14:20:45.7239460Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7239737Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7240020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7240029Z 
2025-02-25T14:20:45.7240333Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7240354Z 
2025-02-25T14:20:45.7240718Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7240729Z 
2025-02-25T14:20:45.7241001Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755880>
2025-02-25T14:20:45.7241205Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>, attr = 'nu'
2025-02-25T14:20:45.7241210Z 
2025-02-25T14:20:45.7241360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7241479Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7241581Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7241655Z         try:
2025-02-25T14:20:45.7241811Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7241903Z         except KeyError:
2025-02-25T14:20:45.7242043Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7242305Z     
2025-02-25T14:20:45.7242395Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7242503Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7242594Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7242737Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7242820Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7242917Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7243028Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7243033Z 
2025-02-25T14:20:45.7243168Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7243291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7243443Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7243537Z     ???
2025-02-25T14:20:45.7243652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7243665Z 
2025-02-25T14:20:45.7243743Z >   ???
2025-02-25T14:20:45.7243875Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7243950Z E   
2025-02-25T14:20:45.7244075Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7244197Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7244268Z E          ...
2025-02-25T14:20:45.7244365Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7244510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7244623Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7244701Z E          ...
2025-02-25T14:20:45.7244786Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7244921Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7245025Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7245041Z 
2025-02-25T14:20:45.7245142Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7245345Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-25T14:20:45.7245478Z 
2025-02-25T14:20:45.7245620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7245767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7245865Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7246004Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7246133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7246236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7246312Z err_msg = None
2025-02-25T14:20:45.7246316Z 
2025-02-25T14:20:45.7246446Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7246556Z         if err_msg is None:
2025-02-25T14:20:45.7246652Z             if left.shape != right.shape:
2025-02-25T14:20:45.7246754Z                 raise_assert_detail(
2025-02-25T14:20:45.7246900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7246982Z                 )
2025-02-25T14:20:45.7247055Z     
2025-02-25T14:20:45.7247138Z             diff = 0
2025-02-25T14:20:45.7247250Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7247352Z                 # count up differences
2025-02-25T14:20:45.7247526Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7247622Z                     diff += 1
2025-02-25T14:20:45.7247692Z     
2025-02-25T14:20:45.7247788Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7247941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7248114Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7248343Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7248425Z E           
2025-02-25T14:20:45.7248546Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7248810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7249153Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7249159Z 
2025-02-25T14:20:45.7249479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7249497Z 
2025-02-25T14:20:45.7249664Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7249669Z 
2025-02-25T14:20:45.7249897Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755940>
2025-02-25T14:20:45.7250077Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7250186Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7250190Z 
2025-02-25T14:20:45.7250348Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7250470Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7250677Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7250753Z         try:
2025-02-25T14:20:45.7250906Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7250992Z         except KeyError:
2025-02-25T14:20:45.7251159Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7251234Z     
2025-02-25T14:20:45.7251471Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7251573Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7251679Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7251825Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7251916Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7252024Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7252138Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7252143Z 
2025-02-25T14:20:45.7252280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7252436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7252596Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7252671Z     ???
2025-02-25T14:20:45.7252797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7252811Z 
2025-02-25T14:20:45.7252892Z >   ???
2025-02-25T14:20:45.7253032Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7253112Z E   
2025-02-25T14:20:45.7253245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7253372Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7253447Z E          ...
2025-02-25T14:20:45.7253554Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7253688Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7253817Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7253894Z E          ...
2025-02-25T14:20:45.7253999Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7254117Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7254226Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7254375Z 
2025-02-25T14:20:45.7254474Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7254658Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-25T14:20:45.7254670Z 
2025-02-25T14:20:45.7254809Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7254944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7255060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7255201Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7255339Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7255446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7255527Z err_msg = None
2025-02-25T14:20:45.7255531Z 
2025-02-25T14:20:45.7255654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7255749Z         if err_msg is None:
2025-02-25T14:20:45.7255862Z             if left.shape != right.shape:
2025-02-25T14:20:45.7255956Z                 raise_assert_detail(
2025-02-25T14:20:45.7256123Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7256196Z                 )
2025-02-25T14:20:45.7256283Z     
2025-02-25T14:20:45.7256359Z             diff = 0
2025-02-25T14:20:45.7256489Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7256594Z                 # count up differences
2025-02-25T14:20:45.7256772Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7256864Z                     diff += 1
2025-02-25T14:20:45.7256942Z     
2025-02-25T14:20:45.7257049Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7257188Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7257385Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7257503Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7257686Z E           
2025-02-25T14:20:45.7257801Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7258084Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7258368Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7258381Z 
2025-02-25T14:20:45.7258691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7258703Z 
2025-02-25T14:20:45.7258883Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7258888Z 
2025-02-25T14:20:45.7259123Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c755a00>
2025-02-25T14:20:45.7259326Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>, attr = 'f_lu'
2025-02-25T14:20:45.7259330Z 
2025-02-25T14:20:45.7259481Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7259602Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7259701Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7259775Z         try:
2025-02-25T14:20:45.7259932Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7260015Z         except KeyError:
2025-02-25T14:20:45.7260268Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7260354Z     
2025-02-25T14:20:45.7260454Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7260663Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7260761Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7260900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7260991Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7261101Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7261216Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7261220Z 
2025-02-25T14:20:45.7261369Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7261502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7261652Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7261744Z     ???
2025-02-25T14:20:45.7261859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7261870Z 
2025-02-25T14:20:45.7261957Z >   ???
2025-02-25T14:20:45.7262089Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7262172Z E   
2025-02-25T14:20:45.7262303Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7262435Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7262514Z E          ...
2025-02-25T14:20:45.7262633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7262784Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7262900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7262985Z E          ...
2025-02-25T14:20:45.7263078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7263219Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7263328Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7263343Z 
2025-02-25T14:20:45.7263453Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7263773Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-25T14:20:45.7263960Z 
2025-02-25T14:20:45.7264221Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7264461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7264625Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7264877Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7265008Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7265124Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7265205Z err_msg = None
2025-02-25T14:20:45.7265209Z 
2025-02-25T14:20:45.7265341Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7265430Z         if err_msg is None:
2025-02-25T14:20:45.7265544Z             if left.shape != right.shape:
2025-02-25T14:20:45.7265663Z                 raise_assert_detail(
2025-02-25T14:20:45.7265813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7265902Z                 )
2025-02-25T14:20:45.7265975Z     
2025-02-25T14:20:45.7266067Z             diff = 0
2025-02-25T14:20:45.7266184Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7266287Z                 # count up differences
2025-02-25T14:20:45.7266462Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7266564Z                     diff += 1
2025-02-25T14:20:45.7266632Z     
2025-02-25T14:20:45.7266736Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7266882Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7267206Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7267337Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7267420Z E           
2025-02-25T14:20:45.7267548Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7267817Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7268098Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7268114Z 
2025-02-25T14:20:45.7268432Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7268450Z 
2025-02-25T14:20:45.7268623Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7268628Z 
2025-02-25T14:20:45.7268865Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c756180>
2025-02-25T14:20:45.7269034Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7269132Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7269136Z 
2025-02-25T14:20:45.7269279Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7269401Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7269515Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7269592Z         try:
2025-02-25T14:20:45.7269743Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7269828Z         except KeyError:
2025-02-25T14:20:45.7269990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7270065Z     
2025-02-25T14:20:45.7270269Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7270372Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7270484Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7270739Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7270844Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7270953Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7271066Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7271151Z             else:
2025-02-25T14:20:45.7271248Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7271382Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7271386Z 
2025-02-25T14:20:45.7271516Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7271650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7271815Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7271915Z     ???
2025-02-25T14:20:45.7272046Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7272051Z 
2025-02-25T14:20:45.7272126Z >   ???
2025-02-25T14:20:45.7272269Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7272346Z E   
2025-02-25T14:20:45.7272496Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7272617Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7272710Z E          ...
2025-02-25T14:20:45.7272805Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7272946Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7273062Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7273152Z E          ...
2025-02-25T14:20:45.7273396Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7273523Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7273651Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7273656Z 
2025-02-25T14:20:45.7273750Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7273962Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-25T14:20:45.7273966Z 
2025-02-25T14:20:45.7274096Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7274240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7274344Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7274493Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7274634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7274750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7274838Z err_msg = None
2025-02-25T14:20:45.7274843Z 
2025-02-25T14:20:45.7274954Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7275049Z         if err_msg is None:
2025-02-25T14:20:45.7275149Z             if left.shape != right.shape:
2025-02-25T14:20:45.7275249Z                 raise_assert_detail(
2025-02-25T14:20:45.7275403Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7275491Z                 )
2025-02-25T14:20:45.7275576Z     
2025-02-25T14:20:45.7275661Z             diff = 0
2025-02-25T14:20:45.7275794Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7275885Z                 # count up differences
2025-02-25T14:20:45.7276075Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7276165Z                     diff += 1
2025-02-25T14:20:45.7276272Z     
2025-02-25T14:20:45.7276364Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7276673Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7276848Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7276969Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7277049Z E           
2025-02-25T14:20:45.7277154Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7277422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7277689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7277704Z 
2025-02-25T14:20:45.7278018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7278024Z 
2025-02-25T14:20:45.7278208Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7278212Z 
2025-02-25T14:20:45.7278435Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c756240>
2025-02-25T14:20:45.7278622Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7278703Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7278708Z 
2025-02-25T14:20:45.7278858Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7278982Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7279181Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7279269Z         try:
2025-02-25T14:20:45.7279416Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7279527Z         except KeyError:
2025-02-25T14:20:45.7279671Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7279755Z     
2025-02-25T14:20:45.7279847Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7279958Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7280050Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7280198Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7280285Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7280392Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7280657Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7280792Z             else:
2025-02-25T14:20:45.7280911Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7281034Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7281038Z 
2025-02-25T14:20:45.7281196Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7281321Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7281495Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7281575Z     ???
2025-02-25T14:20:45.7281704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7281708Z 
2025-02-25T14:20:45.7281782Z >   ???
2025-02-25T14:20:45.7281924Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7282010Z E   
2025-02-25T14:20:45.7282146Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7282280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7282354Z E          ...
2025-02-25T14:20:45.7282454Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7282593Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7282722Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7282933Z E          ...
2025-02-25T14:20:45.7283040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7283169Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7283288Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7283293Z 
2025-02-25T14:20:45.7283396Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7283594Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-25T14:20:45.7283598Z 
2025-02-25T14:20:45.7283735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7283865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7283977Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7284118Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7284267Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7284376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7284458Z err_msg = None
2025-02-25T14:20:45.7284462Z 
2025-02-25T14:20:45.7284584Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7284667Z         if err_msg is None:
2025-02-25T14:20:45.7284779Z             if left.shape != right.shape:
2025-02-25T14:20:45.7284873Z                 raise_assert_detail(
2025-02-25T14:20:45.7285027Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7285103Z                 )
2025-02-25T14:20:45.7285193Z     
2025-02-25T14:20:45.7285273Z             diff = 0
2025-02-25T14:20:45.7285404Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7285625Z                 # count up differences
2025-02-25T14:20:45.7285816Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7285921Z                     diff += 1
2025-02-25T14:20:45.7285994Z     
2025-02-25T14:20:45.7286098Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7286234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7286414Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7286528Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7286612Z E           
2025-02-25T14:20:45.7286728Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7287001Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7287283Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7287293Z 
2025-02-25T14:20:45.7287592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7287597Z 
2025-02-25T14:20:45.7287778Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7287782Z 
2025-02-25T14:20:45.7288022Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7563c0>
2025-02-25T14:20:45.7288188Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a093611f0>
2025-02-25T14:20:45.7288275Z attr = 'j_blues'
2025-02-25T14:20:45.7288287Z 
2025-02-25T14:20:45.7288420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7288644Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7288729Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7288810Z         try:
2025-02-25T14:20:45.7288951Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7289050Z         except KeyError:
2025-02-25T14:20:45.7289188Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7289268Z     
2025-02-25T14:20:45.7289367Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7289465Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7289571Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7289706Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7289804Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7289897Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7290034Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7290110Z             else:
2025-02-25T14:20:45.7290226Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7290337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7290354Z 
2025-02-25T14:20:45.7290487Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7290735Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7290888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7290975Z     ???
2025-02-25T14:20:45.7291093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7291097Z 
2025-02-25T14:20:45.7291188Z >   ???
2025-02-25T14:20:45.7291314Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7291391Z E   
2025-02-25T14:20:45.7291525Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7291788Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7291877Z E          ...
2025-02-25T14:20:45.7291982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7292125Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7292239Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7292333Z E          ...
2025-02-25T14:20:45.7292424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7292574Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7292685Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7292689Z 
2025-02-25T14:20:45.7292795Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7293013Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-25T14:20:45.7293028Z 
2025-02-25T14:20:45.7293165Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7293318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7293424Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7293576Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7293703Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7293809Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7293889Z err_msg = None
2025-02-25T14:20:45.7293893Z 
2025-02-25T14:20:45.7294020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7294127Z         if err_msg is None:
2025-02-25T14:20:45.7294232Z             if left.shape != right.shape:
2025-02-25T14:20:45.7294352Z                 raise_assert_detail(
2025-02-25T14:20:45.7294519Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7294632Z                 )
2025-02-25T14:20:45.7294703Z     
2025-02-25T14:20:45.7294815Z             diff = 0
2025-02-25T14:20:45.7295070Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7295190Z                 # count up differences
2025-02-25T14:20:45.7295368Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7295470Z                     diff += 1
2025-02-25T14:20:45.7295547Z     
2025-02-25T14:20:45.7295659Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7295825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7296003Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7296128Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7296204Z E           
2025-02-25T14:20:45.7296335Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7296629Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7296942Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7296949Z 
2025-02-25T14:20:45.7297275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7297280Z 
2025-02-25T14:20:45.7297512Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7297520Z 
2025-02-25T14:20:45.7298091Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757140>
2025-02-25T14:20:45.7298379Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7298537Z attr = 'lines'
2025-02-25T14:20:45.7298544Z 
2025-02-25T14:20:45.7298798Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7298923Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7299034Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7299114Z         try:
2025-02-25T14:20:45.7299272Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7299358Z         except KeyError:
2025-02-25T14:20:45.7299519Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7299597Z     
2025-02-25T14:20:45.7299710Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7299811Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7299926Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7300096Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7300188Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7300308Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7300423Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7300669Z             else:
2025-02-25T14:20:45.7300826Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7300974Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7300979Z 
2025-02-25T14:20:45.7301108Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7301251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7301409Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7301485Z     ???
2025-02-25T14:20:45.7301615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7301619Z 
2025-02-25T14:20:45.7301701Z >   ???
2025-02-25T14:20:45.7301849Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7302094Z E   
2025-02-25T14:20:45.7302245Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7302364Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7302460Z E          ...
2025-02-25T14:20:45.7302556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7302706Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7302840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7302924Z E          ...
2025-02-25T14:20:45.7303035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7303168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7303293Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7303298Z 
2025-02-25T14:20:45.7303394Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7303675Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-25T14:20:45.7303688Z 
2025-02-25T14:20:45.7303917Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757200>
2025-02-25T14:20:45.7304109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7304228Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7304233Z 
2025-02-25T14:20:45.7304376Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7304517Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7304614Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7304709Z         try:
2025-02-25T14:20:45.7304851Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7304959Z         except KeyError:
2025-02-25T14:20:45.7305100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7305196Z     
2025-02-25T14:20:45.7305454Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7305573Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7305692Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7305827Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7305933Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7306032Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7306154Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7306160Z 
2025-02-25T14:20:45.7306290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7306420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7306425Z 
2025-02-25T14:20:45.7306576Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7306677Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7306809Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7306906Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7307067Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7307162Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7307283Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7307376Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7307468Z err_msg = None
2025-02-25T14:20:45.7307473Z 
2025-02-25T14:20:45.7307591Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7307686Z         if err_msg is None:
2025-02-25T14:20:45.7307784Z             if left.shape != right.shape:
2025-02-25T14:20:45.7307881Z                 raise_assert_detail(
2025-02-25T14:20:45.7308035Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7308103Z                 )
2025-02-25T14:20:45.7308189Z     
2025-02-25T14:20:45.7308267Z             diff = 0
2025-02-25T14:20:45.7308400Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7308494Z                 # count up differences
2025-02-25T14:20:45.7308794Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7308877Z                     diff += 1
2025-02-25T14:20:45.7308973Z     
2025-02-25T14:20:45.7309062Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7309213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7309400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7309508Z E           AssertionError: Series are different
2025-02-25T14:20:45.7309594Z E           
2025-02-25T14:20:45.7309713Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7310106Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7310465Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7310918Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7311053Z 
2025-02-25T14:20:45.7311395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7311654Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-25T14:20:45.7311672Z 
2025-02-25T14:20:45.7311900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7572c0>
2025-02-25T14:20:45.7312085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7312181Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7312185Z 
2025-02-25T14:20:45.7312338Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7312457Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7312553Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7312627Z         try:
2025-02-25T14:20:45.7312784Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7312878Z         except KeyError:
2025-02-25T14:20:45.7313032Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7313119Z     
2025-02-25T14:20:45.7313208Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7313322Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7313414Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7313558Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7313647Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7313754Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7313874Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7313878Z 
2025-02-25T14:20:45.7314018Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7314136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7314156Z 
2025-02-25T14:20:45.7314301Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7314402Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7314646Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7314738Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7314885Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7314980Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7315089Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7315182Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7315273Z err_msg = None
2025-02-25T14:20:45.7315280Z 
2025-02-25T14:20:45.7315392Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7315493Z         if err_msg is None:
2025-02-25T14:20:45.7315592Z             if left.shape != right.shape:
2025-02-25T14:20:45.7315693Z                 raise_assert_detail(
2025-02-25T14:20:45.7315848Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7315941Z                 )
2025-02-25T14:20:45.7316017Z     
2025-02-25T14:20:45.7316109Z             diff = 0
2025-02-25T14:20:45.7316228Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7316336Z                 # count up differences
2025-02-25T14:20:45.7316511Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7316606Z                     diff += 1
2025-02-25T14:20:45.7316691Z     
2025-02-25T14:20:45.7316781Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7316939Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7317112Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7317233Z E           AssertionError: Series are different
2025-02-25T14:20:45.7317306Z E           
2025-02-25T14:20:45.7317536Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7317920Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7318326Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7318718Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7318739Z 
2025-02-25T14:20:45.7319069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7319275Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-25T14:20:45.7319280Z 
2025-02-25T14:20:45.7319419Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7319552Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7319668Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7319822Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7320064Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7320168Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7320247Z err_msg = None
2025-02-25T14:20:45.7320251Z 
2025-02-25T14:20:45.7320370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7320455Z         if err_msg is None:
2025-02-25T14:20:45.7320753Z             if left.shape != right.shape:
2025-02-25T14:20:45.7320853Z                 raise_assert_detail(
2025-02-25T14:20:45.7321015Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7321092Z                 )
2025-02-25T14:20:45.7321173Z     
2025-02-25T14:20:45.7321250Z             diff = 0
2025-02-25T14:20:45.7321373Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7321486Z                 # count up differences
2025-02-25T14:20:45.7321660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7321760Z                     diff += 1
2025-02-25T14:20:45.7321831Z     
2025-02-25T14:20:45.7321940Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7322081Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7322266Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7322380Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7322475Z E           
2025-02-25T14:20:45.7322595Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7322878Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7323313Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7323320Z 
2025-02-25T14:20:45.7323620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7323640Z 
2025-02-25T14:20:45.7323817Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7323821Z 
2025-02-25T14:20:45.7324069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757500>
2025-02-25T14:20:45.7324277Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>, attr = 'nu'
2025-02-25T14:20:45.7324286Z 
2025-02-25T14:20:45.7324436Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7324559Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7324658Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7324739Z         try:
2025-02-25T14:20:45.7324895Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7324992Z         except KeyError:
2025-02-25T14:20:45.7325133Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7325221Z     
2025-02-25T14:20:45.7325316Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7325431Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7325525Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7325676Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7325770Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7325885Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7326010Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7326015Z 
2025-02-25T14:20:45.7326288Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7326419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7326571Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7326651Z     ???
2025-02-25T14:20:45.7326765Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7326770Z 
2025-02-25T14:20:45.7326856Z >   ???
2025-02-25T14:20:45.7326987Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7327073Z E   
2025-02-25T14:20:45.7327208Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7327339Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7327420Z E          ...
2025-02-25T14:20:45.7327518Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7327664Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7327777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7327868Z E          ...
2025-02-25T14:20:45.7327964Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7328111Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7328225Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7328229Z 
2025-02-25T14:20:45.7328336Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7328566Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-25T14:20:45.7328570Z 
2025-02-25T14:20:45.7328718Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7328866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7328967Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7329226Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7329363Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7329478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7329557Z err_msg = None
2025-02-25T14:20:45.7329561Z 
2025-02-25T14:20:45.7329688Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7329775Z         if err_msg is None:
2025-02-25T14:20:45.7329891Z             if left.shape != right.shape:
2025-02-25T14:20:45.7329991Z                 raise_assert_detail(
2025-02-25T14:20:45.7330136Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7330233Z                 )
2025-02-25T14:20:45.7330306Z     
2025-02-25T14:20:45.7330397Z             diff = 0
2025-02-25T14:20:45.7330614Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7330739Z                 # count up differences
2025-02-25T14:20:45.7330921Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7331025Z                     diff += 1
2025-02-25T14:20:45.7331107Z     
2025-02-25T14:20:45.7331281Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7331527Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7331844Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7332052Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7332189Z E           
2025-02-25T14:20:45.7332404Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7332722Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7333164Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7333171Z 
2025-02-25T14:20:45.7333503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7333509Z 
2025-02-25T14:20:45.7333684Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7333690Z 
2025-02-25T14:20:45.7333942Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c7575c0>
2025-02-25T14:20:45.7334112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7334226Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7334230Z 
2025-02-25T14:20:45.7334384Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7334518Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7334615Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7334690Z         try:
2025-02-25T14:20:45.7334855Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7334941Z         except KeyError:
2025-02-25T14:20:45.7335103Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7335179Z     
2025-02-25T14:20:45.7335290Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7335388Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7335504Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7335635Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7335751Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7335861Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7336109Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7336124Z 
2025-02-25T14:20:45.7336267Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7336381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7336556Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7336638Z     ???
2025-02-25T14:20:45.7336785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7336790Z 
2025-02-25T14:20:45.7336868Z >   ???
2025-02-25T14:20:45.7337016Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7337105Z E   
2025-02-25T14:20:45.7337240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7337376Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7337453Z E          ...
2025-02-25T14:20:45.7337565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7337716Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7337865Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7337948Z E          ...
2025-02-25T14:20:45.7338063Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7338205Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7338349Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7338354Z 
2025-02-25T14:20:45.7338467Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7338682Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-25T14:20:45.7338686Z 
2025-02-25T14:20:45.7338836Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7338988Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7339106Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7339258Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7339503Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7339618Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7339705Z err_msg = None
2025-02-25T14:20:45.7339709Z 
2025-02-25T14:20:45.7339840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7339930Z         if err_msg is None:
2025-02-25T14:20:45.7340050Z             if left.shape != right.shape:
2025-02-25T14:20:45.7340142Z                 raise_assert_detail(
2025-02-25T14:20:45.7340309Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7340394Z                 )
2025-02-25T14:20:45.7340482Z     
2025-02-25T14:20:45.7340766Z             diff = 0
2025-02-25T14:20:45.7340910Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7341027Z                 # count up differences
2025-02-25T14:20:45.7341219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7341317Z                     diff += 1
2025-02-25T14:20:45.7341396Z     
2025-02-25T14:20:45.7341497Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7341636Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7341821Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7341947Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7342033Z E           
2025-02-25T14:20:45.7342151Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7342434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7342864Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7342871Z 
2025-02-25T14:20:45.7343178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7343183Z 
2025-02-25T14:20:45.7343369Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7343373Z 
2025-02-25T14:20:45.7343611Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757680>
2025-02-25T14:20:45.7343821Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>, attr = 'f_lu'
2025-02-25T14:20:45.7343832Z 
2025-02-25T14:20:45.7344005Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7344136Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7344243Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7344331Z         try:
2025-02-25T14:20:45.7344494Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7344580Z         except KeyError:
2025-02-25T14:20:45.7344732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7344826Z     
2025-02-25T14:20:45.7344917Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7345027Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7345124Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7345277Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7345369Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7345477Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7345601Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7345733Z 
2025-02-25T14:20:45.7345874Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7345993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7346158Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7346248Z     ???
2025-02-25T14:20:45.7346363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7346368Z 
2025-02-25T14:20:45.7346451Z >   ???
2025-02-25T14:20:45.7346580Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7346673Z E   
2025-02-25T14:20:45.7346809Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7346937Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7347020Z E          ...
2025-02-25T14:20:45.7347134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7347278Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7347415Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7347507Z E          ...
2025-02-25T14:20:45.7347598Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7347752Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7356354Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7356378Z 
2025-02-25T14:20:45.7356509Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7356760Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-25T14:20:45.7356765Z 
2025-02-25T14:20:45.7356911Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7357058Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7357204Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7357747Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7357987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7358151Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7358300Z err_msg = None
2025-02-25T14:20:45.7358308Z 
2025-02-25T14:20:45.7358472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7358573Z         if err_msg is None:
2025-02-25T14:20:45.7358676Z             if left.shape != right.shape:
2025-02-25T14:20:45.7358780Z                 raise_assert_detail(
2025-02-25T14:20:45.7358944Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7359035Z                 )
2025-02-25T14:20:45.7359122Z     
2025-02-25T14:20:45.7359198Z             diff = 0
2025-02-25T14:20:45.7359330Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7359438Z                 # count up differences
2025-02-25T14:20:45.7359626Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7359718Z                     diff += 1
2025-02-25T14:20:45.7359798Z     
2025-02-25T14:20:45.7359895Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7360070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7360249Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7360378Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7360465Z E           
2025-02-25T14:20:45.7360804Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7361093Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7361623Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7361630Z 
2025-02-25T14:20:45.7361975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7361980Z 
2025-02-25T14:20:45.7362170Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7362176Z 
2025-02-25T14:20:45.7362415Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757e00>
2025-02-25T14:20:45.7362603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7362703Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7362708Z 
2025-02-25T14:20:45.7362860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7362992Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7363092Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7363173Z         try:
2025-02-25T14:20:45.7363322Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7363427Z         except KeyError:
2025-02-25T14:20:45.7363570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7363656Z     
2025-02-25T14:20:45.7363752Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7363861Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7363963Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7364117Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7364202Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7364448Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7364570Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7364655Z             else:
2025-02-25T14:20:45.7364765Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7364875Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7364880Z 
2025-02-25T14:20:45.7365029Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7365150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7365317Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7365391Z     ???
2025-02-25T14:20:45.7365524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7365528Z 
2025-02-25T14:20:45.7365604Z >   ???
2025-02-25T14:20:45.7365758Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7365846Z E   
2025-02-25T14:20:45.7365981Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7366117Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7366198Z E          ...
2025-02-25T14:20:45.7366299Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7366435Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7366559Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7366640Z E          ...
2025-02-25T14:20:45.7366738Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7366869Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7366998Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7367003Z 
2025-02-25T14:20:45.7367112Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7367332Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-25T14:20:45.7367336Z 
2025-02-25T14:20:45.7367481Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7367636Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7367853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7367994Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7368140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7368256Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7368336Z err_msg = None
2025-02-25T14:20:45.7368341Z 
2025-02-25T14:20:45.7368472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7368567Z         if err_msg is None:
2025-02-25T14:20:45.7368687Z             if left.shape != right.shape:
2025-02-25T14:20:45.7368776Z                 raise_assert_detail(
2025-02-25T14:20:45.7368940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7369025Z                 )
2025-02-25T14:20:45.7369111Z     
2025-02-25T14:20:45.7369194Z             diff = 0
2025-02-25T14:20:45.7369321Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7369448Z                 # count up differences
2025-02-25T14:20:45.7369755Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7369909Z                     diff += 1
2025-02-25T14:20:45.7370032Z     
2025-02-25T14:20:45.7370203Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7370441Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7370892Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7371023Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7371105Z E           
2025-02-25T14:20:45.7371220Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7371646Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7371923Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7371929Z 
2025-02-25T14:20:45.7372247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7372252Z 
2025-02-25T14:20:45.7372442Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7372452Z 
2025-02-25T14:20:45.7372700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c757ec0>
2025-02-25T14:20:45.7372880Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7372975Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7372979Z 
2025-02-25T14:20:45.7373120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7373250Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7373338Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7373427Z         try:
2025-02-25T14:20:45.7373571Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7373669Z         except KeyError:
2025-02-25T14:20:45.7373830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7373906Z     
2025-02-25T14:20:45.7374007Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7374110Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7374220Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7374359Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7374621Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7374719Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7374853Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7374931Z             else:
2025-02-25T14:20:45.7375047Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7375154Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7375174Z 
2025-02-25T14:20:45.7375308Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7375448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7375600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7375695Z     ???
2025-02-25T14:20:45.7375808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7375822Z 
2025-02-25T14:20:45.7375909Z >   ???
2025-02-25T14:20:45.7376038Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7376140Z E   
2025-02-25T14:20:45.7376270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7376402Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7376487Z E          ...
2025-02-25T14:20:45.7376576Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7376727Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7376842Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7376933Z E          ...
2025-02-25T14:20:45.7377028Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7377179Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7377293Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7377298Z 
2025-02-25T14:20:45.7377503Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7377716Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-25T14:20:45.7377742Z 
2025-02-25T14:20:45.7377876Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7378020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7378122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7378267Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7378396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7378504Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7378586Z err_msg = None
2025-02-25T14:20:45.7378603Z 
2025-02-25T14:20:45.7378715Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7378820Z         if err_msg is None:
2025-02-25T14:20:45.7378920Z             if left.shape != right.shape:
2025-02-25T14:20:45.7379026Z                 raise_assert_detail(
2025-02-25T14:20:45.7379185Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7379267Z                 )
2025-02-25T14:20:45.7379340Z     
2025-02-25T14:20:45.7379430Z             diff = 0
2025-02-25T14:20:45.7379542Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7379656Z                 # count up differences
2025-02-25T14:20:45.7379839Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7379989Z                     diff += 1
2025-02-25T14:20:45.7380142Z     
2025-02-25T14:20:45.7380304Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7380678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7380980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7381205Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7381512Z E           
2025-02-25T14:20:45.7381644Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7381911Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7382187Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7382193Z 
2025-02-25T14:20:45.7382514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7382527Z 
2025-02-25T14:20:45.7382706Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7382711Z 
2025-02-25T14:20:45.7382949Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57c080>
2025-02-25T14:20:45.7383135Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f89d900b380>
2025-02-25T14:20:45.7383215Z attr = 'j_blues'
2025-02-25T14:20:45.7383219Z 
2025-02-25T14:20:45.7383366Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7383485Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7383589Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7383668Z         try:
2025-02-25T14:20:45.7383834Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7383917Z         except KeyError:
2025-02-25T14:20:45.7384068Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7384268Z     
2025-02-25T14:20:45.7384369Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7384473Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7384564Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7384713Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7384804Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7384908Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7385022Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7385108Z             else:
2025-02-25T14:20:45.7385209Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7385329Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7385334Z 
2025-02-25T14:20:45.7385464Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7385590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7385755Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7385828Z     ???
2025-02-25T14:20:45.7385962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7385967Z 
2025-02-25T14:20:45.7386042Z >   ???
2025-02-25T14:20:45.7386189Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7386264Z E   
2025-02-25T14:20:45.7386406Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7386520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7386611Z E          ...
2025-02-25T14:20:45.7386704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7386856Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7386990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7387067Z E          ...
2025-02-25T14:20:45.7387164Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7387301Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7387424Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7387536Z 
2025-02-25T14:20:45.7387634Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7387902Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-25T14:20:45.7387908Z 
2025-02-25T14:20:45.7388042Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7388183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7388296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7388435Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7388579Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7388687Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7388769Z err_msg = None
2025-02-25T14:20:45.7388782Z 
2025-02-25T14:20:45.7388899Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7388994Z         if err_msg is None:
2025-02-25T14:20:45.7389090Z             if left.shape != right.shape:
2025-02-25T14:20:45.7389189Z                 raise_assert_detail(
2025-02-25T14:20:45.7389376Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7389475Z                 )
2025-02-25T14:20:45.7389557Z     
2025-02-25T14:20:45.7389636Z             diff = 0
2025-02-25T14:20:45.7389757Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7389849Z                 # count up differences
2025-02-25T14:20:45.7390031Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7390112Z                     diff += 1
2025-02-25T14:20:45.7390203Z     
2025-02-25T14:20:45.7390391Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7390733Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7390943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7391062Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7391157Z E           
2025-02-25T14:20:45.7391270Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7391546Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7391809Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7391836Z 
2025-02-25T14:20:45.7392147Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7392153Z 
2025-02-25T14:20:45.7392338Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7392344Z 
2025-02-25T14:20:45.7392565Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57ce00>
2025-02-25T14:20:45.7392727Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7392798Z attr = 'lines'
2025-02-25T14:20:45.7392802Z 
2025-02-25T14:20:45.7392945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7393074Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7393165Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7393265Z         try:
2025-02-25T14:20:45.7393411Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7393655Z         except KeyError:
2025-02-25T14:20:45.7393801Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7393891Z     
2025-02-25T14:20:45.7393983Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7394093Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7394181Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7394329Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7394412Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7394511Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7394632Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7394709Z             else:
2025-02-25T14:20:45.7394804Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7394928Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7394938Z 
2025-02-25T14:20:45.7395081Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7395204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7395362Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7395427Z     ???
2025-02-25T14:20:45.7395550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7395554Z 
2025-02-25T14:20:45.7395627Z >   ???
2025-02-25T14:20:45.7395753Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7395820Z E   
2025-02-25T14:20:45.7395963Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7396095Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7396164Z E          ...
2025-02-25T14:20:45.7396636Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7396773Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7397035Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7397123Z E          ...
2025-02-25T14:20:45.7397222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7397345Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7397471Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7397476Z 
2025-02-25T14:20:45.7397585Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7397906Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-25T14:20:45.7397911Z 
2025-02-25T14:20:45.7398145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57cec0>
2025-02-25T14:20:45.7398314Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7398423Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7398427Z 
2025-02-25T14:20:45.7398568Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7398707Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7398805Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7398894Z         try:
2025-02-25T14:20:45.7399051Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7399134Z         except KeyError:
2025-02-25T14:20:45.7399281Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7399363Z     
2025-02-25T14:20:45.7399464Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7399564Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7399699Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7399943Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7400103Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7400269Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7400478Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7400498Z 
2025-02-25T14:20:45.7400846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7401216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7401224Z 
2025-02-25T14:20:45.7401473Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7401612Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7401811Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7401953Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7402213Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-25T14:20:45.7402366Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-25T14:20:45.7402576Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7402731Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-25T14:20:45.7402861Z err_msg = None
2025-02-25T14:20:45.7402877Z 
2025-02-25T14:20:45.7403087Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7403206Z         if err_msg is None:
2025-02-25T14:20:45.7403321Z             if left.shape != right.shape:
2025-02-25T14:20:45.7403411Z                 raise_assert_detail(
2025-02-25T14:20:45.7403570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7403645Z                 )
2025-02-25T14:20:45.7403733Z     
2025-02-25T14:20:45.7403814Z             diff = 0
2025-02-25T14:20:45.7403939Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7404041Z                 # count up differences
2025-02-25T14:20:45.7404219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7404311Z                     diff += 1
2025-02-25T14:20:45.7404380Z     
2025-02-25T14:20:45.7404476Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7404613Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7404938Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7405050Z E           AssertionError: Series are different
2025-02-25T14:20:45.7405130Z E           
2025-02-25T14:20:45.7405230Z E           Series values are different (4.04858 %)
2025-02-25T14:20:45.7405611Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7405961Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7406309Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7406323Z 
2025-02-25T14:20:45.7406628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7406958Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-25T14:20:45.7406962Z 
2025-02-25T14:20:45.7407182Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57cf80>
2025-02-25T14:20:45.7407378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7407589Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7407600Z 
2025-02-25T14:20:45.7407739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7407859Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7407940Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7408015Z         try:
2025-02-25T14:20:45.7408165Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7408258Z         except KeyError:
2025-02-25T14:20:45.7408398Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7408477Z     
2025-02-25T14:20:45.7408565Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7408669Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7408758Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7408896Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7409005Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7409109Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7409227Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7409231Z 
2025-02-25T14:20:45.7409354Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7409480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7409485Z 
2025-02-25T14:20:45.7409615Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7409708Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7409827Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7409906Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7410057Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-25T14:20:45.7410242Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-25T14:20:45.7410356Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-25T14:20:45.7410446Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-25T14:20:45.7410716Z err_msg = None
2025-02-25T14:20:45.7410728Z 
2025-02-25T14:20:45.7410861Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7410957Z         if err_msg is None:
2025-02-25T14:20:45.7411052Z             if left.shape != right.shape:
2025-02-25T14:20:45.7411141Z                 raise_assert_detail(
2025-02-25T14:20:45.7411290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7411362Z                 )
2025-02-25T14:20:45.7411434Z     
2025-02-25T14:20:45.7411508Z             diff = 0
2025-02-25T14:20:45.7411631Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7411718Z                 # count up differences
2025-02-25T14:20:45.7411896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7411981Z                     diff += 1
2025-02-25T14:20:45.7412066Z     
2025-02-25T14:20:45.7412158Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7412303Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7412474Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7412589Z E           AssertionError: Series are different
2025-02-25T14:20:45.7412675Z E           
2025-02-25T14:20:45.7412780Z E           Series values are different (6.47773 %)
2025-02-25T14:20:45.7413162Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7413549Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7414081Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.7414087Z 
2025-02-25T14:20:45.7414410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7414658Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-25T14:20:45.7414667Z 
2025-02-25T14:20:45.7414799Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7414943Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7415049Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7415187Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7415311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7415416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7415492Z err_msg = None
2025-02-25T14:20:45.7415496Z 
2025-02-25T14:20:45.7415740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7415829Z         if err_msg is None:
2025-02-25T14:20:45.7415932Z             if left.shape != right.shape:
2025-02-25T14:20:45.7416032Z                 raise_assert_detail(
2025-02-25T14:20:45.7416172Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7416262Z                 )
2025-02-25T14:20:45.7416334Z     
2025-02-25T14:20:45.7416417Z             diff = 0
2025-02-25T14:20:45.7416533Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7416631Z                 # count up differences
2025-02-25T14:20:45.7416794Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7416882Z                     diff += 1
2025-02-25T14:20:45.7416971Z     
2025-02-25T14:20:45.7417060Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7417202Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7417379Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7417514Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7417588Z E           
2025-02-25T14:20:45.7417706Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7417969Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7418231Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7418245Z 
2025-02-25T14:20:45.7418561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7418732Z 
2025-02-25T14:20:45.7418901Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7418906Z 
2025-02-25T14:20:45.7419131Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d1c0>
2025-02-25T14:20:45.7419341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>, attr = 'nu'
2025-02-25T14:20:45.7419346Z 
2025-02-25T14:20:45.7419483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7419606Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7419692Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7419773Z         try:
2025-02-25T14:20:45.7419912Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7420001Z         except KeyError:
2025-02-25T14:20:45.7420142Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7420216Z     
2025-02-25T14:20:45.7420314Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7420412Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7420664Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7420837Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7420938Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7421030Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7421153Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7421158Z 
2025-02-25T14:20:45.7421280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7421405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7421554Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7421635Z     ???
2025-02-25T14:20:45.7421883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7421899Z 
2025-02-25T14:20:45.7421977Z >   ???
2025-02-25T14:20:45.7422108Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7422179Z E   
2025-02-25T14:20:45.7422313Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7422429Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7422505Z E          ...
2025-02-25T14:20:45.7422590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7422725Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7422838Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7422922Z E          ...
2025-02-25T14:20:45.7423008Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7423139Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7423260Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7423275Z 
2025-02-25T14:20:45.7423365Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7423666Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-25T14:20:45.7423672Z 
2025-02-25T14:20:45.7423801Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7423930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7424029Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7424172Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7424309Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7424405Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7424484Z err_msg = None
2025-02-25T14:20:45.7424489Z 
2025-02-25T14:20:45.7424609Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7424695Z         if err_msg is None:
2025-02-25T14:20:45.7424925Z             if left.shape != right.shape:
2025-02-25T14:20:45.7425020Z                 raise_assert_detail(
2025-02-25T14:20:45.7425160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7425236Z                 )
2025-02-25T14:20:45.7425304Z     
2025-02-25T14:20:45.7425387Z             diff = 0
2025-02-25T14:20:45.7425506Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7425595Z                 # count up differences
2025-02-25T14:20:45.7425762Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7425838Z                     diff += 1
2025-02-25T14:20:45.7425916Z     
2025-02-25T14:20:45.7426004Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7426147Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7426321Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7426457Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7426533Z E           
2025-02-25T14:20:45.7426660Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7426924Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7427309Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7427467Z 
2025-02-25T14:20:45.7427997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7428015Z 
2025-02-25T14:20:45.7428251Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7428257Z 
2025-02-25T14:20:45.7428479Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d280>
2025-02-25T14:20:45.7428657Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7428741Z attr = 'wavelength_cm'
2025-02-25T14:20:45.7428745Z 
2025-02-25T14:20:45.7428880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7429005Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7429101Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7429176Z         try:
2025-02-25T14:20:45.7429321Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7429428Z         except KeyError:
2025-02-25T14:20:45.7429571Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7429660Z     
2025-02-25T14:20:45.7429753Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7429857Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7429945Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7430080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7430161Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7430267Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7430379Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7430393Z 
2025-02-25T14:20:45.7430684Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7430846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7430997Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7431096Z     ???
2025-02-25T14:20:45.7431213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7431363Z 
2025-02-25T14:20:45.7431451Z >   ???
2025-02-25T14:20:45.7431575Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7431661Z E   
2025-02-25T14:20:45.7431798Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7431920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7431994Z E          ...
2025-02-25T14:20:45.7432080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7432220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7432335Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7432422Z E          ...
2025-02-25T14:20:45.7432513Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7432653Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7432771Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7432775Z 
2025-02-25T14:20:45.7432886Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7433151Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-25T14:20:45.7433163Z 
2025-02-25T14:20:45.7433291Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7433427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7433525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7433670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7433795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7433894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7433977Z err_msg = None
2025-02-25T14:20:45.7434109Z 
2025-02-25T14:20:45.7434225Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7434324Z         if err_msg is None:
2025-02-25T14:20:45.7434422Z             if left.shape != right.shape:
2025-02-25T14:20:45.7434517Z                 raise_assert_detail(
2025-02-25T14:20:45.7434663Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7434741Z                 )
2025-02-25T14:20:45.7434812Z     
2025-02-25T14:20:45.7434895Z             diff = 0
2025-02-25T14:20:45.7435015Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7435112Z                 # count up differences
2025-02-25T14:20:45.7435281Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7435389Z                     diff += 1
2025-02-25T14:20:45.7435457Z     
2025-02-25T14:20:45.7435559Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7435716Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7435899Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7436028Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7436106Z E           
2025-02-25T14:20:45.7436245Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7436506Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7436773Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7436785Z 
2025-02-25T14:20:45.7437081Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7437212Z 
2025-02-25T14:20:45.7437385Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7437389Z 
2025-02-25T14:20:45.7437620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57d340>
2025-02-25T14:20:45.7437828Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>, attr = 'f_lu'
2025-02-25T14:20:45.7437844Z 
2025-02-25T14:20:45.7437982Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7438110Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7438195Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7438270Z         try:
2025-02-25T14:20:45.7438417Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7438518Z         except KeyError:
2025-02-25T14:20:45.7438661Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7438746Z     
2025-02-25T14:20:45.7438834Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7438932Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7439021Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7439170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7439278Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7439381Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7439509Z >               pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7439514Z 
2025-02-25T14:20:45.7439641Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-25T14:20:45.7439761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7439910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7440094Z     ???
2025-02-25T14:20:45.7440206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7440230Z 
2025-02-25T14:20:45.7440301Z >   ???
2025-02-25T14:20:45.7440441Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7440618Z E   
2025-02-25T14:20:45.7440763Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7440879Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7440965Z E          ...
2025-02-25T14:20:45.7441052Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7441194Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7441310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7441392Z E          ...
2025-02-25T14:20:45.7441484Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7441626Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7441747Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7441752Z 
2025-02-25T14:20:45.7441843Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7442140Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-25T14:20:45.7442146Z 
2025-02-25T14:20:45.7442274Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7442416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7442512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7442663Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7442795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7442890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7442983Z err_msg = None
2025-02-25T14:20:45.7442996Z 
2025-02-25T14:20:45.7443110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7443349Z         if err_msg is None:
2025-02-25T14:20:45.7443445Z             if left.shape != right.shape:
2025-02-25T14:20:45.7443544Z                 raise_assert_detail(
2025-02-25T14:20:45.7443683Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7443762Z                 )
2025-02-25T14:20:45.7443837Z     
2025-02-25T14:20:45.7443913Z             diff = 0
2025-02-25T14:20:45.7444037Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7444131Z                 # count up differences
2025-02-25T14:20:45.7444314Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7444396Z                     diff += 1
2025-02-25T14:20:45.7444483Z     
2025-02-25T14:20:45.7444578Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7444725Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7444904Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7445041Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7445116Z E           
2025-02-25T14:20:45.7445247Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7445523Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7445788Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7445922Z 
2025-02-25T14:20:45.7446248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7446254Z 
2025-02-25T14:20:45.7446429Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7446434Z 
2025-02-25T14:20:45.7446658Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57dac0>
2025-02-25T14:20:45.7446837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7446920Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7446925Z 
2025-02-25T14:20:45.7447068Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7447183Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7447277Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7447352Z         try:
2025-02-25T14:20:45.7447504Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7447604Z         except KeyError:
2025-02-25T14:20:45.7447742Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7447827Z     
2025-02-25T14:20:45.7447920Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7448026Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7448119Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7448267Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7448356Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7448463Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7448588Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7448673Z             else:
2025-02-25T14:20:45.7448778Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7448903Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7448908Z 
2025-02-25T14:20:45.7449045Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7449171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7449436Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7449512Z     ???
2025-02-25T14:20:45.7449642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7449647Z 
2025-02-25T14:20:45.7449718Z >   ???
2025-02-25T14:20:45.7449856Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7449925Z E   
2025-02-25T14:20:45.7450062Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7450189Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7450276Z E          ...
2025-02-25T14:20:45.7450378Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7450663Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7450834Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7450914Z E          ...
2025-02-25T14:20:45.7451021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7451158Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7451291Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7451296Z 
2025-02-25T14:20:45.7451387Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7451694Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-25T14:20:45.7451700Z 
2025-02-25T14:20:45.7451855Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7451992Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7452107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7452242Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7452583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7452691Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7452786Z err_msg = None
2025-02-25T14:20:45.7452790Z 
2025-02-25T14:20:45.7452916Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7453002Z         if err_msg is None:
2025-02-25T14:20:45.7453122Z             if left.shape != right.shape:
2025-02-25T14:20:45.7453204Z                 raise_assert_detail(
2025-02-25T14:20:45.7453348Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7453423Z                 )
2025-02-25T14:20:45.7453507Z     
2025-02-25T14:20:45.7453589Z             diff = 0
2025-02-25T14:20:45.7453811Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7453968Z                 # count up differences
2025-02-25T14:20:45.7454281Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7454449Z                     diff += 1
2025-02-25T14:20:45.7454585Z     
2025-02-25T14:20:45.7454714Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7454862Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7455064Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7455183Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7455272Z E           
2025-02-25T14:20:45.7455385Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7455659Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7455943Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7456097Z 
2025-02-25T14:20:45.7456412Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7456417Z 
2025-02-25T14:20:45.7456610Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7456615Z 
2025-02-25T14:20:45.7456859Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57db80>
2025-02-25T14:20:45.7457037Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7457139Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7457143Z 
2025-02-25T14:20:45.7457287Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7457427Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7457515Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7457618Z         try:
2025-02-25T14:20:45.7457757Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7457858Z         except KeyError:
2025-02-25T14:20:45.7458005Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7458103Z     
2025-02-25T14:20:45.7458214Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7458312Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7458421Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7458555Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7458663Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7458766Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7458899Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7459073Z             else:
2025-02-25T14:20:45.7459173Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7459281Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7459293Z 
2025-02-25T14:20:45.7459432Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7459581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7459729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7459825Z     ???
2025-02-25T14:20:45.7459942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7459947Z 
2025-02-25T14:20:45.7460037Z >   ???
2025-02-25T14:20:45.7460166Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7460253Z E   
2025-02-25T14:20:45.7460380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7460626Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7460716Z E          ...
2025-02-25T14:20:45.7460827Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7460969Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7461090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7461193Z E          ...
2025-02-25T14:20:45.7461294Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7461438Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7461545Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7461550Z 
2025-02-25T14:20:45.7461658Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7461935Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-25T14:20:45.7461940Z 
2025-02-25T14:20:45.7462090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7462246Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7462359Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7462634Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-25T14:20:45.7462764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-25T14:20:45.7462870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-25T14:20:45.7462947Z err_msg = None
2025-02-25T14:20:45.7462951Z 
2025-02-25T14:20:45.7463083Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-25T14:20:45.7463172Z         if err_msg is None:
2025-02-25T14:20:45.7463269Z             if left.shape != right.shape:
2025-02-25T14:20:45.7463371Z                 raise_assert_detail(
2025-02-25T14:20:45.7463528Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-25T14:20:45.7463612Z                 )
2025-02-25T14:20:45.7463679Z     
2025-02-25T14:20:45.7463785Z             diff = 0
2025-02-25T14:20:45.7463900Z             for left_arr, right_arr in zip(left, right):
2025-02-25T14:20:45.7464015Z                 # count up differences
2025-02-25T14:20:45.7464186Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-25T14:20:45.7464277Z                     diff += 1
2025-02-25T14:20:45.7464350Z     
2025-02-25T14:20:45.7464450Z             diff = diff * 100.0 / left.size
2025-02-25T14:20:45.7464600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-25T14:20:45.7464779Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-25T14:20:45.7464909Z E           AssertionError: numpy array are different
2025-02-25T14:20:45.7464987Z E           
2025-02-25T14:20:45.7465120Z E           numpy array values are different (4.04858 %)
2025-02-25T14:20:45.7465381Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7465789Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.7465795Z 
2025-02-25T14:20:45.7466121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-25T14:20:45.7466125Z 
2025-02-25T14:20:45.7466297Z During handling of the above exception, another exception occurred:
2025-02-25T14:20:45.7466302Z 
2025-02-25T14:20:45.7466537Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f8a1c57dd00>
2025-02-25T14:20:45.7466711Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8a04ce2fc0>
2025-02-25T14:20:45.7466802Z attr = 'j_blues'
2025-02-25T14:20:45.7466811Z 
2025-02-25T14:20:45.7466967Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-25T14:20:45.7467077Z     def test_plasma_properties(self, plasma, attr):
2025-02-25T14:20:45.7467174Z         key = f"plasma/{attr}"
2025-02-25T14:20:45.7467240Z         try:
2025-02-25T14:20:45.7467384Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-25T14:20:45.7467468Z         except KeyError:
2025-02-25T14:20:45.7467623Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-25T14:20:45.7467697Z     
2025-02-25T14:20:45.7467803Z         if hasattr(plasma, attr):
2025-02-25T14:20:45.7467910Z             actual = getattr(plasma, attr)
2025-02-25T14:20:45.7468014Z             if attr == "selected_atoms":
2025-02-25T14:20:45.7468163Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-25T14:20:45.7468261Z             elif actual.ndim == 1:
2025-02-25T14:20:45.7468363Z                 actual = pd.Series(actual)
2025-02-25T14:20:45.7468578Z                 pdt.assert_series_equal(actual, expected)
2025-02-25T14:20:45.7468665Z             else:
2025-02-25T14:20:45.7468765Z                 actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7468896Z >               pdt.assert_frame_equal(actual, expected)
2025-02-25T14:20:45.7468900Z 
2025-02-25T14:20:45.7469033Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-25T14:20:45.7469167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7469320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7469409Z     ???
2025-02-25T14:20:45.7469539Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7469543Z 
2025-02-25T14:20:45.7469619Z >   ???
2025-02-25T14:20:45.7469763Z E   AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.7469844Z E   
2025-02-25T14:20:45.7469988Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.7470112Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7470202Z E          ...
2025-02-25T14:20:45.7470293Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7470435Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7470724Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.7470828Z E          ...
2025-02-25T14:20:45.7470930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.7471060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.7471179Z E   At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.7471183Z 
2025-02-25T14:20:45.7471280Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7471480Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-25T14:20:45.7471624Z 
2025-02-25T14:20:45.7471867Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7471988Z attr = 'stimulated_emission_factor'
2025-02-25T14:20:45.7472267Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89ec254830>
2025-02-25T14:20:45.7472284Z 
2025-02-25T14:20:45.7472443Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7472633Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7472762Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7472913Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7473040Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7473141Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7473233Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7473354Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7473375Z 
2025-02-25T14:20:45.7473578Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7473779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7473786Z 
2025-02-25T14:20:45.7474343Z args = (<function assert_allclose.<locals>.compare at 0x7f89db29ba60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-25T14:20:45.7474471Z         0.01476858],
2025-02-25T14:20:45.7474623Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-25T14:20:45.7474703Z         0.01473787]]))
2025-02-25T14:20:45.7474968Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7474974Z 
2025-02-25T14:20:45.7475066Z     @wraps(func)
2025-02-25T14:20:45.7475154Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7475263Z         with self._recreate_cm():
2025-02-25T14:20:45.7475361Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7475473Z E           AssertionError: 
2025-02-25T14:20:45.7475585Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7475842Z E           
2025-02-25T14:20:45.7475957Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:20:45.7476068Z E           Max absolute difference: 1.
2025-02-25T14:20:45.7476161Z E           Max relative difference: 1.
2025-02-25T14:20:45.7476303Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476414Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476534Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.7476668Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476773Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.7476902Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.7476906Z 
2025-02-25T14:20:45.7477115Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7477290Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-25T14:20:45.7477294Z 
2025-02-25T14:20:45.7477523Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7477630Z attr = 'lines_lower_level_index'
2025-02-25T14:20:45.7477914Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a04ca91c0>
2025-02-25T14:20:45.7477919Z 
2025-02-25T14:20:45.7478067Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7478243Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7478366Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7478509Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7478725Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7478828Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7478919Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7479035Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7479039Z 
2025-02-25T14:20:45.7479162Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7479275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7479279Z 
2025-02-25T14:20:45.7479685Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e13d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-25T14:20:45.7479935Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7479940Z 
2025-02-25T14:20:45.7480024Z     @wraps(func)
2025-02-25T14:20:45.7480125Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7480214Z         with self._recreate_cm():
2025-02-25T14:20:45.7480313Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7480403Z E           AssertionError: 
2025-02-25T14:20:45.7480638Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7480716Z E           
2025-02-25T14:20:45.7480841Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:20:45.7480940Z E           Max absolute difference: 4005
2025-02-25T14:20:45.7481053Z E           Max relative difference: 26.00649351
2025-02-25T14:20:45.7481163Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.7481294Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.7481299Z 
2025-02-25T14:20:45.7481512Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7481680Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-25T14:20:45.7481691Z 
2025-02-25T14:20:45.7481934Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7482172Z attr = 'lines_upper_level_index'
2025-02-25T14:20:45.7482455Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a04c9c740>
2025-02-25T14:20:45.7482460Z 
2025-02-25T14:20:45.7482609Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7482783Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7482902Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7483040Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7483174Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7483264Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7483364Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7483465Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7483474Z 
2025-02-25T14:20:45.7483585Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7483708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7483713Z 
2025-02-25T14:20:45.7484121Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e11a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-25T14:20:45.7484381Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7484386Z 
2025-02-25T14:20:45.7484464Z     @wraps(func)
2025-02-25T14:20:45.7484564Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7484664Z         with self._recreate_cm():
2025-02-25T14:20:45.7484761Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7484847Z E           AssertionError: 
2025-02-25T14:20:45.7484958Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7485152Z E           
2025-02-25T14:20:45.7485271Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:20:45.7485375Z E           Max absolute difference: 4046
2025-02-25T14:20:45.7485507Z E           Max relative difference: 24.82208589
2025-02-25T14:20:45.7485641Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.7485753Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.7485757Z 
2025-02-25T14:20:45.7485975Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7486131Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-25T14:20:45.7486136Z 
2025-02-25T14:20:45.7486379Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7486461Z attr = 'beta_sobolev'
2025-02-25T14:20:45.7486739Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1c5d93a0>
2025-02-25T14:20:45.7486753Z 
2025-02-25T14:20:45.7486913Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7487093Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7487226Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7487361Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7487501Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7487595Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7487696Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7487803Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7487808Z 
2025-02-25T14:20:45.7487931Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7488059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7488063Z 
2025-02-25T14:20:45.7488324Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e125c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488428Z        [1., 1., .....,
2025-02-25T14:20:45.7488615Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488717Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7488797Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-25T14:20:45.7489058Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7489063Z 
2025-02-25T14:20:45.7489154Z     @wraps(func)
2025-02-25T14:20:45.7489241Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7489346Z         with self._recreate_cm():
2025-02-25T14:20:45.7489436Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7489532Z E           AssertionError: 
2025-02-25T14:20:45.7489641Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7489740Z E           
2025-02-25T14:20:45.7489856Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.7489984Z E           Max absolute difference: 0.99984222
2025-02-25T14:20:45.7490091Z E           Max relative difference: 6337.12154973
2025-02-25T14:20:45.7490204Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490296Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490413Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.7490664Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490795Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.7490908Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.7490913Z 
2025-02-25T14:20:45.7491118Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7491281Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-25T14:20:45.7491286Z 
2025-02-25T14:20:45.7491522Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7491743Z attr = 'lines'
2025-02-25T14:20:45.7492018Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db2b4440>
2025-02-25T14:20:45.7492041Z 
2025-02-25T14:20:45.7492198Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7492381Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7492513Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7492659Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7492784Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7492896Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7492994Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7493115Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7493119Z 
2025-02-25T14:20:45.7493303Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7493505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7493523Z 
2025-02-25T14:20:45.7494303Z args = (<function assert_allclose.<locals>.compare at 0x7f89db24dbc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-25T14:20:45.7494421Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-25T14:20:45.7494675Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7494681Z 
2025-02-25T14:20:45.7494761Z     @wraps(func)
2025-02-25T14:20:45.7494870Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7494969Z         with self._recreate_cm():
2025-02-25T14:20:45.7495059Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7495150Z E           AssertionError: 
2025-02-25T14:20:45.7495254Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7495324Z E           
2025-02-25T14:20:45.7495429Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:20:45.7495555Z E           Max absolute difference: 4.25260542e+12
2025-02-25T14:20:45.7495798Z E           Max relative difference: 18196.0085861
2025-02-25T14:20:45.7495978Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.7496076Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.7496235Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.7496397Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.7496490Z E                   4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.7496637Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.7496642Z 
2025-02-25T14:20:45.7496847Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7497016Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-25T14:20:45.7497031Z 
2025-02-25T14:20:45.7497257Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7497359Z attr = 'f_lu'
2025-02-25T14:20:45.7497632Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db2b6d80>
2025-02-25T14:20:45.7497645Z 
2025-02-25T14:20:45.7497794Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7497974Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7498096Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7498239Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7498364Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7498455Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7498547Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7498655Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7498779Z 
2025-02-25T14:20:45.7498895Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7499020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7499025Z 
2025-02-25T14:20:45.7499499Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08e102c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-25T14:20:45.7499603Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-25T14:20:45.7499860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7499866Z 
2025-02-25T14:20:45.7499942Z     @wraps(func)
2025-02-25T14:20:45.7500038Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7500127Z         with self._recreate_cm():
2025-02-25T14:20:45.7500218Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7500324Z E           AssertionError: 
2025-02-25T14:20:45.7500433Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7500688Z E           
2025-02-25T14:20:45.7500823Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:20:45.7500935Z E           Max absolute difference: 2.92713618
2025-02-25T14:20:45.7501036Z E           Max relative difference: 18196.0085861
2025-02-25T14:20:45.7501199Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.7501288Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.7501447Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.7501543Z E                  1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.7501547Z 
2025-02-25T14:20:45.7501751Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7501909Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-25T14:20:45.7501923Z 
2025-02-25T14:20:45.7502148Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f89eefc8b00>
2025-02-25T14:20:45.7502394Z attr = 'tau_sobolevs'
2025-02-25T14:20:45.7502670Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f89db247320>
2025-02-25T14:20:45.7502674Z 
2025-02-25T14:20:45.7502829Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-25T14:20:45.7503000Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-25T14:20:45.7503123Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-25T14:20:45.7503262Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-25T14:20:45.7503381Z             expected = regression_data.sync_ndarray(actual)
2025-02-25T14:20:45.7503476Z             if hasattr(actual, "cgs"):
2025-02-25T14:20:45.7503573Z                 actual = actual.cgs.value
2025-02-25T14:20:45.7503678Z >           npt.assert_allclose(actual, expected)
2025-02-25T14:20:45.7503689Z 
2025-02-25T14:20:45.7503797Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-25T14:20:45.7503921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7503925Z 
2025-02-25T14:20:45.7504382Z args = (<function assert_allclose.<locals>.compare at 0x7f89db24d620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-25T14:20:45.7504493Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-25T14:20:45.7504741Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7504746Z 
2025-02-25T14:20:45.7504822Z     @wraps(func)
2025-02-25T14:20:45.7504923Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7505011Z         with self._recreate_cm():
2025-02-25T14:20:45.7505107Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7505196Z E           AssertionError: 
2025-02-25T14:20:45.7505445Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7505529Z E           
2025-02-25T14:20:45.7505643Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:20:45.7505760Z E           Max absolute difference: 282815.33818472
2025-02-25T14:20:45.7505862Z E           Max relative difference: 4.12352828e+47
2025-02-25T14:20:45.7506029Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.7506122Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.7506274Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.7506418Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.7506515Z E                   0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.7506649Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.7506666Z 
2025-02-25T14:20:45.7506882Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7507065Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-25T14:20:45.7507076Z 
2025-02-25T14:20:45.7507290Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7507381Z attr = 'iterations_w'
2025-02-25T14:20:45.7507645Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adba390>
2025-02-25T14:20:45.7507650Z 
2025-02-25T14:20:45.7507750Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7507838Z         "attr",
2025-02-25T14:20:45.7507911Z         [
2025-02-25T14:20:45.7508007Z             "iterations_w",
2025-02-25T14:20:45.7508092Z             "iterations_t_rad",
2025-02-25T14:20:45.7508205Z             "iterations_electron_densities",
2025-02-25T14:20:45.7508295Z             "iterations_t_inner",
2025-02-25T14:20:45.7508373Z         ],
2025-02-25T14:20:45.7508443Z     )
2025-02-25T14:20:45.7508662Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7508870Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7508968Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7509050Z             actual = actual.value
2025-02-25T14:20:45.7509155Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7509284Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7509474Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7509479Z 
2025-02-25T14:20:45.7509609Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7509726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7509884Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7509958Z     ???
2025-02-25T14:20:45.7510076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7510088Z 
2025-02-25T14:20:45.7510157Z >   ???
2025-02-25T14:20:45.7510341Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7510428Z E   
2025-02-25T14:20:45.7510775Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7510865Z E   [index]: [0, 1]
2025-02-25T14:20:45.7510972Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-25T14:20:45.7511079Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:20:45.7511256Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.7511261Z 
2025-02-25T14:20:45.7511354Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7511504Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7512042Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7512641Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7513091Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.7513108Z 
2025-02-25T14:20:45.7513113Z 
2025-02-25T14:20:45.7513498Z Packets:                                                                                   4031/? [05:07<00:00,  6.98it/s] [A
2025-02-25T14:20:45.7513505Z 
2025-02-25T14:20:45.7513736Z Packets:                                                                                   13745/? [05:08<00:00, 52.60it/s][A
2025-02-25T14:20:45.7513740Z 
2025-02-25T14:20:45.7513982Z Packets:                                                                                   24180/? [05:08<00:00, 122.53it/s][A
2025-02-25T14:20:45.7513987Z 
2025-02-25T14:20:45.7514221Z Packets:                                                                                   34814/? [05:08<00:00, 224.18it/s][A
2025-02-25T14:20:45.7514578Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [05:08<00:00, 108.44s/it]
2025-02-25T14:20:45.7514605Z 
2025-02-25T14:20:45.7514843Z Packets:                                                                                   44030/? [05:08<00:00, 224.18it/s][A
2025-02-25T14:20:45.7514848Z 
2025-02-25T14:20:45.7515068Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-25T14:20:45.7515082Z 
2025-02-25T14:20:45.7515342Z Packets:   ██████████████████▊                                                             9414/40000 [00:00<00:00, 33912.65it/s][A
2025-02-25T14:20:45.7515348Z 
2025-02-25T14:20:45.7515619Z Packets:   █████████████████████████▋                                                      12845/40000 [00:00<00:00, 34047.37it/s][A
2025-02-25T14:20:45.7515624Z 
2025-02-25T14:20:45.7515891Z Packets:   ████████████████████████████████▌                                               16273/40000 [00:00<00:00, 34123.32it/s][A
2025-02-25T14:20:45.7515913Z 
2025-02-25T14:20:45.7516190Z Packets:   ███████████████████████████████████████▍                                        19694/40000 [00:00<00:00, 33812.99it/s][A
2025-02-25T14:20:45.7516331Z 
2025-02-25T14:20:45.7516634Z Packets:   ██████████████████████████████████████████████▎                                 23176/40000 [00:00<00:00, 34108.53it/s][A
2025-02-25T14:20:45.7516639Z 
2025-02-25T14:20:45.7516934Z Packets:   █████████████████████████████████████████████████████▍                          26702/40000 [00:00<00:00, 34459.97it/s][A
2025-02-25T14:20:45.7516939Z 
2025-02-25T14:20:45.7517244Z Packets:   ████████████████████████████████████████████████████████████▎                   30155/40000 [00:00<00:00, 34473.97it/s][A
2025-02-25T14:20:45.7517249Z 
2025-02-25T14:20:45.7517547Z Packets:   ███████████████████████████████████████████████████████████████████▎            33627/40000 [00:00<00:00, 34546.70it/s][A
2025-02-25T14:20:45.7517584Z 
2025-02-25T14:20:45.7517890Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     37166/40000 [00:01<00:00, 34800.17it/s][A
2025-02-25T14:20:45.7518065Z Iterations:                                                                                6/? [05:10<00:00, 72.41s/it] 
2025-02-25T14:20:45.7518071Z 
2025-02-25T14:20:45.7518385Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 34800.17it/s][A
2025-02-25T14:20:45.7518554Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7519063Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7519241Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-25T14:20:45.7519246Z 
2025-02-25T14:20:45.7519473Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7519659Z attr = 'iterations_t_rad'
2025-02-25T14:20:45.7519944Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adbae70>
2025-02-25T14:20:45.7519949Z 
2025-02-25T14:20:45.7520043Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7520127Z         "attr",
2025-02-25T14:20:45.7520197Z         [
2025-02-25T14:20:45.7520287Z             "iterations_w",
2025-02-25T14:20:45.7520372Z             "iterations_t_rad",
2025-02-25T14:20:45.7520482Z             "iterations_electron_densities",
2025-02-25T14:20:45.7520701Z             "iterations_t_inner",
2025-02-25T14:20:45.7520775Z         ],
2025-02-25T14:20:45.7520857Z     )
2025-02-25T14:20:45.7521058Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7521179Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7521268Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7521372Z             actual = actual.value
2025-02-25T14:20:45.7521462Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7521598Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7521919Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7521925Z 
2025-02-25T14:20:45.7522062Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7522188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7522334Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7522417Z     ???
2025-02-25T14:20:45.7522529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7522534Z 
2025-02-25T14:20:45.7522613Z >   ???
2025-02-25T14:20:45.7522795Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7522879Z E   
2025-02-25T14:20:45.7523042Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7523139Z E   [index]: [0, 1]
2025-02-25T14:20:45.7523240Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-25T14:20:45.7523357Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:20:45.7523543Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.7523548Z 
2025-02-25T14:20:45.7523643Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7523842Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-25T14:20:45.7523847Z 
2025-02-25T14:20:45.7524063Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7524179Z attr = 'iterations_electron_densities'
2025-02-25T14:20:45.7524446Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0855cb00>
2025-02-25T14:20:45.7524459Z 
2025-02-25T14:20:45.7524553Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7524637Z         "attr",
2025-02-25T14:20:45.7524852Z         [
2025-02-25T14:20:45.7524945Z             "iterations_w",
2025-02-25T14:20:45.7525029Z             "iterations_t_rad",
2025-02-25T14:20:45.7525152Z             "iterations_electron_densities",
2025-02-25T14:20:45.7525237Z             "iterations_t_inner",
2025-02-25T14:20:45.7525316Z         ],
2025-02-25T14:20:45.7525389Z     )
2025-02-25T14:20:45.7525591Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7525704Z         actual = getattr(simulation_one_loop, attr)
2025-02-25T14:20:45.7525803Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7525889Z             actual = actual.value
2025-02-25T14:20:45.7526004Z         actual = pd.DataFrame(actual)
2025-02-25T14:20:45.7526145Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7526322Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7526326Z 
2025-02-25T14:20:45.7526454Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-25T14:20:45.7526577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7526748Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7526820Z     ???
2025-02-25T14:20:45.7526945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7526950Z 
2025-02-25T14:20:45.7527023Z >   ???
2025-02-25T14:20:45.7527216Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.7527297Z E   
2025-02-25T14:20:45.7527457Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.7527539Z E   [index]: [0, 1]
2025-02-25T14:20:45.7527636Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-25T14:20:45.7527744Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:20:45.7527918Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-25T14:20:45.7527928Z 
2025-02-25T14:20:45.7528024Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7528186Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-25T14:20:45.7528284Z 
2025-02-25T14:20:45.7528505Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7528607Z attr = 'nu_bar_estimator'
2025-02-25T14:20:45.7528872Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0adc87a0>
2025-02-25T14:20:45.7528877Z 
2025-02-25T14:20:45.7528975Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7529050Z         "attr",
2025-02-25T14:20:45.7529134Z         [
2025-02-25T14:20:45.7529221Z             "nu_bar_estimator",
2025-02-25T14:20:45.7529310Z             "j_estimator",
2025-02-25T14:20:45.7529387Z             "t_radiative",
2025-02-25T14:20:45.7529481Z             "dilution_factor",
2025-02-25T14:20:45.7529558Z             "output_nus",
2025-02-25T14:20:45.7529653Z             "output_energies",
2025-02-25T14:20:45.7529735Z         ],
2025-02-25T14:20:45.7529805Z     )
2025-02-25T14:20:45.7529995Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7530115Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7530205Z             actual = getattr(
2025-02-25T14:20:45.7530398Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7530486Z                 attr,
2025-02-25T14:20:45.7530756Z             )
2025-02-25T14:20:45.7530893Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7531046Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7531170Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7531264Z             actual = getattr(
2025-02-25T14:20:45.7531447Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7531536Z                 attr,
2025-02-25T14:20:45.7531861Z             )
2025-02-25T14:20:45.7532012Z         else:
2025-02-25T14:20:45.7532249Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7532404Z     
2025-02-25T14:20:45.7532556Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7532720Z             actual = actual.value
2025-02-25T14:20:45.7532818Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7532954Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7533139Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7533151Z 
2025-02-25T14:20:45.7533271Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7533386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7533535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7533611Z     ???
2025-02-25T14:20:45.7533717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7533737Z 
2025-02-25T14:20:45.7533816Z >   ???
2025-02-25T14:20:45.7533926Z E   AssertionError: Series are different
2025-02-25T14:20:45.7534008Z E   
2025-02-25T14:20:45.7534107Z E   Series values are different (100.0 %)
2025-02-25T14:20:45.7534246Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7535468Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-25T14:20:45.7536658Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:20:45.7537049Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-25T14:20:45.7537055Z 
2025-02-25T14:20:45.7537145Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7537296Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-25T14:20:45.7537301Z 
2025-02-25T14:20:45.7537522Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7537600Z attr = 'j_estimator'
2025-02-25T14:20:45.7537874Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6c2630>
2025-02-25T14:20:45.7537887Z 
2025-02-25T14:20:45.7537981Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7538066Z         "attr",
2025-02-25T14:20:45.7538156Z         [
2025-02-25T14:20:45.7538242Z             "nu_bar_estimator",
2025-02-25T14:20:45.7538335Z             "j_estimator",
2025-02-25T14:20:45.7538416Z             "t_radiative",
2025-02-25T14:20:45.7538509Z             "dilution_factor",
2025-02-25T14:20:45.7538589Z             "output_nus",
2025-02-25T14:20:45.7538691Z             "output_energies",
2025-02-25T14:20:45.7538770Z         ],
2025-02-25T14:20:45.7538859Z     )
2025-02-25T14:20:45.7539048Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7539174Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7539256Z             actual = getattr(
2025-02-25T14:20:45.7539457Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7539543Z                 attr,
2025-02-25T14:20:45.7539706Z             )
2025-02-25T14:20:45.7539834Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7539992Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7540117Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7540205Z             actual = getattr(
2025-02-25T14:20:45.7540386Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7540461Z                 attr,
2025-02-25T14:20:45.7540663Z             )
2025-02-25T14:20:45.7540740Z         else:
2025-02-25T14:20:45.7540886Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7540955Z     
2025-02-25T14:20:45.7541059Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7541161Z             actual = actual.value
2025-02-25T14:20:45.7541252Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7541388Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7541582Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7541587Z 
2025-02-25T14:20:45.7541723Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7541837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7541997Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7542072Z     ???
2025-02-25T14:20:45.7542191Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7542195Z 
2025-02-25T14:20:45.7542272Z >   ???
2025-02-25T14:20:45.7542375Z E   AssertionError: Series are different
2025-02-25T14:20:45.7542462Z E   
2025-02-25T14:20:45.7542560Z E   Series values are different (100.0 %)
2025-02-25T14:20:45.7542705Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7543691Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-25T14:20:45.7544804Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:20:45.7544984Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-25T14:20:45.7544988Z 
2025-02-25T14:20:45.7545080Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7545259Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-25T14:20:45.7545268Z 
2025-02-25T14:20:45.7545482Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7545586Z attr = 't_radiative'
2025-02-25T14:20:45.7545873Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6c1550>
2025-02-25T14:20:45.7545878Z 
2025-02-25T14:20:45.7545973Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7546070Z         "attr",
2025-02-25T14:20:45.7546147Z         [
2025-02-25T14:20:45.7546246Z             "nu_bar_estimator",
2025-02-25T14:20:45.7546333Z             "j_estimator",
2025-02-25T14:20:45.7546430Z             "t_radiative",
2025-02-25T14:20:45.7546517Z             "dilution_factor",
2025-02-25T14:20:45.7546612Z             "output_nus",
2025-02-25T14:20:45.7546699Z             "output_energies",
2025-02-25T14:20:45.7547116Z         ],
2025-02-25T14:20:45.7547280Z     )
2025-02-25T14:20:45.7555534Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7555906Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7555990Z             actual = getattr(
2025-02-25T14:20:45.7556205Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7556276Z                 attr,
2025-02-25T14:20:45.7556345Z             )
2025-02-25T14:20:45.7556466Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7556625Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7556742Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7556820Z             actual = getattr(
2025-02-25T14:20:45.7557002Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7557071Z                 attr,
2025-02-25T14:20:45.7557139Z             )
2025-02-25T14:20:45.7557205Z         else:
2025-02-25T14:20:45.7557345Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7557428Z     
2025-02-25T14:20:45.7557518Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7557612Z             actual = actual.value
2025-02-25T14:20:45.7557706Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7557827Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7558020Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7558026Z 
2025-02-25T14:20:45.7558158Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7558281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7558443Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7558516Z     ???
2025-02-25T14:20:45.7558720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7558729Z 
2025-02-25T14:20:45.7558858Z >   ???
2025-02-25T14:20:45.7559053Z E   AssertionError: Series are different
2025-02-25T14:20:45.7559184Z E   
2025-02-25T14:20:45.7559354Z E   Series values are different (90.0 %)
2025-02-25T14:20:45.7559751Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7560879Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-25T14:20:45.7561879Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:20:45.7562061Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.7562086Z 
2025-02-25T14:20:45.7562179Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7562355Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-25T14:20:45.7562360Z 
2025-02-25T14:20:45.7562579Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7562677Z attr = 'dilution_factor'
2025-02-25T14:20:45.7562951Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b7950>
2025-02-25T14:20:45.7562956Z 
2025-02-25T14:20:45.7563065Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7563144Z         "attr",
2025-02-25T14:20:45.7563239Z         [
2025-02-25T14:20:45.7563329Z             "nu_bar_estimator",
2025-02-25T14:20:45.7563412Z             "j_estimator",
2025-02-25T14:20:45.7563499Z             "t_radiative",
2025-02-25T14:20:45.7563731Z             "dilution_factor",
2025-02-25T14:20:45.7563828Z             "output_nus",
2025-02-25T14:20:45.7563924Z             "output_energies",
2025-02-25T14:20:45.7564003Z         ],
2025-02-25T14:20:45.7564080Z     )
2025-02-25T14:20:45.7564278Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7564399Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7564502Z             actual = getattr(
2025-02-25T14:20:45.7564699Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7564790Z                 attr,
2025-02-25T14:20:45.7564863Z             )
2025-02-25T14:20:45.7564981Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7565144Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7565262Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7565351Z             actual = getattr(
2025-02-25T14:20:45.7565562Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7565669Z                 attr,
2025-02-25T14:20:45.7565741Z             )
2025-02-25T14:20:45.7565824Z         else:
2025-02-25T14:20:45.7565962Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7566042Z     
2025-02-25T14:20:45.7566131Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7566229Z             actual = actual.value
2025-02-25T14:20:45.7566334Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7566464Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7566657Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7566662Z 
2025-02-25T14:20:45.7566783Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7566910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7567068Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7567152Z     ???
2025-02-25T14:20:45.7567390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7567405Z 
2025-02-25T14:20:45.7567477Z >   ???
2025-02-25T14:20:45.7567588Z E   AssertionError: Series are different
2025-02-25T14:20:45.7567660Z E   
2025-02-25T14:20:45.7567775Z E   Series values are different (95.0 %)
2025-02-25T14:20:45.7567904Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.7568998Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-25T14:20:45.7570085Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:20:45.7570278Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.7570283Z 
2025-02-25T14:20:45.7570380Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7570725Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-25T14:20:45.7570735Z 
2025-02-25T14:20:45.7570993Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7571074Z attr = 'output_nus'
2025-02-25T14:20:45.7571358Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b6510>
2025-02-25T14:20:45.7571496Z 
2025-02-25T14:20:45.7571604Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7571691Z         "attr",
2025-02-25T14:20:45.7571779Z         [
2025-02-25T14:20:45.7571862Z             "nu_bar_estimator",
2025-02-25T14:20:45.7571959Z             "j_estimator",
2025-02-25T14:20:45.7572042Z             "t_radiative",
2025-02-25T14:20:45.7572140Z             "dilution_factor",
2025-02-25T14:20:45.7572222Z             "output_nus",
2025-02-25T14:20:45.7572320Z             "output_energies",
2025-02-25T14:20:45.7572394Z         ],
2025-02-25T14:20:45.7572478Z     )
2025-02-25T14:20:45.7572662Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7572794Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7572893Z             actual = getattr(
2025-02-25T14:20:45.7573085Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7573186Z                 attr,
2025-02-25T14:20:45.7573260Z             )
2025-02-25T14:20:45.7573395Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7573543Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7573652Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7573732Z             actual = getattr(
2025-02-25T14:20:45.7573921Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7574011Z                 attr,
2025-02-25T14:20:45.7574085Z             )
2025-02-25T14:20:45.7574173Z         else:
2025-02-25T14:20:45.7574312Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7574395Z     
2025-02-25T14:20:45.7574482Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7574577Z             actual = actual.value
2025-02-25T14:20:45.7574665Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7574812Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7574997Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7575163Z 
2025-02-25T14:20:45.7575304Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7575416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7575578Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7575665Z     ???
2025-02-25T14:20:45.7575775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7575780Z 
2025-02-25T14:20:45.7575859Z >   ???
2025-02-25T14:20:45.7575962Z E   AssertionError: Series are different
2025-02-25T14:20:45.7576040Z E   
2025-02-25T14:20:45.7576142Z E   Series values are different (5.1125 %)
2025-02-25T14:20:45.7576525Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7581819Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:20:45.7587622Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:20:45.7588028Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:20:45.7588042Z 
2025-02-25T14:20:45.7588167Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7588364Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-25T14:20:45.7588368Z 
2025-02-25T14:20:45.7588602Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f89db2949e0>
2025-02-25T14:20:45.7588703Z attr = 'output_energies'
2025-02-25T14:20:45.7588994Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a0e6b49e0>
2025-02-25T14:20:45.7589000Z 
2025-02-25T14:20:45.7589109Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7589195Z         "attr",
2025-02-25T14:20:45.7589274Z         [
2025-02-25T14:20:45.7589382Z             "nu_bar_estimator",
2025-02-25T14:20:45.7589570Z             "j_estimator",
2025-02-25T14:20:45.7589668Z             "t_radiative",
2025-02-25T14:20:45.7589770Z             "dilution_factor",
2025-02-25T14:20:45.7589871Z             "output_nus",
2025-02-25T14:20:45.7589957Z             "output_energies",
2025-02-25T14:20:45.7590043Z         ],
2025-02-25T14:20:45.7590120Z     )
2025-02-25T14:20:45.7590316Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-25T14:20:45.7590435Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-25T14:20:45.7590738Z             actual = getattr(
2025-02-25T14:20:45.7590967Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-25T14:20:45.7591063Z                 attr,
2025-02-25T14:20:45.7591150Z             )
2025-02-25T14:20:45.7591275Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-25T14:20:45.7591443Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-25T14:20:45.7591574Z         elif attr in ["output_nus", "output_energies"]:
2025-02-25T14:20:45.7591667Z             actual = getattr(
2025-02-25T14:20:45.7591853Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-25T14:20:45.7591942Z                 attr,
2025-02-25T14:20:45.7592015Z             )
2025-02-25T14:20:45.7592098Z         else:
2025-02-25T14:20:45.7592233Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-25T14:20:45.7592321Z     
2025-02-25T14:20:45.7592420Z         if hasattr(actual, "value"):
2025-02-25T14:20:45.7592516Z             actual = actual.value
2025-02-25T14:20:45.7592625Z         actual = pd.Series(actual)
2025-02-25T14:20:45.7592755Z         expected = regression_data.sync_dataframe(actual)
2025-02-25T14:20:45.7592957Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-25T14:20:45.7592962Z 
2025-02-25T14:20:45.7593084Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-25T14:20:45.7593221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7593376Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-25T14:20:45.7593604Z     ???
2025-02-25T14:20:45.7593718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7593735Z 
2025-02-25T14:20:45.7593812Z >   ???
2025-02-25T14:20:45.7593913Z E   AssertionError: Series are different
2025-02-25T14:20:45.7593980Z E   
2025-02-25T14:20:45.7594081Z E   Series values are different (1.3025 %)
2025-02-25T14:20:45.7594455Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.7600826Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.7607184Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.7607533Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:20:45.7607539Z 
2025-02-25T14:20:45.7607648Z testing.pyx:173: AssertionError
2025-02-25T14:20:45.7607935Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-25T14:20:45.7607953Z 
2025-02-25T14:20:45.7608219Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ac740>
2025-02-25T14:20:45.7608423Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7608428Z 
2025-02-25T14:20:45.7608550Z     def test_spectrum_real_packets(self, simulation):
2025-02-25T14:20:45.7608715Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7608905Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7608988Z     
2025-02-25T14:20:45.7609172Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7609309Z         result = solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7609499Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7609612Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7609699Z     
2025-02-25T14:20:45.7609814Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7609902Z     
2025-02-25T14:20:45.7609997Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7610081Z             result,
2025-02-25T14:20:45.7610162Z             luminosity,
2025-02-25T14:20:45.7610245Z         )
2025-02-25T14:20:45.7610250Z 
2025-02-25T14:20:45.7610374Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-25T14:20:45.7610649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7611055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7611155Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7611283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7611288Z 
2025-02-25T14:20:45.7611762Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed335800>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:20:45.7612063Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7612494Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7612503Z 
2025-02-25T14:20:45.7612648Z     @wraps(func)
2025-02-25T14:20:45.7612802Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7612950Z         with self._recreate_cm():
2025-02-25T14:20:45.7613120Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7613215Z E           AssertionError: 
2025-02-25T14:20:45.7613346Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7613421Z E           
2025-02-25T14:20:45.7613536Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.7613640Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.7613764Z E           Max relative difference: 1.
2025-02-25T14:20:45.7613919Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7614031Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7614187Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7614279Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7614283Z 
2025-02-25T14:20:45.7614507Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7614711Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-25T14:20:45.7614716Z 
2025-02-25T14:20:45.7614991Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ac9e0>
2025-02-25T14:20:45.7615186Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7615191Z 
2025-02-25T14:20:45.7615359Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-25T14:20:45.7615657Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7615860Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7615946Z     
2025-02-25T14:20:45.7616135Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7616301Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-25T14:20:45.7616510Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-25T14:20:45.7616626Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7616699Z     
2025-02-25T14:20:45.7616814Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7616889Z     
2025-02-25T14:20:45.7616996Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7617086Z             result,
2025-02-25T14:20:45.7617165Z             luminosity,
2025-02-25T14:20:45.7617248Z         )
2025-02-25T14:20:45.7617269Z 
2025-02-25T14:20:45.7617416Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-25T14:20:45.7617567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7617908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7618015Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7618127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7618131Z 
2025-02-25T14:20:45.7618614Z args = (<function assert_allclose.<locals>.compare at 0x7f89e318ab60>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-25T14:20:45.7618745Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7618996Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7619010Z 
2025-02-25T14:20:45.7619105Z     @wraps(func)
2025-02-25T14:20:45.7619192Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7619388Z         with self._recreate_cm():
2025-02-25T14:20:45.7619483Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7619578Z E           AssertionError: 
2025-02-25T14:20:45.7619694Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7619785Z E           
2025-02-25T14:20:45.7619895Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:20:45.7619992Z E           Max absolute difference: 4.15247374e+37
2025-02-25T14:20:45.7620098Z E           Max relative difference: 1.
2025-02-25T14:20:45.7620249Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7620351Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7620497Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7620728Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7620740Z 
2025-02-25T14:20:45.7620944Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7621143Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-25T14:20:45.7621147Z 
2025-02-25T14:20:45.7621417Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f8a1c4ad670>
2025-02-25T14:20:45.7621627Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f1c59df0>
2025-02-25T14:20:45.7621632Z 
2025-02-25T14:20:45.7621732Z     def test_solve(self, simulation):
2025-02-25T14:20:45.7621880Z         transport_state = simulation.transport.transport_state
2025-02-25T14:20:45.7622081Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-25T14:20:45.7622163Z     
2025-02-25T14:20:45.7622358Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-25T14:20:45.7622518Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-25T14:20:45.7622740Z             transport_state
2025-02-25T14:20:45.7622817Z         )
2025-02-25T14:20:45.7623011Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7623139Z         expected_real = self.get_expected_data(key_real)
2025-02-25T14:20:45.7623203Z     
2025-02-25T14:20:45.7623340Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-25T14:20:45.7623415Z     
2025-02-25T14:20:45.7623508Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7623593Z             result_real.luminosity,
2025-02-25T14:20:45.7623680Z             luminosity_real,
2025-02-25T14:20:45.7623747Z         )
2025-02-25T14:20:45.7623751Z 
2025-02-25T14:20:45.7623885Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-25T14:20:45.7623991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7624329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7624436Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7624549Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7624553Z 
2025-02-25T14:20:45.7625020Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06952fc0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-25T14:20:45.7625127Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7625386Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7625391Z 
2025-02-25T14:20:45.7625481Z     @wraps(func)
2025-02-25T14:20:45.7625574Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7625671Z         with self._recreate_cm():
2025-02-25T14:20:45.7625766Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7625864Z E           AssertionError: 
2025-02-25T14:20:45.7625987Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7626209Z E           
2025-02-25T14:20:45.7626315Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.7626427Z E           Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.7626530Z E           Max relative difference: 1.
2025-02-25T14:20:45.7626696Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7626787Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7626938Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.7627028Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7627032Z 
2025-02-25T14:20:45.7627225Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7627415Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-25T14:20:45.7627427Z 
2025-02-25T14:20:45.7627639Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4ad9a0>
2025-02-25T14:20:45.7627857Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7627862Z 
2025-02-25T14:20:45.7627971Z     def test_j_blue_estimators(self, simulation):
2025-02-25T14:20:45.7628133Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-25T14:20:45.7628251Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7628323Z     
2025-02-25T14:20:45.7628418Z >       npt.assert_allclose(
2025-02-25T14:20:45.7628645Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-25T14:20:45.7628730Z             expected.values,
2025-02-25T14:20:45.7628798Z         )
2025-02-25T14:20:45.7628803Z 
2025-02-25T14:20:45.7628910Z tardis/tests/test_tardis_full.py:70: 
2025-02-25T14:20:45.7629020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7629123Z 
2025-02-25T14:20:45.7629395Z args = (<function assert_allclose.<locals>.compare at 0x7f89eefa22a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629480Z        [0., 0., .....,
2025-02-25T14:20:45.7629556Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629637Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7629717Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7629959Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7629965Z 
2025-02-25T14:20:45.7630042Z     @wraps(func)
2025-02-25T14:20:45.7630144Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7630235Z         with self._recreate_cm():
2025-02-25T14:20:45.7630332Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7630423Z E           AssertionError: 
2025-02-25T14:20:45.7630707Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7630798Z E           
2025-02-25T14:20:45.7630916Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:20:45.7631028Z E           Max absolute difference: 5.32418652e-19
2025-02-25T14:20:45.7631136Z E           Max relative difference: 12.23359055
2025-02-25T14:20:45.7631246Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631336Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631452Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7631548Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631657Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7631744Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7631758Z 
2025-02-25T14:20:45.7631952Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7632118Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7632403Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7632508Z 	
2025-02-25T14:20:45.7633081Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-25T14:20:45.7633420Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7633845Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-25T14:20:45.7634023Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7634509Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-25T14:20:45.7634754Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7635198Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7635377Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7635595Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7635765Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7635840Z 	
2025-02-25T14:20:45.7635998Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7636168Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7636247Z 	
2025-02-25T14:20:45.7636342Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:20:45.7636449Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:20:45.7636543Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7636663Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7636819Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7636898Z 	
2025-02-25T14:20:45.7637050Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7637224Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7637443Z 	
2025-02-25T14:20:45.7637552Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:20:45.7637651Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:20:45.7637746Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:20:45.7637853Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:20:45.7637944Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:20:45.7638061Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7638224Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7638302Z 	
2025-02-25T14:20:45.7638413Z 	Current t_inner = 9974.969 K
2025-02-25T14:20:45.7638634Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:20:45.7638818Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7639110Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7639227Z 	
2025-02-25T14:20:45.7639485Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7639644Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7639728Z 	
2025-02-25T14:20:45.7639825Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:20:45.7639926Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:20:45.7640022Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7640125Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7640289Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7640355Z 	
2025-02-25T14:20:45.7640632Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7640801Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7640877Z 	
2025-02-25T14:20:45.7640980Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7641071Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:20:45.7641154Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:20:45.7641255Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:20:45.7641353Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:20:45.7641469Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7641635Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7641857Z 	
2025-02-25T14:20:45.7641954Z 	Current t_inner = 10736.790 K
2025-02-25T14:20:45.7642073Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:20:45.7642188Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7642346Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7642425Z 	
2025-02-25T14:20:45.7642574Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7642741Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7642814Z 	
2025-02-25T14:20:45.7642917Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:20:45.7643015Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:20:45.7643107Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7643217Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7643373Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7643623Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:20:45.7643784Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7643879Z 	
2025-02-25T14:20:45.7644023Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7644185Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7644254Z 	
2025-02-25T14:20:45.7644365Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7644453Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:20:45.7644532Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:20:45.7644615Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:20:45.7644699Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:20:45.7644811Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7644968Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7645047Z 	
2025-02-25T14:20:45.7645132Z 	Current t_inner = 10718.574 K
2025-02-25T14:20:45.7645403Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:20:45.7645514Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7645691Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7645757Z 	
2025-02-25T14:20:45.7645918Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7646085Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7646156Z 	
2025-02-25T14:20:45.7646259Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:20:45.7646352Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:20:45.7646448Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7646551Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7646711Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7646917Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-25T14:20:45.7647079Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7647144Z 	
2025-02-25T14:20:45.7647291Z 	Plasma stratification: ([1mbase.py[0m:653)
2025-02-25T14:20:45.7647456Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7647528Z 	
2025-02-25T14:20:45.7647630Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7647710Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:20:45.7647801Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:20:45.7647884Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:20:45.7647978Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:20:45.7648080Z  ([1mbase.py[0m:654)
2025-02-25T14:20:45.7648247Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7648313Z 	
2025-02-25T14:20:45.7648412Z 	Current t_inner = 10696.150 K
2025-02-25T14:20:45.7648533Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:20:45.7648649Z  ([1mbase.py[0m:656)
2025-02-25T14:20:45.7648805Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7648886Z 	
2025-02-25T14:20:45.7649003Z 	Simulation finished in 4 iterations 
2025-02-25T14:20:45.7649090Z 	Simulation took 13.34 s
2025-02-25T14:20:45.7649313Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7649469Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7649540Z 	
2025-02-25T14:20:45.7649686Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7649862Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7649931Z 	
2025-02-25T14:20:45.7650030Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:20:45.7650119Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:20:45.7650218Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7650319Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7650486Z ---------------------------- Captured stderr setup -----------------------------
2025-02-25T14:20:45.7650491Z 
2025-02-25T14:20:45.7650495Z 
2025-02-25T14:20:45.7650947Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-25T14:20:45.7650965Z 
2025-02-25T14:20:45.7651188Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-25T14:20:45.7651201Z 
2025-02-25T14:20:45.7651467Z Packets:   ███▉                                                                            9816/200000 [00:00<00:01, 98146.99it/s][A
2025-02-25T14:20:45.7651475Z 
2025-02-25T14:20:45.7651724Z Packets:   ███████▉                                                                        19825/200000 [00:00<00:01, 99287.84it/s][A
2025-02-25T14:20:45.7651730Z 
2025-02-25T14:20:45.7651971Z Packets:   ███████████▉                                                                    29754/200000 [00:00<00:01, 97539.18it/s][A
2025-02-25T14:20:45.7651976Z 
2025-02-25T14:20:45.7652246Z Packets:   ███████████████▊                                                                39512/200000 [00:00<00:01, 95961.83it/s][A
2025-02-25T14:20:45.7652429Z 
2025-02-25T14:20:45.7652689Z Packets:   ███████████████████▉                                                            49988/200000 [00:00<00:01, 99076.56it/s][A
2025-02-25T14:20:45.7652717Z 
2025-02-25T14:20:45.7652973Z Packets:   ███████████████████████▉                                                        59904/200000 [00:00<00:01, 98990.02it/s][A
2025-02-25T14:20:45.7652979Z 
2025-02-25T14:20:45.7653256Z Packets:   ████████████████████████████                                                    70280/200000 [00:00<00:01, 100533.67it/s][A
2025-02-25T14:20:45.7653261Z 
2025-02-25T14:20:45.7653533Z Packets:   ████████████████████████████████▏                                               80339/200000 [00:00<00:01, 99716.51it/s] [A
2025-02-25T14:20:45.7653538Z 
2025-02-25T14:20:45.7653813Z Packets:   ████████████████████████████████████▏                                           90316/200000 [00:00<00:01, 97713.43it/s][A
2025-02-25T14:20:45.7653817Z 
2025-02-25T14:20:45.7654103Z Packets:   ████████████████████████████████████████                                        100098/200000 [00:01<00:01, 96659.99it/s][A
2025-02-25T14:20:45.7654138Z 
2025-02-25T14:20:45.7654419Z Packets:   ████████████████████████████████████████████▏                                   110324/200000 [00:01<00:00, 98333.90it/s][A
2025-02-25T14:20:45.7654424Z 
2025-02-25T14:20:45.7654720Z Packets:   ████████████████████████████████████████████████▎                               120741/200000 [00:01<00:00, 100079.77it/s][A
2025-02-25T14:20:45.7654725Z 
2025-02-25T14:20:45.7655016Z Packets:   ████████████████████████████████████████████████████▍                           131141/200000 [00:01<00:00, 101252.97it/s][A
2025-02-25T14:20:45.7655027Z 
2025-02-25T14:20:45.7655346Z Packets:   ████████████████████████████████████████████████████████▌                       141274/200000 [00:01<00:00, 99019.06it/s] [A
2025-02-25T14:20:45.7655351Z 
2025-02-25T14:20:45.7655660Z Packets:   ████████████████████████████████████████████████████████████▋                   151683/200000 [00:01<00:00, 100512.94it/s][A
2025-02-25T14:20:45.7655686Z 
2025-02-25T14:20:45.7656166Z Packets:   ████████████████████████████████████████████████████████████████▊               161902/200000 [00:01<00:00, 101004.38it/s][A
2025-02-25T14:20:45.7656172Z 
2025-02-25T14:20:45.7656492Z Packets:   ████████████████████████████████████████████████████████████████████▉           172353/200000 [00:01<00:00, 102047.05it/s][A
2025-02-25T14:20:45.7656498Z 
2025-02-25T14:20:45.7656817Z Packets:   █████████████████████████████████████████████████████████████████████████▏      182842/200000 [00:01<00:00, 102891.82it/s][A
2025-02-25T14:20:45.7656823Z 
2025-02-25T14:20:45.7657141Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193380/200000 [00:01<00:00, 103632.28it/s][A
2025-02-25T14:20:45.7657297Z Iterations:                                                                                13/? [06:15<00:00, 12.99s/it]
2025-02-25T14:20:45.7657420Z 
2025-02-25T14:20:45.7657750Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 103632.28it/s][A
2025-02-25T14:20:45.7657785Z 
2025-02-25T14:20:45.7658031Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7658036Z 
2025-02-25T14:20:45.7658280Z Packets:   ████▏                                                                           10369/200000 [00:00<00:02, 87767.88it/s][A
2025-02-25T14:20:45.7658285Z 
2025-02-25T14:20:45.7658524Z Packets:   ████████▏                                                                       20449/200000 [00:00<00:01, 94898.20it/s][A
2025-02-25T14:20:45.7658529Z 
2025-02-25T14:20:45.7658778Z Packets:   ████████████▎                                                                   30855/200000 [00:00<00:01, 98915.67it/s][A
2025-02-25T14:20:45.7658784Z 
2025-02-25T14:20:45.7659044Z Packets:   ████████████████▍                                                               41244/200000 [00:00<00:01, 100829.60it/s][A
2025-02-25T14:20:45.7659168Z 
2025-02-25T14:20:45.7659427Z Packets:   ████████████████████▋                                                           51805/200000 [00:00<00:01, 102523.81it/s][A
2025-02-25T14:20:45.7659433Z 
2025-02-25T14:20:45.7659706Z Packets:   ████████████████████████▊                                                       62081/200000 [00:00<00:01, 100074.83it/s][A
2025-02-25T14:20:45.7659711Z 
2025-02-25T14:20:45.7659973Z Packets:   ████████████████████████████▊                                                   72129/200000 [00:00<00:01, 100202.28it/s][A
2025-02-25T14:20:45.7659993Z 
2025-02-25T14:20:45.7660256Z Packets:   █████████████████████████████████                                               82590/200000 [00:00<00:01, 101582.21it/s][A
2025-02-25T14:20:45.7660261Z 
2025-02-25T14:20:45.7660727Z Packets:   █████████████████████████████████████▎                                          93356/200000 [00:00<00:01, 103459.64it/s][A
2025-02-25T14:20:45.7660760Z 
2025-02-25T14:20:45.7661066Z Packets:   █████████████████████████████████████████▋                                      104090/200000 [00:01<00:00, 104645.23it/s][A
2025-02-25T14:20:45.7661071Z 
2025-02-25T14:20:45.7661365Z Packets:   █████████████████████████████████████████████▊                                  114564/200000 [00:01<00:00, 102776.70it/s][A
2025-02-25T14:20:45.7661370Z 
2025-02-25T14:20:45.7661670Z Packets:   ██████████████████████████████████████████████████                              125053/200000 [00:01<00:00, 103407.94it/s][A
2025-02-25T14:20:45.7661675Z 
2025-02-25T14:20:45.7661969Z Packets:   ██████████████████████████████████████████████████████▎                         135716/200000 [00:01<00:00, 104370.93it/s][A
2025-02-25T14:20:45.7661974Z 
2025-02-25T14:20:45.7662278Z Packets:   ██████████████████████████████████████████████████████████▌                     146276/200000 [00:01<00:00, 104737.02it/s][A
2025-02-25T14:20:45.7662452Z 
2025-02-25T14:20:45.7662775Z Packets:   ██████████████████████████████████████████████████████████████▊                 156879/200000 [00:01<00:00, 105124.21it/s][A
2025-02-25T14:20:45.7662801Z 
2025-02-25T14:20:45.7663116Z Packets:   ███████████████████████████████████████████████████████████████████             167559/200000 [00:01<00:00, 105626.42it/s][A
2025-02-25T14:20:45.7663121Z 
2025-02-25T14:20:45.7663447Z Packets:   ███████████████████████████████████████████████████████████████████████▎        178125/200000 [00:01<00:00, 105608.13it/s][A
2025-02-25T14:20:45.7663452Z 
2025-02-25T14:20:45.7663766Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    188722/200000 [00:01<00:00, 105714.70it/s][A
2025-02-25T14:20:45.7663772Z 
2025-02-25T14:20:45.7664092Z Packets:   ███████████████████████████████████████████████████████████████████████████████▊199493/200000 [00:01<00:00, 106311.81it/s][A
2025-02-25T14:20:45.7664279Z Iterations:                                                                                14/? [06:19<00:00, 10.08s/it]
2025-02-25T14:20:45.7664415Z 
2025-02-25T14:20:45.7664741Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106311.81it/s][A
2025-02-25T14:20:45.7664746Z 
2025-02-25T14:20:45.7664996Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7665001Z 
2025-02-25T14:20:45.7665236Z Packets:   ████▎                                                                           10633/200000 [00:00<00:01, 104135.57it/s][A
2025-02-25T14:20:45.7665251Z 
2025-02-25T14:20:45.7665492Z Packets:   ████████▍                                                                       21047/200000 [00:00<00:01, 103454.24it/s][A
2025-02-25T14:20:45.7665497Z 
2025-02-25T14:20:45.7665753Z Packets:   ████████████▌                                                                   31393/200000 [00:00<00:01, 102080.44it/s][A
2025-02-25T14:20:45.7665772Z 
2025-02-25T14:20:45.7666040Z Packets:   ████████████████▋                                                               41602/200000 [00:00<00:01, 100669.71it/s][A
2025-02-25T14:20:45.7666045Z 
2025-02-25T14:20:45.7666310Z Packets:   ████████████████████▋                                                           51707/200000 [00:00<00:01, 100802.30it/s][A
2025-02-25T14:20:45.7666315Z 
2025-02-25T14:20:45.7666589Z Packets:   ████████████████████████▋                                                       61789/200000 [00:00<00:01, 99967.34it/s] [A
2025-02-25T14:20:45.7666594Z 
2025-02-25T14:20:45.7666855Z Packets:   ████████████████████████████▉                                                   72497/200000 [00:00<00:01, 102259.69it/s][A
2025-02-25T14:20:45.7666860Z 
2025-02-25T14:20:45.7667138Z Packets:   █████████████████████████████████▏                                              82886/200000 [00:00<00:01, 102771.12it/s][A
2025-02-25T14:20:45.7667257Z 
2025-02-25T14:20:45.7667538Z Packets:   █████████████████████████████████████▎                                          93167/200000 [00:00<00:01, 100869.58it/s][A
2025-02-25T14:20:45.7667553Z 
2025-02-25T14:20:45.7667834Z Packets:   █████████████████████████████████████████▍                                      103569/200000 [00:01<00:00, 101822.73it/s][A
2025-02-25T14:20:45.7667839Z 
2025-02-25T14:20:45.7668132Z Packets:   █████████████████████████████████████████████▋                                  114145/200000 [00:01<00:00, 103011.94it/s][A
2025-02-25T14:20:45.7668137Z 
2025-02-25T14:20:45.7668429Z Packets:   █████████████████████████████████████████████████▊                              124515/200000 [00:01<00:00, 103212.61it/s][A
2025-02-25T14:20:45.7668438Z 
2025-02-25T14:20:45.7668725Z Packets:   ██████████████████████████████████████████████████████                          135042/200000 [00:01<00:00, 103831.07it/s][A
2025-02-25T14:20:45.7668749Z 
2025-02-25T14:20:45.7669062Z Packets:   ██████████████████████████████████████████████████████████▏                     145594/200000 [00:01<00:00, 104336.49it/s][A
2025-02-25T14:20:45.7669173Z 
2025-02-25T14:20:45.7669481Z Packets:   ██████████████████████████████████████████████████████████████▍                 156206/200000 [00:01<00:00, 104872.33it/s][A
2025-02-25T14:20:45.7669487Z 
2025-02-25T14:20:45.7669802Z Packets:   ██████████████████████████████████████████████████████████████████▋             166791/200000 [00:01<00:00, 105164.90it/s][A
2025-02-25T14:20:45.7669807Z 
2025-02-25T14:20:45.7670123Z Packets:   ██████████████████████████████████████████████████████████████████████▉         177349/200000 [00:01<00:00, 105284.67it/s][A
2025-02-25T14:20:45.7670128Z 
2025-02-25T14:20:45.7670448Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    187916/200000 [00:01<00:00, 105400.14it/s][A
2025-02-25T14:20:45.7670453Z 
2025-02-25T14:20:45.7671127Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍198470/200000 [00:01<00:00, 105440.94it/s][A
2025-02-25T14:20:45.7671300Z Iterations:                                                                                15/? [06:22<00:00,  8.03s/it]
2025-02-25T14:20:45.7671305Z 
2025-02-25T14:20:45.7671645Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105440.94it/s][A
2025-02-25T14:20:45.7671651Z 
2025-02-25T14:20:45.7671903Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7671908Z 
2025-02-25T14:20:45.7672145Z Packets:   ████▏                                                                           10580/200000 [00:00<00:01, 105791.78it/s][A
2025-02-25T14:20:45.7672150Z 
2025-02-25T14:20:45.7672544Z Packets:   ████████▍                                                                       21165/200000 [00:00<00:01, 105823.86it/s][A
2025-02-25T14:20:45.7672576Z 
2025-02-25T14:20:45.7673033Z Packets:   ████████████▋                                                                   31826/200000 [00:00<00:01, 106181.59it/s][A
2025-02-25T14:20:45.7673056Z 
2025-02-25T14:20:45.7673421Z Packets:   █████████████████                                                               42518/200000 [00:00<00:01, 106471.54it/s][A
2025-02-25T14:20:45.7673427Z 
2025-02-25T14:20:45.7673693Z Packets:   █████████████████████▎                                                          53278/200000 [00:00<00:01, 106875.46it/s][A
2025-02-25T14:20:45.7673699Z 
2025-02-25T14:20:45.7673957Z Packets:   █████████████████████████▌                                                      63966/200000 [00:00<00:01, 106437.54it/s][A
2025-02-25T14:20:45.7673968Z 
2025-02-25T14:20:45.7674228Z Packets:   █████████████████████████████▊                                                  74611/200000 [00:00<00:01, 105942.95it/s][A
2025-02-25T14:20:45.7674249Z 
2025-02-25T14:20:45.7674528Z Packets:   ██████████████████████████████████                                              85239/200000 [00:00<00:01, 106049.25it/s][A
2025-02-25T14:20:45.7674686Z 
2025-02-25T14:20:45.7674966Z Packets:   ██████████████████████████████████████▎                                         95861/200000 [00:00<00:00, 106101.06it/s][A
2025-02-25T14:20:45.7674971Z 
2025-02-25T14:20:45.7675260Z Packets:   ██████████████████████████████████████████▌                                     106472/200000 [00:01<00:00, 106050.35it/s][A
2025-02-25T14:20:45.7675265Z 
2025-02-25T14:20:45.7675561Z Packets:   ██████████████████████████████████████████████▊                                 117078/200000 [00:01<00:00, 105773.19it/s][A
2025-02-25T14:20:45.7675566Z 
2025-02-25T14:20:45.7675854Z Packets:   ███████████████████████████████████████████████████                             127699/200000 [00:01<00:00, 105903.45it/s][A
2025-02-25T14:20:45.7675859Z 
2025-02-25T14:20:45.7676289Z Packets:   ███████████████████████████████████████████████████████▎                        138290/200000 [00:01<00:00, 105867.24it/s][A
2025-02-25T14:20:45.7676315Z 
2025-02-25T14:20:45.7676624Z Packets:   ███████████████████████████████████████████████████████████▌                    149029/200000 [00:01<00:00, 106324.30it/s][A
2025-02-25T14:20:45.7676657Z 
2025-02-25T14:20:45.7676961Z Packets:   ███████████████████████████████████████████████████████████████▉                159694/200000 [00:01<00:00, 106421.62it/s][A
2025-02-25T14:20:45.7676966Z 
2025-02-25T14:20:45.7677279Z Packets:   ████████████████████████████████████████████████████████████████████▏           170337/200000 [00:01<00:00, 106198.25it/s][A
2025-02-25T14:20:45.7677284Z 
2025-02-25T14:20:45.7677597Z Packets:   ████████████████████████████████████████████████████████████████████████▍       180958/200000 [00:01<00:00, 105586.71it/s][A
2025-02-25T14:20:45.7677602Z 
2025-02-25T14:20:45.7677934Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   191518/200000 [00:01<00:00, 105571.54it/s][A
2025-02-25T14:20:45.7678255Z Iterations:                                                                                16/? [06:25<00:00,  6.62s/it]
2025-02-25T14:20:45.7678260Z 
2025-02-25T14:20:45.7678716Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105571.54it/s][A
2025-02-25T14:20:45.7678726Z 
2025-02-25T14:20:45.7679093Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-25T14:20:45.7679100Z 
2025-02-25T14:20:45.7679470Z Packets:   █▋                                                                              10558/500000 [00:00<00:14, 33522.17it/s][A
2025-02-25T14:20:45.7679491Z 
2025-02-25T14:20:45.7679879Z Packets:   ██▏                                                                             13973/500000 [00:00<00:14, 33713.00it/s][A
2025-02-25T14:20:45.7679914Z 
2025-02-25T14:20:45.7680338Z Packets:   ██▊                                                                             17541/500000 [00:00<00:14, 34317.62it/s][A
2025-02-25T14:20:45.7680369Z 
2025-02-25T14:20:45.7680950Z Packets:   ███▎                                                                            21089/500000 [00:00<00:13, 34671.46it/s][A
2025-02-25T14:20:45.7680960Z 
2025-02-25T14:20:45.7681391Z Packets:   ███▉                                                                            24590/500000 [00:00<00:13, 34513.33it/s][A
2025-02-25T14:20:45.7681399Z 
2025-02-25T14:20:45.7681657Z Packets:   ████▍                                                                           28061/500000 [00:00<00:13, 34226.00it/s][A
2025-02-25T14:20:45.7681662Z 
2025-02-25T14:20:45.7681892Z Packets:   █████                                                                           31494/500000 [00:00<00:13, 34150.02it/s][A
2025-02-25T14:20:45.7682064Z 
2025-02-25T14:20:45.7682318Z Packets:   █████▌                                                                          34915/500000 [00:01<00:13, 33700.28it/s][A
2025-02-25T14:20:45.7682335Z 
2025-02-25T14:20:45.7682570Z Packets:   ██████▏                                                                         38288/500000 [00:01<00:13, 33574.98it/s][A
2025-02-25T14:20:45.7682584Z 
2025-02-25T14:20:45.7682822Z Packets:   ██████▋                                                                         41647/500000 [00:01<00:13, 33049.83it/s][A
2025-02-25T14:20:45.7682828Z 
2025-02-25T14:20:45.7683102Z Packets:   ███████▏                                                                        45086/500000 [00:01<00:13, 33439.66it/s][A
2025-02-25T14:20:45.7683107Z 
2025-02-25T14:20:45.7683367Z Packets:   ███████▊                                                                        48546/500000 [00:01<00:13, 33781.71it/s][A
2025-02-25T14:20:45.7683373Z 
2025-02-25T14:20:45.7683622Z Packets:   ████████▎                                                                       51927/500000 [00:01<00:13, 33781.23it/s][A
2025-02-25T14:20:45.7683649Z 
2025-02-25T14:20:45.7683896Z Packets:   ████████▊                                                                       55307/500000 [00:01<00:13, 33445.32it/s][A
2025-02-25T14:20:45.7683901Z 
2025-02-25T14:20:45.7684144Z Packets:   █████████▍                                                                      58653/500000 [00:01<00:13, 33414.73it/s][A
2025-02-25T14:20:45.7684149Z 
2025-02-25T14:20:45.7684395Z Packets:   █████████▉                                                                      62076/500000 [00:01<00:13, 33656.77it/s][A
2025-02-25T14:20:45.7684400Z 
2025-02-25T14:20:45.7684649Z Packets:   ██████████▍                                                                     65588/500000 [00:01<00:12, 34092.90it/s][A
2025-02-25T14:20:45.7684654Z 
2025-02-25T14:20:45.7684889Z Packets:   ███████████                                                                     69048/500000 [00:02<00:12, 34241.67it/s][A
2025-02-25T14:20:45.7684911Z 
2025-02-25T14:20:45.7685164Z Packets:   ███████████▌                                                                    72481/500000 [00:02<00:12, 34267.78it/s][A
2025-02-25T14:20:45.7685296Z 
2025-02-25T14:20:45.7685542Z Packets:   ████████████▏                                                                   75909/500000 [00:02<00:12, 33899.83it/s][A
2025-02-25T14:20:45.7685555Z 
2025-02-25T14:20:45.7685790Z Packets:   ████████████▋                                                                   79301/500000 [00:02<00:12, 33357.46it/s][A
2025-02-25T14:20:45.7685795Z 
2025-02-25T14:20:45.7686037Z Packets:   █████████████▎                                                                  82842/500000 [00:02<00:12, 33961.45it/s][A
2025-02-25T14:20:45.7686042Z 
2025-02-25T14:20:45.7686299Z Packets:   █████████████▊                                                                  86311/500000 [00:02<00:12, 34176.94it/s][A
2025-02-25T14:20:45.7686322Z 
2025-02-25T14:20:45.7686581Z Packets:   ██████████████▍                                                                 89850/500000 [00:02<00:11, 34532.67it/s][A
2025-02-25T14:20:45.7686597Z 
2025-02-25T14:20:45.7686856Z Packets:   ██████████████▉                                                                 93306/500000 [00:02<00:11, 34521.59it/s][A
2025-02-25T14:20:45.7686861Z 
2025-02-25T14:20:45.7687109Z Packets:   ███████████████▍                                                                96760/500000 [00:02<00:11, 34274.12it/s][A
2025-02-25T14:20:45.7687114Z 
2025-02-25T14:20:45.7687381Z Packets:   ████████████████                                                                100189/500000 [00:02<00:11, 33509.63it/s][A
2025-02-25T14:20:45.7687386Z 
2025-02-25T14:20:45.7687640Z Packets:   ████████████████▌                                                               103548/500000 [00:03<00:11, 33531.86it/s][A
2025-02-25T14:20:45.7687658Z 
2025-02-25T14:20:45.7688015Z Packets:   █████████████████                                                               107007/500000 [00:03<00:11, 33842.73it/s][A
2025-02-25T14:20:45.7688032Z 
2025-02-25T14:20:45.7688293Z Packets:   █████████████████▋                                                              110453/500000 [00:03<00:11, 34024.71it/s][A
2025-02-25T14:20:45.7688298Z 
2025-02-25T14:20:45.7688554Z Packets:   ██████████████████▏                                                             113957/500000 [00:03<00:11, 34325.11it/s][A
2025-02-25T14:20:45.7688560Z 
2025-02-25T14:20:45.7688827Z Packets:   ██████████████████▊                                                             117399/500000 [00:03<00:11, 34353.17it/s][A
2025-02-25T14:20:45.7688832Z 
2025-02-25T14:20:45.7689100Z Packets:   ███████████████████▎                                                            120899/500000 [00:03<00:10, 34543.47it/s][A
2025-02-25T14:20:45.7689105Z 
2025-02-25T14:20:45.7689358Z Packets:   ███████████████████▉                                                            124432/500000 [00:03<00:10, 34778.27it/s][A
2025-02-25T14:20:45.7689376Z 
2025-02-25T14:20:45.7689653Z Packets:   ████████████████████▍                                                           127959/500000 [00:03<00:10, 34924.40it/s][A
2025-02-25T14:20:45.7689658Z 
2025-02-25T14:20:45.7689907Z Packets:   █████████████████████                                                           131464/500000 [00:03<00:10, 34955.17it/s][A
2025-02-25T14:20:45.7689921Z 
2025-02-25T14:20:45.7690176Z Packets:   █████████████████████▌                                                          134960/500000 [00:03<00:10, 34904.96it/s][A
2025-02-25T14:20:45.7690182Z 
2025-02-25T14:20:45.7690444Z Packets:   ██████████████████████▏                                                         138510/500000 [00:04<00:10, 35082.51it/s][A
2025-02-25T14:20:45.7690449Z 
2025-02-25T14:20:45.7690940Z Packets:   ██████████████████████▋                                                         142042/500000 [00:04<00:10, 35151.77it/s][A
2025-02-25T14:20:45.7690962Z 
2025-02-25T14:20:45.7691239Z Packets:   ███████████████████████▎                                                        145558/500000 [00:04<00:10, 35014.48it/s][A
2025-02-25T14:20:45.7691397Z 
2025-02-25T14:20:45.7691678Z Packets:   ███████████████████████▊                                                        149060/500000 [00:04<00:10, 33799.92it/s][A
2025-02-25T14:20:45.7691683Z 
2025-02-25T14:20:45.7691948Z Packets:   ████████████████████████▍                                                       152530/500000 [00:04<00:10, 34062.02it/s][A
2025-02-25T14:20:45.7691953Z 
2025-02-25T14:20:45.7692218Z Packets:   ████████████████████████▉                                                       155978/500000 [00:04<00:10, 34182.68it/s][A
2025-02-25T14:20:45.7692223Z 
2025-02-25T14:20:45.7692743Z Packets:   █████████████████████████▌                                                      159445/500000 [00:04<00:09, 34324.74it/s][A
2025-02-25T14:20:45.7692944Z 
2025-02-25T14:20:45.7693395Z Packets:   ██████████████████████████                                                      162882/500000 [00:04<00:09, 34265.83it/s][A
2025-02-25T14:20:45.7693413Z 
2025-02-25T14:20:45.7693699Z Packets:   ██████████████████████████▌                                                     166312/500000 [00:04<00:09, 34252.32it/s][A
2025-02-25T14:20:45.7693704Z 
2025-02-25T14:20:45.7693966Z Packets:   ███████████████████████████▏                                                    169836/500000 [00:04<00:09, 34546.28it/s][A
2025-02-25T14:20:45.7693987Z 
2025-02-25T14:20:45.7694249Z Packets:   ███████████████████████████▋                                                    173323/500000 [00:05<00:09, 34640.84it/s][A
2025-02-25T14:20:45.7694254Z 
2025-02-25T14:20:45.7694530Z Packets:   ████████████████████████████▎                                                   176789/500000 [00:05<00:09, 34638.50it/s][A
2025-02-25T14:20:45.7694534Z 
2025-02-25T14:20:45.7694819Z Packets:   ████████████████████████████▊                                                   180254/500000 [00:05<00:09, 34628.93it/s][A
2025-02-25T14:20:45.7694836Z 
2025-02-25T14:20:45.7695117Z Packets:   █████████████████████████████▍                                                  183718/500000 [00:05<00:09, 33433.59it/s][A
2025-02-25T14:20:45.7695122Z 
2025-02-25T14:20:45.7695397Z Packets:   █████████████████████████████▉                                                  187071/500000 [00:05<00:09, 33407.03it/s][A
2025-02-25T14:20:45.7695402Z 
2025-02-25T14:20:45.7695672Z Packets:   ██████████████████████████████▍                                                 190419/500000 [00:05<00:09, 32908.63it/s][A
2025-02-25T14:20:45.7695678Z 
2025-02-25T14:20:45.7695948Z Packets:   ██████████████████████████████▉                                                 193716/500000 [00:05<00:09, 32272.08it/s][A
2025-02-25T14:20:45.7695953Z 
2025-02-25T14:20:45.7696220Z Packets:   ███████████████████████████████▌                                                197031/500000 [00:05<00:09, 32525.36it/s][A
2025-02-25T14:20:45.7696252Z 
2025-02-25T14:20:45.7696635Z Packets:   ████████████████████████████████                                                200484/500000 [00:05<00:09, 33105.23it/s][A
2025-02-25T14:20:45.7696641Z 
2025-02-25T14:20:45.7696922Z Packets:   ████████████████████████████████▌                                               203799/500000 [00:06<00:09, 32603.53it/s][A
2025-02-25T14:20:45.7696927Z 
2025-02-25T14:20:45.7697202Z Packets:   █████████████████████████████████▏                                              207101/500000 [00:06<00:08, 32724.65it/s][A
2025-02-25T14:20:45.7697207Z 
2025-02-25T14:20:45.7697488Z Packets:   █████████████████████████████████▋                                              210503/500000 [00:06<00:08, 33104.60it/s][A
2025-02-25T14:20:45.7697493Z 
2025-02-25T14:20:45.7697776Z Packets:   ██████████████████████████████████▏                                             213868/500000 [00:06<00:08, 33263.59it/s][A
2025-02-25T14:20:45.7697882Z 
2025-02-25T14:20:45.7698154Z Packets:   ██████████████████████████████████▊                                             217197/500000 [00:06<00:08, 32374.42it/s][A
2025-02-25T14:20:45.7698174Z 
2025-02-25T14:20:45.7698464Z Packets:   ███████████████████████████████████▎                                            220441/500000 [00:06<00:08, 32071.95it/s][A
2025-02-25T14:20:45.7698469Z 
2025-02-25T14:20:45.7698736Z Packets:   ███████████████████████████████████▊                                            223653/500000 [00:06<00:08, 31634.20it/s][A
2025-02-25T14:20:45.7698751Z 
2025-02-25T14:20:45.7699023Z Packets:   ████████████████████████████████████▎                                           226942/500000 [00:06<00:08, 31999.05it/s][A
2025-02-25T14:20:45.7699028Z 
2025-02-25T14:20:45.7699317Z Packets:   ████████████████████████████████████▊                                           230314/500000 [00:06<00:08, 32501.80it/s][A
2025-02-25T14:20:45.7699335Z 
2025-02-25T14:20:45.7699610Z Packets:   █████████████████████████████████████▍                                          233783/500000 [00:06<00:08, 33149.34it/s][A
2025-02-25T14:20:45.7699627Z 
2025-02-25T14:20:45.7699913Z Packets:   █████████████████████████████████████▉                                          237130/500000 [00:07<00:07, 33244.01it/s][A
2025-02-25T14:20:45.7699917Z 
2025-02-25T14:20:45.7700201Z Packets:   ██████████████████████████████████████▍                                         240493/500000 [00:07<00:07, 33351.70it/s][A
2025-02-25T14:20:45.7700206Z 
2025-02-25T14:20:45.7700483Z Packets:   ███████████████████████████████████████                                         243930/500000 [00:07<00:07, 33653.72it/s][A
2025-02-25T14:20:45.7700488Z 
2025-02-25T14:20:45.7700922Z Packets:   ███████████████████████████████████████▌                                        247319/500000 [00:07<00:07, 33721.77it/s][A
2025-02-25T14:20:45.7700928Z 
2025-02-25T14:20:45.7701238Z Packets:   ████████████████████████████████████████                                        250693/500000 [00:07<00:07, 32993.88it/s][A
2025-02-25T14:20:45.7701401Z 
2025-02-25T14:20:45.7701685Z Packets:   ████████████████████████████████████████▋                                       254114/500000 [00:07<00:07, 33350.59it/s][A
2025-02-25T14:20:45.7701690Z 
2025-02-25T14:20:45.7701979Z Packets:   █████████████████████████████████████████▏                                      257499/500000 [00:07<00:07, 33486.25it/s][A
2025-02-25T14:20:45.7701984Z 
2025-02-25T14:20:45.7702262Z Packets:   █████████████████████████████████████████▋                                      260877/500000 [00:07<00:07, 33571.59it/s][A
2025-02-25T14:20:45.7702276Z 
2025-02-25T14:20:45.7702555Z Packets:   ██████████████████████████████████████████▎                                     264237/500000 [00:07<00:07, 33578.31it/s][A
2025-02-25T14:20:45.7702560Z 
2025-02-25T14:20:45.7702846Z Packets:   ██████████████████████████████████████████▊                                     267620/500000 [00:07<00:06, 33651.84it/s][A
2025-02-25T14:20:45.7702983Z 
2025-02-25T14:20:45.7703283Z Packets:   ███████████████████████████████████████████▎                                    271024/500000 [00:08<00:06, 33767.75it/s][A
2025-02-25T14:20:45.7703288Z 
2025-02-25T14:20:45.7703578Z Packets:   ███████████████████████████████████████████▉                                    274403/500000 [00:08<00:06, 33773.24it/s][A
2025-02-25T14:20:45.7703583Z 
2025-02-25T14:20:45.7703879Z Packets:   ████████████████████████████████████████████▍                                   277781/500000 [00:08<00:06, 33668.85it/s][A
2025-02-25T14:20:45.7703884Z 
2025-02-25T14:20:45.7704166Z Packets:   ████████████████████████████████████████████▉                                   281149/500000 [00:08<00:06, 33540.01it/s][A
2025-02-25T14:20:45.7704171Z 
2025-02-25T14:20:45.7704465Z Packets:   █████████████████████████████████████████████▌                                  284504/500000 [00:08<00:06, 33314.32it/s][A
2025-02-25T14:20:45.7704483Z 
2025-02-25T14:20:45.7704767Z Packets:   ██████████████████████████████████████████████                                  287836/500000 [00:08<00:06, 31560.32it/s][A
2025-02-25T14:20:45.7704922Z 
2025-02-25T14:20:45.7705215Z Packets:   ██████████████████████████████████████████████▌                                 291092/500000 [00:08<00:06, 31842.20it/s][A
2025-02-25T14:20:45.7705220Z 
2025-02-25T14:20:45.7705525Z Packets:   ███████████████████████████████████████████████                                 294500/500000 [00:08<00:06, 32492.78it/s][A
2025-02-25T14:20:45.7705530Z 
2025-02-25T14:20:45.7705822Z Packets:   ███████████████████████████████████████████████▋                                297961/500000 [00:08<00:06, 33113.61it/s][A
2025-02-25T14:20:45.7705826Z 
2025-02-25T14:20:45.7706129Z Packets:   ████████████████████████████████████████████████▏                               301364/500000 [00:08<00:05, 33382.77it/s][A
2025-02-25T14:20:45.7706155Z 
2025-02-25T14:20:45.7706455Z Packets:   ████████████████████████████████████████████████▊                               304806/500000 [00:09<00:05, 33690.11it/s][A
2025-02-25T14:20:45.7706478Z 
2025-02-25T14:20:45.7706766Z Packets:   █████████████████████████████████████████████████▎                              308190/500000 [00:09<00:05, 33733.45it/s][A
2025-02-25T14:20:45.7706771Z 
2025-02-25T14:20:45.7707070Z Packets:   █████████████████████████████████████████████████▊                              311568/500000 [00:09<00:05, 33345.09it/s][A
2025-02-25T14:20:45.7707074Z 
2025-02-25T14:20:45.7707361Z Packets:   ██████████████████████████████████████████████████▍                             315038/500000 [00:09<00:05, 33744.93it/s][A
2025-02-25T14:20:45.7707379Z 
2025-02-25T14:20:45.7707671Z Packets:   ██████████████████████████████████████████████████▉                             318501/500000 [00:09<00:05, 34006.67it/s][A
2025-02-25T14:20:45.7707676Z 
2025-02-25T14:20:45.7708093Z Packets:   ███████████████████████████████████████████████████▌                            321904/500000 [00:09<00:05, 33049.35it/s][A
2025-02-25T14:20:45.7708114Z 
2025-02-25T14:20:45.7708406Z Packets:   ████████████████████████████████████████████████████                            325333/500000 [00:09<00:05, 33410.57it/s][A
2025-02-25T14:20:45.7708410Z 
2025-02-25T14:20:45.7708719Z Packets:   ████████████████████████████████████████████████████▌                           328781/500000 [00:09<00:05, 33723.53it/s][A
2025-02-25T14:20:45.7708724Z 
2025-02-25T14:20:45.7709028Z Packets:   █████████████████████████████████████████████████████▏                          332236/500000 [00:09<00:04, 33967.43it/s][A
2025-02-25T14:20:45.7709033Z 
2025-02-25T14:20:45.7709326Z Packets:   █████████████████████████████████████████████████████▋                          335746/500000 [00:09<00:04, 34300.52it/s][A
2025-02-25T14:20:45.7709331Z 
2025-02-25T14:20:45.7709635Z Packets:   ██████████████████████████████████████████████████████▎                         339203/500000 [00:10<00:04, 34380.30it/s][A
2025-02-25T14:20:45.7709653Z 
2025-02-25T14:20:45.7710049Z Packets:   ██████████████████████████████████████████████████████▊                         342713/500000 [00:10<00:04, 34592.69it/s][A
2025-02-25T14:20:45.7710065Z 
2025-02-25T14:20:45.7710368Z Packets:   ███████████████████████████████████████████████████████▍                        346184/500000 [00:10<00:04, 34625.07it/s][A
2025-02-25T14:20:45.7710373Z 
2025-02-25T14:20:45.7710959Z Packets:   ███████████████████████████████████████████████████████▉                        349648/500000 [00:10<00:04, 34618.38it/s][A
2025-02-25T14:20:45.7710966Z 
2025-02-25T14:20:45.7711272Z Packets:   ████████████████████████████████████████████████████████▌                       353133/500000 [00:10<00:04, 34686.05it/s][A
2025-02-25T14:20:45.7711278Z 
2025-02-25T14:20:45.7711603Z Packets:   █████████████████████████████████████████████████████████                       356603/500000 [00:10<00:04, 33295.00it/s][A
2025-02-25T14:20:45.7711631Z 
2025-02-25T14:20:45.7711945Z Packets:   █████████████████████████████████████████████████████████▌                      360102/500000 [00:10<00:04, 33788.08it/s][A
2025-02-25T14:20:45.7711970Z 
2025-02-25T14:20:45.7712275Z Packets:   ██████████████████████████████████████████████████████████▏                     363494/500000 [00:10<00:04, 33825.99it/s][A
2025-02-25T14:20:45.7712280Z 
2025-02-25T14:20:45.7712601Z Packets:   ██████████████████████████████████████████████████████████▋                     366980/500000 [00:10<00:03, 34130.20it/s][A
2025-02-25T14:20:45.7712606Z 
2025-02-25T14:20:45.7712918Z Packets:   ███████████████████████████████████████████████████████████▎                    370465/500000 [00:10<00:03, 34343.60it/s][A
2025-02-25T14:20:45.7712923Z 
2025-02-25T14:20:45.7713221Z Packets:   ███████████████████████████████████████████████████████████▊                    373904/500000 [00:11<00:03, 34260.34it/s][A
2025-02-25T14:20:45.7713393Z 
2025-02-25T14:20:45.7713718Z Packets:   ████████████████████████████████████████████████████████████▍                   377361/500000 [00:11<00:03, 34351.13it/s][A
2025-02-25T14:20:45.7713742Z 
2025-02-25T14:20:45.7714054Z Packets:   ████████████████████████████████████████████████████████████▉                   380799/500000 [00:11<00:03, 34211.09it/s][A
2025-02-25T14:20:45.7714082Z 
2025-02-25T14:20:45.7714389Z Packets:   █████████████████████████████████████████████████████████████▍                  384245/500000 [00:11<00:03, 34280.17it/s][A
2025-02-25T14:20:45.7714394Z 
2025-02-25T14:20:45.7714708Z Packets:   ██████████████████████████████████████████████████████████████                  387702/500000 [00:11<00:03, 34365.87it/s][A
2025-02-25T14:20:45.7714713Z 
2025-02-25T14:20:45.7715016Z Packets:   ██████████████████████████████████████████████████████████████▌                 391140/500000 [00:11<00:03, 33435.12it/s][A
2025-02-25T14:20:45.7715021Z 
2025-02-25T14:20:45.7715360Z Packets:   ███████████████████████████████████████████████████████████████▏                394631/500000 [00:11<00:03, 33865.86it/s][A
2025-02-25T14:20:45.7715487Z 
2025-02-25T14:20:45.7715807Z Packets:   ███████████████████████████████████████████████████████████████▋                398130/500000 [00:11<00:02, 34193.99it/s][A
2025-02-25T14:20:45.7715812Z 
2025-02-25T14:20:45.7716128Z Packets:   ████████████████████████████████████████████████████████████████▏               401554/500000 [00:11<00:02, 34069.36it/s][A
2025-02-25T14:20:45.7716133Z 
2025-02-25T14:20:45.7716451Z Packets:   ████████████████████████████████████████████████████████████████▊               405028/500000 [00:11<00:02, 34266.85it/s][A
2025-02-25T14:20:45.7716456Z 
2025-02-25T14:20:45.7716772Z Packets:   █████████████████████████████████████████████████████████████████▎              408457/500000 [00:12<00:02, 34016.22it/s][A
2025-02-25T14:20:45.7716791Z 
2025-02-25T14:20:45.7717097Z Packets:   █████████████████████████████████████████████████████████████████▉              411898/500000 [00:12<00:02, 34131.88it/s][A
2025-02-25T14:20:45.7717220Z 
2025-02-25T14:20:45.7717553Z Packets:   ██████████████████████████████████████████████████████████████████▍             415313/500000 [00:12<00:02, 34064.46it/s][A
2025-02-25T14:20:45.7717558Z 
2025-02-25T14:20:45.7717864Z Packets:   ██████████████████████████████████████████████████████████████████▉             418724/500000 [00:12<00:02, 34077.17it/s][A
2025-02-25T14:20:45.7717869Z 
2025-02-25T14:20:45.7718189Z Packets:   ███████████████████████████████████████████████████████████████████▌            422147/500000 [00:12<00:02, 34121.60it/s][A
2025-02-25T14:20:45.7718193Z 
2025-02-25T14:20:45.7718521Z Packets:   ████████████████████████████████████████████████████████████████████            425560/500000 [00:12<00:02, 33100.22it/s][A
2025-02-25T14:20:45.7718526Z 
2025-02-25T14:20:45.7718871Z Packets:   ████████████████████████████████████████████████████████████████████▋           428950/500000 [00:12<00:02, 33330.39it/s][A
2025-02-25T14:20:45.7718916Z 
2025-02-25T14:20:45.7719512Z Packets:   █████████████████████████████████████████████████████████████████████▏          432382/500000 [00:12<00:02, 33621.32it/s][A
2025-02-25T14:20:45.7719679Z 
2025-02-25T14:20:45.7720120Z Packets:   █████████████████████████████████████████████████████████████████████▋          435802/500000 [00:12<00:01, 33792.09it/s][A
2025-02-25T14:20:45.7720141Z 
2025-02-25T14:20:45.7720458Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439185/500000 [00:13<00:01, 33771.21it/s][A
2025-02-25T14:20:45.7720463Z 
2025-02-25T14:20:45.7720999Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442612/500000 [00:13<00:01, 33918.51it/s][A
2025-02-25T14:20:45.7721006Z 
2025-02-25T14:20:45.7721326Z Packets:   ███████████████████████████████████████████████████████████████████████▎        446006/500000 [00:13<00:01, 33768.59it/s][A
2025-02-25T14:20:45.7721504Z 
2025-02-25T14:20:45.7721839Z Packets:   ███████████████████████████████████████████████████████████████████████▉        449420/500000 [00:13<00:01, 33877.62it/s][A
2025-02-25T14:20:45.7721872Z 
2025-02-25T14:20:45.7722204Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452891/500000 [00:13<00:01, 34125.34it/s][A
2025-02-25T14:20:45.7722209Z 
2025-02-25T14:20:45.7722520Z Packets:   █████████████████████████████████████████████████████████████████████████       456305/500000 [00:13<00:01, 33894.02it/s][A
2025-02-25T14:20:45.7722525Z 
2025-02-25T14:20:45.7722849Z Packets:   █████████████████████████████████████████████████████████████████████████▌      459696/500000 [00:13<00:01, 31955.63it/s][A
2025-02-25T14:20:45.7722854Z 
2025-02-25T14:20:45.7723176Z Packets:   ██████████████████████████████████████████████████████████████████████████      462914/500000 [00:13<00:01, 31721.01it/s][A
2025-02-25T14:20:45.7723181Z 
2025-02-25T14:20:45.7723519Z Packets:   ██████████████████████████████████████████████████████████████████████████▌     466106/500000 [00:13<00:01, 31777.69it/s][A
2025-02-25T14:20:45.7723661Z 
2025-02-25T14:20:45.7723990Z Packets:   ███████████████████████████████████████████████████████████████████████████     469295/500000 [00:13<00:00, 31572.20it/s][A
2025-02-25T14:20:45.7723995Z 
2025-02-25T14:20:45.7724313Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    472460/500000 [00:14<00:00, 31210.62it/s][A
2025-02-25T14:20:45.7724332Z 
2025-02-25T14:20:45.7724647Z Packets:   ████████████████████████████████████████████████████████████████████████████    475587/500000 [00:14<00:00, 31029.78it/s][A
2025-02-25T14:20:45.7724652Z 
2025-02-25T14:20:45.7724978Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478694/500000 [00:14<00:00, 30279.61it/s][A
2025-02-25T14:20:45.7724983Z 
2025-02-25T14:20:45.7725297Z Packets:   █████████████████████████████████████████████████████████████████████████████   481727/500000 [00:14<00:00, 29899.26it/s][A
2025-02-25T14:20:45.7725322Z 
2025-02-25T14:20:45.7725677Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  484721/500000 [00:14<00:00, 29736.64it/s][A
2025-02-25T14:20:45.7725682Z 
2025-02-25T14:20:45.7726025Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487938/500000 [00:14<00:00, 30444.69it/s][A
2025-02-25T14:20:45.7726030Z 
2025-02-25T14:20:45.7726344Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 490986/500000 [00:14<00:00, 30232.71it/s][A
2025-02-25T14:20:45.7726348Z 
2025-02-25T14:20:45.7726687Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494311/500000 [00:14<00:00, 31120.73it/s][A
2025-02-25T14:20:45.7726692Z 
2025-02-25T14:20:45.7727020Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋497667/500000 [00:14<00:00, 31842.26it/s][A
2025-02-25T14:20:45.7727327Z Iterations:                                                                                17/? [06:42<00:00,  9.76s/it]
2025-02-25T14:20:45.7727354Z 
2025-02-25T14:20:45.7727707Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 31842.26it/s][A
2025-02-25T14:20:45.7727882Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7728076Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-25T14:20:45.7728439Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-25T14:20:45.7728832Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-25T14:20:45.7729286Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-25T14:20:45.7729813Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7730166Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7730286Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7730393Z 	Starting iteration 1 of 5
2025-02-25T14:20:45.7730662Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7730820Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-25T14:20:45.7730919Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-25T14:20:45.7731038Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7731042Z 
2025-02-25T14:20:45.7731158Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7731253Z 	Plasma stratification:
2025-02-25T14:20:45.7731377Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7731497Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-25T14:20:45.7731608Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-25T14:20:45.7731704Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-25T14:20:45.7731802Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-25T14:20:45.7731894Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-25T14:20:45.7731898Z 
2025-02-25T14:20:45.7732015Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7732118Z 	Current t_inner = 9974.969 K
2025-02-25T14:20:45.7732238Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-25T14:20:45.7732246Z 
2025-02-25T14:20:45.7732363Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7732458Z 	Starting iteration 2 of 5
2025-02-25T14:20:45.7732578Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7732669Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-25T14:20:45.7732775Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-25T14:20:45.7733033Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7733038Z 
2025-02-25T14:20:45.7733178Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7733274Z 	Plasma stratification:
2025-02-25T14:20:45.7733406Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7733536Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7733635Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-25T14:20:45.7733746Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-25T14:20:45.7733833Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-25T14:20:45.7733940Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-25T14:20:45.7733945Z 
2025-02-25T14:20:45.7734052Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7734160Z 	Current t_inner = 10736.790 K
2025-02-25T14:20:45.7734283Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-25T14:20:45.7734287Z 
2025-02-25T14:20:45.7734407Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7734523Z 	Starting iteration 3 of 5
2025-02-25T14:20:45.7734642Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7734774Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-25T14:20:45.7734876Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-25T14:20:45.7734986Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7734991Z 
2025-02-25T14:20:45.7735216Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-25T14:20:45.7735337Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7735433Z 	Plasma stratification:
2025-02-25T14:20:45.7735549Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7735674Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7735777Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-25T14:20:45.7735886Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-25T14:20:45.7735984Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-25T14:20:45.7736103Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-25T14:20:45.7736108Z 
2025-02-25T14:20:45.7736358Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7736463Z 	Current t_inner = 10718.574 K
2025-02-25T14:20:45.7736582Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-25T14:20:45.7736587Z 
2025-02-25T14:20:45.7736717Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7736817Z 	Starting iteration 4 of 5
2025-02-25T14:20:45.7736944Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7737054Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-25T14:20:45.7737147Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-25T14:20:45.7737256Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7737260Z 
2025-02-25T14:20:45.7737473Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-25T14:20:45.7737599Z INFO     tardis.simulation.base:base.py:653 
2025-02-25T14:20:45.7737704Z 	Plasma stratification:
2025-02-25T14:20:45.7737824Z INFO     tardis.simulation.base:base.py:654 
2025-02-25T14:20:45.7737946Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-25T14:20:45.7738055Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-25T14:20:45.7738171Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-25T14:20:45.7738353Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-25T14:20:45.7738524Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-25T14:20:45.7738530Z 
2025-02-25T14:20:45.7738718Z INFO     tardis.simulation.base:base.py:656 
2025-02-25T14:20:45.7738896Z 	Current t_inner = 10696.150 K
2025-02-25T14:20:45.7739100Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-25T14:20:45.7739107Z 
2025-02-25T14:20:45.7739269Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7739381Z 	Simulation finished in 4 iterations 
2025-02-25T14:20:45.7739486Z 	Simulation took 13.34 s
2025-02-25T14:20:45.7739490Z 
2025-02-25T14:20:45.7739740Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7739852Z 	Starting iteration 5 of 5
2025-02-25T14:20:45.7739981Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7740080Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-25T14:20:45.7740192Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-25T14:20:45.7740291Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7740493Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-25T14:20:45.7740498Z 
2025-02-25T14:20:45.7740934Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4adca0>
2025-02-25T14:20:45.7741159Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7741165Z 
2025-02-25T14:20:45.7741266Z     def test_spectrum(self, simulation):
2025-02-25T14:20:45.7741466Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-25T14:20:45.7741596Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7741715Z     
2025-02-25T14:20:45.7741853Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7741936Z     
2025-02-25T14:20:45.7742054Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7742227Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-25T14:20:45.7742319Z             luminosity,
2025-02-25T14:20:45.7742399Z         )
2025-02-25T14:20:45.7742404Z 
2025-02-25T14:20:45.7742526Z tardis/tests/test_tardis_full.py:81: 
2025-02-25T14:20:45.7742646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7743002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7743107Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7743226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7743231Z 
2025-02-25T14:20:45.7743720Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef14a5c0>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-25T14:20:45.7743980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7744242Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7744248Z 
2025-02-25T14:20:45.7744330Z     @wraps(func)
2025-02-25T14:20:45.7744423Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7744524Z         with self._recreate_cm():
2025-02-25T14:20:45.7744618Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7744716Z E           AssertionError: 
2025-02-25T14:20:45.7744836Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7744920Z E           
2025-02-25T14:20:45.7745026Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:20:45.7745140Z E           Max absolute difference: 1.38672909e+39
2025-02-25T14:20:45.7745259Z E           Max relative difference: 5.25284451
2025-02-25T14:20:45.7745425Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7745526Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7745695Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7745810Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7745815Z 
2025-02-25T14:20:45.7746022Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7746225Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-25T14:20:45.7746229Z 
2025-02-25T14:20:45.7746448Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f8a1c4adee0>
2025-02-25T14:20:45.7746665Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0c1e71a0>
2025-02-25T14:20:45.7746669Z 
2025-02-25T14:20:45.7746788Z     def test_virtual_spectrum(self, simulation):
2025-02-25T14:20:45.7747116Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-25T14:20:45.7747247Z         expected = self.get_expected_data(key)
2025-02-25T14:20:45.7747321Z     
2025-02-25T14:20:45.7747442Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7747513Z     
2025-02-25T14:20:45.7747615Z >       assert_quantity_allclose(
2025-02-25T14:20:45.7747796Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-25T14:20:45.7747894Z             luminosity,
2025-02-25T14:20:45.7747968Z         )
2025-02-25T14:20:45.7747971Z 
2025-02-25T14:20:45.7748077Z tardis/tests/test_tardis_full.py:92: 
2025-02-25T14:20:45.7748191Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7748535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7748644Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7748766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7748776Z 
2025-02-25T14:20:45.7749263Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2ae5c0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-25T14:20:45.7749376Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7749641Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7749646Z 
2025-02-25T14:20:45.7749736Z     @wraps(func)
2025-02-25T14:20:45.7749824Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7749926Z         with self._recreate_cm():
2025-02-25T14:20:45.7750015Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7750119Z E           AssertionError: 
2025-02-25T14:20:45.7750232Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7750319Z E           
2025-02-25T14:20:45.7750432Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:20:45.7750674Z E           Max absolute difference: 5.26760031e+38
2025-02-25T14:20:45.7750928Z E           Max relative difference: 35562.41947434
2025-02-25T14:20:45.7751096Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7751184Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7751343Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7751441Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7751446Z 
2025-02-25T14:20:45.7751648Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7751922Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-25T14:20:45.7751927Z 
2025-02-25T14:20:45.7752251Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4ae8d0>
2025-02-25T14:20:45.7752504Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7752719Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-25T14:20:45.7752736Z 
2025-02-25T14:20:45.7752871Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7752997Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7753083Z         j_blue_estimator = (
2025-02-25T14:20:45.7753319Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7753397Z         )
2025-02-25T14:20:45.7753559Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7753678Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7753683Z 
2025-02-25T14:20:45.7753831Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7753944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7754086Z 
2025-02-25T14:20:45.7754373Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2ad580>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754476Z        [0., 0., .....,
2025-02-25T14:20:45.7754558Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754651Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7754734Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7754990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7754995Z 
2025-02-25T14:20:45.7755081Z     @wraps(func)
2025-02-25T14:20:45.7755179Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7755270Z         with self._recreate_cm():
2025-02-25T14:20:45.7755388Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7755495Z E           AssertionError: 
2025-02-25T14:20:45.7755606Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7755705Z E           
2025-02-25T14:20:45.7755832Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.7755944Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.7756045Z E           Max relative difference: 7.72237896
2025-02-25T14:20:45.7756153Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756242Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756345Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7756454Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756559Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7756667Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7756671Z 
2025-02-25T14:20:45.7756883Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7757123Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-25T14:20:45.7757138Z 
2025-02-25T14:20:45.7757476Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4aef30>
2025-02-25T14:20:45.7757988Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7758302Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-25T14:20:45.7758325Z 
2025-02-25T14:20:45.7758515Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7758701Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7758911Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7759085Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7759186Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7759321Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7759325Z 
2025-02-25T14:20:45.7759459Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7759598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7759948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7760055Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7760188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7760192Z 
2025-02-25T14:20:45.7760855Z args = (<function assert_allclose.<locals>.compare at 0x7f89ef6f93a0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:20:45.7760978Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7761228Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7761233Z 
2025-02-25T14:20:45.7761319Z     @wraps(func)
2025-02-25T14:20:45.7761415Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7761698Z         with self._recreate_cm():
2025-02-25T14:20:45.7761808Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7761919Z E           AssertionError: 
2025-02-25T14:20:45.7762045Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7762125Z E           
2025-02-25T14:20:45.7762241Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.7762348Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.7762462Z E           Max relative difference: 4.0036592
2025-02-25T14:20:45.7762626Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7762728Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7762877Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7762970Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7762974Z 
2025-02-25T14:20:45.7763204Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7763453Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-25T14:20:45.7763464Z 
2025-02-25T14:20:45.7763805Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af680>
2025-02-25T14:20:45.7764006Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0aa8efc0>
2025-02-25T14:20:45.7764225Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-25T14:20:45.7764231Z 
2025-02-25T14:20:45.7764391Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7764501Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7764707Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7764881Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7765006Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7765149Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7765300Z 
2025-02-25T14:20:45.7765450Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7765560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7765903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7766009Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7766131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7766136Z 
2025-02-25T14:20:45.7766625Z args = (<function assert_allclose.<locals>.compare at 0x7f8a1b13d6c0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-25T14:20:45.7766736Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-25T14:20:45.7767007Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7767017Z 
2025-02-25T14:20:45.7767111Z     @wraps(func)
2025-02-25T14:20:45.7767197Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7767298Z         with self._recreate_cm():
2025-02-25T14:20:45.7767390Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7767493Z E           AssertionError: 
2025-02-25T14:20:45.7767601Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7767690Z E           
2025-02-25T14:20:45.7767798Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7767919Z E           Max absolute difference: 5.00661745e+37
2025-02-25T14:20:45.7768023Z E           Max relative difference: 17.51202125
2025-02-25T14:20:45.7768197Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:20:45.7768291Z E                  2.279436e+31, 2.243943e+31])
2025-02-25T14:20:45.7768563Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:20:45.7768668Z E                  2.292907e+31, 2.257206e+31])
2025-02-25T14:20:45.7768680Z 
2025-02-25T14:20:45.7768895Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7769135Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-25T14:20:45.7769139Z 
2025-02-25T14:20:45.7769459Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af0e0>
2025-02-25T14:20:45.7769676Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7769885Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-25T14:20:45.7769902Z 
2025-02-25T14:20:45.7770037Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7770171Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7770260Z         j_blue_estimator = (
2025-02-25T14:20:45.7770652Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7770787Z         )
2025-02-25T14:20:45.7770958Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7771090Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7771094Z 
2025-02-25T14:20:45.7771240Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7771353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7771370Z 
2025-02-25T14:20:45.7771644Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15bc0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7771736Z        [0., 0., .....,
2025-02-25T14:20:45.7771819Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7771911Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7771994Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7772258Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7772405Z 
2025-02-25T14:20:45.7772486Z     @wraps(func)
2025-02-25T14:20:45.7772584Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7772675Z         with self._recreate_cm():
2025-02-25T14:20:45.7772781Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7772886Z E           AssertionError: 
2025-02-25T14:20:45.7773001Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7773089Z E           
2025-02-25T14:20:45.7773202Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.7773319Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.7773422Z E           Max relative difference: 3.25828651
2025-02-25T14:20:45.7773539Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773629Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773735Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7773836Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7773948Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7774048Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7774053Z 
2025-02-25T14:20:45.7774260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7774488Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-25T14:20:45.7774492Z 
2025-02-25T14:20:45.7774812Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af860>
2025-02-25T14:20:45.7775018Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7775192Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-25T14:20:45.7775212Z 
2025-02-25T14:20:45.7775322Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7775664Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7775865Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7776048Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7776154Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7776288Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7776293Z 
2025-02-25T14:20:45.7776425Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7776555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7776889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7776997Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7777120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7777125Z 
2025-02-25T14:20:45.7777604Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15f80>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:20:45.7777729Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7777970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7777975Z 
2025-02-25T14:20:45.7778064Z     @wraps(func)
2025-02-25T14:20:45.7778158Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7778248Z         with self._recreate_cm():
2025-02-25T14:20:45.7778347Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7778440Z E           AssertionError: 
2025-02-25T14:20:45.7778556Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7778632Z E           
2025-02-25T14:20:45.7778748Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.7778857Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.7778984Z E           Max relative difference: 1.86186015
2025-02-25T14:20:45.7779237Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7779338Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7779484Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7779580Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7779584Z 
2025-02-25T14:20:45.7779806Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7780042Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-25T14:20:45.7780047Z 
2025-02-25T14:20:45.7780380Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4afe60>
2025-02-25T14:20:45.7780684Z simulation = <tardis.simulation.base.Simulation object at 0x7f8a0e69a870>
2025-02-25T14:20:45.7780909Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-25T14:20:45.7780914Z 
2025-02-25T14:20:45.7781075Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7781184Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7781389Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7781551Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7781669Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7781790Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7781794Z 
2025-02-25T14:20:45.7781946Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7782060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7782409Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7782653Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7782763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7782775Z 
2025-02-25T14:20:45.7783247Z args = (<function assert_allclose.<locals>.compare at 0x7f8a19d15d00>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-25T14:20:45.7783351Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-25T14:20:45.7783601Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7783606Z 
2025-02-25T14:20:45.7783682Z     @wraps(func)
2025-02-25T14:20:45.7783779Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7783888Z         with self._recreate_cm():
2025-02-25T14:20:45.7784054Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7784230Z E           AssertionError: 
2025-02-25T14:20:45.7784415Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7784566Z E           
2025-02-25T14:20:45.7784738Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7784942Z E           Max absolute difference: 2.90101642e+37
2025-02-25T14:20:45.7785046Z E           Max relative difference: 0.98973757
2025-02-25T14:20:45.7785214Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:20:45.7785306Z E                  1.330497e+31, 1.294462e+31])
2025-02-25T14:20:45.7785469Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:20:45.7785558Z E                  1.375141e+31, 1.337928e+31])
2025-02-25T14:20:45.7785562Z 
2025-02-25T14:20:45.7785764Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7786002Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-25T14:20:45.7786007Z 
2025-02-25T14:20:45.7786326Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af3b0>
2025-02-25T14:20:45.7786693Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7786892Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-25T14:20:45.7786909Z 
2025-02-25T14:20:45.7787047Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7787171Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7787258Z         j_blue_estimator = (
2025-02-25T14:20:45.7787496Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7787572Z         )
2025-02-25T14:20:45.7787744Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7787865Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7787869Z 
2025-02-25T14:20:45.7788011Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7788131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7788154Z 
2025-02-25T14:20:45.7788427Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0690a200>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788517Z        [0., 0., .....,
2025-02-25T14:20:45.7788604Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788697Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7788779Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7789039Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7789044Z 
2025-02-25T14:20:45.7789125Z     @wraps(func)
2025-02-25T14:20:45.7789235Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7789329Z         with self._recreate_cm():
2025-02-25T14:20:45.7789433Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7789538Z E           AssertionError: 
2025-02-25T14:20:45.7789757Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7789842Z E           
2025-02-25T14:20:45.7789949Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.7790062Z E           Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.7790162Z E           Max relative difference: 3.25828651
2025-02-25T14:20:45.7790266Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790354Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790460Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7790707Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790811Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7790908Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7790912Z 
2025-02-25T14:20:45.7791116Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7791351Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-25T14:20:45.7791369Z 
2025-02-25T14:20:45.7791686Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4afa70>
2025-02-25T14:20:45.7791911Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7792087Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-25T14:20:45.7792107Z 
2025-02-25T14:20:45.7792218Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7792349Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7792549Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7792723Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7792829Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7792969Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7792973Z 
2025-02-25T14:20:45.7793112Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7793241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7793734Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7793845Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7793978Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7793982Z 
2025-02-25T14:20:45.7794456Z args = (<function assert_allclose.<locals>.compare at 0x7f89f0e50680>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-25T14:20:45.7794576Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7794823Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7794828Z 
2025-02-25T14:20:45.7794928Z     @wraps(func)
2025-02-25T14:20:45.7795034Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7795127Z         with self._recreate_cm():
2025-02-25T14:20:45.7795236Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7795331Z E           AssertionError: 
2025-02-25T14:20:45.7795450Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7795523Z E           
2025-02-25T14:20:45.7795634Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.7795735Z E           Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.7795842Z E           Max relative difference: 1.86186015
2025-02-25T14:20:45.7795996Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7796094Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7796244Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7796344Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7796477Z 
2025-02-25T14:20:45.7796703Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7796952Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-25T14:20:45.7796956Z 
2025-02-25T14:20:45.7797296Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4e1370>
2025-02-25T14:20:45.7797495Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f0581250>
2025-02-25T14:20:45.7797718Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-25T14:20:45.7797722Z 
2025-02-25T14:20:45.7797887Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7798004Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7798214Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7798377Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7798510Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7798636Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7798647Z 
2025-02-25T14:20:45.7798804Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7798921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7799288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7799394Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7799513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7799521Z 
2025-02-25T14:20:45.7800001Z args = (<function assert_allclose.<locals>.compare at 0x7f89f1f7ca40>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-25T14:20:45.7800109Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-25T14:20:45.7800375Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7800476Z 
2025-02-25T14:20:45.7800751Z     @wraps(func)
2025-02-25T14:20:45.7800867Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7800983Z         with self._recreate_cm():
2025-02-25T14:20:45.7801079Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7801179Z E           AssertionError: 
2025-02-25T14:20:45.7801298Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7801395Z E           
2025-02-25T14:20:45.7801499Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7801624Z E           Max absolute difference: 2.99183385e+37
2025-02-25T14:20:45.7801721Z E           Max relative difference: 0.98992197
2025-02-25T14:20:45.7801891Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:20:45.7801977Z E                  1.260980e+31, 1.222587e+31])
2025-02-25T14:20:45.7802156Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:20:45.7802269Z E                  1.193005e+31, 1.164854e+31])
2025-02-25T14:20:45.7802274Z 
2025-02-25T14:20:45.7802486Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7802659Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7802664Z 
2025-02-25T14:20:45.7802667Z 
2025-02-25T14:20:45.7803058Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:16<00:00, 104720.19it/s][A
2025-02-25T14:20:45.7803489Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-25T14:20:45.7803499Z 
2025-02-25T14:20:45.7804107Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af2c0>
2025-02-25T14:20:45.7804342Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7804724Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-25T14:20:45.7804741Z 
2025-02-25T14:20:45.7804884Z     def test_j_blue_estimators(self, simulation, request):
2025-02-25T14:20:45.7805009Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7805102Z         j_blue_estimator = (
2025-02-25T14:20:45.7805349Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-25T14:20:45.7805423Z         )
2025-02-25T14:20:45.7805585Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-25T14:20:45.7805722Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-25T14:20:45.7805726Z 
2025-02-25T14:20:45.7805866Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-25T14:20:45.7805999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7806003Z 
2025-02-25T14:20:45.7806282Z args = (<function assert_allclose.<locals>.compare at 0x7f89e159bce0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806508Z        [0., 0., .....,
2025-02-25T14:20:45.7806592Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806710Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7806792Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-25T14:20:45.7807054Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7807060Z 
2025-02-25T14:20:45.7807152Z     @wraps(func)
2025-02-25T14:20:45.7807242Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7807347Z         with self._recreate_cm():
2025-02-25T14:20:45.7807439Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7807538Z E           AssertionError: 
2025-02-25T14:20:45.7807654Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7807743Z E           
2025-02-25T14:20:45.7807861Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.7807995Z E           Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.7808106Z E           Max relative difference: 7.72237896
2025-02-25T14:20:45.7808227Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808331Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808428Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7808535Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808631Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.7808748Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.7808752Z 
2025-02-25T14:20:45.7808957Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7809197Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-25T14:20:45.7809201Z 
2025-02-25T14:20:45.7809538Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4af9b0>
2025-02-25T14:20:45.7809743Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7809939Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-25T14:20:45.7809945Z 
2025-02-25T14:20:45.7810061Z     def test_spectrum(self, simulation, request):
2025-02-25T14:20:45.7810185Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7810390Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-25T14:20:45.7810772Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7810885Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7811021Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7811025Z 
2025-02-25T14:20:45.7811174Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-25T14:20:45.7811285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7811787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7811891Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7812021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7812026Z 
2025-02-25T14:20:45.7812495Z args = (<function assert_allclose.<locals>.compare at 0x7f89ed2aff60>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-25T14:20:45.7812625Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.7812886Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7812891Z 
2025-02-25T14:20:45.7812969Z     @wraps(func)
2025-02-25T14:20:45.7813078Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7813173Z         with self._recreate_cm():
2025-02-25T14:20:45.7813284Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7813374Z E           AssertionError: 
2025-02-25T14:20:45.7813619Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7813704Z E           
2025-02-25T14:20:45.7813823Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.7813939Z E           Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.7814043Z E           Max relative difference: 4.0036592
2025-02-25T14:20:45.7814207Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7814303Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7814466Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.7814554Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.7814560Z 
2025-02-25T14:20:45.7814773Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7815017Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-25T14:20:45.7815027Z 
2025-02-25T14:20:45.7815356Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f8a1c4affb0>
2025-02-25T14:20:45.7815566Z simulation = <tardis.simulation.base.Simulation object at 0x7f89f2f8f3e0>
2025-02-25T14:20:45.7815774Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-25T14:20:45.7815779Z 
2025-02-25T14:20:45.7815934Z     def test_spectrum_integrated(self, simulation, request):
2025-02-25T14:20:45.7816050Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7816267Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-25T14:20:45.7816439Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-25T14:20:45.7816562Z         expected = u.Quantity(expected, "erg /s")
2025-02-25T14:20:45.7816702Z >       assert_quantity_allclose(luminosity, expected)
2025-02-25T14:20:45.7816715Z 
2025-02-25T14:20:45.7816853Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-25T14:20:45.7816997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7817335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-25T14:20:45.7817455Z     np.testing.assert_allclose(
2025-02-25T14:20:45.7817568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7817573Z 
2025-02-25T14:20:45.7818056Z args = (<function assert_allclose.<locals>.compare at 0x7f8a1a0cff60>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-25T14:20:45.7818171Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-25T14:20:45.7818416Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7818546Z 
2025-02-25T14:20:45.7818642Z     @wraps(func)
2025-02-25T14:20:45.7818733Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7818839Z         with self._recreate_cm():
2025-02-25T14:20:45.7818937Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7819037Z E           AssertionError: 
2025-02-25T14:20:45.7819144Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7832079Z E           
2025-02-25T14:20:45.7832236Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.7832349Z E           Max absolute difference: 5.0153284e+37
2025-02-25T14:20:45.7832462Z E           Max relative difference: 4.90769503
2025-02-25T14:20:45.7832652Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:20:45.7832821Z E                  2.088676e+31, 2.060278e+31])
2025-02-25T14:20:45.7833080Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:20:45.7833248Z E                  2.124305e+31, 2.101081e+31])
2025-02-25T14:20:45.7833255Z 
2025-02-25T14:20:45.7833820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7834002Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-25T14:20:45.7834007Z 
2025-02-25T14:20:45.7834729Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7835009Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a08e29be0>
2025-02-25T14:20:45.7835384Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7835390Z 
2025-02-25T14:20:45.7835489Z     def test_montecarlo_main_loop(
2025-02-25T14:20:45.7835612Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7835697Z         regression_data,
2025-02-25T14:20:45.7835811Z         atomic_dataset,
2025-02-25T14:20:45.7835897Z     ):
2025-02-25T14:20:45.7836013Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7836185Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:20:45.7836285Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7836394Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7836494Z             virtual_packet_logging=False,
2025-02-25T14:20:45.7836607Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7836688Z         )
2025-02-25T14:20:45.7836839Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:20:45.7836951Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:20:45.7837043Z     
2025-02-25T14:20:45.7837193Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:20:45.7837299Z             montecarlo_main_loop_simulation
2025-02-25T14:20:45.7837389Z         )
2025-02-25T14:20:45.7837465Z     
2025-02-25T14:20:45.7837582Z         # Load compare data from refdata
2025-02-25T14:20:45.7837654Z     
2025-02-25T14:20:45.7837767Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7837904Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7837988Z         ]
2025-02-25T14:20:45.7838095Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7838245Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7838322Z         ]
2025-02-25T14:20:45.7838468Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7838633Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7838706Z         ]
2025-02-25T14:20:45.7838842Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7838975Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7839211Z         ]
2025-02-25T14:20:45.7839307Z         expected_hdf_store.close()
2025-02-25T14:20:45.7839544Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-25T14:20:45.7839723Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7839881Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7839979Z         actual_nu_bar_estimator = (
2025-02-25T14:20:45.7840145Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:20:45.7840230Z         )
2025-02-25T14:20:45.7840417Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:20:45.7840675Z     
2025-02-25T14:20:45.7840804Z         # Compare
2025-02-25T14:20:45.7840910Z >       npt.assert_allclose(
2025-02-25T14:20:45.7841072Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-25T14:20:45.7841158Z         )
2025-02-25T14:20:45.7841171Z 
2025-02-25T14:20:45.7841362Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-25T14:20:45.7841643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7841648Z 
2025-02-25T14:20:45.7842139Z args = (<function assert_allclose.<locals>.compare at 0x7f89eb1d5760>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-25T14:20:45.7842307Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-25T14:20:45.7842579Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-25T14:20:45.7842584Z 
2025-02-25T14:20:45.7842664Z     @wraps(func)
2025-02-25T14:20:45.7842772Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7842865Z         with self._recreate_cm():
2025-02-25T14:20:45.7842964Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7843056Z E           AssertionError: 
2025-02-25T14:20:45.7843193Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:20:45.7843270Z E           
2025-02-25T14:20:45.7843393Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.7843511Z E           Max absolute difference: 2.25821059e+25
2025-02-25T14:20:45.7843612Z E           Max relative difference: 0.00054426
2025-02-25T14:20:45.7843775Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:20:45.7843898Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:20:45.7844038Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:20:45.7844174Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:20:45.7844302Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:20:45.7844425Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:20:45.7844457Z 
2025-02-25T14:20:45.7844665Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7844851Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7845192Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7845658Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7845848Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7846080Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7846254Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7846356Z 	
2025-02-25T14:20:45.7846458Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7846567Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7846689Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7846850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7847111Z 	
2025-02-25T14:20:45.7847276Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7847462Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7847547Z 	
2025-02-25T14:20:45.7847658Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7847756Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7847860Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7847965Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7848129Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7848134Z 
2025-02-25T14:20:45.7848138Z 
2025-02-25T14:20:45.7848391Z Packets:                                                                                   10953/? [00:11<00:00, 989.44it/s][A
2025-02-25T14:20:45.7848397Z 
2025-02-25T14:20:45.7848625Z Packets:                                                                                   20858/? [00:11<00:00, 2238.80it/s][A
2025-02-25T14:20:45.7848638Z 
2025-02-25T14:20:45.7848882Z Packets:                                                                                   31317/? [00:11<00:00, 4068.38it/s][A
2025-02-25T14:20:45.7848997Z 
2025-02-25T14:20:45.7849222Z Packets:                                                                                   41548/? [00:11<00:00, 6514.54it/s][A
2025-02-25T14:20:45.7849239Z 
2025-02-25T14:20:45.7849459Z Packets:                                                                                   51776/? [00:11<00:00, 9793.25it/s][A
2025-02-25T14:20:45.7849465Z 
2025-02-25T14:20:45.7849702Z Packets:                                                                                   61878/? [00:11<00:00, 14004.12it/s][A
2025-02-25T14:20:45.7849708Z 
2025-02-25T14:20:45.7849929Z Packets:                                                                                   72493/? [00:11<00:00, 19750.13it/s][A
2025-02-25T14:20:45.7849934Z 
2025-02-25T14:20:45.7850166Z Packets:                                                                                   83169/? [00:11<00:00, 26867.22it/s][A
2025-02-25T14:20:45.7850184Z 
2025-02-25T14:20:45.7850414Z Packets:                                                                                   93996/? [00:11<00:00, 35384.05it/s][A
2025-02-25T14:20:45.7850743Z Iterations:                                                                                40/? [08:25<00:00,  5.87s/it]
2025-02-25T14:20:45.7850752Z 
2025-02-25T14:20:45.7851020Z Packets:                                                                                   104009/? [00:12<00:00, 35384.05it/s][A
2025-02-25T14:20:45.7851174Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7851700Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7851928Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7852049Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7852150Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7852239Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7852243Z 
2025-02-25T14:20:45.7852365Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7852486Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7852613Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7852713Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7852830Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7852926Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7853105Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-25T14:20:45.7853110Z 
2025-02-25T14:20:45.7853816Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7854245Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a10139bb0>
2025-02-25T14:20:45.7854621Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7854627Z 
2025-02-25T14:20:45.7854742Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-25T14:20:45.7854845Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7854947Z         regression_data,
2025-02-25T14:20:45.7855029Z         atomic_dataset,
2025-02-25T14:20:45.7855115Z     ):
2025-02-25T14:20:45.7855226Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7855420Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-25T14:20:45.7855496Z     
2025-02-25T14:20:45.7855655Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-25T14:20:45.7855760Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7855868Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7856096Z             virtual_packet_logging=True,
2025-02-25T14:20:45.7856214Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7856292Z         )
2025-02-25T14:20:45.7856439Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-25T14:20:45.7856562Z         montecarlo_main_loop_simulation.run_final()
2025-02-25T14:20:45.7856638Z     
2025-02-25T14:20:45.7856796Z         transport = montecarlo_main_loop_simulation.transport
2025-02-25T14:20:45.7856868Z     
2025-02-25T14:20:45.7857088Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-25T14:20:45.7857162Z     
2025-02-25T14:20:45.7857305Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-25T14:20:45.7857407Z             montecarlo_main_loop_simulation
2025-02-25T14:20:45.7857494Z         )
2025-02-25T14:20:45.7857565Z     
2025-02-25T14:20:45.7857689Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7857819Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7857922Z         ]
2025-02-25T14:20:45.7858036Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7858170Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7858263Z         ]
2025-02-25T14:20:45.7858392Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7858551Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7858624Z         ]
2025-02-25T14:20:45.7858760Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7858901Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7858993Z         ]
2025-02-25T14:20:45.7859115Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-25T14:20:45.7859271Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-25T14:20:45.7859371Z         ]
2025-02-25T14:20:45.7859500Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-25T14:20:45.7859672Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-25T14:20:45.7859752Z         ]
2025-02-25T14:20:45.7859847Z     
2025-02-25T14:20:45.7859963Z         transport_state = transport.transport_state
2025-02-25T14:20:45.7860051Z     
2025-02-25T14:20:45.7860228Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7860390Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7860648Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-25T14:20:45.7860781Z         actual_j_estimator = transport_state.j_estimator
2025-02-25T14:20:45.7860937Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-25T14:20:45.7861131Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-25T14:20:45.7861374Z     
2025-02-25T14:20:45.7861469Z         expected_hdf_store.close()
2025-02-25T14:20:45.7861567Z         # Compare
2025-02-25T14:20:45.7861669Z >       npt.assert_allclose(
2025-02-25T14:20:45.7861780Z             actual_nu_bar_estimator,
2025-02-25T14:20:45.7861871Z             expected_nu_bar_estimator,
2025-02-25T14:20:45.7861970Z             rtol=1e-12,
2025-02-25T14:20:45.7862048Z             atol=1e-15,
2025-02-25T14:20:45.7862132Z         )
2025-02-25T14:20:45.7862137Z 
2025-02-25T14:20:45.7862327Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-25T14:20:45.7862458Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7862463Z 
2025-02-25T14:20:45.7862921Z args = (<function assert_allclose.<locals>.compare at 0x7f8a08968b80>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-25T14:20:45.7863061Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-25T14:20:45.7863358Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-25T14:20:45.7863490Z 
2025-02-25T14:20:45.7863570Z     @wraps(func)
2025-02-25T14:20:45.7863671Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7863768Z         with self._recreate_cm():
2025-02-25T14:20:45.7863856Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7863948Z E           AssertionError: 
2025-02-25T14:20:45.7864067Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:20:45.7864148Z E           
2025-02-25T14:20:45.7864251Z E           Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.7864368Z E           Max absolute difference: 1.93283629e+25
2025-02-25T14:20:45.7864471Z E           Max relative difference: 0.00029148
2025-02-25T14:20:45.7864626Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:20:45.7864754Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:20:45.7864912Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:20:45.7865051Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:20:45.7865179Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:20:45.7865312Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:20:45.7865316Z 
2025-02-25T14:20:45.7865524Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7865697Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7865955Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7866411Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7866594Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7866836Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7867034Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7867111Z 	
2025-02-25T14:20:45.7867231Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7867319Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7867443Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7867615Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7867698Z 	
2025-02-25T14:20:45.7867856Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7868067Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7868138Z 	
2025-02-25T14:20:45.7868248Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:20:45.7868346Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:20:45.7868457Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7868582Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7868843Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7868848Z 
2025-02-25T14:20:45.7868859Z 
2025-02-25T14:20:45.7869119Z Packets:                                                                                   104456/? [00:14<00:00, 9941.34it/s] [A
2025-02-25T14:20:45.7869126Z 
2025-02-25T14:20:45.7869355Z Packets:                                                                                   111764/? [00:14<00:00, 11885.97it/s][A
2025-02-25T14:20:45.7869360Z 
2025-02-25T14:20:45.7869598Z Packets:                                                                                   117834/? [00:15<00:00, 13704.64it/s][A
2025-02-25T14:20:45.7869603Z 
2025-02-25T14:20:45.7869843Z Packets:                                                                                   122980/? [00:15<00:00, 15671.98it/s][A
2025-02-25T14:20:45.7869848Z 
2025-02-25T14:20:45.7870073Z Packets:                                                                                   127608/? [00:15<00:00, 17740.50it/s][A
2025-02-25T14:20:45.7870086Z 
2025-02-25T14:20:45.7870324Z Packets:                                                                                   131894/? [00:15<00:00, 19824.90it/s][A
2025-02-25T14:20:45.7870418Z 
2025-02-25T14:20:45.7870761Z Packets:                                                                                   135919/? [00:15<00:00, 21908.64it/s][A
2025-02-25T14:20:45.7870783Z 
2025-02-25T14:20:45.7871009Z Packets:                                                                                   139760/? [00:15<00:00, 24064.33it/s][A
2025-02-25T14:20:45.7871013Z 
2025-02-25T14:20:45.7871253Z Packets:                                                                                   143508/? [00:15<00:00, 26055.51it/s][A
2025-02-25T14:20:45.7871257Z 
2025-02-25T14:20:45.7871483Z Packets:                                                                                   147176/? [00:15<00:00, 27916.91it/s][A
2025-02-25T14:20:45.7871487Z 
2025-02-25T14:20:45.7871749Z Packets:                                                                                   150799/? [00:16<00:00, 29179.52it/s][A
2025-02-25T14:20:45.7871762Z 
2025-02-25T14:20:45.7872001Z Packets:                                                                                   154335/? [00:16<00:00, 30355.02it/s][A
2025-02-25T14:20:45.7872005Z 
2025-02-25T14:20:45.7872225Z Packets:                                                                                   157832/? [00:16<00:00, 30785.98it/s][A
2025-02-25T14:20:45.7872229Z 
2025-02-25T14:20:45.7872462Z Packets:                                                                                   161239/? [00:16<00:00, 31424.13it/s][A
2025-02-25T14:20:45.7872466Z 
2025-02-25T14:20:45.7872686Z Packets:                                                                                   164620/? [00:16<00:00, 31644.42it/s][A
2025-02-25T14:20:45.7872711Z 
2025-02-25T14:20:45.7872935Z Packets:                                                                                   168180/? [00:16<00:00, 32726.14it/s][A
2025-02-25T14:20:45.7872947Z 
2025-02-25T14:20:45.7873190Z Packets:                                                                                   171601/? [00:16<00:00, 33143.53it/s][A
2025-02-25T14:20:45.7873194Z 
2025-02-25T14:20:45.7873416Z Packets:                                                                                   175008/? [00:16<00:00, 33330.95it/s][A
2025-02-25T14:20:45.7873421Z 
2025-02-25T14:20:45.7873657Z Packets:                                                                                   178407/? [00:16<00:00, 33498.07it/s][A
2025-02-25T14:20:45.7873661Z 
2025-02-25T14:20:45.7873899Z Packets:                                                                                   181804/? [00:16<00:00, 33580.12it/s][A
2025-02-25T14:20:45.7873903Z 
2025-02-25T14:20:45.7874124Z Packets:                                                                                   185195/? [00:17<00:00, 33461.75it/s][A
2025-02-25T14:20:45.7874259Z 
2025-02-25T14:20:45.7874501Z Packets:                                                                                   188564/? [00:17<00:00, 33470.17it/s][A
2025-02-25T14:20:45.7874510Z 
2025-02-25T14:20:45.7874745Z Packets:                                                                                   191927/? [00:17<00:00, 33224.83it/s][A
2025-02-25T14:20:45.7874749Z 
2025-02-25T14:20:45.7874977Z Packets:                                                                                   195269/? [00:17<00:00, 33282.30it/s][A
2025-02-25T14:20:45.7874982Z 
2025-02-25T14:20:45.7875224Z Packets:                                                                                   198741/? [00:17<00:00, 33707.60it/s][A
2025-02-25T14:20:45.7875228Z 
2025-02-25T14:20:45.7875452Z Packets:                                                                                   202248/? [00:17<00:00, 34113.02it/s][A
2025-02-25T14:20:45.7875626Z Iterations:                                                                                41/? [08:31<00:00,  5.81s/it]
2025-02-25T14:20:45.7875636Z 
2025-02-25T14:20:45.7875991Z Packets:                                                                                   204009/? [00:17<00:00, 34113.02it/s][A
2025-02-25T14:20:45.7876152Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7876684Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7876919Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7877038Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7877129Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7877212Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7877216Z 
2025-02-25T14:20:45.7877342Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7877443Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7877563Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7877663Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-25T14:20:45.7877765Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-25T14:20:45.7877874Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7878041Z __________________________ test_boundary_interactions __________________________
2025-02-25T14:20:45.7878046Z 
2025-02-25T14:20:45.7878836Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f8a26c596d0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f8a07adf8b0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f89f3ce3340>])
2025-02-25T14:20:45.7879133Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a07adffe0>
2025-02-25T14:20:45.7879138Z 
2025-02-25T14:20:45.7879322Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-25T14:20:45.7879431Z         no_of_packets = len(rpacket_tracker)
2025-02-25T14:20:45.7879512Z     
2025-02-25T14:20:45.7879608Z         # Hard coding the number of columns
2025-02-25T14:20:45.7879784Z         # Based on the largest size of boundary_interaction array (60)
2025-02-25T14:20:45.7879899Z         obtained_boundary_interaction = np.full(
2025-02-25T14:20:45.7879998Z             (no_of_packets, 64),
2025-02-25T14:20:45.7880073Z             [-1],
2025-02-25T14:20:45.7880245Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-25T14:20:45.7880407Z         )
2025-02-25T14:20:45.7880675Z     
2025-02-25T14:20:45.7880903Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-25T14:20:45.7881089Z             obtained_boundary_interaction[
2025-02-25T14:20:45.7881292Z                 i, : tracker.boundary_interaction.size
2025-02-25T14:20:45.7881460Z             ] = tracker.boundary_interaction
2025-02-25T14:20:45.7881608Z     
2025-02-25T14:20:45.7881886Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-25T14:20:45.7882285Z             obtained_boundary_interaction
2025-02-25T14:20:45.7882401Z         )
2025-02-25T14:20:45.7882555Z >       npt.assert_array_equal(
2025-02-25T14:20:45.7882810Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-25T14:20:45.7882927Z         )
2025-02-25T14:20:45.7882935Z 
2025-02-25T14:20:45.7883213Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-25T14:20:45.7883388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7883394Z 
2025-02-25T14:20:45.7883746Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7883914Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-25T14:20:45.7884197Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-25T14:20:45.7884526Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-25T14:20:45.7884569Z 
2025-02-25T14:20:45.7884699Z     @wraps(func)
2025-02-25T14:20:45.7885099Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7885248Z         with self._recreate_cm():
2025-02-25T14:20:45.7885434Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7885583Z E           AssertionError: 
2025-02-25T14:20:45.7885752Z E           Arrays are not equal
2025-02-25T14:20:45.7885876Z E           
2025-02-25T14:20:45.7886050Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:20:45.7886259Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7886444Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.7886612Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.7886858Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.7887037Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.7887240Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.7887256Z 
2025-02-25T14:20:45.7887660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7887928Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-25T14:20:45.7887937Z 
2025-02-25T14:20:45.7889099Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-25T14:20:45.7889598Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8a1472fd10>
2025-02-25T14:20:45.7890225Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-25T14:20:45.7891104Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f89f3c4eea0>
2025-02-25T14:20:45.7891126Z 
2025-02-25T14:20:45.7891305Z     def test_montecarlo_main_loop_weighted(
2025-02-25T14:20:45.7891476Z         montecarlo_main_loop_config,
2025-02-25T14:20:45.7891621Z         regression_data,
2025-02-25T14:20:45.7891781Z         atomic_dataset,
2025-02-25T14:20:45.7891963Z         simple_weighted_packet_source,
2025-02-25T14:20:45.7892048Z     ):
2025-02-25T14:20:45.7892178Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-25T14:20:45.7892407Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-25T14:20:45.7892589Z             montecarlo_main_loop_config,
2025-02-25T14:20:45.7892748Z             atom_data=atomic_dataset,
2025-02-25T14:20:45.7892927Z             virtual_packet_logging=False,
2025-02-25T14:20:45.7893079Z             legacy_mode_enabled=True,
2025-02-25T14:20:45.7893216Z         )
2025-02-25T14:20:45.7893688Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-25T14:20:45.7893862Z             simple_weighted_packet_source
2025-02-25T14:20:45.7893999Z         )
2025-02-25T14:20:45.7894278Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-25T14:20:45.7894527Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-25T14:20:45.7894651Z     
2025-02-25T14:20:45.7894841Z         # Get the montecarlo simple regression data
2025-02-25T14:20:45.7894983Z         regression_data_dir = (
2025-02-25T14:20:45.7895302Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-25T14:20:45.7895544Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-25T14:20:45.7895679Z         )
2025-02-25T14:20:45.7895942Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-25T14:20:45.7896075Z     
2025-02-25T14:20:45.7896231Z         # Load compare data from refdata
2025-02-25T14:20:45.7896379Z     
2025-02-25T14:20:45.7896557Z         expected_nu = expected_hdf_store[
2025-02-25T14:20:45.7896775Z             "/simulation/transport/transport_state/output_nu"
2025-02-25T14:20:45.7897101Z         ]
2025-02-25T14:20:45.7897273Z         expected_energy = expected_hdf_store[
2025-02-25T14:20:45.7897509Z             "/simulation/transport/transport_state/output_energy"
2025-02-25T14:20:45.7897628Z         ]
2025-02-25T14:20:45.7897838Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-25T14:20:45.7898072Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-25T14:20:45.7898218Z         ]
2025-02-25T14:20:45.7898410Z         expected_j_estimator = expected_hdf_store[
2025-02-25T14:20:45.7898645Z             "/simulation/transport/transport_state/j_estimator"
2025-02-25T14:20:45.7898765Z         ]
2025-02-25T14:20:45.7898918Z         expected_hdf_store.close()
2025-02-25T14:20:45.7899076Z         transport_state = (
2025-02-25T14:20:45.7899403Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-25T14:20:45.7899533Z         )
2025-02-25T14:20:45.7899840Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-25T14:20:45.7900100Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-25T14:20:45.7900258Z         actual_nu_bar_estimator = (
2025-02-25T14:20:45.7900680Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-25T14:20:45.7900807Z         )
2025-02-25T14:20:45.7901136Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-25T14:20:45.7901218Z     
2025-02-25T14:20:45.7901295Z         # Compare
2025-02-25T14:20:45.7901392Z         npt.assert_allclose(
2025-02-25T14:20:45.7901552Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-25T14:20:45.7901632Z         )
2025-02-25T14:20:45.7901813Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-25T14:20:45.7901989Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-25T14:20:45.7901994Z 
2025-02-25T14:20:45.7902241Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-25T14:20:45.7902367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7902372Z 
2025-02-25T14:20:45.7902852Z args = (<function assert_allclose.<locals>.compare at 0x7f89eadf2200>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-25T14:20:45.7902966Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-25T14:20:45.7903226Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-25T14:20:45.7903232Z 
2025-02-25T14:20:45.7903307Z     @wraps(func)
2025-02-25T14:20:45.7903400Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7903490Z         with self._recreate_cm():
2025-02-25T14:20:45.7903740Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7903829Z E           AssertionError: 
2025-02-25T14:20:45.7903958Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:20:45.7904046Z E           
2025-02-25T14:20:45.7904156Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:20:45.7904273Z E           Max absolute difference: 2.00640487e-05
2025-02-25T14:20:45.7904376Z E           Max relative difference: 2.06329455
2025-02-25T14:20:45.7904551Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.7904648Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.7904821Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.7904912Z E                  -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.7904917Z 
2025-02-25T14:20:45.7905146Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7905321Z ----------------------------- Captured stdout call -----------------------------
2025-02-25T14:20:45.7905737Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-25T14:20:45.7906195Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-25T14:20:45.7906379Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7906602Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-25T14:20:45.7906766Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7906845Z 	
2025-02-25T14:20:45.7906941Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7907038Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7907153Z  ([1mbase.py[0m:546)
2025-02-25T14:20:45.7907328Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7907416Z 	
2025-02-25T14:20:45.7907574Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-25T14:20:45.7907752Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7907829Z 	
2025-02-25T14:20:45.7907941Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7908037Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7908140Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7908249Z  ([1mbase.py[0m:661)
2025-02-25T14:20:45.7908416Z ----------------------------- Captured stderr call -----------------------------
2025-02-25T14:20:45.7908421Z 
2025-02-25T14:20:45.7908424Z 
2025-02-25T14:20:45.7908667Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-25T14:20:45.7908685Z 
2025-02-25T14:20:45.7908904Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-25T14:20:45.7908910Z 
2025-02-25T14:20:45.7909182Z Packets:   ███████▉                                                                        9914/100000 [00:00<00:00, 99131.35it/s][A
2025-02-25T14:20:45.7909202Z 
2025-02-25T14:20:45.7909462Z Packets:   ████████████████▎                                                               20389/100000 [00:00<00:00, 102430.63it/s][A
2025-02-25T14:20:45.7909478Z 
2025-02-25T14:20:45.7909757Z Packets:   ████████████████████████▌                                                       30633/100000 [00:00<00:00, 102420.12it/s][A
2025-02-25T14:20:45.7909762Z 
2025-02-25T14:20:45.7910046Z Packets:   ████████████████████████████████▊                                               41069/100000 [00:00<00:00, 103184.17it/s][A
2025-02-25T14:20:45.7910051Z 
2025-02-25T14:20:45.7910332Z Packets:   █████████████████████████████████████████▎                                      51624/100000 [00:00<00:00, 104033.78it/s][A
2025-02-25T14:20:45.7910337Z 
2025-02-25T14:20:45.7910847Z Packets:   █████████████████████████████████████████████████▊                              62197/100000 [00:00<00:00, 104608.79it/s][A
2025-02-25T14:20:45.7911005Z 
2025-02-25T14:20:45.7911338Z Packets:   ██████████████████████████████████████████████████████████▎                     72851/100000 [00:00<00:00, 105238.83it/s][A
2025-02-25T14:20:45.7911359Z 
2025-02-25T14:20:45.7911665Z Packets:   ██████████████████████████████████████████████████████████████████▉             83624/100000 [00:00<00:00, 106030.60it/s][A
2025-02-25T14:20:45.7911671Z 
2025-02-25T14:20:45.7911998Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    94228/100000 [00:00<00:00, 105845.43it/s][A
2025-02-25T14:20:45.7912153Z Iterations:                                                                                45/? [09:23<00:00,  8.28s/it]
2025-02-25T14:20:45.7912159Z 
2025-02-25T14:20:45.7912499Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 105845.43it/s][A
2025-02-25T14:20:45.7912672Z ------------------------------ Captured log call -------------------------------
2025-02-25T14:20:45.7913200Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-25T14:20:45.7913568Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-25T14:20:45.7913683Z INFO     tardis.simulation.base:base.py:546 
2025-02-25T14:20:45.7913795Z 	Simulation finished in 0 iterations 
2025-02-25T14:20:45.7913881Z 	Simulation took 0.00 s
2025-02-25T14:20:45.7913885Z 
2025-02-25T14:20:45.7914004Z INFO     tardis.simulation.base:base.py:444 
2025-02-25T14:20:45.7914093Z 	Starting iteration 1 of 1
2025-02-25T14:20:45.7914208Z INFO     tardis.simulation.base:base.py:661 
2025-02-25T14:20:45.7914316Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-25T14:20:45.7914410Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-25T14:20:45.7914516Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-25T14:20:45.7914745Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-25T14:20:45.7914750Z 
2025-02-25T14:20:45.7915041Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34c500>
2025-02-25T14:20:45.7915323Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7915612Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-25T14:20:45.7915708Z attribute = 'plot_data'
2025-02-25T14:20:45.7915713Z 
2025-02-25T14:20:45.7915809Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7915911Z         "attribute",
2025-02-25T14:20:45.7915990Z         [
2025-02-25T14:20:45.7916084Z             "plot_data",
2025-02-25T14:20:45.7916167Z             "plot_colors",
2025-02-25T14:20:45.7916270Z             "new_bin_edges",
2025-02-25T14:20:45.7916346Z         ],
2025-02-25T14:20:45.7916438Z     )
2025-02-25T14:20:45.7916538Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7916738Z         self,
2025-02-25T14:20:45.7916840Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7916939Z         request,
2025-02-25T14:20:45.7917018Z         attribute,
2025-02-25T14:20:45.7917106Z     ):
2025-02-25T14:20:45.7917196Z         """
2025-02-25T14:20:45.7917344Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7917442Z     
2025-02-25T14:20:45.7917522Z         Parameters:
2025-02-25T14:20:45.7917620Z         -----------
2025-02-25T14:20:45.7918702Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7918802Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7918965Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7919046Z         """
2025-02-25T14:20:45.7919154Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7919303Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7919470Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7919632Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7919956Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7920078Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7920219Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7920344Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7920349Z 
2025-02-25T14:20:45.7920684Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7920893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7920913Z 
2025-02-25T14:20:45.7921388Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0b100>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:20:45.7921528Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:20:45.7921787Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7921793Z 
2025-02-25T14:20:45.7921888Z     @wraps(func)
2025-02-25T14:20:45.7921977Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7922085Z         with self._recreate_cm():
2025-02-25T14:20:45.7922182Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7922292Z E           AssertionError: 
2025-02-25T14:20:45.7922423Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7922501Z E           
2025-02-25T14:20:45.7922639Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.7922876Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7923104Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7923303Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7923464Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7923597Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7923728Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7923733Z 
2025-02-25T14:20:45.7923962Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7924123Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7924387Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7924646Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7924820Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7925127Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7925577Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-25T14:20:45.7925589Z 
2025-02-25T14:20:45.7925874Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34c980>
2025-02-25T14:20:45.7926154Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7926443Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-25T14:20:45.7926538Z attribute = 'plot_data'
2025-02-25T14:20:45.7926543Z 
2025-02-25T14:20:45.7926650Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7926727Z         "attribute",
2025-02-25T14:20:45.7926806Z         [
2025-02-25T14:20:45.7926889Z             "plot_data",
2025-02-25T14:20:45.7926981Z             "plot_colors",
2025-02-25T14:20:45.7927091Z             "new_bin_edges",
2025-02-25T14:20:45.7927174Z         ],
2025-02-25T14:20:45.7927259Z     )
2025-02-25T14:20:45.7927353Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7927563Z         self,
2025-02-25T14:20:45.7927657Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7927740Z         request,
2025-02-25T14:20:45.7927816Z         attribute,
2025-02-25T14:20:45.7927906Z     ):
2025-02-25T14:20:45.7927979Z         """
2025-02-25T14:20:45.7928131Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7928203Z     
2025-02-25T14:20:45.7928294Z         Parameters:
2025-02-25T14:20:45.7928377Z         -----------
2025-02-25T14:20:45.7928555Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7928678Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7928845Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7928928Z         """
2025-02-25T14:20:45.7929040Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7929211Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7929355Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7929531Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7929675Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7929797Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7929933Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7930057Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7930061Z 
2025-02-25T14:20:45.7930222Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7930342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7930347Z 
2025-02-25T14:20:45.7931010Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad47ba0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-25T14:20:45.7931170Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:20:45.7931434Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7931440Z 
2025-02-25T14:20:45.7931536Z     @wraps(func)
2025-02-25T14:20:45.7931627Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7931732Z         with self._recreate_cm():
2025-02-25T14:20:45.7931830Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7931932Z E           AssertionError: 
2025-02-25T14:20:45.7932040Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7932130Z E           
2025-02-25T14:20:45.7932225Z E           (shapes (558,), (560,) mismatch)
2025-02-25T14:20:45.7932372Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7932493Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7932773Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7932924Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7933041Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7933174Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7933179Z 
2025-02-25T14:20:45.7933384Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7933616Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-25T14:20:45.7933621Z 
2025-02-25T14:20:45.7933887Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34cbc0>
2025-02-25T14:20:45.7934182Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7934478Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-25T14:20:45.7934682Z attribute = 'plot_data'
2025-02-25T14:20:45.7934687Z 
2025-02-25T14:20:45.7934792Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7934870Z         "attribute",
2025-02-25T14:20:45.7934955Z         [
2025-02-25T14:20:45.7935043Z             "plot_data",
2025-02-25T14:20:45.7935140Z             "plot_colors",
2025-02-25T14:20:45.7935223Z             "new_bin_edges",
2025-02-25T14:20:45.7935305Z         ],
2025-02-25T14:20:45.7935381Z     )
2025-02-25T14:20:45.7935488Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7935582Z         self,
2025-02-25T14:20:45.7935681Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7935768Z         request,
2025-02-25T14:20:45.7935843Z         attribute,
2025-02-25T14:20:45.7935927Z     ):
2025-02-25T14:20:45.7936000Z         """
2025-02-25T14:20:45.7936151Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7936236Z     
2025-02-25T14:20:45.7936332Z         Parameters:
2025-02-25T14:20:45.7936423Z         -----------
2025-02-25T14:20:45.7936749Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7936860Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7937039Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7937124Z         """
2025-02-25T14:20:45.7937234Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7937382Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7937537Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7937713Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7937860Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7938001Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7938134Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7938276Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7938281Z 
2025-02-25T14:20:45.7938437Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7938554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7938558Z 
2025-02-25T14:20:45.7939025Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0ba60>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:20:45.7939165Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:20:45.7939441Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7939446Z 
2025-02-25T14:20:45.7939529Z     @wraps(func)
2025-02-25T14:20:45.7939633Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7939852Z         with self._recreate_cm():
2025-02-25T14:20:45.7939946Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7940051Z E           AssertionError: 
2025-02-25T14:20:45.7940162Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7940255Z E           
2025-02-25T14:20:45.7940354Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.7940668Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7940801Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7940947Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7941081Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7941218Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7941361Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7941375Z 
2025-02-25T14:20:45.7941574Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7941890Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7942141Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7942409Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7942565Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7942878Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7943097Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-25T14:20:45.7943101Z 
2025-02-25T14:20:45.7943357Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34ce00>
2025-02-25T14:20:45.7943647Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7943995Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-25T14:20:45.7944154Z attribute = 'plot_data'
2025-02-25T14:20:45.7944160Z 
2025-02-25T14:20:45.7944258Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7944349Z         "attribute",
2025-02-25T14:20:45.7944424Z         [
2025-02-25T14:20:45.7944515Z             "plot_data",
2025-02-25T14:20:45.7944613Z             "plot_colors",
2025-02-25T14:20:45.7944699Z             "new_bin_edges",
2025-02-25T14:20:45.7944784Z         ],
2025-02-25T14:20:45.7944855Z     )
2025-02-25T14:20:45.7944956Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7945032Z         self,
2025-02-25T14:20:45.7945144Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7945227Z         request,
2025-02-25T14:20:45.7945322Z         attribute,
2025-02-25T14:20:45.7945395Z     ):
2025-02-25T14:20:45.7945483Z         """
2025-02-25T14:20:45.7945623Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7945723Z     
2025-02-25T14:20:45.7945802Z         Parameters:
2025-02-25T14:20:45.7945888Z         -----------
2025-02-25T14:20:45.7946076Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7946183Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7946368Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7946446Z         """
2025-02-25T14:20:45.7946566Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7946712Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7946882Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7947047Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7947213Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7947494Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7947643Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7947776Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7947781Z 
2025-02-25T14:20:45.7947928Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7948052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7948057Z 
2025-02-25T14:20:45.7948439Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd0a200>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-25T14:20:45.7948593Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:20:45.7948672Z        11042.97481792]))
2025-02-25T14:20:45.7948933Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7948948Z 
2025-02-25T14:20:45.7949042Z     @wraps(func)
2025-02-25T14:20:45.7949129Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7949329Z         with self._recreate_cm():
2025-02-25T14:20:45.7949417Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7949526Z E           AssertionError: 
2025-02-25T14:20:45.7949640Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7949726Z E           
2025-02-25T14:20:45.7949824Z E           (shapes (159,), (153,) mismatch)
2025-02-25T14:20:45.7949983Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7950102Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7950248Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7950390Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7950658Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7950845Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7950860Z 
2025-02-25T14:20:45.7951066Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7951298Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-25T14:20:45.7951302Z 
2025-02-25T14:20:45.7951683Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d040>
2025-02-25T14:20:45.7951992Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7952283Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-25T14:20:45.7952378Z attribute = 'plot_data'
2025-02-25T14:20:45.7952383Z 
2025-02-25T14:20:45.7952524Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7952606Z         "attribute",
2025-02-25T14:20:45.7952706Z         [
2025-02-25T14:20:45.7952791Z             "plot_data",
2025-02-25T14:20:45.7952908Z             "plot_colors",
2025-02-25T14:20:45.7953007Z             "new_bin_edges",
2025-02-25T14:20:45.7953104Z         ],
2025-02-25T14:20:45.7953176Z     )
2025-02-25T14:20:45.7953285Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7953390Z         self,
2025-02-25T14:20:45.7953489Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7953583Z         request,
2025-02-25T14:20:45.7953658Z         attribute,
2025-02-25T14:20:45.7953747Z     ):
2025-02-25T14:20:45.7953825Z         """
2025-02-25T14:20:45.7953987Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7954062Z     
2025-02-25T14:20:45.7954151Z         Parameters:
2025-02-25T14:20:45.7954232Z         -----------
2025-02-25T14:20:45.7954425Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7954528Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7954864Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7954958Z         """
2025-02-25T14:20:45.7955074Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7955233Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7955392Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7955567Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7955719Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7955858Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7955982Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7956112Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7956116Z 
2025-02-25T14:20:45.7956268Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7956398Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7956403Z 
2025-02-25T14:20:45.7957025Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad47a60>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-25T14:20:45.7957139Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-25T14:20:45.7957396Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7957401Z 
2025-02-25T14:20:45.7957471Z     @wraps(func)
2025-02-25T14:20:45.7957569Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7957669Z         with self._recreate_cm():
2025-02-25T14:20:45.7957766Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7957867Z E           AssertionError: 
2025-02-25T14:20:45.7957974Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7958065Z E           
2025-02-25T14:20:45.7958173Z E           (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.7958338Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.7958567Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.7958731Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.7958873Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.7959005Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.7959150Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.7959155Z 
2025-02-25T14:20:45.7959361Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7959531Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7959782Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7960061Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7960231Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7960733Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7961009Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-25T14:20:45.7961014Z 
2025-02-25T14:20:45.7961293Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d2b0>
2025-02-25T14:20:45.7961593Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7961872Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-25T14:20:45.7961975Z attribute = 'plot_data'
2025-02-25T14:20:45.7961980Z 
2025-02-25T14:20:45.7962239Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7962332Z         "attribute",
2025-02-25T14:20:45.7962415Z         [
2025-02-25T14:20:45.7962506Z             "plot_data",
2025-02-25T14:20:45.7962616Z             "plot_colors",
2025-02-25T14:20:45.7962699Z             "new_bin_edges",
2025-02-25T14:20:45.7962801Z         ],
2025-02-25T14:20:45.7962877Z     )
2025-02-25T14:20:45.7962994Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7963076Z         self,
2025-02-25T14:20:45.7963188Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7963274Z         request,
2025-02-25T14:20:45.7963372Z         attribute,
2025-02-25T14:20:45.7963452Z     ):
2025-02-25T14:20:45.7963545Z         """
2025-02-25T14:20:45.7963689Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7963776Z     
2025-02-25T14:20:45.7963856Z         Parameters:
2025-02-25T14:20:45.7963950Z         -----------
2025-02-25T14:20:45.7964145Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7964257Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7964572Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7964648Z         """
2025-02-25T14:20:45.7964778Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7964922Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7965088Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7965261Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7965423Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7965550Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7965693Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7965835Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7965848Z 
2025-02-25T14:20:45.7965995Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7966131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7966146Z 
2025-02-25T14:20:45.7966620Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0ad46340>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-25T14:20:45.7966738Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-25T14:20:45.7966993Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7967013Z 
2025-02-25T14:20:45.7967092Z     @wraps(func)
2025-02-25T14:20:45.7967204Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7967294Z         with self._recreate_cm():
2025-02-25T14:20:45.7967400Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7967493Z E           AssertionError: 
2025-02-25T14:20:45.7967634Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7967777Z E           
2025-02-25T14:20:45.7967952Z E           (shapes (1466,), (1481,) mismatch)
2025-02-25T14:20:45.7968112Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:20:45.7968217Z E                  11152.962595, 11172.044815])
2025-02-25T14:20:45.7968373Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:20:45.7968461Z E                  11398.237865, 11111.204868])
2025-02-25T14:20:45.7968466Z 
2025-02-25T14:20:45.7968688Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7968850Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7969107Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7969458Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7969753Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7970119Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7970351Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-25T14:20:45.7970356Z 
2025-02-25T14:20:45.7970805Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d4f0>
2025-02-25T14:20:45.7971099Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7971385Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-25T14:20:45.7971475Z attribute = 'plot_data'
2025-02-25T14:20:45.7971479Z 
2025-02-25T14:20:45.7971590Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7971696Z         "attribute",
2025-02-25T14:20:45.7971768Z         [
2025-02-25T14:20:45.7971865Z             "plot_data",
2025-02-25T14:20:45.7972086Z             "plot_colors",
2025-02-25T14:20:45.7972192Z             "new_bin_edges",
2025-02-25T14:20:45.7972265Z         ],
2025-02-25T14:20:45.7972353Z     )
2025-02-25T14:20:45.7972448Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7972541Z         self,
2025-02-25T14:20:45.7972634Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7972728Z         request,
2025-02-25T14:20:45.7972809Z         attribute,
2025-02-25T14:20:45.7972902Z     ):
2025-02-25T14:20:45.7972976Z         """
2025-02-25T14:20:45.7973132Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7973209Z     
2025-02-25T14:20:45.7973301Z         Parameters:
2025-02-25T14:20:45.7973395Z         -----------
2025-02-25T14:20:45.7973582Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7973700Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7973879Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7973975Z         """
2025-02-25T14:20:45.7974087Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7974250Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7974404Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7974582Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7974738Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7974878Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7975021Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7975146Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7975150Z 
2025-02-25T14:20:45.7975343Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7975569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7975586Z 
2025-02-25T14:20:45.7976043Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd08f40>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-25T14:20:45.7976185Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-25T14:20:45.7976442Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7976450Z 
2025-02-25T14:20:45.7976537Z     @wraps(func)
2025-02-25T14:20:45.7976629Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7976732Z         with self._recreate_cm():
2025-02-25T14:20:45.7976831Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7976953Z E           AssertionError: 
2025-02-25T14:20:45.7977067Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7977327Z E           
2025-02-25T14:20:45.7977432Z E           (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.7977604Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.7977756Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.7977884Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.7978042Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.7978163Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.7978307Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.7978312Z 
2025-02-25T14:20:45.7978520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7978695Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7978962Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7979232Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7979499Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7979813Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7980046Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-25T14:20:45.7980050Z 
2025-02-25T14:20:45.7980322Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34d6d0>
2025-02-25T14:20:45.7980808Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>
2025-02-25T14:20:45.7981093Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-25T14:20:45.7981199Z attribute = 'plot_data'
2025-02-25T14:20:45.7981215Z 
2025-02-25T14:20:45.7981334Z     @pytest.mark.parametrize(
2025-02-25T14:20:45.7981419Z         "attribute",
2025-02-25T14:20:45.7981525Z         [
2025-02-25T14:20:45.7981616Z             "plot_data",
2025-02-25T14:20:45.7981722Z             "plot_colors",
2025-02-25T14:20:45.7981809Z             "new_bin_edges",
2025-02-25T14:20:45.7981896Z         ],
2025-02-25T14:20:45.7981970Z     )
2025-02-25T14:20:45.7982086Z     def test_prepare_plot_data(
2025-02-25T14:20:45.7982163Z         self,
2025-02-25T14:20:45.7982273Z         plotter_prepare_plot_data,
2025-02-25T14:20:45.7982355Z         request,
2025-02-25T14:20:45.7982454Z         attribute,
2025-02-25T14:20:45.7982542Z     ):
2025-02-25T14:20:45.7982625Z         """
2025-02-25T14:20:45.7982789Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-25T14:20:45.7982871Z     
2025-02-25T14:20:45.7982964Z         Parameters:
2025-02-25T14:20:45.7983049Z         -----------
2025-02-25T14:20:45.7983265Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-25T14:20:45.7983370Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7983562Z         attribute: The attribute to test after preparing the plot data.
2025-02-25T14:20:45.7983648Z         """
2025-02-25T14:20:45.7983778Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7983923Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-25T14:20:45.7984089Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-25T14:20:45.7984273Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-25T14:20:45.7984434Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-25T14:20:45.7984587Z                 plot_object = [item.value for item in plot_object]
2025-02-25T14:20:45.7984712Z             data = regression_data.sync_ndarray(plot_object)
2025-02-25T14:20:45.7984852Z >           np.testing.assert_allclose(plot_object, data)
2025-02-25T14:20:45.7984995Z 
2025-02-25T14:20:45.7985152Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-25T14:20:45.7985304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7985309Z 
2025-02-25T14:20:45.7985710Z args = (<function assert_allclose.<locals>.compare at 0x7f89dbd082c0>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-25T14:20:45.7985899Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-25T14:20:45.7986073Z        11042.97481792]))
2025-02-25T14:20:45.7986367Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.7986373Z 
2025-02-25T14:20:45.7986479Z     @wraps(func)
2025-02-25T14:20:45.7986572Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7986694Z         with self._recreate_cm():
2025-02-25T14:20:45.7986796Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7986912Z E           AssertionError: 
2025-02-25T14:20:45.7987049Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.7987265Z E           
2025-02-25T14:20:45.7987387Z E           (shapes (379,), (381,) mismatch)
2025-02-25T14:20:45.7987535Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:20:45.7987686Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:20:45.7987816Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:20:45.7987970Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:20:45.7988094Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:20:45.7988234Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:20:45.7988238Z 
2025-02-25T14:20:45.7988457Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.7988624Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.7988897Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.7989178Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.7989370Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.7989695Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.7989922Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-25T14:20:45.7989927Z 
2025-02-25T14:20:45.7990213Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34db50>
2025-02-25T14:20:45.7990717Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89e28761b0>
2025-02-25T14:20:45.7991278Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.7991536Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-25T14:20:45.7991540Z 
2025-02-25T14:20:45.7991657Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.7991832Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.7991925Z     ):
2025-02-25T14:20:45.7992002Z         """
2025-02-25T14:20:45.7992177Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.7992262Z     
2025-02-25T14:20:45.7992394Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.7992484Z     
2025-02-25T14:20:45.7992572Z         Parameters:
2025-02-25T14:20:45.7992668Z         -----------
2025-02-25T14:20:45.7992839Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.7993274Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.7993393Z         request: Pytest's request fixture.
2025-02-25T14:20:45.7993483Z         """
2025-02-25T14:20:45.7993595Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.7993725Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.7993898Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.7994066Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.7994189Z             expected_values = expected.get(
2025-02-25T14:20:45.7994284Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.7994394Z             ).values.flatten()
2025-02-25T14:20:45.7994544Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.7994628Z     
2025-02-25T14:20:45.7994768Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.7994898Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.7994990Z                     expected_values,
2025-02-25T14:20:45.7995230Z                     actual_values,
2025-02-25T14:20:45.7995313Z                     rtol=0.3,
2025-02-25T14:20:45.7995411Z                     atol=3,
2025-02-25T14:20:45.7995510Z                 )
2025-02-25T14:20:45.7995585Z             else:
2025-02-25T14:20:45.7995747Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.7995819Z     
2025-02-25T14:20:45.7995944Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.7996072Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.7996193Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.7996279Z                 assert (
2025-02-25T14:20:45.7996424Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.7996518Z                     == data.get_label()
2025-02-25T14:20:45.7996618Z                 )
2025-02-25T14:20:45.7996726Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.7996841Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.7996956Z                     data.get_xydata(),
2025-02-25T14:20:45.7997097Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.7997202Z                     rtol=0.3,
2025-02-25T14:20:45.7997287Z                     atol=3,
2025-02-25T14:20:45.7997382Z                 )
2025-02-25T14:20:45.7997387Z 
2025-02-25T14:20:45.7997537Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.7997667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.7997672Z 
2025-02-25T14:20:45.7997931Z args = (<function assert_allclose.<locals>.compare at 0x7f89e9a32d40>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.7998028Z        [1.19e+04, 1.67e+0...,
2025-02-25T14:20:45.7998130Z        [1.82e+04, 0.00e+00],
2025-02-25T14:20:45.7998210Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.7998310Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.7998393Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.7998825Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.7998837Z 
2025-02-25T14:20:45.7998919Z     @wraps(func)
2025-02-25T14:20:45.7999025Z     def inner(*args, **kwds):
2025-02-25T14:20:45.7999125Z         with self._recreate_cm():
2025-02-25T14:20:45.7999235Z >           return func(*args, **kwds)
2025-02-25T14:20:45.7999328Z E           AssertionError: 
2025-02-25T14:20:45.7999451Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.7999539Z E           
2025-02-25T14:20:45.7999639Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.7999749Z E           Max absolute difference: 22.
2025-02-25T14:20:45.7999842Z E           Max relative difference: 0.8
2025-02-25T14:20:45.7999944Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8000205Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8000310Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8000406Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8000644Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8000809Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8000817Z 
2025-02-25T14:20:45.8001052Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8001232Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8001478Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8001933Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-25T14:20:45.8002090Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8002546Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:20:45.8002922Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-25T14:20:45.8002927Z 
2025-02-25T14:20:45.8003209Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34dc10>
2025-02-25T14:20:45.8003538Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89dbdd0860>
2025-02-25T14:20:45.8004030Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8004292Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-25T14:20:45.8004297Z 
2025-02-25T14:20:45.8004389Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8004578Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8004669Z     ):
2025-02-25T14:20:45.8004762Z         """
2025-02-25T14:20:45.8004921Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8004996Z     
2025-02-25T14:20:45.8005136Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8005211Z     
2025-02-25T14:20:45.8005357Z         Parameters:
2025-02-25T14:20:45.8005496Z         -----------
2025-02-25T14:20:45.8005725Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8005882Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8006002Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8006080Z         """
2025-02-25T14:20:45.8006197Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8006308Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8006498Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8006678Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8006782Z             expected_values = expected.get(
2025-02-25T14:20:45.8006895Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8006986Z             ).values.flatten()
2025-02-25T14:20:45.8007138Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8007214Z     
2025-02-25T14:20:45.8007364Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8007466Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8007576Z                     expected_values,
2025-02-25T14:20:45.8007666Z                     actual_values,
2025-02-25T14:20:45.8007763Z                     rtol=0.3,
2025-02-25T14:20:45.8007871Z                     atol=3,
2025-02-25T14:20:45.8007951Z                 )
2025-02-25T14:20:45.8008048Z             else:
2025-02-25T14:20:45.8008205Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8008487Z     
2025-02-25T14:20:45.8008600Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.8008744Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.8008852Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.8008947Z                 assert (
2025-02-25T14:20:45.8009075Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.8009177Z                     == data.get_label()
2025-02-25T14:20:45.8009254Z                 )
2025-02-25T14:20:45.8009366Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.8009483Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8009578Z                     data.get_xydata(),
2025-02-25T14:20:45.8009734Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.8009820Z                     rtol=0.3,
2025-02-25T14:20:45.8009915Z                     atol=3,
2025-02-25T14:20:45.8009993Z                 )
2025-02-25T14:20:45.8010007Z 
2025-02-25T14:20:45.8010175Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.8010394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8010399Z 
2025-02-25T14:20:45.8010891Z args = (<function assert_allclose.<locals>.compare at 0x7f8a04c116c0>, array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8010993Z        [1.19e+04, 1.67e+0...,
2025-02-25T14:20:45.8011079Z        [1.82e+04, 0.00e+00],
2025-02-25T14:20:45.8011180Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8011264Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8011368Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.8011611Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8011617Z 
2025-02-25T14:20:45.8011711Z     @wraps(func)
2025-02-25T14:20:45.8011801Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8011907Z         with self._recreate_cm():
2025-02-25T14:20:45.8012013Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8012119Z E           AssertionError: 
2025-02-25T14:20:45.8012258Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8012341Z E           
2025-02-25T14:20:45.8012459Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8012630Z E           Max absolute difference: 22.
2025-02-25T14:20:45.8012822Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8012922Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8013033Z E                  [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8013121Z E                  [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8013224Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8013312Z E                  [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8013412Z E                  [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8013417Z 
2025-02-25T14:20:45.8013631Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8013855Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-25T14:20:45.8013864Z 
2025-02-25T14:20:45.8014147Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34e000>
2025-02-25T14:20:45.8014453Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f89ef40e300>
2025-02-25T14:20:45.8014961Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8015208Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-25T14:20:45.8015212Z 
2025-02-25T14:20:45.8015327Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8015507Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8015584Z     ):
2025-02-25T14:20:45.8015675Z         """
2025-02-25T14:20:45.8015965Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8016053Z     
2025-02-25T14:20:45.8016190Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8016278Z     
2025-02-25T14:20:45.8016358Z         Parameters:
2025-02-25T14:20:45.8016454Z         -----------
2025-02-25T14:20:45.8016619Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8016788Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8016894Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8016985Z         """
2025-02-25T14:20:45.8017100Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8017213Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8017399Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8017554Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8017680Z             expected_values = expected.get(
2025-02-25T14:20:45.8017776Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8018009Z             ).values.flatten()
2025-02-25T14:20:45.8018146Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8018239Z     
2025-02-25T14:20:45.8018371Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8018484Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8018586Z                     expected_values,
2025-02-25T14:20:45.8018677Z                     actual_values,
2025-02-25T14:20:45.8018781Z                     rtol=0.3,
2025-02-25T14:20:45.8018866Z                     atol=3,
2025-02-25T14:20:45.8018960Z                 )
2025-02-25T14:20:45.8018964Z 
2025-02-25T14:20:45.8019115Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-25T14:20:45.8019248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8019253Z 
2025-02-25T14:20:45.8019687Z args = (<function assert_allclose.<locals>.compare at 0x7f8a086ddee0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8019802Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8020058Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8020064Z 
2025-02-25T14:20:45.8020146Z     @wraps(func)
2025-02-25T14:20:45.8020247Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8020338Z         with self._recreate_cm():
2025-02-25T14:20:45.8020436Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8020705Z E           AssertionError: 
2025-02-25T14:20:45.8020850Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8020930Z E           
2025-02-25T14:20:45.8021052Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8021151Z E           Max absolute difference: 34
2025-02-25T14:20:45.8021282Z E           Max relative difference: 0.71428571
2025-02-25T14:20:45.8021450Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8021559Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8021720Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8021812Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8021817Z 
2025-02-25T14:20:45.8022040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8022206Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8022626Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8022905Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8023064Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8023547Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8023759Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-25T14:20:45.8023764Z 
2025-02-25T14:20:45.8024048Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34e0c0>
2025-02-25T14:20:45.8024367Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0a5acb60>
2025-02-25T14:20:45.8024884Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8025140Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-25T14:20:45.8025144Z 
2025-02-25T14:20:45.8025241Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8025425Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-25T14:20:45.8025500Z     ):
2025-02-25T14:20:45.8025703Z         """
2025-02-25T14:20:45.8025837Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8025922Z     
2025-02-25T14:20:45.8026051Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8026138Z     
2025-02-25T14:20:45.8026221Z         Parameters:
2025-02-25T14:20:45.8026307Z         -----------
2025-02-25T14:20:45.8026485Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-25T14:20:45.8026639Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-25T14:20:45.8026750Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8026826Z         """
2025-02-25T14:20:45.8026938Z         fig, _ = plotter_generate_plot_mpl
2025-02-25T14:20:45.8027052Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8027231Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-25T14:20:45.8027398Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8027517Z             expected_values = expected.get(
2025-02-25T14:20:45.8027609Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8027712Z             ).values.flatten()
2025-02-25T14:20:45.8027858Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-25T14:20:45.8027933Z     
2025-02-25T14:20:45.8028071Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8028175Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8028284Z                     expected_values,
2025-02-25T14:20:45.8028377Z                     actual_values,
2025-02-25T14:20:45.8028473Z                     rtol=0.3,
2025-02-25T14:20:45.8028558Z                     atol=3,
2025-02-25T14:20:45.8028658Z                 )
2025-02-25T14:20:45.8028739Z             else:
2025-02-25T14:20:45.8028902Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8028985Z     
2025-02-25T14:20:45.8029152Z         labels = expected["plot_data_hdf/scalars"]
2025-02-25T14:20:45.8029405Z         for index1, data in enumerate(fig.get_children()):
2025-02-25T14:20:45.8029516Z             if isinstance(data.get_label(), str):
2025-02-25T14:20:45.8029629Z                 assert (
2025-02-25T14:20:45.8029760Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-25T14:20:45.8029871Z                     == data.get_label()
2025-02-25T14:20:45.8029948Z                 )
2025-02-25T14:20:45.8030061Z             if isinstance(data, Line2D):
2025-02-25T14:20:45.8030162Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8030275Z                     data.get_xydata(),
2025-02-25T14:20:45.8030422Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-25T14:20:45.8030679Z                     rtol=0.3,
2025-02-25T14:20:45.8030807Z                     atol=3,
2025-02-25T14:20:45.8031040Z                 )
2025-02-25T14:20:45.8031045Z 
2025-02-25T14:20:45.8031218Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-25T14:20:45.8031351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8031356Z 
2025-02-25T14:20:45.8031630Z args = (<function assert_allclose.<locals>.compare at 0x7f8a086b1d00>, array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8031723Z        [1.19e+04, 2.72e+0...,
2025-02-25T14:20:45.8031820Z        [1.82e+04, 5.00e+00],
2025-02-25T14:20:45.8031903Z        [1.91e+04, 5.00e+00],
2025-02-25T14:20:45.8031995Z        [1.91e+04, 0.00e+00],
2025-02-25T14:20:45.8032080Z        [2.00e+04, 0.00e+00]]))
2025-02-25T14:20:45.8032349Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8032354Z 
2025-02-25T14:20:45.8032451Z     @wraps(func)
2025-02-25T14:20:45.8032537Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8032649Z         with self._recreate_cm():
2025-02-25T14:20:45.8032754Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8032997Z E           AssertionError: 
2025-02-25T14:20:45.8033114Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8033208Z E           
2025-02-25T14:20:45.8033311Z E           Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8033421Z E           Max absolute difference: 34.
2025-02-25T14:20:45.8033519Z E           Max relative difference: 0.65
2025-02-25T14:20:45.8033629Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8033729Z E                  [1.19e+04, 2.72e+02],
2025-02-25T14:20:45.8033825Z E                  [1.19e+04, 1.10e+02],...
2025-02-25T14:20:45.8033931Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:20:45.8034017Z E                  [1.19e+04, 3.06e+02],
2025-02-25T14:20:45.8034122Z E                  [1.19e+04, 1.18e+02],...
2025-02-25T14:20:45.8034126Z 
2025-02-25T14:20:45.8034343Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8034536Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8034799Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8035151Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8035321Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8035683Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8035900Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-25T14:20:45.8035905Z 
2025-02-25T14:20:45.8036319Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34ef30>
2025-02-25T14:20:45.8036675Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a089a30b0>
2025-02-25T14:20:45.8036788Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8036959Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8037132Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8037342Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8037608Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-25T14:20:45.8037614Z 
2025-02-25T14:20:45.8037711Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8037915Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8038086Z     ):
2025-02-25T14:20:45.8038362Z         """
2025-02-25T14:20:45.8038530Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8053504Z     
2025-02-25T14:20:45.8053992Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8054066Z     
2025-02-25T14:20:45.8054169Z         Parameters:
2025-02-25T14:20:45.8054249Z         ----------
2025-02-25T14:20:45.8054436Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8054589Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8054708Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8054798Z         """
2025-02-25T14:20:45.8054914Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8055034Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8055234Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8055309Z     
2025-02-25T14:20:45.8055493Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8055615Z             expected_values = expected.get(
2025-02-25T14:20:45.8055711Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8055840Z             ).values.flatten()
2025-02-25T14:20:45.8055992Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8056270Z     
2025-02-25T14:20:45.8056495Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8056676Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8056775Z                     expected_values,
2025-02-25T14:20:45.8056883Z                     actual_values,
2025-02-25T14:20:45.8056973Z                     rtol=0.3,
2025-02-25T14:20:45.8057077Z                     atol=3,
2025-02-25T14:20:45.8057170Z                 )
2025-02-25T14:20:45.8057258Z             else:
2025-02-25T14:20:45.8057432Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8057543Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8057681Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8057774Z             if data.stackgroup:
2025-02-25T14:20:45.8057896Z                 assert (
2025-02-25T14:20:45.8057988Z                     data.stackgroup
2025-02-25T14:20:45.8058100Z                     == getattr(
2025-02-25T14:20:45.8058223Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8058341Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8058439Z                     ).decode()
2025-02-25T14:20:45.8058533Z                 )
2025-02-25T14:20:45.8058651Z             if data.name:
2025-02-25T14:20:45.8058732Z                 assert (
2025-02-25T14:20:45.8058826Z                     data.name
2025-02-25T14:20:45.8058910Z                     == getattr(
2025-02-25T14:20:45.8059048Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8059147Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8059247Z                     ).decode()
2025-02-25T14:20:45.8059330Z                 )
2025-02-25T14:20:45.8059447Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8059534Z                 data.x,
2025-02-25T14:20:45.8059670Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8059764Z                 rtol=0.3,
2025-02-25T14:20:45.8059864Z                 atol=3,
2025-02-25T14:20:45.8059949Z             )
2025-02-25T14:20:45.8060046Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8060129Z                 data.y,
2025-02-25T14:20:45.8060237Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8060324Z                 rtol=0.3,
2025-02-25T14:20:45.8060398Z                 atol=3,
2025-02-25T14:20:45.8060485Z             )
2025-02-25T14:20:45.8060491Z 
2025-02-25T14:20:45.8060865Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8061003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8061008Z 
2025-02-25T14:20:45.8061425Z args = (<function assert_allclose.<locals>.compare at 0x7f89f615f6a0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8061682Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:20:45.8061961Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8061966Z 
2025-02-25T14:20:45.8062044Z     @wraps(func)
2025-02-25T14:20:45.8062148Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8062244Z         with self._recreate_cm():
2025-02-25T14:20:45.8062352Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8062444Z E           AssertionError: 
2025-02-25T14:20:45.8062574Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8062652Z E           
2025-02-25T14:20:45.8062773Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8062889Z E           Max absolute difference: 22
2025-02-25T14:20:45.8062988Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8063207Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8063538Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8063699Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8063790Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8063794Z 
2025-02-25T14:20:45.8064025Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8064197Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8064505Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8064953Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-25T14:20:45.8065120Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8065596Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-25T14:20:45.8065819Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-25T14:20:45.8065824Z 
2025-02-25T14:20:45.8066107Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f020>
2025-02-25T14:20:45.8066435Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0e6cda00>
2025-02-25T14:20:45.8066560Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8066731Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8066870Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8067091Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8067344Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-25T14:20:45.8067355Z 
2025-02-25T14:20:45.8067464Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8067641Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8067738Z     ):
2025-02-25T14:20:45.8067817Z         """
2025-02-25T14:20:45.8067974Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8068059Z     
2025-02-25T14:20:45.8068196Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8068287Z     
2025-02-25T14:20:45.8068369Z         Parameters:
2025-02-25T14:20:45.8068471Z         ----------
2025-02-25T14:20:45.8068636Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8068784Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8068886Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8068973Z         """
2025-02-25T14:20:45.8069076Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8069304Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8069507Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8069589Z     
2025-02-25T14:20:45.8069867Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8070008Z             expected_values = expected.get(
2025-02-25T14:20:45.8070119Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8070212Z             ).values.flatten()
2025-02-25T14:20:45.8070375Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8070456Z     
2025-02-25T14:20:45.8070813Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8070917Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8071026Z                     expected_values,
2025-02-25T14:20:45.8071115Z                     actual_values,
2025-02-25T14:20:45.8071229Z                     rtol=0.3,
2025-02-25T14:20:45.8071346Z                     atol=3,
2025-02-25T14:20:45.8071421Z                 )
2025-02-25T14:20:45.8071664Z             else:
2025-02-25T14:20:45.8071816Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8071941Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8072053Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8072158Z             if data.stackgroup:
2025-02-25T14:20:45.8072243Z                 assert (
2025-02-25T14:20:45.8072341Z                     data.stackgroup
2025-02-25T14:20:45.8072420Z                     == getattr(
2025-02-25T14:20:45.8072546Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8072654Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8072760Z                     ).decode()
2025-02-25T14:20:45.8072852Z                 )
2025-02-25T14:20:45.8072941Z             if data.name:
2025-02-25T14:20:45.8073044Z                 assert (
2025-02-25T14:20:45.8073127Z                     data.name
2025-02-25T14:20:45.8073224Z                     == getattr(
2025-02-25T14:20:45.8073341Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8073459Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8073546Z                     ).decode()
2025-02-25T14:20:45.8073641Z                 )
2025-02-25T14:20:45.8073743Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8073835Z                 data.x,
2025-02-25T14:20:45.8073947Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8074051Z                 rtol=0.3,
2025-02-25T14:20:45.8074149Z                 atol=3,
2025-02-25T14:20:45.8074226Z             )
2025-02-25T14:20:45.8074337Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8074417Z                 data.y,
2025-02-25T14:20:45.8074542Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8074637Z                 rtol=0.3,
2025-02-25T14:20:45.8074728Z                 atol=3,
2025-02-25T14:20:45.8074802Z             )
2025-02-25T14:20:45.8074814Z 
2025-02-25T14:20:45.8074981Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8075110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8075134Z 
2025-02-25T14:20:45.8075550Z args = (<function assert_allclose.<locals>.compare at 0x7f89f61afc40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8075660Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-25T14:20:45.8075910Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8075915Z 
2025-02-25T14:20:45.8076009Z     @wraps(func)
2025-02-25T14:20:45.8076104Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8076211Z         with self._recreate_cm():
2025-02-25T14:20:45.8076443Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8076556Z E           AssertionError: 
2025-02-25T14:20:45.8076671Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8076761Z E           
2025-02-25T14:20:45.8076876Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8076970Z E           Max absolute difference: 22
2025-02-25T14:20:45.8077087Z E           Max relative difference: 0.8
2025-02-25T14:20:45.8077230Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8077334Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8077466Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8077571Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8077575Z 
2025-02-25T14:20:45.8077783Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8078015Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-25T14:20:45.8078020Z 
2025-02-25T14:20:45.8078399Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f440>
2025-02-25T14:20:45.8078716Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a0acd5a60>
2025-02-25T14:20:45.8078830Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8078981Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8079139Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8079352Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8079619Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-25T14:20:45.8079623Z 
2025-02-25T14:20:45.8079727Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8080011Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8080161Z     ):
2025-02-25T14:20:45.8080260Z         """
2025-02-25T14:20:45.8080412Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8080484Z     
2025-02-25T14:20:45.8080797Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8080868Z     
2025-02-25T14:20:45.8080956Z         Parameters:
2025-02-25T14:20:45.8081039Z         ----------
2025-02-25T14:20:45.8081215Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8081355Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8081473Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8081564Z         """
2025-02-25T14:20:45.8081669Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8081791Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8081972Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8082065Z     
2025-02-25T14:20:45.8082218Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8082337Z             expected_values = expected.get(
2025-02-25T14:20:45.8082433Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8082542Z             ).values.flatten()
2025-02-25T14:20:45.8082689Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8082778Z     
2025-02-25T14:20:45.8082929Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8083033Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8083147Z                     expected_values,
2025-02-25T14:20:45.8083237Z                     actual_values,
2025-02-25T14:20:45.8083330Z                     rtol=0.3,
2025-02-25T14:20:45.8083414Z                     atol=3,
2025-02-25T14:20:45.8083503Z                 )
2025-02-25T14:20:45.8083507Z 
2025-02-25T14:20:45.8083658Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-25T14:20:45.8083975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8083986Z 
2025-02-25T14:20:45.8084409Z args = (<function assert_allclose.<locals>.compare at 0x7f89f61aef20>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8084511Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8084765Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8084770Z 
2025-02-25T14:20:45.8084849Z     @wraps(func)
2025-02-25T14:20:45.8084959Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8085050Z         with self._recreate_cm():
2025-02-25T14:20:45.8085156Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8085247Z E           AssertionError: 
2025-02-25T14:20:45.8085371Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8085480Z E           
2025-02-25T14:20:45.8085581Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8085841Z E           Max absolute difference: 34
2025-02-25T14:20:45.8085953Z E           Max relative difference: 0.71428571
2025-02-25T14:20:45.8086113Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8086212Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8086362Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8086453Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8086457Z 
2025-02-25T14:20:45.8086738Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8087009Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8087285Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8087576Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8087737Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8088054Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8088261Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-25T14:20:45.8088265Z 
2025-02-25T14:20:45.8088544Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f8a1c34f500>
2025-02-25T14:20:45.8088861Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8a062ac200>
2025-02-25T14:20:45.8088979Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8089145Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-25T14:20:45.8089286Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-25T14:20:45.8089515Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f89e2863fe0>)
2025-02-25T14:20:45.8089771Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-25T14:20:45.8089776Z 
2025-02-25T14:20:45.8089879Z     def test_generate_plot_ply(
2025-02-25T14:20:45.8090055Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8090151Z     ):
2025-02-25T14:20:45.8090232Z         """
2025-02-25T14:20:45.8090389Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-25T14:20:45.8090479Z     
2025-02-25T14:20:45.8090804Z         Compares generated plot data with regression data.
2025-02-25T14:20:45.8090898Z     
2025-02-25T14:20:45.8090994Z         Parameters:
2025-02-25T14:20:45.8091080Z         ----------
2025-02-25T14:20:45.8091258Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-25T14:20:45.8091404Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-25T14:20:45.8091677Z         request: Pytest's request fixture.
2025-02-25T14:20:45.8091767Z         """
2025-02-25T14:20:45.8091877Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8091986Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8092181Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8092253Z     
2025-02-25T14:20:45.8092423Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-25T14:20:45.8092542Z             expected_values = expected.get(
2025-02-25T14:20:45.8092640Z                 "plot_data_hdf/" + item
2025-02-25T14:20:45.8092753Z             ).values.flatten()
2025-02-25T14:20:45.8092894Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-25T14:20:45.8092979Z     
2025-02-25T14:20:45.8093115Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-25T14:20:45.8093237Z                 np.testing.assert_allclose(
2025-02-25T14:20:45.8093338Z                     expected_values,
2025-02-25T14:20:45.8093438Z                     actual_values,
2025-02-25T14:20:45.8093644Z                     rtol=0.3,
2025-02-25T14:20:45.8093768Z                     atol=3,
2025-02-25T14:20:45.8093900Z                 )
2025-02-25T14:20:45.8094050Z             else:
2025-02-25T14:20:45.8094208Z                 assert np.array_equal(expected_values, actual_values)
2025-02-25T14:20:45.8094312Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8094438Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8094526Z             if data.stackgroup:
2025-02-25T14:20:45.8094632Z                 assert (
2025-02-25T14:20:45.8094723Z                     data.stackgroup
2025-02-25T14:20:45.8094830Z                     == getattr(
2025-02-25T14:20:45.8094948Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8095063Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8095159Z                     ).decode()
2025-02-25T14:20:45.8095255Z                 )
2025-02-25T14:20:45.8095345Z             if data.name:
2025-02-25T14:20:45.8095445Z                 assert (
2025-02-25T14:20:45.8095541Z                     data.name
2025-02-25T14:20:45.8095623Z                     == getattr(
2025-02-25T14:20:45.8095752Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8095859Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8095954Z                     ).decode()
2025-02-25T14:20:45.8096029Z                 )
2025-02-25T14:20:45.8096141Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8096219Z                 data.x,
2025-02-25T14:20:45.8096353Z                 expected.get(group + "x").values.flatten(),
2025-02-25T14:20:45.8096437Z                 rtol=0.3,
2025-02-25T14:20:45.8096530Z                 atol=3,
2025-02-25T14:20:45.8096614Z             )
2025-02-25T14:20:45.8096736Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8096829Z                 data.y,
2025-02-25T14:20:45.8096941Z                 expected.get(group + "y").values.flatten(),
2025-02-25T14:20:45.8097045Z                 rtol=0.3,
2025-02-25T14:20:45.8097120Z                 atol=3,
2025-02-25T14:20:45.8097207Z             )
2025-02-25T14:20:45.8097212Z 
2025-02-25T14:20:45.8097367Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-25T14:20:45.8097502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8097507Z 
2025-02-25T14:20:45.8097923Z args = (<function assert_allclose.<locals>.compare at 0x7f89f615f560>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8098028Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-25T14:20:45.8098280Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-25T14:20:45.8098416Z 
2025-02-25T14:20:45.8098503Z     @wraps(func)
2025-02-25T14:20:45.8098611Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8098708Z         with self._recreate_cm():
2025-02-25T14:20:45.8098820Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8098911Z E           AssertionError: 
2025-02-25T14:20:45.8099040Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8099122Z E           
2025-02-25T14:20:45.8099239Z E           Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8099335Z E           Max absolute difference: 34
2025-02-25T14:20:45.8099450Z E           Max relative difference: 0.65
2025-02-25T14:20:45.8099604Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8099700Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8099855Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8099957Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8099961Z 
2025-02-25T14:20:45.8100186Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8100437Z ---------------------------- Captured stdout setup -----------------------------
2025-02-25T14:20:45.8100926Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-25T14:20:45.8101292Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-25T14:20:45.8101469Z ------------------------------ Captured log setup ------------------------------
2025-02-25T14:20:45.8101830Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-25T14:20:45.8102059Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-25T14:20:45.8102063Z 
2025-02-25T14:20:45.8102366Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c352e10>
2025-02-25T14:20:45.8102685Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8103029Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a146cfa70>
2025-02-25T14:20:45.8103326Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-25T14:20:45.8103332Z 
2025-02-25T14:20:45.8103431Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8103517Z         self,
2025-02-25T14:20:45.8103616Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8103721Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8103798Z         request,
2025-02-25T14:20:45.8103880Z     ):
2025-02-25T14:20:45.8103991Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8104262Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8104431Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8104644Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8104754Z             plot_object = getattr(
2025-02-25T14:20:45.8104891Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8104980Z             )
2025-02-25T14:20:45.8105086Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8105268Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8105380Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8105493Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8105625Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8105713Z                 )
2025-02-25T14:20:45.8105717Z 
2025-02-25T14:20:45.8105883Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8106150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8106162Z 
2025-02-25T14:20:45.8106654Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5c60>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8106761Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8107015Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8107021Z 
2025-02-25T14:20:45.8107094Z     @wraps(func)
2025-02-25T14:20:45.8107199Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8107303Z         with self._recreate_cm():
2025-02-25T14:20:45.8107395Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8107493Z E           AssertionError: 
2025-02-25T14:20:45.8107609Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8107698Z E           
2025-02-25T14:20:45.8107806Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8107919Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8108134Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8108301Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8108389Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8108544Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8108643Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8108647Z 
2025-02-25T14:20:45.8108856Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8109089Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-25T14:20:45.8109094Z 
2025-02-25T14:20:45.8109362Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353530>
2025-02-25T14:20:45.8109692Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8110027Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0d40>
2025-02-25T14:20:45.8110315Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-25T14:20:45.8110321Z 
2025-02-25T14:20:45.8110429Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8110663Z         self,
2025-02-25T14:20:45.8110820Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8110917Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8111010Z         request,
2025-02-25T14:20:45.8111088Z     ):
2025-02-25T14:20:45.8111204Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8111391Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8111503Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8111691Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8111798Z             plot_object = getattr(
2025-02-25T14:20:45.8111946Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8112022Z             )
2025-02-25T14:20:45.8112142Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8112305Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8112423Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8112525Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8112664Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8112740Z                 )
2025-02-25T14:20:45.8112744Z 
2025-02-25T14:20:45.8112907Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8113039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8113196Z 
2025-02-25T14:20:45.8113679Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aaf6480>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8113798Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8114205Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8114212Z 
2025-02-25T14:20:45.8114315Z     @wraps(func)
2025-02-25T14:20:45.8114404Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8114510Z         with self._recreate_cm():
2025-02-25T14:20:45.8114601Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8114700Z E           AssertionError: 
2025-02-25T14:20:45.8114821Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8114901Z E           
2025-02-25T14:20:45.8115019Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8115132Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8115256Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8115551Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8115655Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8115806Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8115902Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8115906Z 
2025-02-25T14:20:45.8116123Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8116348Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-25T14:20:45.8116353Z 
2025-02-25T14:20:45.8116638Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c3539b0>
2025-02-25T14:20:45.8116946Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8117293Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f40f8260>
2025-02-25T14:20:45.8117573Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-25T14:20:45.8117593Z 
2025-02-25T14:20:45.8117690Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8117773Z         self,
2025-02-25T14:20:45.8117874Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8117977Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8118053Z         request,
2025-02-25T14:20:45.8118140Z     ):
2025-02-25T14:20:45.8118248Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8118444Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8118534Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8118723Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8118818Z             plot_object = getattr(
2025-02-25T14:20:45.8118960Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8119055Z             )
2025-02-25T14:20:45.8119154Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8119329Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8119439Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8119551Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8119689Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8119779Z                 )
2025-02-25T14:20:45.8119784Z 
2025-02-25T14:20:45.8119937Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8120061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8120065Z 
2025-02-25T14:20:45.8120655Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa83920>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8120922Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8121193Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8121198Z 
2025-02-25T14:20:45.8121280Z     @wraps(func)
2025-02-25T14:20:45.8121377Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8121468Z         with self._recreate_cm():
2025-02-25T14:20:45.8121571Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8121666Z E           AssertionError: 
2025-02-25T14:20:45.8121789Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8121876Z E           
2025-02-25T14:20:45.8121982Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8122104Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8122208Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8122376Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8122591Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8122756Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8122847Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8122851Z 
2025-02-25T14:20:45.8123082Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8123323Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-25T14:20:45.8123328Z 
2025-02-25T14:20:45.8123606Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353ad0>
2025-02-25T14:20:45.8123939Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8124435Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab2240>
2025-02-25T14:20:45.8124755Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-25T14:20:45.8124760Z 
2025-02-25T14:20:45.8124858Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8124952Z         self,
2025-02-25T14:20:45.8125062Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8125156Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8125247Z         request,
2025-02-25T14:20:45.8125322Z     ):
2025-02-25T14:20:45.8125438Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8125620Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8125724Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8125903Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8126006Z             plot_object = getattr(
2025-02-25T14:20:45.8126151Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8126229Z             )
2025-02-25T14:20:45.8126344Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8126513Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8126634Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8126733Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8126869Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8126948Z                 )
2025-02-25T14:20:45.8126952Z 
2025-02-25T14:20:45.8127115Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8127236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8127240Z 
2025-02-25T14:20:45.8127738Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa82c00>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-25T14:20:45.8127976Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8128229Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8128234Z 
2025-02-25T14:20:45.8128326Z     @wraps(func)
2025-02-25T14:20:45.8128417Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8128522Z         with self._recreate_cm():
2025-02-25T14:20:45.8128613Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8128713Z E           AssertionError: 
2025-02-25T14:20:45.8128825Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8128918Z E           
2025-02-25T14:20:45.8129021Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8129139Z E           Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8129252Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8129405Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8129519Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8129756Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8129862Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8129868Z 
2025-02-25T14:20:45.8130074Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8130313Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-25T14:20:45.8130317Z 
2025-02-25T14:20:45.8130730Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353b90>
2025-02-25T14:20:45.8131047Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8131395Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ec3f2fc0>
2025-02-25T14:20:45.8131684Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-25T14:20:45.8131698Z 
2025-02-25T14:20:45.8131809Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8131887Z         self,
2025-02-25T14:20:45.8132005Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8132097Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8132186Z         request,
2025-02-25T14:20:45.8132269Z     ):
2025-02-25T14:20:45.8132376Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8132577Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8132669Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8132858Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8132993Z             plot_object = getattr(
2025-02-25T14:20:45.8133239Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8133341Z             )
2025-02-25T14:20:45.8133461Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8133634Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8133758Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8133869Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8133998Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8134081Z                 )
2025-02-25T14:20:45.8134085Z 
2025-02-25T14:20:45.8134235Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8134361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8134366Z 
2025-02-25T14:20:45.8134839Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa909a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8135105Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8135366Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8135378Z 
2025-02-25T14:20:45.8135454Z     @wraps(func)
2025-02-25T14:20:45.8135550Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8135641Z         with self._recreate_cm():
2025-02-25T14:20:45.8135741Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8135832Z E           AssertionError: 
2025-02-25T14:20:45.8135949Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8136028Z E           
2025-02-25T14:20:45.8136141Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8136242Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8136354Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8136520Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8136619Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8136780Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8136980Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8136985Z 
2025-02-25T14:20:45.8137201Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8137421Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-25T14:20:45.8137426Z 
2025-02-25T14:20:45.8137707Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353c50>
2025-02-25T14:20:45.8138030Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8138356Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ead373e0>
2025-02-25T14:20:45.8138646Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-25T14:20:45.8138661Z 
2025-02-25T14:20:45.8138757Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8138852Z         self,
2025-02-25T14:20:45.8138953Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8139062Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8139138Z         request,
2025-02-25T14:20:45.8139223Z     ):
2025-02-25T14:20:45.8139340Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8139524Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8139618Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8139791Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8139889Z             plot_object = getattr(
2025-02-25T14:20:45.8140016Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8140096Z             )
2025-02-25T14:20:45.8140196Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8140370Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8140487Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8140793Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8140940Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8141009Z                 )
2025-02-25T14:20:45.8141014Z 
2025-02-25T14:20:45.8141175Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8141301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8141306Z 
2025-02-25T14:20:45.8141796Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f60c0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8141908Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8142332Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8142342Z 
2025-02-25T14:20:45.8142428Z     @wraps(func)
2025-02-25T14:20:45.8142519Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8142622Z         with self._recreate_cm():
2025-02-25T14:20:45.8142714Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8142879Z E           AssertionError: 
2025-02-25T14:20:45.8143068Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8143161Z E           
2025-02-25T14:20:45.8143267Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8143383Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8143487Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8143653Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8143754Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8143900Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8144004Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8144143Z 
2025-02-25T14:20:45.8144360Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8144591Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-25T14:20:45.8144596Z 
2025-02-25T14:20:45.8144868Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353d10>
2025-02-25T14:20:45.8145204Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8145543Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a143d9b80>
2025-02-25T14:20:45.8145829Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-25T14:20:45.8145834Z 
2025-02-25T14:20:45.8145952Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8146030Z         self,
2025-02-25T14:20:45.8146138Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8146244Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8146342Z         request,
2025-02-25T14:20:45.8146415Z     ):
2025-02-25T14:20:45.8146547Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8146730Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8146837Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8147038Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8147130Z             plot_object = getattr(
2025-02-25T14:20:45.8147276Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8147353Z             )
2025-02-25T14:20:45.8147468Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8147637Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8147775Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8147881Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8148026Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8148115Z                 )
2025-02-25T14:20:45.8148123Z 
2025-02-25T14:20:45.8148273Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8148416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8148421Z 
2025-02-25T14:20:45.8148898Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa80860>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8149023Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8149273Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8149389Z 
2025-02-25T14:20:45.8149472Z     @wraps(func)
2025-02-25T14:20:45.8149571Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8149669Z         with self._recreate_cm():
2025-02-25T14:20:45.8149771Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8149862Z E           AssertionError: 
2025-02-25T14:20:45.8149988Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8150063Z E           
2025-02-25T14:20:45.8150180Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8150283Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8150391Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8150740Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8150857Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8151021Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8151119Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8151124Z 
2025-02-25T14:20:45.8151349Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8151830Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-25T14:20:45.8151836Z 
2025-02-25T14:20:45.8152126Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353dd0>
2025-02-25T14:20:45.8152442Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8152962Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0c50>
2025-02-25T14:20:45.8153266Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-25T14:20:45.8153272Z 
2025-02-25T14:20:45.8153373Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8153462Z         self,
2025-02-25T14:20:45.8153574Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8153686Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8153765Z         request,
2025-02-25T14:20:45.8153855Z     ):
2025-02-25T14:20:45.8153967Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8154164Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8154256Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8154449Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8154551Z             plot_object = getattr(
2025-02-25T14:20:45.8154688Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8154769Z             )
2025-02-25T14:20:45.8154878Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8155051Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8155164Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8155297Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8155429Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8155530Z                 )
2025-02-25T14:20:45.8155534Z 
2025-02-25T14:20:45.8155698Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8155820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8155824Z 
2025-02-25T14:20:45.8156314Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa81da0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-25T14:20:45.8156421Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8156683Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8156688Z 
2025-02-25T14:20:45.8156768Z     @wraps(func)
2025-02-25T14:20:45.8157044Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8157156Z         with self._recreate_cm():
2025-02-25T14:20:45.8157266Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8157375Z E           AssertionError: 
2025-02-25T14:20:45.8157494Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8157591Z E           
2025-02-25T14:20:45.8157695Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8157813Z E           Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8157919Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8158083Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8158176Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8158334Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8158431Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8158444Z 
2025-02-25T14:20:45.8158645Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8158978Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-25T14:20:45.8158983Z 
2025-02-25T14:20:45.8159252Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353e90>
2025-02-25T14:20:45.8159575Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8159905Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab3230>
2025-02-25T14:20:45.8160194Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-25T14:20:45.8160201Z 
2025-02-25T14:20:45.8160310Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8160390Z         self,
2025-02-25T14:20:45.8160627Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8160735Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8160824Z         request,
2025-02-25T14:20:45.8160897Z     ):
2025-02-25T14:20:45.8161020Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8161203Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8161306Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8161484Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8161587Z             plot_object = getattr(
2025-02-25T14:20:45.8161733Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8161807Z             )
2025-02-25T14:20:45.8161921Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8162219Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8162354Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8162458Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8162615Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8162698Z                 )
2025-02-25T14:20:45.8162702Z 
2025-02-25T14:20:45.8162858Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8162971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8162986Z 
2025-02-25T14:20:45.8163464Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa81ee0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8163584Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8163840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8163846Z 
2025-02-25T14:20:45.8163949Z     @wraps(func)
2025-02-25T14:20:45.8164039Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8164300Z         with self._recreate_cm():
2025-02-25T14:20:45.8164390Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8164490Z E           AssertionError: 
2025-02-25T14:20:45.8164632Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8164713Z E           
2025-02-25T14:20:45.8164838Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8164940Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8165060Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8165209Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8165317Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8165463Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8165564Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8165569Z 
2025-02-25T14:20:45.8165789Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8166024Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-25T14:20:45.8166173Z 
2025-02-25T14:20:45.8166468Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353f50>
2025-02-25T14:20:45.8166774Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8167126Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a089e1550>
2025-02-25T14:20:45.8167412Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-25T14:20:45.8167426Z 
2025-02-25T14:20:45.8167523Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8167610Z         self,
2025-02-25T14:20:45.8167712Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8167822Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8167897Z         request,
2025-02-25T14:20:45.8167992Z     ):
2025-02-25T14:20:45.8168097Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8168304Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8168395Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8168585Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8168680Z             plot_object = getattr(
2025-02-25T14:20:45.8168826Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8168930Z             )
2025-02-25T14:20:45.8169038Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8169216Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8169328Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8169440Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8169574Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8169680Z                 )
2025-02-25T14:20:45.8169685Z 
2025-02-25T14:20:45.8169835Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8169985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8169990Z 
2025-02-25T14:20:45.8170476Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa934c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8170716Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8171071Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8171077Z 
2025-02-25T14:20:45.8171157Z     @wraps(func)
2025-02-25T14:20:45.8171260Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8171356Z         with self._recreate_cm():
2025-02-25T14:20:45.8171527Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8171845Z E           AssertionError: 
2025-02-25T14:20:45.8171977Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8172073Z E           
2025-02-25T14:20:45.8172192Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8172321Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8172427Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8172602Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8172694Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8172864Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8172953Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8172958Z 
2025-02-25T14:20:45.8173183Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8173428Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-25T14:20:45.8173442Z 
2025-02-25T14:20:45.8173722Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c3b0>
2025-02-25T14:20:45.8174200Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8174535Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e15ec170>
2025-02-25T14:20:45.8174837Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-25T14:20:45.8174842Z 
2025-02-25T14:20:45.8174946Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8175041Z         self,
2025-02-25T14:20:45.8175156Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8175252Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8175336Z         request,
2025-02-25T14:20:45.8175410Z     ):
2025-02-25T14:20:45.8175535Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8175734Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8175849Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8176030Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8176140Z             plot_object = getattr(
2025-02-25T14:20:45.8176272Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8176369Z             )
2025-02-25T14:20:45.8176469Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8176646Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8176770Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8176875Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8177022Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8177097Z                 )
2025-02-25T14:20:45.8177102Z 
2025-02-25T14:20:45.8177272Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8177392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8177405Z 
2025-02-25T14:20:45.8177895Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa807c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8178022Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8178404Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8178413Z 
2025-02-25T14:20:45.8178518Z     @wraps(func)
2025-02-25T14:20:45.8178610Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8178714Z         with self._recreate_cm():
2025-02-25T14:20:45.8178809Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8178909Z E           AssertionError: 
2025-02-25T14:20:45.8179134Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8179223Z E           
2025-02-25T14:20:45.8179328Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8179454Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8179568Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8179720Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8179836Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8179984Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8180093Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8180097Z 
2025-02-25T14:20:45.8180297Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8180708Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-25T14:20:45.8180716Z 
2025-02-25T14:20:45.8181015Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31da60>
2025-02-25T14:20:45.8181337Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8181823Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ec3f2720>
2025-02-25T14:20:45.8182118Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-25T14:20:45.8182123Z 
2025-02-25T14:20:45.8182237Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8182318Z         self,
2025-02-25T14:20:45.8182428Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8182520Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8182610Z         request,
2025-02-25T14:20:45.8182693Z     ):
2025-02-25T14:20:45.8182802Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8183000Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8183097Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8183308Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8183405Z             plot_object = getattr(
2025-02-25T14:20:45.8183549Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8183624Z             )
2025-02-25T14:20:45.8183738Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8183899Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8184024Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8184132Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8184276Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8184369Z                 )
2025-02-25T14:20:45.8184374Z 
2025-02-25T14:20:45.8184522Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8184665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8184669Z 
2025-02-25T14:20:45.8185150Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa805e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-25T14:20:45.8185272Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8185538Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8185544Z 
2025-02-25T14:20:45.8185626Z     @wraps(func)
2025-02-25T14:20:45.8185724Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8185820Z         with self._recreate_cm():
2025-02-25T14:20:45.8185920Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8186007Z E           AssertionError: 
2025-02-25T14:20:45.8186135Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8186220Z E           
2025-02-25T14:20:45.8186473Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8186584Z E           Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8186705Z E           Max relative difference: 4.76021355
2025-02-25T14:20:45.8186866Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8186954Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8187116Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8187208Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8187212Z 
2025-02-25T14:20:45.8187428Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8187653Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-25T14:20:45.8187658Z 
2025-02-25T14:20:45.8187990Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31f8f0>
2025-02-25T14:20:45.8188445Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8188881Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e31c1d00>
2025-02-25T14:20:45.8189178Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-25T14:20:45.8189185Z 
2025-02-25T14:20:45.8189280Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8189369Z         self,
2025-02-25T14:20:45.8189470Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8189573Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8189652Z         request,
2025-02-25T14:20:45.8189733Z     ):
2025-02-25T14:20:45.8189855Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8190043Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8190150Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8190339Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8190456Z             plot_object = getattr(
2025-02-25T14:20:45.8190785Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8190881Z             )
2025-02-25T14:20:45.8190986Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8191169Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8191283Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8191401Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8191542Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8191621Z                 )
2025-02-25T14:20:45.8191625Z 
2025-02-25T14:20:45.8191788Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8191903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8191913Z 
2025-02-25T14:20:45.8192396Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1ad40>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8192508Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8192770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8192775Z 
2025-02-25T14:20:45.8192862Z     @wraps(func)
2025-02-25T14:20:45.8192949Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8193051Z         with self._recreate_cm():
2025-02-25T14:20:45.8193143Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8193243Z E           AssertionError: 
2025-02-25T14:20:45.8193352Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8193438Z E           
2025-02-25T14:20:45.8193538Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8193799Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8193900Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8194081Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8194184Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8194336Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8194442Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8194447Z 
2025-02-25T14:20:45.8194654Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8194891Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-25T14:20:45.8194895Z 
2025-02-25T14:20:45.8195174Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c080>
2025-02-25T14:20:45.8195506Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8195868Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1432bd10>
2025-02-25T14:20:45.8196293Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-25T14:20:45.8196299Z 
2025-02-25T14:20:45.8196421Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8196504Z         self,
2025-02-25T14:20:45.8196628Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8196727Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8196822Z         request,
2025-02-25T14:20:45.8196901Z     ):
2025-02-25T14:20:45.8197039Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8197229Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8197330Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8197530Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8197699Z             plot_object = getattr(
2025-02-25T14:20:45.8197947Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8198037Z             )
2025-02-25T14:20:45.8198166Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8198328Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8198449Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8198550Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8198691Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8198773Z                 )
2025-02-25T14:20:45.8198777Z 
2025-02-25T14:20:45.8198926Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8199068Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8199073Z 
2025-02-25T14:20:45.8199542Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa199e0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8199688Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8199943Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8199968Z 
2025-02-25T14:20:45.8200050Z     @wraps(func)
2025-02-25T14:20:45.8200150Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8200250Z         with self._recreate_cm():
2025-02-25T14:20:45.8200349Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8200442Z E           AssertionError: 
2025-02-25T14:20:45.8200745Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8200836Z E           
2025-02-25T14:20:45.8200951Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8201047Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8201321Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8201475Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8201584Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8201743Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8201828Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8201832Z 
2025-02-25T14:20:45.8202037Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8202265Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-25T14:20:45.8202270Z 
2025-02-25T14:20:45.8202547Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c140>
2025-02-25T14:20:45.8202871Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8203209Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1472d730>
2025-02-25T14:20:45.8203627Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-25T14:20:45.8203633Z 
2025-02-25T14:20:45.8203724Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8203817Z         self,
2025-02-25T14:20:45.8203916Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8204024Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8204103Z         request,
2025-02-25T14:20:45.8204206Z     ):
2025-02-25T14:20:45.8204323Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8204532Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8204627Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8204818Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8204923Z             plot_object = getattr(
2025-02-25T14:20:45.8205061Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8205164Z             )
2025-02-25T14:20:45.8205272Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8205451Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8205558Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8205678Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8205811Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8205908Z                 )
2025-02-25T14:20:45.8205914Z 
2025-02-25T14:20:45.8206078Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8206198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8206202Z 
2025-02-25T14:20:45.8206706Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5620>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8206909Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8207221Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8207227Z 
2025-02-25T14:20:45.8207311Z     @wraps(func)
2025-02-25T14:20:45.8207420Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8207535Z         with self._recreate_cm():
2025-02-25T14:20:45.8207628Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8207727Z E           AssertionError: 
2025-02-25T14:20:45.8207838Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8207913Z E           
2025-02-25T14:20:45.8208019Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8208125Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8208224Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8208484Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8208571Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8208726Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8208817Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8208822Z 
2025-02-25T14:20:45.8209026Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8209258Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-25T14:20:45.8209262Z 
2025-02-25T14:20:45.8209528Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c260>
2025-02-25T14:20:45.8209840Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>
2025-02-25T14:20:45.8210172Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e9cebcb0>
2025-02-25T14:20:45.8210478Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-25T14:20:45.8210802Z 
2025-02-25T14:20:45.8211012Z     def test_calculate_plotting_data(
2025-02-25T14:20:45.8211092Z         self,
2025-02-25T14:20:45.8211219Z         plotter_calculate_plotting_data,
2025-02-25T14:20:45.8211312Z         calculate_plotting_data_hdf,
2025-02-25T14:20:45.8211406Z         request,
2025-02-25T14:20:45.8211479Z     ):
2025-02-25T14:20:45.8211607Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8211800Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-25T14:20:45.8211911Z         group = "plot_data_hdf/"
2025-02-25T14:20:45.8212093Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-25T14:20:45.8212197Z             plot_object = getattr(
2025-02-25T14:20:45.8212338Z                 plotter_calculate_plotting_data, attribute_name
2025-02-25T14:20:45.8212423Z             )
2025-02-25T14:20:45.8212534Z             if attribute_type == "attributes_np":
2025-02-25T14:20:45.8212711Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-25T14:20:45.8212838Z                     plot_object = plot_object.cgs.value
2025-02-25T14:20:45.8212937Z >               np.testing.assert_allclose(
2025-02-25T14:20:45.8213074Z                     plot_object, expected.get(group + attribute_name)
2025-02-25T14:20:45.8213148Z                 )
2025-02-25T14:20:45.8213152Z 
2025-02-25T14:20:45.8213312Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-25T14:20:45.8213432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8213454Z 
2025-02-25T14:20:45.8214091Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa82660>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-25T14:20:45.8214220Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8214468Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8214481Z 
2025-02-25T14:20:45.8214572Z     @wraps(func)
2025-02-25T14:20:45.8214661Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8214766Z         with self._recreate_cm():
2025-02-25T14:20:45.8214859Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8214959Z E           AssertionError: 
2025-02-25T14:20:45.8215077Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8215152Z E           
2025-02-25T14:20:45.8215266Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8215367Z E           Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8215478Z E           Max relative difference: 178.93768705
2025-02-25T14:20:45.8215626Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8215878Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8216026Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8216136Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8216141Z 
2025-02-25T14:20:45.8216358Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8216563Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-25T14:20:45.8216568Z 
2025-02-25T14:20:45.8216845Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c5f0>
2025-02-25T14:20:45.8217168Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ecacab10>
2025-02-25T14:20:45.8217284Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8217375Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8217494Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8217661Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8217891Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8218260Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-25T14:20:45.8218266Z 
2025-02-25T14:20:45.8218357Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8218549Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8218619Z     ):
2025-02-25T14:20:45.8218729Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8218836Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8219017Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8219082Z     
2025-02-25T14:20:45.8219197Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8219304Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8219461Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8219581Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8219658Z             )
2025-02-25T14:20:45.8219733Z     
2025-02-25T14:20:45.8219837Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8219952Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8220049Z             if data.stackgroup:
2025-02-25T14:20:45.8220140Z                 assert (
2025-02-25T14:20:45.8220231Z                     data.stackgroup
2025-02-25T14:20:45.8220327Z                     == getattr(
2025-02-25T14:20:45.8220443Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8220765Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8220878Z                     ).decode()
2025-02-25T14:20:45.8220957Z                 )
2025-02-25T14:20:45.8221057Z             if data.name:
2025-02-25T14:20:45.8221139Z                 assert (
2025-02-25T14:20:45.8221246Z                     data.name
2025-02-25T14:20:45.8221332Z                     == getattr(
2025-02-25T14:20:45.8221464Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8221567Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8221661Z                     ).decode()
2025-02-25T14:20:45.8221739Z                 )
2025-02-25T14:20:45.8221853Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8221988Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8222082Z             )
2025-02-25T14:20:45.8222190Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8222326Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8222419Z             )
2025-02-25T14:20:45.8222423Z 
2025-02-25T14:20:45.8222572Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8222706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8222877Z 
2025-02-25T14:20:45.8223355Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062768e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8223488Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8223754Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8223760Z 
2025-02-25T14:20:45.8223837Z     @wraps(func)
2025-02-25T14:20:45.8223939Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8224035Z         with self._recreate_cm():
2025-02-25T14:20:45.8224143Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8224234Z E           AssertionError: 
2025-02-25T14:20:45.8224363Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8224438Z E           
2025-02-25T14:20:45.8224559Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8224679Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8224796Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8225123Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8225221Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8225388Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8225478Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8225482Z 
2025-02-25T14:20:45.8225713Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8226065Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-25T14:20:45.8226074Z 
2025-02-25T14:20:45.8226398Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31c6b0>
2025-02-25T14:20:45.8226734Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89eab4aed0>
2025-02-25T14:20:45.8226843Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8226955Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8227067Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8227186Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8227401Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8227665Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-25T14:20:45.8227670Z 
2025-02-25T14:20:45.8227761Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8227951Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8228038Z     ):
2025-02-25T14:20:45.8228138Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8228262Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8228440Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8228533Z     
2025-02-25T14:20:45.8228645Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8228769Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8228942Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8229073Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8229149Z             )
2025-02-25T14:20:45.8229234Z     
2025-02-25T14:20:45.8229350Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8229465Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8229567Z             if data.stackgroup:
2025-02-25T14:20:45.8229646Z                 assert (
2025-02-25T14:20:45.8229751Z                     data.stackgroup
2025-02-25T14:20:45.8229832Z                     == getattr(
2025-02-25T14:20:45.8229956Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8230195Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8230293Z                     ).decode()
2025-02-25T14:20:45.8230380Z                 )
2025-02-25T14:20:45.8230488Z             if data.name:
2025-02-25T14:20:45.8230769Z                 assert (
2025-02-25T14:20:45.8230871Z                     data.name
2025-02-25T14:20:45.8230949Z                     == getattr(
2025-02-25T14:20:45.8231079Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8231186Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8231273Z                     ).decode()
2025-02-25T14:20:45.8231358Z                 )
2025-02-25T14:20:45.8231466Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8231613Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8231691Z             )
2025-02-25T14:20:45.8231802Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8231931Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8232028Z             )
2025-02-25T14:20:45.8232032Z 
2025-02-25T14:20:45.8232321Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8232449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8232454Z 
2025-02-25T14:20:45.8232957Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06277600>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8233065Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8233347Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8233352Z 
2025-02-25T14:20:45.8233431Z     @wraps(func)
2025-02-25T14:20:45.8233540Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8233635Z         with self._recreate_cm():
2025-02-25T14:20:45.8233749Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8233866Z E           AssertionError: 
2025-02-25T14:20:45.8233976Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8234076Z E           
2025-02-25T14:20:45.8234180Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8234307Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8234411Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8234602Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8234702Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8234866Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8234957Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8234982Z 
2025-02-25T14:20:45.8235197Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8235425Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-25T14:20:45.8235437Z 
2025-02-25T14:20:45.8235722Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cad0>
2025-02-25T14:20:45.8236072Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f3ce13a0>
2025-02-25T14:20:45.8236179Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8236290Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8236399Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8236517Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8236751Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8237000Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-25T14:20:45.8237005Z 
2025-02-25T14:20:45.8237111Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8237286Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8237507Z     ):
2025-02-25T14:20:45.8237609Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8237733Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8237916Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8238071Z     
2025-02-25T14:20:45.8238281Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8238387Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8238559Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8238679Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8238778Z             )
2025-02-25T14:20:45.8238854Z     
2025-02-25T14:20:45.8238977Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8239091Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8239199Z             if data.stackgroup:
2025-02-25T14:20:45.8239290Z                 assert (
2025-02-25T14:20:45.8239406Z                     data.stackgroup
2025-02-25T14:20:45.8239608Z                     == getattr(
2025-02-25T14:20:45.8239744Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8239862Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8239946Z                     ).decode()
2025-02-25T14:20:45.8240034Z                 )
2025-02-25T14:20:45.8240119Z             if data.name:
2025-02-25T14:20:45.8240218Z                 assert (
2025-02-25T14:20:45.8240298Z                     data.name
2025-02-25T14:20:45.8240398Z                     == getattr(
2025-02-25T14:20:45.8240608Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8240730Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8240816Z                     ).decode()
2025-02-25T14:20:45.8240912Z                 )
2025-02-25T14:20:45.8241009Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8241176Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8241267Z             )
2025-02-25T14:20:45.8241360Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8241501Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8241579Z             )
2025-02-25T14:20:45.8241584Z 
2025-02-25T14:20:45.8241747Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8241871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8241877Z 
2025-02-25T14:20:45.8242370Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06277240>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8242487Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8242742Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8242751Z 
2025-02-25T14:20:45.8242856Z     @wraps(func)
2025-02-25T14:20:45.8242952Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8243062Z         with self._recreate_cm():
2025-02-25T14:20:45.8243157Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8243263Z E           AssertionError: 
2025-02-25T14:20:45.8243379Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8243474Z E           
2025-02-25T14:20:45.8243574Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8243696Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8243810Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8243970Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8244067Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8244221Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8244482Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8244487Z 
2025-02-25T14:20:45.8244701Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8244985Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-25T14:20:45.8244993Z 
2025-02-25T14:20:45.8245366Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cbc0>
2025-02-25T14:20:45.8245706Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89efab0680>
2025-02-25T14:20:45.8245821Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8245916Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8246036Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8246140Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8246361Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8246625Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-25T14:20:45.8246769Z 
2025-02-25T14:20:45.8246882Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8247082Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8247170Z     ):
2025-02-25T14:20:45.8247290Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8247399Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8247596Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8247674Z     
2025-02-25T14:20:45.8247796Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8247896Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8248052Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8248167Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8248270Z             )
2025-02-25T14:20:45.8248344Z     
2025-02-25T14:20:45.8248455Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8248587Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8248679Z             if data.stackgroup:
2025-02-25T14:20:45.8248775Z                 assert (
2025-02-25T14:20:45.8248860Z                     data.stackgroup
2025-02-25T14:20:45.8248955Z                     == getattr(
2025-02-25T14:20:45.8249067Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8249187Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8249266Z                     ).decode()
2025-02-25T14:20:45.8249357Z                 )
2025-02-25T14:20:45.8249443Z             if data.name:
2025-02-25T14:20:45.8249539Z                 assert (
2025-02-25T14:20:45.8249630Z                     data.name
2025-02-25T14:20:45.8249732Z                     == getattr(
2025-02-25T14:20:45.8249859Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8249968Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8250069Z                     ).decode()
2025-02-25T14:20:45.8250144Z                 )
2025-02-25T14:20:45.8250261Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8250405Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8250616Z             )
2025-02-25T14:20:45.8250711Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8250850Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8250926Z             )
2025-02-25T14:20:45.8250930Z 
2025-02-25T14:20:45.8251099Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8251232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8251236Z 
2025-02-25T14:20:45.8251712Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051d2d40>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-25T14:20:45.8251991Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8252246Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8252251Z 
2025-02-25T14:20:45.8252351Z     @wraps(func)
2025-02-25T14:20:45.8252437Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8252572Z         with self._recreate_cm():
2025-02-25T14:20:45.8252678Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8252772Z E           AssertionError: 
2025-02-25T14:20:45.8252900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8252977Z E           
2025-02-25T14:20:45.8253090Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8253204Z E           Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8253326Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8253596Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8253762Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8254073Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8254179Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8254183Z 
2025-02-25T14:20:45.8254855Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8255103Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-25T14:20:45.8255108Z 
2025-02-25T14:20:45.8255641Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c353290>
2025-02-25T14:20:45.8256009Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a0c1f9790>
2025-02-25T14:20:45.8256171Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8256355Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8256582Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8256729Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8257039Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8257349Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-25T14:20:45.8257355Z 
2025-02-25T14:20:45.8257532Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8268942Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8269141Z     ):
2025-02-25T14:20:45.8269304Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8269444Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8269656Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8269739Z     
2025-02-25T14:20:45.8269875Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8269994Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8270170Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8270298Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8270390Z             )
2025-02-25T14:20:45.8270469Z     
2025-02-25T14:20:45.8270794Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8270922Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8271028Z             if data.stackgroup:
2025-02-25T14:20:45.8271122Z                 assert (
2025-02-25T14:20:45.8271215Z                     data.stackgroup
2025-02-25T14:20:45.8271306Z                     == getattr(
2025-02-25T14:20:45.8271419Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8271536Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8271627Z                     ).decode()
2025-02-25T14:20:45.8271726Z                 )
2025-02-25T14:20:45.8272015Z             if data.name:
2025-02-25T14:20:45.8272107Z                 assert (
2025-02-25T14:20:45.8272199Z                     data.name
2025-02-25T14:20:45.8272301Z                     == getattr(
2025-02-25T14:20:45.8272419Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8272524Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8272620Z                     ).decode()
2025-02-25T14:20:45.8272699Z                 )
2025-02-25T14:20:45.8272820Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8272959Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8273055Z             )
2025-02-25T14:20:45.8273153Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8273292Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8273369Z             )
2025-02-25T14:20:45.8273374Z 
2025-02-25T14:20:45.8273553Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8273686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8273822Z 
2025-02-25T14:20:45.8274306Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06215940>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8274436Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8274703Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8274709Z 
2025-02-25T14:20:45.8274805Z     @wraps(func)
2025-02-25T14:20:45.8274901Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8275010Z         with self._recreate_cm():
2025-02-25T14:20:45.8275107Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8275220Z E           AssertionError: 
2025-02-25T14:20:45.8275335Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8275436Z E           
2025-02-25T14:20:45.8275554Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8275666Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8275787Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8275947Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8276050Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8276195Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8276292Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8276298Z 
2025-02-25T14:20:45.8276514Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8276740Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-25T14:20:45.8276745Z 
2025-02-25T14:20:45.8277027Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c352810>
2025-02-25T14:20:45.8277355Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ece66090>
2025-02-25T14:20:45.8277477Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8277571Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8277695Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8277802Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8278039Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8278306Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-25T14:20:45.8278312Z 
2025-02-25T14:20:45.8278418Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8278602Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8278677Z     ):
2025-02-25T14:20:45.8278795Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8279013Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8279210Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8279293Z     
2025-02-25T14:20:45.8279432Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8279532Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8279700Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8279831Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8279917Z             )
2025-02-25T14:20:45.8280007Z     
2025-02-25T14:20:45.8280112Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8280234Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8280323Z             if data.stackgroup:
2025-02-25T14:20:45.8280420Z                 assert (
2025-02-25T14:20:45.8280701Z                     data.stackgroup
2025-02-25T14:20:45.8280860Z                     == getattr(
2025-02-25T14:20:45.8280996Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8281115Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8281371Z                     ).decode()
2025-02-25T14:20:45.8281460Z                 )
2025-02-25T14:20:45.8281561Z             if data.name:
2025-02-25T14:20:45.8281640Z                 assert (
2025-02-25T14:20:45.8281729Z                     data.name
2025-02-25T14:20:45.8281810Z                     == getattr(
2025-02-25T14:20:45.8281932Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8282031Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8282126Z                     ).decode()
2025-02-25T14:20:45.8282200Z                 )
2025-02-25T14:20:45.8282319Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8282454Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8282544Z             )
2025-02-25T14:20:45.8282644Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8282783Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8282878Z             )
2025-02-25T14:20:45.8282882Z 
2025-02-25T14:20:45.8283035Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8283166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8283172Z 
2025-02-25T14:20:45.8283643Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06217240>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8283763Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8284007Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8284023Z 
2025-02-25T14:20:45.8284107Z     @wraps(func)
2025-02-25T14:20:45.8284211Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8284312Z         with self._recreate_cm():
2025-02-25T14:20:45.8284417Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8284524Z E           AssertionError: 
2025-02-25T14:20:45.8284652Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8284732Z E           
2025-02-25T14:20:45.8284853Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8284958Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8285079Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8285244Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8285353Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8285523Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8285621Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8285626Z 
2025-02-25T14:20:45.8285845Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8286190Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-25T14:20:45.8286205Z 
2025-02-25T14:20:45.8286492Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cd40>
2025-02-25T14:20:45.8286809Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89e9c0b350>
2025-02-25T14:20:45.8286918Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8287019Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8287122Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8287241Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8287451Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8287718Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-25T14:20:45.8287732Z 
2025-02-25T14:20:45.8287819Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8288008Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8288182Z     ):
2025-02-25T14:20:45.8288299Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8288420Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8288594Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8288679Z     
2025-02-25T14:20:45.8288792Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8288903Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8289048Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8289172Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8289245Z             )
2025-02-25T14:20:45.8289331Z     
2025-02-25T14:20:45.8289436Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8289579Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8289689Z             if data.stackgroup:
2025-02-25T14:20:45.8289777Z                 assert (
2025-02-25T14:20:45.8289886Z                     data.stackgroup
2025-02-25T14:20:45.8289968Z                     == getattr(
2025-02-25T14:20:45.8290095Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8290197Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8290299Z                     ).decode()
2025-02-25T14:20:45.8290379Z                 )
2025-02-25T14:20:45.8290477Z             if data.name:
2025-02-25T14:20:45.8290677Z                 assert (
2025-02-25T14:20:45.8290777Z                     data.name
2025-02-25T14:20:45.8290863Z                     == getattr(
2025-02-25T14:20:45.8290985Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8291088Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8291168Z                     ).decode()
2025-02-25T14:20:45.8291269Z                 )
2025-02-25T14:20:45.8291367Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8291519Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8291592Z             )
2025-02-25T14:20:45.8291702Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8291835Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8291923Z             )
2025-02-25T14:20:45.8291927Z 
2025-02-25T14:20:45.8292077Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8292212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8292217Z 
2025-02-25T14:20:45.8292701Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1be20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8292812Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8293211Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8293221Z 
2025-02-25T14:20:45.8293298Z     @wraps(func)
2025-02-25T14:20:45.8293408Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8293498Z         with self._recreate_cm():
2025-02-25T14:20:45.8293606Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8293699Z E           AssertionError: 
2025-02-25T14:20:45.8293831Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8293922Z E           
2025-02-25T14:20:45.8294025Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8294138Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8294244Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8294414Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8294517Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8294692Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8294907Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8294911Z 
2025-02-25T14:20:45.8295130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8295357Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-25T14:20:45.8295362Z 
2025-02-25T14:20:45.8295636Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31ce00>
2025-02-25T14:20:45.8295971Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f269a030>
2025-02-25T14:20:45.8296075Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8296179Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8296290Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8296407Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-25T14:20:45.8296629Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8296892Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-25T14:20:45.8296897Z 
2025-02-25T14:20:45.8297007Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8297175Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8297271Z     ):
2025-02-25T14:20:45.8297373Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8297500Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8297682Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8297770Z     
2025-02-25T14:20:45.8297886Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8297993Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8298150Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8298274Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8298367Z             )
2025-02-25T14:20:45.8298441Z     
2025-02-25T14:20:45.8298561Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8298670Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8298778Z             if data.stackgroup:
2025-02-25T14:20:45.8298862Z                 assert (
2025-02-25T14:20:45.8298964Z                     data.stackgroup
2025-02-25T14:20:45.8299045Z                     == getattr(
2025-02-25T14:20:45.8299166Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8299266Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8299358Z                     ).decode()
2025-02-25T14:20:45.8299450Z                 )
2025-02-25T14:20:45.8299532Z             if data.name:
2025-02-25T14:20:45.8299633Z                 assert (
2025-02-25T14:20:45.8299719Z                     data.name
2025-02-25T14:20:45.8299918Z                     == getattr(
2025-02-25T14:20:45.8300031Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8300147Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8300225Z                     ).decode()
2025-02-25T14:20:45.8300312Z                 )
2025-02-25T14:20:45.8300410Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8300784Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8300921Z             )
2025-02-25T14:20:45.8301047Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8301191Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8301267Z             )
2025-02-25T14:20:45.8301271Z 
2025-02-25T14:20:45.8301438Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8301559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8301565Z 
2025-02-25T14:20:45.8302065Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1b9c0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-25T14:20:45.8302420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8302694Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8302700Z 
2025-02-25T14:20:45.8302787Z     @wraps(func)
2025-02-25T14:20:45.8302883Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8302997Z         with self._recreate_cm():
2025-02-25T14:20:45.8303096Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8303198Z E           AssertionError: 
2025-02-25T14:20:45.8303325Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8303428Z E           
2025-02-25T14:20:45.8303530Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8303646Z E           Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8303755Z E           Max relative difference: 15766.1580412
2025-02-25T14:20:45.8303940Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8304030Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8304196Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8304287Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8304292Z 
2025-02-25T14:20:45.8304512Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8304721Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-25T14:20:45.8304738Z 
2025-02-25T14:20:45.8305012Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cec0>
2025-02-25T14:20:45.8305331Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a04c16990>
2025-02-25T14:20:45.8305438Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8305540Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8305658Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8305772Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8305981Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8306239Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-25T14:20:45.8306244Z 
2025-02-25T14:20:45.8306343Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8306512Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8306591Z     ):
2025-02-25T14:20:45.8306687Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8306809Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8306981Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8307224Z     
2025-02-25T14:20:45.8307336Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8307445Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8307584Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8307698Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8307777Z             )
2025-02-25T14:20:45.8307847Z     
2025-02-25T14:20:45.8307958Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8308066Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8308166Z             if data.stackgroup:
2025-02-25T14:20:45.8308246Z                 assert (
2025-02-25T14:20:45.8308343Z                     data.stackgroup
2025-02-25T14:20:45.8308418Z                     == getattr(
2025-02-25T14:20:45.8308537Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8308635Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8308729Z                     ).decode()
2025-02-25T14:20:45.8308796Z                 )
2025-02-25T14:20:45.8309017Z             if data.name:
2025-02-25T14:20:45.8309098Z                 assert (
2025-02-25T14:20:45.8309171Z                     data.name
2025-02-25T14:20:45.8309254Z                     == getattr(
2025-02-25T14:20:45.8309357Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8309451Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8309526Z                     ).decode()
2025-02-25T14:20:45.8309603Z                 )
2025-02-25T14:20:45.8309692Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8309824Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8309894Z             )
2025-02-25T14:20:45.8309986Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8310103Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8310188Z             )
2025-02-25T14:20:45.8310192Z 
2025-02-25T14:20:45.8310351Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8310473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8310477Z 
2025-02-25T14:20:45.8311193Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062142c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8311305Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8311565Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8311570Z 
2025-02-25T14:20:45.8311657Z     @wraps(func)
2025-02-25T14:20:45.8311742Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8311841Z         with self._recreate_cm():
2025-02-25T14:20:45.8311933Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8312039Z E           AssertionError: 
2025-02-25T14:20:45.8312150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8312232Z E           
2025-02-25T14:20:45.8312330Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8312440Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8312537Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8312692Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8312777Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8312930Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8313023Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8313027Z 
2025-02-25T14:20:45.8313234Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8313451Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-25T14:20:45.8313591Z 
2025-02-25T14:20:45.8313866Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31cf80>
2025-02-25T14:20:45.8314205Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1ae62de0>
2025-02-25T14:20:45.8314307Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8314409Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8314525Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8314627Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8314846Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8315096Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-25T14:20:45.8315101Z 
2025-02-25T14:20:45.8315198Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8315367Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8315454Z     ):
2025-02-25T14:20:45.8315549Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8315777Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8315959Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8316026Z     
2025-02-25T14:20:45.8316138Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8316231Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8316377Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8316480Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8316557Z             )
2025-02-25T14:20:45.8316626Z     
2025-02-25T14:20:45.8316733Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8316839Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8316933Z             if data.stackgroup:
2025-02-25T14:20:45.8317020Z                 assert (
2025-02-25T14:20:45.8317114Z                     data.stackgroup
2025-02-25T14:20:45.8317201Z                     == getattr(
2025-02-25T14:20:45.8317317Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8317424Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8317502Z                     ).decode()
2025-02-25T14:20:45.8317584Z                 )
2025-02-25T14:20:45.8317660Z             if data.name:
2025-02-25T14:20:45.8317742Z                 assert (
2025-02-25T14:20:45.8317822Z                     data.name
2025-02-25T14:20:45.8317906Z                     == getattr(
2025-02-25T14:20:45.8318010Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8318110Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8318201Z                     ).decode()
2025-02-25T14:20:45.8318272Z                 )
2025-02-25T14:20:45.8318367Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8318500Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8318593Z             )
2025-02-25T14:20:45.8318682Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8318819Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8318892Z             )
2025-02-25T14:20:45.8318897Z 
2025-02-25T14:20:45.8319058Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8319183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8319199Z 
2025-02-25T14:20:45.8319671Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06215120>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8319781Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8320038Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8320140Z 
2025-02-25T14:20:45.8320226Z     @wraps(func)
2025-02-25T14:20:45.8320307Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8320413Z         with self._recreate_cm():
2025-02-25T14:20:45.8320609Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8320736Z E           AssertionError: 
2025-02-25T14:20:45.8320932Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8321016Z E           
2025-02-25T14:20:45.8321123Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8321228Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8321335Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8321490Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8321591Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8321739Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8321827Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8321839Z 
2025-02-25T14:20:45.8322046Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8322395Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-25T14:20:45.8322400Z 
2025-02-25T14:20:45.8322685Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d040>
2025-02-25T14:20:45.8322999Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89ef475c70>
2025-02-25T14:20:45.8323104Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8323192Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8323308Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8323411Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8323617Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8323880Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-25T14:20:45.8323885Z 
2025-02-25T14:20:45.8323976Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8324155Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8324222Z     ):
2025-02-25T14:20:45.8324331Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8324434Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8324609Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8324677Z     
2025-02-25T14:20:45.8324788Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8324880Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8325022Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8325135Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8325206Z             )
2025-02-25T14:20:45.8325294Z     
2025-02-25T14:20:45.8325402Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8325519Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8325613Z             if data.stackgroup:
2025-02-25T14:20:45.8325702Z                 assert (
2025-02-25T14:20:45.8325791Z                     data.stackgroup
2025-02-25T14:20:45.8325877Z                     == getattr(
2025-02-25T14:20:45.8325989Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8326104Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8326182Z                     ).decode()
2025-02-25T14:20:45.8326268Z                 )
2025-02-25T14:20:45.8326360Z             if data.name:
2025-02-25T14:20:45.8326438Z                 assert (
2025-02-25T14:20:45.8326526Z                     data.name
2025-02-25T14:20:45.8326604Z                     == getattr(
2025-02-25T14:20:45.8326716Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8326952Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8327040Z                     ).decode()
2025-02-25T14:20:45.8327119Z                 )
2025-02-25T14:20:45.8327227Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8327357Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8327441Z             )
2025-02-25T14:20:45.8327535Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8327670Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8327752Z             )
2025-02-25T14:20:45.8327756Z 
2025-02-25T14:20:45.8327901Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8328028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8328033Z 
2025-02-25T14:20:45.8328498Z args = (<function assert_allclose.<locals>.compare at 0x7f8a062142c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8328615Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8328956Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8328971Z 
2025-02-25T14:20:45.8329051Z     @wraps(func)
2025-02-25T14:20:45.8329144Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8329236Z         with self._recreate_cm():
2025-02-25T14:20:45.8329337Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8329423Z E           AssertionError: 
2025-02-25T14:20:45.8329545Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8329620Z E           
2025-02-25T14:20:45.8329736Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8329843Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8329964Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8330114Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8330228Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8330390Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8330475Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8330480Z 
2025-02-25T14:20:45.8330866Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8331075Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-25T14:20:45.8331080Z 
2025-02-25T14:20:45.8331359Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d100>
2025-02-25T14:20:45.8331676Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a083eff80>
2025-02-25T14:20:45.8331791Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8331896Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8332007Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8332119Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8332330Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8332592Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-25T14:20:45.8332597Z 
2025-02-25T14:20:45.8332683Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8332862Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8332931Z     ):
2025-02-25T14:20:45.8333040Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8333157Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8333329Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8333416Z     
2025-02-25T14:20:45.8333530Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8333635Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8333940Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8334066Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8334141Z             )
2025-02-25T14:20:45.8334227Z     
2025-02-25T14:20:45.8334330Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8334452Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8334554Z             if data.stackgroup:
2025-02-25T14:20:45.8334632Z                 assert (
2025-02-25T14:20:45.8334729Z                     data.stackgroup
2025-02-25T14:20:45.8334806Z                     == getattr(
2025-02-25T14:20:45.8334926Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8335029Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8335119Z                     ).decode()
2025-02-25T14:20:45.8335192Z                 )
2025-02-25T14:20:45.8335285Z             if data.name:
2025-02-25T14:20:45.8335364Z                 assert (
2025-02-25T14:20:45.8335454Z                     data.name
2025-02-25T14:20:45.8335659Z                     == getattr(
2025-02-25T14:20:45.8335777Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8335880Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8335961Z                     ).decode()
2025-02-25T14:20:45.8336050Z                 )
2025-02-25T14:20:45.8336145Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8336284Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8336362Z             )
2025-02-25T14:20:45.8336468Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8336596Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8336688Z             )
2025-02-25T14:20:45.8336692Z 
2025-02-25T14:20:45.8336846Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8336981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8336993Z 
2025-02-25T14:20:45.8337491Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa20040>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-25T14:20:45.8337596Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8337858Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8337863Z 
2025-02-25T14:20:45.8337942Z     @wraps(func)
2025-02-25T14:20:45.8338038Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8338129Z         with self._recreate_cm():
2025-02-25T14:20:45.8338237Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8338327Z E           AssertionError: 
2025-02-25T14:20:45.8338454Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8338539Z E           
2025-02-25T14:20:45.8338647Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8338759Z E           Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8338867Z E           Max relative difference: 3.01858991
2025-02-25T14:20:45.8339029Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8339120Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8339282Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8339372Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8339376Z 
2025-02-25T14:20:45.8339597Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8339811Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-25T14:20:45.8339815Z 
2025-02-25T14:20:45.8340088Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d1c0>
2025-02-25T14:20:45.8340633Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a07a9b8f0>
2025-02-25T14:20:45.8340749Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8340847Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8340954Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8341067Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8341283Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8341544Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-25T14:20:45.8341550Z 
2025-02-25T14:20:45.8341648Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8341816Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8341894Z     ):
2025-02-25T14:20:45.8341995Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8342122Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8342314Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8342522Z     
2025-02-25T14:20:45.8342636Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8342753Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8342911Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8343022Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8343107Z             )
2025-02-25T14:20:45.8343183Z     
2025-02-25T14:20:45.8343301Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8343409Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8343513Z             if data.stackgroup:
2025-02-25T14:20:45.8343590Z                 assert (
2025-02-25T14:20:45.8343690Z                     data.stackgroup
2025-02-25T14:20:45.8343772Z                     == getattr(
2025-02-25T14:20:45.8343896Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8344006Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8344103Z                     ).decode()
2025-02-25T14:20:45.8344183Z                 )
2025-02-25T14:20:45.8344270Z             if data.name:
2025-02-25T14:20:45.8344365Z                 assert (
2025-02-25T14:20:45.8344451Z                     data.name
2025-02-25T14:20:45.8344547Z                     == getattr(
2025-02-25T14:20:45.8344651Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8344758Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8344836Z                     ).decode()
2025-02-25T14:20:45.8344925Z                 )
2025-02-25T14:20:45.8345021Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8345168Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8345243Z             )
2025-02-25T14:20:45.8345348Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8345487Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8345562Z             )
2025-02-25T14:20:45.8345571Z 
2025-02-25T14:20:45.8345727Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8345845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8345850Z 
2025-02-25T14:20:45.8346331Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06216480>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8346438Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8346691Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8346697Z 
2025-02-25T14:20:45.8346790Z     @wraps(func)
2025-02-25T14:20:45.8346877Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8346981Z         with self._recreate_cm():
2025-02-25T14:20:45.8347208Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8347310Z E           AssertionError: 
2025-02-25T14:20:45.8347427Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8347511Z E           
2025-02-25T14:20:45.8347615Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8347732Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8347841Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8348005Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8348108Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8348253Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8348349Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8348354Z 
2025-02-25T14:20:45.8348557Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8348780Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-25T14:20:45.8348873Z 
2025-02-25T14:20:45.8349142Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d280>
2025-02-25T14:20:45.8349463Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8a1467de20>
2025-02-25T14:20:45.8349570Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8349663Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8349777Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8349879Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8350096Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8350346Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-25T14:20:45.8350351Z 
2025-02-25T14:20:45.8350447Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8350813Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8350911Z     ):
2025-02-25T14:20:45.8351021Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8351127Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8351310Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8351381Z     
2025-02-25T14:20:45.8351499Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8351595Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8351752Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8351859Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8351944Z             )
2025-02-25T14:20:45.8352014Z     
2025-02-25T14:20:45.8352130Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8352235Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8352340Z             if data.stackgroup:
2025-02-25T14:20:45.8352429Z                 assert (
2025-02-25T14:20:45.8352558Z                     data.stackgroup
2025-02-25T14:20:45.8352652Z                     == getattr(
2025-02-25T14:20:45.8352760Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8352871Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8352945Z                     ).decode()
2025-02-25T14:20:45.8353034Z                 )
2025-02-25T14:20:45.8353122Z             if data.name:
2025-02-25T14:20:45.8353207Z                 assert (
2025-02-25T14:20:45.8353286Z                     data.name
2025-02-25T14:20:45.8353374Z                     == getattr(
2025-02-25T14:20:45.8353481Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8353588Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8353673Z                     ).decode()
2025-02-25T14:20:45.8353743Z                 )
2025-02-25T14:20:45.8353994Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8354122Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8354212Z             )
2025-02-25T14:20:45.8354303Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8354433Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8354504Z             )
2025-02-25T14:20:45.8354509Z 
2025-02-25T14:20:45.8354667Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8354781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8354796Z 
2025-02-25T14:20:45.8355265Z args = (<function assert_allclose.<locals>.compare at 0x7f8a0aa1b600>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8355382Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8355630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8355640Z 
2025-02-25T14:20:45.8355873Z     @wraps(func)
2025-02-25T14:20:45.8355959Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8356055Z         with self._recreate_cm():
2025-02-25T14:20:45.8356147Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8356248Z E           AssertionError: 
2025-02-25T14:20:45.8356372Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8356445Z E           
2025-02-25T14:20:45.8356559Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8356658Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8356762Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8356916Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8357019Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8357163Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8357276Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8357286Z 
2025-02-25T14:20:45.8357499Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8357702Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-25T14:20:45.8357706Z 
2025-02-25T14:20:45.8357986Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d340>
2025-02-25T14:20:45.8358300Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89f0ea6c90>
2025-02-25T14:20:45.8358410Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8358500Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8358617Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8358717Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8358950Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8359205Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-25T14:20:45.8359215Z 
2025-02-25T14:20:45.8359303Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8359484Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8359559Z     ):
2025-02-25T14:20:45.8359671Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8359783Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8359979Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8360053Z     
2025-02-25T14:20:45.8360187Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8360294Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8360437Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8360751Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8361011Z             )
2025-02-25T14:20:45.8361095Z     
2025-02-25T14:20:45.8361215Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8361340Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8361429Z             if data.stackgroup:
2025-02-25T14:20:45.8361515Z                 assert (
2025-02-25T14:20:45.8361600Z                     data.stackgroup
2025-02-25T14:20:45.8361690Z                     == getattr(
2025-02-25T14:20:45.8361804Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8361915Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8362006Z                     ).decode()
2025-02-25T14:20:45.8362084Z                 )
2025-02-25T14:20:45.8362184Z             if data.name:
2025-02-25T14:20:45.8362263Z                 assert (
2025-02-25T14:20:45.8362351Z                     data.name
2025-02-25T14:20:45.8362426Z                     == getattr(
2025-02-25T14:20:45.8362549Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8362765Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8362855Z                     ).decode()
2025-02-25T14:20:45.8362928Z                 )
2025-02-25T14:20:45.8363036Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8363168Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8363257Z             )
2025-02-25T14:20:45.8363358Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8363484Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8363572Z             )
2025-02-25T14:20:45.8363576Z 
2025-02-25T14:20:45.8363733Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8363870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8363875Z 
2025-02-25T14:20:45.8364354Z args = (<function assert_allclose.<locals>.compare at 0x7f8a051f5620>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8364491Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8364747Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8364752Z 
2025-02-25T14:20:45.8364827Z     @wraps(func)
2025-02-25T14:20:45.8364926Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8365023Z         with self._recreate_cm():
2025-02-25T14:20:45.8365133Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8365225Z E           AssertionError: 
2025-02-25T14:20:45.8365347Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8365420Z E           
2025-02-25T14:20:45.8365541Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8365644Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8365756Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8365919Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8366016Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8366175Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8366264Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8366269Z 
2025-02-25T14:20:45.8366494Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8366703Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-25T14:20:45.8366708Z 
2025-02-25T14:20:45.8366988Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f8a1c31d400>
2025-02-25T14:20:45.8367324Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f89dbd0e8a0>
2025-02-25T14:20:45.8367432Z plotter_generate_plot_ply = (Figure({
2025-02-25T14:20:45.8367630Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-25T14:20:45.8367737Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-25T14:20:45.8367857Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-25T14:20:45.8368067Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f8a08998a70>)
2025-02-25T14:20:45.8368326Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-25T14:20:45.8368330Z 
2025-02-25T14:20:45.8368420Z     def test_generate_plot_mpl(
2025-02-25T14:20:45.8368606Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-25T14:20:45.8368687Z     ):
2025-02-25T14:20:45.8368789Z         fig, _ = plotter_generate_plot_ply
2025-02-25T14:20:45.8368914Z         regression_data = RegressionData(request)
2025-02-25T14:20:45.8369090Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-25T14:20:45.8369176Z     
2025-02-25T14:20:45.8369295Z         for item in ["_species_name", "_color_list"]:
2025-02-25T14:20:45.8369401Z             np.testing.assert_array_equal(
2025-02-25T14:20:45.8369639Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-25T14:20:45.8369756Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-25T14:20:45.8369829Z             )
2025-02-25T14:20:45.8369909Z     
2025-02-25T14:20:45.8370019Z         for index, data in enumerate(fig.data):
2025-02-25T14:20:45.8370136Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-25T14:20:45.8370232Z             if data.stackgroup:
2025-02-25T14:20:45.8370309Z                 assert (
2025-02-25T14:20:45.8370407Z                     data.stackgroup
2025-02-25T14:20:45.8370488Z                     == getattr(
2025-02-25T14:20:45.8370739Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8370842Z                         "_" + str(index) + "stackgroup",
2025-02-25T14:20:45.8370945Z                     ).decode()
2025-02-25T14:20:45.8371018Z                 )
2025-02-25T14:20:45.8371110Z             if data.name:
2025-02-25T14:20:45.8371201Z                 assert (
2025-02-25T14:20:45.8371293Z                     data.name
2025-02-25T14:20:45.8371372Z                     == getattr(
2025-02-25T14:20:45.8371494Z                         expected["/plot_data_hdf/scalars"],
2025-02-25T14:20:45.8371604Z                         "_" + str(index) + "name",
2025-02-25T14:20:45.8371683Z                     ).decode()
2025-02-25T14:20:45.8371767Z                 )
2025-02-25T14:20:45.8371863Z             np.testing.assert_allclose(
2025-02-25T14:20:45.8372006Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-25T14:20:45.8372077Z             )
2025-02-25T14:20:45.8372183Z >           np.testing.assert_allclose(
2025-02-25T14:20:45.8372309Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-25T14:20:45.8372395Z             )
2025-02-25T14:20:45.8372404Z 
2025-02-25T14:20:45.8372553Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-25T14:20:45.8372682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-25T14:20:45.8372692Z 
2025-02-25T14:20:45.8373164Z args = (<function assert_allclose.<locals>.compare at 0x7f8a06214a40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-25T14:20:45.8373265Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-25T14:20:45.8373513Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-25T14:20:45.8373518Z 
2025-02-25T14:20:45.8373594Z     @wraps(func)
2025-02-25T14:20:45.8373693Z     def inner(*args, **kwds):
2025-02-25T14:20:45.8373786Z         with self._recreate_cm():
2025-02-25T14:20:45.8373888Z >           return func(*args, **kwds)
2025-02-25T14:20:45.8373988Z E           AssertionError: 
2025-02-25T14:20:45.8374264Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8374350Z E           
2025-02-25T14:20:45.8374456Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8374571Z E           Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8374669Z E           Max relative difference: 15766.15804934
2025-02-25T14:20:45.8374836Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8374924Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8375084Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8375171Z E                  0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8375185Z 
2025-02-25T14:20:45.8375387Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-25T14:20:45.8375517Z =============================== warnings summary ===============================
2025-02-25T14:20:45.8375641Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:20:45.8375764Z tardis/io/configuration/config_validator.py:6
2025-02-25T14:20:45.8376193Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-25T14:20:45.8376280Z   
2025-02-25T14:20:45.8377418Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-25T14:20:45.8377435Z 
2025-02-25T14:20:45.8377687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-25T14:20:45.8378062Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-25T14:20:45.8378135Z   
2025-02-25T14:20:45.8378307Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-25T14:20:45.8378470Z   given by the platformdirs library.  To remove this warning and
2025-02-25T14:20:45.8378654Z   see the appropriate new directories, set the environment variable
2025-02-25T14:20:45.8378803Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-25T14:20:45.8378975Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-25T14:20:45.8378980Z 
2025-02-25T14:20:45.8384974Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-25T14:20:45.8385293Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8385527Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-25T14:20:45.8385601Z   
2025-02-25T14:20:45.8385678Z   
2025-02-25T14:20:45.8385890Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8386167Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:20:45.8386185Z 
2025-02-25T14:20:45.8386395Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-25T14:20:45.8386648Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-25T14:20:45.8386898Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-25T14:20:45.8387081Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-25T14:20:45.8387412Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-25T14:20:45.8387490Z   
2025-02-25T14:20:45.8387619Z   The current CMFGEN model parser is deprecated
2025-02-25T14:20:45.8387624Z 
2025-02-25T14:20:45.8387747Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-25T14:20:45.8387938Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-25T14:20:45.8388258Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-25T14:20:45.8388533Z   
2025-02-25T14:20:45.8388659Z   The current CMFGEN model parser is deprecated
2025-02-25T14:20:45.8388665Z 
2025-02-25T14:20:45.8388877Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-25T14:20:45.8389262Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-25T14:20:45.8389333Z   
2025-02-25T14:20:45.8389754Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-25T14:20:45.8389760Z 
2025-02-25T14:20:45.8389871Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:20:45.8390005Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:20:45.8390194Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:20:45.8390475Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-25T14:20:45.8390796Z   
2025-02-25T14:20:45.8390916Z   v_inner_boundary < 0, assuming default value
2025-02-25T14:20:45.8390921Z 
2025-02-25T14:20:45.8391204Z tardis/model/tests/test_base.py: 6 warnings
2025-02-25T14:20:45.8391323Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-25T14:20:45.8391514Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-25T14:20:45.8391794Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-25T14:20:45.8391877Z   
2025-02-25T14:20:45.8391981Z   v_outer_boundary < 0, assuming default value
2025-02-25T14:20:45.8392001Z 
2025-02-25T14:20:45.8392464Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-25T14:20:45.8392781Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-25T14:20:45.8392853Z   
2025-02-25T14:20:45.8393143Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-25T14:20:45.8393599Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-25T14:20:45.8393693Z   
2025-02-25T14:20:45.8394217Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-25T14:20:45.8394234Z 
2025-02-25T14:20:45.8394455Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-25T14:20:45.8394683Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-25T14:20:45.8394887Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-25T14:20:45.8395133Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-25T14:20:45.8395211Z   
2025-02-25T14:20:45.8395415Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-25T14:20:45.8395425Z 
2025-02-25T14:20:45.8395647Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:20:45.8395848Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-25T14:20:45.8395932Z   
2025-02-25T14:20:45.8396262Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-25T14:20:45.8396267Z 
2025-02-25T14:20:45.8396487Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-25T14:20:45.8396686Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-25T14:20:45.8396768Z   
2025-02-25T14:20:45.8397116Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-25T14:20:45.8397262Z 
2025-02-25T14:20:45.8397476Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-25T14:20:45.8397611Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-25T14:20:45.8397682Z   
2025-02-25T14:20:45.8398737Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-25T14:20:45.8398826Z   Exception origin:
2025-02-25T14:20:45.8399093Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-25T14:20:45.8399192Z       raise TypeError(msg) from None
2025-02-25T14:20:45.8399301Z   [0m[0m
2025-02-25T14:20:45.8399306Z 
2025-02-25T14:20:45.8399652Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-25T14:20:45.8399936Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-25T14:20:45.8400023Z   
2025-02-25T14:20:45.8401085Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-25T14:20:45.8401092Z 
2025-02-25T14:20:45.8401455Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8401801Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402150Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402504Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8402849Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8403212Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8403568Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8403654Z   
2025-02-25T14:20:45.8403851Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-25T14:20:45.8404043Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8404297Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8404302Z 
2025-02-25T14:20:45.8404649Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8405003Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8405363Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8405440Z   
2025-02-25T14:20:45.8405626Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-25T14:20:45.8405808Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8406056Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8406060Z 
2025-02-25T14:20:45.8406408Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-25T14:20:45.8406761Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-25T14:20:45.8406832Z   
2025-02-25T14:20:45.8407161Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-25T14:20:45.8407332Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-25T14:20:45.8407581Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-25T14:20:45.8407586Z 
2025-02-25T14:20:45.8408023Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-25T14:20:45.8408348Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-02-25T14:20:45.8408430Z   
2025-02-25T14:20:45.8408708Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-25T14:20:45.8408714Z 
2025-02-25T14:20:45.8408978Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8409186Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-25T14:20:45.8409275Z   
2025-02-25T14:20:45.8409357Z   
2025-02-25T14:20:45.8409679Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8409952Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-25T14:20:45.8409958Z 
2025-02-25T14:20:45.8410219Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8410427Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-25T14:20:45.8410497Z   
2025-02-25T14:20:45.8410673Z   
2025-02-25T14:20:45.8410877Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-25T14:20:45.8411067Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-25T14:20:45.8411071Z 
2025-02-25T14:20:45.8411330Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-25T14:20:45.8411577Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-25T14:20:45.8411681Z   
2025-02-25T14:20:45.8411872Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-25T14:20:45.8411877Z 
2025-02-25T14:20:45.8412084Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-25T14:20:45.8412089Z 
2025-02-25T14:20:45.8412259Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-25T14:20:45.8412400Z Coverage HTML written to dir coverage_html_report
2025-02-25T14:20:45.8412514Z Coverage XML written to file coverage.xml
2025-02-25T14:20:45.8412519Z 
2025-02-25T14:20:45.8412640Z =========================== short test summary info ============================
2025-02-25T14:20:45.8413059Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-25T14:20:45.8413064Z 
2025-02-25T14:20:45.8413199Z MultiIndex level [0] values are different (0.09581 %)
2025-02-25T14:20:45.8413319Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.8413399Z        ...
2025-02-25T14:20:45.8413495Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.8413617Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.8413736Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-25T14:20:45.8413814Z        ...
2025-02-25T14:20:45.8413898Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-25T14:20:45.8414019Z       dtype='int64', name='atomic_number', length=29224)
2025-02-25T14:20:45.8414126Z At positional index 54, first diff: 14 != 12
2025-02-25T14:20:45.8414409Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-25T14:20:45.8414510Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8414515Z 
2025-02-25T14:20:45.8414621Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.8414846Z Max absolute difference: 0.99984222
2025-02-25T14:20:45.8414958Z Max relative difference: 6337.12154973
2025-02-25T14:20:45.8415051Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415145Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415244Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8415331Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415421Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8415502Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8416107Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-25T14:20:45.8416597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8416602Z 
2025-02-25T14:20:45.8416754Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8416897Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8417094Z        ...
2025-02-25T14:20:45.8417195Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8417328Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8417454Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8417529Z        ...
2025-02-25T14:20:45.8417625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8417752Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8417874Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8418386Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8418401Z 
2025-02-25T14:20:45.8418496Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8418897Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8419236Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8419578Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8420123Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8420129Z 
2025-02-25T14:20:45.8420226Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8420751Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8421136Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8421667Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8422165Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8422171Z 
2025-02-25T14:20:45.8422317Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8422427Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8422624Z        ...
2025-02-25T14:20:45.8422709Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8422847Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8422958Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8423050Z        ...
2025-02-25T14:20:45.8423149Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8423273Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8423392Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8423905Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8423911Z 
2025-02-25T14:20:45.8424053Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8424169Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8424256Z        ...
2025-02-25T14:20:45.8424344Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8424483Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8424605Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8424679Z        ...
2025-02-25T14:20:45.8424780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8424902Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8425025Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8425506Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8425511Z 
2025-02-25T14:20:45.8425645Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8425749Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8425837Z        ...
2025-02-25T14:20:45.8425935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8426062Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8426178Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8426251Z        ...
2025-02-25T14:20:45.8426343Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8426462Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8426570Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8427076Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8427082Z 
2025-02-25T14:20:45.8427219Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8427331Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8427506Z        ...
2025-02-25T14:20:45.8427597Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8427717Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8427838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8427911Z        ...
2025-02-25T14:20:45.8428003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8428122Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8428232Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8428734Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8428750Z 
2025-02-25T14:20:45.8428876Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8428989Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8429059Z        ...
2025-02-25T14:20:45.8429150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8429279Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8429476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8429547Z        ...
2025-02-25T14:20:45.8429630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8429746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8429850Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8430331Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8430343Z 
2025-02-25T14:20:45.8430465Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8430749Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8430842Z        ...
2025-02-25T14:20:45.8430928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8431053Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8431162Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8431235Z        ...
2025-02-25T14:20:45.8431320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8431439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8431541Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8432013Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8432019Z 
2025-02-25T14:20:45.8432139Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8432247Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8432315Z        ...
2025-02-25T14:20:45.8432401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8432516Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8432630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8432698Z        ...
2025-02-25T14:20:45.8432792Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8432915Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8433011Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8433497Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8433503Z 
2025-02-25T14:20:45.8433594Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8433960Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8434436Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8434771Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8435255Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8435266Z 
2025-02-25T14:20:45.8435365Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8435831Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8436211Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8436590Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8437048Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8437054Z 
2025-02-25T14:20:45.8437181Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8437284Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8437360Z        ...
2025-02-25T14:20:45.8437449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8437567Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8437683Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8437754Z        ...
2025-02-25T14:20:45.8437850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8437970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8438080Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8438572Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8438577Z 
2025-02-25T14:20:45.8438711Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8438831Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8438899Z        ...
2025-02-25T14:20:45.8438985Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8439104Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8439217Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8439380Z        ...
2025-02-25T14:20:45.8439476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8439601Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8439707Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8440168Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8440184Z 
2025-02-25T14:20:45.8440310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8440423Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8440496Z        ...
2025-02-25T14:20:45.8440720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8440846Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8440960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8441032Z        ...
2025-02-25T14:20:45.8441129Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8441250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8441490Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8441982Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8441998Z 
2025-02-25T14:20:45.8442121Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8442233Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8442303Z        ...
2025-02-25T14:20:45.8442398Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8442518Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8442633Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8442707Z        ...
2025-02-25T14:20:45.8442799Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8442926Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8443037Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8443546Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8443552Z 
2025-02-25T14:20:45.8443673Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8443784Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8443859Z        ...
2025-02-25T14:20:45.8443948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8444067Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8444186Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8444257Z        ...
2025-02-25T14:20:45.8444347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8444475Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8444581Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8445072Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8445077Z 
2025-02-25T14:20:45.8445199Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8445313Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8445384Z        ...
2025-02-25T14:20:45.8445475Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8445598Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8445715Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8445792Z        ...
2025-02-25T14:20:45.8445874Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8446006Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8446266Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8446744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8446757Z 
2025-02-25T14:20:45.8446878Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8446988Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8447055Z        ...
2025-02-25T14:20:45.8447141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8447265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8447369Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8447445Z        ...
2025-02-25T14:20:45.8447525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8447647Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8447744Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8448236Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8448329Z 
2025-02-25T14:20:45.8448432Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8448808Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8449147Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8449480Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8449977Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8449983Z 
2025-02-25T14:20:45.8450088Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8450454Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8450946Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8451333Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8451956Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8451979Z 
2025-02-25T14:20:45.8452105Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8452220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8452294Z        ...
2025-02-25T14:20:45.8452387Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8452508Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8452660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8452730Z        ...
2025-02-25T14:20:45.8452824Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8452947Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8453061Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8453577Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8453697Z 
2025-02-25T14:20:45.8453819Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8453930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8453996Z        ...
2025-02-25T14:20:45.8454080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8454197Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8454306Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8454375Z        ...
2025-02-25T14:20:45.8454464Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8454588Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8454682Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8455148Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8455167Z 
2025-02-25T14:20:45.8455289Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8455397Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8455465Z        ...
2025-02-25T14:20:45.8455551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8455667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8455779Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8455852Z        ...
2025-02-25T14:20:45.8455931Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8456057Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8456154Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8456646Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8456659Z 
2025-02-25T14:20:45.8456777Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8456895Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8456968Z        ...
2025-02-25T14:20:45.8457065Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8457186Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8457308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8457394Z        ...
2025-02-25T14:20:45.8457478Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8457613Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8457712Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8458208Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8458315Z 
2025-02-25T14:20:45.8458441Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8458561Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8458631Z        ...
2025-02-25T14:20:45.8458724Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8458844Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8458949Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8459021Z        ...
2025-02-25T14:20:45.8459098Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8459222Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8459321Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8459795Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8459801Z 
2025-02-25T14:20:45.8459922Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8460041Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8460211Z        ...
2025-02-25T14:20:45.8460294Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8460427Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8460638Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8460720Z        ...
2025-02-25T14:20:45.8460802Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8460928Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8461029Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8461535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8461540Z 
2025-02-25T14:20:45.8461672Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8461784Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8461864Z        ...
2025-02-25T14:20:45.8461958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8462091Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8462214Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8462321Z        ...
2025-02-25T14:20:45.8462411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8462538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8462637Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8463156Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8463161Z 
2025-02-25T14:20:45.8463262Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8463628Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8463972Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8464303Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8464944Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8464949Z 
2025-02-25T14:20:45.8465047Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8465408Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8465784Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8466300Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8466794Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8466799Z 
2025-02-25T14:20:45.8466923Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8467046Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8467115Z        ...
2025-02-25T14:20:45.8467217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8467345Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8467468Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8467546Z        ...
2025-02-25T14:20:45.8467628Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8467755Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8467854Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8468380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8468385Z 
2025-02-25T14:20:45.8468503Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8468619Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8468695Z        ...
2025-02-25T14:20:45.8468786Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8468923Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8469029Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8469108Z        ...
2025-02-25T14:20:45.8469188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8469316Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8469411Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8469904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8469909Z 
2025-02-25T14:20:45.8470037Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8470150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8470329Z        ...
2025-02-25T14:20:45.8470411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8470683Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8470839Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8470919Z        ...
2025-02-25T14:20:45.8470999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8471128Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8471222Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8471744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8471750Z 
2025-02-25T14:20:45.8471876Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8471978Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8472055Z        ...
2025-02-25T14:20:45.8472133Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8472266Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8472502Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8472579Z        ...
2025-02-25T14:20:45.8472662Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8472783Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8472879Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8473399Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8473405Z 
2025-02-25T14:20:45.8473530Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8473633Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8473708Z        ...
2025-02-25T14:20:45.8473787Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8473927Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8474035Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8474121Z        ...
2025-02-25T14:20:45.8474207Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8474333Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8474436Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8474948Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8474954Z 
2025-02-25T14:20:45.8475089Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8475193Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8475274Z        ...
2025-02-25T14:20:45.8475356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8475488Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8475601Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8475685Z        ...
2025-02-25T14:20:45.8475765Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8475892Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8475997Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8476554Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8476560Z 
2025-02-25T14:20:45.8476687Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8476787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8476867Z        ...
2025-02-25T14:20:45.8476946Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8477071Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8477306Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8477390Z        ...
2025-02-25T14:20:45.8477489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8477611Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8477727Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8478310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8478316Z 
2025-02-25T14:20:45.8478418Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8478793Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8479137Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8479569Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8480155Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8480165Z 
2025-02-25T14:20:45.8480265Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8480759Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8481125Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8481503Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8482058Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8482064Z 
2025-02-25T14:20:45.8482191Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8482294Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8482422Z        ...
2025-02-25T14:20:45.8482544Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8490391Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8490739Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8490829Z        ...
2025-02-25T14:20:45.8490928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8491062Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8491180Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8491806Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8491813Z 
2025-02-25T14:20:45.8491961Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8492074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8492161Z        ...
2025-02-25T14:20:45.8492262Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8492391Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8492526Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8492785Z        ...
2025-02-25T14:20:45.8492887Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8493014Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8493134Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8493708Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8493725Z 
2025-02-25T14:20:45.8493855Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8493982Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8494058Z        ...
2025-02-25T14:20:45.8494157Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8494287Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8494421Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8494490Z        ...
2025-02-25T14:20:45.8494594Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8494719Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8494835Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8495425Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8495442Z 
2025-02-25T14:20:45.8495567Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8495689Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8495768Z        ...
2025-02-25T14:20:45.8495867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8495989Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8496118Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8496193Z        ...
2025-02-25T14:20:45.8496300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8496420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8496535Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8497130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8497136Z 
2025-02-25T14:20:45.8497263Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8497383Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8497454Z        ...
2025-02-25T14:20:45.8497556Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8497678Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8497795Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8498009Z        ...
2025-02-25T14:20:45.8498105Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8498246Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8498350Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8498920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8498925Z 
2025-02-25T14:20:45.8499046Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8499162Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8499238Z        ...
2025-02-25T14:20:45.8499332Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8499453Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8499570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8499667Z        ...
2025-02-25T14:20:45.8499749Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8499966Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8500070Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8500719Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8500726Z 
2025-02-25T14:20:45.8500859Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8500980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8501055Z        ...
2025-02-25T14:20:45.8501150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8501288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8501402Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8501493Z        ...
2025-02-25T14:20:45.8501588Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8501722Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8501828Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8502386Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8502391Z 
2025-02-25T14:20:45.8502492Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8502881Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8503232Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8503576Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8504133Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8504139Z 
2025-02-25T14:20:45.8504247Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8504743Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8505139Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8505531Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8506158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8506178Z 
2025-02-25T14:20:45.8506313Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8506440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8506517Z        ...
2025-02-25T14:20:45.8506613Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8506743Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8506864Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8506940Z        ...
2025-02-25T14:20:45.8507034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8507163Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8507284Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8507852Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8507858Z 
2025-02-25T14:20:45.8507991Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8508113Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8508189Z        ...
2025-02-25T14:20:45.8508284Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8508411Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8508529Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8508600Z        ...
2025-02-25T14:20:45.8508702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8508831Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8508942Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8509481Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8509487Z 
2025-02-25T14:20:45.8509615Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8509730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8509804Z        ...
2025-02-25T14:20:45.8509903Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8510028Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8510158Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8510245Z        ...
2025-02-25T14:20:45.8510331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8510726Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8510851Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8511412Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8511417Z 
2025-02-25T14:20:45.8511544Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8511665Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8511738Z        ...
2025-02-25T14:20:45.8511829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8511961Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8512070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8512154Z        ...
2025-02-25T14:20:45.8512240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8512373Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8512478Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8513163Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8513169Z 
2025-02-25T14:20:45.8513293Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8513413Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8513496Z        ...
2025-02-25T14:20:45.8513585Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8513723Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8513838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8513928Z        ...
2025-02-25T14:20:45.8514010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8514140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8514249Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8514797Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8514807Z 
2025-02-25T14:20:45.8514945Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8515052Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8515135Z        ...
2025-02-25T14:20:45.8515216Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8515346Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8515453Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8515539Z        ...
2025-02-25T14:20:45.8515626Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8515770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8515869Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8516411Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8516423Z 
2025-02-25T14:20:45.8516558Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8516665Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8516750Z        ...
2025-02-25T14:20:45.8516834Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8516972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8517080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8517165Z        ...
2025-02-25T14:20:45.8517248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8517386Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8517499Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8518194Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8518209Z 
2025-02-25T14:20:45.8518318Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8518686Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8519026Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8519488Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8520028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8520034Z 
2025-02-25T14:20:45.8520139Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8520628Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8521013Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8521399Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8521922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8521934Z 
2025-02-25T14:20:45.8522059Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8522178Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8522251Z        ...
2025-02-25T14:20:45.8522348Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8522481Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8522590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8522675Z        ...
2025-02-25T14:20:45.8522758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8522886Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8522986Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8523680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8523689Z 
2025-02-25T14:20:45.8523811Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8523926Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8524002Z        ...
2025-02-25T14:20:45.8524082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8524211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8524318Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8524394Z        ...
2025-02-25T14:20:45.8524474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8524599Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8524698Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8525227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8525346Z 
2025-02-25T14:20:45.8525489Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8525597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8525684Z        ...
2025-02-25T14:20:45.8525765Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8525902Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8526015Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8526099Z        ...
2025-02-25T14:20:45.8526185Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8526316Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8526418Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8526976Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8526993Z 
2025-02-25T14:20:45.8527132Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8527238Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8527322Z        ...
2025-02-25T14:20:45.8527407Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8527538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8527644Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8527726Z        ...
2025-02-25T14:20:45.8527810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8527943Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8528054Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8528597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8528615Z 
2025-02-25T14:20:45.8528751Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8528860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8528947Z        ...
2025-02-25T14:20:45.8529030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8529164Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8529275Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8529365Z        ...
2025-02-25T14:20:45.8529448Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8529580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8529688Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8530214Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8530318Z 
2025-02-25T14:20:45.8530458Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8530668Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8530752Z        ...
2025-02-25T14:20:45.8530832Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8530969Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8531078Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8531158Z        ...
2025-02-25T14:20:45.8531253Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8531376Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8531481Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8532026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8532041Z 
2025-02-25T14:20:45.8532176Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8532438Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8532528Z        ...
2025-02-25T14:20:45.8532619Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8532756Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8532874Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8532945Z        ...
2025-02-25T14:20:45.8533039Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8533162Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8533271Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8533830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8533843Z 
2025-02-25T14:20:45.8533957Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8534323Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8534684Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8535029Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8535616Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8535622Z 
2025-02-25T14:20:45.8535715Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8536094Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8536584Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8536980Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8537528Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8537538Z 
2025-02-25T14:20:45.8537782Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8537893Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8537976Z        ...
2025-02-25T14:20:45.8538061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8538197Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8538303Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8538388Z        ...
2025-02-25T14:20:45.8538474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8538613Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8538717Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8539304Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8539312Z 
2025-02-25T14:20:45.8539444Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8539558Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8539643Z        ...
2025-02-25T14:20:45.8539727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8539863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8539975Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8540061Z        ...
2025-02-25T14:20:45.8540143Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8540278Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8540396Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8541042Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8541053Z 
2025-02-25T14:20:45.8541191Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8541307Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8541394Z        ...
2025-02-25T14:20:45.8541477Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8541608Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8541714Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8541797Z        ...
2025-02-25T14:20:45.8541881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8542012Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8542125Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8542692Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8542698Z 
2025-02-25T14:20:45.8542974Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8543085Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8543171Z        ...
2025-02-25T14:20:45.8543260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8543390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8543510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8543586Z        ...
2025-02-25T14:20:45.8543683Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8543803Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8543919Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8544483Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8544488Z 
2025-02-25T14:20:45.8544631Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8544745Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8544954Z        ...
2025-02-25T14:20:45.8545043Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8545176Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8545301Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8545372Z        ...
2025-02-25T14:20:45.8545469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8545589Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8545700Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8546249Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8546255Z 
2025-02-25T14:20:45.8546393Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8546525Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8546599Z        ...
2025-02-25T14:20:45.8546703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8546830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8546945Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8547021Z        ...
2025-02-25T14:20:45.8547115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8547237Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8547347Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8547870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8547884Z 
2025-02-25T14:20:45.8548007Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8548129Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8548209Z        ...
2025-02-25T14:20:45.8548300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8548430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8548548Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8548622Z        ...
2025-02-25T14:20:45.8548713Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8548838Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8548950Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8549478Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8549495Z 
2025-02-25T14:20:45.8549589Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8549968Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8550401Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8550925Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8551478Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8551610Z 
2025-02-25T14:20:45.8551709Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8552083Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8552466Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8552878Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8553396Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8553401Z 
2025-02-25T14:20:45.8553536Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8553651Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8553740Z        ...
2025-02-25T14:20:45.8553835Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8553972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8554092Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8554167Z        ...
2025-02-25T14:20:45.8554259Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8554380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8554491Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8555031Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8555037Z 
2025-02-25T14:20:45.8555169Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8555274Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8555481Z        ...
2025-02-25T14:20:45.8555564Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8555704Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8555824Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8555895Z        ...
2025-02-25T14:20:45.8555992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8556111Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8556224Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8556732Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8556736Z 
2025-02-25T14:20:45.8556869Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8556972Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8557063Z        ...
2025-02-25T14:20:45.8557154Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8557273Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8557479Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8557552Z        ...
2025-02-25T14:20:45.8557644Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8557763Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8557872Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8558407Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8558424Z 
2025-02-25T14:20:45.8558545Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8558660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8558729Z        ...
2025-02-25T14:20:45.8558829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8558948Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8559076Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8559149Z        ...
2025-02-25T14:20:45.8559240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8559360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8559471Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8559987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8560004Z 
2025-02-25T14:20:45.8560126Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8560239Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8560312Z        ...
2025-02-25T14:20:45.8560411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8560637Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8560761Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8560842Z        ...
2025-02-25T14:20:45.8560940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8561057Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8561172Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8561700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8561705Z 
2025-02-25T14:20:45.8561826Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8561941Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8562006Z        ...
2025-02-25T14:20:45.8562097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8562221Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8562475Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8562554Z        ...
2025-02-25T14:20:45.8562648Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8562778Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8562875Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8563420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8563425Z 
2025-02-25T14:20:45.8563526Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8563906Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8564393Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8564725Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8565277Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8565292Z 
2025-02-25T14:20:45.8565396Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8565765Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8566144Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8566542Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8567056Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8567061Z 
2025-02-25T14:20:45.8567195Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8567304Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8567394Z        ...
2025-02-25T14:20:45.8567493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8567710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8567832Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8567908Z        ...
2025-02-25T14:20:45.8568001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8568125Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8568233Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8568785Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8568803Z 
2025-02-25T14:20:45.8568929Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8569048Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8569121Z        ...
2025-02-25T14:20:45.8569214Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8569334Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8569458Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8569624Z        ...
2025-02-25T14:20:45.8569721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8569840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8569956Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8570478Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8570494Z 
2025-02-25T14:20:45.8570719Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8570838Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8570909Z        ...
2025-02-25T14:20:45.8571003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8571127Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8571249Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8571319Z        ...
2025-02-25T14:20:45.8571423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8571542Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8571653Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8572208Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8572213Z 
2025-02-25T14:20:45.8572340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8572454Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8572526Z        ...
2025-02-25T14:20:45.8572624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8572744Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8572868Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8572942Z        ...
2025-02-25T14:20:45.8573035Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8573169Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8573274Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8573826Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8573832Z 
2025-02-25T14:20:45.8573953Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8574066Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8574137Z        ...
2025-02-25T14:20:45.8574231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8574352Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8574473Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8574693Z        ...
2025-02-25T14:20:45.8574776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8574910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8575011Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8575547Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8575552Z 
2025-02-25T14:20:45.8575672Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8575788Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8575862Z        ...
2025-02-25T14:20:45.8575950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8576086Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8576196Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8576276Z        ...
2025-02-25T14:20:45.8576365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8576495Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8576712Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8577251Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8577257Z 
2025-02-25T14:20:45.8577383Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8577500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8577580Z        ...
2025-02-25T14:20:45.8577659Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8577789Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8577897Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8577978Z        ...
2025-02-25T14:20:45.8578066Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8578209Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8578312Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8578866Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8578871Z 
2025-02-25T14:20:45.8578978Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8579348Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8579687Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8580030Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8580678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8580684Z 
2025-02-25T14:20:45.8580792Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8581280Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8581671Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8582055Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8582721Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8582727Z 
2025-02-25T14:20:45.8582851Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8582974Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8583047Z        ...
2025-02-25T14:20:45.8583142Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8583266Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8583385Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8583454Z        ...
2025-02-25T14:20:45.8583552Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8583679Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8583787Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8584357Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8584362Z 
2025-02-25T14:20:45.8584488Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8584601Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8584674Z        ...
2025-02-25T14:20:45.8584769Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8584890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8585009Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8585091Z        ...
2025-02-25T14:20:45.8585174Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8585305Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8585414Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8585942Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8585946Z 
2025-02-25T14:20:45.8586071Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8586186Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8586255Z        ...
2025-02-25T14:20:45.8586345Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8586473Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8586583Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8586662Z        ...
2025-02-25T14:20:45.8586744Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8586999Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8587101Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8587667Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8587673Z 
2025-02-25T14:20:45.8587791Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8587908Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8587988Z        ...
2025-02-25T14:20:45.8588070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8588200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8588308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8588391Z        ...
2025-02-25T14:20:45.8588473Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8588603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8588710Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8589265Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8589366Z 
2025-02-25T14:20:45.8589503Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8589609Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8589689Z        ...
2025-02-25T14:20:45.8589769Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8589898Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8590003Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8590082Z        ...
2025-02-25T14:20:45.8590162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8590288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8590391Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8591111Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8591125Z 
2025-02-25T14:20:45.8591263Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8591371Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8591453Z        ...
2025-02-25T14:20:45.8591533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8591660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8591765Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8591849Z        ...
2025-02-25T14:20:45.8591929Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8592058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8592157Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8592694Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8592703Z 
2025-02-25T14:20:45.8592842Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8592950Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8593031Z        ...
2025-02-25T14:20:45.8593115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8593245Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8593355Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8593440Z        ...
2025-02-25T14:20:45.8593520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8593650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8593757Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8594292Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8594438Z 
2025-02-25T14:20:45.8594542Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8594906Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8595241Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8595577Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8596224Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8596238Z 
2025-02-25T14:20:45.8596328Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8596699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8597083Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8597462Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8597987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8597998Z 
2025-02-25T14:20:45.8598119Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8598232Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8598317Z        ...
2025-02-25T14:20:45.8598403Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8598534Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8598643Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8598725Z        ...
2025-02-25T14:20:45.8598811Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8598943Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8599044Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8599706Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8599715Z 
2025-02-25T14:20:45.8599853Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8599964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8600049Z        ...
2025-02-25T14:20:45.8600135Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8600263Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8600370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8600455Z        ...
2025-02-25T14:20:45.8600643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8600777Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8600877Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8601406Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8601545Z 
2025-02-25T14:20:45.8601681Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8601783Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8601869Z        ...
2025-02-25T14:20:45.8601951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8602089Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8602195Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8602278Z        ...
2025-02-25T14:20:45.8602371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8602502Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8602600Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8603159Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8603180Z 
2025-02-25T14:20:45.8603318Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8603424Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8603511Z        ...
2025-02-25T14:20:45.8603603Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8603746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8603861Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8603948Z        ...
2025-02-25T14:20:45.8604038Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8604177Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8604298Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8604855Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8604868Z 
2025-02-25T14:20:45.8605019Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8605131Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8605215Z        ...
2025-02-25T14:20:45.8605301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8605442Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8605559Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8605641Z        ...
2025-02-25T14:20:45.8605735Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8605864Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8605974Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8606516Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8606654Z 
2025-02-25T14:20:45.8606793Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8606911Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8606993Z        ...
2025-02-25T14:20:45.8607076Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8607214Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8607337Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8607412Z        ...
2025-02-25T14:20:45.8607510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8607632Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8607744Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8608282Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8608294Z 
2025-02-25T14:20:45.8608433Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8608637Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8608721Z        ...
2025-02-25T14:20:45.8608822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8608945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8609073Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8609145Z        ...
2025-02-25T14:20:45.8609244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8609370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8609484Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8610030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8610049Z 
2025-02-25T14:20:45.8610160Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8610647Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8610989Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8611335Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8611909Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8611914Z 
2025-02-25T14:20:45.8612010Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8612390Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8612930Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8613310Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8613846Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8613855Z 
2025-02-25T14:20:45.8613987Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8614220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8614299Z        ...
2025-02-25T14:20:45.8614383Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8614515Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8614622Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8614708Z        ...
2025-02-25T14:20:45.8614795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8614927Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8615040Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8615599Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8615612Z 
2025-02-25T14:20:45.8615753Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8615865Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8615949Z        ...
2025-02-25T14:20:45.8616040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8616190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8616318Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8616389Z        ...
2025-02-25T14:20:45.8616478Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8616603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8616714Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8617241Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8617246Z 
2025-02-25T14:20:45.8617387Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8617491Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8617586Z        ...
2025-02-25T14:20:45.8617670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8617804Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8617924Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8618002Z        ...
2025-02-25T14:20:45.8618091Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8618209Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8618317Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8618869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8618875Z 
2025-02-25T14:20:45.8619008Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8619211Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8619294Z        ...
2025-02-25T14:20:45.8619385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8619506Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8619624Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8619698Z        ...
2025-02-25T14:20:45.8619797Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8619922Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8620036Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8620694Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8620715Z 
2025-02-25T14:20:45.8620838Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8620961Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8621031Z        ...
2025-02-25T14:20:45.8621244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8621363Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8621485Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8621562Z        ...
2025-02-25T14:20:45.8621650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8621770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8621872Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8622407Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8622424Z 
2025-02-25T14:20:45.8622545Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8622658Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8622736Z        ...
2025-02-25T14:20:45.8622827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8622958Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8623080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8623154Z        ...
2025-02-25T14:20:45.8623248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8623372Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8623490Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8624071Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8624077Z 
2025-02-25T14:20:45.8624203Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8624316Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8624394Z        ...
2025-02-25T14:20:45.8624488Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8624615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8624734Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8624808Z        ...
2025-02-25T14:20:45.8624908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8625038Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8625135Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8625727Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8625733Z 
2025-02-25T14:20:45.8625826Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8626211Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8626687Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8627021Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8627702Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8627708Z 
2025-02-25T14:20:45.8627815Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8628184Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8628568Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8628964Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8629519Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8629525Z 
2025-02-25T14:20:45.8629667Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8629795Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8629872Z        ...
2025-02-25T14:20:45.8629966Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8630091Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8630214Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8630286Z        ...
2025-02-25T14:20:45.8630390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8630641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8630818Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8631412Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8631432Z 
2025-02-25T14:20:45.8631558Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8631822Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8631901Z        ...
2025-02-25T14:20:45.8631997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8632122Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8632241Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8632317Z        ...
2025-02-25T14:20:45.8632413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8632536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8632653Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8633222Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8633228Z 
2025-02-25T14:20:45.8633355Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8633481Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8633559Z        ...
2025-02-25T14:20:45.8633794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8633918Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8634034Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8634111Z        ...
2025-02-25T14:20:45.8634210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8634337Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8634436Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8635135Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8635140Z 
2025-02-25T14:20:45.8635315Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-25T14:20:45.8635707Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8640263Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.8645009Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-25T14:20:45.8645340Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-25T14:20:45.8645978Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8645984Z 
2025-02-25T14:20:45.8646113Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8646224Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8646302Z        ...
2025-02-25T14:20:45.8646383Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8646515Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8646620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8646692Z        ...
2025-02-25T14:20:45.8646773Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8646901Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8647004Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8647597Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8647603Z 
2025-02-25T14:20:45.8647735Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8647842Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8647922Z        ...
2025-02-25T14:20:45.8648004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8648135Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8648244Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8648330Z        ...
2025-02-25T14:20:45.8648411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8648540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8648798Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8649388Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8649393Z 
2025-02-25T14:20:45.8649525Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8649630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8649711Z        ...
2025-02-25T14:20:45.8649795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8649924Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8650044Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8650119Z        ...
2025-02-25T14:20:45.8650210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8650329Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8650438Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8651110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8651501Z 
2025-02-25T14:20:45.8651637Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8651739Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8651816Z        ...
2025-02-25T14:20:45.8651901Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8652018Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8652130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8652197Z        ...
2025-02-25T14:20:45.8652287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8652405Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8652523Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8653100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8653111Z 
2025-02-25T14:20:45.8653245Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8653359Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8653430Z        ...
2025-02-25T14:20:45.8653523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8653641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8653756Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8653831Z        ...
2025-02-25T14:20:45.8653922Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8654044Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8654160Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8654720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8654745Z 
2025-02-25T14:20:45.8654842Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8655224Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8655556Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8656026Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8656592Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8656597Z 
2025-02-25T14:20:45.8656696Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8657065Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8657533Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8657906Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8658458Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8658464Z 
2025-02-25T14:20:45.8658600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8658712Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8658792Z        ...
2025-02-25T14:20:45.8658875Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8659013Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8659126Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8659205Z        ...
2025-02-25T14:20:45.8659295Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8659417Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8659522Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8660092Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8660098Z 
2025-02-25T14:20:45.8660225Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8660327Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8660402Z        ...
2025-02-25T14:20:45.8660485Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8660718Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8660829Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8660895Z        ...
2025-02-25T14:20:45.8660980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8661223Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8661326Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8661863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8661869Z 
2025-02-25T14:20:45.8661992Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8662094Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8662174Z        ...
2025-02-25T14:20:45.8662275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8662398Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8662519Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8662587Z        ...
2025-02-25T14:20:45.8662684Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8662804Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8662918Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8663737Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8663752Z 
2025-02-25T14:20:45.8663916Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.8664297Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8669120Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8674161Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8674596Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.8675210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8675219Z 
2025-02-25T14:20:45.8675342Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8675459Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8675537Z        ...
2025-02-25T14:20:45.8675622Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8675749Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8675853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8675930Z        ...
2025-02-25T14:20:45.8676012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8676140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8676236Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8676814Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8676824Z 
2025-02-25T14:20:45.8676955Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8677060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8677148Z        ...
2025-02-25T14:20:45.8677231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8677365Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8677473Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8677554Z        ...
2025-02-25T14:20:45.8677641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8677774Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8677877Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8678464Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8678469Z 
2025-02-25T14:20:45.8678712Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8678828Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8678920Z        ...
2025-02-25T14:20:45.8679009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8679149Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8679259Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8679342Z        ...
2025-02-25T14:20:45.8679433Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8679566Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8679688Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8680249Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8680254Z 
2025-02-25T14:20:45.8680394Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8680621Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8680824Z        ...
2025-02-25T14:20:45.8680916Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8681058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8681169Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8681256Z        ...
2025-02-25T14:20:45.8681352Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8681472Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8681587Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8682077Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8682083Z 
2025-02-25T14:20:45.8682222Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8682335Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8682420Z        ...
2025-02-25T14:20:45.8682515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8682647Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8682765Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8682836Z        ...
2025-02-25T14:20:45.8682926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8683047Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8683159Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8683655Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8683660Z 
2025-02-25T14:20:45.8683770Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8684147Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8684515Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8684863Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8685505Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8685510Z 
2025-02-25T14:20:45.8685605Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8685985Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8686351Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8686826Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8687296Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8687304Z 
2025-02-25T14:20:45.8687433Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8687545Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8687628Z        ...
2025-02-25T14:20:45.8687715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8687845Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8687953Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8688034Z        ...
2025-02-25T14:20:45.8688116Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8688246Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8688345Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8688855Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8688860Z 
2025-02-25T14:20:45.8688989Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8689102Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8689184Z        ...
2025-02-25T14:20:45.8689270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8689403Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8689512Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8689590Z        ...
2025-02-25T14:20:45.8689673Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8689807Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8689915Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8690380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8690385Z 
2025-02-25T14:20:45.8690614Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8690724Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8690982Z        ...
2025-02-25T14:20:45.8691066Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8691201Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8691309Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8691387Z        ...
2025-02-25T14:20:45.8691473Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8691600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8691709Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8692315Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8692321Z 
2025-02-25T14:20:45.8692499Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-25T14:20:45.8692862Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8697827Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8702803Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-25T14:20:45.8703118Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-25T14:20:45.8703778Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8703784Z 
2025-02-25T14:20:45.8703910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8704024Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8704094Z        ...
2025-02-25T14:20:45.8704194Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8704321Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8704451Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8704521Z        ...
2025-02-25T14:20:45.8704618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8704755Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8704851Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8705353Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8705358Z 
2025-02-25T14:20:45.8705482Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8705591Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8705659Z        ...
2025-02-25T14:20:45.8705748Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8705866Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8705976Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8706049Z        ...
2025-02-25T14:20:45.8706130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8706253Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8706355Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8706854Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8706859Z 
2025-02-25T14:20:45.8706979Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8707090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8707157Z        ...
2025-02-25T14:20:45.8707246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8707369Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8707474Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8707549Z        ...
2025-02-25T14:20:45.8707631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8707755Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8707947Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8708431Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8708439Z 
2025-02-25T14:20:45.8708562Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8708676Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8708761Z        ...
2025-02-25T14:20:45.8708843Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8708974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8709081Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8709160Z        ...
2025-02-25T14:20:45.8709244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8709377Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8709478Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8709998Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8710086Z 
2025-02-25T14:20:45.8710220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8710332Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8710407Z        ...
2025-02-25T14:20:45.8710491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8710806Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8710920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8710995Z        ...
2025-02-25T14:20:45.8711077Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8711210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8711311Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8711828Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8711851Z 
2025-02-25T14:20:45.8711964Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8712331Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8712669Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8713020Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8713524Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8713529Z 
2025-02-25T14:20:45.8713634Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8713998Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8714508Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8714883Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8715362Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8715470Z 
2025-02-25T14:20:45.8715594Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8715705Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8715775Z        ...
2025-02-25T14:20:45.8715862Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8715983Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8716107Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8716179Z        ...
2025-02-25T14:20:45.8716276Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8716406Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8716512Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8717044Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8717055Z 
2025-02-25T14:20:45.8717179Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8717295Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8717366Z        ...
2025-02-25T14:20:45.8717463Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8717587Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8717715Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8717799Z        ...
2025-02-25T14:20:45.8717884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8718014Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8718113Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8718611Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8718629Z 
2025-02-25T14:20:45.8718749Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8718857Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8718925Z        ...
2025-02-25T14:20:45.8719013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8719138Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8719247Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8719323Z        ...
2025-02-25T14:20:45.8719405Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8719532Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8719628Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8720137Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8720297Z 
2025-02-25T14:20:45.8720425Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8720641Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8720718Z        ...
2025-02-25T14:20:45.8720799Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8720934Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8721048Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8721131Z        ...
2025-02-25T14:20:45.8721213Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8721349Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8721451Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8721975Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8721989Z 
2025-02-25T14:20:45.8722124Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8722357Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8722439Z        ...
2025-02-25T14:20:45.8722523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8722656Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8722764Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8722845Z        ...
2025-02-25T14:20:45.8722932Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8723066Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8723167Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8723675Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8723688Z 
2025-02-25T14:20:45.8723819Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8723922Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8724000Z        ...
2025-02-25T14:20:45.8724082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8724209Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8724320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8724396Z        ...
2025-02-25T14:20:45.8724477Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8724601Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8724710Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8725189Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8725195Z 
2025-02-25T14:20:45.8725321Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8725431Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8725512Z        ...
2025-02-25T14:20:45.8725593Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8725727Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8725831Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8725912Z        ...
2025-02-25T14:20:45.8725993Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8726125Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8726235Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8726727Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8726732Z 
2025-02-25T14:20:45.8726845Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8727218Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8727706Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8728051Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8728632Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8728647Z 
2025-02-25T14:20:45.8728742Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8729126Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8729503Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8729900Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8730382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8730388Z 
2025-02-25T14:20:45.8730607Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8730729Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8730821Z        ...
2025-02-25T14:20:45.8730905Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8731036Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8731149Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8731230Z        ...
2025-02-25T14:20:45.8731315Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8731452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8731556Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8732076Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8732081Z 
2025-02-25T14:20:45.8732213Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8732451Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8732542Z        ...
2025-02-25T14:20:45.8732631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8732761Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8732872Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8732953Z        ...
2025-02-25T14:20:45.8733038Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8733170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8733271Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8733751Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8733756Z 
2025-02-25T14:20:45.8733894Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8734005Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8734097Z        ...
2025-02-25T14:20:45.8734183Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8734439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8734550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8734633Z        ...
2025-02-25T14:20:45.8734719Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8734851Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8734952Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8735469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8735474Z 
2025-02-25T14:20:45.8735607Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8735715Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8735797Z        ...
2025-02-25T14:20:45.8735892Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8736028Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8736143Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8736228Z        ...
2025-02-25T14:20:45.8736316Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8736452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8736567Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8737064Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8737069Z 
2025-02-25T14:20:45.8737206Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8737315Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8737397Z        ...
2025-02-25T14:20:45.8737483Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8737631Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8737754Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8737842Z        ...
2025-02-25T14:20:45.8737938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8738062Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8738177Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8738676Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8738681Z 
2025-02-25T14:20:45.8738814Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8738919Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8739005Z        ...
2025-02-25T14:20:45.8739092Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8739318Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8739443Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8739522Z        ...
2025-02-25T14:20:45.8739621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8739745Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8739853Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8740369Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8740375Z 
2025-02-25T14:20:45.8740607Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8740722Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8740809Z        ...
2025-02-25T14:20:45.8740906Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8741029Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8741156Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8741227Z        ...
2025-02-25T14:20:45.8741467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8741590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8741704Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8742243Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8742249Z 
2025-02-25T14:20:45.8742356Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8742732Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8743063Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8743401Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8743940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8743953Z 
2025-02-25T14:20:45.8744042Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8744425Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8744803Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8745296Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8745821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8745826Z 
2025-02-25T14:20:45.8745963Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8746073Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8746163Z        ...
2025-02-25T14:20:45.8746249Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8746388Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8746507Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8746683Z        ...
2025-02-25T14:20:45.8746774Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8746905Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8747019Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8747564Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8747569Z 
2025-02-25T14:20:45.8747699Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8747806Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8747884Z        ...
2025-02-25T14:20:45.8747968Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8748100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8748217Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8748303Z        ...
2025-02-25T14:20:45.8748404Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8748525Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8748636Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8749141Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8749146Z 
2025-02-25T14:20:45.8749286Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8749393Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8749475Z        ...
2025-02-25T14:20:45.8749559Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8749693Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8749814Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8749891Z        ...
2025-02-25T14:20:45.8749978Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8750100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8750206Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8750919Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8750925Z 
2025-02-25T14:20:45.8751058Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8751162Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8751239Z        ...
2025-02-25T14:20:45.8751330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8751450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8751563Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8751767Z        ...
2025-02-25T14:20:45.8751857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8751975Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8752087Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8752646Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8752653Z 
2025-02-25T14:20:45.8752788Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8759627Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8759745Z        ...
2025-02-25T14:20:45.8759861Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8760013Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8760143Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8760217Z        ...
2025-02-25T14:20:45.8760330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8760459Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8760937Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8761495Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8761510Z 
2025-02-25T14:20:45.8761647Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8761779Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8761862Z        ...
2025-02-25T14:20:45.8761965Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8762095Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8762221Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8762296Z        ...
2025-02-25T14:20:45.8762395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8762528Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8762646Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8763261Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8763267Z 
2025-02-25T14:20:45.8763399Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8763530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8763606Z        ...
2025-02-25T14:20:45.8763701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8763822Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8763947Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8764021Z        ...
2025-02-25T14:20:45.8764120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8764259Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8764363Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8764976Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8764982Z 
2025-02-25T14:20:45.8765077Z Series values are different (4.04858 %)
2025-02-25T14:20:45.8765461Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8765800Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8766265Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-25T14:20:45.8766876Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-25T14:20:45.8766881Z 
2025-02-25T14:20:45.8766982Z Series values are different (6.47773 %)
2025-02-25T14:20:45.8767350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8767843Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8768239Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-25T14:20:45.8768818Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8768824Z 
2025-02-25T14:20:45.8768961Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8769084Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8769157Z        ...
2025-02-25T14:20:45.8769251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8769378Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8769499Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8769571Z        ...
2025-02-25T14:20:45.8769674Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8769795Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8769915Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8770622Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8770643Z 
2025-02-25T14:20:45.8770772Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8770894Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8770964Z        ...
2025-02-25T14:20:45.8771056Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8771180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8771303Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8771400Z        ...
2025-02-25T14:20:45.8771497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8771751Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8771872Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8772457Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8772462Z 
2025-02-25T14:20:45.8772584Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8772696Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8772764Z        ...
2025-02-25T14:20:45.8772851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8772971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8773088Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8773157Z        ...
2025-02-25T14:20:45.8773252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8773379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8773489Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8774245Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8774251Z 
2025-02-25T14:20:45.8774377Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8774498Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8774574Z        ...
2025-02-25T14:20:45.8774672Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8774797Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8774920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8775000Z        ...
2025-02-25T14:20:45.8775084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8775224Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8775330Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8775945Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8775951Z 
2025-02-25T14:20:45.8776073Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8776198Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8776274Z        ...
2025-02-25T14:20:45.8776371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8776504Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8776613Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8776696Z        ...
2025-02-25T14:20:45.8776781Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8776911Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8777023Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8777620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-25T14:20:45.8777626Z 
2025-02-25T14:20:45.8777750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-25T14:20:45.8777874Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8777952Z        ...
2025-02-25T14:20:45.8778035Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8778169Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8778278Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-25T14:20:45.8778365Z        ...
2025-02-25T14:20:45.8778450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-25T14:20:45.8778582Z       dtype='int64', name='level_number_lower', length=247)
2025-02-25T14:20:45.8778780Z At positional index 75, first diff: 6 != 7
2025-02-25T14:20:45.8779101Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-25T14:20:45.8779208Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8779222Z 
2025-02-25T14:20:45.8779322Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-25T14:20:45.8779427Z Max absolute difference: 1.
2025-02-25T14:20:45.8779520Z Max relative difference: 1.
2025-02-25T14:20:45.8779660Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8779766Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8779883Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.8780002Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8780110Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-25T14:20:45.8780217Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-25T14:20:45.8780716Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-25T14:20:45.8780832Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8780837Z 
2025-02-25T14:20:45.8780935Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-25T14:20:45.8781042Z Max absolute difference: 4005
2025-02-25T14:20:45.8781139Z Max relative difference: 26.00649351
2025-02-25T14:20:45.8781259Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.8781370Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-25T14:20:45.8781666Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-25T14:20:45.8781771Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8781775Z 
2025-02-25T14:20:45.8781876Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-25T14:20:45.8781987Z Max absolute difference: 4046
2025-02-25T14:20:45.8782085Z Max relative difference: 24.82208589
2025-02-25T14:20:45.8782203Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.8782301Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-25T14:20:45.8782576Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-25T14:20:45.8782678Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8782683Z 
2025-02-25T14:20:45.8782792Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-25T14:20:45.8782891Z Max absolute difference: 0.99984222
2025-02-25T14:20:45.8783001Z Max relative difference: 6337.12154973
2025-02-25T14:20:45.8783087Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783180Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783271Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8783358Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783449Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-25T14:20:45.8783532Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-25T14:20:45.8783791Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-25T14:20:45.8783893Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8783898Z 
2025-02-25T14:20:45.8784005Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-25T14:20:45.8784101Z Max absolute difference: 4.25260542e+12
2025-02-25T14:20:45.8784212Z Max relative difference: 18196.0085861
2025-02-25T14:20:45.8784371Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.8784454Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.8784606Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.8784752Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-25T14:20:45.8784845Z         4.043917e+10, 6.677200e-07],
2025-02-25T14:20:45.8784975Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-25T14:20:45.8785367Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-25T14:20:45.8785477Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8785482Z 
2025-02-25T14:20:45.8785587Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-25T14:20:45.8785699Z Max absolute difference: 2.92713618
2025-02-25T14:20:45.8785796Z Max relative difference: 18196.0085861
2025-02-25T14:20:45.8785949Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.8786031Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.8786185Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-25T14:20:45.8786266Z        1.126883e+00, 4.414472e-04])
2025-02-25T14:20:45.8786535Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-25T14:20:45.8786633Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8786644Z 
2025-02-25T14:20:45.8786754Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-25T14:20:45.8786851Z Max absolute difference: 282815.33818472
2025-02-25T14:20:45.8787106Z Max relative difference: 4.12352828e+47
2025-02-25T14:20:45.8787262Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.8787343Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.8787480Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.8787618Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-25T14:20:45.8787703Z         0.000000e+00, 0.000000e+00],
2025-02-25T14:20:45.8787831Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-25T14:20:45.8788334Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8788340Z 
2025-02-25T14:20:45.8788509Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8788604Z [index]: [0, 1]
2025-02-25T14:20:45.8788731Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-25T14:20:45.8788834Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-25T14:20:45.8789019Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.8789507Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8789513Z 
2025-02-25T14:20:45.8789683Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8789764Z [index]: [0, 1]
2025-02-25T14:20:45.8789874Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-25T14:20:45.8789987Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-25T14:20:45.8790152Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.8790905Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-25T14:20:45.8790919Z 
2025-02-25T14:20:45.8791080Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-25T14:20:45.8791164Z [index]: [0, 1]
2025-02-25T14:20:45.8791264Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-25T14:20:45.8791371Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-25T14:20:45.8791542Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-25T14:20:45.8791930Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-25T14:20:45.8791936Z 
2025-02-25T14:20:45.8792042Z Series values are different (100.0 %)
2025-02-25T14:20:45.8792172Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8793537Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-25T14:20:45.8794722Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-25T14:20:45.8794921Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-25T14:20:45.8795298Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-25T14:20:45.8795413Z 
2025-02-25T14:20:45.8795514Z Series values are different (100.0 %)
2025-02-25T14:20:45.8795644Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8796614Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-25T14:20:45.8797566Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-25T14:20:45.8797751Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-25T14:20:45.8798104Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-25T14:20:45.8798116Z 
2025-02-25T14:20:45.8798208Z Series values are different (90.0 %)
2025-02-25T14:20:45.8798335Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8799311Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-25T14:20:45.8800305Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-25T14:20:45.8800482Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-25T14:20:45.8800966Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-25T14:20:45.8800971Z 
2025-02-25T14:20:45.8801071Z Series values are different (95.0 %)
2025-02-25T14:20:45.8801187Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-25T14:20:45.8802425Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-25T14:20:45.8803508Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-25T14:20:45.8803683Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-25T14:20:45.8804058Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-25T14:20:45.8804173Z 
2025-02-25T14:20:45.8804285Z Series values are different (5.1125 %)
2025-02-25T14:20:45.8804650Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8809727Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-25T14:20:45.8814942Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-25T14:20:45.8815383Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-25T14:20:45.8815775Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-25T14:20:45.8815780Z 
2025-02-25T14:20:45.8815889Z Series values are different (1.3025 %)
2025-02-25T14:20:45.8816278Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-25T14:20:45.8822544Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.8828877Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-25T14:20:45.8829221Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-25T14:20:45.8829592Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-25T14:20:45.8829701Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8829706Z 
2025-02-25T14:20:45.8829802Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.8829907Z Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.8829994Z Max relative difference: 1.
2025-02-25T14:20:45.8830157Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8830246Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8830387Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8830474Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8831041Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-25T14:20:45.8831286Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8831291Z 
2025-02-25T14:20:45.8831384Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-25T14:20:45.8831483Z Max absolute difference: 4.15247374e+37
2025-02-25T14:20:45.8831569Z Max relative difference: 1.
2025-02-25T14:20:45.8831718Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8831799Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8831952Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8832037Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8832335Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-25T14:20:45.8832445Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8832450Z 
2025-02-25T14:20:45.8832540Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-25T14:20:45.8832649Z Max absolute difference: 4.30543741e+37
2025-02-25T14:20:45.8832733Z Max relative difference: 1.
2025-02-25T14:20:45.8832994Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8833074Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8833223Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8833303Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8833606Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-25T14:20:45.8833715Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8833719Z 
2025-02-25T14:20:45.8833822Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-25T14:20:45.8833929Z Max absolute difference: 5.32418652e-19
2025-02-25T14:20:45.8834021Z Max relative difference: 12.23359055
2025-02-25T14:20:45.8834115Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834204Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834293Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8834383Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834473Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8834552Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8834818Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-25T14:20:45.8834930Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8834934Z 
2025-02-25T14:20:45.8835025Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-25T14:20:45.8835123Z Max absolute difference: 1.38672909e+39
2025-02-25T14:20:45.8835212Z Max relative difference: 5.25284451
2025-02-25T14:20:45.8835363Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8835441Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8835594Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8835681Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8835988Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-25T14:20:45.8836109Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8836113Z 
2025-02-25T14:20:45.8836209Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-25T14:20:45.8836315Z Max absolute difference: 5.26760031e+38
2025-02-25T14:20:45.8836408Z Max relative difference: 35562.41947434
2025-02-25T14:20:45.8836555Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8836636Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8836782Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8836862Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8837321Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8837548Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8837552Z 
2025-02-25T14:20:45.8837655Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.8837763Z Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.8837851Z Max relative difference: 7.72237896
2025-02-25T14:20:45.8837945Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838026Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838120Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8838202Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838291Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8838369Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8838804Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8838916Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8838920Z 
2025-02-25T14:20:45.8839013Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.8839124Z Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.8839215Z Max relative difference: 4.0036592
2025-02-25T14:20:45.8839460Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8839538Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8839686Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8839764Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8840231Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-25T14:20:45.8840342Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8840347Z 
2025-02-25T14:20:45.8840438Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8840643Z Max absolute difference: 5.00661745e+37
2025-02-25T14:20:45.8840735Z Max relative difference: 17.51202125
2025-02-25T14:20:45.8840883Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-25T14:20:45.8840973Z        2.279436e+31, 2.243943e+31])
2025-02-25T14:20:45.8841123Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-25T14:20:45.8841199Z        2.292907e+31, 2.257206e+31])
2025-02-25T14:20:45.8841645Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8841752Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8841756Z 
2025-02-25T14:20:45.8841858Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.8841965Z Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.8842054Z Max relative difference: 3.25828651
2025-02-25T14:20:45.8842147Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842225Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842319Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8842405Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842505Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8842582Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8843011Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8843121Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8843125Z 
2025-02-25T14:20:45.8843216Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.8843317Z Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.8843404Z Max relative difference: 1.86186015
2025-02-25T14:20:45.8843550Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8843628Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8843788Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8843866Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8844314Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-25T14:20:45.8844549Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8844554Z 
2025-02-25T14:20:45.8844642Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8844739Z Max absolute difference: 2.90101642e+37
2025-02-25T14:20:45.8844824Z Max relative difference: 0.98973757
2025-02-25T14:20:45.8844965Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-25T14:20:45.8845040Z        1.330497e+31, 1.294462e+31])
2025-02-25T14:20:45.8845181Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-25T14:20:45.8845255Z        1.375141e+31, 1.337928e+31])
2025-02-25T14:20:45.8845694Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8845794Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8845805Z 
2025-02-25T14:20:45.8845900Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-25T14:20:45.8845996Z Max absolute difference: 4.67863561e-19
2025-02-25T14:20:45.8846199Z Max relative difference: 3.25828651
2025-02-25T14:20:45.8846285Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846362Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846444Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8846524Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846606Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8846687Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8847098Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8847201Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8847205Z 
2025-02-25T14:20:45.8847292Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-25T14:20:45.8847389Z Max absolute difference: 8.5486318e+38
2025-02-25T14:20:45.8847480Z Max relative difference: 1.86186015
2025-02-25T14:20:45.8847622Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8847707Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8847848Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8847927Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8848371Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-25T14:20:45.8848475Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8848479Z 
2025-02-25T14:20:45.8848571Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8848666Z Max absolute difference: 2.99183385e+37
2025-02-25T14:20:45.8848754Z Max relative difference: 0.98992197
2025-02-25T14:20:45.8848895Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-25T14:20:45.8848977Z        1.260980e+31, 1.222587e+31])
2025-02-25T14:20:45.8849122Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-25T14:20:45.8849202Z        1.193005e+31, 1.164854e+31])
2025-02-25T14:20:45.8849640Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8849744Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8849748Z 
2025-02-25T14:20:45.8849845Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-25T14:20:45.8849942Z Max absolute difference: 7.03072887e-19
2025-02-25T14:20:45.8850028Z Max relative difference: 7.72237896
2025-02-25T14:20:45.8850113Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850189Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850270Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8850349Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850432Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-25T14:20:45.8850720Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-25T14:20:45.8851144Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8851255Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8851259Z 
2025-02-25T14:20:45.8851348Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-25T14:20:45.8851443Z Max absolute difference: 2.09719426e+39
2025-02-25T14:20:45.8851533Z Max relative difference: 4.0036592
2025-02-25T14:20:45.8851678Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8851754Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8851897Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-25T14:20:45.8851976Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8852422Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-25T14:20:45.8852529Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8852682Z 
2025-02-25T14:20:45.8852776Z Mismatched elements: 10000 / 10000 (100%)
2025-02-25T14:20:45.8852873Z Max absolute difference: 5.0153284e+37
2025-02-25T14:20:45.8852959Z Max relative difference: 4.90769503
2025-02-25T14:20:45.8853102Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-25T14:20:45.8853178Z        2.088676e+31, 2.060278e+31])
2025-02-25T14:20:45.8853318Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-25T14:20:45.8853392Z        2.124305e+31, 2.101081e+31])
2025-02-25T14:20:45.8853742Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-25T14:20:45.8853847Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-25T14:20:45.8853852Z 
2025-02-25T14:20:45.8853936Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.8854042Z Max absolute difference: 2.25821059e+25
2025-02-25T14:20:45.8854127Z Max relative difference: 0.00054426
2025-02-25T14:20:45.8854270Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-25T14:20:45.8854388Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-25T14:20:45.8854517Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-25T14:20:45.8854643Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-25T14:20:45.8854760Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-25T14:20:45.8854879Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-25T14:20:45.8855262Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-25T14:20:45.8855378Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-25T14:20:45.8855382Z 
2025-02-25T14:20:45.8855467Z Mismatched elements: 20 / 20 (100%)
2025-02-25T14:20:45.8855568Z Max absolute difference: 1.93283629e+25
2025-02-25T14:20:45.8855655Z Max relative difference: 0.00029148
2025-02-25T14:20:45.8855798Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-25T14:20:45.8855906Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-25T14:20:45.8856030Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-25T14:20:45.8856163Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-25T14:20:45.8856270Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-25T14:20:45.8856390Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-25T14:20:45.8856719Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-25T14:20:45.8856806Z Arrays are not equal
2025-02-25T14:20:45.8856811Z 
2025-02-25T14:20:45.8856896Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-25T14:20:45.8857032Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.8857241Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.8857356Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.8857481Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-25T14:20:45.8857563Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-25T14:20:45.8857662Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-25T14:20:45.8858082Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-25T14:20:45.8858185Z Not equal to tolerance rtol=0.01, atol=0
2025-02-25T14:20:45.8858190Z 
2025-02-25T14:20:45.8858282Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-25T14:20:45.8858383Z Max absolute difference: 2.00640487e-05
2025-02-25T14:20:45.8858468Z Max relative difference: 2.06329455
2025-02-25T14:20:45.8858628Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.8858721Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.8858974Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-25T14:20:45.8859060Z        -9.757136e-06,  1.019764e-05])
2025-02-25T14:20:45.8859525Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-25T14:20:45.8859627Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8859631Z 
2025-02-25T14:20:45.8859715Z (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.8859850Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8859960Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8860082Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8860212Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8860329Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8860449Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8861014Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-25T14:20:45.8861118Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8861122Z 
2025-02-25T14:20:45.8861202Z (shapes (558,), (560,) mismatch)
2025-02-25T14:20:45.8861333Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8861448Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8861561Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8861690Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8861797Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8861915Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8862367Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-25T14:20:45.8862476Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8862480Z 
2025-02-25T14:20:45.8862558Z (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.8862689Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8862803Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8862917Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8863043Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8863149Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8863268Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8863715Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-25T14:20:45.8863955Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8863960Z 
2025-02-25T14:20:45.8864044Z (shapes (159,), (153,) mismatch)
2025-02-25T14:20:45.8864173Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8864285Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8864396Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8864523Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8864627Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8864746Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8865192Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-25T14:20:45.8865302Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8865306Z 
2025-02-25T14:20:45.8865528Z (shapes (508,), (515,) mismatch)
2025-02-25T14:20:45.8865655Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-25T14:20:45.8865765Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-25T14:20:45.8865878Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-25T14:20:45.8866005Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-25T14:20:45.8866111Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-25T14:20:45.8866230Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-25T14:20:45.8866681Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-25T14:20:45.8866786Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8866794Z 
2025-02-25T14:20:45.8866881Z (shapes (1466,), (1481,) mismatch)
2025-02-25T14:20:45.8867023Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-25T14:20:45.8867113Z        11152.962595, 11172.044815])
2025-02-25T14:20:45.8867252Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-25T14:20:45.8867333Z        11398.237865, 11111.204868])
2025-02-25T14:20:45.8867783Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-25T14:20:45.8867888Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8867892Z 
2025-02-25T14:20:45.8867978Z (shapes (147,), (136,) mismatch)
2025-02-25T14:20:45.8868105Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-25T14:20:45.8868219Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-25T14:20:45.8868333Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-25T14:20:45.8868473Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-25T14:20:45.8868583Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-25T14:20:45.8868712Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-25T14:20:45.8869156Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-25T14:20:45.8869260Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8869264Z 
2025-02-25T14:20:45.8869353Z (shapes (379,), (381,) mismatch)
2025-02-25T14:20:45.8869478Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-25T14:20:45.8869591Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-25T14:20:45.8869708Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-25T14:20:45.8869838Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-25T14:20:45.8870048Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-25T14:20:45.8870168Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-25T14:20:45.8870768Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-25T14:20:45.8870876Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8870880Z 
2025-02-25T14:20:45.8870974Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8871071Z Max absolute difference: 22.
2025-02-25T14:20:45.8871168Z Max relative difference: 0.8
2025-02-25T14:20:45.8871248Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8871331Z        [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8871408Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8871494Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8871569Z        [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8871650Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8872064Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-25T14:20:45.8872309Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8872314Z 
2025-02-25T14:20:45.8872408Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8872493Z Max absolute difference: 22.
2025-02-25T14:20:45.8872582Z Max relative difference: 0.8
2025-02-25T14:20:45.8872661Z  x: array([[1.10e+04, 1.67e+02],
2025-02-25T14:20:45.8872742Z        [1.19e+04, 1.67e+02],
2025-02-25T14:20:45.8872818Z        [1.19e+04, 7.60e+01],...
2025-02-25T14:20:45.8872904Z  y: array([[1.10e+04, 1.89e+02],
2025-02-25T14:20:45.8872979Z        [1.19e+04, 1.89e+02],
2025-02-25T14:20:45.8873059Z        [1.19e+04, 8.20e+01],...
2025-02-25T14:20:45.8873477Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-25T14:20:45.8873579Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8873590Z 
2025-02-25T14:20:45.8873681Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8873767Z Max absolute difference: 34
2025-02-25T14:20:45.8873869Z Max relative difference: 0.71428571
2025-02-25T14:20:45.8874012Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8874103Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8874233Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8874318Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8874730Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-25T14:20:45.8874832Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8874837Z 
2025-02-25T14:20:45.8874925Z Mismatched elements: 4 / 40 (10%)
2025-02-25T14:20:45.8875011Z Max absolute difference: 34.
2025-02-25T14:20:45.8875107Z Max relative difference: 0.65
2025-02-25T14:20:45.8875191Z  x: array([[1.10e+04, 2.72e+02],
2025-02-25T14:20:45.8875273Z        [1.19e+04, 2.72e+02],
2025-02-25T14:20:45.8875356Z        [1.19e+04, 1.10e+02],...
2025-02-25T14:20:45.8875440Z  y: array([[1.10e+04, 3.06e+02],
2025-02-25T14:20:45.8875515Z        [1.19e+04, 3.06e+02],
2025-02-25T14:20:45.8875595Z        [1.19e+04, 1.18e+02],...
2025-02-25T14:20:45.8876003Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:20:45.8876104Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8876108Z 
2025-02-25T14:20:45.8876201Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8876286Z Max absolute difference: 22
2025-02-25T14:20:45.8876375Z Max relative difference: 0.8
2025-02-25T14:20:45.8876502Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8876591Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8876716Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8876927Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8877343Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:20:45.8877440Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8877444Z 
2025-02-25T14:20:45.8877533Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8877617Z Max absolute difference: 22
2025-02-25T14:20:45.8877711Z Max relative difference: 0.8
2025-02-25T14:20:45.8877834Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-25T14:20:45.8877923Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8878044Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-25T14:20:45.8878128Z          0,   0,   0,   0,   0,   0,   0])
2025-02-25T14:20:45.8878540Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:20:45.8878644Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8878736Z 
2025-02-25T14:20:45.8878839Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8878925Z Max absolute difference: 34
2025-02-25T14:20:45.8879020Z Max relative difference: 0.71428571
2025-02-25T14:20:45.8879150Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8879233Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8879359Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8879442Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8879852Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:20:45.8879948Z Not equal to tolerance rtol=0.3, atol=3
2025-02-25T14:20:45.8879952Z 
2025-02-25T14:20:45.8880053Z Mismatched elements: 4 / 20 (20%)
2025-02-25T14:20:45.8880138Z Max absolute difference: 34
2025-02-25T14:20:45.8880228Z Max relative difference: 0.65
2025-02-25T14:20:45.8880363Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-25T14:20:45.8880448Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8880684Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-25T14:20:45.8880767Z          2,   5,   5,   5,   5,   0,   0])
2025-02-25T14:20:45.8881235Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-25T14:20:45.8881339Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8881343Z 
2025-02-25T14:20:45.8881437Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8881529Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8881622Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8881771Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8881853Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8881998Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8882079Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8882545Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-25T14:20:45.8882649Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8882653Z 
2025-02-25T14:20:45.8882747Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8882841Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8882934Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8883070Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8883152Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8883289Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8883496Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8883959Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-25T14:20:45.8884064Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8884069Z 
2025-02-25T14:20:45.8884155Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8884252Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8884345Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8884479Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8884560Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8884697Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8884777Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8885236Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-25T14:20:45.8885344Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8885481Z 
2025-02-25T14:20:45.8885573Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8885667Z Max absolute difference: 4.3299331e-05
2025-02-25T14:20:45.8885763Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8885900Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8885982Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8886118Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8886198Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8886657Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-25T14:20:45.8886758Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8886762Z 
2025-02-25T14:20:45.8886858Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8886953Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8887055Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8887191Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8887272Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8887407Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8887486Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8887944Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-25T14:20:45.8888049Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8888053Z 
2025-02-25T14:20:45.8888141Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8888237Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8888332Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8888476Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8888554Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8888697Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8888779Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8889241Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-25T14:20:45.8889346Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8889350Z 
2025-02-25T14:20:45.8889436Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8889533Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8889635Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8889772Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8889852Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8889987Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8890162Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8890734Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-25T14:20:45.8890841Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8890845Z 
2025-02-25T14:20:45.8890932Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8891031Z Max absolute difference: 3.16368526e-05
2025-02-25T14:20:45.8891130Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8891266Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8891349Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8891485Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-25T14:20:45.8891567Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8892031Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-25T14:20:45.8892265Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8892270Z 
2025-02-25T14:20:45.8892358Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8892455Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8892549Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8892686Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8892766Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8892904Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8892988Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8893449Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-25T14:20:45.8893553Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8893566Z 
2025-02-25T14:20:45.8893653Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8893754Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8893857Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8893994Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8894081Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8894214Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8894295Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8894759Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-25T14:20:45.8894862Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8894866Z 
2025-02-25T14:20:45.8894951Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8895049Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8895144Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8895286Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8895374Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8895507Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8895591Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8896052Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-25T14:20:45.8896151Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8896154Z 
2025-02-25T14:20:45.8896242Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-25T14:20:45.8896342Z Max absolute difference: 5.1807441e+47
2025-02-25T14:20:45.8896437Z Max relative difference: 4.76021355
2025-02-25T14:20:45.8896574Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8896657Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8896918Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8897003Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8897472Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-25T14:20:45.8897576Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8897580Z 
2025-02-25T14:20:45.8897668Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8897761Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8897857Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8897996Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8898076Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8898211Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8898298Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8898761Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-25T14:20:45.8898960Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8898965Z 
2025-02-25T14:20:45.8899052Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8899146Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8899243Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8899384Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8899474Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8899611Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8899699Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8900169Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-25T14:20:45.8900274Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8900285Z 
2025-02-25T14:20:45.8900379Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8900489Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8900675Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8900827Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8900915Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8901056Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8901142Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8901609Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-25T14:20:45.8901716Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8901720Z 
2025-02-25T14:20:45.8901808Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-25T14:20:45.8901912Z Max absolute difference: 3.78533417e+47
2025-02-25T14:20:45.8902013Z Max relative difference: 178.93768705
2025-02-25T14:20:45.8902160Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8902254Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8902390Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-25T14:20:45.8902483Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8902911Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-25T14:20:45.8903012Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8903016Z 
2025-02-25T14:20:45.8903100Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8903196Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8903281Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8903429Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8903512Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8903785Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8903869Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8904306Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-25T14:20:45.8904415Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8904420Z 
2025-02-25T14:20:45.8904509Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8904605Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8904689Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8904832Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8904914Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8905054Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8905137Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8905561Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-25T14:20:45.8905788Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8905792Z 
2025-02-25T14:20:45.8905880Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8905985Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8906074Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8906227Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8906311Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8906446Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8906528Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8906953Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-25T14:20:45.8907063Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8907073Z 
2025-02-25T14:20:45.8907160Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8907262Z Max absolute difference: 2.08771842e-13
2025-02-25T14:20:45.8907353Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8907497Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8907579Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8907713Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8907798Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8908219Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-25T14:20:45.8908328Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8908332Z 
2025-02-25T14:20:45.8908420Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8908519Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8908612Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8908758Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8908843Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8908982Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8909063Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8909482Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-25T14:20:45.8909592Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8909596Z 
2025-02-25T14:20:45.8909684Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8909788Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8909881Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8910029Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8910120Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8910258Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8910469Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8911069Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-25T14:20:45.8911185Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8911189Z 
2025-02-25T14:20:45.8911282Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8911389Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8911479Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8911628Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8911711Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8911859Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8911948Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8912374Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-25T14:20:45.8912485Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8912615Z 
2025-02-25T14:20:45.8912705Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8912806Z Max absolute difference: 3.02728422e-13
2025-02-25T14:20:45.8912894Z Max relative difference: 15766.1580412
2025-02-25T14:20:45.8913038Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8913113Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8913256Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-25T14:20:45.8913337Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8913752Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-25T14:20:45.8913855Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8913859Z 
2025-02-25T14:20:45.8913952Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8914048Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8914142Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8914290Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8914365Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8914508Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8914590Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8915016Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-25T14:20:45.8915120Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8915123Z 
2025-02-25T14:20:45.8915211Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8915306Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8915393Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8915539Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8915620Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8915763Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8915849Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8916273Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-25T14:20:45.8916375Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8916379Z 
2025-02-25T14:20:45.8916467Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8916561Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8916647Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8916792Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8916869Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8917009Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8917220Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8917646Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-25T14:20:45.8917754Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8917759Z 
2025-02-25T14:20:45.8917845Z Mismatched elements: 446 / 1938 (23%)
2025-02-25T14:20:45.8917939Z Max absolute difference: 2.49794504e+39
2025-02-25T14:20:45.8918025Z Max relative difference: 3.01858991
2025-02-25T14:20:45.8918168Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8918243Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8918381Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8918463Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8918885Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-25T14:20:45.8918993Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8919079Z 
2025-02-25T14:20:45.8919169Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8919266Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8919356Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8919501Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8919576Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8919720Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8919803Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8920225Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-25T14:20:45.8920326Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8920329Z 
2025-02-25T14:20:45.8920415Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8920623Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8920714Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8920863Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8920939Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8921076Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8921161Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8921579Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-25T14:20:45.8921680Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8921684Z 
2025-02-25T14:20:45.8921770Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8921865Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8921954Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8922094Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8922175Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8922317Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8922398Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8922824Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-25T14:20:45.8922923Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-25T14:20:45.8922927Z 
2025-02-25T14:20:45.8923014Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-25T14:20:45.8923109Z Max absolute difference: 3.62213099e+39
2025-02-25T14:20:45.8923196Z Max relative difference: 15766.15804934
2025-02-25T14:20:45.8923336Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8923413Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8923555Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-25T14:20:45.8923760Z        0.000000e+00, 0.000000e+00])
2025-02-25T14:20:45.8924034Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 795.39s (0:13:15) =
2025-02-25T14:20:45.8924465Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8924472Z 
2025-02-25T14:20:45.8925151Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-25T14:20:45.8925156Z 
2025-02-25T14:20:45.8925474Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8925485Z 
2025-02-25T14:20:45.8926180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-25T14:20:45.8926190Z 
2025-02-25T14:20:45.8926510Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8926629Z 
2025-02-25T14:20:45.8927327Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-25T14:20:45.8927333Z 
2025-02-25T14:20:45.8927644Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8927648Z 
2025-02-25T14:20:45.8928340Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-25T14:20:45.8928345Z 
2025-02-25T14:20:45.8928665Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8928681Z 
2025-02-25T14:20:45.8929332Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-25T14:20:45.8929343Z 
2025-02-25T14:20:45.8929654Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8929659Z 
2025-02-25T14:20:45.8930350Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-25T14:20:45.8930354Z 
2025-02-25T14:20:45.8930765Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8930770Z 
2025-02-25T14:20:45.8931418Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-25T14:20:45.8931437Z 
2025-02-25T14:20:45.8931741Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8931746Z 
2025-02-25T14:20:45.8932388Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-25T14:20:45.8932393Z 
2025-02-25T14:20:45.8932695Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8932700Z 
2025-02-25T14:20:45.8933393Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-25T14:20:45.8933540Z 
2025-02-25T14:20:45.8933856Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8933865Z 
2025-02-25T14:20:45.8934546Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-25T14:20:45.8934552Z 
2025-02-25T14:20:45.8934862Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8934866Z 
2025-02-25T14:20:45.8935519Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-25T14:20:45.8935524Z 
2025-02-25T14:20:45.8935835Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8935844Z 
2025-02-25T14:20:45.8936535Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-25T14:20:45.8936648Z 
2025-02-25T14:20:45.8936966Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8936970Z 
2025-02-25T14:20:45.8937654Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-25T14:20:45.8937659Z 
2025-02-25T14:20:45.8937970Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8937974Z 
2025-02-25T14:20:45.8938614Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-25T14:20:45.8938633Z 
2025-02-25T14:20:45.8938937Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8938943Z 
2025-02-25T14:20:45.8939630Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-25T14:20:45.8939635Z 
2025-02-25T14:20:45.8939942Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8939946Z 
2025-02-25T14:20:45.8940740Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-25T14:20:45.8940751Z 
2025-02-25T14:20:45.8941069Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8941078Z 
2025-02-25T14:20:45.8941766Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-25T14:20:45.8941770Z 
2025-02-25T14:20:45.8942087Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8942091Z 
2025-02-25T14:20:45.8942750Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-25T14:20:45.8942755Z 
2025-02-25T14:20:45.8943061Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8943206Z 
2025-02-25T14:20:45.8943908Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-25T14:20:45.8943918Z 
2025-02-25T14:20:45.8944231Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8944235Z 
2025-02-25T14:20:45.8944920Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-25T14:20:45.8944924Z 
2025-02-25T14:20:45.8945234Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8945239Z 
2025-02-25T14:20:45.8945887Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-25T14:20:45.8946013Z 
2025-02-25T14:20:45.8946323Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8946327Z 
2025-02-25T14:20:45.8946982Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-25T14:20:45.8946987Z 
2025-02-25T14:20:45.8947295Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8947299Z 
2025-02-25T14:20:45.8947952Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-25T14:20:45.8947962Z 
2025-02-25T14:20:45.8948277Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8948288Z 
2025-02-25T14:20:45.8948928Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-25T14:20:45.8948933Z 
2025-02-25T14:20:45.8949246Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8949250Z 
2025-02-25T14:20:45.8949910Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-25T14:20:45.8949915Z 
2025-02-25T14:20:45.8950220Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8950228Z 
2025-02-25T14:20:45.8951068Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-25T14:20:45.8951083Z 
2025-02-25T14:20:45.8951392Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8951402Z 
2025-02-25T14:20:45.8952045Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-25T14:20:45.8952050Z 
2025-02-25T14:20:45.8952364Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8952368Z 
2025-02-25T14:20:45.8953043Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-25T14:20:45.8953183Z 
2025-02-25T14:20:45.8953497Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8953502Z 
2025-02-25T14:20:45.8954200Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-25T14:20:45.8954205Z 
2025-02-25T14:20:45.8954514Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8954519Z 
2025-02-25T14:20:45.8955177Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-25T14:20:45.8955182Z 
2025-02-25T14:20:45.8955494Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8955503Z 
2025-02-25T14:20:45.8956263Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-25T14:20:45.8956269Z 
2025-02-25T14:20:45.8956584Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8956589Z 
2025-02-25T14:20:45.8957242Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-25T14:20:45.8957247Z 
2025-02-25T14:20:45.8957555Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8957559Z 
2025-02-25T14:20:45.8958233Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-25T14:20:45.8958248Z 
2025-02-25T14:20:45.8958556Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8958568Z 
2025-02-25T14:20:45.8959208Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-25T14:20:45.8959213Z 
2025-02-25T14:20:45.8959528Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8959533Z 
2025-02-25T14:20:45.8960174Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-25T14:20:45.8960184Z 
2025-02-25T14:20:45.8960497Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8960610Z 
2025-02-25T14:20:45.8961304Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-25T14:20:45.8961309Z 
2025-02-25T14:20:45.8961614Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8961618Z 
2025-02-25T14:20:45.8962271Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-25T14:20:45.8962276Z 
2025-02-25T14:20:45.8962588Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8962715Z 
2025-02-25T14:20:45.8963361Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-25T14:20:45.8963370Z 
2025-02-25T14:20:45.8963680Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8963684Z 
2025-02-25T14:20:45.8964375Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-25T14:20:45.8964386Z 
2025-02-25T14:20:45.8964692Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8964695Z 
2025-02-25T14:20:45.8965344Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-25T14:20:45.8965458Z 
2025-02-25T14:20:45.8965766Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-25T14:20:45.8965776Z 
2025-02-25T14:20:45.8966416Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-25T14:20:45.8966421Z 
2025-02-25T14:20:48.9416607Z ##[error]Process completed with exit code 1.
